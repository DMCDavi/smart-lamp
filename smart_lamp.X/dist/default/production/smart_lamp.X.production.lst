

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Thu Jun 09 19:54:28 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           	psect	smallconst
    38  000800                     __psmallconst:
    39                           	opt stack 0
    40  000800                     _dpowers:
    41                           	opt stack 0
    42  000800  0001               	dw	1
    43  000802  000A               	dw	10
    44  000804  0064               	dw	100
    45  000806  03E8               	dw	1000
    46  000808  2710               	dw	10000
    47  00080A                     __end_of_dpowers:
    48                           	opt stack 0
    49  0000                     _TMR1	set	4046
    50  0000                     _ADCON0	set	4034
    51  0000                     _ADCON0bits	set	4034
    52  0000                     _ADCON1	set	4033
    53  0000                     _ADCON1bits	set	4033
    54  0000                     _ADCON2	set	4032
    55  0000                     _ADRESH	set	4036
    56  0000                     _ADRESL	set	4035
    57  0000                     _LATAbits	set	3977
    58  0000                     _LATB	set	3978
    59  0000                     _PORTAbits	set	3968
    60  0000                     _RCREG	set	4014
    61  0000                     _RCSTA	set	4011
    62  0000                     _RCSTAbits	set	4011
    63  0000                     _SPBRG	set	4015
    64  0000                     _T1CONbits	set	4045
    65  0000                     _TRISA	set	3986
    66  0000                     _TRISB	set	3987
    67  0000                     _TRISD	set	3989
    68  0000                     _TXREG	set	4013
    69  0000                     _ADON	set	32272
    70  0000                     _CREN	set	32092
    71  0000                     _GO	set	32273
    72  0000                     _RCIF	set	31989
    73  0000                     _RD2	set	31770
    74  0000                     _RD3	set	31771
    75  0000                     _RD4	set	31772
    76  0000                     _RD5	set	31773
    77  0000                     _RD6	set	31774
    78  0000                     _RD7	set	31775
    79  0000                     _TMR1ON	set	32360
    80  0000                     _TRISA0	set	31888
    81  0000                     _TRISC6	set	31910
    82  0000                     _TRISC7	set	31911
    83  0000                     _TXIF	set	31988
    84  00080A                     __stringdata:
    85                           	opt stack 0
    86  00080A                     STR_1:
    87  00080A  6D                 	db	109	;'m'
    88  00080B  61                 	db	97	;'a'
    89  00080C  72                 	db	114	;'r'
    90  00080D  69                 	db	105	;'i'
    91  00080E  61                 	db	97	;'a'
    92  00080F  3A                 	db	58	;':'
    93  000810  20                 	db	32
    94  000811  25                 	db	37
    95  000812  64                 	db	100	;'d'
    96  000813  00                 	db	0
    97  000814                     __end_of__stringdata:
    98                           	opt stack 0
    99                           
   100                           ; #config settings
   101  000814  00                 	db	0	; dummy byte at the end
   102  0000                     
   103                           	psect	cinit
   104  00146C                     __pcinit:
   105                           	opt stack 0
   106  00146C                     start_initialization:
   107                           	opt stack 0
   108  00146C                     __initialization:
   109                           	opt stack 0
   110                           
   111                           ; Clear objects allocated to BANK0 (32 bytes)
   112  00146C  EE00  F060         	lfsr	0,__pbssBANK0
   113  001470  0E20               	movlw	32
   114  001472                     clear_0:
   115  001472  6AEE               	clrf	postinc0,c
   116  001474  06E8               	decf	wreg,f,c
   117  001476  E1FD               	bnz	clear_0
   118  001478                     end_of_initialization:
   119                           	opt stack 0
   120  001478                     __end_of__initialization:
   121                           	opt stack 0
   122  001478  0E00               	movlw	low (__Lmediumconst shr (0+16))
   123  00147A  6EF8               	movwf	tblptru,c
   124  00147C  0100               	movlb	0
   125  00147E  EF70  F009         	goto	_main	;jump to C main() function
   126                           tblptru	equ	0xFF8
   127                           postinc0	equ	0xFEE
   128                           wreg	equ	0xFE8
   129                           
   130                           	psect	bssBANK0
   131  000060                     __pbssBANK0:
   132                           	opt stack 0
   133  000060                     _LCD_Buffer:
   134                           	opt stack 0
   135  000060                     	ds	32
   136                           tblptru	equ	0xFF8
   137                           postinc0	equ	0xFEE
   138                           wreg	equ	0xFE8
   139                           
   140                           	psect	cstackCOMRAM
   141  000001                     __pcstackCOMRAM:
   142                           	opt stack 0
   143  000001                     ?_Lcd_Port:
   144                           	opt stack 0
   145  000001                     ?___lwdiv:
   146                           	opt stack 0
   147  000001                     ?___ftpack:
   148                           	opt stack 0
   149  000001                     ?___fttol:
   150                           	opt stack 0
   151  000001                     Lcd_Port@a:
   152                           	opt stack 0
   153  000001                     ___lwdiv@dividend:
   154                           	opt stack 0
   155  000001                     ___ftpack@arg:
   156                           	opt stack 0
   157  000001                     ___fttol@f1:
   158                           	opt stack 0
   159                           
   160                           ; 3 bytes @ 0x0
   161  000001                     	ds	1
   162  000002                     ?_Lcd_Cmd:
   163                           	opt stack 0
   164  000002                     ?_lcd_write_char:
   165                           	opt stack 0
   166  000002                     Lcd_Cmd@a:
   167                           	opt stack 0
   168  000002                     lcd_write_char@a:
   169                           	opt stack 0
   170                           
   171                           ; 1 bytes @ 0x1
   172  000002                     	ds	1
   173  000003                     ??_Lcd_Cmd:
   174  000003                     lcd_write_char@temp:
   175                           	opt stack 0
   176  000003                     ___lwdiv@divisor:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x2
   180  000003                     	ds	1
   181  000004                     ?_lcd_gotoxy:
   182                           	opt stack 0
   183  000004                     ??_lcd_init:
   184  000004                     lcd_gotoxy@a:
   185                           	opt stack 0
   186  000004                     lcd_write_char@y:
   187                           	opt stack 0
   188  000004                     ___ftpack@exp:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x3
   192  000004                     	ds	1
   193  000005                     ?_lcd_putc:
   194                           	opt stack 0
   195  000005                     ??___fttol:
   196  000005                     ??___lwdiv:
   197  000005                     lcd_gotoxy@b:
   198                           	opt stack 0
   199  000005                     ___ftpack@sign:
   200                           	opt stack 0
   201  000005                     lcd_putc@a:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x4
   205  000005                     	ds	1
   206  000006                     ??___ftpack:
   207  000006                     lcd_gotoxy@z:
   208                           	opt stack 0
   209  000006                     ___lwdiv@quotient:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x5
   213  000006                     	ds	1
   214  000007                     lcd_gotoxy@y:
   215                           	opt stack 0
   216  000007                     lcd_putc@i:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x6
   220  000007                     	ds	1
   221  000008                     lcd_gotoxy@temp:
   222                           	opt stack 0
   223  000008                     ___lwdiv@counter:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0x7
   227  000008                     	ds	1
   228  000009                     ?_Obtener_Distancia:
   229                           	opt stack 0
   230  000009                     ?___lwmod:
   231                           	opt stack 0
   232  000009                     ?___ftmul:
   233                           	opt stack 0
   234  000009                     ?___altoft:
   235                           	opt stack 0
   236  000009                     ?___awtoft:
   237                           	opt stack 0
   238  000009                     ___awtoft@c:
   239                           	opt stack 0
   240  000009                     ___lwmod@dividend:
   241                           	opt stack 0
   242  000009                     ___ftmul@f1:
   243                           	opt stack 0
   244  000009                     ___altoft@c:
   245                           	opt stack 0
   246                           
   247                           ; 4 bytes @ 0x8
   248  000009                     	ds	1
   249  00000A                     ___fttol@sign1:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x9
   253  00000A                     	ds	1
   254  00000B                     Obtener_Distancia@Timer_1:
   255                           	opt stack 0
   256  00000B                     ___lwmod@divisor:
   257                           	opt stack 0
   258  00000B                     ___fttol@lval:
   259                           	opt stack 0
   260                           
   261                           ; 4 bytes @ 0xA
   262  00000B                     	ds	1
   263  00000C                     ??___awtoft:
   264  00000C                     ___ftmul@f2:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0xB
   268  00000C                     	ds	1
   269  00000D                     ??___altoft:
   270  00000D                     ??___lwmod:
   271  00000D                     ___awtoft@sign:
   272                           	opt stack 0
   273  00000D                     Obtener_Distancia@Distancia:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0xC
   277  00000D                     	ds	1
   278  00000E                     ___lwmod@counter:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0xD
   282  00000E                     	ds	1
   283  00000F                     ??___ftmul:
   284  00000F                     ?_sprintf:
   285                           	opt stack 0
   286  00000F                     ___fttol@exp1:
   287                           	opt stack 0
   288  00000F                     Obtener_Distancia@Duracion:
   289                           	opt stack 0
   290  00000F                     sprintf@sp:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0xE
   294  00000F                     	ds	2
   295  000011                     ___altoft@exp:
   296                           	opt stack 0
   297  000011                     sprintf@f:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x10
   301  000011                     	ds	1
   302  000012                     ___altoft@sign:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x11
   306  000012                     	ds	2
   307  000014                     ___ftmul@f3_as_product:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0x13
   311  000014                     	ds	1
   312  000015                     ??_sprintf:
   313                           
   314                           ; 0 bytes @ 0x14
   315  000015                     	ds	2
   316  000017                     ___ftmul@exp:
   317                           	opt stack 0
   318  000017                     sprintf@ap:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x16
   322  000017                     	ds	1
   323  000018                     ___ftmul@cntr:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x17
   327  000018                     	ds	1
   328  000019                     sprintf@flag:
   329                           	opt stack 0
   330  000019                     ___ftmul@sign:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x18
   334  000019                     	ds	1
   335  00001A                     ?___ftdiv:
   336                           	opt stack 0
   337  00001A                     sprintf@prec:
   338                           	opt stack 0
   339  00001A                     ___ftdiv@f1:
   340                           	opt stack 0
   341                           
   342                           ; 3 bytes @ 0x19
   343  00001A                     	ds	1
   344  00001B                     sprintf@_val:
   345                           	opt stack 0
   346                           
   347                           ; 5 bytes @ 0x1A
   348  00001B                     	ds	2
   349  00001D                     ___ftdiv@f2:
   350                           	opt stack 0
   351                           
   352                           ; 3 bytes @ 0x1C
   353  00001D                     	ds	3
   354  000020                     ??___ftdiv:
   355  000020                     sprintf@c:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x1F
   359  000020                     	ds	1
   360  000021                     ?_states_LED:
   361                           	opt stack 0
   362  000021                     states_LED@data:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x20
   366  000021                     	ds	1
   367  000022                     ??_states_LED:
   368                           
   369                           ; 0 bytes @ 0x21
   370  000022                     	ds	3
   371  000025                     ___ftdiv@f3:
   372                           	opt stack 0
   373                           
   374                           ; 3 bytes @ 0x24
   375  000025                     	ds	3
   376  000028                     ___ftdiv@cntr:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x27
   380  000028                     	ds	1
   381  000029                     ___ftdiv@exp:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x28
   385  000029                     	ds	1
   386  00002A                     ___ftdiv@sign:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x29
   390  00002A                     	ds	1
   391  00002B                     ?_Read_LDR:
   392                           	opt stack 0
   393  00002B                     ?___ftadd:
   394                           	opt stack 0
   395  00002B                     ___ftadd@f1:
   396                           	opt stack 0
   397                           
   398                           ; 3 bytes @ 0x2A
   399  00002B                     	ds	3
   400  00002E                     ??_Read_LDR:
   401  00002E                     ___ftadd@f2:
   402                           	opt stack 0
   403                           
   404                           ; 3 bytes @ 0x2D
   405  00002E                     	ds	3
   406  000031                     ??___ftadd:
   407                           
   408                           ; 0 bytes @ 0x30
   409  000031                     	ds	1
   410  000032                     Read_LDR@analog_reading:
   411                           	opt stack 0
   412                           
   413                           ; 3 bytes @ 0x31
   414  000032                     	ds	4
   415  000036                     ___ftadd@sign:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x35
   419  000036                     	ds	1
   420  000037                     ___ftadd@exp2:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x36
   424  000037                     	ds	1
   425  000038                     ___ftadd@exp1:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x37
   429  000038                     	ds	1
   430  000039                     USART_Init@baud_rate:
   431                           	opt stack 0
   432                           
   433                           ; 4 bytes @ 0x38
   434  000039                     	ds	4
   435  00003D                     USART_Init@temp:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0x3C
   439  00003D                     	ds	3
   440  000040                     ??_main:
   441                           
   442                           ; 0 bytes @ 0x3F
   443  000040                     	ds	1
   444  000041                     main@LDR_value:
   445                           	opt stack 0
   446                           
   447                           ; 3 bytes @ 0x40
   448  000041                     	ds	3
   449  000044                     main@Distancia:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x43
   453  000044                     	ds	2
   454  000046                     main@esp_server_data:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x45
   458  000046                     	ds	1
   459                           tblptru	equ	0xFF8
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           
   463 ;;
   464 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   465 ;;
   466 ;; *************** function _main *****************
   467 ;; Defined at:
   468 ;;		line 58 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  LDR_value       3   64[COMRAM] float 
   473 ;;  Distancia       2   67[COMRAM] unsigned int 
   474 ;;  esp_server_d    1   69[COMRAM] unsigned char 
   475 ;; Return value:  Size  Location     Type
   476 ;;		None               void
   477 ;; Registers used:
   478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   484 ;;      Params:         0       0       0       0       0       0       0       0       0
   485 ;;      Locals:         6       0       0       0       0       0       0       0       0
   486 ;;      Temps:          1       0       0       0       0       0       0       0       0
   487 ;;      Totals:         7       0       0       0       0       0       0       0       0
   488 ;;Total ram usage:        7 bytes
   489 ;; Hardware stack levels required when called:    4
   490 ;; This function calls:
   491 ;;		_lcd_init
   492 ;;		_Configuracion_Registros
   493 ;;		_Timer1_Init
   494 ;;		_Init_AD
   495 ;;		_USART_Init
   496 ;;		_Obtener_Distancia
   497 ;;		_Read_LDR
   498 ;;		_USART_ReceiveChar
   499 ;;		_states_LED
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text0
   506  0012E0                     __ptext0:
   507                           	opt stack 0
   508  0012E0                     _main:
   509                           	opt stack 27
   510                           
   511                           ;main.c: 59: uint16_t Distancia;
   512                           ;main.c: 60: float LDR_value;
   513                           ;main.c: 62: Configuracion_Registros();
   514                           
   515                           ;incstack = 0
   516                           ;incstack = 0
   517  0012E0  EC5E  F00A         	call	_Configuracion_Registros	;wreg free
   518                           
   519                           ;main.c: 63: Timer1_Init();
   520  0012E4  EC4B  F00A         	call	_Timer1_Init	;wreg free
   521                           
   522                           ;main.c: 64: lcd_init();
   523  0012E8  ECC9  F007         	call	_lcd_init	;wreg free
   524                           
   525                           ;main.c: 65: Init_AD();
   526  0012EC  EC41  F00A         	call	_Init_AD	;wreg free
   527                           
   528                           ;main.c: 67: USART_Init();
   529  0012F0  EC25  F008         	call	_USART_Init	;wreg free
   530                           
   531                           ;main.c: 68: char esp_server_data = 'a';
   532  0012F4  6E40               	movwf	??_main& (0+255),c
   533  0012F6  0E61               	movlw	97
   534  0012F8  6E46               	movwf	main@esp_server_data,c
   535  0012FA  5040               	movf	??_main& (0+255),w,c
   536  0012FC                     l1782:
   537                           
   538                           ;main.c: 71: {
   539                           ;main.c: 72: Distancia=Obtener_Distancia();
   540  0012FC  ECAA  F008         	call	_Obtener_Distancia	;wreg free
   541  001300  C009  F044         	movff	?_Obtener_Distancia,main@Distancia
   542  001304  C00A  F045         	movff	?_Obtener_Distancia+1,main@Distancia+1
   543                           
   544                           ;main.c: 73: LDR_value=Read_LDR();
   545  001308  EC10  F007         	call	_Read_LDR	;wreg free
   546  00130C  C02D  F043         	movff	?_Read_LDR+2,main@LDR_value+2
   547  001310  C02C  F042         	movff	?_Read_LDR+1,main@LDR_value+1
   548  001314  C02B  F041         	movff	?_Read_LDR,main@LDR_value
   549                           
   550                           ;main.c: 82: esp_server_data=USART_ReceiveChar();
   551  001318  EC55  F00A         	call	_USART_ReceiveChar	;wreg free
   552  00131C  6E46               	movwf	main@esp_server_data,c
   553                           
   554                           ;main.c: 84: states_LED(esp_server_data);
   555  00131E  C046  F021         	movff	main@esp_server_data,?_states_LED
   556  001322  ECE9  F008         	call	_states_LED	;wreg free
   557  001326  D7EA               	goto	l1782
   558  001328                     __end_of_main:
   559                           	opt stack 0
   560                           tblptru	equ	0xFF8
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           
   564 ;; *************** function _states_LED *****************
   565 ;; Defined at:
   566 ;;		line 89 in file "main.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;  data            1   32[COMRAM] unsigned char 
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;		None               void
   573 ;; Registers used:
   574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   580 ;;      Params:         1       0       0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0       0       0
   582 ;;      Temps:          2       0       0       0       0       0       0       0       0
   583 ;;      Totals:         3       0       0       0       0       0       0       0       0
   584 ;;Total ram usage:        3 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    3
   587 ;; This function calls:
   588 ;;		_lcd_gotoxy
   589 ;;		_lcd_putc
   590 ;;		_sprintf
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text1
   597  0011D2                     __ptext1:
   598                           	opt stack 0
   599  0011D2                     _states_LED:
   600                           	opt stack 27
   601                           
   602                           ;main.c: 91: if(data){
   603                           
   604                           ;incstack = 0
   605                           ;incstack = 0
   606  0011D2  5021               	movf	states_LED@data,w,c
   607  0011D4  B4D8               	btfsc	status,2,c
   608  0011D6  D021               	goto	l1762
   609                           
   610                           ;main.c: 92: lcd_gotoxy(2,1);
   611  0011D8  6E22               	movwf	??_states_LED& (0+255),c
   612  0011DA  0E02               	movlw	2
   613  0011DC  6E04               	movwf	?_lcd_gotoxy,c
   614  0011DE  5022               	movf	??_states_LED& (0+255),w,c
   615  0011E0  6E23               	movwf	(??_states_LED+1)& (0+255),c
   616  0011E2  0E01               	movlw	1
   617  0011E4  6E05               	movwf	?_lcd_gotoxy+1,c
   618  0011E6  5023               	movf	(??_states_LED+1)& (0+255),w,c
   619  0011E8  EC1A  F009         	call	_lcd_gotoxy	;wreg free
   620                           
   621                           ;main.c: 93: sprintf(LCD_Buffer,"maria: %d", data);
   622  0011EC  0100               	movlb	0	; () banked
   623  0011EE  0E00               	movlw	high _LCD_Buffer
   624  0011F0  6E10               	movwf	?_sprintf+1,c
   625  0011F2  0100               	movlb	0	; () banked
   626  0011F4  0E60               	movlw	low _LCD_Buffer
   627  0011F6  6E0F               	movwf	?_sprintf,c
   628  0011F8  0E08               	movlw	high STR_1
   629  0011FA  6E12               	movwf	?_sprintf+3,c
   630  0011FC  0E0A               	movlw	low STR_1
   631  0011FE  6E11               	movwf	?_sprintf+2,c
   632  001200  C021  F013         	movff	states_LED@data,?_sprintf+4
   633  001204  6A14               	clrf	?_sprintf+5,c
   634  001206  ECF1  F004         	call	_sprintf	;wreg free
   635                           
   636                           ;main.c: 94: lcd_putc(LCD_Buffer);
   637  00120A  0100               	movlb	0	; () banked
   638  00120C  0E00               	movlw	high _LCD_Buffer
   639  00120E  6E06               	movwf	?_lcd_putc+1,c
   640  001210  0100               	movlb	0	; () banked
   641  001212  0E60               	movlw	low _LCD_Buffer
   642  001214  6E05               	movwf	?_lcd_putc,c
   643  001216  ECF6  F009         	call	_lcd_putc	;wreg free
   644  00121A                     l1762:
   645                           
   646                           ;main.c: 95: }
   647                           ;main.c: 97: if(data == 170){
   648  00121A  5021               	movf	states_LED@data,w,c
   649  00121C  0AAA               	xorlw	170
   650  00121E  A4D8               	btfss	status,2,c
   651  001220  D002               	goto	l1766
   652                           
   653                           ;main.c: 98: LATB = 0x01;
   654  001222  0E01               	movlw	1
   655  001224  D005               	goto	L1
   656  001226                     l1766:
   657  001226  5021               	movf	states_LED@data,w,c
   658  001228  0AAE               	xorlw	174
   659  00122A  A4D8               	btfss	status,2,c
   660  00122C  D002               	goto	l146
   661                           
   662                           ;main.c: 100: LATB = 0x00;
   663  00122E  0E00               	movlw	0
   664  001230                     L1:
   665  001230  6E8A               	movwf	3978,c	;volatile
   666  001232                     l146:
   667  001232  0012               	return	
   668  001234                     __end_of_states_LED:
   669                           	opt stack 0
   670                           tblptru	equ	0xFF8
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           status	equ	0xFD8
   674                           
   675 ;; *************** function _sprintf *****************
   676 ;; Defined at:
   677 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  sp              2   14[COMRAM] PTR unsigned char 
   680 ;;		 -> LCD_Buffer(32), 
   681 ;;  f               2   16[COMRAM] PTR const unsigned char 
   682 ;;		 -> STR_1(10), 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  _val            5   26[COMRAM] struct .
   685 ;;  ap              2   22[COMRAM] PTR void [1]
   686 ;;		 -> ?_sprintf(2), 
   687 ;;  c               1   31[COMRAM] char 
   688 ;;  prec            1   25[COMRAM] char 
   689 ;;  flag            1   24[COMRAM] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2   14[COMRAM] int 
   692 ;; Registers used:
   693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   699 ;;      Params:         6       0       0       0       0       0       0       0       0
   700 ;;      Locals:        10       0       0       0       0       0       0       0       0
   701 ;;      Temps:          2       0       0       0       0       0       0       0       0
   702 ;;      Totals:        18       0       0       0       0       0       0       0       0
   703 ;;Total ram usage:       18 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    1
   706 ;; This function calls:
   707 ;;		___lwdiv
   708 ;;		___lwmod
   709 ;; This function is called by:
   710 ;;		_states_LED
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text2
   715  0009E2                     __ptext2:
   716                           	opt stack 0
   717  0009E2                     _sprintf:
   718                           	opt stack 28
   719                           
   720                           ;doprnt.c: 494: va_list ap;
   721                           ;doprnt.c: 499: signed char c;
   722                           ;doprnt.c: 506: signed char prec;
   723                           ;doprnt.c: 508: unsigned char flag;
   724                           ;doprnt.c: 527: union {
   725                           ;doprnt.c: 528: unsigned int _val;
   726                           ;doprnt.c: 529: struct {
   727                           ;doprnt.c: 530: const char * _cp;
   728                           ;doprnt.c: 531: unsigned _len;
   729                           ;doprnt.c: 532: } _str;
   730                           ;doprnt.c: 533: } _val;
   731                           ;doprnt.c: 542: *ap = __va_start();
   732                           
   733                           ;incstack = 0
   734                           ;incstack = 0
   735  0009E2  0E00               	movlw	high (?_sprintf+4)
   736  0009E4  6E18               	movwf	sprintf@ap+1,c
   737  0009E6  0E13               	movlw	low (?_sprintf+4)
   738  0009E8  6E17               	movwf	sprintf@ap,c
   739                           
   740                           ;doprnt.c: 545: while(c = *f++) {
   741  0009EA  D091               	goto	l1748
   742  0009EC                     l1696:
   743                           
   744                           ;doprnt.c: 547: if(c != '%')
   745  0009EC  5020               	movf	sprintf@c,w,c
   746  0009EE  0A25               	xorlw	37
   747  0009F0  B4D8               	btfsc	status,2,c
   748  0009F2  D009               	goto	l1702
   749                           
   750                           ;doprnt.c: 549: {
   751                           ;doprnt.c: 550: ((*sp++ = (c)));
   752  0009F4  C00F  FFD9         	movff	sprintf@sp,fsr2l
   753  0009F8  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   754  0009FC  C020  FFDF         	movff	sprintf@c,indf2
   755  000A00  4A0F               	infsnz	sprintf@sp,f,c
   756  000A02  2A10               	incf	sprintf@sp+1,f,c
   757                           
   758                           ;doprnt.c: 551: continue;
   759  000A04  D084               	goto	l1748
   760  000A06                     l1702:
   761                           
   762                           ;doprnt.c: 552: }
   763                           ;doprnt.c: 557: flag = 0;
   764  000A06  6E15               	movwf	??_sprintf& (0+255),c
   765  000A08  0E00               	movlw	0
   766  000A0A  6E19               	movwf	sprintf@flag,c
   767  000A0C  5015               	movf	??_sprintf& (0+255),w,c
   768                           
   769                           ;doprnt.c: 831: }
   770                           
   771                           ;doprnt.c: 822: continue;
   772                           
   773                           ;doprnt.c: 811: default:
   774                           
   775                           ;doprnt.c: 707: case 'i':
   776                           ;doprnt.c: 708: break;
   777                           
   778                           ;doprnt.c: 706: case 'd':
   779                           
   780                           ;doprnt.c: 647: goto alldone;
   781                           
   782                           ;doprnt.c: 646: case 0:
   783                           
   784                           ;doprnt.c: 644: switch(c = *f++) {
   785  000A0E  C011  FFF6         	movff	sprintf@f,tblptrl
   786  000A12  C012  FFF7         	movff	sprintf@f+1,tblptrh
   787  000A16  4A11               	infsnz	sprintf@f,f,c
   788  000A18  2A12               	incf	sprintf@f+1,f,c
   789  000A1A  0008               	tblrd		*
   790  000A1C  CFF5 F020          	movff	tablat,sprintf@c
   791  000A20  5020               	movf	sprintf@c& (0+255),w,c
   792                           
   793                           ; Switch size 1, requested type "space"
   794                           ; Number of cases is 3, Range of values is 0 to 105
   795                           ; switch strategies available:
   796                           ; Name         Instructions Cycles
   797                           ; simple_byte           10     6 (average)
   798                           ;	Chosen strategy is simple_byte
   799  000A22  0A00               	xorlw	0	; case 0
   800  000A24  B4D8               	btfsc	status,2,c
   801  000A26  D07E               	goto	l1750
   802  000A28  0A64               	xorlw	100	; case 100
   803  000A2A  A4D8               	btfss	status,2,c
   804  000A2C  0A0D               	xorlw	13	; case 105
   805  000A2E  A4D8               	btfss	status,2,c
   806  000A30  D06E               	goto	l1748
   807                           
   808                           ;doprnt.c: 1260: {
   809                           ;doprnt.c: 1266: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   810  000A32  C017  FFD9         	movff	sprintf@ap,fsr2l
   811  000A36  C018  FFDA         	movff	sprintf@ap+1,fsr2h
   812  000A3A  CFDE F01B          	movff	postinc2,sprintf@_val
   813  000A3E  CFDD F01C          	movff	postdec2,sprintf@_val+1
   814  000A42  0E02               	movlw	2
   815  000A44  2617               	addwf	sprintf@ap,f,c
   816  000A46  0E00               	movlw	0
   817  000A48  2218               	addwfc	sprintf@ap+1,f,c
   818                           
   819                           ;doprnt.c: 1268: if((int)_val._val < 0) {
   820  000A4A  AE1C               	btfss	sprintf@_val+1,7,c
   821  000A4C  D006               	goto	l1718
   822                           
   823                           ;doprnt.c: 1269: flag |= 0x03;
   824  000A4E  0E03               	movlw	3
   825  000A50  1219               	iorwf	sprintf@flag,f,c
   826                           
   827                           ;doprnt.c: 1270: _val._val = -_val._val;
   828  000A52  6C1B               	negf	sprintf@_val,c
   829  000A54  1E1C               	comf	sprintf@_val+1,f,c
   830  000A56  B0D8               	btfsc	status,0,c
   831  000A58  2A1C               	incf	sprintf@_val+1,f,c
   832  000A5A                     l1718:
   833                           
   834                           ;doprnt.c: 1271: }
   835                           ;doprnt.c: 1273: }
   836                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   837  000A5A  6E15               	movwf	??_sprintf& (0+255),c
   838  000A5C  0E01               	movlw	1
   839  000A5E  6E20               	movwf	sprintf@c,c
   840  000A60  5015               	movf	??_sprintf& (0+255),w,c
   841  000A62  5020               	movf	sprintf@c,w,c
   842  000A64  0A05               	xorlw	5
   843  000A66  B4D8               	btfsc	status,2,c
   844  000A68  D016               	goto	l1732
   845                           
   846                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
   847  000A6A  5020               	movf	sprintf@c,w,c
   848  000A6C  0D02               	mullw	2
   849  000A6E  0E00               	movlw	low _dpowers
   850  000A70  24F3               	addwf	prodl,w,c
   851  000A72  6EF6               	movwf	tblptrl,c
   852  000A74  0E08               	movlw	high _dpowers
   853  000A76  20F4               	addwfc	prodh,w,c
   854  000A78  6EF7               	movwf	tblptrh,c
   855  000A7A  0009               	tblrd		*+
   856  000A7C  CFF5 F015          	movff	tablat,??_sprintf
   857  000A80  0009               	tblrd		*+
   858  000A82  CFF5 F016          	movff	tablat,??_sprintf+1
   859  000A86  5015               	movf	??_sprintf,w,c
   860  000A88  5C1B               	subwf	sprintf@_val,w,c
   861  000A8A  5016               	movf	??_sprintf+1,w,c
   862  000A8C  581C               	subwfb	sprintf@_val+1,w,c
   863  000A8E  A0D8               	btfss	status,0,c
   864  000A90  D002               	goto	l1732
   865                           
   866                           ;doprnt.c: 1314: break;
   867  000A92  2A20               	incf	sprintf@c,f,c
   868  000A94  D7E6               	goto	L2
   869  000A96                     l1732:
   870                           
   871                           ;doprnt.c: 1429: {
   872                           ;doprnt.c: 1445: if(flag & 0x03)
   873  000A96  5019               	movf	sprintf@flag,w,c
   874  000A98  0B03               	andlw	3
   875  000A9A  B4D8               	btfsc	status,2,c
   876  000A9C  D008               	goto	l1738
   877                           
   878                           ;doprnt.c: 1446: ((*sp++ = ('-')));
   879  000A9E  C00F  FFD9         	movff	sprintf@sp,fsr2l
   880  000AA2  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   881  000AA6  0E2D               	movlw	45
   882  000AA8  6EDF               	movwf	indf2,c
   883  000AAA  4A0F               	infsnz	sprintf@sp,f,c
   884  000AAC  2A10               	incf	sprintf@sp+1,f,c
   885  000AAE                     l1738:
   886                           
   887                           ;doprnt.c: 1476: }
   888                           ;doprnt.c: 1479: prec = c;
   889  000AAE  C020  F01A         	movff	sprintf@c,sprintf@prec
   890                           
   891                           ;doprnt.c: 1481: while(prec--) {
   892  000AB2  D029               	goto	l1746
   893  000AB4                     l1740:
   894                           
   895                           ;doprnt.c: 1485: {
   896                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
   897  000AB4  501A               	movf	sprintf@prec,w,c
   898  000AB6  0D02               	mullw	2
   899  000AB8  0E00               	movlw	low _dpowers
   900  000ABA  24F3               	addwf	prodl,w,c
   901  000ABC  6EF6               	movwf	tblptrl,c
   902  000ABE  0E08               	movlw	high _dpowers
   903  000AC0  20F4               	addwfc	prodh,w,c
   904  000AC2  6EF7               	movwf	tblptrh,c
   905  000AC4  0009               	tblrd		*+
   906  000AC6  CFF5 F003          	movff	tablat,?___lwdiv+2
   907  000ACA  000A               	tblrd		*-
   908  000ACC  CFF5 F004          	movff	tablat,?___lwdiv+3
   909  000AD0  C01B  F001         	movff	sprintf@_val,?___lwdiv
   910  000AD4  C01C  F002         	movff	sprintf@_val+1,?___lwdiv+1
   911  000AD8  EC45  F009         	call	___lwdiv	;wreg free
   912  000ADC  C001  F009         	movff	?___lwdiv,?___lwmod
   913  000AE0  C002  F00A         	movff	?___lwdiv+1,?___lwmod+1
   914  000AE4  0E00               	movlw	0
   915  000AE6  6E0C               	movwf	?___lwmod+3,c
   916  000AE8  0E0A               	movlw	10
   917  000AEA  6E0B               	movwf	?___lwmod+2,c
   918  000AEC  EC94  F009         	call	___lwmod	;wreg free
   919  000AF0  5009               	movf	?___lwmod,w,c
   920  000AF2  0F30               	addlw	48
   921  000AF4  6E20               	movwf	sprintf@c,c
   922                           
   923                           ;doprnt.c: 1530: }
   924                           ;doprnt.c: 1531: ((*sp++ = (c)));
   925  000AF6  C00F  FFD9         	movff	sprintf@sp,fsr2l
   926  000AFA  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   927  000AFE  C020  FFDF         	movff	sprintf@c,indf2
   928  000B02  4A0F               	infsnz	sprintf@sp,f,c
   929  000B04  2A10               	incf	sprintf@sp+1,f,c
   930  000B06                     l1746:
   931  000B06  061A               	decf	sprintf@prec,f,c
   932  000B08  281A               	incf	sprintf@prec& (0+255),w,c
   933  000B0A  A4D8               	btfss	status,2,c
   934  000B0C  D7D3               	goto	l1740
   935  000B0E                     l1748:
   936  000B0E  C011  FFF6         	movff	sprintf@f,tblptrl
   937  000B12  C012  FFF7         	movff	sprintf@f+1,tblptrh
   938  000B16  4A11               	infsnz	sprintf@f,f,c
   939  000B18  2A12               	incf	sprintf@f+1,f,c
   940  000B1A  0008               	tblrd		*
   941  000B1C  CFF5 F020          	movff	tablat,sprintf@c
   942  000B20  6620               	tstfsz	sprintf@c& (0+255),c
   943  000B22  D764               	goto	l1696
   944  000B24                     l1750:
   945                           
   946                           ;doprnt.c: 1545: *sp = 0;
   947  000B24  C00F  FFD9         	movff	sprintf@sp,fsr2l
   948  000B28  C010  FFDA         	movff	sprintf@sp+1,fsr2h
   949  000B2C  0E00               	movlw	0
   950  000B2E  6EDF               	movwf	indf2,c
   951                           
   952                           ;doprnt.c: 1547: return 0;
   953                           ;	Return value of _sprintf is never used
   954  000B30  0012               	return	
   955  000B32                     __end_of_sprintf:
   956                           	opt stack 0
   957                           tblptru	equ	0xFF8
   958                           tblptrh	equ	0xFF7
   959                           tblptrl	equ	0xFF6
   960                           tablat	equ	0xFF5
   961                           prodh	equ	0xFF4
   962                           prodl	equ	0xFF3
   963                           postinc0	equ	0xFEE
   964                           wreg	equ	0xFE8
   965                           indf2	equ	0xFDF
   966                           postinc2	equ	0xFDE
   967                           postdec2	equ	0xFDD
   968                           fsr2h	equ	0xFDA
   969                           fsr2l	equ	0xFD9
   970                           status	equ	0xFD8
   971                           
   972 ;; *************** function ___lwmod *****************
   973 ;; Defined at:
   974 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  dividend        2    8[COMRAM] unsigned int 
   977 ;;  divisor         2   10[COMRAM] unsigned int 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  counter         1   13[COMRAM] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  2    8[COMRAM] unsigned int 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   989 ;;      Params:         4       0       0       0       0       0       0       0       0
   990 ;;      Locals:         1       0       0       0       0       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0       0       0       0       0
   992 ;;      Totals:         6       0       0       0       0       0       0       0       0
   993 ;;Total ram usage:        6 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_sprintf
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text3
  1003  001328                     __ptext3:
  1004                           	opt stack 0
  1005  001328                     ___lwmod:
  1006                           	opt stack 28
  1007                           
  1008                           ;incstack = 0
  1009                           ;incstack = 0
  1010  001328  500C               	movf	___lwmod@divisor+1,w,c
  1011  00132A  100B               	iorwf	___lwmod@divisor,w,c
  1012  00132C  B4D8               	btfsc	status,2,c
  1013  00132E  D01A               	goto	l734
  1014  001330  6E0D               	movwf	??___lwmod& (0+255),c
  1015  001332  0E01               	movlw	1
  1016  001334  6E0E               	movwf	___lwmod@counter,c
  1017  001336  500D               	movf	??___lwmod& (0+255),w,c
  1018  001338  D004               	goto	l1630
  1019  00133A                     l1628:
  1020  00133A  90D8               	bcf	status,0,c
  1021  00133C  360B               	rlcf	___lwmod@divisor,f,c
  1022  00133E  360C               	rlcf	___lwmod@divisor+1,f,c
  1023  001340  2A0E               	incf	___lwmod@counter,f,c
  1024  001342                     l1630:
  1025  001342  AE0C               	btfss	___lwmod@divisor+1,7,c
  1026  001344  D7FA               	goto	l1628
  1027  001346                     l1632:
  1028  001346  500B               	movf	___lwmod@divisor,w,c
  1029  001348  5C09               	subwf	___lwmod@dividend,w,c
  1030  00134A  500C               	movf	___lwmod@divisor+1,w,c
  1031  00134C  580A               	subwfb	___lwmod@dividend+1,w,c
  1032  00134E  A0D8               	btfss	status,0,c
  1033  001350  D004               	goto	l1636
  1034  001352  500B               	movf	___lwmod@divisor,w,c
  1035  001354  5E09               	subwf	___lwmod@dividend,f,c
  1036  001356  500C               	movf	___lwmod@divisor+1,w,c
  1037  001358  5A0A               	subwfb	___lwmod@dividend+1,f,c
  1038  00135A                     l1636:
  1039  00135A  90D8               	bcf	status,0,c
  1040  00135C  320C               	rrcf	___lwmod@divisor+1,f,c
  1041  00135E  320B               	rrcf	___lwmod@divisor,f,c
  1042  001360  2E0E               	decfsz	___lwmod@counter,f,c
  1043  001362  D7F1               	goto	l1632
  1044  001364                     l734:
  1045  001364  C009  F009         	movff	___lwmod@dividend,?___lwmod
  1046  001368  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  1047  00136C  0012               	return	
  1048  00136E                     __end_of___lwmod:
  1049                           	opt stack 0
  1050                           tblptru	equ	0xFF8
  1051                           tblptrh	equ	0xFF7
  1052                           tblptrl	equ	0xFF6
  1053                           tablat	equ	0xFF5
  1054                           prodh	equ	0xFF4
  1055                           prodl	equ	0xFF3
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           indf2	equ	0xFDF
  1059                           postinc2	equ	0xFDE
  1060                           postdec2	equ	0xFDD
  1061                           fsr2h	equ	0xFDA
  1062                           fsr2l	equ	0xFD9
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function _lcd_putc *****************
  1066 ;; Defined at:
  1067 ;;		line 135 in file "lcd.h"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  a               2    4[COMRAM] PTR unsigned char 
  1070 ;;		 -> LCD_Buffer(32), 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  i               2    6[COMRAM] int 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;		None               void
  1075 ;; Registers used:
  1076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1082 ;;      Params:         2       0       0       0       0       0       0       0       0
  1083 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1085 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1086 ;;Total ram usage:        4 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    2
  1089 ;; This function calls:
  1090 ;;		_lcd_write_char
  1091 ;; This function is called by:
  1092 ;;		_states_LED
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text4
  1097  0013EC                     __ptext4:
  1098                           	opt stack 0
  1099  0013EC                     _lcd_putc:
  1100                           	opt stack 27
  1101                           
  1102                           ;lcd.h: 136: int i;
  1103                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
  1104                           
  1105                           ;incstack = 0
  1106                           ;incstack = 0
  1107  0013EC  0E00               	movlw	0
  1108  0013EE  6E08               	movwf	lcd_putc@i+1,c
  1109  0013F0  0E00               	movlw	0
  1110  0013F2  6E07               	movwf	lcd_putc@i,c
  1111  0013F4  D00C               	goto	l1692
  1112  0013F6                     l1688:
  1113                           
  1114                           ;lcd.h: 138: lcd_write_char(a[i]);
  1115  0013F6  5007               	movf	lcd_putc@i,w,c
  1116  0013F8  2405               	addwf	lcd_putc@a,w,c
  1117  0013FA  6ED9               	movwf	fsr2l,c
  1118  0013FC  5008               	movf	lcd_putc@i+1,w,c
  1119  0013FE  2006               	addwfc	lcd_putc@a+1,w,c
  1120  001400  6EDA               	movwf	fsr2h,c
  1121  001402  50DF               	movf	indf2,w,c
  1122  001404  6E02               	movwf	?_lcd_write_char,c
  1123  001406  ECD9  F009         	call	_lcd_write_char	;wreg free
  1124  00140A  4A07               	infsnz	lcd_putc@i,f,c
  1125  00140C  2A08               	incf	lcd_putc@i+1,f,c
  1126  00140E                     l1692:
  1127  00140E  5007               	movf	lcd_putc@i,w,c
  1128  001410  2405               	addwf	lcd_putc@a,w,c
  1129  001412  6ED9               	movwf	fsr2l,c
  1130  001414  5008               	movf	lcd_putc@i+1,w,c
  1131  001416  2006               	addwfc	lcd_putc@a+1,w,c
  1132  001418  6EDA               	movwf	fsr2h,c
  1133  00141A  50DF               	movf	indf2,w,c
  1134  00141C  B4D8               	btfsc	status,2,c
  1135  00141E  0012               	return	
  1136  001420  D7EA               	goto	l1688
  1137  001422                     __end_of_lcd_putc:
  1138                           	opt stack 0
  1139                           tblptru	equ	0xFF8
  1140                           tblptrh	equ	0xFF7
  1141                           tblptrl	equ	0xFF6
  1142                           tablat	equ	0xFF5
  1143                           prodh	equ	0xFF4
  1144                           prodl	equ	0xFF3
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           indf2	equ	0xFDF
  1148                           postinc2	equ	0xFDE
  1149                           postdec2	equ	0xFDD
  1150                           fsr2h	equ	0xFDA
  1151                           fsr2l	equ	0xFD9
  1152                           status	equ	0xFD8
  1153                           
  1154 ;; *************** function _lcd_write_char *****************
  1155 ;; Defined at:
  1156 ;;		line 117 in file "lcd.h"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  a               1    1[COMRAM] unsigned char 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  y               1    3[COMRAM] unsigned char 
  1161 ;;  temp            1    2[COMRAM] unsigned char 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;		None               void
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1171 ;;      Params:         1       0       0       0       0       0       0       0       0
  1172 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1174 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1175 ;;Total ram usage:        3 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    1
  1178 ;; This function calls:
  1179 ;;		_Lcd_Port
  1180 ;; This function is called by:
  1181 ;;		_lcd_putc
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text5
  1186  0013B2                     __ptext5:
  1187                           	opt stack 0
  1188  0013B2                     _lcd_write_char:
  1189                           	opt stack 27
  1190                           
  1191                           ;lcd.h: 118: char temp,y;
  1192                           ;lcd.h: 119: temp = a&0x0F;
  1193                           
  1194                           ;incstack = 0
  1195                           ;incstack = 0
  1196  0013B2  5002               	movf	lcd_write_char@a,w,c
  1197  0013B4  0B0F               	andlw	15
  1198  0013B6  6E03               	movwf	lcd_write_char@temp,c
  1199                           
  1200                           ;lcd.h: 120: y = a&0xF0;
  1201  0013B8  5002               	movf	lcd_write_char@a,w,c
  1202  0013BA  0BF0               	andlw	240
  1203  0013BC  6E04               	movwf	lcd_write_char@y,c
  1204                           
  1205                           ;lcd.h: 121: RD2 = 1;
  1206  0013BE  8483               	bsf	3971,2,c	;volatile
  1207                           
  1208                           ;lcd.h: 122: Lcd_Port(y>>4);
  1209  0013C0  3804               	swapf	lcd_write_char@y,w,c
  1210  0013C2  0B0F               	andlw	15
  1211  0013C4  6E01               	movwf	?_Lcd_Port,c
  1212  0013C6  EC11  F00A         	call	_Lcd_Port	;wreg free
  1213                           
  1214                           ;lcd.h: 123: RD3 = 1;
  1215  0013CA  8683               	bsf	3971,3,c	;volatile
  1216                           
  1217                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
  1218  0013CC  0E1A               	movlw	26
  1219  0013CE                     u1137:
  1220  0013CE  2EE8               	decfsz	wreg,f,c
  1221  0013D0  D7FE               	goto	u1137
  1222  0013D2  D000               	nop2		;nop
  1223                           
  1224                           ;lcd.h: 125: RD3 = 0;
  1225  0013D4  9683               	bcf	3971,3,c	;volatile
  1226                           
  1227                           ;lcd.h: 126: Lcd_Port(temp);
  1228  0013D6  C003  F001         	movff	lcd_write_char@temp,?_Lcd_Port
  1229  0013DA  EC11  F00A         	call	_Lcd_Port	;wreg free
  1230                           
  1231                           ;lcd.h: 127: RD3 = 1;
  1232  0013DE  8683               	bsf	3971,3,c	;volatile
  1233                           
  1234                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
  1235  0013E0  0E1A               	movlw	26
  1236  0013E2                     u1147:
  1237  0013E2  2EE8               	decfsz	wreg,f,c
  1238  0013E4  D7FE               	goto	u1147
  1239  0013E6  D000               	nop2		;nop
  1240                           
  1241                           ;lcd.h: 129: RD3 = 0;
  1242  0013E8  9683               	bcf	3971,3,c	;volatile
  1243  0013EA  0012               	return	
  1244  0013EC                     __end_of_lcd_write_char:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           prodh	equ	0xFF4
  1251                           prodl	equ	0xFF3
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           indf2	equ	0xFDF
  1255                           postinc2	equ	0xFDE
  1256                           postdec2	equ	0xFDD
  1257                           fsr2h	equ	0xFDA
  1258                           fsr2l	equ	0xFD9
  1259                           status	equ	0xFD8
  1260                           
  1261 ;; *************** function _lcd_gotoxy *****************
  1262 ;; Defined at:
  1263 ;;		line 72 in file "lcd.h"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  a               1    3[COMRAM] unsigned char 
  1266 ;;  b               1    4[COMRAM] unsigned char 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  temp            1    7[COMRAM] unsigned char 
  1269 ;;  y               1    6[COMRAM] unsigned char 
  1270 ;;  z               1    5[COMRAM] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;		None               void
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1280 ;;      Params:         2       0       0       0       0       0       0       0       0
  1281 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1283 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1284 ;;Total ram usage:        5 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    2
  1287 ;; This function calls:
  1288 ;;		_Lcd_Cmd
  1289 ;; This function is called by:
  1290 ;;		_states_LED
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text6
  1295  001234                     __ptext6:
  1296                           	opt stack 0
  1297  001234                     _lcd_gotoxy:
  1298                           	opt stack 27
  1299                           
  1300                           ;lcd.h: 73: char temp,z,y;
  1301                           ;lcd.h: 74: if(a == 1)
  1302                           
  1303                           ;incstack = 0
  1304                           ;incstack = 0
  1305  001234  0404               	decf	lcd_gotoxy@a,w,c
  1306  001236  A4D8               	btfss	status,2,c
  1307  001238  D012               	goto	l1648
  1308                           
  1309                           ;lcd.h: 75: {
  1310                           ;lcd.h: 76: temp = 0x80 + b - 1;
  1311  00123A  5005               	movf	lcd_gotoxy@b,w,c
  1312  00123C  0F7F               	addlw	127
  1313  00123E  6E08               	movwf	lcd_gotoxy@temp,c
  1314                           
  1315                           ;lcd.h: 77: z = temp>>4;
  1316  001240  3808               	swapf	lcd_gotoxy@temp,w,c
  1317  001242  0B0F               	andlw	15
  1318  001244  6E06               	movwf	lcd_gotoxy@z,c
  1319                           
  1320                           ;lcd.h: 78: y = temp & 0x0F;
  1321  001246  5008               	movf	lcd_gotoxy@temp,w,c
  1322  001248  0B0F               	andlw	15
  1323  00124A  6E07               	movwf	lcd_gotoxy@y,c
  1324                           
  1325                           ;lcd.h: 79: Lcd_Cmd(z);
  1326  00124C  C006  F002         	movff	lcd_gotoxy@z,?_Lcd_Cmd
  1327  001250  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  1328                           
  1329                           ;lcd.h: 80: Lcd_Cmd(y);
  1330  001254  C007  F002         	movff	lcd_gotoxy@y,?_Lcd_Cmd
  1331  001258  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  1332                           
  1333                           ;lcd.h: 81: }
  1334  00125C  D015               	goto	l113
  1335  00125E                     l1648:
  1336                           
  1337                           ;lcd.h: 82: else if(a == 2)
  1338  00125E  5004               	movf	lcd_gotoxy@a,w,c
  1339  001260  0A02               	xorlw	2
  1340  001262  A4D8               	btfss	status,2,c
  1341  001264  D011               	goto	l113
  1342                           
  1343                           ;lcd.h: 83: {
  1344                           ;lcd.h: 84: temp = 0xC0 + b - 1;
  1345  001266  5005               	movf	lcd_gotoxy@b,w,c
  1346  001268  0FBF               	addlw	191
  1347  00126A  6E08               	movwf	lcd_gotoxy@temp,c
  1348                           
  1349                           ;lcd.h: 85: z = temp>>4;
  1350  00126C  3808               	swapf	lcd_gotoxy@temp,w,c
  1351  00126E  0B0F               	andlw	15
  1352  001270  6E06               	movwf	lcd_gotoxy@z,c
  1353                           
  1354                           ;lcd.h: 86: y = temp & 0x0F;
  1355  001272  5008               	movf	lcd_gotoxy@temp,w,c
  1356  001274  0B0F               	andlw	15
  1357  001276  6E07               	movwf	lcd_gotoxy@y,c
  1358                           
  1359                           ;lcd.h: 87: Lcd_Cmd(z);
  1360  001278  C006  F002         	movff	lcd_gotoxy@z,?_Lcd_Cmd
  1361  00127C  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  1362                           
  1363                           ;lcd.h: 88: Lcd_Cmd(y);
  1364  001280  C007  F002         	movff	lcd_gotoxy@y,?_Lcd_Cmd
  1365  001284  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  1366  001288                     l113:
  1367  001288  0012               	return	
  1368  00128A                     __end_of_lcd_gotoxy:
  1369                           	opt stack 0
  1370                           tblptru	equ	0xFF8
  1371                           tblptrh	equ	0xFF7
  1372                           tblptrl	equ	0xFF6
  1373                           tablat	equ	0xFF5
  1374                           prodh	equ	0xFF4
  1375                           prodl	equ	0xFF3
  1376                           postinc0	equ	0xFEE
  1377                           wreg	equ	0xFE8
  1378                           indf2	equ	0xFDF
  1379                           postinc2	equ	0xFDE
  1380                           postdec2	equ	0xFDD
  1381                           fsr2h	equ	0xFDA
  1382                           fsr2l	equ	0xFD9
  1383                           status	equ	0xFD8
  1384                           
  1385 ;; *************** function _USART_ReceiveChar *****************
  1386 ;; Defined at:
  1387 ;;		line 129 in file "main.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      unsigned char 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1401 ;;      Params:         0       0       0       0       0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1404 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text7
  1415  0014AA                     __ptext7:
  1416                           	opt stack 0
  1417  0014AA                     _USART_ReceiveChar:
  1418                           	opt stack 30
  1419  0014AA                     l158:
  1420  0014AA  AA9E               	btfss	3998,5,c	;volatile
  1421  0014AC  D7FE               	goto	l158
  1422                           
  1423                           ;main.c: 131: if(RCSTAbits.OERR)
  1424  0014AE  A2AB               	btfss	4011,1,c	;volatile
  1425  0014B0  D003               	goto	l1000
  1426                           
  1427                           ;main.c: 132: {
  1428                           ;main.c: 133: CREN = 0;
  1429  0014B2  98AB               	bcf	4011,4,c	;volatile
  1430  0014B4  F000               	nop		;# 
  1431                           
  1432                           ;main.c: 135: CREN=1;
  1433  0014B6  88AB               	bsf	4011,4,c	;volatile
  1434  0014B8                     l1000:
  1435                           
  1436                           ;main.c: 136: }
  1437                           ;main.c: 137: return(RCREG);
  1438  0014B8  50AE               	movf	4014,w,c	;volatile
  1439  0014BA  0012               	return	
  1440  0014BC                     __end_of_USART_ReceiveChar:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           prodh	equ	0xFF4
  1447                           prodl	equ	0xFF3
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           indf2	equ	0xFDF
  1451                           postinc2	equ	0xFDE
  1452                           postdec2	equ	0xFDD
  1453                           fsr2h	equ	0xFDA
  1454                           fsr2l	equ	0xFD9
  1455                           status	equ	0xFD8
  1456                           
  1457 ;; *************** function _Read_LDR *****************
  1458 ;; Defined at:
  1459 ;;		line 205 in file "main.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  analog_readi    3   49[COMRAM] float 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  3   42[COMRAM] float 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1473 ;;      Params:         3       0       0       0       0       0       0       0       0
  1474 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1475 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1476 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1477 ;;Total ram usage:       10 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    2
  1480 ;; This function calls:
  1481 ;;		___ftdiv
  1482 ;;		___ftmul
  1483 ;;		___awtoft
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text8
  1490  000E20                     __ptext8:
  1491                           	opt stack 0
  1492  000E20                     _Read_LDR:
  1493                           	opt stack 28
  1494                           
  1495                           ;main.c: 206: float analog_reading = 0;
  1496                           
  1497                           ;incstack = 0
  1498                           ;incstack = 0
  1499  000E20  0E00               	movlw	0
  1500  000E22  6E32               	movwf	Read_LDR@analog_reading,c
  1501  000E24  0E00               	movlw	0
  1502  000E26  6E33               	movwf	Read_LDR@analog_reading+1,c
  1503  000E28  0E00               	movlw	0
  1504  000E2A  6E34               	movwf	Read_LDR@analog_reading+2,c
  1505                           
  1506                           ;main.c: 207: ADCON0 |= ((1 << ADON) | (1 << GO));
  1507  000E2C  0E00               	movlw	0
  1508  000E2E  B2C2               	btfsc	4034,1,c	;volatile
  1509  000E30  0E01               	movlw	1
  1510  000E32  6E2E               	movwf	??_Read_LDR& (0+255),c
  1511  000E34  0E01               	movlw	1
  1512  000E36  6E2F               	movwf	(??_Read_LDR+1)& (0+255),c
  1513  000E38  2A2E               	incf	??_Read_LDR,f,c
  1514  000E3A  D002               	goto	u794
  1515  000E3C                     u795:
  1516  000E3C  90D8               	bcf	status,0,c
  1517  000E3E  362F               	rlcf	??_Read_LDR+1,f,c
  1518  000E40                     u794:
  1519  000E40  2E2E               	decfsz	??_Read_LDR,f,c
  1520  000E42  D7FC               	goto	u795
  1521  000E44  0E00               	movlw	0
  1522  000E46  B0C2               	btfsc	4034,0,c	;volatile
  1523  000E48  0E01               	movlw	1
  1524  000E4A  6E30               	movwf	(??_Read_LDR+2)& (0+255),c
  1525  000E4C  0E01               	movlw	1
  1526  000E4E  6E31               	movwf	(??_Read_LDR+3)& (0+255),c
  1527  000E50  2A30               	incf	??_Read_LDR+2,f,c
  1528  000E52  D002               	goto	u804
  1529  000E54                     u805:
  1530  000E54  90D8               	bcf	status,0,c
  1531  000E56  3631               	rlcf	??_Read_LDR+3,f,c
  1532  000E58                     u804:
  1533  000E58  2E30               	decfsz	??_Read_LDR+2,f,c
  1534  000E5A  D7FC               	goto	u805
  1535  000E5C  5031               	movf	??_Read_LDR+3,w,c
  1536  000E5E  102F               	iorwf	??_Read_LDR+1,w,c
  1537  000E60  12C2               	iorwf	4034,f,c	;volatile
  1538  000E62                     l187:
  1539  000E62  B2C2               	btfsc	4034,1,c	;volatile
  1540  000E64  D7FE               	goto	l187
  1541                           
  1542                           ;main.c: 209: analog_reading = (ADRESH * 256) + (ADRESL);
  1543  000E66  50C4               	movf	4036,w,c	;volatile
  1544  000E68  6E2F               	movwf	(??_Read_LDR+1)& (0+255),c
  1545  000E6A  6A2E               	clrf	??_Read_LDR& (0+255),c
  1546  000E6C  50C3               	movf	4035,w,c	;volatile
  1547  000E6E  242E               	addwf	??_Read_LDR,w,c
  1548  000E70  6E09               	movwf	?___awtoft,c
  1549  000E72  0E00               	movlw	0
  1550  000E74  202F               	addwfc	??_Read_LDR+1,w,c
  1551  000E76  6E0A               	movwf	?___awtoft+1,c
  1552  000E78  ECB7  F009         	call	___awtoft	;wreg free
  1553  000E7C  C00B  F034         	movff	?___awtoft+2,Read_LDR@analog_reading+2
  1554  000E80  C00A  F033         	movff	?___awtoft+1,Read_LDR@analog_reading+1
  1555  000E84  C009  F032         	movff	?___awtoft,Read_LDR@analog_reading
  1556                           
  1557                           ;main.c: 210: analog_reading = analog_reading*5/1023;
  1558  000E88  0E00               	movlw	0
  1559  000E8A  6E0C               	movwf	?___ftmul+3,c
  1560  000E8C  0EA0               	movlw	160
  1561  000E8E  6E0D               	movwf	?___ftmul+4,c
  1562  000E90  0E40               	movlw	64
  1563  000E92  6E0E               	movwf	?___ftmul+5,c
  1564  000E94  C032  F009         	movff	Read_LDR@analog_reading,?___ftmul
  1565  000E98  C033  F00A         	movff	Read_LDR@analog_reading+1,?___ftmul+1
  1566  000E9C  C034  F00B         	movff	Read_LDR@analog_reading+2,?___ftmul+2
  1567  000EA0  EC99  F005         	call	___ftmul	;wreg free
  1568  000EA4  C00B  F01C         	movff	?___ftmul+2,?___ftdiv+2
  1569  000EA8  C00A  F01B         	movff	?___ftmul+1,?___ftdiv+1
  1570  000EAC  C009  F01A         	movff	?___ftmul,?___ftdiv
  1571  000EB0  0EC0               	movlw	192
  1572  000EB2  6E1D               	movwf	?___ftdiv+3,c
  1573  000EB4  0E7F               	movlw	127
  1574  000EB6  6E1E               	movwf	?___ftdiv+4,c
  1575  000EB8  0E44               	movlw	68
  1576  000EBA  6E1F               	movwf	?___ftdiv+5,c
  1577  000EBC  EC21  F006         	call	___ftdiv	;wreg free
  1578  000EC0  C01C  F034         	movff	?___ftdiv+2,Read_LDR@analog_reading+2
  1579  000EC4  C01B  F033         	movff	?___ftdiv+1,Read_LDR@analog_reading+1
  1580  000EC8  C01A  F032         	movff	?___ftdiv,Read_LDR@analog_reading
  1581                           
  1582                           ;main.c: 211: return analog_reading;
  1583  000ECC  C032  F02B         	movff	Read_LDR@analog_reading,?_Read_LDR
  1584  000ED0  C033  F02C         	movff	Read_LDR@analog_reading+1,?_Read_LDR+1
  1585  000ED4  C034  F02D         	movff	Read_LDR@analog_reading+2,?_Read_LDR+2
  1586  000ED8  0012               	return	
  1587  000EDA                     __end_of_Read_LDR:
  1588                           	opt stack 0
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           prodh	equ	0xFF4
  1594                           prodl	equ	0xFF3
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           indf2	equ	0xFDF
  1598                           postinc2	equ	0xFDE
  1599                           postdec2	equ	0xFDD
  1600                           fsr2h	equ	0xFDA
  1601                           fsr2l	equ	0xFD9
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function ___awtoft *****************
  1605 ;; Defined at:
  1606 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  c               2    8[COMRAM] int 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  sign            1   12[COMRAM] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  3    8[COMRAM] float 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1620 ;;      Params:         3       0       0       0       0       0       0       0       0
  1621 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1622 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1623 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1624 ;;Total ram usage:        5 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    1
  1627 ;; This function calls:
  1628 ;;		___ftpack
  1629 ;; This function is called by:
  1630 ;;		_Read_LDR
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text9
  1635  00136E                     __ptext9:
  1636                           	opt stack 0
  1637  00136E                     ___awtoft:
  1638                           	opt stack 28
  1639                           
  1640                           ;incstack = 0
  1641                           ;incstack = 0
  1642  00136E  6E0C               	movwf	??___awtoft& (0+255),c
  1643  001370  0E00               	movlw	0
  1644  001372  6E0D               	movwf	___awtoft@sign,c
  1645  001374  500C               	movf	??___awtoft& (0+255),w,c
  1646  001376  AE0A               	btfss	___awtoft@c+1,7,c
  1647  001378  D008               	goto	l1228
  1648  00137A  6C09               	negf	___awtoft@c,c
  1649  00137C  1E0A               	comf	___awtoft@c+1,f,c
  1650  00137E  B0D8               	btfsc	status,0,c
  1651  001380  2A0A               	incf	___awtoft@c+1,f,c
  1652  001382  6E0C               	movwf	??___awtoft& (0+255),c
  1653  001384  0E01               	movlw	1
  1654  001386  6E0D               	movwf	___awtoft@sign,c
  1655  001388  500C               	movf	??___awtoft& (0+255),w,c
  1656  00138A                     l1228:
  1657  00138A  C009  F001         	movff	___awtoft@c,?___ftpack
  1658  00138E  C00A  F002         	movff	___awtoft@c+1,?___ftpack+1
  1659  001392  6A03               	clrf	?___ftpack+2,c
  1660  001394  6E0C               	movwf	??___awtoft& (0+255),c
  1661  001396  0E8E               	movlw	142
  1662  001398  6E04               	movwf	?___ftpack+3,c
  1663  00139A  500C               	movf	??___awtoft& (0+255),w,c
  1664  00139C  C00D  F005         	movff	___awtoft@sign,?___ftpack+4
  1665  0013A0  EC6D  F007         	call	___ftpack	;wreg free
  1666  0013A4  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1667  0013A8  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1668  0013AC  C001  F009         	movff	?___ftpack,?___awtoft
  1669  0013B0  0012               	return	
  1670  0013B2                     __end_of___awtoft:
  1671                           	opt stack 0
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           prodh	equ	0xFF4
  1677                           prodl	equ	0xFF3
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           indf2	equ	0xFDF
  1681                           postinc2	equ	0xFDE
  1682                           postdec2	equ	0xFDD
  1683                           fsr2h	equ	0xFDA
  1684                           fsr2l	equ	0xFD9
  1685                           status	equ	0xFD8
  1686                           
  1687 ;; *************** function ___ftmul *****************
  1688 ;; Defined at:
  1689 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  f1              3    8[COMRAM] float 
  1692 ;;  f2              3   11[COMRAM] float 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  f3_as_produc    3   19[COMRAM] unsigned um
  1695 ;;  sign            1   24[COMRAM] unsigned char 
  1696 ;;  cntr            1   23[COMRAM] unsigned char 
  1697 ;;  exp             1   22[COMRAM] unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  3    8[COMRAM] float 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1707 ;;      Params:         6       0       0       0       0       0       0       0       0
  1708 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1709 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1710 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1711 ;;Total ram usage:       17 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    1
  1714 ;; This function calls:
  1715 ;;		___ftpack
  1716 ;; This function is called by:
  1717 ;;		_Read_LDR
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text10
  1722  000B32                     __ptext10:
  1723                           	opt stack 0
  1724  000B32                     ___ftmul:
  1725                           	opt stack 28
  1726                           
  1727                           ;incstack = 0
  1728                           ;incstack = 0
  1729  000B32  0E0F               	movlw	15
  1730  000B34  6E0F               	movwf	??___ftmul& (0+255),c
  1731  000B36  C009  F010         	movff	___ftmul@f1,??___ftmul+1
  1732  000B3A  C00A  F011         	movff	___ftmul@f1+1,??___ftmul+2
  1733  000B3E  C00B  F012         	movff	___ftmul@f1+2,??___ftmul+3
  1734  000B42  280F               	incf	??___ftmul,w,c
  1735  000B44  6E13               	movwf	(??___ftmul+4)& (0+255),c
  1736  000B46  D004               	goto	u320
  1737  000B48                     u325:
  1738  000B48  90D8               	bcf	status,0,c
  1739  000B4A  3212               	rrcf	??___ftmul+3,f,c
  1740  000B4C  3211               	rrcf	??___ftmul+2,f,c
  1741  000B4E  3210               	rrcf	??___ftmul+1,f,c
  1742  000B50                     u320:
  1743  000B50  2E13               	decfsz	(??___ftmul+4)& (0+255),f,c
  1744  000B52  D7FA               	goto	u325
  1745  000B54  5010               	movf	??___ftmul+1,w,c
  1746  000B56  6E17               	movwf	___ftmul@exp,c
  1747  000B58  6617               	tstfsz	___ftmul@exp& (0+255),c
  1748  000B5A  D001               	goto	l1178
  1749  000B5C  D015               	goto	u350
  1750  000B5E                     l1178:
  1751  000B5E  0E0F               	movlw	15
  1752  000B60  6E0F               	movwf	??___ftmul& (0+255),c
  1753  000B62  C00C  F010         	movff	___ftmul@f2,??___ftmul+1
  1754  000B66  C00D  F011         	movff	___ftmul@f2+1,??___ftmul+2
  1755  000B6A  C00E  F012         	movff	___ftmul@f2+2,??___ftmul+3
  1756  000B6E  280F               	incf	??___ftmul,w,c
  1757  000B70  6E13               	movwf	(??___ftmul+4)& (0+255),c
  1758  000B72  D004               	goto	u340
  1759  000B74                     u345:
  1760  000B74  90D8               	bcf	status,0,c
  1761  000B76  3212               	rrcf	??___ftmul+3,f,c
  1762  000B78  3211               	rrcf	??___ftmul+2,f,c
  1763  000B7A  3210               	rrcf	??___ftmul+1,f,c
  1764  000B7C                     u340:
  1765  000B7C  2E13               	decfsz	(??___ftmul+4)& (0+255),f,c
  1766  000B7E  D7FA               	goto	u345
  1767  000B80  5010               	movf	??___ftmul+1,w,c
  1768  000B82  6E19               	movwf	___ftmul@sign,c
  1769  000B84  6619               	tstfsz	___ftmul@sign& (0+255),c
  1770  000B86  D007               	goto	l1184
  1771  000B88                     u350:
  1772  000B88  0E00               	movlw	0
  1773  000B8A  6E09               	movwf	?___ftmul,c
  1774  000B8C  0E00               	movlw	0
  1775  000B8E  6E0A               	movwf	?___ftmul+1,c
  1776  000B90  0E00               	movlw	0
  1777  000B92  6E0B               	movwf	?___ftmul+2,c
  1778  000B94  D055               	goto	l596
  1779  000B96                     l1184:
  1780  000B96  5019               	movf	___ftmul@sign,w,c
  1781  000B98  0F7B               	addlw	123
  1782  000B9A  2617               	addwf	___ftmul@exp,f,c
  1783  000B9C  C00B  F019         	movff	___ftmul@f1+2,___ftmul@sign
  1784  000BA0  500E               	movf	(___ftmul@f2+2)& (0+255),w,c
  1785  000BA2  1A19               	xorwf	___ftmul@sign,f,c
  1786  000BA4  0E80               	movlw	128
  1787  000BA6  1619               	andwf	___ftmul@sign,f,c
  1788  000BA8  8E0A               	bsf	___ftmul@f1+1,7,c
  1789  000BAA  8E0D               	bsf	___ftmul@f2+1,7,c
  1790  000BAC  0EFF               	movlw	255
  1791  000BAE  160C               	andwf	___ftmul@f2,f,c
  1792  000BB0  0EFF               	movlw	255
  1793  000BB2  160D               	andwf	___ftmul@f2+1,f,c
  1794  000BB4  0E00               	movlw	0
  1795  000BB6  160E               	andwf	___ftmul@f2+2,f,c
  1796  000BB8  0E00               	movlw	0
  1797  000BBA  6E14               	movwf	___ftmul@f3_as_product,c
  1798  000BBC  0E00               	movlw	0
  1799  000BBE  6E15               	movwf	___ftmul@f3_as_product+1,c
  1800  000BC0  0E00               	movlw	0
  1801  000BC2  6E16               	movwf	___ftmul@f3_as_product+2,c
  1802  000BC4  6E0F               	movwf	??___ftmul& (0+255),c
  1803  000BC6  0E07               	movlw	7
  1804  000BC8  6E18               	movwf	___ftmul@cntr,c
  1805  000BCA  500F               	movf	??___ftmul& (0+255),w,c
  1806  000BCC                     l1198:
  1807  000BCC  A009               	btfss	___ftmul@f1,0,c
  1808  000BCE  D006               	goto	l1202
  1809  000BD0  500C               	movf	___ftmul@f2,w,c
  1810  000BD2  2614               	addwf	___ftmul@f3_as_product,f,c
  1811  000BD4  500D               	movf	___ftmul@f2+1,w,c
  1812  000BD6  2215               	addwfc	___ftmul@f3_as_product+1,f,c
  1813  000BD8  500E               	movf	___ftmul@f2+2,w,c
  1814  000BDA  2216               	addwfc	___ftmul@f3_as_product+2,f,c
  1815  000BDC                     l1202:
  1816  000BDC  90D8               	bcf	status,0,c
  1817  000BDE  320B               	rrcf	___ftmul@f1+2,f,c
  1818  000BE0  320A               	rrcf	___ftmul@f1+1,f,c
  1819  000BE2  3209               	rrcf	___ftmul@f1,f,c
  1820  000BE4  90D8               	bcf	status,0,c
  1821  000BE6  360C               	rlcf	___ftmul@f2,f,c
  1822  000BE8  360D               	rlcf	___ftmul@f2+1,f,c
  1823  000BEA  360E               	rlcf	___ftmul@f2+2,f,c
  1824  000BEC  2E18               	decfsz	___ftmul@cntr,f,c
  1825  000BEE  D7EE               	goto	l1198
  1826  000BF0  6E0F               	movwf	??___ftmul& (0+255),c
  1827  000BF2  0E09               	movlw	9
  1828  000BF4  6E18               	movwf	___ftmul@cntr,c
  1829  000BF6  500F               	movf	??___ftmul& (0+255),w,c
  1830  000BF8                     l1208:
  1831  000BF8  A009               	btfss	___ftmul@f1,0,c
  1832  000BFA  D006               	goto	l1212
  1833  000BFC  500C               	movf	___ftmul@f2,w,c
  1834  000BFE  2614               	addwf	___ftmul@f3_as_product,f,c
  1835  000C00  500D               	movf	___ftmul@f2+1,w,c
  1836  000C02  2215               	addwfc	___ftmul@f3_as_product+1,f,c
  1837  000C04  500E               	movf	___ftmul@f2+2,w,c
  1838  000C06  2216               	addwfc	___ftmul@f3_as_product+2,f,c
  1839  000C08                     l1212:
  1840  000C08  90D8               	bcf	status,0,c
  1841  000C0A  320B               	rrcf	___ftmul@f1+2,f,c
  1842  000C0C  320A               	rrcf	___ftmul@f1+1,f,c
  1843  000C0E  3209               	rrcf	___ftmul@f1,f,c
  1844  000C10  90D8               	bcf	status,0,c
  1845  000C12  3216               	rrcf	___ftmul@f3_as_product+2,f,c
  1846  000C14  3215               	rrcf	___ftmul@f3_as_product+1,f,c
  1847  000C16  3214               	rrcf	___ftmul@f3_as_product,f,c
  1848  000C18  2E18               	decfsz	___ftmul@cntr,f,c
  1849  000C1A  D7EE               	goto	l1208
  1850  000C1C  C014  F001         	movff	___ftmul@f3_as_product,?___ftpack
  1851  000C20  C015  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  1852  000C24  C016  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  1853  000C28  C017  F004         	movff	___ftmul@exp,?___ftpack+3
  1854  000C2C  C019  F005         	movff	___ftmul@sign,?___ftpack+4
  1855  000C30  EC6D  F007         	call	___ftpack	;wreg free
  1856  000C34  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  1857  000C38  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  1858  000C3C  C001  F009         	movff	?___ftpack,?___ftmul
  1859  000C40                     l596:
  1860  000C40  0012               	return	
  1861  000C42                     __end_of___ftmul:
  1862                           	opt stack 0
  1863                           tblptru	equ	0xFF8
  1864                           tblptrh	equ	0xFF7
  1865                           tblptrl	equ	0xFF6
  1866                           tablat	equ	0xFF5
  1867                           prodh	equ	0xFF4
  1868                           prodl	equ	0xFF3
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           indf2	equ	0xFDF
  1872                           postinc2	equ	0xFDE
  1873                           postdec2	equ	0xFDD
  1874                           fsr2h	equ	0xFDA
  1875                           fsr2l	equ	0xFD9
  1876                           status	equ	0xFD8
  1877                           
  1878 ;; *************** function _Obtener_Distancia *****************
  1879 ;; Defined at:
  1880 ;;		line 165 in file "main.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  Duracion        2   14[COMRAM] unsigned int 
  1885 ;;  Distancia       2   12[COMRAM] unsigned int 
  1886 ;;  Timer_1         2   10[COMRAM] unsigned int 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  2    8[COMRAM] unsigned int 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1896 ;;      Params:         2       0       0       0       0       0       0       0       0
  1897 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1899 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1900 ;;Total ram usage:        8 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    1
  1903 ;; This function calls:
  1904 ;;		___lwdiv
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text11
  1911  001154                     __ptext11:
  1912                           	opt stack 0
  1913  001154                     _Obtener_Distancia:
  1914                           	opt stack 29
  1915                           
  1916                           ;main.c: 166: uint16_t Duracion;
  1917                           ;main.c: 167: uint16_t Distancia;
  1918                           ;main.c: 168: uint16_t Timer_1;
  1919                           ;main.c: 170: LATAbits.LATA1=1;
  1920                           
  1921                           ;incstack = 0
  1922                           ;incstack = 0
  1923  001154  8289               	bsf	3977,1,c	;volatile
  1924                           
  1925                           ;main.c: 171: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1926  001156  0E06               	movlw	6
  1927  001158                     u1157:
  1928  001158  2EE8               	decfsz	wreg,f,c
  1929  00115A  D7FE               	goto	u1157
  1930  00115C  D000               	nop2		;nop
  1931                           
  1932                           ;main.c: 172: LATAbits.LATA1=0;
  1933  00115E  9289               	bcf	3977,1,c	;volatile
  1934  001160                     l171:
  1935  001160  A480               	btfss	3968,2,c	;volatile
  1936  001162  D7FE               	goto	l171
  1937                           
  1938                           ;main.c: 174: T1CONbits.TMR1ON=1;
  1939  001164  80CD               	bsf	4045,0,c	;volatile
  1940  001166                     l174:
  1941  001166  B480               	btfsc	3968,2,c	;volatile
  1942  001168  D7FE               	goto	l174
  1943                           
  1944                           ;main.c: 176: T1CONbits.TMR1ON=0;
  1945  00116A  90CD               	bcf	4045,0,c	;volatile
  1946                           
  1947                           ;main.c: 177: Timer_1=TMR1;
  1948  00116C  CFCE F00B          	movff	4046,Obtener_Distancia@Timer_1	;volatile
  1949  001170  CFCF F00C          	movff	4047,Obtener_Distancia@Timer_1+1	;volatile
  1950                           
  1951                           ;main.c: 178: Duracion=Timer_1/2;
  1952  001174  90D8               	bcf	status,0,c
  1953  001176  300C               	rrcf	Obtener_Distancia@Timer_1+1,w,c
  1954  001178  6E10               	movwf	Obtener_Distancia@Duracion+1,c
  1955  00117A  300B               	rrcf	Obtener_Distancia@Timer_1,w,c
  1956  00117C  6E0F               	movwf	Obtener_Distancia@Duracion,c
  1957                           
  1958                           ;main.c: 179: if(Duracion<=23200)
  1959  00117E  0EA1               	movlw	161
  1960  001180  5C0F               	subwf	Obtener_Distancia@Duracion,w,c
  1961  001182  0E5A               	movlw	90
  1962  001184  5810               	subwfb	Obtener_Distancia@Duracion+1,w,c
  1963  001186  B0D8               	btfsc	status,0,c
  1964  001188  D00F               	goto	l1614
  1965                           
  1966                           ;main.c: 180: {
  1967                           ;main.c: 181: Distancia=Duracion/58;
  1968  00118A  C00F  F001         	movff	Obtener_Distancia@Duracion,?___lwdiv
  1969  00118E  C010  F002         	movff	Obtener_Distancia@Duracion+1,?___lwdiv+1
  1970  001192  0E00               	movlw	0
  1971  001194  6E04               	movwf	?___lwdiv+3,c
  1972  001196  0E3A               	movlw	58
  1973  001198  6E03               	movwf	?___lwdiv+2,c
  1974  00119A  EC45  F009         	call	___lwdiv	;wreg free
  1975  00119E  C001  F00D         	movff	?___lwdiv,Obtener_Distancia@Distancia
  1976  0011A2  C002  F00E         	movff	?___lwdiv+1,Obtener_Distancia@Distancia+1
  1977                           
  1978                           ;main.c: 182: }
  1979  0011A6  D008               	goto	l178
  1980  0011A8                     l1614:
  1981                           
  1982                           ;main.c: 183: else if(Duracion<116)
  1983  0011A8  0E74               	movlw	116
  1984  0011AA  5C0F               	subwf	Obtener_Distancia@Duracion,w,c
  1985  0011AC  0E00               	movlw	0
  1986  0011AE  5810               	subwfb	Obtener_Distancia@Duracion+1,w,c
  1987                           
  1988                           ;main.c: 187: else
  1989                           ;main.c: 188: {
  1990                           ;main.c: 189: Distancia=0;
  1991                           
  1992                           ;main.c: 186: }
  1993                           
  1994                           ;main.c: 184: {
  1995                           ;main.c: 185: Distancia=0;
  1996  0011B0  0E00               	movlw	0
  1997  0011B2  6E0E               	movwf	Obtener_Distancia@Distancia+1,c
  1998  0011B4  0E00               	movlw	0
  1999  0011B6  6E0D               	movwf	Obtener_Distancia@Distancia,c
  2000  0011B8                     l178:
  2001                           
  2002                           ;main.c: 190: }
  2003                           ;main.c: 191: Duracion=0;
  2004  0011B8  0E00               	movlw	0
  2005  0011BA  6E10               	movwf	Obtener_Distancia@Duracion+1,c
  2006  0011BC  0E00               	movlw	0
  2007  0011BE  6E0F               	movwf	Obtener_Distancia@Duracion,c
  2008                           
  2009                           ;main.c: 192: TMR1=0;
  2010  0011C0  0E00               	movlw	0
  2011  0011C2  6ECF               	movwf	4047,c	;volatile
  2012  0011C4  0E00               	movlw	0
  2013  0011C6  6ECE               	movwf	4046,c	;volatile
  2014                           
  2015                           ;main.c: 194: return Distancia;
  2016  0011C8  C00D  F009         	movff	Obtener_Distancia@Distancia,?_Obtener_Distancia
  2017  0011CC  C00E  F00A         	movff	Obtener_Distancia@Distancia+1,?_Obtener_Distancia+1
  2018  0011D0  0012               	return	
  2019  0011D2                     __end_of_Obtener_Distancia:
  2020                           	opt stack 0
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           prodh	equ	0xFF4
  2026                           prodl	equ	0xFF3
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           indf2	equ	0xFDF
  2030                           postinc2	equ	0xFDE
  2031                           postdec2	equ	0xFDD
  2032                           fsr2h	equ	0xFDA
  2033                           fsr2l	equ	0xFD9
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function _USART_Init *****************
  2037 ;; Defined at:
  2038 ;;		line 108 in file "main.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  baud_rate       4   56[COMRAM] long 
  2043 ;;  temp            3   60[COMRAM] float 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;		None               void
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2053 ;;      Params:         0       0       0       0       0       0       0       0       0
  2054 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2056 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2057 ;;Total ram usage:        7 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    2
  2060 ;; This function calls:
  2061 ;;		___altoft
  2062 ;;		___ftadd
  2063 ;;		___ftdiv
  2064 ;;		___fttol
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text12
  2071  00104A                     __ptext12:
  2072                           	opt stack 0
  2073  00104A                     _USART_Init:
  2074                           	opt stack 28
  2075                           
  2076                           ;main.c: 109: long int baud_rate = 115200;
  2077                           
  2078                           ;incstack = 0
  2079                           ;incstack = 0
  2080  00104A  0E00               	movlw	0
  2081  00104C  6E39               	movwf	USART_Init@baud_rate,c
  2082  00104E  0EC2               	movlw	194
  2083  001050  6E3A               	movwf	USART_Init@baud_rate+1,c
  2084  001052  0E01               	movlw	1
  2085  001054  6E3B               	movwf	USART_Init@baud_rate+2,c
  2086  001056  0E00               	movlw	0
  2087  001058  6E3C               	movwf	USART_Init@baud_rate+3,c
  2088                           
  2089                           ;main.c: 110: float temp;
  2090                           ;main.c: 111: TRISC6=0;
  2091  00105A  9C94               	bcf	3988,6,c	;volatile
  2092                           
  2093                           ;main.c: 112: TRISC7=1;
  2094  00105C  8E94               	bsf	3988,7,c	;volatile
  2095                           
  2096                           ;main.c: 115: temp= (( (float) (200000/64) / (float) baud_rate ) - 1); ;
  2097  00105E  C039  F009         	movff	USART_Init@baud_rate,?___altoft
  2098  001062  C03A  F00A         	movff	USART_Init@baud_rate+1,?___altoft+1
  2099  001066  C03B  F00B         	movff	USART_Init@baud_rate+2,?___altoft+2
  2100  00106A  C03C  F00C         	movff	USART_Init@baud_rate+3,?___altoft+3
  2101  00106E  EC68  F008         	call	___altoft	;wreg free
  2102  001072  C00B  F01F         	movff	?___altoft+2,?___ftdiv+5
  2103  001076  C00A  F01E         	movff	?___altoft+1,?___ftdiv+4
  2104  00107A  C009  F01D         	movff	?___altoft,?___ftdiv+3
  2105  00107E  0E50               	movlw	80
  2106  001080  6E1A               	movwf	?___ftdiv,c
  2107  001082  0E43               	movlw	67
  2108  001084  6E1B               	movwf	?___ftdiv+1,c
  2109  001086  0E45               	movlw	69
  2110  001088  6E1C               	movwf	?___ftdiv+2,c
  2111  00108A  EC21  F006         	call	___ftdiv	;wreg free
  2112  00108E  C01C  F02D         	movff	?___ftdiv+2,?___ftadd+2
  2113  001092  C01B  F02C         	movff	?___ftdiv+1,?___ftadd+1
  2114  001096  C01A  F02B         	movff	?___ftdiv,?___ftadd
  2115  00109A  0E00               	movlw	0
  2116  00109C  6E2E               	movwf	?___ftadd+3,c
  2117  00109E  0E80               	movlw	128
  2118  0010A0  6E2F               	movwf	?___ftadd+4,c
  2119  0010A2  0EBF               	movlw	191
  2120  0010A4  6E30               	movwf	?___ftadd+5,c
  2121  0010A6  EC0B  F004         	call	___ftadd	;wreg free
  2122  0010AA  C02D  F03F         	movff	?___ftadd+2,USART_Init@temp+2
  2123  0010AE  C02C  F03E         	movff	?___ftadd+1,USART_Init@temp+1
  2124  0010B2  C02B  F03D         	movff	?___ftadd,USART_Init@temp
  2125                           
  2126                           ;main.c: 116: SPBRG = (int) temp;
  2127  0010B6  C03D  F001         	movff	USART_Init@temp,?___fttol
  2128  0010BA  C03E  F002         	movff	USART_Init@temp+1,?___fttol+1
  2129  0010BE  C03F  F003         	movff	USART_Init@temp+2,?___fttol+2
  2130  0010C2  ECA0  F006         	call	___fttol	;wreg free
  2131  0010C6  5001               	movf	?___fttol,w,c
  2132  0010C8  6EAF               	movwf	4015,c	;volatile
  2133                           
  2134                           ;main.c: 119: RCSTA = 0x90;
  2135  0010CA  0E90               	movlw	144
  2136  0010CC  6EAB               	movwf	4011,c	;volatile
  2137  0010CE  0012               	return	
  2138  0010D0                     __end_of_USART_Init:
  2139                           	opt stack 0
  2140                           tblptru	equ	0xFF8
  2141                           tblptrh	equ	0xFF7
  2142                           tblptrl	equ	0xFF6
  2143                           tablat	equ	0xFF5
  2144                           prodh	equ	0xFF4
  2145                           prodl	equ	0xFF3
  2146                           postinc0	equ	0xFEE
  2147                           wreg	equ	0xFE8
  2148                           indf2	equ	0xFDF
  2149                           postinc2	equ	0xFDE
  2150                           postdec2	equ	0xFDD
  2151                           fsr2h	equ	0xFDA
  2152                           fsr2l	equ	0xFD9
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function ___fttol *****************
  2156 ;; Defined at:
  2157 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  f1              3    0[COMRAM] float 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  lval            4   10[COMRAM] unsigned long 
  2162 ;;  exp1            1   14[COMRAM] unsigned char 
  2163 ;;  sign1           1    9[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  4    0[COMRAM] long 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:         4       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2176 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:       15 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_USART_Init
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text13
  2187  000D40                     __ptext13:
  2188                           	opt stack 0
  2189  000D40                     ___fttol:
  2190                           	opt stack 29
  2191                           
  2192                           ;incstack = 0
  2193                           ;incstack = 0
  2194  000D40  0E0F               	movlw	15
  2195  000D42  6E05               	movwf	??___fttol& (0+255),c
  2196  000D44  C001  F006         	movff	___fttol@f1,??___fttol+1
  2197  000D48  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  2198  000D4C  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  2199  000D50  2805               	incf	??___fttol,w,c
  2200  000D52  6E09               	movwf	(??___fttol+4)& (0+255),c
  2201  000D54  D004               	goto	u150
  2202  000D56                     u155:
  2203  000D56  90D8               	bcf	status,0,c
  2204  000D58  3208               	rrcf	??___fttol+3,f,c
  2205  000D5A  3207               	rrcf	??___fttol+2,f,c
  2206  000D5C  3206               	rrcf	??___fttol+1,f,c
  2207  000D5E                     u150:
  2208  000D5E  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  2209  000D60  D7FA               	goto	u155
  2210  000D62  5006               	movf	??___fttol+1,w,c
  2211  000D64  6E0F               	movwf	___fttol@exp1,c
  2212  000D66  660F               	tstfsz	___fttol@exp1& (0+255),c
  2213  000D68  D001               	goto	l1046
  2214  000D6A  D035               	goto	u200
  2215  000D6C                     l1046:
  2216  000D6C  0E17               	movlw	23
  2217  000D6E  6E05               	movwf	??___fttol& (0+255),c
  2218  000D70  C001  F006         	movff	___fttol@f1,??___fttol+1
  2219  000D74  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  2220  000D78  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  2221  000D7C  2805               	incf	??___fttol,w,c
  2222  000D7E  6E09               	movwf	(??___fttol+4)& (0+255),c
  2223  000D80  D004               	goto	u170
  2224  000D82                     u175:
  2225  000D82  90D8               	bcf	status,0,c
  2226  000D84  3208               	rrcf	??___fttol+3,f,c
  2227  000D86  3207               	rrcf	??___fttol+2,f,c
  2228  000D88  3206               	rrcf	??___fttol+1,f,c
  2229  000D8A                     u170:
  2230  000D8A  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  2231  000D8C  D7FA               	goto	u175
  2232  000D8E  5006               	movf	??___fttol+1,w,c
  2233  000D90  6E0A               	movwf	___fttol@sign1,c
  2234  000D92  8E02               	bsf	___fttol@f1+1,7,c
  2235  000D94  0EFF               	movlw	255
  2236  000D96  1601               	andwf	___fttol@f1,f,c
  2237  000D98  0EFF               	movlw	255
  2238  000D9A  1602               	andwf	___fttol@f1+1,f,c
  2239  000D9C  0E00               	movlw	0
  2240  000D9E  1603               	andwf	___fttol@f1+2,f,c
  2241  000DA0  5001               	movf	___fttol@f1,w,c
  2242  000DA2  6E0B               	movwf	___fttol@lval,c
  2243  000DA4  5002               	movf	___fttol@f1+1,w,c
  2244  000DA6  6E0C               	movwf	___fttol@lval+1,c
  2245  000DA8  5003               	movf	___fttol@f1+2,w,c
  2246  000DAA  6E0D               	movwf	___fttol@lval+2,c
  2247  000DAC  6A0E               	clrf	___fttol@lval+3,c
  2248  000DAE  0E8E               	movlw	142
  2249  000DB0  5E0F               	subwf	___fttol@exp1,f,c
  2250  000DB2  AE0F               	btfss	___fttol@exp1,7,c
  2251  000DB4  D00D               	goto	l1068
  2252  000DB6  500F               	movf	___fttol@exp1,w,c
  2253  000DB8  0A80               	xorlw	128
  2254  000DBA  0F8F               	addlw	143
  2255  000DBC  A0D8               	btfss	status,0,c
  2256  000DBE  D00B               	goto	u200
  2257  000DC0                     l1064:
  2258  000DC0  90D8               	bcf	status,0,c
  2259  000DC2  320E               	rrcf	___fttol@lval+3,f,c
  2260  000DC4  320D               	rrcf	___fttol@lval+2,f,c
  2261  000DC6  320C               	rrcf	___fttol@lval+1,f,c
  2262  000DC8  320B               	rrcf	___fttol@lval,f,c
  2263  000DCA  3E0F               	incfsz	___fttol@exp1,f,c
  2264  000DCC  D7F9               	goto	l1064
  2265  000DCE  D014               	goto	l1078
  2266  000DD0                     l1068:
  2267  000DD0  0E17               	movlw	23
  2268  000DD2  640F               	cpfsgt	___fttol@exp1,c
  2269  000DD4  D00F               	goto	l1076
  2270  000DD6                     u200:
  2271  000DD6  0E00               	movlw	0
  2272  000DD8  6E01               	movwf	?___fttol,c
  2273  000DDA  0E00               	movlw	0
  2274  000DDC  6E02               	movwf	?___fttol+1,c
  2275  000DDE  0E00               	movlw	0
  2276  000DE0  6E03               	movwf	?___fttol+2,c
  2277  000DE2  0E00               	movlw	0
  2278  000DE4  6E04               	movwf	?___fttol+3,c
  2279  000DE6  D01B               	goto	l616
  2280  000DE8                     l1074:
  2281  000DE8  90D8               	bcf	status,0,c
  2282  000DEA  360B               	rlcf	___fttol@lval,f,c
  2283  000DEC  360C               	rlcf	___fttol@lval+1,f,c
  2284  000DEE  360D               	rlcf	___fttol@lval+2,f,c
  2285  000DF0  360E               	rlcf	___fttol@lval+3,f,c
  2286  000DF2  060F               	decf	___fttol@exp1,f,c
  2287  000DF4                     l1076:
  2288  000DF4  660F               	tstfsz	___fttol@exp1,c
  2289  000DF6  D7F8               	goto	l1074
  2290  000DF8                     l1078:
  2291  000DF8  500A               	movf	___fttol@sign1,w,c
  2292  000DFA  B4D8               	btfsc	status,2,c
  2293  000DFC  D008               	goto	l1082
  2294  000DFE  1E0E               	comf	___fttol@lval+3,f,c
  2295  000E00  1E0D               	comf	___fttol@lval+2,f,c
  2296  000E02  1E0C               	comf	___fttol@lval+1,f,c
  2297  000E04  6C0B               	negf	___fttol@lval,c
  2298  000E06  0E00               	movlw	0
  2299  000E08  220C               	addwfc	___fttol@lval+1,f,c
  2300  000E0A  220D               	addwfc	___fttol@lval+2,f,c
  2301  000E0C  220E               	addwfc	___fttol@lval+3,f,c
  2302  000E0E                     l1082:
  2303  000E0E  C00B  F001         	movff	___fttol@lval,?___fttol
  2304  000E12  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  2305  000E16  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  2306  000E1A  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  2307  000E1E                     l616:
  2308  000E1E  0012               	return	
  2309  000E20                     __end_of___fttol:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           indf2	equ	0xFDF
  2320                           postinc2	equ	0xFDE
  2321                           postdec2	equ	0xFDD
  2322                           fsr2h	equ	0xFDA
  2323                           fsr2l	equ	0xFD9
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function ___ftdiv *****************
  2327 ;; Defined at:
  2328 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  f1              3   25[COMRAM] float 
  2331 ;;  f2              3   28[COMRAM] float 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  f3              3   36[COMRAM] float 
  2334 ;;  sign            1   41[COMRAM] unsigned char 
  2335 ;;  exp             1   40[COMRAM] unsigned char 
  2336 ;;  cntr            1   39[COMRAM] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  3   25[COMRAM] float 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2346 ;;      Params:         6       0       0       0       0       0       0       0       0
  2347 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2348 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2349 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2350 ;;Total ram usage:       17 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    1
  2353 ;; This function calls:
  2354 ;;		___ftpack
  2355 ;; This function is called by:
  2356 ;;		_USART_Init
  2357 ;;		_Read_LDR
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text14
  2362  000C42                     __ptext14:
  2363                           	opt stack 0
  2364  000C42                     ___ftdiv:
  2365                           	opt stack 28
  2366                           
  2367                           ;incstack = 0
  2368                           ;incstack = 0
  2369  000C42  0E0F               	movlw	15
  2370  000C44  6E20               	movwf	??___ftdiv& (0+255),c
  2371  000C46  C01A  F021         	movff	___ftdiv@f1,??___ftdiv+1
  2372  000C4A  C01B  F022         	movff	___ftdiv@f1+1,??___ftdiv+2
  2373  000C4E  C01C  F023         	movff	___ftdiv@f1+2,??___ftdiv+3
  2374  000C52  2820               	incf	??___ftdiv,w,c
  2375  000C54  6E24               	movwf	(??___ftdiv+4)& (0+255),c
  2376  000C56  D004               	goto	u740
  2377  000C58                     u745:
  2378  000C58  90D8               	bcf	status,0,c
  2379  000C5A  3223               	rrcf	??___ftdiv+3,f,c
  2380  000C5C  3222               	rrcf	??___ftdiv+2,f,c
  2381  000C5E  3221               	rrcf	??___ftdiv+1,f,c
  2382  000C60                     u740:
  2383  000C60  2E24               	decfsz	(??___ftdiv+4)& (0+255),f,c
  2384  000C62  D7FA               	goto	u745
  2385  000C64  5021               	movf	??___ftdiv+1,w,c
  2386  000C66  6E29               	movwf	___ftdiv@exp,c
  2387  000C68  6629               	tstfsz	___ftdiv@exp& (0+255),c
  2388  000C6A  D001               	goto	l1438
  2389  000C6C  D015               	goto	u770
  2390  000C6E                     l1438:
  2391  000C6E  0E0F               	movlw	15
  2392  000C70  6E20               	movwf	??___ftdiv& (0+255),c
  2393  000C72  C01D  F021         	movff	___ftdiv@f2,??___ftdiv+1
  2394  000C76  C01E  F022         	movff	___ftdiv@f2+1,??___ftdiv+2
  2395  000C7A  C01F  F023         	movff	___ftdiv@f2+2,??___ftdiv+3
  2396  000C7E  2820               	incf	??___ftdiv,w,c
  2397  000C80  6E24               	movwf	(??___ftdiv+4)& (0+255),c
  2398  000C82  D004               	goto	u760
  2399  000C84                     u765:
  2400  000C84  90D8               	bcf	status,0,c
  2401  000C86  3223               	rrcf	??___ftdiv+3,f,c
  2402  000C88  3222               	rrcf	??___ftdiv+2,f,c
  2403  000C8A  3221               	rrcf	??___ftdiv+1,f,c
  2404  000C8C                     u760:
  2405  000C8C  2E24               	decfsz	(??___ftdiv+4)& (0+255),f,c
  2406  000C8E  D7FA               	goto	u765
  2407  000C90  5021               	movf	??___ftdiv+1,w,c
  2408  000C92  6E2A               	movwf	___ftdiv@sign,c
  2409  000C94  662A               	tstfsz	___ftdiv@sign& (0+255),c
  2410  000C96  D007               	goto	l1444
  2411  000C98                     u770:
  2412  000C98  0E00               	movlw	0
  2413  000C9A  6E1A               	movwf	?___ftdiv,c
  2414  000C9C  0E00               	movlw	0
  2415  000C9E  6E1B               	movwf	?___ftdiv+1,c
  2416  000CA0  0E00               	movlw	0
  2417  000CA2  6E1C               	movwf	?___ftdiv+2,c
  2418  000CA4  D04C               	goto	l581
  2419  000CA6                     l1444:
  2420  000CA6  0E00               	movlw	0
  2421  000CA8  6E25               	movwf	___ftdiv@f3,c
  2422  000CAA  0E00               	movlw	0
  2423  000CAC  6E26               	movwf	___ftdiv@f3+1,c
  2424  000CAE  0E00               	movlw	0
  2425  000CB0  6E27               	movwf	___ftdiv@f3+2,c
  2426  000CB2  502A               	movf	___ftdiv@sign,w,c
  2427  000CB4  0F89               	addlw	137
  2428  000CB6  5E29               	subwf	___ftdiv@exp,f,c
  2429  000CB8  C01C  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  2430  000CBC  501F               	movf	(___ftdiv@f2+2)& (0+255),w,c
  2431  000CBE  1A2A               	xorwf	___ftdiv@sign,f,c
  2432  000CC0  0E80               	movlw	128
  2433  000CC2  162A               	andwf	___ftdiv@sign,f,c
  2434  000CC4  8E1B               	bsf	___ftdiv@f1+1,7,c
  2435  000CC6  0EFF               	movlw	255
  2436  000CC8  161A               	andwf	___ftdiv@f1,f,c
  2437  000CCA  0EFF               	movlw	255
  2438  000CCC  161B               	andwf	___ftdiv@f1+1,f,c
  2439  000CCE  0E00               	movlw	0
  2440  000CD0  161C               	andwf	___ftdiv@f1+2,f,c
  2441  000CD2  8E1E               	bsf	___ftdiv@f2+1,7,c
  2442  000CD4  0EFF               	movlw	255
  2443  000CD6  161D               	andwf	___ftdiv@f2,f,c
  2444  000CD8  0EFF               	movlw	255
  2445  000CDA  161E               	andwf	___ftdiv@f2+1,f,c
  2446  000CDC  0E00               	movlw	0
  2447  000CDE  161F               	andwf	___ftdiv@f2+2,f,c
  2448  000CE0  6E20               	movwf	??___ftdiv& (0+255),c
  2449  000CE2  0E18               	movlw	24
  2450  000CE4  6E28               	movwf	___ftdiv@cntr,c
  2451  000CE6  5020               	movf	??___ftdiv& (0+255),w,c
  2452  000CE8                     l583:
  2453  000CE8  90D8               	bcf	status,0,c
  2454  000CEA  3625               	rlcf	___ftdiv@f3,f,c
  2455  000CEC  3626               	rlcf	___ftdiv@f3+1,f,c
  2456  000CEE  3627               	rlcf	___ftdiv@f3+2,f,c
  2457  000CF0  501D               	movf	___ftdiv@f2,w,c
  2458  000CF2  5C1A               	subwf	___ftdiv@f1,w,c
  2459  000CF4  501E               	movf	___ftdiv@f2+1,w,c
  2460  000CF6  581B               	subwfb	___ftdiv@f1+1,w,c
  2461  000CF8  501F               	movf	___ftdiv@f2+2,w,c
  2462  000CFA  581C               	subwfb	___ftdiv@f1+2,w,c
  2463  000CFC  A0D8               	btfss	status,0,c
  2464  000CFE  D007               	goto	l584
  2465  000D00  501D               	movf	___ftdiv@f2,w,c
  2466  000D02  5E1A               	subwf	___ftdiv@f1,f,c
  2467  000D04  501E               	movf	___ftdiv@f2+1,w,c
  2468  000D06  5A1B               	subwfb	___ftdiv@f1+1,f,c
  2469  000D08  501F               	movf	___ftdiv@f2+2,w,c
  2470  000D0A  5A1C               	subwfb	___ftdiv@f1+2,f,c
  2471  000D0C  8025               	bsf	___ftdiv@f3,0,c
  2472  000D0E                     l584:
  2473  000D0E  90D8               	bcf	status,0,c
  2474  000D10  361A               	rlcf	___ftdiv@f1,f,c
  2475  000D12  361B               	rlcf	___ftdiv@f1+1,f,c
  2476  000D14  361C               	rlcf	___ftdiv@f1+2,f,c
  2477  000D16  2E28               	decfsz	___ftdiv@cntr,f,c
  2478  000D18  D7E7               	goto	l583
  2479  000D1A  C025  F001         	movff	___ftdiv@f3,?___ftpack
  2480  000D1E  C026  F002         	movff	___ftdiv@f3+1,?___ftpack+1
  2481  000D22  C027  F003         	movff	___ftdiv@f3+2,?___ftpack+2
  2482  000D26  C029  F004         	movff	___ftdiv@exp,?___ftpack+3
  2483  000D2A  C02A  F005         	movff	___ftdiv@sign,?___ftpack+4
  2484  000D2E  EC6D  F007         	call	___ftpack	;wreg free
  2485  000D32  C003  F01C         	movff	?___ftpack+2,?___ftdiv+2
  2486  000D36  C002  F01B         	movff	?___ftpack+1,?___ftdiv+1
  2487  000D3A  C001  F01A         	movff	?___ftpack,?___ftdiv
  2488  000D3E                     l581:
  2489  000D3E  0012               	return	
  2490  000D40                     __end_of___ftdiv:
  2491                           	opt stack 0
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           prodh	equ	0xFF4
  2497                           prodl	equ	0xFF3
  2498                           postinc0	equ	0xFEE
  2499                           wreg	equ	0xFE8
  2500                           indf2	equ	0xFDF
  2501                           postinc2	equ	0xFDE
  2502                           postdec2	equ	0xFDD
  2503                           fsr2h	equ	0xFDA
  2504                           fsr2l	equ	0xFD9
  2505                           status	equ	0xFD8
  2506                           
  2507 ;; *************** function ___ftadd *****************
  2508 ;; Defined at:
  2509 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  f1              3   42[COMRAM] float 
  2512 ;;  f2              3   45[COMRAM] float 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  exp1            1   55[COMRAM] unsigned char 
  2515 ;;  exp2            1   54[COMRAM] unsigned char 
  2516 ;;  sign            1   53[COMRAM] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  3   42[COMRAM] float 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2526 ;;      Params:         6       0       0       0       0       0       0       0       0
  2527 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2528 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2529 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2530 ;;Total ram usage:       14 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    1
  2533 ;; This function calls:
  2534 ;;		___ftpack
  2535 ;; This function is called by:
  2536 ;;		_USART_Init
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text15
  2541  000816                     __ptext15:
  2542                           	opt stack 0
  2543  000816                     ___ftadd:
  2544                           	opt stack 28
  2545                           
  2546                           ;incstack = 0
  2547                           ;incstack = 0
  2548  000816  0E0F               	movlw	15
  2549  000818  6E31               	movwf	??___ftadd& (0+255),c
  2550  00081A  C02B  F032         	movff	___ftadd@f1,??___ftadd+1
  2551  00081E  C02C  F033         	movff	___ftadd@f1+1,??___ftadd+2
  2552  000822  C02D  F034         	movff	___ftadd@f1+2,??___ftadd+3
  2553  000826  2831               	incf	??___ftadd,w,c
  2554  000828  6E35               	movwf	(??___ftadd+4)& (0+255),c
  2555  00082A  D004               	goto	u530
  2556  00082C                     u535:
  2557  00082C  90D8               	bcf	status,0,c
  2558  00082E  3234               	rrcf	??___ftadd+3,f,c
  2559  000830  3233               	rrcf	??___ftadd+2,f,c
  2560  000832  3232               	rrcf	??___ftadd+1,f,c
  2561  000834                     u530:
  2562  000834  2E35               	decfsz	(??___ftadd+4)& (0+255),f,c
  2563  000836  D7FA               	goto	u535
  2564  000838  5032               	movf	??___ftadd+1,w,c
  2565  00083A  6E38               	movwf	___ftadd@exp1,c
  2566  00083C  0E0F               	movlw	15
  2567  00083E  6E31               	movwf	??___ftadd& (0+255),c
  2568  000840  C02E  F032         	movff	___ftadd@f2,??___ftadd+1
  2569  000844  C02F  F033         	movff	___ftadd@f2+1,??___ftadd+2
  2570  000848  C030  F034         	movff	___ftadd@f2+2,??___ftadd+3
  2571  00084C  2831               	incf	??___ftadd,w,c
  2572  00084E  6E35               	movwf	(??___ftadd+4)& (0+255),c
  2573  000850  D004               	goto	u540
  2574  000852                     u545:
  2575  000852  90D8               	bcf	status,0,c
  2576  000854  3234               	rrcf	??___ftadd+3,f,c
  2577  000856  3233               	rrcf	??___ftadd+2,f,c
  2578  000858  3232               	rrcf	??___ftadd+1,f,c
  2579  00085A                     u540:
  2580  00085A  2E35               	decfsz	(??___ftadd+4)& (0+255),f,c
  2581  00085C  D7FA               	goto	u545
  2582  00085E  5032               	movf	??___ftadd+1,w,c
  2583  000860  6E37               	movwf	___ftadd@exp2,c
  2584  000862  5038               	movf	___ftadd@exp1,w,c
  2585  000864  B4D8               	btfsc	status,2,c
  2586  000866  D00B               	goto	l549
  2587  000868  5037               	movf	___ftadd@exp2,w,c
  2588  00086A  6038               	cpfslt	___ftadd@exp1,c
  2589  00086C  D00F               	goto	l1370
  2590  00086E  5038               	movf	___ftadd@exp1,w,c
  2591  000870  0800               	sublw	0
  2592  000872  2437               	addwf	___ftadd@exp2,w,c
  2593  000874  6E31               	movwf	??___ftadd& (0+255),c
  2594  000876  0E19               	movlw	25
  2595  000878  5C31               	subwf	??___ftadd,w,c
  2596  00087A  A0D8               	btfss	status,0,c
  2597  00087C  D007               	goto	l1370
  2598  00087E                     l549:
  2599  00087E  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  2600  000882  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  2601  000886  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  2602  00088A  D0AA               	goto	l550
  2603  00088C                     l1370:
  2604  00088C  5037               	movf	___ftadd@exp2,w,c
  2605  00088E  B4D8               	btfsc	status,2,c
  2606  000890  D00B               	goto	l553
  2607  000892  5038               	movf	___ftadd@exp1,w,c
  2608  000894  6037               	cpfslt	___ftadd@exp2,c
  2609  000896  D00F               	goto	l1376
  2610  000898  5037               	movf	___ftadd@exp2,w,c
  2611  00089A  0800               	sublw	0
  2612  00089C  2438               	addwf	___ftadd@exp1,w,c
  2613  00089E  6E31               	movwf	??___ftadd& (0+255),c
  2614  0008A0  0E19               	movlw	25
  2615  0008A2  5C31               	subwf	??___ftadd,w,c
  2616  0008A4  A0D8               	btfss	status,0,c
  2617  0008A6  D007               	goto	l1376
  2618  0008A8                     l553:
  2619  0008A8  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  2620  0008AC  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  2621  0008B0  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  2622  0008B4  D095               	goto	l550
  2623  0008B6                     l1376:
  2624  0008B6  6E31               	movwf	??___ftadd& (0+255),c
  2625  0008B8  0E06               	movlw	6
  2626  0008BA  6E36               	movwf	___ftadd@sign,c
  2627  0008BC  5031               	movf	??___ftadd& (0+255),w,c
  2628  0008BE  BE2D               	btfsc	___ftadd@f1+2,7,c
  2629  0008C0  8E36               	bsf	___ftadd@sign,7,c
  2630  0008C2  BE30               	btfsc	___ftadd@f2+2,7,c
  2631  0008C4  8C36               	bsf	___ftadd@sign,6,c
  2632  0008C6  8E2C               	bsf	___ftadd@f1+1,7,c
  2633  0008C8  0EFF               	movlw	255
  2634  0008CA  162B               	andwf	___ftadd@f1,f,c
  2635  0008CC  0EFF               	movlw	255
  2636  0008CE  162C               	andwf	___ftadd@f1+1,f,c
  2637  0008D0  0E00               	movlw	0
  2638  0008D2  162D               	andwf	___ftadd@f1+2,f,c
  2639  0008D4  8E2F               	bsf	___ftadd@f2+1,7,c
  2640  0008D6  0EFF               	movlw	255
  2641  0008D8  162E               	andwf	___ftadd@f2,f,c
  2642  0008DA  0EFF               	movlw	255
  2643  0008DC  162F               	andwf	___ftadd@f2+1,f,c
  2644  0008DE  0E00               	movlw	0
  2645  0008E0  1630               	andwf	___ftadd@f2+2,f,c
  2646  0008E2  5037               	movf	___ftadd@exp2,w,c
  2647  0008E4  6038               	cpfslt	___ftadd@exp1,c
  2648  0008E6  D018               	goto	l1402
  2649  0008E8                     l1392:
  2650  0008E8  90D8               	bcf	status,0,c
  2651  0008EA  362E               	rlcf	___ftadd@f2,f,c
  2652  0008EC  362F               	rlcf	___ftadd@f2+1,f,c
  2653  0008EE  3630               	rlcf	___ftadd@f2+2,f,c
  2654  0008F0  0637               	decf	___ftadd@exp2,f,c
  2655  0008F2  5037               	movf	___ftadd@exp2,w,c
  2656  0008F4  1838               	xorwf	___ftadd@exp1,w,c
  2657  0008F6  B4D8               	btfsc	status,2,c
  2658  0008F8  D00B               	goto	l1400
  2659  0008FA  0636               	decf	___ftadd@sign,f,c
  2660  0008FC  5036               	movf	___ftadd@sign& (0+255),w,c
  2661  0008FE  0B07               	andlw	7
  2662  000900  B4D8               	btfsc	status,2,c
  2663  000902  D006               	goto	l1400
  2664  000904  D7F1               	goto	l1392
  2665  000906                     l1398:
  2666  000906  90D8               	bcf	status,0,c
  2667  000908  322D               	rrcf	___ftadd@f1+2,f,c
  2668  00090A  322C               	rrcf	___ftadd@f1+1,f,c
  2669  00090C  322B               	rrcf	___ftadd@f1,f,c
  2670  00090E  2A38               	incf	___ftadd@exp1,f,c
  2671  000910                     l1400:
  2672  000910  5037               	movf	___ftadd@exp2,w,c
  2673  000912  6238               	cpfseq	___ftadd@exp1,c
  2674  000914  D7F8               	goto	l1398
  2675  000916  D01A               	goto	l564
  2676  000918                     l1402:
  2677  000918  5038               	movf	___ftadd@exp1,w,c
  2678  00091A  6037               	cpfslt	___ftadd@exp2,c
  2679  00091C  D017               	goto	l564
  2680  00091E                     l1404:
  2681  00091E  90D8               	bcf	status,0,c
  2682  000920  362B               	rlcf	___ftadd@f1,f,c
  2683  000922  362C               	rlcf	___ftadd@f1+1,f,c
  2684  000924  362D               	rlcf	___ftadd@f1+2,f,c
  2685  000926  0638               	decf	___ftadd@exp1,f,c
  2686  000928  5037               	movf	___ftadd@exp2,w,c
  2687  00092A  1838               	xorwf	___ftadd@exp1,w,c
  2688  00092C  B4D8               	btfsc	status,2,c
  2689  00092E  D00B               	goto	l1412
  2690  000930  0636               	decf	___ftadd@sign,f,c
  2691  000932  5036               	movf	___ftadd@sign& (0+255),w,c
  2692  000934  0B07               	andlw	7
  2693  000936  B4D8               	btfsc	status,2,c
  2694  000938  D006               	goto	l1412
  2695  00093A  D7F1               	goto	l1404
  2696  00093C                     l1410:
  2697  00093C  90D8               	bcf	status,0,c
  2698  00093E  3230               	rrcf	___ftadd@f2+2,f,c
  2699  000940  322F               	rrcf	___ftadd@f2+1,f,c
  2700  000942  322E               	rrcf	___ftadd@f2,f,c
  2701  000944  2A37               	incf	___ftadd@exp2,f,c
  2702  000946                     l1412:
  2703  000946  5037               	movf	___ftadd@exp2,w,c
  2704  000948  6238               	cpfseq	___ftadd@exp1,c
  2705  00094A  D7F8               	goto	l1410
  2706  00094C                     l564:
  2707  00094C  AE36               	btfss	___ftadd@sign,7,c
  2708  00094E  D00C               	goto	l573
  2709  000950  0EFF               	movlw	255
  2710  000952  1A2B               	xorwf	___ftadd@f1,f,c
  2711  000954  0EFF               	movlw	255
  2712  000956  1A2C               	xorwf	___ftadd@f1+1,f,c
  2713  000958  0EFF               	movlw	255
  2714  00095A  1A2D               	xorwf	___ftadd@f1+2,f,c
  2715  00095C  0E01               	movlw	1
  2716  00095E  262B               	addwf	___ftadd@f1,f,c
  2717  000960  0E00               	movlw	0
  2718  000962  222C               	addwfc	___ftadd@f1+1,f,c
  2719  000964  0E00               	movlw	0
  2720  000966  222D               	addwfc	___ftadd@f1+2,f,c
  2721  000968                     l573:
  2722  000968  AC36               	btfss	___ftadd@sign,6,c
  2723  00096A  D00C               	goto	l1418
  2724  00096C  0EFF               	movlw	255
  2725  00096E  1A2E               	xorwf	___ftadd@f2,f,c
  2726  000970  0EFF               	movlw	255
  2727  000972  1A2F               	xorwf	___ftadd@f2+1,f,c
  2728  000974  0EFF               	movlw	255
  2729  000976  1A30               	xorwf	___ftadd@f2+2,f,c
  2730  000978  0E01               	movlw	1
  2731  00097A  262E               	addwf	___ftadd@f2,f,c
  2732  00097C  0E00               	movlw	0
  2733  00097E  222F               	addwfc	___ftadd@f2+1,f,c
  2734  000980  0E00               	movlw	0
  2735  000982  2230               	addwfc	___ftadd@f2+2,f,c
  2736  000984                     l1418:
  2737  000984  6E31               	movwf	??___ftadd& (0+255),c
  2738  000986  0E00               	movlw	0
  2739  000988  6E36               	movwf	___ftadd@sign,c
  2740  00098A  5031               	movf	??___ftadd& (0+255),w,c
  2741  00098C  502B               	movf	___ftadd@f1,w,c
  2742  00098E  262E               	addwf	___ftadd@f2,f,c
  2743  000990  502C               	movf	___ftadd@f1+1,w,c
  2744  000992  222F               	addwfc	___ftadd@f2+1,f,c
  2745  000994  502D               	movf	___ftadd@f1+2,w,c
  2746  000996  2230               	addwfc	___ftadd@f2+2,f,c
  2747  000998  AE30               	btfss	___ftadd@f2+2,7,c
  2748  00099A  D010               	goto	l1428
  2749  00099C  0EFF               	movlw	255
  2750  00099E  1A2E               	xorwf	___ftadd@f2,f,c
  2751  0009A0  0EFF               	movlw	255
  2752  0009A2  1A2F               	xorwf	___ftadd@f2+1,f,c
  2753  0009A4  0EFF               	movlw	255
  2754  0009A6  1A30               	xorwf	___ftadd@f2+2,f,c
  2755  0009A8  0E01               	movlw	1
  2756  0009AA  262E               	addwf	___ftadd@f2,f,c
  2757  0009AC  0E00               	movlw	0
  2758  0009AE  222F               	addwfc	___ftadd@f2+1,f,c
  2759  0009B0  0E00               	movlw	0
  2760  0009B2  2230               	addwfc	___ftadd@f2+2,f,c
  2761  0009B4  6E31               	movwf	??___ftadd& (0+255),c
  2762  0009B6  0E01               	movlw	1
  2763  0009B8  6E36               	movwf	___ftadd@sign,c
  2764  0009BA  5031               	movf	??___ftadd& (0+255),w,c
  2765  0009BC                     l1428:
  2766  0009BC  C02E  F001         	movff	___ftadd@f2,?___ftpack
  2767  0009C0  C02F  F002         	movff	___ftadd@f2+1,?___ftpack+1
  2768  0009C4  C030  F003         	movff	___ftadd@f2+2,?___ftpack+2
  2769  0009C8  C038  F004         	movff	___ftadd@exp1,?___ftpack+3
  2770  0009CC  C036  F005         	movff	___ftadd@sign,?___ftpack+4
  2771  0009D0  EC6D  F007         	call	___ftpack	;wreg free
  2772  0009D4  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  2773  0009D8  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  2774  0009DC  C001  F02B         	movff	?___ftpack,?___ftadd
  2775  0009E0                     l550:
  2776  0009E0  0012               	return	
  2777  0009E2                     __end_of___ftadd:
  2778                           	opt stack 0
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           prodh	equ	0xFF4
  2784                           prodl	equ	0xFF3
  2785                           postinc0	equ	0xFEE
  2786                           wreg	equ	0xFE8
  2787                           indf2	equ	0xFDF
  2788                           postinc2	equ	0xFDE
  2789                           postdec2	equ	0xFDD
  2790                           fsr2h	equ	0xFDA
  2791                           fsr2l	equ	0xFD9
  2792                           status	equ	0xFD8
  2793                           
  2794 ;; *************** function ___altoft *****************
  2795 ;; Defined at:
  2796 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\altoft.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  c               4    8[COMRAM] long 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  sign            1   17[COMRAM] unsigned char 
  2801 ;;  exp             1   16[COMRAM] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  3    8[COMRAM] float 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2811 ;;      Params:         4       0       0       0       0       0       0       0       0
  2812 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2813 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2814 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2815 ;;Total ram usage:       10 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    1
  2818 ;; This function calls:
  2819 ;;		___ftpack
  2820 ;; This function is called by:
  2821 ;;		_USART_Init
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text16
  2826  0010D0                     __ptext16:
  2827                           	opt stack 0
  2828  0010D0                     ___altoft:
  2829                           	opt stack 28
  2830                           
  2831                           ;incstack = 0
  2832                           ;incstack = 0
  2833  0010D0  6E0D               	movwf	??___altoft& (0+255),c
  2834  0010D2  0E00               	movlw	0
  2835  0010D4  6E12               	movwf	___altoft@sign,c
  2836  0010D6  500D               	movf	??___altoft& (0+255),w,c
  2837  0010D8  6E0D               	movwf	??___altoft& (0+255),c
  2838  0010DA  0E8E               	movlw	142
  2839  0010DC  6E11               	movwf	___altoft@exp,c
  2840  0010DE  500D               	movf	??___altoft& (0+255),w,c
  2841  0010E0  AE0C               	btfss	___altoft@c+3,7,c
  2842  0010E2  D013               	goto	l1166
  2843  0010E4  1E0C               	comf	___altoft@c+3,f,c
  2844  0010E6  1E0B               	comf	___altoft@c+2,f,c
  2845  0010E8  1E0A               	comf	___altoft@c+1,f,c
  2846  0010EA  6C09               	negf	___altoft@c,c
  2847  0010EC  0E00               	movlw	0
  2848  0010EE  220A               	addwfc	___altoft@c+1,f,c
  2849  0010F0  220B               	addwfc	___altoft@c+2,f,c
  2850  0010F2  220C               	addwfc	___altoft@c+3,f,c
  2851  0010F4  6E0D               	movwf	??___altoft& (0+255),c
  2852  0010F6  0E01               	movlw	1
  2853  0010F8  6E12               	movwf	___altoft@sign,c
  2854  0010FA  500D               	movf	??___altoft& (0+255),w,c
  2855  0010FC  D006               	goto	l1166
  2856  0010FE                     l1164:
  2857  0010FE  90D8               	bcf	status,0,c
  2858  001100  320C               	rrcf	___altoft@c+3,f,c
  2859  001102  320B               	rrcf	___altoft@c+2,f,c
  2860  001104  320A               	rrcf	___altoft@c+1,f,c
  2861  001106  3209               	rrcf	___altoft@c,f,c
  2862  001108  2A11               	incf	___altoft@exp,f,c
  2863  00110A                     l1166:
  2864  00110A  0E00               	movlw	0
  2865  00110C  1409               	andwf	___altoft@c,w,c
  2866  00110E  6E0D               	movwf	??___altoft& (0+255),c
  2867  001110  0E00               	movlw	0
  2868  001112  140A               	andwf	___altoft@c+1,w,c
  2869  001114  6E0E               	movwf	(??___altoft+1)& (0+255),c
  2870  001116  0E00               	movlw	0
  2871  001118  140B               	andwf	___altoft@c+2,w,c
  2872  00111A  6E0F               	movwf	(??___altoft+2)& (0+255),c
  2873  00111C  0EFF               	movlw	255
  2874  00111E  140C               	andwf	___altoft@c+3,w,c
  2875  001120  6E10               	movwf	(??___altoft+3)& (0+255),c
  2876  001122  5010               	movf	??___altoft+3,w,c
  2877  001124  100D               	iorwf	??___altoft,w,c
  2878  001126  100E               	iorwf	??___altoft+1,w,c
  2879  001128  100F               	iorwf	??___altoft+2,w,c
  2880  00112A  A4D8               	btfss	status,2,c
  2881  00112C  D7E8               	goto	l1164
  2882  00112E  C009  F001         	movff	___altoft@c,?___ftpack
  2883  001132  C00A  F002         	movff	___altoft@c+1,?___ftpack+1
  2884  001136  C00B  F003         	movff	___altoft@c+2,?___ftpack+2
  2885  00113A  C011  F004         	movff	___altoft@exp,?___ftpack+3
  2886  00113E  C012  F005         	movff	___altoft@sign,?___ftpack+4
  2887  001142  EC6D  F007         	call	___ftpack	;wreg free
  2888  001146  C003  F00B         	movff	?___ftpack+2,?___altoft+2
  2889  00114A  C002  F00A         	movff	?___ftpack+1,?___altoft+1
  2890  00114E  C001  F009         	movff	?___ftpack,?___altoft
  2891  001152  0012               	return	
  2892  001154                     __end_of___altoft:
  2893                           	opt stack 0
  2894                           tblptru	equ	0xFF8
  2895                           tblptrh	equ	0xFF7
  2896                           tblptrl	equ	0xFF6
  2897                           tablat	equ	0xFF5
  2898                           prodh	equ	0xFF4
  2899                           prodl	equ	0xFF3
  2900                           postinc0	equ	0xFEE
  2901                           wreg	equ	0xFE8
  2902                           indf2	equ	0xFDF
  2903                           postinc2	equ	0xFDE
  2904                           postdec2	equ	0xFDD
  2905                           fsr2h	equ	0xFDA
  2906                           fsr2l	equ	0xFD9
  2907                           status	equ	0xFD8
  2908                           
  2909 ;; *************** function ___ftpack *****************
  2910 ;; Defined at:
  2911 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  arg             3    0[COMRAM] unsigned um
  2914 ;;  exp             1    3[COMRAM] unsigned char 
  2915 ;;  sign            1    4[COMRAM] unsigned char 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  3    0[COMRAM] float 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2927 ;;      Params:         5       0       0       0       0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2929 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2930 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2931 ;;Total ram usage:        8 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		___altoft
  2937 ;;		___awtoft
  2938 ;;		___ftadd
  2939 ;;		___ftdiv
  2940 ;;		___ftmul
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text17
  2945  000EDA                     __ptext17:
  2946                           	opt stack 0
  2947  000EDA                     ___ftpack:
  2948                           	opt stack 28
  2949                           
  2950                           ;incstack = 0
  2951                           ;incstack = 0
  2952  000EDA  5004               	movf	___ftpack@exp,w,c
  2953  000EDC  B4D8               	btfsc	status,2,c
  2954  000EDE  D005               	goto	l1010
  2955  000EE0  5001               	movf	___ftpack@arg,w,c
  2956  000EE2  1002               	iorwf	___ftpack@arg+1,w,c
  2957  000EE4  1003               	iorwf	___ftpack@arg+2,w,c
  2958  000EE6  A4D8               	btfss	status,2,c
  2959  000EE8  D00C               	goto	l1016
  2960  000EEA                     l1010:
  2961  000EEA  0E00               	movlw	0
  2962  000EEC  6E01               	movwf	?___ftpack,c
  2963  000EEE  0E00               	movlw	0
  2964  000EF0  6E02               	movwf	?___ftpack+1,c
  2965  000EF2  0E00               	movlw	0
  2966  000EF4  6E03               	movwf	?___ftpack+2,c
  2967  000EF6  D04C               	goto	l512
  2968  000EF8                     l1014:
  2969  000EF8  2A04               	incf	___ftpack@exp,f,c
  2970  000EFA  90D8               	bcf	status,0,c
  2971  000EFC  3203               	rrcf	___ftpack@arg+2,f,c
  2972  000EFE  3202               	rrcf	___ftpack@arg+1,f,c
  2973  000F00  3201               	rrcf	___ftpack@arg,f,c
  2974  000F02                     l1016:
  2975  000F02  0E00               	movlw	0
  2976  000F04  1401               	andwf	___ftpack@arg,w,c
  2977  000F06  6E06               	movwf	??___ftpack& (0+255),c
  2978  000F08  0E00               	movlw	0
  2979  000F0A  1402               	andwf	___ftpack@arg+1,w,c
  2980  000F0C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2981  000F0E  0EFE               	movlw	254
  2982  000F10  1403               	andwf	___ftpack@arg+2,w,c
  2983  000F12  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2984  000F14  5006               	movf	??___ftpack,w,c
  2985  000F16  1007               	iorwf	??___ftpack+1,w,c
  2986  000F18  1008               	iorwf	??___ftpack+2,w,c
  2987  000F1A  B4D8               	btfsc	status,2,c
  2988  000F1C  D00C               	goto	l1022
  2989  000F1E  D7EC               	goto	l1014
  2990  000F20                     l1018:
  2991  000F20  2A04               	incf	___ftpack@exp,f,c
  2992  000F22  0E01               	movlw	1
  2993  000F24  2601               	addwf	___ftpack@arg,f,c
  2994  000F26  0E00               	movlw	0
  2995  000F28  2202               	addwfc	___ftpack@arg+1,f,c
  2996  000F2A  0E00               	movlw	0
  2997  000F2C  2203               	addwfc	___ftpack@arg+2,f,c
  2998  000F2E  90D8               	bcf	status,0,c
  2999  000F30  3203               	rrcf	___ftpack@arg+2,f,c
  3000  000F32  3202               	rrcf	___ftpack@arg+1,f,c
  3001  000F34  3201               	rrcf	___ftpack@arg,f,c
  3002  000F36                     l1022:
  3003  000F36  0E00               	movlw	0
  3004  000F38  1401               	andwf	___ftpack@arg,w,c
  3005  000F3A  6E06               	movwf	??___ftpack& (0+255),c
  3006  000F3C  0E00               	movlw	0
  3007  000F3E  1402               	andwf	___ftpack@arg+1,w,c
  3008  000F40  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3009  000F42  0EFF               	movlw	255
  3010  000F44  1403               	andwf	___ftpack@arg+2,w,c
  3011  000F46  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3012  000F48  5006               	movf	??___ftpack,w,c
  3013  000F4A  1007               	iorwf	??___ftpack+1,w,c
  3014  000F4C  1008               	iorwf	??___ftpack+2,w,c
  3015  000F4E  B4D8               	btfsc	status,2,c
  3016  000F50  D006               	goto	l1026
  3017  000F52  D7E6               	goto	l1018
  3018  000F54                     l1024:
  3019  000F54  0604               	decf	___ftpack@exp,f,c
  3020  000F56  90D8               	bcf	status,0,c
  3021  000F58  3601               	rlcf	___ftpack@arg,f,c
  3022  000F5A  3602               	rlcf	___ftpack@arg+1,f,c
  3023  000F5C  3603               	rlcf	___ftpack@arg+2,f,c
  3024  000F5E                     l1026:
  3025  000F5E  AE02               	btfss	___ftpack@arg+1,7,c
  3026  000F60  D7F9               	goto	l1024
  3027  000F62  A004               	btfss	___ftpack@exp,0,c
  3028  000F64  9E02               	bcf	___ftpack@arg+1,7,c
  3029  000F66  90D8               	bcf	status,0,c
  3030  000F68  3204               	rrcf	___ftpack@exp,f,c
  3031  000F6A  5004               	movf	___ftpack@exp,w,c
  3032  000F6C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3033  000F6E  6A07               	clrf	(??___ftpack+1)& (0+255),c
  3034  000F70  6A06               	clrf	??___ftpack& (0+255),c
  3035  000F72  5006               	movf	??___ftpack,w,c
  3036  000F74  1201               	iorwf	___ftpack@arg,f,c
  3037  000F76  5007               	movf	??___ftpack+1,w,c
  3038  000F78  1202               	iorwf	___ftpack@arg+1,f,c
  3039  000F7A  5008               	movf	??___ftpack+2,w,c
  3040  000F7C  1203               	iorwf	___ftpack@arg+2,f,c
  3041  000F7E  5005               	movf	___ftpack@sign,w,c
  3042  000F80  A4D8               	btfss	status,2,c
  3043  000F82  8E03               	bsf	___ftpack@arg+2,7,c
  3044  000F84  C001  F001         	movff	___ftpack@arg,?___ftpack
  3045  000F88  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3046  000F8C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3047  000F90                     l512:
  3048  000F90  0012               	return	
  3049  000F92                     __end_of___ftpack:
  3050                           	opt stack 0
  3051                           tblptru	equ	0xFF8
  3052                           tblptrh	equ	0xFF7
  3053                           tblptrl	equ	0xFF6
  3054                           tablat	equ	0xFF5
  3055                           prodh	equ	0xFF4
  3056                           prodl	equ	0xFF3
  3057                           postinc0	equ	0xFEE
  3058                           wreg	equ	0xFE8
  3059                           indf2	equ	0xFDF
  3060                           postinc2	equ	0xFDE
  3061                           postdec2	equ	0xFDD
  3062                           fsr2h	equ	0xFDA
  3063                           fsr2l	equ	0xFD9
  3064                           status	equ	0xFD8
  3065                           
  3066 ;; *************** function _Init_AD *****************
  3067 ;; Defined at:
  3068 ;;		line 197 in file "main.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;		None               void
  3075 ;; Registers used:
  3076 ;;		wreg, status,2
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text18
  3096  001482                     __ptext18:
  3097                           	opt stack 0
  3098  001482                     _Init_AD:
  3099                           	opt stack 30
  3100                           
  3101                           ;main.c: 198: TRISA0 = 1;
  3102                           
  3103                           ;incstack = 0
  3104                           ;incstack = 0
  3105  001482  8092               	bsf	3986,0,c	;volatile
  3106                           
  3107                           ;main.c: 199: ADCON1 = 0x0e;
  3108  001484  0E0E               	movlw	14
  3109  001486  6EC1               	movwf	4033,c	;volatile
  3110                           
  3111                           ;main.c: 200: ADCON2 = 0x92;
  3112  001488  0E92               	movlw	146
  3113  00148A  6EC0               	movwf	4032,c	;volatile
  3114                           
  3115                           ;main.c: 201: ADRESH=0;
  3116  00148C  0E00               	movlw	0
  3117  00148E  6EC4               	movwf	4036,c	;volatile
  3118                           
  3119                           ;main.c: 202: ADRESL=0;
  3120  001490  0E00               	movlw	0
  3121  001492  6EC3               	movwf	4035,c	;volatile
  3122  001494  0012               	return	
  3123  001496                     __end_of_Init_AD:
  3124                           	opt stack 0
  3125                           tblptru	equ	0xFF8
  3126                           tblptrh	equ	0xFF7
  3127                           tblptrl	equ	0xFF6
  3128                           tablat	equ	0xFF5
  3129                           prodh	equ	0xFF4
  3130                           prodl	equ	0xFF3
  3131                           postinc0	equ	0xFEE
  3132                           wreg	equ	0xFE8
  3133                           indf2	equ	0xFDF
  3134                           postinc2	equ	0xFDE
  3135                           postdec2	equ	0xFDD
  3136                           fsr2h	equ	0xFDA
  3137                           fsr2l	equ	0xFD9
  3138                           status	equ	0xFD8
  3139                           
  3140 ;; *************** function _Timer1_Init *****************
  3141 ;; Defined at:
  3142 ;;		line 154 in file "main.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;		None               void
  3149 ;; Registers used:
  3150 ;;		wreg, status,2
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text19
  3170  001496                     __ptext19:
  3171                           	opt stack 0
  3172  001496                     _Timer1_Init:
  3173                           	opt stack 30
  3174                           
  3175                           ;main.c: 155: T1CONbits.RD16=1;
  3176                           
  3177                           ;incstack = 0
  3178                           ;incstack = 0
  3179  001496  8ECD               	bsf	4045,7,c	;volatile
  3180                           
  3181                           ;main.c: 156: T1CONbits.T1CKPS=0b00;
  3182  001498  0ECF               	movlw	-49
  3183  00149A  16CD               	andwf	4045,f,c	;volatile
  3184                           
  3185                           ;main.c: 157: T1CONbits.TMR1CS=0;
  3186  00149C  92CD               	bcf	4045,1,c	;volatile
  3187                           
  3188                           ;main.c: 158: TMR1=0;
  3189  00149E  0E00               	movlw	0
  3190  0014A0  6ECF               	movwf	4047,c	;volatile
  3191  0014A2  0E00               	movlw	0
  3192  0014A4  6ECE               	movwf	4046,c	;volatile
  3193                           
  3194                           ;main.c: 159: TMR1ON=0;
  3195  0014A6  90CD               	bcf	4045,0,c	;volatile
  3196  0014A8  0012               	return	
  3197  0014AA                     __end_of_Timer1_Init:
  3198                           	opt stack 0
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           prodh	equ	0xFF4
  3204                           prodl	equ	0xFF3
  3205                           postinc0	equ	0xFEE
  3206                           wreg	equ	0xFE8
  3207                           indf2	equ	0xFDF
  3208                           postinc2	equ	0xFDE
  3209                           postdec2	equ	0xFDD
  3210                           fsr2h	equ	0xFDA
  3211                           fsr2l	equ	0xFD9
  3212                           status	equ	0xFD8
  3213                           
  3214 ;; *************** function _Configuracion_Registros *****************
  3215 ;; Defined at:
  3216 ;;		line 143 in file "main.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text20
  3244  0014BC                     __ptext20:
  3245                           	opt stack 0
  3246  0014BC                     _Configuracion_Registros:
  3247                           	opt stack 30
  3248                           
  3249                           ;main.c: 144: ADCON1bits.PCFG=0b1111;
  3250                           
  3251                           ;incstack = 0
  3252                           ;incstack = 0
  3253  0014BC  80C1               	bsf	4033,0,c	;volatile
  3254  0014BE  82C1               	bsf	4033,1,c	;volatile
  3255  0014C0  84C1               	bsf	4033,2,c	;volatile
  3256  0014C2  86C1               	bsf	4033,3,c	;volatile
  3257                           
  3258                           ;main.c: 145: TRISA&=~(1<<1);
  3259  0014C4  9292               	bcf	3986,1,c	;volatile
  3260                           
  3261                           ;main.c: 146: TRISA|=(1<<2);
  3262  0014C6  8492               	bsf	3986,2,c	;volatile
  3263                           
  3264                           ;main.c: 148: TRISB = 0;
  3265  0014C8  0E00               	movlw	0
  3266  0014CA  6E93               	movwf	3987,c	;volatile
  3267  0014CC  0012               	return	
  3268  0014CE                     __end_of_Configuracion_Registros:
  3269                           	opt stack 0
  3270                           tblptru	equ	0xFF8
  3271                           tblptrh	equ	0xFF7
  3272                           tblptrl	equ	0xFF6
  3273                           tablat	equ	0xFF5
  3274                           prodh	equ	0xFF4
  3275                           prodl	equ	0xFF3
  3276                           postinc0	equ	0xFEE
  3277                           wreg	equ	0xFE8
  3278                           indf2	equ	0xFDF
  3279                           postinc2	equ	0xFDE
  3280                           postdec2	equ	0xFDD
  3281                           fsr2h	equ	0xFDA
  3282                           fsr2l	equ	0xFD9
  3283                           status	equ	0xFD8
  3284                           
  3285 ;; *************** function _lcd_init *****************
  3286 ;; Defined at:
  3287 ;;		line 95 in file "lcd.h"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;		None               void
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3303 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3304 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3305 ;;Total ram usage:        1 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    2
  3308 ;; This function calls:
  3309 ;;		_Lcd_Port
  3310 ;;		_Lcd_Cmd
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text21
  3317  000F92                     __ptext21:
  3318                           	opt stack 0
  3319  000F92                     _lcd_init:
  3320                           	opt stack 28
  3321                           
  3322                           ;lcd.h: 96: TRISD=0x00;
  3323                           
  3324                           ;incstack = 0
  3325                           ;incstack = 0
  3326  000F92  0E00               	movlw	0
  3327  000F94  6E95               	movwf	3989,c	;volatile
  3328                           
  3329                           ;lcd.h: 97: Lcd_Port(0x00);
  3330  000F96  6E04               	movwf	??_lcd_init& (0+255),c
  3331  000F98  0E00               	movlw	0
  3332  000F9A  6E01               	movwf	?_Lcd_Port,c
  3333  000F9C  5004               	movf	??_lcd_init& (0+255),w,c
  3334  000F9E  EC11  F00A         	call	_Lcd_Port	;wreg free
  3335                           
  3336                           ;lcd.h: 98: _delay((unsigned long)((20)*(8000000/4000.0)));
  3337  000FA2  0E34               	movlw	52
  3338  000FA4  6E04               	movwf	??_lcd_init& (0+255),c
  3339  000FA6  0EF1               	movlw	241
  3340  000FA8                     u1167:
  3341  000FA8  2EE8               	decfsz	wreg,f,c
  3342  000FAA  D7FE               	goto	u1167
  3343  000FAC  2E04               	decfsz	??_lcd_init& (0+255),f,c
  3344  000FAE  D7FC               	goto	u1167
  3345  000FB0  D000               	nop2	
  3346                           
  3347                           ;lcd.h: 99: Lcd_Cmd(0x03);
  3348  000FB2  6E04               	movwf	??_lcd_init& (0+255),c
  3349  000FB4  0E03               	movlw	3
  3350  000FB6  6E02               	movwf	?_Lcd_Cmd,c
  3351  000FB8  5004               	movf	??_lcd_init& (0+255),w,c
  3352  000FBA  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3353                           
  3354                           ;lcd.h: 100: _delay((unsigned long)((5)*(8000000/4000.0)));
  3355  000FBE  0E0D               	movlw	13
  3356  000FC0  6E04               	movwf	??_lcd_init& (0+255),c
  3357  000FC2  0EFB               	movlw	251
  3358  000FC4                     u1177:
  3359  000FC4  2EE8               	decfsz	wreg,f,c
  3360  000FC6  D7FE               	goto	u1177
  3361  000FC8  2E04               	decfsz	??_lcd_init& (0+255),f,c
  3362  000FCA  D7FC               	goto	u1177
  3363  000FCC  D000               	nop2	
  3364                           
  3365                           ;lcd.h: 101: Lcd_Cmd(0x03);
  3366  000FCE  6E04               	movwf	??_lcd_init& (0+255),c
  3367  000FD0  0E03               	movlw	3
  3368  000FD2  6E02               	movwf	?_Lcd_Cmd,c
  3369  000FD4  5004               	movf	??_lcd_init& (0+255),w,c
  3370  000FD6  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3371                           
  3372                           ;lcd.h: 102: _delay((unsigned long)((11)*(8000000/4000.0)));
  3373  000FDA  0E1D               	movlw	29
  3374  000FDC  6E04               	movwf	??_lcd_init& (0+255),c
  3375  000FDE  0E91               	movlw	145
  3376  000FE0                     u1187:
  3377  000FE0  2EE8               	decfsz	wreg,f,c
  3378  000FE2  D7FE               	goto	u1187
  3379  000FE4  2E04               	decfsz	??_lcd_init& (0+255),f,c
  3380  000FE6  D7FC               	goto	u1187
  3381                           
  3382                           ;lcd.h: 103: Lcd_Cmd(0x03);
  3383  000FE8  6E04               	movwf	??_lcd_init& (0+255),c
  3384  000FEA  0E03               	movlw	3
  3385  000FEC  6E02               	movwf	?_Lcd_Cmd,c
  3386  000FEE  5004               	movf	??_lcd_init& (0+255),w,c
  3387  000FF0  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3388                           
  3389                           ;lcd.h: 105: Lcd_Cmd(0x02);
  3390  000FF4  6E04               	movwf	??_lcd_init& (0+255),c
  3391  000FF6  0E02               	movlw	2
  3392  000FF8  6E02               	movwf	?_Lcd_Cmd,c
  3393  000FFA  5004               	movf	??_lcd_init& (0+255),w,c
  3394  000FFC  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3395                           
  3396                           ;lcd.h: 106: Lcd_Cmd(0x02);
  3397  001000  6E04               	movwf	??_lcd_init& (0+255),c
  3398  001002  0E02               	movlw	2
  3399  001004  6E02               	movwf	?_Lcd_Cmd,c
  3400  001006  5004               	movf	??_lcd_init& (0+255),w,c
  3401  001008  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3402                           
  3403                           ;lcd.h: 107: Lcd_Cmd(0x08);
  3404  00100C  6E04               	movwf	??_lcd_init& (0+255),c
  3405  00100E  0E08               	movlw	8
  3406  001010  6E02               	movwf	?_Lcd_Cmd,c
  3407  001012  5004               	movf	??_lcd_init& (0+255),w,c
  3408  001014  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3409                           
  3410                           ;lcd.h: 108: Lcd_Cmd(0x00);
  3411  001018  6E04               	movwf	??_lcd_init& (0+255),c
  3412  00101A  0E00               	movlw	0
  3413  00101C  6E02               	movwf	?_Lcd_Cmd,c
  3414  00101E  5004               	movf	??_lcd_init& (0+255),w,c
  3415  001020  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3416                           
  3417                           ;lcd.h: 109: Lcd_Cmd(0x0C);
  3418  001024  6E04               	movwf	??_lcd_init& (0+255),c
  3419  001026  0E0C               	movlw	12
  3420  001028  6E02               	movwf	?_Lcd_Cmd,c
  3421  00102A  5004               	movf	??_lcd_init& (0+255),w,c
  3422  00102C  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3423                           
  3424                           ;lcd.h: 110: Lcd_Cmd(0x00);
  3425  001030  6E04               	movwf	??_lcd_init& (0+255),c
  3426  001032  0E00               	movlw	0
  3427  001034  6E02               	movwf	?_Lcd_Cmd,c
  3428  001036  5004               	movf	??_lcd_init& (0+255),w,c
  3429  001038  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3430                           
  3431                           ;lcd.h: 111: Lcd_Cmd(0x06);
  3432  00103C  6E04               	movwf	??_lcd_init& (0+255),c
  3433  00103E  0E06               	movlw	6
  3434  001040  6E02               	movwf	?_Lcd_Cmd,c
  3435  001042  5004               	movf	??_lcd_init& (0+255),w,c
  3436  001044  EC26  F00A         	call	_Lcd_Cmd	;wreg free
  3437  001048  0012               	return	
  3438  00104A                     __end_of_lcd_init:
  3439                           	opt stack 0
  3440                           tblptru	equ	0xFF8
  3441                           tblptrh	equ	0xFF7
  3442                           tblptrl	equ	0xFF6
  3443                           tablat	equ	0xFF5
  3444                           prodh	equ	0xFF4
  3445                           prodl	equ	0xFF3
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           indf2	equ	0xFDF
  3449                           postinc2	equ	0xFDE
  3450                           postdec2	equ	0xFDD
  3451                           fsr2h	equ	0xFDA
  3452                           fsr2l	equ	0xFD9
  3453                           status	equ	0xFD8
  3454                           
  3455 ;; *************** function _Lcd_Cmd *****************
  3456 ;; Defined at:
  3457 ;;		line 53 in file "lcd.h"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  a               1    1[COMRAM] unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;		None               void
  3464 ;; Registers used:
  3465 ;;		wreg, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3471 ;;      Params:         1       0       0       0       0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3473 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3474 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3475 ;;Total ram usage:        2 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    1
  3478 ;; This function calls:
  3479 ;;		_Lcd_Port
  3480 ;; This function is called by:
  3481 ;;		_lcd_gotoxy
  3482 ;;		_lcd_init
  3483 ;;		_lcd_clear
  3484 ;;		_lcd_shift_right
  3485 ;;		_lcd_shift_left
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text22
  3490  00144C                     __ptext22:
  3491                           	opt stack 0
  3492  00144C                     _Lcd_Cmd:
  3493                           	opt stack 27
  3494                           
  3495                           ;lcd.h: 54: RD2 = 0;
  3496                           
  3497                           ;incstack = 0
  3498                           ;incstack = 0
  3499  00144C  9483               	bcf	3971,2,c	;volatile
  3500                           
  3501                           ;lcd.h: 55: Lcd_Port(a);
  3502  00144E  C002  F001         	movff	Lcd_Cmd@a,?_Lcd_Port
  3503  001452  EC11  F00A         	call	_Lcd_Port	;wreg free
  3504                           
  3505                           ;lcd.h: 56: RD3 = 1;
  3506  001456  8683               	bsf	3971,3,c	;volatile
  3507                           
  3508                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
  3509  001458  0E0B               	movlw	11
  3510  00145A  6E03               	movwf	??_Lcd_Cmd& (0+255),c
  3511  00145C  0E62               	movlw	98
  3512  00145E                     u1197:
  3513  00145E  2EE8               	decfsz	wreg,f,c
  3514  001460  D7FE               	goto	u1197
  3515  001462  2E03               	decfsz	??_Lcd_Cmd& (0+255),f,c
  3516  001464  D7FC               	goto	u1197
  3517  001466  F000               	nop	
  3518                           
  3519                           ;lcd.h: 58: RD3 = 0;
  3520  001468  9683               	bcf	3971,3,c	;volatile
  3521  00146A  0012               	return	
  3522  00146C                     __end_of_Lcd_Cmd:
  3523                           	opt stack 0
  3524                           tblptru	equ	0xFF8
  3525                           tblptrh	equ	0xFF7
  3526                           tblptrl	equ	0xFF6
  3527                           tablat	equ	0xFF5
  3528                           prodh	equ	0xFF4
  3529                           prodl	equ	0xFF3
  3530                           postinc0	equ	0xFEE
  3531                           wreg	equ	0xFE8
  3532                           indf2	equ	0xFDF
  3533                           postinc2	equ	0xFDE
  3534                           postdec2	equ	0xFDD
  3535                           fsr2h	equ	0xFDA
  3536                           fsr2l	equ	0xFD9
  3537                           status	equ	0xFD8
  3538                           
  3539 ;; *************** function _Lcd_Port *****************
  3540 ;; Defined at:
  3541 ;;		line 28 in file "lcd.h"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  a               1    0[COMRAM] unsigned char 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;		None               void
  3548 ;; Registers used:
  3549 ;;		None
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3555 ;;      Params:         1       0       0       0       0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3558 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3559 ;;Total ram usage:        1 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_Lcd_Cmd
  3565 ;;		_lcd_init
  3566 ;;		_lcd_write_char
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text23
  3571  001422                     __ptext23:
  3572                           	opt stack 0
  3573  001422                     _Lcd_Port:
  3574                           	opt stack 27
  3575                           
  3576                           ;lcd.h: 29: if(a & 1)
  3577                           
  3578                           ;incstack = 0
  3579                           ;incstack = 0
  3580  001422  A001               	btfss	Lcd_Port@a,0,c
  3581  001424  D002               	goto	l93
  3582                           
  3583                           ;lcd.h: 30: RD4 = 1;
  3584  001426  8883               	bsf	3971,4,c	;volatile
  3585  001428  D001               	goto	l94
  3586  00142A                     l93:
  3587                           
  3588                           ;lcd.h: 31: else
  3589                           ;lcd.h: 32: RD4 = 0;
  3590  00142A  9883               	bcf	3971,4,c	;volatile
  3591  00142C                     l94:
  3592                           
  3593                           ;lcd.h: 34: if(a & 2)
  3594  00142C  A201               	btfss	Lcd_Port@a,1,c
  3595  00142E  D002               	goto	l95
  3596                           
  3597                           ;lcd.h: 35: RD5 = 1;
  3598  001430  8A83               	bsf	3971,5,c	;volatile
  3599  001432  D001               	goto	l96
  3600  001434                     l95:
  3601                           
  3602                           ;lcd.h: 36: else
  3603                           ;lcd.h: 37: RD5 = 0;
  3604  001434  9A83               	bcf	3971,5,c	;volatile
  3605  001436                     l96:
  3606                           
  3607                           ;lcd.h: 39: if(a & 4)
  3608  001436  A401               	btfss	Lcd_Port@a,2,c
  3609  001438  D002               	goto	l97
  3610                           
  3611                           ;lcd.h: 40: RD6 = 1;
  3612  00143A  8C83               	bsf	3971,6,c	;volatile
  3613  00143C  D001               	goto	l98
  3614  00143E                     l97:
  3615                           
  3616                           ;lcd.h: 41: else
  3617                           ;lcd.h: 42: RD6 = 0;
  3618  00143E  9C83               	bcf	3971,6,c	;volatile
  3619  001440                     l98:
  3620                           
  3621                           ;lcd.h: 44: if(a & 8)
  3622  001440  A601               	btfss	Lcd_Port@a,3,c
  3623  001442  D002               	goto	l99
  3624                           
  3625                           ;lcd.h: 45: RD7 = 1;
  3626  001444  8E83               	bsf	3971,7,c	;volatile
  3627  001446  D001               	goto	l101
  3628  001448                     l99:
  3629                           
  3630                           ;lcd.h: 46: else
  3631                           ;lcd.h: 47: RD7 = 0;
  3632  001448  9E83               	bcf	3971,7,c	;volatile
  3633  00144A                     l101:
  3634  00144A  0012               	return	
  3635  00144C                     __end_of_Lcd_Port:
  3636                           	opt stack 0
  3637                           tblptru	equ	0xFF8
  3638                           tblptrh	equ	0xFF7
  3639                           tblptrl	equ	0xFF6
  3640                           tablat	equ	0xFF5
  3641                           prodh	equ	0xFF4
  3642                           prodl	equ	0xFF3
  3643                           postinc0	equ	0xFEE
  3644                           wreg	equ	0xFE8
  3645                           indf2	equ	0xFDF
  3646                           postinc2	equ	0xFDE
  3647                           postdec2	equ	0xFDD
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function ___lwdiv *****************
  3653 ;; Defined at:
  3654 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  dividend        2    0[COMRAM] unsigned int 
  3657 ;;  divisor         2    2[COMRAM] unsigned int 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  quotient        2    5[COMRAM] unsigned int 
  3660 ;;  counter         1    7[COMRAM] unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  2    0[COMRAM] unsigned int 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3670 ;;      Params:         4       0       0       0       0       0       0       0       0
  3671 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3672 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3673 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3674 ;;Total ram usage:        8 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_Obtener_Distancia
  3680 ;;		_sprintf
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text24
  3685  00128A                     __ptext24:
  3686                           	opt stack 0
  3687  00128A                     ___lwdiv:
  3688                           	opt stack 28
  3689                           
  3690                           ;incstack = 0
  3691                           ;incstack = 0
  3692  00128A  0E00               	movlw	0
  3693  00128C  6E07               	movwf	___lwdiv@quotient+1,c
  3694  00128E  0E00               	movlw	0
  3695  001290  6E06               	movwf	___lwdiv@quotient,c
  3696  001292  5004               	movf	___lwdiv@divisor+1,w,c
  3697  001294  1003               	iorwf	___lwdiv@divisor,w,c
  3698  001296  B4D8               	btfsc	status,2,c
  3699  001298  D01E               	goto	l724
  3700  00129A  6E05               	movwf	??___lwdiv& (0+255),c
  3701  00129C  0E01               	movlw	1
  3702  00129E  6E08               	movwf	___lwdiv@counter,c
  3703  0012A0  5005               	movf	??___lwdiv& (0+255),w,c
  3704  0012A2  D004               	goto	l1562
  3705  0012A4                     l1560:
  3706  0012A4  90D8               	bcf	status,0,c
  3707  0012A6  3603               	rlcf	___lwdiv@divisor,f,c
  3708  0012A8  3604               	rlcf	___lwdiv@divisor+1,f,c
  3709  0012AA  2A08               	incf	___lwdiv@counter,f,c
  3710  0012AC                     l1562:
  3711  0012AC  AE04               	btfss	___lwdiv@divisor+1,7,c
  3712  0012AE  D7FA               	goto	l1560
  3713  0012B0                     l1564:
  3714  0012B0  90D8               	bcf	status,0,c
  3715  0012B2  3606               	rlcf	___lwdiv@quotient,f,c
  3716  0012B4  3607               	rlcf	___lwdiv@quotient+1,f,c
  3717  0012B6  5003               	movf	___lwdiv@divisor,w,c
  3718  0012B8  5C01               	subwf	___lwdiv@dividend,w,c
  3719  0012BA  5004               	movf	___lwdiv@divisor+1,w,c
  3720  0012BC  5802               	subwfb	___lwdiv@dividend+1,w,c
  3721  0012BE  A0D8               	btfss	status,0,c
  3722  0012C0  D005               	goto	l1572
  3723  0012C2  5003               	movf	___lwdiv@divisor,w,c
  3724  0012C4  5E01               	subwf	___lwdiv@dividend,f,c
  3725  0012C6  5004               	movf	___lwdiv@divisor+1,w,c
  3726  0012C8  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3727  0012CA  8006               	bsf	___lwdiv@quotient,0,c
  3728  0012CC                     l1572:
  3729  0012CC  90D8               	bcf	status,0,c
  3730  0012CE  3204               	rrcf	___lwdiv@divisor+1,f,c
  3731  0012D0  3203               	rrcf	___lwdiv@divisor,f,c
  3732  0012D2  2E08               	decfsz	___lwdiv@counter,f,c
  3733  0012D4  D7ED               	goto	l1564
  3734  0012D6                     l724:
  3735  0012D6  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  3736  0012DA  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3737  0012DE  0012               	return	
  3738  0012E0                     __end_of___lwdiv:
  3739                           	opt stack 0
  3740                           tblptru	equ	0xFF8
  3741                           tblptrh	equ	0xFF7
  3742                           tblptrl	equ	0xFF6
  3743                           tablat	equ	0xFF5
  3744                           prodh	equ	0xFF4
  3745                           prodl	equ	0xFF3
  3746                           postinc0	equ	0xFEE
  3747                           wreg	equ	0xFE8
  3748                           indf2	equ	0xFDF
  3749                           postinc2	equ	0xFDE
  3750                           postdec2	equ	0xFDD
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           tblptru	equ	0xFF8
  3755                           tblptrh	equ	0xFF7
  3756                           tblptrl	equ	0xFF6
  3757                           tablat	equ	0xFF5
  3758                           prodh	equ	0xFF4
  3759                           prodl	equ	0xFF3
  3760                           postinc0	equ	0xFEE
  3761                           wreg	equ	0xFE8
  3762                           indf2	equ	0xFDF
  3763                           postinc2	equ	0xFDE
  3764                           postdec2	equ	0xFDD
  3765                           fsr2h	equ	0xFDA
  3766                           fsr2l	equ	0xFD9
  3767                           status	equ	0xFD8
  3768                           
  3769                           	psect	rparam
  3770  0000                     tblptru	equ	0xFF8
  3771                           tblptrh	equ	0xFF7
  3772                           tblptrl	equ	0xFF6
  3773                           tablat	equ	0xFF5
  3774                           prodh	equ	0xFF4
  3775                           prodl	equ	0xFF3
  3776                           postinc0	equ	0xFEE
  3777                           wreg	equ	0xFE8
  3778                           indf2	equ	0xFDF
  3779                           postinc2	equ	0xFDE
  3780                           postdec2	equ	0xFDD
  3781                           fsr2h	equ	0xFDA
  3782                           fsr2l	equ	0xFD9
  3783                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    10
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     70      70
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?___ftpack	float  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?_Read_LDR	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?_Obtener_Distancia	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 4
		 -> USART_Init@baud_rate(COMRAM[4]), 

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___altoft	float  size(2) Largest target is 0

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK0[32]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S552$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _states_LED->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_gotoxy->_Lcd_Cmd
    _Read_LDR->___ftdiv
    ___awtoft->___ftpack
    ___ftmul->___ftpack
    _Obtener_Distancia->___lwdiv
    _USART_Init->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___altoft->___ftpack
    _lcd_init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    4346
                                             63 COMRAM     7     7      0
                           _lcd_init
            _Configuracion_Registros
                        _Timer1_Init
                            _Init_AD
                         _USART_Init
                  _Obtener_Distancia
                           _Read_LDR
                  _USART_ReceiveChar
                         _states_LED
 ---------------------------------------------------------------------------------
 (1) _states_LED                                           3     2      1    1534
                                             32 COMRAM     3     2      1
                         _lcd_gotoxy
                           _lcd_putc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    12      6     798
                                             14 COMRAM    18    12      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     159
                                              8 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             4     2      2     268
                                              4 COMRAM     4     2      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (3) _lcd_write_char                                       3     2      1     178
                                              1 COMRAM     3     2      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     3      2     380
                                              3 COMRAM     5     3      2
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_LDR                                            10     7      3     885
                                             42 COMRAM    10     7      3
                            ___ftdiv
                            ___ftmul
                           ___awtoft
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             5     2      3     195
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             17    11      6     345
                                              8 COMRAM    17    11      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _Obtener_Distancia                                    8     6      2     278
                                              8 COMRAM     8     6      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     7      0    1425
                                             56 COMRAM     7     7      0
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     165
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             17    11      6     315
                                             25 COMRAM    17    11      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             14     8      6     690
                                             42 COMRAM    14     8      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4     225
                                              8 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     135
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_AD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion_Registros                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                           _Lcd_Port
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     1      1     110
                                              1 COMRAM     2     1      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     0      1      88
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     162
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _Lcd_Port
     _Lcd_Cmd
       _Lcd_Port
   _Configuracion_Registros
   _Timer1_Init
   _Init_AD
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
     ___fttol
   _Obtener_Distancia
     ___lwdiv
   _Read_LDR
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___awtoft
       ___ftpack
   _USART_ReceiveChar
   _states_LED
     _lcd_gotoxy
       _Lcd_Cmd
         _Lcd_Port
     _lcd_putc
       _lcd_write_char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     46      46       1       73.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      66      20        0.0%
DATA                 0      0      6A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Thu Jun 09 19:54:28 2022

                    ___altoft@exp 0011                     ___altoft@sign 0012  
       __end_of_Obtener_Distancia 11D2                                l93 142A  
                              l94 142C                                l95 1434  
                              l96 1436                                l97 143E  
                              _GO 007E11                                l98 1440  
                              l99 1448                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                    ___ftadd@exp1 0038                      ___ftadd@exp2 0037  
                    ___ftadd@sign 0036                               l101 144A  
                             l113 1288                               l146 1232  
                             l171 1160                               l174 1166  
                             l158 14AA                               l512 0F90  
                             l178 11B8                               l187 0E62  
                             l550 09E0                               l616 0E1E  
                             l553 08A8                               l724 12D6  
                             l564 094C                               l573 0968  
                             l549 087E                               l581 0D3E  
                             l734 1364                               l583 0CE8  
                             l584 0D0E                               l596 0C40  
                    __CFG_CPB$OFF 000000                               _RD2 007C1A  
                             _RD3 007C1B                               _RD4 007C1C  
                             _RD5 007C1D                               _RD6 007C1E  
                             _RD7 007C1F                               u200 0DD6  
                             u150 0D5E                               u320 0B50  
                             u170 0D8A                               u155 0D56  
                             u340 0B7C                               u325 0B48  
                             u350 0B88                               u175 0D82  
                             u345 0B74                               u530 0834  
                    __CFG_CPD$OFF 000000                               u540 085A  
                             u535 082C                               u545 0852  
                             u740 0C60                               u804 0E58  
                             u805 0E54                               u760 0C8C  
                             u745 0C58                               u770 0C98  
                             u765 0C84                               u794 0E40  
                             u795 0E3C                      __CFG_BOR$OFF 000000  
                             wreg 000FE8                      __CFG_FOSC$HS 000000  
                   main@Distancia 0044                       lcd_gotoxy@a 0004  
                     lcd_gotoxy@b 0005                       lcd_gotoxy@y 0007  
                     lcd_gotoxy@z 0006                      __CFG_LVP$OFF 000000  
                    ___ftdiv@cntr 0028                      ___ftdiv@sign 002A  
                    __CFG_WDT$OFF 000000                              l1000 14B8  
                            l1010 0EEA                              l1022 0F36  
                            l1014 0EF8                              l1024 0F54  
                            l1016 0F02                              l1026 0F5E  
                            l1018 0F20                              l1202 0BDC  
                            l1212 0C08                              l1046 0D6C  
                            l1400 0910                              l1064 0DC0  
                            l1208 0BF8                              l1410 093C  
                            l1402 0918                              l1082 0E0E  
                            l1074 0DE8                              l1164 10FE  
                            l1412 0946                              l1404 091E  
                            l1076 0DF4                              l1068 0DD0  
                            l1228 138A                              l1166 110A  
                            l1078 0DF8                              l1184 0B96  
                            l1418 0984                              l1370 088C  
                            l1178 0B5E                              l1428 09BC  
                            l1444 0CA6                              l1438 0C6E  
                            l1614 11A8                              l1198 0BCC  
                            l1630 1342                              l1702 0A06  
                            l1560 12A4                              l1392 08E8  
                            l1376 08B6                              l1632 1346  
                            l1562 12AC                              l1572 12CC  
                            l1564 12B0                              l1636 135A  
                            l1628 133A                              l1740 0AB4  
                            l1732 0A96                              l1398 0906  
                            l1718 0A5A                              l1750 0B24  
                            l1648 125E                              l1746 0B06  
                            l1738 0AAE                              l1762 121A  
                            l1692 140E                              l1748 0B0E  
                            l1766 1226                              l1782 12FC  
                            l1688 13F6                              l1696 09EC  
                            _ADON 007E10                              STR_1 080A  
                            _CREN 007D5C                              u1137 13CE  
                            u1147 13E2                              u1157 1158  
                            _LATB 000F8A                              u1167 0FA8  
                            u1177 0FC4                              u1187 0FE0  
                            u1197 145E                              _RCIF 007CF5  
                            _TMR1 000FCE                              _TXIF 007CF4  
                 lcd_write_char@a 0002                   lcd_write_char@y 0004  
          __end_of_lcd_write_char 13EC        Obtener_Distancia@Distancia 000D  
                            _main 12E0                      ___ftpack@arg 0001  
                    ___ftpack@exp 0004                              fsr2h 000FDA  
                            indf2 000FDF                              fsr2l 000FD9  
                            prodh 000FF4                              prodl 000FF3  
                            start 0000                     __CFG_IESO$OFF 000000  
                 __end_of_Lcd_Cmd 146C                     __CFG_MCLRE$ON 000000  
                    ___ftmul@cntr 0018                      ___ftmul@sign 0019  
                 __end_of_Init_AD 1496                      ___fttol@exp1 000F  
                    ___fttol@lval 000B                     __CFG_PLLDIV$1 000000  
                  __CFG_CCP2MX$ON 000000                             ?_main 0001  
                 __end_of___ftadd 09E2                   __end_of___ftdiv 0D40  
                 __end_of___ftmul 0C42                   __end_of___fttol 0E20  
                 __end_of___lwdiv 12E0                   __end_of___lwmod 136E  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _SPBRG 000FAF                     __CFG_USBDIV$1 000000  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISD 000F95                             _TXREG 000FAD  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                   ___awtoft@sign 000D                   __end_of_dpowers 080A  
                   ___ftpack@sign 0005                             tablat 000FF5  
                 ?_lcd_write_char 0002                             status 000FD8  
                 __end_of_sprintf 0B32                    __CFG_ICPRT$OFF 000000  
                  __CFG_PBADEN$ON 000000                       ?_USART_Init 0001  
                __end_of_Lcd_Port 144C                   __initialization 146C  
                    __end_of_main 1328                  __end_of_Read_LDR 0EDA  
      __size_of_Obtener_Distancia 007E                            ??_main 0040  
                   ___fttol@sign1 000A                     __activetblptr 000002  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                  __end_of___altoft 1154  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                __end_of___awtoft 13B2                  __end_of___ftpack 0F92  
                       ??_Lcd_Cmd 0003                            _TMR1ON 007E68  
                          _TRISA0 007C90                            _TRISC6 007CA6  
                          _TRISC7 007CA7                         ??_Init_AD 0001  
                   ??_Timer1_Init 0001                    __CFG_XINST$OFF 000000  
                __end_of_lcd_init 104A                  __end_of_lcd_putc 1422  
                       ??___ftadd 0031                    __CFG_STVREN$ON 000000  
                       ??___ftdiv 0020                         ??___ftmul 000F  
                       ??___fttol 0005                         ??___lwdiv 0005  
                       ??___lwmod 000D                            clear_0 1472  
           ___ftmul@f3_as_product 0014                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8               __size_of_USART_Init 0086  
                       ??_sprintf 0015          ?_Configuracion_Registros 0001  
                      __accesstop 0060           __end_of__initialization 1478  
                      ___altoft@c 0009                        ___ftadd@f1 002B  
                      ___ftadd@f2 002E                        ___ftdiv@f1 001A  
                      ___ftdiv@f2 001D                        ___ftdiv@f3 0025  
                      ___awtoft@c 0009                        ___ftmul@f1 0009  
                      ___ftmul@f2 000C                        ___fttol@f1 0001  
                  __pcstackCOMRAM 0001               __end_of_Timer1_Init 14AA  
          Read_LDR@analog_reading 0032                    lcd_gotoxy@temp 0008  
                       ?_Lcd_Port 0001                        __pbssBANK0 0060  
                       ?_Read_LDR 002B                         ?___altoft 0009  
                       ?___awtoft 0009                         ?___ftpack 0001  
                      _lcd_gotoxy 1234   __end_of_Configuracion_Registros 14CE  
                ??_lcd_write_char 0003                        ??_Lcd_Port 0002  
                       ?_lcd_init 0001                         ?_lcd_putc 0005  
                      ??_Read_LDR 002E                   __CFG_VREGEN$OFF 000000  
              lcd_write_char@temp 0003                           _Lcd_Cmd 144C  
                         _Init_AD 1482                      ??_USART_Init 0039  
                         __Hparam 0000                       _Timer1_Init 1496  
                         __Lparam 0000                           ___ftadd 0816  
                         ___ftdiv 0C42                           ___ftmul 0B32  
                         ___fttol 0D40                           ___lwdiv 128A  
                         ___lwmod 1328                      __psmallconst 0800  
                      ??___altoft 000D                           __pcinit 146C  
                      ??___awtoft 000C                        ??___ftpack 0006  
                         __ramtop 0800                           __ptext0 12E0  
                         __ptext1 11D2                           __ptext2 09E2  
                         __ptext3 1328                           __ptext4 13EC  
                         __ptext5 13B2                           __ptext6 1234  
                         __ptext7 14AA                           __ptext8 0E20  
                         __ptext9 136E                         _T1CONbits 000FCD  
                  USART_Init@temp 003D                           _dpowers 0800  
              __end_of_USART_Init 10D0                           _sprintf 09E2  
                      ??_lcd_init 0004                        ??_lcd_putc 0007  
            end_of_initialization 1478                     __Lmediumconst 0000  
                       _RCSTAbits 000FAB                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       Lcd_Port@a 0001                         _PORTAbits 000F80  
                     ?_lcd_gotoxy 0004                        _states_LED 11D2  
             USART_Init@baud_rate 0039                       ___ftdiv@exp 0029  
       Obtener_Distancia@Duracion 000F                       ___ftmul@exp 0017  
__size_of_Configuracion_Registros 0012               start_initialization 146C  
               __size_of_Lcd_Port 002A                 __size_of_Read_LDR 00BA  
               _USART_ReceiveChar 14AA                ?_USART_ReceiveChar 0001  
             __size_of_lcd_gotoxy 0056                  __CFG_LPT1OSC$OFF 000000  
             ??_USART_ReceiveChar 0001                 __size_of___altoft 0084  
               __size_of___awtoft 0044                 __size_of___ftpack 00B8  
             __end_of__stringdata 0814                       ?_states_LED 0021  
                        ?_Lcd_Cmd 0002                 __size_of_lcd_init 00B8  
                     sprintf@_val 001B                       sprintf@flag 0019  
               __size_of_lcd_putc 0036                       sprintf@prec 001A  
       __end_of_USART_ReceiveChar 14BC                          ?_Init_AD 0001  
                    ?_Timer1_Init 0001                  ___lwdiv@dividend 0001  
                        ?___ftadd 002B                          ?___ftdiv 001A  
                        ?___ftmul 0009                          ?___fttol 0001  
                        ?___lwdiv 0001                          ?___lwmod 0009  
                     __smallconst 0800                  ___lwdiv@quotient 0006  
                        ?_sprintf 000F                          _LATAbits 000F89  
                        Lcd_Cmd@a 0002                  __CFG_WDTPS$32768 000000  
         _Configuracion_Registros 14BC               __size_of_states_LED 0062  
                  states_LED@data 0021                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                       __stringdata 080A  
                       lcd_putc@a 0005                         lcd_putc@i 0007  
                    ??_lcd_gotoxy 0006                          _Lcd_Port 1422  
                        _Read_LDR 0E20        __size_of_USART_ReceiveChar 0012  
                __size_of_Lcd_Cmd 0020           __size_of_lcd_write_char 003A  
                __size_of_Init_AD 0014                          __Hrparam 0000  
                        __Lrparam 0000                __end_of_lcd_gotoxy 128A  
                __size_of___ftadd 01CC                  __size_of___ftdiv 00FE  
                        ___altoft 10D0                  __size_of___ftmul 0110  
                __size_of___fttol 00E0                  __size_of___lwdiv 0056  
                __size_of___lwmod 0046                          ___awtoft 136E  
                        ___ftpack 0EDA                   ___lwdiv@divisor 0003  
                 ___lwdiv@counter 0008                          __ptext10 0B32  
                        __ptext11 1154                          __ptext20 14BC  
                        __ptext12 104A                          __ptext21 0F92  
                        __ptext13 0D40                          __ptext22 144C  
                        __ptext14 0C42                          __ptext23 1422  
                        __ptext15 0816                          __ptext24 128A  
                        __ptext16 10D0                          __ptext17 0EDA  
                        __ptext18 1482                          __ptext19 1496  
                        _lcd_init 0F92                          _lcd_putc 13EC  
                __size_of_sprintf 0150                     __size_of_main 0048  
       ??_Configuracion_Registros 0001               main@esp_server_data 0046  
                      _LCD_Buffer 0060              __size_of_Timer1_Init 0014  
           __CFG_CPUDIV$OSC1_PLL2 000000                      ??_states_LED 0022  
                       sprintf@ap 0017                         sprintf@sp 000F  
                ___lwmod@dividend 0009                __end_of_states_LED 1234  
                   main@LDR_value 0041                 _Obtener_Distancia 1154  
                        sprintf@c 0020                          sprintf@f 0011  
                 ___lwmod@divisor 000B                ?_Obtener_Distancia 0009  
                 ___lwmod@counter 000E               ??_Obtener_Distancia 000B  
        Obtener_Distancia@Timer_1 000B                    _lcd_write_char 13B2  
                      _USART_Init 104A  
