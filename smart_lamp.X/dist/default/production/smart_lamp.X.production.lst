

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Jun 10 01:01:46 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	opt stack 0
    98  000800                     _dpowers:
    99                           	opt stack 0
   100  000800  0001               	dw	1
   101  000802  0000               	dw	0
   102  000804  000A               	dw	10
   103  000806  0000               	dw	0
   104  000808  0064               	dw	100
   105  00080A  0000               	dw	0
   106  00080C  03E8               	dw	1000
   107  00080E  0000               	dw	0
   108  000810  2710               	dw	10000
   109  000812  0000               	dw	0
   110  000814  86A0               	dw	34464
   111  000816  0001               	dw	1
   112  000818  4240               	dw	16960
   113  00081A  000F               	dw	15
   114  00081C  9680               	dw	38528
   115  00081E  0098               	dw	152
   116  000820  E100               	dw	57600
   117  000822  05F5               	dw	1525
   118  000824  CA00               	dw	51712
   119  000826  3B9A               	dw	15258
   120  000828                     __end_of_dpowers:
   121                           	opt stack 0
   122  000828                     __npowers_:
   123                           	opt stack 0
   124  000828  00                 	db	0
   125  000829  80                 	db	128
   126  00082A  3F                 	db	63
   127  00082B  CD                 	db	205
   128  00082C  CC                 	db	204
   129  00082D  3D                 	db	61
   130  00082E  D7                 	db	215
   131  00082F  23                 	db	35
   132  000830  3C                 	db	60
   133  000831  12                 	db	18
   134  000832  83                 	db	131
   135  000833  3A                 	db	58
   136  000834  B7                 	db	183
   137  000835  D1                 	db	209
   138  000836  38                 	db	56
   139  000837  C6                 	db	198
   140  000838  27                 	db	39
   141  000839  37                 	db	55
   142  00083A  38                 	db	56
   143  00083B  86                 	db	134
   144  00083C  35                 	db	53
   145  00083D  C0                 	db	192
   146  00083E  D6                 	db	214
   147  00083F  33                 	db	51
   148  000840  CC                 	db	204
   149  000841  2B                 	db	43
   150  000842  32                 	db	50
   151  000843  70                 	db	112
   152  000844  89                 	db	137
   153  000845  30                 	db	48
   154  000846  E7                 	db	231
   155  000847  DB                 	db	219
   156  000848  2E                 	db	46
   157  000849  E5                 	db	229
   158  00084A  3C                 	db	60
   159  00084B  1E                 	db	30
   160  00084C  42                 	db	66
   161  00084D  A2                 	db	162
   162  00084E  0D                 	db	13
   163  00084F                     __end_of__npowers_:
   164                           	opt stack 0
   165  00084F                     __powers_:
   166                           	opt stack 0
   167  00084F  00                 	db	0
   168  000850  80                 	db	128
   169  000851  3F                 	db	63
   170  000852  00                 	db	0
   171  000853  20                 	db	32
   172  000854  41                 	db	65
   173  000855  00                 	db	0
   174  000856  C8                 	db	200
   175  000857  42                 	db	66
   176  000858  00                 	db	0
   177  000859  7A                 	db	122
   178  00085A  44                 	db	68
   179  00085B  40                 	db	64
   180  00085C  1C                 	db	28
   181  00085D  46                 	db	70
   182  00085E  50                 	db	80
   183  00085F  C3                 	db	195
   184  000860  47                 	db	71
   185  000861  24                 	db	36
   186  000862  74                 	db	116
   187  000863  49                 	db	73
   188  000864  97                 	db	151
   189  000865  18                 	db	24
   190  000866  4B                 	db	75
   191  000867  BC                 	db	188
   192  000868  BE                 	db	190
   193  000869  4C                 	db	76
   194  00086A  6B                 	db	107
   195  00086B  6E                 	db	110
   196  00086C  4E                 	db	78
   197  00086D  03                 	db	3
   198  00086E  15                 	db	21
   199  00086F  50                 	db	80
   200  000870  79                 	db	121
   201  000871  AD                 	db	173
   202  000872  60                 	db	96
   203  000873  F3                 	db	243
   204  000874  49                 	db	73
   205  000875  71                 	db	113
   206  000876                     __end_of__powers_:
   207                           	opt stack 0
   208  0000                     _TMR1	set	4046
   209  0000                     _ADCON0	set	4034
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _ADCON1	set	4033
   212  0000                     _ADCON1bits	set	4033
   213  0000                     _ADCON2	set	4032
   214  0000                     _ADRESH	set	4036
   215  0000                     _ADRESL	set	4035
   216  0000                     _LATAbits	set	3977
   217  0000                     _LATB	set	3978
   218  0000                     _PORTAbits	set	3968
   219  0000                     _RCREG	set	4014
   220  0000                     _RCSTA	set	4011
   221  0000                     _SPBRG	set	4015
   222  0000                     _T1CONbits	set	4045
   223  0000                     _TRISA	set	3986
   224  0000                     _TRISB	set	3987
   225  0000                     _TRISD	set	3989
   226  0000                     _ADIE	set	31982
   227  0000                     _ADIP	set	31998
   228  0000                     _ADON	set	32272
   229  0000                     _GIEH	set	32663
   230  0000                     _GIEL	set	32662
   231  0000                     _GO	set	32273
   232  0000                     _IPEN	set	32391
   233  0000                     _RCIE	set	31981
   234  0000                     _RCIF	set	31989
   235  0000                     _RCIP	set	31997
   236  0000                     _RD2	set	31770
   237  0000                     _RD3	set	31771
   238  0000                     _RD4	set	31772
   239  0000                     _RD5	set	31773
   240  0000                     _RD6	set	31774
   241  0000                     _RD7	set	31775
   242  0000                     _TMR0IE	set	32661
   243  0000                     _TMR0IP	set	32650
   244  0000                     _TMR1ON	set	32360
   245  0000                     _TRISA0	set	31888
   246  0000                     _TRISC6	set	31910
   247  0000                     _TRISC7	set	31911
   248  000876                     __stringdata:
   249                           	opt stack 0
   250  000876                     STR_2:
   251  000876  44                 	db	68	;'D'
   252  000877  69                 	db	105	;'i'
   253  000878  73                 	db	115	;'s'
   254  000879  74                 	db	116	;'t'
   255  00087A  61                 	db	97	;'a'
   256  00087B  6E                 	db	110	;'n'
   257  00087C  63                 	db	99	;'c'
   258  00087D  69                 	db	105	;'i'
   259  00087E  61                 	db	97	;'a'
   260  00087F  3A                 	db	58	;':'
   261  000880  20                 	db	32
   262  000881  25                 	db	37
   263  000882  30                 	db	48	;'0'
   264  000883  33                 	db	51	;'3'
   265  000884  64                 	db	100	;'d'
   266  000885  63                 	db	99	;'c'
   267  000886  6D                 	db	109	;'m'
   268  000887  00                 	db	0
   269  000888                     STR_1:
   270  000888  4C                 	db	76	;'L'
   271  000889  44                 	db	68	;'D'
   272  00088A  52                 	db	82	;'R'
   273  00088B  3A                 	db	58	;':'
   274  00088C  20                 	db	32
   275  00088D  25                 	db	37
   276  00088E  2E                 	db	46
   277  00088F  32                 	db	50	;'2'
   278  000890  66                 	db	102	;'f'
   279  000891  00                 	db	0
   280  000892                     __end_of__stringdata:
   281                           	opt stack 0
   282                           
   283                           ; #config settings
   284  000892  00                 	db	0	; dummy byte at the end
   285  0000                     
   286                           	psect	cinit
   287  006262                     __pcinit:
   288                           	opt stack 0
   289  006262                     start_initialization:
   290                           	opt stack 0
   291  006262                     __initialization:
   292                           	opt stack 0
   293                           
   294                           ; Clear objects allocated to BANK1 (37 bytes)
   295  006262  EE01  F081         	lfsr	0,__pbssBANK1
   296  006266  0E25               	movlw	37
   297  006268                     clear_0:
   298  006268  6AEE               	clrf	postinc0,c
   299  00626A  06E8               	decf	wreg,f,c
   300  00626C  E1FD               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to COMRAM (6 bytes)
   303  00626E  6A4F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   304  006270  6A4E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   305  006272  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   306  006274  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   307  006276  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   308  006278  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   309  00627A                     end_of_initialization:
   310                           	opt stack 0
   311  00627A                     __end_of__initialization:
   312                           	opt stack 0
   313  00627A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314  00627C  6EF8               	movwf	tblptru,c
   315  00627E  0100               	movlb	0
   316  006280  EF0C  F025         	goto	_main	;jump to C main() function
   317                           tblptru	equ	0xFF8
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           
   321                           	psect	bssCOMRAM
   322  00004A                     __pbssCOMRAM:
   323                           	opt stack 0
   324  00004A                     _contControl:
   325                           	opt stack 0
   326  00004A                     	ds	2
   327  00004C                     _isBright:
   328                           	opt stack 0
   329  00004C                     	ds	2
   330  00004E                     _theresMovement:
   331                           	opt stack 0
   332  00004E                     	ds	2
   333                           tblptru	equ	0xFF8
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           
   337                           	psect	bssBANK1
   338  000181                     __pbssBANK1:
   339                           	opt stack 0
   340  000181                     _LDR_value:
   341                           	opt stack 0
   342  000181                     	ds	3
   343  000184                     _Distancia:
   344                           	opt stack 0
   345  000184                     	ds	2
   346  000186                     _LCD_Buffer:
   347                           	opt stack 0
   348  000186                     	ds	32
   349                           tblptru	equ	0xFF8
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           
   353                           	psect	cstackBANK1
   354  000100                     __pcstackBANK1:
   355                           	opt stack 0
   356  000100                     ?_isdigit:
   357                           	opt stack 0
   358  000100                     ?_Lcd_Port:
   359                           	opt stack 0
   360  000100                     ?___ftge:
   361                           	opt stack 0
   362  000100                     ?___awmod:
   363                           	opt stack 0
   364  000100                     ?___lwdiv:
   365                           	opt stack 0
   366  000100                     ?___lwmod:
   367                           	opt stack 0
   368  000100                     ?___ftpack:
   369                           	opt stack 0
   370  000100                     ?___ftneg:
   371                           	opt stack 0
   372  000100                     ?__tdiv_to_l_:
   373                           	opt stack 0
   374  000100                     ?__div_to_l_:
   375                           	opt stack 0
   376  000100                     ?___lldiv:
   377                           	opt stack 0
   378  000100                     Lcd_Port@a:
   379                           	opt stack 0
   380  000100                     isdigit@c:
   381                           	opt stack 0
   382  000100                     ___awmod@dividend:
   383                           	opt stack 0
   384  000100                     ___lwdiv@dividend:
   385                           	opt stack 0
   386  000100                     ___lwmod@dividend:
   387                           	opt stack 0
   388  000100                     __div_to_l_@f1:
   389                           	opt stack 0
   390  000100                     ___ftpack@arg:
   391                           	opt stack 0
   392  000100                     __tdiv_to_l_@f1:
   393                           	opt stack 0
   394  000100                     ___ftge@ff1:
   395                           	opt stack 0
   396  000100                     ___ftneg@f1:
   397                           	opt stack 0
   398  000100                     ___lldiv@dividend:
   399                           	opt stack 0
   400                           
   401                           ; 4 bytes @ 0x0
   402  000100                     	ds	1
   403  000101                     ??_isdigit:
   404  000101                     ?_Lcd_Cmd:
   405                           	opt stack 0
   406  000101                     ?_lcd_write_char:
   407                           	opt stack 0
   408  000101                     Lcd_Cmd@a:
   409                           	opt stack 0
   410  000101                     lcd_write_char@a:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414  000101                     	ds	1
   415  000102                     ??_Lcd_Cmd:
   416  000102                     lcd_write_char@temp:
   417                           	opt stack 0
   418  000102                     _isdigit$838:
   419                           	opt stack 0
   420  000102                     ___awmod@divisor:
   421                           	opt stack 0
   422  000102                     ___lwdiv@divisor:
   423                           	opt stack 0
   424  000102                     ___lwmod@divisor:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x2
   428  000102                     	ds	1
   429  000103                     ?_lcd_gotoxy:
   430                           	opt stack 0
   431  000103                     ??_lcd_init:
   432  000103                     lcd_gotoxy@a:
   433                           	opt stack 0
   434  000103                     lcd_write_char@y:
   435                           	opt stack 0
   436  000103                     ___ftpack@exp:
   437                           	opt stack 0
   438  000103                     __div_to_l_@f2:
   439                           	opt stack 0
   440  000103                     __tdiv_to_l_@f2:
   441                           	opt stack 0
   442  000103                     ___ftge@ff2:
   443                           	opt stack 0
   444                           
   445                           ; 3 bytes @ 0x3
   446  000103                     	ds	1
   447  000104                     ?_lcd_putc:
   448                           	opt stack 0
   449  000104                     ??___awmod:
   450  000104                     ??___lwdiv:
   451  000104                     ??___lwmod:
   452  000104                     lcd_gotoxy@b:
   453                           	opt stack 0
   454  000104                     ___ftpack@sign:
   455                           	opt stack 0
   456  000104                     lcd_putc@a:
   457                           	opt stack 0
   458  000104                     ___lldiv@divisor:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0x4
   462  000104                     	ds	1
   463  000105                     ??___ftpack:
   464  000105                     lcd_gotoxy@z:
   465                           	opt stack 0
   466  000105                     ___awmod@counter:
   467                           	opt stack 0
   468  000105                     ___lwdiv@counter:
   469                           	opt stack 0
   470  000105                     ___lwmod@counter:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x5
   474  000105                     	ds	1
   475  000106                     ??__tdiv_to_l_:
   476  000106                     ??__div_to_l_:
   477  000106                     ??___ftge:
   478  000106                     lcd_gotoxy@y:
   479                           	opt stack 0
   480  000106                     ___awmod@sign:
   481                           	opt stack 0
   482  000106                     lcd_putc@i:
   483                           	opt stack 0
   484  000106                     ___lwdiv@quotient:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x6
   488  000106                     	ds	1
   489  000107                     ?___awdiv:
   490                           	opt stack 0
   491  000107                     lcd_gotoxy@temp:
   492                           	opt stack 0
   493  000107                     ___awdiv@dividend:
   494                           	opt stack 0
   495  000107                     __div_to_l_@quot:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x7
   499  000107                     	ds	1
   500  000108                     ??___lldiv:
   501  000108                     ?_Obtener_Distancia:
   502                           	opt stack 0
   503  000108                     ?___altoft:
   504                           	opt stack 0
   505  000108                     ?___awtoft:
   506                           	opt stack 0
   507  000108                     ?___lltoft:
   508                           	opt stack 0
   509  000108                     ___awtoft@c:
   510                           	opt stack 0
   511  000108                     ___altoft@c:
   512                           	opt stack 0
   513  000108                     ___lltoft@c:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0x8
   517  000108                     	ds	1
   518  000109                     ___awdiv@divisor:
   519                           	opt stack 0
   520  000109                     ___lldiv@quotient:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x9
   524  000109                     	ds	1
   525  00010A                     Obtener_Distancia@Timer_1:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0xA
   529  00010A                     	ds	1
   530  00010B                     ??___awdiv:
   531  00010B                     ??___awtoft:
   532  00010B                     __div_to_l_@cntr:
   533                           	opt stack 0
   534  00010B                     __tdiv_to_l_@quot:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0xB
   538  00010B                     	ds	1
   539  00010C                     ??___altoft:
   540  00010C                     ??___lltoft:
   541  00010C                     ___awdiv@counter:
   542                           	opt stack 0
   543  00010C                     ___awtoft@sign:
   544                           	opt stack 0
   545  00010C                     __div_to_l_@exp1:
   546                           	opt stack 0
   547  00010C                     Obtener_Distancia@Distancia:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xC
   551  00010C                     	ds	1
   552  00010D                     ___awdiv@sign:
   553                           	opt stack 0
   554  00010D                     ___lldiv@counter:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0xD
   558  00010D                     	ds	1
   559  00010E                     ?___llmod:
   560                           	opt stack 0
   561  00010E                     Obtener_Distancia@Duracion:
   562                           	opt stack 0
   563  00010E                     ___awdiv@quotient:
   564                           	opt stack 0
   565  00010E                     ___llmod@dividend:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0xE
   569  00010E                     	ds	1
   570  00010F                     __tdiv_to_l_@cntr:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0xF
   574  00010F                     	ds	1
   575  000110                     ?___wmul:
   576                           	opt stack 0
   577  000110                     ___altoft@exp:
   578                           	opt stack 0
   579  000110                     __tdiv_to_l_@exp1:
   580                           	opt stack 0
   581  000110                     ___lltoft@exp:
   582                           	opt stack 0
   583  000110                     ___wmul@multiplier:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x10
   587  000110                     	ds	1
   588  000111                     ___altoft@sign:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x11
   592  000111                     	ds	1
   593  000112                     ___wmul@multiplicand:
   594                           	opt stack 0
   595  000112                     ___llmod@divisor:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x12
   599  000112                     	ds	2
   600  000114                     ___wmul@product:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x14
   604  000114                     	ds	2
   605  000116                     ??___llmod:
   606  000116                     ?___ftmul:
   607                           	opt stack 0
   608  000116                     ___ftmul@f1:
   609                           	opt stack 0
   610                           
   611                           ; 3 bytes @ 0x16
   612  000116                     	ds	1
   613  000117                     ___llmod@counter:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x17
   617  000117                     	ds	2
   618  000119                     ___ftmul@f2:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x19
   622  000119                     	ds	3
   623  00011C                     ??___ftmul:
   624                           
   625                           ; 0 bytes @ 0x1C
   626  00011C                     	ds	5
   627  000121                     ___ftmul@exp:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x21
   631  000121                     	ds	1
   632  000122                     ___ftmul@f3_as_product:
   633                           	opt stack 0
   634                           
   635                           ; 3 bytes @ 0x22
   636  000122                     	ds	3
   637  000125                     ___ftmul@cntr:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x25
   641  000125                     	ds	1
   642  000126                     ___ftmul@sign:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x26
   646  000126                     	ds	1
   647  000127                     ?___ftdiv:
   648                           	opt stack 0
   649  000127                     ?_fround:
   650                           	opt stack 0
   651  000127                     ?_scale:
   652                           	opt stack 0
   653  000127                     ?___asftmul:
   654                           	opt stack 0
   655  000127                     fround@prec:
   656                           	opt stack 0
   657  000127                     scale@scl:
   658                           	opt stack 0
   659  000127                     ___asftmul@f1p:
   660                           	opt stack 0
   661  000127                     ___ftdiv@f1:
   662                           	opt stack 0
   663                           
   664                           ; 3 bytes @ 0x27
   665  000127                     	ds	2
   666  000129                     ___asftmul@f2:
   667                           	opt stack 0
   668                           
   669                           ; 3 bytes @ 0x29
   670  000129                     	ds	1
   671  00012A                     ??_fround:
   672  00012A                     ??_scale:
   673  00012A                     ___ftdiv@f2:
   674                           	opt stack 0
   675                           
   676                           ; 3 bytes @ 0x2A
   677  00012A                     	ds	2
   678  00012C                     
   679                           ; 0 bytes @ 0x2C
   680  00012C                     	ds	1
   681  00012D                     ??___ftdiv:
   682                           
   683                           ; 0 bytes @ 0x2D
   684  00012D                     	ds	3
   685  000130                     _fround$1202:
   686                           	opt stack 0
   687  000130                     _scale$1203:
   688                           	opt stack 0
   689                           
   690                           ; 3 bytes @ 0x30
   691  000130                     	ds	2
   692  000132                     ___ftdiv@cntr:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x32
   696  000132                     	ds	1
   697  000133                     ?___fttol:
   698                           	opt stack 0
   699  000133                     ___ftdiv@f3:
   700                           	opt stack 0
   701  000133                     ___fttol@f1:
   702                           	opt stack 0
   703  000133                     _fround$1201:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x33
   707  000133                     	ds	3
   708  000136                     ___ftdiv@exp:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x36
   712  000136                     	ds	1
   713  000137                     ??___fttol:
   714  000137                     ___ftdiv@sign:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x37
   718  000137                     	ds	1
   719  000138                     ?_Read_LDR:
   720                           	opt stack 0
   721  000138                     ?___ftadd:
   722                           	opt stack 0
   723  000138                     ___ftadd@f1:
   724                           	opt stack 0
   725                           
   726                           ; 3 bytes @ 0x38
   727  000138                     	ds	3
   728  00013B                     ??_Read_LDR:
   729  00013B                     ___ftadd@f2:
   730                           	opt stack 0
   731                           
   732                           ; 3 bytes @ 0x3B
   733  00013B                     	ds	1
   734  00013C                     ___fttol@sign1:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x3C
   738  00013C                     	ds	1
   739  00013D                     ___fttol@lval:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x3D
   743  00013D                     	ds	1
   744  00013E                     ??___ftadd:
   745                           
   746                           ; 0 bytes @ 0x3E
   747  00013E                     	ds	1
   748  00013F                     Read_LDR@analog_reading:
   749                           	opt stack 0
   750                           
   751                           ; 3 bytes @ 0x3F
   752  00013F                     	ds	2
   753  000141                     ___fttol@exp1:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x41
   757  000141                     	ds	2
   758  000143                     ___ftadd@sign:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x43
   762  000143                     	ds	1
   763  000144                     ___ftadd@exp2:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x44
   767  000144                     	ds	1
   768  000145                     ___ftadd@exp1:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x45
   772  000145                     	ds	1
   773  000146                     ?___ftsub:
   774                           	opt stack 0
   775  000146                     ?___asftadd:
   776                           	opt stack 0
   777  000146                     ___asftadd@f1p:
   778                           	opt stack 0
   779  000146                     ___ftsub@f1:
   780                           	opt stack 0
   781  000146                     USART_Init@baud_rate:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x46
   785  000146                     	ds	2
   786  000148                     ___asftadd@f2:
   787                           	opt stack 0
   788                           
   789                           ; 3 bytes @ 0x48
   790  000148                     	ds	1
   791  000149                     ___ftsub@f2:
   792                           	opt stack 0
   793                           
   794                           ; 3 bytes @ 0x49
   795  000149                     	ds	1
   796  00014A                     USART_Init@temp:
   797                           	opt stack 0
   798                           
   799                           ; 3 bytes @ 0x4A
   800  00014A                     	ds	1
   801  00014B                     
   802                           ; 0 bytes @ 0x4B
   803  00014B                     	ds	1
   804  00014C                     ?___asftsub:
   805                           	opt stack 0
   806  00014C                     ___asftsub@f1p:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x4C
   810  00014C                     	ds	2
   811  00014E                     ___asftsub@f2:
   812                           	opt stack 0
   813                           
   814                           ; 3 bytes @ 0x4E
   815  00014E                     	ds	3
   816  000151                     ?_sprintf:
   817                           	opt stack 0
   818  000151                     sprintf@sp:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x51
   822  000151                     	ds	2
   823  000153                     sprintf@f:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x53
   827  000153                     	ds	5
   828  000158                     ??_sprintf:
   829                           
   830                           ; 0 bytes @ 0x58
   831  000158                     	ds	6
   832  00015E                     _sprintf$1204:
   833                           	opt stack 0
   834                           
   835                           ; 3 bytes @ 0x5E
   836  00015E                     	ds	3
   837  000161                     _sprintf$563:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x61
   841  000161                     	ds	4
   842  000165                     sprintf@vd:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x65
   846  000165                     	ds	2
   847  000167                     sprintf@vd_565:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x67
   851  000167                     	ds	2
   852  000169                     sprintf@ap:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x69
   856  000169                     	ds	2
   857  00016B                     sprintf@integ:
   858                           	opt stack 0
   859                           
   860                           ; 3 bytes @ 0x6B
   861  00016B                     	ds	3
   862  00016E                     sprintf@_val:
   863                           	opt stack 0
   864                           
   865                           ; 5 bytes @ 0x6E
   866  00016E                     	ds	5
   867  000173                     sprintf@flag:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x73
   871  000173                     	ds	2
   872  000175                     sprintf@exp:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x75
   876  000175                     	ds	2
   877  000177                     sprintf@width:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x77
   881  000177                     	ds	2
   882  000179                     sprintf@fval:
   883                           	opt stack 0
   884                           
   885                           ; 3 bytes @ 0x79
   886  000179                     	ds	3
   887  00017C                     sprintf@prec:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x7C
   891  00017C                     	ds	2
   892  00017E                     sprintf@c:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x7E
   896  00017E                     	ds	1
   897  00017F                     ??_main:
   898                           
   899                           ; 0 bytes @ 0x7F
   900  00017F                     	ds	2
   901                           tblptru	equ	0xFF8
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           
   905                           	psect	cstackBANK0
   906  000060                     __pcstackBANK0:
   907                           	opt stack 0
   908  000060                     ??i1_fround:
   909  000060                     ??i1_scale:
   910  000060                     ?i1___asftmul:
   911                           	opt stack 0
   912  000060                     ?i1___ftdiv:
   913                           	opt stack 0
   914  000060                     i1___asftmul@f1p:
   915                           	opt stack 0
   916  000060                     i1___ftdiv@f1:
   917                           	opt stack 0
   918                           
   919                           ; 3 bytes @ 0x0
   920  000060                     	ds	2
   921  000062                     i1___asftmul@f2:
   922                           	opt stack 0
   923                           
   924                           ; 3 bytes @ 0x2
   925  000062                     	ds	1
   926  000063                     i1___ftdiv@f2:
   927                           	opt stack 0
   928                           
   929                           ; 3 bytes @ 0x3
   930  000063                     	ds	3
   931  000066                     ??i1___ftdiv:
   932  000066                     i1_fround$1827:
   933                           	opt stack 0
   934  000066                     i1_scale$1828:
   935                           	opt stack 0
   936                           
   937                           ; 3 bytes @ 0x6
   938  000066                     	ds	3
   939  000069                     i1_fround$1826:
   940                           	opt stack 0
   941                           
   942                           ; 3 bytes @ 0x9
   943  000069                     	ds	2
   944  00006B                     i1___ftdiv@cntr:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0xB
   948  00006B                     	ds	1
   949  00006C                     ?i1___asftadd:
   950                           	opt stack 0
   951  00006C                     i1___ftdiv@exp:
   952                           	opt stack 0
   953  00006C                     i1___asftadd@f1p:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0xC
   957  00006C                     	ds	1
   958  00006D                     i1___ftdiv@f3:
   959                           	opt stack 0
   960                           
   961                           ; 3 bytes @ 0xD
   962  00006D                     	ds	1
   963  00006E                     i1___asftadd@f2:
   964                           	opt stack 0
   965                           
   966                           ; 3 bytes @ 0xE
   967  00006E                     	ds	2
   968  000070                     i1___ftdiv@sign:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x10
   972  000070                     	ds	1
   973  000071                     ??i1_Read_LDR:
   974  000071                     ?i1_sprintf:
   975                           	opt stack 0
   976  000071                     i1sprintf@sp:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x11
   980  000071                     	ds	2
   981  000073                     i1sprintf@f:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x13
   985  000073                     	ds	2
   986  000075                     i1Read_LDR@analog_reading:
   987                           	opt stack 0
   988                           
   989                           ; 3 bytes @ 0x15
   990  000075                     	ds	3
   991  000078                     ??i1_sprintf:
   992                           
   993                           ; 0 bytes @ 0x18
   994  000078                     	ds	6
   995  00007E                     i1_sprintf$1829:
   996                           	opt stack 0
   997                           
   998                           ; 3 bytes @ 0x1E
   999  00007E                     	ds	3
  1000  000081                     i1_sprintf$563:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x21
  1004  000081                     	ds	4
  1005  000085                     i1sprintf@vd:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x25
  1009  000085                     	ds	2
  1010  000087                     i1sprintf@vd_565:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x27
  1014  000087                     	ds	2
  1015  000089                     i1sprintf@ap:
  1016                           	opt stack 0
  1017                           
  1018                           ; 2 bytes @ 0x29
  1019  000089                     	ds	2
  1020  00008B                     i1sprintf@integ:
  1021                           	opt stack 0
  1022                           
  1023                           ; 3 bytes @ 0x2B
  1024  00008B                     	ds	3
  1025  00008E                     i1sprintf@_val:
  1026                           	opt stack 0
  1027                           
  1028                           ; 5 bytes @ 0x2E
  1029  00008E                     	ds	5
  1030  000093                     i1sprintf@flag:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x33
  1034  000093                     	ds	2
  1035  000095                     i1sprintf@exp:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x35
  1039  000095                     	ds	2
  1040  000097                     i1sprintf@width:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x37
  1044  000097                     	ds	2
  1045  000099                     i1sprintf@fval:
  1046                           	opt stack 0
  1047                           
  1048                           ; 3 bytes @ 0x39
  1049  000099                     	ds	3
  1050  00009C                     i1sprintf@prec:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x3C
  1054  00009C                     	ds	2
  1055  00009E                     i1sprintf@c:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x3E
  1059  00009E                     	ds	1
  1060  00009F                     ??_interrupcaoLOW:
  1061                           
  1062                           ; 0 bytes @ 0x3F
  1063  00009F                     	ds	19
  1064                           tblptru	equ	0xFF8
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           
  1068                           	psect	cstackCOMRAM
  1069  000001                     __pcstackCOMRAM:
  1070                           	opt stack 0
  1071  000001                     ?_control_LED:
  1072                           	opt stack 0
  1073  000001                     control_LED@data:
  1074                           	opt stack 0
  1075                           
  1076                           ; 1 bytes @ 0x0
  1077  000001                     	ds	1
  1078  000002                     ??_interrupcaoHIGH:
  1079                           
  1080                           ; 0 bytes @ 0x1
  1081  000002                     	ds	14
  1082  000010                     interrupcaoHIGH@esp_server_data:
  1083                           	opt stack 0
  1084                           
  1085                           ; 1 bytes @ 0xF
  1086  000010                     	ds	1
  1087  000011                     ?i1_Lcd_Port:
  1088                           	opt stack 0
  1089  000011                     ?i1___ftge:
  1090                           	opt stack 0
  1091  000011                     ?i1_isdigit:
  1092                           	opt stack 0
  1093  000011                     ?i1___awmod:
  1094                           	opt stack 0
  1095  000011                     ?i1___lwdiv:
  1096                           	opt stack 0
  1097  000011                     ?i1___lwmod:
  1098                           	opt stack 0
  1099  000011                     ?i1___ftpack:
  1100                           	opt stack 0
  1101  000011                     ?i1___ftneg:
  1102                           	opt stack 0
  1103  000011                     ?i1__div_to_l_:
  1104                           	opt stack 0
  1105  000011                     ?i1__tdiv_to_l_:
  1106                           	opt stack 0
  1107  000011                     ?i1___lldiv:
  1108                           	opt stack 0
  1109  000011                     i1Lcd_Port@a:
  1110                           	opt stack 0
  1111  000011                     i1isdigit@c:
  1112                           	opt stack 0
  1113  000011                     i1___awmod@dividend:
  1114                           	opt stack 0
  1115  000011                     i1___lwdiv@dividend:
  1116                           	opt stack 0
  1117  000011                     i1___lwmod@dividend:
  1118                           	opt stack 0
  1119  000011                     i1__div_to_l_@f1:
  1120                           	opt stack 0
  1121  000011                     i1___ftpack@arg:
  1122                           	opt stack 0
  1123  000011                     i1__tdiv_to_l_@f1:
  1124                           	opt stack 0
  1125  000011                     i1___ftge@ff1:
  1126                           	opt stack 0
  1127  000011                     i1___ftneg@f1:
  1128                           	opt stack 0
  1129  000011                     i1___lldiv@dividend:
  1130                           	opt stack 0
  1131                           
  1132                           ; 4 bytes @ 0x10
  1133  000011                     	ds	1
  1134  000012                     ?i1_Lcd_Cmd:
  1135                           	opt stack 0
  1136  000012                     ?i1_lcd_write_char:
  1137                           	opt stack 0
  1138  000012                     ??i1_isdigit:
  1139  000012                     i1Lcd_Cmd@a:
  1140                           	opt stack 0
  1141  000012                     i1lcd_write_char@a:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x11
  1145  000012                     	ds	1
  1146  000013                     ??i1_Lcd_Cmd:
  1147  000013                     i1lcd_write_char@temp:
  1148                           	opt stack 0
  1149  000013                     i1_isdigit$838:
  1150                           	opt stack 0
  1151  000013                     i1___awmod@divisor:
  1152                           	opt stack 0
  1153  000013                     i1___lwdiv@divisor:
  1154                           	opt stack 0
  1155  000013                     i1___lwmod@divisor:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x12
  1159  000013                     	ds	1
  1160  000014                     ?i1_lcd_gotoxy:
  1161                           	opt stack 0
  1162  000014                     i1lcd_gotoxy@a:
  1163                           	opt stack 0
  1164  000014                     i1lcd_write_char@y:
  1165                           	opt stack 0
  1166  000014                     i1___ftpack@exp:
  1167                           	opt stack 0
  1168  000014                     i1__div_to_l_@f2:
  1169                           	opt stack 0
  1170  000014                     i1__tdiv_to_l_@f2:
  1171                           	opt stack 0
  1172  000014                     i1___ftge@ff2:
  1173                           	opt stack 0
  1174                           
  1175                           ; 3 bytes @ 0x13
  1176  000014                     	ds	1
  1177  000015                     ?i1_lcd_putc:
  1178                           	opt stack 0
  1179  000015                     ??i1___awmod:
  1180  000015                     ??i1___lwdiv:
  1181  000015                     ??i1___lwmod:
  1182  000015                     i1lcd_gotoxy@b:
  1183                           	opt stack 0
  1184  000015                     i1___ftpack@sign:
  1185                           	opt stack 0
  1186  000015                     i1lcd_putc@a:
  1187                           	opt stack 0
  1188  000015                     i1___lldiv@divisor:
  1189                           	opt stack 0
  1190                           
  1191                           ; 4 bytes @ 0x14
  1192  000015                     	ds	1
  1193  000016                     ??i1___ftpack:
  1194  000016                     i1lcd_gotoxy@z:
  1195                           	opt stack 0
  1196  000016                     i1___awmod@counter:
  1197                           	opt stack 0
  1198  000016                     i1___lwdiv@counter:
  1199                           	opt stack 0
  1200  000016                     i1___lwmod@counter:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x15
  1204  000016                     	ds	1
  1205  000017                     ??i1__div_to_l_:
  1206  000017                     ??i1__tdiv_to_l_:
  1207  000017                     ??i1___ftge:
  1208  000017                     i1lcd_gotoxy@y:
  1209                           	opt stack 0
  1210  000017                     i1___awmod@sign:
  1211                           	opt stack 0
  1212  000017                     i1lcd_putc@i:
  1213                           	opt stack 0
  1214  000017                     i1___lwdiv@quotient:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x16
  1218  000017                     	ds	1
  1219  000018                     ?i1___awdiv:
  1220                           	opt stack 0
  1221  000018                     i1lcd_gotoxy@temp:
  1222                           	opt stack 0
  1223  000018                     i1___awdiv@dividend:
  1224                           	opt stack 0
  1225  000018                     i1__div_to_l_@quot:
  1226                           	opt stack 0
  1227                           
  1228                           ; 4 bytes @ 0x17
  1229  000018                     	ds	1
  1230  000019                     ??i1___lldiv:
  1231  000019                     ?i1_Obtener_Distancia:
  1232                           	opt stack 0
  1233  000019                     ?i1___awtoft:
  1234                           	opt stack 0
  1235  000019                     ?i1___ftadd:
  1236                           	opt stack 0
  1237  000019                     ?i1___lltoft:
  1238                           	opt stack 0
  1239  000019                     i1___awtoft@c:
  1240                           	opt stack 0
  1241  000019                     i1___ftadd@f1:
  1242                           	opt stack 0
  1243  000019                     i1___lltoft@c:
  1244                           	opt stack 0
  1245                           
  1246                           ; 4 bytes @ 0x18
  1247  000019                     	ds	1
  1248  00001A                     i1___awdiv@divisor:
  1249                           	opt stack 0
  1250  00001A                     i1___lldiv@quotient:
  1251                           	opt stack 0
  1252                           
  1253                           ; 4 bytes @ 0x19
  1254  00001A                     	ds	1
  1255  00001B                     i1Obtener_Distancia@Timer_1:
  1256                           	opt stack 0
  1257                           
  1258                           ; 2 bytes @ 0x1A
  1259  00001B                     	ds	1
  1260  00001C                     ??i1___awdiv:
  1261  00001C                     ??i1___awtoft:
  1262  00001C                     i1__div_to_l_@cntr:
  1263                           	opt stack 0
  1264  00001C                     i1___ftadd@f2:
  1265                           	opt stack 0
  1266  00001C                     i1__tdiv_to_l_@quot:
  1267                           	opt stack 0
  1268                           
  1269                           ; 4 bytes @ 0x1B
  1270  00001C                     	ds	1
  1271  00001D                     ??i1___lltoft:
  1272  00001D                     i1___awdiv@counter:
  1273                           	opt stack 0
  1274  00001D                     i1___awtoft@sign:
  1275                           	opt stack 0
  1276  00001D                     i1__div_to_l_@exp1:
  1277                           	opt stack 0
  1278  00001D                     i1Obtener_Distancia@Distancia:
  1279                           	opt stack 0
  1280                           
  1281                           ; 2 bytes @ 0x1C
  1282  00001D                     	ds	1
  1283  00001E                     i1___awdiv@sign:
  1284                           	opt stack 0
  1285  00001E                     i1___lldiv@counter:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x1D
  1289  00001E                     	ds	1
  1290  00001F                     ??i1___ftadd:
  1291  00001F                     ?i1___llmod:
  1292                           	opt stack 0
  1293  00001F                     i1Obtener_Distancia@Duracion:
  1294                           	opt stack 0
  1295  00001F                     i1___awdiv@quotient:
  1296                           	opt stack 0
  1297  00001F                     i1___llmod@dividend:
  1298                           	opt stack 0
  1299                           
  1300                           ; 4 bytes @ 0x1E
  1301  00001F                     	ds	1
  1302  000020                     i1__tdiv_to_l_@cntr:
  1303                           	opt stack 0
  1304                           
  1305                           ; 1 bytes @ 0x1F
  1306  000020                     	ds	1
  1307  000021                     ?i1___wmul:
  1308                           	opt stack 0
  1309  000021                     i1__tdiv_to_l_@exp1:
  1310                           	opt stack 0
  1311  000021                     i1___lltoft@exp:
  1312                           	opt stack 0
  1313  000021                     i1___wmul@multiplier:
  1314                           	opt stack 0
  1315                           
  1316                           ; 2 bytes @ 0x20
  1317  000021                     	ds	2
  1318  000023                     i1___wmul@multiplicand:
  1319                           	opt stack 0
  1320  000023                     i1___llmod@divisor:
  1321                           	opt stack 0
  1322                           
  1323                           ; 4 bytes @ 0x22
  1324  000023                     	ds	1
  1325  000024                     i1___ftadd@sign:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x23
  1329  000024                     	ds	1
  1330  000025                     i1___ftadd@exp2:
  1331                           	opt stack 0
  1332  000025                     i1___wmul@product:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x24
  1336  000025                     	ds	1
  1337  000026                     i1___ftadd@exp1:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x25
  1341  000026                     	ds	1
  1342  000027                     ??i1___llmod:
  1343  000027                     ?i1___ftsub:
  1344                           	opt stack 0
  1345  000027                     ?i1___fttol:
  1346                           	opt stack 0
  1347  000027                     i1___ftsub@f1:
  1348                           	opt stack 0
  1349  000027                     i1___fttol@f1:
  1350                           	opt stack 0
  1351                           
  1352                           ; 3 bytes @ 0x26
  1353  000027                     	ds	1
  1354  000028                     i1___llmod@counter:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0x27
  1358  000028                     	ds	2
  1359  00002A                     i1___ftsub@f2:
  1360                           	opt stack 0
  1361                           
  1362                           ; 3 bytes @ 0x29
  1363  00002A                     	ds	1
  1364  00002B                     ??i1___fttol:
  1365                           
  1366                           ; 0 bytes @ 0x2A
  1367  00002B                     	ds	2
  1368  00002D                     ?i1___asftsub:
  1369                           	opt stack 0
  1370  00002D                     i1___asftsub@f1p:
  1371                           	opt stack 0
  1372                           
  1373                           ; 2 bytes @ 0x2C
  1374  00002D                     	ds	2
  1375  00002F                     i1___asftsub@f2:
  1376                           	opt stack 0
  1377                           
  1378                           ; 3 bytes @ 0x2E
  1379  00002F                     	ds	1
  1380  000030                     i1___fttol@sign1:
  1381                           	opt stack 0
  1382                           
  1383                           ; 1 bytes @ 0x2F
  1384  000030                     	ds	1
  1385  000031                     i1___fttol@lval:
  1386                           	opt stack 0
  1387                           
  1388                           ; 4 bytes @ 0x30
  1389  000031                     	ds	1
  1390  000032                     
  1391                           ; 0 bytes @ 0x31
  1392  000032                     	ds	3
  1393  000035                     i1___fttol@exp1:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x34
  1397  000035                     	ds	1
  1398  000036                     ?i1___ftmul:
  1399                           	opt stack 0
  1400  000036                     i1___ftmul@f1:
  1401                           	opt stack 0
  1402                           
  1403                           ; 3 bytes @ 0x35
  1404  000036                     	ds	3
  1405  000039                     i1___ftmul@f2:
  1406                           	opt stack 0
  1407                           
  1408                           ; 3 bytes @ 0x38
  1409  000039                     	ds	3
  1410  00003C                     ??i1___ftmul:
  1411                           
  1412                           ; 0 bytes @ 0x3B
  1413  00003C                     	ds	5
  1414  000041                     i1___ftmul@exp:
  1415                           	opt stack 0
  1416                           
  1417                           ; 1 bytes @ 0x40
  1418  000041                     	ds	1
  1419  000042                     i1___ftmul@f3_as_product:
  1420                           	opt stack 0
  1421                           
  1422                           ; 3 bytes @ 0x41
  1423  000042                     	ds	3
  1424  000045                     i1___ftmul@cntr:
  1425                           	opt stack 0
  1426                           
  1427                           ; 1 bytes @ 0x44
  1428  000045                     	ds	1
  1429  000046                     i1___ftmul@sign:
  1430                           	opt stack 0
  1431                           
  1432                           ; 1 bytes @ 0x45
  1433  000046                     	ds	1
  1434  000047                     ?i1_Read_LDR:
  1435                           	opt stack 0
  1436  000047                     ?i1_fround:
  1437                           	opt stack 0
  1438  000047                     ?i1_scale:
  1439                           	opt stack 0
  1440  000047                     i1fround@prec:
  1441                           	opt stack 0
  1442  000047                     i1scale@scl:
  1443                           	opt stack 0
  1444                           
  1445                           ; 1 bytes @ 0x46
  1446  000047                     	ds	3
  1447  00004A                     tblptru	equ	0xFF8
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           
  1451                           ; 0 bytes @ 0x49
  1452 ;;
  1453 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1454 ;;
  1455 ;; *************** function _main *****************
  1456 ;; Defined at:
  1457 ;;		line 74 in file "main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;		None               void
  1464 ;; Registers used:
  1465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1473 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1474 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1475 ;;Total ram usage:        2 bytes
  1476 ;; Hardware stack levels required when called:   14
  1477 ;; This function calls:
  1478 ;;		_lcd_gotoxy
  1479 ;;		_lcd_init
  1480 ;;		_lcd_putc
  1481 ;;		_Configuracion_Registros
  1482 ;;		_Timer1_Init
  1483 ;;		_Init_AD
  1484 ;;		_USART_Init
  1485 ;;		_inicioInterrupcoes
  1486 ;;		_Obtener_Distancia
  1487 ;;		_Read_LDR
  1488 ;;		_sprintf
  1489 ;; This function is called by:
  1490 ;;		Startup code after reset
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text0
  1495  004A18                     __ptext0:
  1496                           	opt stack 0
  1497  004A18                     _main:
  1498                           	opt stack 17
  1499                           
  1500                           ;main.c: 76: Configuracion_Registros();
  1501                           
  1502                           ;incstack = 0
  1503                           ;incstack = 0
  1504  004A18  EC8E  F031         	call	_Configuracion_Registros	;wreg free
  1505                           
  1506                           ;main.c: 77: Timer1_Init();
  1507  004A1C  EC84  F031         	call	_Timer1_Init	;wreg free
  1508                           
  1509                           ;main.c: 78: lcd_init();
  1510  004A20  ECF9  F023         	call	_lcd_init	;wreg free
  1511                           
  1512                           ;main.c: 79: Init_AD();
  1513  004A24  EC7A  F031         	call	_Init_AD	;wreg free
  1514                           
  1515                           ;main.c: 81: USART_Init();
  1516  004A28  EC74  F02A         	call	_USART_Init	;wreg free
  1517                           
  1518                           ;main.c: 82: inicioInterrupcoes();
  1519  004A2C  EC70  F031         	call	_inicioInterrupcoes	;wreg free
  1520  004A30                     l10065:
  1521                           
  1522                           ;main.c: 85: Distancia=Obtener_Distancia();
  1523  004A30  EC1D  F02A         	call	_Obtener_Distancia	;wreg free
  1524  004A34  0101               	movlb	1	; () banked
  1525  004A36  C108  F184         	movff	?_Obtener_Distancia,_Distancia
  1526  004A3A  0101               	movlb	1	; () banked
  1527  004A3C  C109  F185         	movff	?_Obtener_Distancia+1,_Distancia+1
  1528                           
  1529                           ; BSR set to: 1
  1530                           ;main.c: 86: LDR_value=Read_LDR();
  1531  004A40  EC16  F026         	call	_Read_LDR	;wreg free
  1532  004A44  C13A  F183         	movff	?_Read_LDR+2,_LDR_value+2
  1533  004A48  C139  F182         	movff	?_Read_LDR+1,_LDR_value+1
  1534  004A4C  C138  F181         	movff	?_Read_LDR,_LDR_value
  1535                           
  1536                           ;main.c: 87: lcd_gotoxy(1,1);
  1537  004A50  0101               	movlb	1	; () banked
  1538  004A52  6F7F               	movwf	??_main& (0+255),b
  1539  004A54  0E01               	movlw	1
  1540  004A56  0101               	movlb	1	; () banked
  1541  004A58  0101               	movlb	1	; () banked
  1542  004A5A  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  1543  004A5C  0101               	movlb	1	; () banked
  1544  004A5E  517F               	movf	??_main& (0+255),w,b
  1545  004A60  0101               	movlb	1	; () banked
  1546  004A62  6F80               	movwf	(??_main+1)& (0+255),b
  1547  004A64  0E01               	movlw	1
  1548  004A66  0101               	movlb	1	; () banked
  1549  004A68  0101               	movlb	1	; () banked
  1550  004A6A  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  1551  004A6C  0101               	movlb	1	; () banked
  1552  004A6E  5180               	movf	(??_main+1)& (0+255),w,b
  1553  004A70  ECFD  F02B         	call	_lcd_gotoxy	;wreg free
  1554                           
  1555                           ;main.c: 88: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
  1556  004A74  0101               	movlb	1	; () banked
  1557  004A76  0E01               	movlw	high _LCD_Buffer
  1558  004A78  0101               	movlb	1	; () banked
  1559  004A7A  0101               	movlb	1	; () banked
  1560  004A7C  6F52               	movwf	(?_sprintf+1)& (0+255),b
  1561  004A7E  0101               	movlb	1	; () banked
  1562  004A80  0E86               	movlw	low _LCD_Buffer
  1563  004A82  0101               	movlb	1	; () banked
  1564  004A84  6F51               	movwf	?_sprintf& (0+255),b
  1565  004A86  0E08               	movlw	high STR_1
  1566  004A88  0101               	movlb	1	; () banked
  1567  004A8A  0101               	movlb	1	; () banked
  1568  004A8C  6F54               	movwf	(?_sprintf+3)& (0+255),b
  1569  004A8E  0E88               	movlw	low STR_1
  1570  004A90  0101               	movlb	1	; () banked
  1571  004A92  6F53               	movwf	(?_sprintf+2)& (0+255),b
  1572  004A94  C181  F155         	movff	_LDR_value,?_sprintf+4
  1573  004A98  C182  F156         	movff	_LDR_value+1,?_sprintf+5
  1574  004A9C  C183  F157         	movff	_LDR_value+2,?_sprintf+6
  1575  004AA0  EC4A  F004         	call	_sprintf	;wreg free
  1576                           
  1577                           ;main.c: 89: lcd_putc(LCD_Buffer);
  1578  004AA4  0101               	movlb	1	; () banked
  1579  004AA6  0E01               	movlw	high _LCD_Buffer
  1580  004AA8  0101               	movlb	1	; () banked
  1581  004AAA  0101               	movlb	1	; () banked
  1582  004AAC  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  1583  004AAE  0101               	movlb	1	; () banked
  1584  004AB0  0E86               	movlw	low _LCD_Buffer
  1585  004AB2  0101               	movlb	1	; () banked
  1586  004AB4  6F04               	movwf	?_lcd_putc& (0+255),b
  1587  004AB6  ECF7  F02D         	call	_lcd_putc	;wreg free
  1588                           
  1589                           ;main.c: 90: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
  1590  004ABA  0101               	movlb	1	; () banked
  1591  004ABC  0E01               	movlw	high _LCD_Buffer
  1592  004ABE  0101               	movlb	1	; () banked
  1593  004AC0  0101               	movlb	1	; () banked
  1594  004AC2  6F52               	movwf	(?_sprintf+1)& (0+255),b
  1595  004AC4  0101               	movlb	1	; () banked
  1596  004AC6  0E86               	movlw	low _LCD_Buffer
  1597  004AC8  0101               	movlb	1	; () banked
  1598  004ACA  6F51               	movwf	?_sprintf& (0+255),b
  1599  004ACC  0E08               	movlw	high STR_2
  1600  004ACE  0101               	movlb	1	; () banked
  1601  004AD0  0101               	movlb	1	; () banked
  1602  004AD2  6F54               	movwf	(?_sprintf+3)& (0+255),b
  1603  004AD4  0E76               	movlw	low STR_2
  1604  004AD6  0101               	movlb	1	; () banked
  1605  004AD8  6F53               	movwf	(?_sprintf+2)& (0+255),b
  1606  004ADA  C184  F155         	movff	_Distancia,?_sprintf+4
  1607  004ADE  C185  F156         	movff	_Distancia+1,?_sprintf+5
  1608  004AE2  EC4A  F004         	call	_sprintf	;wreg free
  1609                           
  1610                           ;main.c: 91: lcd_gotoxy(2,1);
  1611  004AE6  0101               	movlb	1	; () banked
  1612  004AE8  6F7F               	movwf	??_main& (0+255),b
  1613  004AEA  0E02               	movlw	2
  1614  004AEC  0101               	movlb	1	; () banked
  1615  004AEE  0101               	movlb	1	; () banked
  1616  004AF0  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  1617  004AF2  0101               	movlb	1	; () banked
  1618  004AF4  517F               	movf	??_main& (0+255),w,b
  1619  004AF6  0101               	movlb	1	; () banked
  1620  004AF8  6F80               	movwf	(??_main+1)& (0+255),b
  1621  004AFA  0E01               	movlw	1
  1622  004AFC  0101               	movlb	1	; () banked
  1623  004AFE  0101               	movlb	1	; () banked
  1624  004B00  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  1625  004B02  0101               	movlb	1	; () banked
  1626  004B04  5180               	movf	(??_main+1)& (0+255),w,b
  1627  004B06  ECFD  F02B         	call	_lcd_gotoxy	;wreg free
  1628                           
  1629                           ;main.c: 92: lcd_putc(LCD_Buffer);
  1630  004B0A  0101               	movlb	1	; () banked
  1631  004B0C  0E01               	movlw	high _LCD_Buffer
  1632  004B0E  0101               	movlb	1	; () banked
  1633  004B10  0101               	movlb	1	; () banked
  1634  004B12  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  1635  004B14  0101               	movlb	1	; () banked
  1636  004B16  0E86               	movlw	low _LCD_Buffer
  1637  004B18  0101               	movlb	1	; () banked
  1638  004B1A  6F04               	movwf	?_lcd_putc& (0+255),b
  1639  004B1C  ECF7  F02D         	call	_lcd_putc	;wreg free
  1640  004B20  D787               	goto	l10065
  1641  004B22                     __end_of_main:
  1642                           	opt stack 0
  1643                           tblptru	equ	0xFF8
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           
  1647 ;; *************** function _sprintf *****************
  1648 ;; Defined at:
  1649 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  sp              2   81[BANK1 ] PTR unsigned char 
  1652 ;;		 -> LCD_Buffer(32), 
  1653 ;;  f               2   83[BANK1 ] PTR const unsigned char 
  1654 ;;		 -> STR_4(18), STR_3(10), STR_2(18), STR_1(10), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  vd              2  101[BANK1 ] unsigned int 
  1657 ;;  vd              2  103[BANK1 ] unsigned int 
  1658 ;;  _val            5  110[BANK1 ] struct .
  1659 ;;  fval            3  121[BANK1 ] struct .
  1660 ;;  integ           3  107[BANK1 ] struct .
  1661 ;;  ival            3    0        struct .
  1662 ;;  prec            2  124[BANK1 ] int 
  1663 ;;  width           2  119[BANK1 ] int 
  1664 ;;  exp             2  117[BANK1 ] int 
  1665 ;;  flag            2  115[BANK1 ] unsigned short 
  1666 ;;  ap              2  105[BANK1 ] PTR void [1]
  1667 ;;		 -> ?_sprintf(2), 
  1668 ;;  c               1  126[BANK1 ] char 
  1669 ;;  d               1    0        unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  2   81[BANK1 ] int 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1679 ;;      Params:         0       0       7       0       0       0       0       0       0
  1680 ;;      Locals:         0       0      33       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       6       0       0       0       0       0       0
  1682 ;;      Totals:         0       0      46       0       0       0       0       0       0
  1683 ;;Total ram usage:       46 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:   13
  1686 ;; This function calls:
  1687 ;;		_fround
  1688 ;;		_scale
  1689 ;;		_isdigit
  1690 ;;		__tdiv_to_l_
  1691 ;;		__div_to_l_
  1692 ;;		___asftadd
  1693 ;;		___asftmul
  1694 ;;		___ftmul
  1695 ;;		___asftsub
  1696 ;;		___awdiv
  1697 ;;		___ftge
  1698 ;;		___ftneg
  1699 ;;		___fttol
  1700 ;;		___lldiv
  1701 ;;		___llmod
  1702 ;;		___lltoft
  1703 ;;		___lwmod
  1704 ;;		___wmul
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text1
  1711  000894                     __ptext1:
  1712                           	opt stack 0
  1713  000894                     _sprintf:
  1714                           	opt stack 17
  1715                           
  1716                           ;doprnt.c: 494: va_list ap;
  1717                           ;doprnt.c: 499: signed char c;
  1718                           ;doprnt.c: 501: int width;
  1719                           ;doprnt.c: 504: int prec;
  1720                           ;doprnt.c: 508: unsigned short flag;
  1721                           ;doprnt.c: 515: char d;
  1722                           ;doprnt.c: 516: double fval, integ;
  1723                           ;doprnt.c: 517: int exp;
  1724                           ;doprnt.c: 518: double ival;
  1725                           ;doprnt.c: 519: union {
  1726                           ;doprnt.c: 520: unsigned long _val;
  1727                           ;doprnt.c: 521: struct {
  1728                           ;doprnt.c: 522: const char * _cp;
  1729                           ;doprnt.c: 523: unsigned _len;
  1730                           ;doprnt.c: 524: } _str;
  1731                           ;doprnt.c: 525: } _val;
  1732                           ;doprnt.c: 542: *ap = __va_start();
  1733                           
  1734                           ;incstack = 0
  1735                           ;incstack = 0
  1736  000894  0101               	movlb	1	; () banked
  1737  000896  0E01               	movlw	high (?_sprintf+4)
  1738  000898  0101               	movlb	1	; () banked
  1739  00089A  0101               	movlb	1	; () banked
  1740  00089C  6F6A               	movwf	(sprintf@ap+1)& (0+255),b
  1741  00089E  0101               	movlb	1	; () banked
  1742  0008A0  0E55               	movlw	low (?_sprintf+4)
  1743  0008A2  0101               	movlb	1	; () banked
  1744  0008A4  6F69               	movwf	sprintf@ap& (0+255),b
  1745                           
  1746                           ;doprnt.c: 545: while(c = *f++) {
  1747  0008A6  EF3C  F00B         	goto	l10467
  1748  0008AA                     l10143:
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;doprnt.c: 547: if(c != '%')
  1752  0008AA  0101               	movlb	1	; () banked
  1753  0008AC  0101               	movlb	1	; () banked
  1754  0008AE  517E               	movf	sprintf@c& (0+255),w,b
  1755  0008B0  0A25               	xorlw	37
  1756  0008B2  B4D8               	btfsc	status,2,c
  1757  0008B4  D00D               	goto	l10149
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;doprnt.c: 549: {
  1761                           ;doprnt.c: 550: ((*sp++ = (c)));
  1762  0008B6  C151  FFD9         	movff	sprintf@sp,fsr2l
  1763  0008BA  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  1764  0008BE  0101               	movlb	1	; () banked
  1765  0008C0  C17E  FFDF         	movff	sprintf@c,indf2
  1766                           
  1767                           ; BSR set to: 1
  1768  0008C4  0101               	movlb	1	; () banked
  1769  0008C6  0101               	movlb	1	; () banked
  1770  0008C8  4B51               	infsnz	sprintf@sp& (0+255),f,b
  1771  0008CA  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  1772                           
  1773                           ;doprnt.c: 551: continue;
  1774  0008CC  EF3C  F00B         	goto	l10467
  1775  0008D0                     l10149:
  1776                           
  1777                           ; BSR set to: 1
  1778                           ;doprnt.c: 552: }
  1779                           ;doprnt.c: 555: width = 0;
  1780  0008D0  0E00               	movlw	0
  1781  0008D2  0101               	movlb	1	; () banked
  1782  0008D4  0101               	movlb	1	; () banked
  1783  0008D6  6F78               	movwf	(sprintf@width+1)& (0+255),b
  1784  0008D8  0E00               	movlw	0
  1785  0008DA  0101               	movlb	1	; () banked
  1786  0008DC  6F77               	movwf	sprintf@width& (0+255),b
  1787                           
  1788                           ;doprnt.c: 557: flag = 0;
  1789  0008DE  0E00               	movlw	0
  1790  0008E0  0101               	movlb	1	; () banked
  1791  0008E2  0101               	movlb	1	; () banked
  1792  0008E4  6F74               	movwf	(sprintf@flag+1)& (0+255),b
  1793  0008E6  0E00               	movlw	0
  1794  0008E8  0101               	movlb	1	; () banked
  1795  0008EA  6F73               	movwf	sprintf@flag& (0+255),b
  1796  0008EC  D007               	goto	l10155
  1797  0008EE                     l10151:
  1798                           
  1799                           ; BSR set to: 1
  1800                           ;doprnt.c: 589: flag |= 0x04;
  1801  0008EE  0101               	movlb	1	; () banked
  1802  0008F0  0101               	movlb	1	; () banked
  1803  0008F2  8573               	bsf	sprintf@flag& (0+255),2,b
  1804                           
  1805                           ;doprnt.c: 590: f++;
  1806  0008F4  0101               	movlb	1	; () banked
  1807  0008F6  0101               	movlb	1	; () banked
  1808  0008F8  4B53               	infsnz	sprintf@f& (0+255),f,b
  1809  0008FA  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1810  0008FC                     l10155:
  1811                           
  1812                           ; BSR set to: 1
  1813  0008FC  0101               	movlb	1	; () banked
  1814  0008FE  C153  FFF6         	movff	sprintf@f,tblptrl
  1815  000902  0101               	movlb	1	; () banked
  1816  000904  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1817  000908  0008               	tblrd		*
  1818  00090A  50F5               	movf	tablat,w,c
  1819                           
  1820                           ; Switch size 1, requested type "space"
  1821                           ; Number of cases is 1, Range of values is 48 to 48
  1822                           ; switch strategies available:
  1823                           ; Name         Instructions Cycles
  1824                           ; simple_byte            4     3 (average)
  1825                           ;	Chosen strategy is simple_byte
  1826  00090C  0A30               	xorlw	48	; case 48
  1827  00090E  B4D8               	btfsc	status,2,c
  1828  000910  D7EE               	goto	l10151
  1829                           
  1830                           ; BSR set to: 1
  1831                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1832                           
  1833                           ; BSR set to: 1
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;doprnt.c: 595: }
  1837                           
  1838                           ; BSR set to: 1
  1839                           ;doprnt.c: 594: break;
  1840  000912  0101               	movlb	1	; () banked
  1841  000914  C153  FFF6         	movff	sprintf@f,tblptrl
  1842  000918  0101               	movlb	1	; () banked
  1843  00091A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1844  00091E  0008               	tblrd		*
  1845  000920  0101               	movlb	1	; () banked
  1846  000922  CFF5 F100          	movff	tablat,?_isdigit
  1847  000926  ECD4  F02F         	call	_isdigit	;wreg free
  1848  00092A  A0D8               	btfss	status,0,c
  1849  00092C  D049               	goto	l10169
  1850                           
  1851                           ;doprnt.c: 607: width = 0;
  1852  00092E  0E00               	movlw	0
  1853  000930  0101               	movlb	1	; () banked
  1854  000932  0101               	movlb	1	; () banked
  1855  000934  6F78               	movwf	(sprintf@width+1)& (0+255),b
  1856  000936  0E00               	movlw	0
  1857  000938  0101               	movlb	1	; () banked
  1858  00093A  6F77               	movwf	sprintf@width& (0+255),b
  1859  00093C                     l10161:
  1860                           
  1861                           ;doprnt.c: 609: width *= 10;
  1862  00093C  C177  F110         	movff	sprintf@width,?___wmul
  1863  000940  C178  F111         	movff	sprintf@width+1,?___wmul+1
  1864  000944  0E00               	movlw	0
  1865  000946  0101               	movlb	1	; () banked
  1866  000948  0101               	movlb	1	; () banked
  1867  00094A  6F13               	movwf	(?___wmul+3)& (0+255),b
  1868  00094C  0E0A               	movlw	10
  1869  00094E  0101               	movlb	1	; () banked
  1870  000950  6F12               	movwf	(?___wmul+2)& (0+255),b
  1871  000952  EC5B  F02E         	call	___wmul	;wreg free
  1872  000956  0101               	movlb	1	; () banked
  1873  000958  C110  F177         	movff	?___wmul,sprintf@width
  1874  00095C  0101               	movlb	1	; () banked
  1875  00095E  C111  F178         	movff	?___wmul+1,sprintf@width+1
  1876                           
  1877                           ; BSR set to: 1
  1878                           ;doprnt.c: 610: width += *f++ - '0';
  1879  000962  0101               	movlb	1	; () banked
  1880  000964  C153  FFF6         	movff	sprintf@f,tblptrl
  1881  000968  0101               	movlb	1	; () banked
  1882  00096A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1883  00096E  0008               	tblrd		*
  1884  000970  CFF5 F158          	movff	tablat,??_sprintf
  1885  000974  0ED0               	movlw	208
  1886  000976  0101               	movlb	1	; () banked
  1887  000978  2558               	addwf	??_sprintf& (0+255),w,b
  1888  00097A  0101               	movlb	1	; () banked
  1889  00097C  6F59               	movwf	(??_sprintf+1)& (0+255),b
  1890  00097E  0101               	movlb	1	; () banked
  1891  000980  0101               	movlb	1	; () banked
  1892  000982  6B5A               	clrf	(??_sprintf+2)& (0+255),b
  1893  000984  0EFF               	movlw	255
  1894  000986  235A               	addwfc	(??_sprintf+2)& (0+255),f,b
  1895  000988  0101               	movlb	1	; () banked
  1896  00098A  5159               	movf	(??_sprintf+1)& (0+255),w,b
  1897  00098C  0101               	movlb	1	; () banked
  1898  00098E  0101               	movlb	1	; () banked
  1899  000990  2777               	addwf	sprintf@width& (0+255),f,b
  1900  000992  0101               	movlb	1	; () banked
  1901  000994  515A               	movf	(??_sprintf+2)& (0+255),w,b
  1902  000996  0101               	movlb	1	; () banked
  1903  000998  0101               	movlb	1	; () banked
  1904  00099A  2378               	addwfc	(sprintf@width+1)& (0+255),f,b
  1905                           
  1906                           ; BSR set to: 1
  1907  00099C  0101               	movlb	1	; () banked
  1908  00099E  0101               	movlb	1	; () banked
  1909  0009A0  4B53               	infsnz	sprintf@f& (0+255),f,b
  1910  0009A2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1911                           
  1912                           ; BSR set to: 1
  1913                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1914  0009A4  0101               	movlb	1	; () banked
  1915  0009A6  C153  FFF6         	movff	sprintf@f,tblptrl
  1916  0009AA  0101               	movlb	1	; () banked
  1917  0009AC  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1918  0009B0  0008               	tblrd		*
  1919  0009B2  0101               	movlb	1	; () banked
  1920  0009B4  CFF5 F100          	movff	tablat,?_isdigit
  1921  0009B8  ECD4  F02F         	call	_isdigit	;wreg free
  1922  0009BC  B0D8               	btfsc	status,0,c
  1923  0009BE  D7BE               	goto	l10161
  1924  0009C0                     l10169:
  1925                           
  1926                           ;doprnt.c: 617: }
  1927                           ;doprnt.c: 620: if(*f == '.') {
  1928  0009C0  0101               	movlb	1	; () banked
  1929  0009C2  C153  FFF6         	movff	sprintf@f,tblptrl
  1930  0009C6  0101               	movlb	1	; () banked
  1931  0009C8  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1932  0009CC  0008               	tblrd		*
  1933  0009CE  50F5               	movf	tablat,w,c
  1934  0009D0  0A2E               	xorlw	46
  1935  0009D2  A4D8               	btfss	status,2,c
  1936  0009D4  D04A               	goto	l10181
  1937                           
  1938                           ; BSR set to: 1
  1939                           ;doprnt.c: 621: flag |= 0x4000;
  1940  0009D6  0101               	movlb	1	; () banked
  1941  0009D8  0101               	movlb	1	; () banked
  1942  0009DA  8D74               	bsf	(sprintf@flag+1)& (0+255),6,b
  1943                           
  1944                           ;doprnt.c: 622: f++;
  1945  0009DC  0101               	movlb	1	; () banked
  1946  0009DE  0101               	movlb	1	; () banked
  1947  0009E0  4B53               	infsnz	sprintf@f& (0+255),f,b
  1948  0009E2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1949                           
  1950                           ; BSR set to: 1
  1951                           ;doprnt.c: 629: {
  1952                           ;doprnt.c: 630: prec = 0;
  1953  0009E4  0E00               	movlw	0
  1954  0009E6  0101               	movlb	1	; () banked
  1955  0009E8  0101               	movlb	1	; () banked
  1956  0009EA  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  1957  0009EC  0E00               	movlw	0
  1958  0009EE  0101               	movlb	1	; () banked
  1959  0009F0  6F7C               	movwf	sprintf@prec& (0+255),b
  1960                           
  1961                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1962  0009F2  D02C               	goto	l10179
  1963  0009F4                     l10175:
  1964                           
  1965                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1966  0009F4  C17C  F110         	movff	sprintf@prec,?___wmul
  1967  0009F8  C17D  F111         	movff	sprintf@prec+1,?___wmul+1
  1968  0009FC  0E00               	movlw	0
  1969  0009FE  0101               	movlb	1	; () banked
  1970  000A00  0101               	movlb	1	; () banked
  1971  000A02  6F13               	movwf	(?___wmul+3)& (0+255),b
  1972  000A04  0E0A               	movlw	10
  1973  000A06  0101               	movlb	1	; () banked
  1974  000A08  6F12               	movwf	(?___wmul+2)& (0+255),b
  1975  000A0A  EC5B  F02E         	call	___wmul	;wreg free
  1976  000A0E  0101               	movlb	1	; () banked
  1977  000A10  C153  FFF6         	movff	sprintf@f,tblptrl
  1978  000A14  0101               	movlb	1	; () banked
  1979  000A16  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1980  000A1A  0008               	tblrd		*
  1981  000A1C  50F5               	movf	tablat,w,c
  1982  000A1E  0101               	movlb	1	; () banked
  1983  000A20  0101               	movlb	1	; () banked
  1984  000A22  2710               	addwf	?___wmul& (0+255),f,b
  1985  000A24  0E00               	movlw	0
  1986  000A26  0101               	movlb	1	; () banked
  1987  000A28  2311               	addwfc	(?___wmul+1)& (0+255),f,b
  1988  000A2A  0ED0               	movlw	208
  1989  000A2C  0101               	movlb	1	; () banked
  1990  000A2E  0101               	movlb	1	; () banked
  1991  000A30  2510               	addwf	?___wmul& (0+255),w,b
  1992  000A32  0101               	movlb	1	; () banked
  1993  000A34  0101               	movlb	1	; () banked
  1994  000A36  6F7C               	movwf	sprintf@prec& (0+255),b
  1995  000A38  0EFF               	movlw	255
  1996  000A3A  0101               	movlb	1	; () banked
  1997  000A3C  0101               	movlb	1	; () banked
  1998  000A3E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  1999  000A40  0101               	movlb	1	; () banked
  2000  000A42  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2001                           
  2002                           ; BSR set to: 1
  2003  000A44  0101               	movlb	1	; () banked
  2004  000A46  0101               	movlb	1	; () banked
  2005  000A48  4B53               	infsnz	sprintf@f& (0+255),f,b
  2006  000A4A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2007  000A4C                     l10179:
  2008                           
  2009                           ; BSR set to: 1
  2010  000A4C  0101               	movlb	1	; () banked
  2011  000A4E  C153  FFF6         	movff	sprintf@f,tblptrl
  2012  000A52  0101               	movlb	1	; () banked
  2013  000A54  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2014  000A58  0008               	tblrd		*
  2015  000A5A  0101               	movlb	1	; () banked
  2016  000A5C  CFF5 F100          	movff	tablat,?_isdigit
  2017  000A60  ECD4  F02F         	call	_isdigit	;wreg free
  2018  000A64  A0D8               	btfss	status,0,c
  2019  000A66  D010               	goto	l10189
  2020  000A68  D7C5               	goto	l10175
  2021  000A6A                     l10181:
  2022                           
  2023                           ;doprnt.c: 635: prec = 0;
  2024  000A6A  0E00               	movlw	0
  2025  000A6C  0101               	movlb	1	; () banked
  2026  000A6E  0101               	movlb	1	; () banked
  2027  000A70  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2028  000A72  0E00               	movlw	0
  2029  000A74  0101               	movlb	1	; () banked
  2030  000A76  6F7C               	movwf	sprintf@prec& (0+255),b
  2031                           
  2032                           ; BSR set to: 1
  2033                           ;doprnt.c: 637: flag |= 0x1000;
  2034  000A78  0101               	movlb	1	; () banked
  2035  000A7A  0101               	movlb	1	; () banked
  2036  000A7C  8974               	bsf	(sprintf@flag+1)& (0+255),4,b
  2037  000A7E  D004               	goto	l10189
  2038  000A80                     l10185:
  2039                           
  2040                           ; BSR set to: 1
  2041                           ;doprnt.c: 672: flag |= 0x400;
  2042  000A80  0101               	movlb	1	; () banked
  2043  000A82  0101               	movlb	1	; () banked
  2044  000A84  8574               	bsf	(sprintf@flag+1)& (0+255),2,b
  2045                           
  2046                           ;doprnt.c: 673: break;
  2047  000A86  D01E               	goto	l10191
  2048  000A88                     l10189:
  2049  000A88  0101               	movlb	1	; () banked
  2050  000A8A  C153  FFF6         	movff	sprintf@f,tblptrl
  2051  000A8E  0101               	movlb	1	; () banked
  2052  000A90  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2053  000A94  0101               	movlb	1	; () banked
  2054  000A96  0101               	movlb	1	; () banked
  2055  000A98  4B53               	infsnz	sprintf@f& (0+255),f,b
  2056  000A9A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2057  000A9C  0008               	tblrd		*
  2058  000A9E  0101               	movlb	1	; () banked
  2059  000AA0  CFF5 F17E          	movff	tablat,sprintf@c
  2060  000AA4  0101               	movlb	1	; () banked
  2061  000AA6  517E               	movf	sprintf@c& (0+255),w,b
  2062                           
  2063                           ; Switch size 1, requested type "space"
  2064                           ; Number of cases is 4, Range of values is 0 to 105
  2065                           ; switch strategies available:
  2066                           ; Name         Instructions Cycles
  2067                           ; simple_byte           13     7 (average)
  2068                           ;	Chosen strategy is simple_byte
  2069  000AA8  0A00               	xorlw	0	; case 0
  2070  000AAA  B4D8               	btfsc	status,2,c
  2071  000AAC  EF4E  F00B         	goto	l10469
  2072  000AB0  0A64               	xorlw	100	; case 100
  2073  000AB2  B4D8               	btfsc	status,2,c
  2074  000AB4  D007               	goto	l10191
  2075  000AB6  0A02               	xorlw	2	; case 102
  2076  000AB8  B4D8               	btfsc	status,2,c
  2077  000ABA  D7E2               	goto	l10185
  2078  000ABC  0A0F               	xorlw	15	; case 105
  2079  000ABE  A4D8               	btfss	status,2,c
  2080  000AC0  EF3C  F00B         	goto	l10467
  2081  000AC4                     l10191:
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;doprnt.c: 834: if(flag & (0x700)) {
  2085  000AC4  0E07               	movlw	7
  2086  000AC6  0101               	movlb	1	; () banked
  2087  000AC8  0101               	movlb	1	; () banked
  2088  000ACA  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2089  000ACC  B4D8               	btfsc	status,2,c
  2090  000ACE  D3EF               	goto	l10371
  2091                           
  2092                           ; BSR set to: 1
  2093                           ;doprnt.c: 836: if(flag & 0x1000)
  2094  000AD0  0101               	movlb	1	; () banked
  2095  000AD2  0101               	movlb	1	; () banked
  2096  000AD4  A974               	btfss	(sprintf@flag+1)& (0+255),4,b
  2097  000AD6  D007               	goto	l10197
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;doprnt.c: 838: prec = 6;
  2101  000AD8  0E00               	movlw	0
  2102  000ADA  0101               	movlb	1	; () banked
  2103  000ADC  0101               	movlb	1	; () banked
  2104  000ADE  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2105  000AE0  0E06               	movlw	6
  2106  000AE2  0101               	movlb	1	; () banked
  2107  000AE4  6F7C               	movwf	sprintf@prec& (0+255),b
  2108  000AE6                     l10197:
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2112  000AE6  C169  FFD9         	movff	sprintf@ap,fsr2l
  2113  000AEA  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  2114  000AEE  0101               	movlb	1	; () banked
  2115  000AF0  CFDE F179          	movff	postinc2,sprintf@fval
  2116  000AF4  0101               	movlb	1	; () banked
  2117  000AF6  CFDE F17A          	movff	postinc2,sprintf@fval+1
  2118  000AFA  0101               	movlb	1	; () banked
  2119  000AFC  CFDD F17B          	movff	postdec2,sprintf@fval+2
  2120                           
  2121                           ; BSR set to: 1
  2122  000B00  0E03               	movlw	3
  2123  000B02  0101               	movlb	1	; () banked
  2124  000B04  0101               	movlb	1	; () banked
  2125  000B06  2769               	addwf	sprintf@ap& (0+255),f,b
  2126  000B08  0E00               	movlw	0
  2127  000B0A  0101               	movlb	1	; () banked
  2128  000B0C  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2129                           
  2130                           ; BSR set to: 1
  2131                           ;doprnt.c: 840: if(fval < 0.0) {
  2132  000B0E  0101               	movlb	1	; () banked
  2133  000B10  0101               	movlb	1	; () banked
  2134  000B12  517B               	movf	(sprintf@fval+2)& (0+255),w,b
  2135  000B14  0A80               	xorlw	128
  2136  000B16  0F80               	addlw	128
  2137  000B18  E107               	bnz	u8975
  2138  000B1A  0E00               	movlw	0
  2139  000B1C  0101               	movlb	1	; () banked
  2140  000B1E  5D7A               	subwf	(sprintf@fval+1)& (0+255),w,b
  2141  000B20  E103               	bnz	u8975
  2142  000B22  0E00               	movlw	0
  2143  000B24  0101               	movlb	1	; () banked
  2144  000B26  5D79               	subwf	sprintf@fval& (0+255),w,b
  2145  000B28                     u8975:
  2146  000B28  B0D8               	btfsc	status,0,c
  2147  000B2A  D012               	goto	l10207
  2148                           
  2149                           ; BSR set to: 1
  2150                           ;doprnt.c: 841: fval = -fval;
  2151  000B2C  C179  F100         	movff	sprintf@fval,?___ftneg
  2152  000B30  C17A  F101         	movff	sprintf@fval+1,?___ftneg+1
  2153  000B34  C17B  F102         	movff	sprintf@fval+2,?___ftneg+2
  2154  000B38  EC4D  F030         	call	___ftneg	;wreg free
  2155  000B3C  C102  F17B         	movff	?___ftneg+2,sprintf@fval+2
  2156  000B40  C101  F17A         	movff	?___ftneg+1,sprintf@fval+1
  2157  000B44  C100  F179         	movff	?___ftneg,sprintf@fval
  2158                           
  2159                           ;doprnt.c: 842: flag |= 0x03;
  2160  000B48  0E03               	movlw	3
  2161  000B4A  0101               	movlb	1	; () banked
  2162  000B4C  0101               	movlb	1	; () banked
  2163  000B4E  1373               	iorwf	sprintf@flag& (0+255),f,b
  2164  000B50                     l10207:
  2165                           
  2166                           ; BSR set to: 1
  2167                           ;doprnt.c: 843: }
  2168                           ;doprnt.c: 844: exp = 0;
  2169  000B50  0E00               	movlw	0
  2170  000B52  0101               	movlb	1	; () banked
  2171  000B54  0101               	movlb	1	; () banked
  2172  000B56  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2173  000B58  0E00               	movlw	0
  2174  000B5A  0101               	movlb	1	; () banked
  2175  000B5C  6F75               	movwf	sprintf@exp& (0+255),b
  2176                           
  2177                           ; BSR set to: 1
  2178                           ;doprnt.c: 845: if( fval!=0) {
  2179  000B5E  0E7F               	movlw	127
  2180  000B60  0101               	movlb	1	; () banked
  2181  000B62  0101               	movlb	1	; () banked
  2182  000B64  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  2183  000B66  0101               	movlb	1	; () banked
  2184  000B68  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2185  000B6A  0101               	movlb	1	; () banked
  2186  000B6C  1179               	iorwf	sprintf@fval& (0+255),w,b
  2187  000B6E  B4D8               	btfsc	status,2,c
  2188  000B70  D0B1               	goto	l10235
  2189                           
  2190                           ; BSR set to: 1
  2191                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2192  000B72  0E82               	movlw	130
  2193  000B74  0101               	movlb	1	; () banked
  2194  000B76  6F58               	movwf	??_sprintf& (0+255),b
  2195  000B78  0EFF               	movlw	255
  2196  000B7A  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2197  000B7C  0101               	movlb	1	; () banked
  2198  000B7E  C179  F15A         	movff	sprintf@fval,??_sprintf+2
  2199  000B82  0101               	movlb	1	; () banked
  2200  000B84  C17A  F15B         	movff	sprintf@fval+1,??_sprintf+3
  2201  000B88  0101               	movlb	1	; () banked
  2202  000B8A  C17B  F15C         	movff	sprintf@fval+2,??_sprintf+4
  2203  000B8E  0101               	movlb	1	; () banked
  2204  000B90  C17C  F15D         	movff	sprintf@fval+3,??_sprintf+5
  2205  000B94  0E10               	movlw	16
  2206  000B96  D006               	goto	u8990
  2207  000B98                     u8995:
  2208  000B98  0101               	movlb	1	; () banked
  2209  000B9A  90D8               	bcf	status,0,c
  2210  000B9C  335D               	rrcf	(??_sprintf+5)& (0+255),f,b
  2211  000B9E  335C               	rrcf	(??_sprintf+4)& (0+255),f,b
  2212  000BA0  335B               	rrcf	(??_sprintf+3)& (0+255),f,b
  2213  000BA2  335A               	rrcf	(??_sprintf+2)& (0+255),f,b
  2214  000BA4                     u8990:
  2215  000BA4  2EE8               	decfsz	wreg,f,c
  2216  000BA6  D7F8               	goto	u8995
  2217  000BA8  0101               	movlb	1	; () banked
  2218  000BAA  515A               	movf	(??_sprintf+2)& (0+255),w,b
  2219  000BAC  0101               	movlb	1	; () banked
  2220  000BAE  2558               	addwf	??_sprintf& (0+255),w,b
  2221  000BB0  0101               	movlb	1	; () banked
  2222  000BB2  0101               	movlb	1	; () banked
  2223  000BB4  6F75               	movwf	sprintf@exp& (0+255),b
  2224  000BB6  0101               	movlb	1	; () banked
  2225  000BB8  0101               	movlb	1	; () banked
  2226  000BBA  0E00               	movlw	0
  2227  000BBC  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  2228  000BBE  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2229                           
  2230                           ; BSR set to: 1
  2231                           ;doprnt.c: 847: exp--;
  2232  000BC0  0101               	movlb	1	; () banked
  2233  000BC2  0101               	movlb	1	; () banked
  2234  000BC4  0775               	decf	sprintf@exp& (0+255),f,b
  2235  000BC6  A0D8               	btfss	status,0,c
  2236  000BC8  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2237                           
  2238                           ; BSR set to: 1
  2239                           ;doprnt.c: 848: exp *= 3;
  2240  000BCA  C175  F110         	movff	sprintf@exp,?___wmul
  2241  000BCE  C176  F111         	movff	sprintf@exp+1,?___wmul+1
  2242  000BD2  0E00               	movlw	0
  2243  000BD4  0101               	movlb	1	; () banked
  2244  000BD6  0101               	movlb	1	; () banked
  2245  000BD8  6F13               	movwf	(?___wmul+3)& (0+255),b
  2246  000BDA  0E03               	movlw	3
  2247  000BDC  0101               	movlb	1	; () banked
  2248  000BDE  6F12               	movwf	(?___wmul+2)& (0+255),b
  2249  000BE0  EC5B  F02E         	call	___wmul	;wreg free
  2250  000BE4  0101               	movlb	1	; () banked
  2251  000BE6  C110  F175         	movff	?___wmul,sprintf@exp
  2252  000BEA  0101               	movlb	1	; () banked
  2253  000BEC  C111  F176         	movff	?___wmul+1,sprintf@exp+1
  2254                           
  2255                           ; BSR set to: 1
  2256                           ;doprnt.c: 849: exp /= 10;
  2257  000BF0  C175  F107         	movff	sprintf@exp,?___awdiv
  2258  000BF4  C176  F108         	movff	sprintf@exp+1,?___awdiv+1
  2259  000BF8  0E00               	movlw	0
  2260  000BFA  0101               	movlb	1	; () banked
  2261  000BFC  0101               	movlb	1	; () banked
  2262  000BFE  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  2263  000C00  0E0A               	movlw	10
  2264  000C02  0101               	movlb	1	; () banked
  2265  000C04  6F09               	movwf	(?___awdiv+2)& (0+255),b
  2266  000C06  EC6E  F023         	call	___awdiv	;wreg free
  2267  000C0A  0101               	movlb	1	; () banked
  2268  000C0C  C107  F175         	movff	?___awdiv,sprintf@exp
  2269  000C10  0101               	movlb	1	; () banked
  2270  000C12  C108  F176         	movff	?___awdiv+1,sprintf@exp+1
  2271                           
  2272                           ; BSR set to: 1
  2273                           ;doprnt.c: 850: if(exp < 0)
  2274  000C16  0101               	movlb	1	; () banked
  2275  000C18  0101               	movlb	1	; () banked
  2276  000C1A  AF76               	btfss	(sprintf@exp+1)& (0+255),7,b
  2277  000C1C  D005               	goto	l10223
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;doprnt.c: 851: exp--;
  2281  000C1E  0101               	movlb	1	; () banked
  2282  000C20  0101               	movlb	1	; () banked
  2283  000C22  0775               	decf	sprintf@exp& (0+255),f,b
  2284  000C24  A0D8               	btfss	status,0,c
  2285  000C26  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2286  000C28                     l10223:
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;doprnt.c: 855: integ = scale(-exp);
  2290  000C28  0101               	movlb	1	; () banked
  2291  000C2A  0101               	movlb	1	; () banked
  2292  000C2C  5175               	movf	sprintf@exp& (0+255),w,b
  2293  000C2E  0800               	sublw	0
  2294  000C30  0101               	movlb	1	; () banked
  2295  000C32  0101               	movlb	1	; () banked
  2296  000C34  6F27               	movwf	?_scale& (0+255),b
  2297  000C36  EC0A  F012         	call	_scale	;wreg free
  2298  000C3A  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  2299  000C3E  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  2300  000C42  C127  F16B         	movff	?_scale,sprintf@integ
  2301                           
  2302                           ;doprnt.c: 856: integ *= fval;
  2303  000C46  0101               	movlb	1	; () banked
  2304  000C48  0E01               	movlw	high sprintf@integ
  2305  000C4A  0101               	movlb	1	; () banked
  2306  000C4C  0101               	movlb	1	; () banked
  2307  000C4E  6F28               	movwf	(?___asftmul+1)& (0+255),b
  2308  000C50  0101               	movlb	1	; () banked
  2309  000C52  0E6B               	movlw	low sprintf@integ
  2310  000C54  0101               	movlb	1	; () banked
  2311  000C56  6F27               	movwf	?___asftmul& (0+255),b
  2312  000C58  C179  F129         	movff	sprintf@fval,?___asftmul+2
  2313  000C5C  C17A  F12A         	movff	sprintf@fval+1,?___asftmul+3
  2314  000C60  C17B  F12B         	movff	sprintf@fval+2,?___asftmul+4
  2315  000C64  EC92  F02F         	call	___asftmul	;wreg free
  2316                           
  2317                           ;doprnt.c: 857: if(integ < 1.0)
  2318  000C68  C16B  F100         	movff	sprintf@integ,?___ftge
  2319  000C6C  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2320  000C70  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2321  000C74  0E00               	movlw	0
  2322  000C76  0101               	movlb	1	; () banked
  2323  000C78  0101               	movlb	1	; () banked
  2324  000C7A  6F03               	movwf	(?___ftge+3)& (0+255),b
  2325  000C7C  0E80               	movlw	128
  2326  000C7E  0101               	movlb	1	; () banked
  2327  000C80  0101               	movlb	1	; () banked
  2328  000C82  6F04               	movwf	(?___ftge+4)& (0+255),b
  2329  000C84  0E3F               	movlw	63
  2330  000C86  0101               	movlb	1	; () banked
  2331  000C88  0101               	movlb	1	; () banked
  2332  000C8A  6F05               	movwf	(?___ftge+5)& (0+255),b
  2333  000C8C  EC97  F026         	call	___ftge	;wreg free
  2334  000C90  B0D8               	btfsc	status,0,c
  2335  000C92  D006               	goto	l10231
  2336                           
  2337                           ;doprnt.c: 858: exp--;
  2338  000C94  0101               	movlb	1	; () banked
  2339  000C96  0101               	movlb	1	; () banked
  2340  000C98  0775               	decf	sprintf@exp& (0+255),f,b
  2341  000C9A  A0D8               	btfss	status,0,c
  2342  000C9C  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2343  000C9E  D01A               	goto	l10235
  2344  000CA0                     l10231:
  2345                           
  2346                           ;doprnt.c: 859: else if(integ >= 10.0)
  2347  000CA0  C16B  F100         	movff	sprintf@integ,?___ftge
  2348  000CA4  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2349  000CA8  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2350  000CAC  0E00               	movlw	0
  2351  000CAE  0101               	movlb	1	; () banked
  2352  000CB0  0101               	movlb	1	; () banked
  2353  000CB2  6F03               	movwf	(?___ftge+3)& (0+255),b
  2354  000CB4  0E20               	movlw	32
  2355  000CB6  0101               	movlb	1	; () banked
  2356  000CB8  0101               	movlb	1	; () banked
  2357  000CBA  6F04               	movwf	(?___ftge+4)& (0+255),b
  2358  000CBC  0E41               	movlw	65
  2359  000CBE  0101               	movlb	1	; () banked
  2360  000CC0  0101               	movlb	1	; () banked
  2361  000CC2  6F05               	movwf	(?___ftge+5)& (0+255),b
  2362  000CC4  EC97  F026         	call	___ftge	;wreg free
  2363  000CC8  A0D8               	btfss	status,0,c
  2364  000CCA  D004               	goto	l10235
  2365                           
  2366                           ;doprnt.c: 860: exp++;
  2367  000CCC  0101               	movlb	1	; () banked
  2368  000CCE  0101               	movlb	1	; () banked
  2369  000CD0  4B75               	infsnz	sprintf@exp& (0+255),f,b
  2370  000CD2  2B76               	incf	(sprintf@exp+1)& (0+255),f,b
  2371  000CD4                     l10235:
  2372                           
  2373                           ;doprnt.c: 861: }
  2374                           ;doprnt.c: 1121: if(prec <= 12)
  2375  000CD4  0101               	movlb	1	; () banked
  2376  000CD6  0101               	movlb	1	; () banked
  2377  000CD8  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2378  000CDA  0A80               	xorlw	128
  2379  000CDC  0F80               	addlw	-128
  2380  000CDE  0E0D               	movlw	13
  2381  000CE0  B4D8               	btfsc	status,2,c
  2382  000CE2  5D7C               	subwf	sprintf@prec& (0+255),w,b
  2383  000CE4  B0D8               	btfsc	status,0,c
  2384  000CE6  D015               	goto	l10239
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;doprnt.c: 1122: fval += fround(prec);
  2388  000CE8  0101               	movlb	1	; () banked
  2389  000CEA  0E01               	movlw	high sprintf@fval
  2390  000CEC  0101               	movlb	1	; () banked
  2391  000CEE  0101               	movlb	1	; () banked
  2392  000CF0  6F47               	movwf	(?___asftadd+1)& (0+255),b
  2393  000CF2  0101               	movlb	1	; () banked
  2394  000CF4  0E79               	movlw	low sprintf@fval
  2395  000CF6  0101               	movlb	1	; () banked
  2396  000CF8  6F46               	movwf	?___asftadd& (0+255),b
  2397  000CFA  C17C  F127         	movff	sprintf@prec,?_fround
  2398  000CFE  EC3C  F017         	call	_fround	;wreg free
  2399  000D02  C129  F14A         	movff	?_fround+2,?___asftadd+4
  2400  000D06  C128  F149         	movff	?_fround+1,?___asftadd+3
  2401  000D0A  C127  F148         	movff	?_fround,?___asftadd+2
  2402  000D0E  ECB3  F02F         	call	___asftadd	;wreg free
  2403  000D12                     l10239:
  2404                           
  2405                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2406  000D12  0101               	movlb	1	; () banked
  2407  000D14  0101               	movlb	1	; () banked
  2408  000D16  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2409  000D18  0A80               	xorlw	128
  2410  000D1A  0F80               	addlw	-128
  2411  000D1C  0E0A               	movlw	10
  2412  000D1E  B4D8               	btfsc	status,2,c
  2413  000D20  5D75               	subwf	sprintf@exp& (0+255),w,b
  2414  000D22  B0D8               	btfsc	status,0,c
  2415  000D24  D024               	goto	l10247
  2416                           
  2417                           ; BSR set to: 1
  2418  000D26  0E7F               	movlw	127
  2419  000D28  0101               	movlb	1	; () banked
  2420  000D2A  0101               	movlb	1	; () banked
  2421  000D2C  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  2422  000D2E  0101               	movlb	1	; () banked
  2423  000D30  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2424  000D32  0101               	movlb	1	; () banked
  2425  000D34  1179               	iorwf	sprintf@fval& (0+255),w,b
  2426  000D36  B4D8               	btfsc	status,2,c
  2427  000D38  D06F               	goto	l10263
  2428                           
  2429                           ; BSR set to: 1
  2430  000D3A  C179  F133         	movff	sprintf@fval,?___fttol
  2431  000D3E  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  2432  000D42  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  2433  000D46  EC70  F021         	call	___fttol	;wreg free
  2434  000D4A  0101               	movlb	1	; () banked
  2435  000D4C  0101               	movlb	1	; () banked
  2436  000D4E  5136               	movf	(?___fttol+3)& (0+255),w,b
  2437  000D50  1133               	iorwf	?___fttol& (0+255),w,b
  2438  000D52  1134               	iorwf	(?___fttol+1)& (0+255),w,b
  2439  000D54  1135               	iorwf	(?___fttol+2)& (0+255),w,b
  2440  000D56  A4D8               	btfss	status,2,c
  2441  000D58  D05F               	goto	l10263
  2442                           
  2443                           ; BSR set to: 1
  2444  000D5A  0101               	movlb	1	; () banked
  2445  000D5C  0101               	movlb	1	; () banked
  2446  000D5E  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2447  000D60  0A80               	xorlw	128
  2448  000D62  0F80               	addlw	-128
  2449  000D64  0E02               	movlw	2
  2450  000D66  B4D8               	btfsc	status,2,c
  2451  000D68  5D75               	subwf	sprintf@exp& (0+255),w,b
  2452  000D6A  A0D8               	btfss	status,0,c
  2453  000D6C  D055               	goto	l10263
  2454  000D6E                     l10247:
  2455                           
  2456                           ; BSR set to: 1
  2457                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2458  000D6E  C16B  F100         	movff	sprintf@integ,?___ftge
  2459  000D72  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2460  000D76  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2461  000D7A  0E70               	movlw	112
  2462  000D7C  0101               	movlb	1	; () banked
  2463  000D7E  0101               	movlb	1	; () banked
  2464  000D80  6F03               	movwf	(?___ftge+3)& (0+255),b
  2465  000D82  0E89               	movlw	137
  2466  000D84  0101               	movlb	1	; () banked
  2467  000D86  0101               	movlb	1	; () banked
  2468  000D88  6F04               	movwf	(?___ftge+4)& (0+255),b
  2469  000D8A  0E40               	movlw	64
  2470  000D8C  0101               	movlb	1	; () banked
  2471  000D8E  0101               	movlb	1	; () banked
  2472  000D90  6F05               	movwf	(?___ftge+5)& (0+255),b
  2473  000D92  EC97  F026         	call	___ftge	;wreg free
  2474  000D96  B0D8               	btfsc	status,0,c
  2475  000D98  D003               	goto	l10251
  2476                           
  2477                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2478  000D9A  0101               	movlb	1	; () banked
  2479  000D9C  0EF7               	movlw	247
  2480  000D9E  D002               	goto	L1
  2481  000DA0                     l10251:
  2482                           
  2483                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2484  000DA0  0101               	movlb	1	; () banked
  2485  000DA2  0EF8               	movlw	248
  2486  000DA4                     L1:
  2487  000DA4  0101               	movlb	1	; () banked
  2488  000DA6  2775               	addwf	sprintf@exp& (0+255),f,b
  2489  000DA8  0EFF               	movlw	255
  2490  000DAA  0101               	movlb	1	; () banked
  2491  000DAC  2376               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2492                           
  2493                           ; BSR set to: 1
  2494                           ;doprnt.c: 1133: }
  2495                           ;doprnt.c: 1134: integ = scale(exp);
  2496                           
  2497                           ; BSR set to: 1
  2498  000DAE  C175  F127         	movff	sprintf@exp,?_scale
  2499  000DB2  EC0A  F012         	call	_scale	;wreg free
  2500  000DB6  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  2501  000DBA  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  2502  000DBE  C127  F16B         	movff	?_scale,sprintf@integ
  2503                           
  2504                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2505  000DC2  C179  F100         	movff	sprintf@fval,?__tdiv_to_l_
  2506  000DC6  C17A  F101         	movff	sprintf@fval+1,?__tdiv_to_l_+1
  2507  000DCA  C17B  F102         	movff	sprintf@fval+2,?__tdiv_to_l_+2
  2508  000DCE  C16B  F103         	movff	sprintf@integ,?__tdiv_to_l_+3
  2509  000DD2  C16C  F104         	movff	sprintf@integ+1,?__tdiv_to_l_+4
  2510  000DD6  C16D  F105         	movff	sprintf@integ+2,?__tdiv_to_l_+5
  2511  000DDA  ECD9  F01B         	call	__tdiv_to_l_	;wreg free
  2512  000DDE  C103  F164         	movff	?__tdiv_to_l_+3,_sprintf$563+3
  2513  000DE2  C102  F163         	movff	?__tdiv_to_l_+2,_sprintf$563+2
  2514  000DE6  C101  F162         	movff	?__tdiv_to_l_+1,_sprintf$563+1
  2515  000DEA  C100  F161         	movff	?__tdiv_to_l_,_sprintf$563
  2516  000DEE  C161  F16E         	movff	_sprintf$563,sprintf@_val
  2517  000DF2  C162  F16F         	movff	_sprintf$563+1,sprintf@_val+1
  2518  000DF6  C163  F170         	movff	_sprintf$563+2,sprintf@_val+2
  2519  000DFA  C164  F171         	movff	_sprintf$563+3,sprintf@_val+3
  2520                           
  2521                           ;doprnt.c: 1138: fval = 0.0;
  2522  000DFE  0E00               	movlw	0
  2523  000E00  0101               	movlb	1	; () banked
  2524  000E02  0101               	movlb	1	; () banked
  2525  000E04  6F79               	movwf	sprintf@fval& (0+255),b
  2526  000E06  0E00               	movlw	0
  2527  000E08  0101               	movlb	1	; () banked
  2528  000E0A  0101               	movlb	1	; () banked
  2529  000E0C  6F7A               	movwf	(sprintf@fval+1)& (0+255),b
  2530  000E0E  0E00               	movlw	0
  2531  000E10  0101               	movlb	1	; () banked
  2532  000E12  0101               	movlb	1	; () banked
  2533  000E14  6F7B               	movwf	(sprintf@fval+2)& (0+255),b
  2534                           
  2535                           ;doprnt.c: 1139: } else {
  2536  000E16  D032               	goto	l10269
  2537  000E18                     l10263:
  2538                           
  2539                           ; BSR set to: 1
  2540                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2541  000E18  C179  F133         	movff	sprintf@fval,?___fttol
  2542  000E1C  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  2543  000E20  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  2544  000E24  EC70  F021         	call	___fttol	;wreg free
  2545  000E28  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  2546  000E2C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  2547  000E30  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  2548  000E34  C133  F16E         	movff	?___fttol,sprintf@_val
  2549                           
  2550                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2551  000E38  0101               	movlb	1	; () banked
  2552  000E3A  0E01               	movlw	high sprintf@fval
  2553  000E3C  0101               	movlb	1	; () banked
  2554  000E3E  0101               	movlb	1	; () banked
  2555  000E40  6F4D               	movwf	(?___asftsub+1)& (0+255),b
  2556  000E42  0101               	movlb	1	; () banked
  2557  000E44  0E79               	movlw	low sprintf@fval
  2558  000E46  0101               	movlb	1	; () banked
  2559  000E48  6F4C               	movwf	?___asftsub& (0+255),b
  2560  000E4A  C16E  F108         	movff	sprintf@_val,?___lltoft
  2561  000E4E  C16F  F109         	movff	sprintf@_val+1,?___lltoft+1
  2562  000E52  C170  F10A         	movff	sprintf@_val+2,?___lltoft+2
  2563  000E56  C171  F10B         	movff	sprintf@_val+3,?___lltoft+3
  2564  000E5A  EC1F  F02B         	call	___lltoft	;wreg free
  2565  000E5E  C10A  F150         	movff	?___lltoft+2,?___asftsub+4
  2566  000E62  C109  F14F         	movff	?___lltoft+1,?___asftsub+3
  2567  000E66  C108  F14E         	movff	?___lltoft,?___asftsub+2
  2568  000E6A  EC50  F02F         	call	___asftsub	;wreg free
  2569                           
  2570                           ;doprnt.c: 1142: exp = 0;
  2571  000E6E  0E00               	movlw	0
  2572  000E70  0101               	movlb	1	; () banked
  2573  000E72  0101               	movlb	1	; () banked
  2574  000E74  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2575  000E76  0E00               	movlw	0
  2576  000E78  0101               	movlb	1	; () banked
  2577  000E7A  6F75               	movwf	sprintf@exp& (0+255),b
  2578  000E7C                     l10269:
  2579                           
  2580                           ; BSR set to: 1
  2581                           ;doprnt.c: 1143: }
  2582                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2583  000E7C  0101               	movlb	1	; () banked
  2584  000E7E  6F58               	movwf	??_sprintf& (0+255),b
  2585  000E80  0E01               	movlw	1
  2586  000E82  0101               	movlb	1	; () banked
  2587  000E84  0101               	movlb	1	; () banked
  2588  000E86  6F7E               	movwf	sprintf@c& (0+255),b
  2589  000E88  0101               	movlb	1	; () banked
  2590  000E8A  5158               	movf	??_sprintf& (0+255),w,b
  2591  000E8C                     
  2592                           ; BSR set to: 1
  2593  000E8C  0101               	movlb	1	; () banked
  2594  000E8E  0101               	movlb	1	; () banked
  2595  000E90  517E               	movf	sprintf@c& (0+255),w,b
  2596  000E92  0A0A               	xorlw	10
  2597  000E94  B4D8               	btfsc	status,2,c
  2598  000E96  D021               	goto	l10283
  2599                           
  2600                           ; BSR set to: 1
  2601                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2602                           
  2603                           ; BSR set to: 1
  2604                           
  2605                           ; BSR set to: 1
  2606  000E98  0101               	movlb	1	; () banked
  2607  000E9A  0101               	movlb	1	; () banked
  2608  000E9C  517E               	movf	sprintf@c& (0+255),w,b
  2609  000E9E  0D04               	mullw	4
  2610  000EA0  0E00               	movlw	low _dpowers
  2611  000EA2  24F3               	addwf	prodl,w,c
  2612  000EA4  6EF6               	movwf	tblptrl,c
  2613  000EA6  0E08               	movlw	high _dpowers
  2614  000EA8  20F4               	addwfc	prodh,w,c
  2615  000EAA  6EF7               	movwf	tblptrh,c
  2616  000EAC  0009               	tblrd		*+
  2617  000EAE  50F5               	movf	tablat,w,c
  2618  000EB0  0101               	movlb	1	; () banked
  2619  000EB2  0101               	movlb	1	; () banked
  2620  000EB4  5D6E               	subwf	sprintf@_val& (0+255),w,b
  2621  000EB6  0009               	tblrd		*+
  2622  000EB8  50F5               	movf	tablat,w,c
  2623  000EBA  0101               	movlb	1	; () banked
  2624  000EBC  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2625  000EBE  0009               	tblrd		*+
  2626  000EC0  50F5               	movf	tablat,w,c
  2627  000EC2  0101               	movlb	1	; () banked
  2628  000EC4  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2629  000EC6  0009               	tblrd		*+
  2630  000EC8  50F5               	movf	tablat,w,c
  2631  000ECA  0101               	movlb	1	; () banked
  2632  000ECC  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2633  000ECE  A0D8               	btfss	status,0,c
  2634  000ED0  D004               	goto	l10283
  2635                           
  2636                           ; BSR set to: 1
  2637                           
  2638                           ; BSR set to: 1
  2639                           
  2640                           ; BSR set to: 1
  2641                           ;doprnt.c: 1147: break;
  2642  000ED2  0101               	movlb	1	; () banked
  2643  000ED4  0101               	movlb	1	; () banked
  2644  000ED6  2B7E               	incf	sprintf@c& (0+255),f,b
  2645  000ED8  D7D9               	goto	L2
  2646  000EDA                     l10283:
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;doprnt.c: 1151: width -= prec + c + exp;
  2650  000EDA  0101               	movlb	1	; () banked
  2651  000EDC  C17E  F158         	movff	sprintf@c,??_sprintf
  2652  000EE0  0101               	movlb	1	; () banked
  2653  000EE2  6B59               	clrf	(??_sprintf+1)& (0+255),b
  2654  000EE4  BF58               	btfsc	??_sprintf& (0+255),7,b
  2655  000EE6  0759               	decf	(??_sprintf+1)& (0+255),f,b
  2656  000EE8  0101               	movlb	1	; () banked
  2657  000EEA  0101               	movlb	1	; () banked
  2658  000EEC  517C               	movf	sprintf@prec& (0+255),w,b
  2659  000EEE  0101               	movlb	1	; () banked
  2660  000EF0  2758               	addwf	??_sprintf& (0+255),f,b
  2661  000EF2  0101               	movlb	1	; () banked
  2662  000EF4  0101               	movlb	1	; () banked
  2663  000EF6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2664  000EF8  0101               	movlb	1	; () banked
  2665  000EFA  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  2666  000EFC  0101               	movlb	1	; () banked
  2667  000EFE  0101               	movlb	1	; () banked
  2668  000F00  5175               	movf	sprintf@exp& (0+255),w,b
  2669  000F02  0101               	movlb	1	; () banked
  2670  000F04  2758               	addwf	??_sprintf& (0+255),f,b
  2671  000F06  0101               	movlb	1	; () banked
  2672  000F08  0101               	movlb	1	; () banked
  2673  000F0A  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2674  000F0C  0101               	movlb	1	; () banked
  2675  000F0E  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  2676  000F10  0101               	movlb	1	; () banked
  2677  000F12  5158               	movf	??_sprintf& (0+255),w,b
  2678  000F14  0101               	movlb	1	; () banked
  2679  000F16  0101               	movlb	1	; () banked
  2680  000F18  5F77               	subwf	sprintf@width& (0+255),f,b
  2681  000F1A  0101               	movlb	1	; () banked
  2682  000F1C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2683  000F1E  0101               	movlb	1	; () banked
  2684  000F20  0101               	movlb	1	; () banked
  2685  000F22  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  2686                           
  2687                           ;doprnt.c: 1152: if(
  2688                           ;doprnt.c: 1156: prec)
  2689  000F24  0101               	movlb	1	; () banked
  2690  000F26  0101               	movlb	1	; () banked
  2691  000F28  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2692  000F2A  117C               	iorwf	sprintf@prec& (0+255),w,b
  2693  000F2C  B4D8               	btfsc	status,2,c
  2694  000F2E  D005               	goto	l10287
  2695                           
  2696                           ; BSR set to: 1
  2697                           ;doprnt.c: 1157: width--;
  2698  000F30  0101               	movlb	1	; () banked
  2699  000F32  0101               	movlb	1	; () banked
  2700  000F34  0777               	decf	sprintf@width& (0+255),f,b
  2701  000F36  A0D8               	btfss	status,0,c
  2702  000F38  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2703  000F3A                     l10287:
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;doprnt.c: 1158: if(flag & 0x03)
  2707  000F3A  0E03               	movlw	3
  2708  000F3C  0101               	movlb	1	; () banked
  2709  000F3E  0101               	movlb	1	; () banked
  2710  000F40  1573               	andwf	sprintf@flag& (0+255),w,b
  2711  000F42  0101               	movlb	1	; () banked
  2712  000F44  6F58               	movwf	??_sprintf& (0+255),b
  2713  000F46  0E00               	movlw	0
  2714  000F48  0101               	movlb	1	; () banked
  2715  000F4A  0101               	movlb	1	; () banked
  2716  000F4C  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2717  000F4E  0101               	movlb	1	; () banked
  2718  000F50  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2719  000F52  0101               	movlb	1	; () banked
  2720  000F54  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2721  000F56  1158               	iorwf	??_sprintf& (0+255),w,b
  2722  000F58  B4D8               	btfsc	status,2,c
  2723  000F5A  D005               	goto	l10291
  2724                           
  2725                           ; BSR set to: 1
  2726                           ;doprnt.c: 1159: width--;
  2727  000F5C  0101               	movlb	1	; () banked
  2728  000F5E  0101               	movlb	1	; () banked
  2729  000F60  0777               	decf	sprintf@width& (0+255),f,b
  2730  000F62  A0D8               	btfss	status,0,c
  2731  000F64  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2732  000F66                     l10291:
  2733                           
  2734                           ; BSR set to: 1
  2735                           ;doprnt.c: 1162: if(flag & 0x04) {
  2736  000F66  0101               	movlb	1	; () banked
  2737  000F68  0101               	movlb	1	; () banked
  2738  000F6A  B573               	btfsc	sprintf@flag& (0+255),2,b
  2739  000F6C  D010               	goto	l10301
  2740  000F6E  D029               	goto	l10309
  2741  000F70                     l10295:
  2742                           
  2743                           ; BSR set to: 1
  2744                           ;doprnt.c: 1176: ((*sp++ = ('0')));
  2745  000F70  C151  FFD9         	movff	sprintf@sp,fsr2l
  2746  000F74  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2747  000F78  0E30               	movlw	48
  2748  000F7A  6EDF               	movwf	indf2,c
  2749                           
  2750                           ; BSR set to: 1
  2751  000F7C  0101               	movlb	1	; () banked
  2752  000F7E  0101               	movlb	1	; () banked
  2753  000F80  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2754  000F82  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2755                           
  2756                           ; BSR set to: 1
  2757                           ;doprnt.c: 1177: width--;
  2758  000F84  0101               	movlb	1	; () banked
  2759  000F86  0101               	movlb	1	; () banked
  2760  000F88  0777               	decf	sprintf@width& (0+255),f,b
  2761  000F8A  A0D8               	btfss	status,0,c
  2762  000F8C  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2763  000F8E                     l10301:
  2764                           
  2765                           ; BSR set to: 1
  2766  000F8E  0101               	movlb	1	; () banked
  2767  000F90  0101               	movlb	1	; () banked
  2768  000F92  5178               	movf	(sprintf@width+1)& (0+255),w,b
  2769  000F94  0A80               	xorlw	128
  2770  000F96  0F80               	addlw	-128
  2771  000F98  0E01               	movlw	1
  2772  000F9A  B4D8               	btfsc	status,2,c
  2773  000F9C  5D77               	subwf	sprintf@width& (0+255),w,b
  2774  000F9E  A0D8               	btfss	status,0,c
  2775  000FA0  D079               	goto	l10325
  2776  000FA2  D7E6               	goto	l10295
  2777  000FA4                     l10303:
  2778                           
  2779                           ; BSR set to: 1
  2780                           ;doprnt.c: 1188: ((*sp++ = (' ')));
  2781  000FA4  C151  FFD9         	movff	sprintf@sp,fsr2l
  2782  000FA8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2783  000FAC  0E20               	movlw	32
  2784  000FAE  6EDF               	movwf	indf2,c
  2785                           
  2786                           ; BSR set to: 1
  2787  000FB0  0101               	movlb	1	; () banked
  2788  000FB2  0101               	movlb	1	; () banked
  2789  000FB4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2790  000FB6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2791                           
  2792                           ; BSR set to: 1
  2793                           ;doprnt.c: 1189: width--;
  2794  000FB8  0101               	movlb	1	; () banked
  2795  000FBA  0101               	movlb	1	; () banked
  2796  000FBC  0777               	decf	sprintf@width& (0+255),f,b
  2797  000FBE  A0D8               	btfss	status,0,c
  2798  000FC0  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2799  000FC2                     l10309:
  2800                           
  2801                           ; BSR set to: 1
  2802  000FC2  0101               	movlb	1	; () banked
  2803  000FC4  0101               	movlb	1	; () banked
  2804  000FC6  5178               	movf	(sprintf@width+1)& (0+255),w,b
  2805  000FC8  0A80               	xorlw	128
  2806  000FCA  0F80               	addlw	-128
  2807  000FCC  0E01               	movlw	1
  2808  000FCE  B4D8               	btfsc	status,2,c
  2809  000FD0  5D77               	subwf	sprintf@width& (0+255),w,b
  2810  000FD2  B0D8               	btfsc	status,0,c
  2811  000FD4  D7E7               	goto	l10303
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;doprnt.c: 1190: }
  2815                           ;doprnt.c: 1195: if(flag & 0x03)
  2816                           
  2817                           ; BSR set to: 1
  2818  000FD6  0E03               	movlw	3
  2819  000FD8  0101               	movlb	1	; () banked
  2820  000FDA  0101               	movlb	1	; () banked
  2821  000FDC  1573               	andwf	sprintf@flag& (0+255),w,b
  2822  000FDE  0101               	movlb	1	; () banked
  2823  000FE0  6F58               	movwf	??_sprintf& (0+255),b
  2824  000FE2  0E00               	movlw	0
  2825  000FE4  0101               	movlb	1	; () banked
  2826  000FE6  0101               	movlb	1	; () banked
  2827  000FE8  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2828  000FEA  0101               	movlb	1	; () banked
  2829  000FEC  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2830  000FEE  0101               	movlb	1	; () banked
  2831  000FF0  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2832  000FF2  1158               	iorwf	??_sprintf& (0+255),w,b
  2833  000FF4  B4D8               	btfsc	status,2,c
  2834  000FF6  D04E               	goto	l10325
  2835                           
  2836                           ; BSR set to: 1
  2837                           ;doprnt.c: 1197: ((*sp++ = ('-')));
  2838  000FF8  C151  FFD9         	movff	sprintf@sp,fsr2l
  2839  000FFC  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2840  001000  0E2D               	movlw	45
  2841  001002  D043               	goto	L3
  2842  001004                     l10317:
  2843                           
  2844                           ; BSR set to: 1
  2845                           ;doprnt.c: 1207: {
  2846                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
  2847  001004  C16E  F100         	movff	sprintf@_val,?___lldiv
  2848  001008  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  2849  00100C  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  2850  001010  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  2851  001014  0101               	movlb	1	; () banked
  2852  001016  0101               	movlb	1	; () banked
  2853  001018  517E               	movf	sprintf@c& (0+255),w,b
  2854  00101A  0D04               	mullw	4
  2855  00101C  0E00               	movlw	low _dpowers
  2856  00101E  24F3               	addwf	prodl,w,c
  2857  001020  6EF6               	movwf	tblptrl,c
  2858  001022  0E08               	movlw	high _dpowers
  2859  001024  20F4               	addwfc	prodh,w,c
  2860  001026  6EF7               	movwf	tblptrh,c
  2861  001028  0009               	tblrd		*+
  2862  00102A  0101               	movlb	1	; () banked
  2863  00102C  CFF5 F104          	movff	tablat,?___lldiv+4
  2864  001030  0009               	tblrd		*+
  2865  001032  0101               	movlb	1	; () banked
  2866  001034  CFF5 F105          	movff	tablat,?___lldiv+5
  2867  001038  0009               	tblrd		*+
  2868  00103A  0101               	movlb	1	; () banked
  2869  00103C  CFF5 F106          	movff	tablat,?___lldiv+6
  2870  001040  000A               	tblrd		*-
  2871  001042  0101               	movlb	1	; () banked
  2872  001044  CFF5 F107          	movff	tablat,?___lldiv+7
  2873  001048  EC91  F025         	call	___lldiv	;wreg free
  2874  00104C  C100  F165         	movff	?___lldiv,sprintf@vd
  2875  001050  C101  F166         	movff	?___lldiv+1,sprintf@vd+1
  2876                           
  2877                           ;doprnt.c: 1209: vd %= 10;
  2878  001054  C165  F100         	movff	sprintf@vd,?___lwmod
  2879  001058  C166  F101         	movff	sprintf@vd+1,?___lwmod+1
  2880  00105C  0E00               	movlw	0
  2881  00105E  0101               	movlb	1	; () banked
  2882  001060  0101               	movlb	1	; () banked
  2883  001062  6F03               	movwf	(?___lwmod+3)& (0+255),b
  2884  001064  0E0A               	movlw	10
  2885  001066  0101               	movlb	1	; () banked
  2886  001068  6F02               	movwf	(?___lwmod+2)& (0+255),b
  2887  00106A  EC44  F02C         	call	___lwmod	;wreg free
  2888  00106E  0101               	movlb	1	; () banked
  2889  001070  C100  F165         	movff	?___lwmod,sprintf@vd
  2890  001074  0101               	movlb	1	; () banked
  2891  001076  C101  F166         	movff	?___lwmod+1,sprintf@vd+1
  2892                           
  2893                           ; BSR set to: 1
  2894                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
  2895  00107A  0101               	movlb	1	; () banked
  2896  00107C  0101               	movlb	1	; () banked
  2897  00107E  5165               	movf	sprintf@vd& (0+255),w,b
  2898  001080  0F30               	addlw	48
  2899  001082  C151  FFD9         	movff	sprintf@sp,fsr2l
  2900  001086  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2901  00108A                     L3:
  2902  00108A  6EDF               	movwf	indf2,c
  2903                           
  2904                           ; BSR set to: 1
  2905  00108C  0101               	movlb	1	; () banked
  2906  00108E  0101               	movlb	1	; () banked
  2907  001090  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2908  001092  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2909  001094                     l10325:
  2910                           
  2911                           ; BSR set to: 1
  2912  001094  0101               	movlb	1	; () banked
  2913  001096  0101               	movlb	1	; () banked
  2914  001098  077E               	decf	sprintf@c& (0+255),f,b
  2915  00109A  0101               	movlb	1	; () banked
  2916  00109C  297E               	incf	sprintf@c& (0+255),w,b
  2917  00109E  B4D8               	btfsc	status,2,c
  2918  0010A0  D010               	goto	l10333
  2919  0010A2  D7B0               	goto	l10317
  2920  0010A4                     l10327:
  2921                           
  2922                           ; BSR set to: 1
  2923                           ;doprnt.c: 1215: ((*sp++ = ('0')));
  2924  0010A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  2925  0010A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2926  0010AC  0E30               	movlw	48
  2927  0010AE  6EDF               	movwf	indf2,c
  2928                           
  2929                           ; BSR set to: 1
  2930  0010B0  0101               	movlb	1	; () banked
  2931  0010B2  0101               	movlb	1	; () banked
  2932  0010B4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2933  0010B6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2934                           
  2935                           ; BSR set to: 1
  2936                           ;doprnt.c: 1216: exp--;
  2937  0010B8  0101               	movlb	1	; () banked
  2938  0010BA  0101               	movlb	1	; () banked
  2939  0010BC  0775               	decf	sprintf@exp& (0+255),f,b
  2940  0010BE  A0D8               	btfss	status,0,c
  2941  0010C0  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2942  0010C2                     l10333:
  2943                           
  2944                           ; BSR set to: 1
  2945  0010C2  0101               	movlb	1	; () banked
  2946  0010C4  0101               	movlb	1	; () banked
  2947  0010C6  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2948  0010C8  0A80               	xorlw	128
  2949  0010CA  0F80               	addlw	-128
  2950  0010CC  0E01               	movlw	1
  2951  0010CE  B4D8               	btfsc	status,2,c
  2952  0010D0  5D75               	subwf	sprintf@exp& (0+255),w,b
  2953  0010D2  B0D8               	btfsc	status,0,c
  2954  0010D4  D7E7               	goto	l10327
  2955                           
  2956                           ; BSR set to: 1
  2957                           ;doprnt.c: 1217: }
  2958                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2959                           
  2960                           ; BSR set to: 1
  2961  0010D6  0101               	movlb	1	; () banked
  2962  0010D8  0101               	movlb	1	; () banked
  2963  0010DA  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2964  0010DC  0A80               	xorlw	128
  2965  0010DE  0F80               	addlw	-128
  2966  0010E0  0E09               	movlw	9
  2967  0010E2  B4D8               	btfsc	status,2,c
  2968  0010E4  5D7C               	subwf	sprintf@prec& (0+255),w,b
  2969  0010E6  A0D8               	btfss	status,0,c
  2970  0010E8  D009               	goto	l325
  2971                           
  2972                           ; BSR set to: 1
  2973                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2974  0010EA  0101               	movlb	1	; () banked
  2975  0010EC  6F58               	movwf	??_sprintf& (0+255),b
  2976  0010EE  0E08               	movlw	8
  2977  0010F0  0101               	movlb	1	; () banked
  2978  0010F2  0101               	movlb	1	; () banked
  2979  0010F4  6F7E               	movwf	sprintf@c& (0+255),b
  2980  0010F6  0101               	movlb	1	; () banked
  2981  0010F8  5158               	movf	??_sprintf& (0+255),w,b
  2982  0010FA  D002               	goto	l10339
  2983  0010FC                     l325:
  2984                           
  2985                           ; BSR set to: 1
  2986                           ;doprnt.c: 1220: else
  2987                           ;doprnt.c: 1221: c = prec;
  2988  0010FC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  2989  001100                     l10339:
  2990                           
  2991                           ; BSR set to: 1
  2992                           ;doprnt.c: 1222: prec -= c;
  2993  001100  0101               	movlb	1	; () banked
  2994  001102  0101               	movlb	1	; () banked
  2995  001104  517E               	movf	sprintf@c& (0+255),w,b
  2996  001106  0101               	movlb	1	; () banked
  2997  001108  0101               	movlb	1	; () banked
  2998  00110A  5F7C               	subwf	sprintf@prec& (0+255),f,b
  2999  00110C  0E00               	movlw	0
  3000  00110E  0101               	movlb	1	; () banked
  3001  001110  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3002  001112  0EFF               	movlw	255
  3003  001114  0101               	movlb	1	; () banked
  3004  001116  0101               	movlb	1	; () banked
  3005  001118  5B7D               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3006                           
  3007                           ; BSR set to: 1
  3008                           ;doprnt.c: 1226: if(c)
  3009  00111A  0101               	movlb	1	; () banked
  3010  00111C  0101               	movlb	1	; () banked
  3011  00111E  517E               	movf	sprintf@c& (0+255),w,b
  3012  001120  B4D8               	btfsc	status,2,c
  3013  001122  D00A               	goto	l10347
  3014                           
  3015                           ; BSR set to: 1
  3016                           ;doprnt.c: 1228: ((*sp++ = ('.')));
  3017  001124  C151  FFD9         	movff	sprintf@sp,fsr2l
  3018  001128  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3019  00112C  0E2E               	movlw	46
  3020  00112E  6EDF               	movwf	indf2,c
  3021                           
  3022                           ; BSR set to: 1
  3023  001130  0101               	movlb	1	; () banked
  3024  001132  0101               	movlb	1	; () banked
  3025  001134  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3026  001136  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3027  001138                     l10347:
  3028                           
  3029                           ; BSR set to: 1
  3030                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  3031  001138  C17E  F127         	movff	sprintf@c,?_scale
  3032  00113C  EC0A  F012         	call	_scale	;wreg free
  3033  001140  C129  F160         	movff	?_scale+2,_sprintf$1204+2
  3034  001144  C128  F15F         	movff	?_scale+1,_sprintf$1204+1
  3035  001148  C127  F15E         	movff	?_scale,_sprintf$1204
  3036                           
  3037                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  3038  00114C  C179  F119         	movff	sprintf@fval,?___ftmul+3
  3039  001150  C17A  F11A         	movff	sprintf@fval+1,?___ftmul+4
  3040  001154  C17B  F11B         	movff	sprintf@fval+2,?___ftmul+5
  3041  001158  C15E  F116         	movff	_sprintf$1204,?___ftmul
  3042  00115C  C15F  F117         	movff	_sprintf$1204+1,?___ftmul+1
  3043  001160  C160  F118         	movff	_sprintf$1204+2,?___ftmul+2
  3044  001164  ECE1  F01C         	call	___ftmul	;wreg free
  3045  001168  C118  F135         	movff	?___ftmul+2,?___fttol+2
  3046  00116C  C117  F134         	movff	?___ftmul+1,?___fttol+1
  3047  001170  C116  F133         	movff	?___ftmul,?___fttol
  3048  001174  EC70  F021         	call	___fttol	;wreg free
  3049  001178  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  3050  00117C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  3051  001180  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  3052  001184  C133  F16E         	movff	?___fttol,sprintf@_val
  3053                           
  3054                           ;doprnt.c: 1235: while(c--) {
  3055  001188  D074               	goto	l10361
  3056  00118A                     l10351:
  3057                           
  3058                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
  3059  00118A  C16E  F100         	movff	sprintf@_val,?___lldiv
  3060  00118E  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  3061  001192  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  3062  001196  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  3063  00119A  0101               	movlb	1	; () banked
  3064  00119C  0101               	movlb	1	; () banked
  3065  00119E  517E               	movf	sprintf@c& (0+255),w,b
  3066  0011A0  0D04               	mullw	4
  3067  0011A2  0E00               	movlw	low _dpowers
  3068  0011A4  24F3               	addwf	prodl,w,c
  3069  0011A6  6EF6               	movwf	tblptrl,c
  3070  0011A8  0E08               	movlw	high _dpowers
  3071  0011AA  20F4               	addwfc	prodh,w,c
  3072  0011AC  6EF7               	movwf	tblptrh,c
  3073  0011AE  0009               	tblrd		*+
  3074  0011B0  0101               	movlb	1	; () banked
  3075  0011B2  CFF5 F104          	movff	tablat,?___lldiv+4
  3076  0011B6  0009               	tblrd		*+
  3077  0011B8  0101               	movlb	1	; () banked
  3078  0011BA  CFF5 F105          	movff	tablat,?___lldiv+5
  3079  0011BE  0009               	tblrd		*+
  3080  0011C0  0101               	movlb	1	; () banked
  3081  0011C2  CFF5 F106          	movff	tablat,?___lldiv+6
  3082  0011C6  000A               	tblrd		*-
  3083  0011C8  0101               	movlb	1	; () banked
  3084  0011CA  CFF5 F107          	movff	tablat,?___lldiv+7
  3085  0011CE  EC91  F025         	call	___lldiv	;wreg free
  3086  0011D2  C100  F167         	movff	?___lldiv,sprintf@vd_565
  3087  0011D6  C101  F168         	movff	?___lldiv+1,sprintf@vd_565+1
  3088                           
  3089                           ;doprnt.c: 1237: vd %= 10;
  3090  0011DA  C167  F100         	movff	sprintf@vd_565,?___lwmod
  3091  0011DE  C168  F101         	movff	sprintf@vd_565+1,?___lwmod+1
  3092  0011E2  0E00               	movlw	0
  3093  0011E4  0101               	movlb	1	; () banked
  3094  0011E6  0101               	movlb	1	; () banked
  3095  0011E8  6F03               	movwf	(?___lwmod+3)& (0+255),b
  3096  0011EA  0E0A               	movlw	10
  3097  0011EC  0101               	movlb	1	; () banked
  3098  0011EE  6F02               	movwf	(?___lwmod+2)& (0+255),b
  3099  0011F0  EC44  F02C         	call	___lwmod	;wreg free
  3100  0011F4  0101               	movlb	1	; () banked
  3101  0011F6  C100  F167         	movff	?___lwmod,sprintf@vd_565
  3102  0011FA  0101               	movlb	1	; () banked
  3103  0011FC  C101  F168         	movff	?___lwmod+1,sprintf@vd_565+1
  3104                           
  3105                           ; BSR set to: 1
  3106                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
  3107  001200  0101               	movlb	1	; () banked
  3108  001202  0101               	movlb	1	; () banked
  3109  001204  5167               	movf	sprintf@vd_565& (0+255),w,b
  3110  001206  0F30               	addlw	48
  3111  001208  C151  FFD9         	movff	sprintf@sp,fsr2l
  3112  00120C  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3113  001210  6EDF               	movwf	indf2,c
  3114                           
  3115                           ; BSR set to: 1
  3116  001212  0101               	movlb	1	; () banked
  3117  001214  0101               	movlb	1	; () banked
  3118  001216  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3119  001218  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3120                           
  3121                           ; BSR set to: 1
  3122                           ;doprnt.c: 1239: _val._val %= dpowers[c];
  3123  00121A  C16E  F10E         	movff	sprintf@_val,?___llmod
  3124  00121E  C16F  F10F         	movff	sprintf@_val+1,?___llmod+1
  3125  001222  C170  F110         	movff	sprintf@_val+2,?___llmod+2
  3126  001226  C171  F111         	movff	sprintf@_val+3,?___llmod+3
  3127  00122A  0101               	movlb	1	; () banked
  3128  00122C  0101               	movlb	1	; () banked
  3129  00122E  517E               	movf	sprintf@c& (0+255),w,b
  3130  001230  0D04               	mullw	4
  3131  001232  0E00               	movlw	low _dpowers
  3132  001234  24F3               	addwf	prodl,w,c
  3133  001236  6EF6               	movwf	tblptrl,c
  3134  001238  0E08               	movlw	high _dpowers
  3135  00123A  20F4               	addwfc	prodh,w,c
  3136  00123C  6EF7               	movwf	tblptrh,c
  3137  00123E  0009               	tblrd		*+
  3138  001240  0101               	movlb	1	; () banked
  3139  001242  CFF5 F112          	movff	tablat,?___llmod+4
  3140  001246  0009               	tblrd		*+
  3141  001248  0101               	movlb	1	; () banked
  3142  00124A  CFF5 F113          	movff	tablat,?___llmod+5
  3143  00124E  0009               	tblrd		*+
  3144  001250  0101               	movlb	1	; () banked
  3145  001252  CFF5 F114          	movff	tablat,?___llmod+6
  3146  001256  000A               	tblrd		*-
  3147  001258  0101               	movlb	1	; () banked
  3148  00125A  CFF5 F115          	movff	tablat,?___llmod+7
  3149  00125E  EC56  F029         	call	___llmod	;wreg free
  3150  001262  C111  F171         	movff	?___llmod+3,sprintf@_val+3
  3151  001266  C110  F170         	movff	?___llmod+2,sprintf@_val+2
  3152  00126A  C10F  F16F         	movff	?___llmod+1,sprintf@_val+1
  3153  00126E  C10E  F16E         	movff	?___llmod,sprintf@_val
  3154  001272                     l10361:
  3155  001272  0101               	movlb	1	; () banked
  3156  001274  0101               	movlb	1	; () banked
  3157  001276  077E               	decf	sprintf@c& (0+255),f,b
  3158  001278  0101               	movlb	1	; () banked
  3159  00127A  297E               	incf	sprintf@c& (0+255),w,b
  3160  00127C  B4D8               	btfsc	status,2,c
  3161  00127E  D010               	goto	l10369
  3162  001280  D784               	goto	l10351
  3163  001282                     l10363:
  3164                           
  3165                           ; BSR set to: 1
  3166                           ;doprnt.c: 1243: ((*sp++ = ('0')));
  3167  001282  C151  FFD9         	movff	sprintf@sp,fsr2l
  3168  001286  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3169  00128A  0E30               	movlw	48
  3170  00128C  6EDF               	movwf	indf2,c
  3171                           
  3172                           ; BSR set to: 1
  3173  00128E  0101               	movlb	1	; () banked
  3174  001290  0101               	movlb	1	; () banked
  3175  001292  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3176  001294  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3177                           
  3178                           ; BSR set to: 1
  3179                           ;doprnt.c: 1244: prec--;
  3180  001296  0101               	movlb	1	; () banked
  3181  001298  0101               	movlb	1	; () banked
  3182  00129A  077C               	decf	sprintf@prec& (0+255),f,b
  3183  00129C  A0D8               	btfss	status,0,c
  3184  00129E  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3185  0012A0                     l10369:
  3186                           
  3187                           ; BSR set to: 1
  3188  0012A0  0101               	movlb	1	; () banked
  3189  0012A2  0101               	movlb	1	; () banked
  3190  0012A4  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3191  0012A6  117C               	iorwf	sprintf@prec& (0+255),w,b
  3192  0012A8  B4D8               	btfsc	status,2,c
  3193  0012AA  D1E6               	goto	l10467
  3194  0012AC  D7EA               	goto	l10363
  3195  0012AE                     l10371:
  3196                           
  3197                           ; BSR set to: 1
  3198                           ;doprnt.c: 1253: }
  3199                           ;doprnt.c: 1260: {
  3200                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3201  0012AE  C169  FFD9         	movff	sprintf@ap,fsr2l
  3202  0012B2  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  3203  0012B6  0101               	movlb	1	; () banked
  3204  0012B8  CFDE F16E          	movff	postinc2,sprintf@_val
  3205  0012BC  0101               	movlb	1	; () banked
  3206  0012BE  CFDD F16F          	movff	postdec2,sprintf@_val+1
  3207  0012C2  0101               	movlb	1	; () banked
  3208  0012C4  0E00               	movlw	0
  3209  0012C6  0101               	movlb	1	; () banked
  3210  0012C8  BF6F               	btfsc	(sprintf@_val+1)& (0+255),7,b
  3211  0012CA  0EFF               	movlw	-1
  3212  0012CC  0101               	movlb	1	; () banked
  3213  0012CE  6F70               	movwf	(sprintf@_val+2)& (0+255),b
  3214  0012D0  0101               	movlb	1	; () banked
  3215  0012D2  6F71               	movwf	(sprintf@_val+3)& (0+255),b
  3216                           
  3217                           ; BSR set to: 1
  3218  0012D4  0E02               	movlw	2
  3219  0012D6  0101               	movlb	1	; () banked
  3220  0012D8  0101               	movlb	1	; () banked
  3221  0012DA  2769               	addwf	sprintf@ap& (0+255),f,b
  3222  0012DC  0E00               	movlw	0
  3223  0012DE  0101               	movlb	1	; () banked
  3224  0012E0  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3225                           
  3226                           ; BSR set to: 1
  3227                           ;doprnt.c: 1268: if((long)_val._val < 0) {
  3228  0012E2  0101               	movlb	1	; () banked
  3229  0012E4  0101               	movlb	1	; () banked
  3230  0012E6  AF71               	btfss	(sprintf@_val+3)& (0+255),7,b
  3231  0012E8  D014               	goto	l10381
  3232                           
  3233                           ; BSR set to: 1
  3234                           ;doprnt.c: 1269: flag |= 0x03;
  3235  0012EA  0E03               	movlw	3
  3236  0012EC  0101               	movlb	1	; () banked
  3237  0012EE  0101               	movlb	1	; () banked
  3238  0012F0  1373               	iorwf	sprintf@flag& (0+255),f,b
  3239                           
  3240                           ; BSR set to: 1
  3241                           ;doprnt.c: 1270: _val._val = -_val._val;
  3242  0012F2  0101               	movlb	1	; () banked
  3243  0012F4  0101               	movlb	1	; () banked
  3244  0012F6  1F71               	comf	(sprintf@_val+3)& (0+255),f,b
  3245  0012F8  0101               	movlb	1	; () banked
  3246  0012FA  1F70               	comf	(sprintf@_val+2)& (0+255),f,b
  3247  0012FC  0101               	movlb	1	; () banked
  3248  0012FE  1F6F               	comf	(sprintf@_val+1)& (0+255),f,b
  3249  001300  0101               	movlb	1	; () banked
  3250  001302  6D6E               	negf	sprintf@_val& (0+255),b
  3251  001304  0E00               	movlw	0
  3252  001306  0101               	movlb	1	; () banked
  3253  001308  236F               	addwfc	(sprintf@_val+1)& (0+255),f,b
  3254  00130A  0101               	movlb	1	; () banked
  3255  00130C  2370               	addwfc	(sprintf@_val+2)& (0+255),f,b
  3256  00130E  0101               	movlb	1	; () banked
  3257  001310  2371               	addwfc	(sprintf@_val+3)& (0+255),f,b
  3258  001312                     l10381:
  3259                           
  3260                           ; BSR set to: 1
  3261                           ;doprnt.c: 1271: }
  3262                           ;doprnt.c: 1273: }
  3263                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
  3264  001312  0101               	movlb	1	; () banked
  3265  001314  0101               	movlb	1	; () banked
  3266  001316  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3267  001318  117C               	iorwf	sprintf@prec& (0+255),w,b
  3268  00131A  A4D8               	btfss	status,2,c
  3269  00131C  D00C               	goto	l10387
  3270                           
  3271                           ; BSR set to: 1
  3272  00131E  0101               	movlb	1	; () banked
  3273  001320  0101               	movlb	1	; () banked
  3274  001322  5171               	movf	(sprintf@_val+3)& (0+255),w,b
  3275  001324  116E               	iorwf	sprintf@_val& (0+255),w,b
  3276  001326  116F               	iorwf	(sprintf@_val+1)& (0+255),w,b
  3277  001328  1170               	iorwf	(sprintf@_val+2)& (0+255),w,b
  3278  00132A  A4D8               	btfss	status,2,c
  3279  00132C  D004               	goto	l10387
  3280                           
  3281                           ; BSR set to: 1
  3282                           ;doprnt.c: 1298: prec++;
  3283  00132E  0101               	movlb	1	; () banked
  3284  001330  0101               	movlb	1	; () banked
  3285  001332  4B7C               	infsnz	sprintf@prec& (0+255),f,b
  3286  001334  2B7D               	incf	(sprintf@prec+1)& (0+255),f,b
  3287  001336                     l10387:
  3288                           
  3289                           ; BSR set to: 1
  3290                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3291  001336  0101               	movlb	1	; () banked
  3292  001338  6F58               	movwf	??_sprintf& (0+255),b
  3293  00133A  0E01               	movlw	1
  3294  00133C  0101               	movlb	1	; () banked
  3295  00133E  0101               	movlb	1	; () banked
  3296  001340  6F7E               	movwf	sprintf@c& (0+255),b
  3297  001342  0101               	movlb	1	; () banked
  3298  001344  5158               	movf	??_sprintf& (0+255),w,b
  3299  001346                     
  3300                           ; BSR set to: 1
  3301  001346  0101               	movlb	1	; () banked
  3302  001348  0101               	movlb	1	; () banked
  3303  00134A  517E               	movf	sprintf@c& (0+255),w,b
  3304  00134C  0A0A               	xorlw	10
  3305  00134E  B4D8               	btfsc	status,2,c
  3306  001350  D021               	goto	l10401
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  3310                           
  3311                           ; BSR set to: 1
  3312                           
  3313                           ; BSR set to: 1
  3314  001352  0101               	movlb	1	; () banked
  3315  001354  0101               	movlb	1	; () banked
  3316  001356  517E               	movf	sprintf@c& (0+255),w,b
  3317  001358  0D04               	mullw	4
  3318  00135A  0E00               	movlw	low _dpowers
  3319  00135C  24F3               	addwf	prodl,w,c
  3320  00135E  6EF6               	movwf	tblptrl,c
  3321  001360  0E08               	movlw	high _dpowers
  3322  001362  20F4               	addwfc	prodh,w,c
  3323  001364  6EF7               	movwf	tblptrh,c
  3324  001366  0009               	tblrd		*+
  3325  001368  50F5               	movf	tablat,w,c
  3326  00136A  0101               	movlb	1	; () banked
  3327  00136C  0101               	movlb	1	; () banked
  3328  00136E  5D6E               	subwf	sprintf@_val& (0+255),w,b
  3329  001370  0009               	tblrd		*+
  3330  001372  50F5               	movf	tablat,w,c
  3331  001374  0101               	movlb	1	; () banked
  3332  001376  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3333  001378  0009               	tblrd		*+
  3334  00137A  50F5               	movf	tablat,w,c
  3335  00137C  0101               	movlb	1	; () banked
  3336  00137E  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3337  001380  0009               	tblrd		*+
  3338  001382  50F5               	movf	tablat,w,c
  3339  001384  0101               	movlb	1	; () banked
  3340  001386  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3341  001388  A0D8               	btfss	status,0,c
  3342  00138A  D004               	goto	l10401
  3343                           
  3344                           ; BSR set to: 1
  3345                           
  3346                           ; BSR set to: 1
  3347                           
  3348                           ; BSR set to: 1
  3349                           ;doprnt.c: 1314: break;
  3350  00138C  0101               	movlb	1	; () banked
  3351  00138E  0101               	movlb	1	; () banked
  3352  001390  2B7E               	incf	sprintf@c& (0+255),f,b
  3353  001392  D7D9               	goto	L4
  3354  001394                     l10401:
  3355                           
  3356                           ; BSR set to: 1
  3357                           ;doprnt.c: 1346: if(c < prec)
  3358  001394  0E80               	movlw	128
  3359  001396  0101               	movlb	1	; () banked
  3360  001398  0101               	movlb	1	; () banked
  3361  00139A  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3362  00139C  0E7F               	movlw	127
  3363  00139E  6F58               	movwf	??_sprintf& (0+255),b
  3364  0013A0  0101               	movlb	1	; () banked
  3365  0013A2  0101               	movlb	1	; () banked
  3366  0013A4  517C               	movf	sprintf@prec& (0+255),w,b
  3367  0013A6  0101               	movlb	1	; () banked
  3368  0013A8  0101               	movlb	1	; () banked
  3369  0013AA  5D7E               	subwf	sprintf@c& (0+255),w,b
  3370  0013AC  0101               	movlb	1	; () banked
  3371  0013AE  0101               	movlb	1	; () banked
  3372  0013B0  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3373  0013B2  0A80               	xorlw	128
  3374  0013B4  0101               	movlb	1	; () banked
  3375  0013B6  5958               	subwfb	??_sprintf& (0+255),w,b
  3376  0013B8  B0D8               	btfsc	status,0,c
  3377  0013BA  D003               	goto	l10405
  3378                           
  3379                           ; BSR set to: 1
  3380                           ;doprnt.c: 1347: c = prec;
  3381  0013BC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  3382  0013C0  D020               	goto	l10409
  3383  0013C2                     l10405:
  3384                           
  3385                           ; BSR set to: 1
  3386                           ;doprnt.c: 1348: else if(prec < c)
  3387  0013C2  0101               	movlb	1	; () banked
  3388  0013C4  0101               	movlb	1	; () banked
  3389  0013C6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3390  0013C8  0A80               	xorlw	128
  3391  0013CA  0101               	movlb	1	; () banked
  3392  0013CC  6F58               	movwf	??_sprintf& (0+255),b
  3393  0013CE  0101               	movlb	1	; () banked
  3394  0013D0  0101               	movlb	1	; () banked
  3395  0013D2  517E               	movf	sprintf@c& (0+255),w,b
  3396  0013D4  0101               	movlb	1	; () banked
  3397  0013D6  0101               	movlb	1	; () banked
  3398  0013D8  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3399  0013DA  0E80               	movlw	128
  3400  0013DC  0101               	movlb	1	; () banked
  3401  0013DE  0101               	movlb	1	; () banked
  3402  0013E0  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3403  0013E2  0E7F               	movlw	127
  3404  0013E4  0101               	movlb	1	; () banked
  3405  0013E6  5958               	subwfb	??_sprintf& (0+255),w,b
  3406  0013E8  B0D8               	btfsc	status,0,c
  3407  0013EA  D00B               	goto	l10409
  3408                           
  3409                           ; BSR set to: 1
  3410                           ;doprnt.c: 1349: prec = c;
  3411  0013EC  0101               	movlb	1	; () banked
  3412  0013EE  0101               	movlb	1	; () banked
  3413  0013F0  517E               	movf	sprintf@c& (0+255),w,b
  3414  0013F2  0101               	movlb	1	; () banked
  3415  0013F4  0101               	movlb	1	; () banked
  3416  0013F6  6F7C               	movwf	sprintf@prec& (0+255),b
  3417  0013F8  0101               	movlb	1	; () banked
  3418  0013FA  6B7D               	clrf	(sprintf@prec+1)& (0+255),b
  3419  0013FC  0101               	movlb	1	; () banked
  3420  0013FE  BF7C               	btfsc	sprintf@prec& (0+255),7,b
  3421  001400  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3422  001402                     l10409:
  3423                           
  3424                           ; BSR set to: 1
  3425                           ;doprnt.c: 1352: if(width && flag & 0x03)
  3426  001402  0101               	movlb	1	; () banked
  3427  001404  0101               	movlb	1	; () banked
  3428  001406  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3429  001408  1177               	iorwf	sprintf@width& (0+255),w,b
  3430  00140A  B4D8               	btfsc	status,2,c
  3431  00140C  D016               	goto	l10415
  3432                           
  3433                           ; BSR set to: 1
  3434  00140E  0E03               	movlw	3
  3435  001410  0101               	movlb	1	; () banked
  3436  001412  0101               	movlb	1	; () banked
  3437  001414  1573               	andwf	sprintf@flag& (0+255),w,b
  3438  001416  0101               	movlb	1	; () banked
  3439  001418  6F58               	movwf	??_sprintf& (0+255),b
  3440  00141A  0E00               	movlw	0
  3441  00141C  0101               	movlb	1	; () banked
  3442  00141E  0101               	movlb	1	; () banked
  3443  001420  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3444  001422  0101               	movlb	1	; () banked
  3445  001424  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3446  001426  0101               	movlb	1	; () banked
  3447  001428  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3448  00142A  1158               	iorwf	??_sprintf& (0+255),w,b
  3449  00142C  B4D8               	btfsc	status,2,c
  3450  00142E  D005               	goto	l10415
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;doprnt.c: 1353: width--;
  3454  001430  0101               	movlb	1	; () banked
  3455  001432  0101               	movlb	1	; () banked
  3456  001434  0777               	decf	sprintf@width& (0+255),f,b
  3457  001436  A0D8               	btfss	status,0,c
  3458  001438  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3459  00143A                     l10415:
  3460                           
  3461                           ; BSR set to: 1
  3462                           ;doprnt.c: 1355: if(flag & 0x4000) {
  3463  00143A  0101               	movlb	1	; () banked
  3464  00143C  0101               	movlb	1	; () banked
  3465  00143E  AD74               	btfss	(sprintf@flag+1)& (0+255),6,b
  3466  001440  D028               	goto	l10423
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;doprnt.c: 1356: if(width > prec)
  3470  001442  0101               	movlb	1	; () banked
  3471  001444  0101               	movlb	1	; () banked
  3472  001446  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3473  001448  0A80               	xorlw	128
  3474  00144A  0101               	movlb	1	; () banked
  3475  00144C  6F58               	movwf	??_sprintf& (0+255),b
  3476  00144E  0101               	movlb	1	; () banked
  3477  001450  0101               	movlb	1	; () banked
  3478  001452  5177               	movf	sprintf@width& (0+255),w,b
  3479  001454  0101               	movlb	1	; () banked
  3480  001456  0101               	movlb	1	; () banked
  3481  001458  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3482  00145A  0101               	movlb	1	; () banked
  3483  00145C  0101               	movlb	1	; () banked
  3484  00145E  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3485  001460  0A80               	xorlw	128
  3486  001462  0101               	movlb	1	; () banked
  3487  001464  5958               	subwfb	??_sprintf& (0+255),w,b
  3488  001466  B0D8               	btfsc	status,0,c
  3489  001468  D00D               	goto	l10421
  3490                           
  3491                           ; BSR set to: 1
  3492                           ;doprnt.c: 1357: width -= prec;
  3493  00146A  0101               	movlb	1	; () banked
  3494  00146C  0101               	movlb	1	; () banked
  3495  00146E  517C               	movf	sprintf@prec& (0+255),w,b
  3496  001470  0101               	movlb	1	; () banked
  3497  001472  0101               	movlb	1	; () banked
  3498  001474  5F77               	subwf	sprintf@width& (0+255),f,b
  3499  001476  0101               	movlb	1	; () banked
  3500  001478  0101               	movlb	1	; () banked
  3501  00147A  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3502  00147C  0101               	movlb	1	; () banked
  3503  00147E  0101               	movlb	1	; () banked
  3504  001480  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  3505  001482  D007               	goto	l10423
  3506  001484                     l10421:
  3507                           
  3508                           ; BSR set to: 1
  3509                           ;doprnt.c: 1358: else
  3510                           ;doprnt.c: 1359: width = 0;
  3511  001484  0E00               	movlw	0
  3512  001486  0101               	movlb	1	; () banked
  3513  001488  0101               	movlb	1	; () banked
  3514  00148A  6F78               	movwf	(sprintf@width+1)& (0+255),b
  3515  00148C  0E00               	movlw	0
  3516  00148E  0101               	movlb	1	; () banked
  3517  001490  6F77               	movwf	sprintf@width& (0+255),b
  3518  001492                     l10423:
  3519                           
  3520                           ; BSR set to: 1
  3521                           ;doprnt.c: 1360: }
  3522                           ;doprnt.c: 1388: if(width > c)
  3523  001492  0E80               	movlw	128
  3524  001494  0101               	movlb	1	; () banked
  3525  001496  0101               	movlb	1	; () banked
  3526  001498  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3527  00149A  0E7F               	movlw	127
  3528  00149C  6F58               	movwf	??_sprintf& (0+255),b
  3529  00149E  0101               	movlb	1	; () banked
  3530  0014A0  0101               	movlb	1	; () banked
  3531  0014A2  5177               	movf	sprintf@width& (0+255),w,b
  3532  0014A4  0101               	movlb	1	; () banked
  3533  0014A6  0101               	movlb	1	; () banked
  3534  0014A8  5D7E               	subwf	sprintf@c& (0+255),w,b
  3535  0014AA  0101               	movlb	1	; () banked
  3536  0014AC  0101               	movlb	1	; () banked
  3537  0014AE  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3538  0014B0  0A80               	xorlw	128
  3539  0014B2  0101               	movlb	1	; () banked
  3540  0014B4  5958               	subwfb	??_sprintf& (0+255),w,b
  3541  0014B6  B0D8               	btfsc	status,0,c
  3542  0014B8  D00E               	goto	l10427
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;doprnt.c: 1389: width -= c;
  3546  0014BA  0101               	movlb	1	; () banked
  3547  0014BC  0101               	movlb	1	; () banked
  3548  0014BE  517E               	movf	sprintf@c& (0+255),w,b
  3549  0014C0  0101               	movlb	1	; () banked
  3550  0014C2  0101               	movlb	1	; () banked
  3551  0014C4  5F77               	subwf	sprintf@width& (0+255),f,b
  3552  0014C6  0E00               	movlw	0
  3553  0014C8  0101               	movlb	1	; () banked
  3554  0014CA  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3555  0014CC  0EFF               	movlw	255
  3556  0014CE  0101               	movlb	1	; () banked
  3557  0014D0  0101               	movlb	1	; () banked
  3558  0014D2  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  3559  0014D4  D007               	goto	l10429
  3560  0014D6                     l10427:
  3561                           
  3562                           ; BSR set to: 1
  3563                           ;doprnt.c: 1390: else
  3564                           ;doprnt.c: 1391: width = 0;
  3565  0014D6  0E00               	movlw	0
  3566  0014D8  0101               	movlb	1	; () banked
  3567  0014DA  0101               	movlb	1	; () banked
  3568  0014DC  6F78               	movwf	(sprintf@width+1)& (0+255),b
  3569  0014DE  0E00               	movlw	0
  3570  0014E0  0101               	movlb	1	; () banked
  3571  0014E2  6F77               	movwf	sprintf@width& (0+255),b
  3572  0014E4                     l10429:
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;doprnt.c: 1394: if(flag & 0x04) {
  3576  0014E4  0101               	movlb	1	; () banked
  3577  0014E6  0101               	movlb	1	; () banked
  3578  0014E8  A573               	btfss	sprintf@flag& (0+255),2,b
  3579  0014EA  D031               	goto	l10445
  3580                           
  3581                           ; BSR set to: 1
  3582                           ;doprnt.c: 1399: if(flag & 0x03)
  3583  0014EC  0E03               	movlw	3
  3584  0014EE  0101               	movlb	1	; () banked
  3585  0014F0  0101               	movlb	1	; () banked
  3586  0014F2  1573               	andwf	sprintf@flag& (0+255),w,b
  3587  0014F4  0101               	movlb	1	; () banked
  3588  0014F6  6F58               	movwf	??_sprintf& (0+255),b
  3589  0014F8  0E00               	movlw	0
  3590  0014FA  0101               	movlb	1	; () banked
  3591  0014FC  0101               	movlb	1	; () banked
  3592  0014FE  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3593  001500  0101               	movlb	1	; () banked
  3594  001502  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3595  001504  0101               	movlb	1	; () banked
  3596  001506  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3597  001508  1158               	iorwf	??_sprintf& (0+255),w,b
  3598  00150A  B4D8               	btfsc	status,2,c
  3599  00150C  D00A               	goto	l10437
  3600                           
  3601                           ; BSR set to: 1
  3602                           ;doprnt.c: 1400: ((*sp++ = ('-')));
  3603  00150E  C151  FFD9         	movff	sprintf@sp,fsr2l
  3604  001512  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3605  001516  0E2D               	movlw	45
  3606  001518  6EDF               	movwf	indf2,c
  3607                           
  3608                           ; BSR set to: 1
  3609  00151A  0101               	movlb	1	; () banked
  3610  00151C  0101               	movlb	1	; () banked
  3611  00151E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3612  001520  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3613  001522                     l10437:
  3614                           
  3615                           ; BSR set to: 1
  3616                           ;doprnt.c: 1422: if(width)
  3617  001522  0101               	movlb	1	; () banked
  3618  001524  0101               	movlb	1	; () banked
  3619  001526  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3620  001528  1177               	iorwf	sprintf@width& (0+255),w,b
  3621  00152A  B4D8               	btfsc	status,2,c
  3622  00152C  D09A               	goto	l10465
  3623                           
  3624                           ; BSR set to: 1
  3625                           ;doprnt.c: 1424: ((*sp++ = ('0')));
  3626                           
  3627                           ; BSR set to: 1
  3628                           
  3629                           ;doprnt.c: 1423: do
  3630  00152E  C151  FFD9         	movff	sprintf@sp,fsr2l
  3631  001532  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3632  001536  0E30               	movlw	48
  3633  001538  6EDF               	movwf	indf2,c
  3634                           
  3635                           ; BSR set to: 1
  3636  00153A  0101               	movlb	1	; () banked
  3637  00153C  0101               	movlb	1	; () banked
  3638  00153E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3639  001540  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;doprnt.c: 1425: while(--width);
  3643  001542  0101               	movlb	1	; () banked
  3644  001544  0101               	movlb	1	; () banked
  3645  001546  0777               	decf	sprintf@width& (0+255),f,b
  3646  001548  A0D8               	btfss	status,0,c
  3647  00154A  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3648  00154C  D7EB               	goto	L6
  3649  00154E                     l10445:
  3650                           
  3651                           ; BSR set to: 1
  3652                           ;doprnt.c: 1429: {
  3653                           ;doprnt.c: 1431: if(width
  3654                           ;doprnt.c: 1435: )
  3655  00154E  0101               	movlb	1	; () banked
  3656  001550  0101               	movlb	1	; () banked
  3657  001552  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3658  001554  1177               	iorwf	sprintf@width& (0+255),w,b
  3659  001556  B4D8               	btfsc	status,2,c
  3660  001558  D014               	goto	l10453
  3661  00155A                     l10447:
  3662                           
  3663                           ; BSR set to: 1
  3664                           ;doprnt.c: 1437: ((*sp++ = (' ')));
  3665  00155A  C151  FFD9         	movff	sprintf@sp,fsr2l
  3666  00155E  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3667  001562  0E20               	movlw	32
  3668  001564  6EDF               	movwf	indf2,c
  3669                           
  3670                           ; BSR set to: 1
  3671  001566  0101               	movlb	1	; () banked
  3672  001568  0101               	movlb	1	; () banked
  3673  00156A  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3674  00156C  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3675                           
  3676                           ; BSR set to: 1
  3677                           ;doprnt.c: 1438: while(--width);
  3678  00156E  0101               	movlb	1	; () banked
  3679  001570  0101               	movlb	1	; () banked
  3680  001572  0777               	decf	sprintf@width& (0+255),f,b
  3681  001574  A0D8               	btfss	status,0,c
  3682  001576  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3683  001578  0101               	movlb	1	; () banked
  3684  00157A  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3685  00157C  1177               	iorwf	sprintf@width& (0+255),w,b
  3686  00157E  A4D8               	btfss	status,2,c
  3687  001580  D7EC               	goto	l10447
  3688  001582                     l10453:
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;doprnt.c: 1445: if(flag & 0x03)
  3692  001582  0E03               	movlw	3
  3693  001584  0101               	movlb	1	; () banked
  3694  001586  0101               	movlb	1	; () banked
  3695  001588  1573               	andwf	sprintf@flag& (0+255),w,b
  3696  00158A  0101               	movlb	1	; () banked
  3697  00158C  6F58               	movwf	??_sprintf& (0+255),b
  3698  00158E  0E00               	movlw	0
  3699  001590  0101               	movlb	1	; () banked
  3700  001592  0101               	movlb	1	; () banked
  3701  001594  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3702  001596  0101               	movlb	1	; () banked
  3703  001598  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3704  00159A  0101               	movlb	1	; () banked
  3705  00159C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3706  00159E  1158               	iorwf	??_sprintf& (0+255),w,b
  3707  0015A0  B4D8               	btfsc	status,2,c
  3708  0015A2  D05F               	goto	l10465
  3709                           
  3710                           ; BSR set to: 1
  3711                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  3712  0015A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  3713  0015A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3714  0015AC  0E2D               	movlw	45
  3715  0015AE  6EDF               	movwf	indf2,c
  3716  0015B0  D054               	goto	L5
  3717  0015B2                     l10459:
  3718                           
  3719                           ; BSR set to: 1
  3720                           ;doprnt.c: 1485: {
  3721                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  3722  0015B2  0101               	movlb	1	; () banked
  3723  0015B4  C17C  F158         	movff	sprintf@prec,??_sprintf
  3724  0015B8  0101               	movlb	1	; () banked
  3725  0015BA  C17D  F159         	movff	sprintf@prec+1,??_sprintf+1
  3726  0015BE  0101               	movlb	1	; () banked
  3727  0015C0  90D8               	bcf	status,0,c
  3728  0015C2  3758               	rlcf	??_sprintf& (0+255),f,b
  3729  0015C4  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  3730  0015C6  0101               	movlb	1	; () banked
  3731  0015C8  90D8               	bcf	status,0,c
  3732  0015CA  3758               	rlcf	??_sprintf& (0+255),f,b
  3733  0015CC  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  3734  0015CE  0E00               	movlw	low _dpowers
  3735  0015D0  0101               	movlb	1	; () banked
  3736  0015D2  2558               	addwf	??_sprintf& (0+255),w,b
  3737  0015D4  6EF6               	movwf	tblptrl,c
  3738  0015D6  0E08               	movlw	high _dpowers
  3739  0015D8  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  3740  0015DA  6EF7               	movwf	tblptrh,c
  3741  0015DC  0009               	tblrd		*+
  3742  0015DE  0101               	movlb	1	; () banked
  3743  0015E0  CFF5 F104          	movff	tablat,?___lldiv+4
  3744  0015E4  0009               	tblrd		*+
  3745  0015E6  0101               	movlb	1	; () banked
  3746  0015E8  CFF5 F105          	movff	tablat,?___lldiv+5
  3747  0015EC  0009               	tblrd		*+
  3748  0015EE  0101               	movlb	1	; () banked
  3749  0015F0  CFF5 F106          	movff	tablat,?___lldiv+6
  3750  0015F4  000A               	tblrd		*-
  3751  0015F6  0101               	movlb	1	; () banked
  3752  0015F8  CFF5 F107          	movff	tablat,?___lldiv+7
  3753  0015FC  C16E  F100         	movff	sprintf@_val,?___lldiv
  3754  001600  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  3755  001604  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  3756  001608  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  3757  00160C  EC91  F025         	call	___lldiv	;wreg free
  3758  001610  C103  F111         	movff	?___lldiv+3,?___llmod+3
  3759  001614  C102  F110         	movff	?___lldiv+2,?___llmod+2
  3760  001618  C101  F10F         	movff	?___lldiv+1,?___llmod+1
  3761  00161C  C100  F10E         	movff	?___lldiv,?___llmod
  3762  001620  0E0A               	movlw	10
  3763  001622  0101               	movlb	1	; () banked
  3764  001624  0101               	movlb	1	; () banked
  3765  001626  6F12               	movwf	(?___llmod+4)& (0+255),b
  3766  001628  0E00               	movlw	0
  3767  00162A  0101               	movlb	1	; () banked
  3768  00162C  6F13               	movwf	(?___llmod+5)& (0+255),b
  3769  00162E  0E00               	movlw	0
  3770  001630  0101               	movlb	1	; () banked
  3771  001632  6F14               	movwf	(?___llmod+6)& (0+255),b
  3772  001634  0E00               	movlw	0
  3773  001636  0101               	movlb	1	; () banked
  3774  001638  6F15               	movwf	(?___llmod+7)& (0+255),b
  3775  00163A  EC56  F029         	call	___llmod	;wreg free
  3776  00163E  0101               	movlb	1	; () banked
  3777  001640  0101               	movlb	1	; () banked
  3778  001642  510E               	movf	?___llmod& (0+255),w,b
  3779  001644  0F30               	addlw	48
  3780  001646  0101               	movlb	1	; () banked
  3781  001648  0101               	movlb	1	; () banked
  3782  00164A  6F7E               	movwf	sprintf@c& (0+255),b
  3783                           
  3784                           ; BSR set to: 1
  3785                           ;doprnt.c: 1530: }
  3786                           ;doprnt.c: 1531: ((*sp++ = (c)));
  3787  00164C  C151  FFD9         	movff	sprintf@sp,fsr2l
  3788  001650  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3789  001654  0101               	movlb	1	; () banked
  3790  001656  C17E  FFDF         	movff	sprintf@c,indf2
  3791  00165A                     L5:
  3792                           
  3793                           ; BSR set to: 1
  3794  00165A  0101               	movlb	1	; () banked
  3795  00165C  0101               	movlb	1	; () banked
  3796  00165E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3797  001660  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3798  001662                     l10465:
  3799                           
  3800                           ; BSR set to: 1
  3801  001662  0101               	movlb	1	; () banked
  3802  001664  0101               	movlb	1	; () banked
  3803  001666  077C               	decf	sprintf@prec& (0+255),f,b
  3804  001668  A0D8               	btfss	status,0,c
  3805  00166A  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3806  00166C  0101               	movlb	1	; () banked
  3807  00166E  297C               	incf	sprintf@prec& (0+255),w,b
  3808  001670  B4D8               	btfsc	status,2,c
  3809  001672  297D               	incf	(sprintf@prec+1)& (0+255),w,b
  3810  001674  A4D8               	btfss	status,2,c
  3811  001676  D79D               	goto	l10459
  3812  001678                     l10467:
  3813                           
  3814                           ; BSR set to: 1
  3815  001678  0101               	movlb	1	; () banked
  3816  00167A  C153  FFF6         	movff	sprintf@f,tblptrl
  3817  00167E  0101               	movlb	1	; () banked
  3818  001680  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3819  001684  0101               	movlb	1	; () banked
  3820  001686  0101               	movlb	1	; () banked
  3821  001688  4B53               	infsnz	sprintf@f& (0+255),f,b
  3822  00168A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  3823  00168C  0008               	tblrd		*
  3824  00168E  0101               	movlb	1	; () banked
  3825  001690  CFF5 F17E          	movff	tablat,sprintf@c
  3826  001694  0101               	movlb	1	; () banked
  3827  001696  677E               	tstfsz	sprintf@c& (0+255),b
  3828  001698  EF55  F004         	goto	l10143
  3829  00169C                     l10469:
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;doprnt.c: 1545: *sp = 0;
  3833  00169C  C151  FFD9         	movff	sprintf@sp,fsr2l
  3834  0016A0  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3835  0016A4  0E00               	movlw	0
  3836  0016A6  6EDF               	movwf	indf2,c
  3837                           
  3838                           ; BSR set to: 1
  3839                           
  3840                           ; BSR set to: 1
  3841                           ;doprnt.c: 1547: return 0;
  3842                           ;	Return value of _sprintf is never used
  3843  0016A8  0012               	return	
  3844  0016AA                     __end_of_sprintf:
  3845                           	opt stack 0
  3846                           tblptru	equ	0xFF8
  3847                           tblptrh	equ	0xFF7
  3848                           tblptrl	equ	0xFF6
  3849                           tablat	equ	0xFF5
  3850                           prodh	equ	0xFF4
  3851                           prodl	equ	0xFF3
  3852                           postinc0	equ	0xFEE
  3853                           wreg	equ	0xFE8
  3854                           indf2	equ	0xFDF
  3855                           postinc2	equ	0xFDE
  3856                           postdec2	equ	0xFDD
  3857                           fsr2h	equ	0xFDA
  3858                           fsr2l	equ	0xFD9
  3859                           status	equ	0xFD8
  3860                           
  3861 ;; *************** function ___lwmod *****************
  3862 ;; Defined at:
  3863 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  dividend        2    0[BANK1 ] unsigned int 
  3866 ;;  divisor         2    2[BANK1 ] unsigned int 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  counter         1    5[BANK1 ] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  2    0[BANK1 ] unsigned int 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3878 ;;      Params:         0       0       4       0       0       0       0       0       0
  3879 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3880 ;;      Temps:          0       0       1       0       0       0       0       0       0
  3881 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3882 ;;Total ram usage:        6 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    9
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_sprintf
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text2
  3893  005888                     __ptext2:
  3894                           	opt stack 0
  3895  005888                     ___lwmod:
  3896                           	opt stack 20
  3897                           
  3898                           ; BSR set to: 1
  3899                           ;incstack = 0
  3900                           ;incstack = 0
  3901  005888  0101               	movlb	1	; () banked
  3902  00588A  0101               	movlb	1	; () banked
  3903  00588C  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3904  00588E  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  3905  005890  B4D8               	btfsc	status,2,c
  3906  005892  D03A               	goto	l917
  3907                           
  3908                           ; BSR set to: 1
  3909  005894  0101               	movlb	1	; () banked
  3910  005896  6F04               	movwf	??___lwmod& (0+255),b
  3911  005898  0E01               	movlw	1
  3912  00589A  0101               	movlb	1	; () banked
  3913  00589C  0101               	movlb	1	; () banked
  3914  00589E  6F05               	movwf	___lwmod@counter& (0+255),b
  3915  0058A0  0101               	movlb	1	; () banked
  3916  0058A2  5104               	movf	??___lwmod& (0+255),w,b
  3917  0058A4  D009               	goto	l11073
  3918  0058A6                     l11071:
  3919                           
  3920                           ; BSR set to: 1
  3921  0058A6  0101               	movlb	1	; () banked
  3922  0058A8  0101               	movlb	1	; () banked
  3923  0058AA  0101               	movlb	1	; () banked
  3924  0058AC  90D8               	bcf	status,0,c
  3925  0058AE  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  3926  0058B0  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3927  0058B2  0101               	movlb	1	; () banked
  3928  0058B4  0101               	movlb	1	; () banked
  3929  0058B6  2B05               	incf	___lwmod@counter& (0+255),f,b
  3930  0058B8                     l11073:
  3931                           
  3932                           ; BSR set to: 1
  3933  0058B8  0101               	movlb	1	; () banked
  3934  0058BA  0101               	movlb	1	; () banked
  3935  0058BC  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3936  0058BE  D7F3               	goto	l11071
  3937  0058C0                     l11075:
  3938                           
  3939                           ; BSR set to: 1
  3940  0058C0  0101               	movlb	1	; () banked
  3941  0058C2  0101               	movlb	1	; () banked
  3942  0058C4  5102               	movf	___lwmod@divisor& (0+255),w,b
  3943  0058C6  0101               	movlb	1	; () banked
  3944  0058C8  0101               	movlb	1	; () banked
  3945  0058CA  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  3946  0058CC  0101               	movlb	1	; () banked
  3947  0058CE  0101               	movlb	1	; () banked
  3948  0058D0  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3949  0058D2  0101               	movlb	1	; () banked
  3950  0058D4  0101               	movlb	1	; () banked
  3951  0058D6  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3952  0058D8  A0D8               	btfss	status,0,c
  3953  0058DA  D00C               	goto	l11079
  3954                           
  3955                           ; BSR set to: 1
  3956  0058DC  0101               	movlb	1	; () banked
  3957  0058DE  0101               	movlb	1	; () banked
  3958  0058E0  5102               	movf	___lwmod@divisor& (0+255),w,b
  3959  0058E2  0101               	movlb	1	; () banked
  3960  0058E4  0101               	movlb	1	; () banked
  3961  0058E6  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  3962  0058E8  0101               	movlb	1	; () banked
  3963  0058EA  0101               	movlb	1	; () banked
  3964  0058EC  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3965  0058EE  0101               	movlb	1	; () banked
  3966  0058F0  0101               	movlb	1	; () banked
  3967  0058F2  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3968  0058F4                     l11079:
  3969                           
  3970                           ; BSR set to: 1
  3971  0058F4  0101               	movlb	1	; () banked
  3972  0058F6  0101               	movlb	1	; () banked
  3973  0058F8  0101               	movlb	1	; () banked
  3974  0058FA  90D8               	bcf	status,0,c
  3975  0058FC  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3976  0058FE  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  3977                           
  3978                           ; BSR set to: 1
  3979  005900  0101               	movlb	1	; () banked
  3980  005902  0101               	movlb	1	; () banked
  3981  005904  2F05               	decfsz	___lwmod@counter& (0+255),f,b
  3982  005906  D7DC               	goto	l11075
  3983  005908                     l917:
  3984                           
  3985                           ; BSR set to: 1
  3986  005908  C100  F100         	movff	___lwmod@dividend,?___lwmod
  3987  00590C  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  3988                           
  3989                           ; BSR set to: 1
  3990  005910  0012               	return	
  3991  005912                     __end_of___lwmod:
  3992                           	opt stack 0
  3993                           tblptru	equ	0xFF8
  3994                           tblptrh	equ	0xFF7
  3995                           tblptrl	equ	0xFF6
  3996                           tablat	equ	0xFF5
  3997                           prodh	equ	0xFF4
  3998                           prodl	equ	0xFF3
  3999                           postinc0	equ	0xFEE
  4000                           wreg	equ	0xFE8
  4001                           indf2	equ	0xFDF
  4002                           postinc2	equ	0xFDE
  4003                           postdec2	equ	0xFDD
  4004                           fsr2h	equ	0xFDA
  4005                           fsr2l	equ	0xFD9
  4006                           status	equ	0xFD8
  4007                           
  4008 ;; *************** function ___lltoft *****************
  4009 ;; Defined at:
  4010 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  c               4    8[BANK1 ] unsigned long 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  exp             1   16[BANK1 ] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  3    8[BANK1 ] float 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4024 ;;      Params:         0       0       4       0       0       0       0       0       0
  4025 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4026 ;;      Temps:          0       0       4       0       0       0       0       0       0
  4027 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4028 ;;Total ram usage:        9 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:   10
  4031 ;; This function calls:
  4032 ;;		___ftpack
  4033 ;; This function is called by:
  4034 ;;		_sprintf
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text3
  4039  00563E                     __ptext3:
  4040                           	opt stack 0
  4041  00563E                     ___lltoft:
  4042                           	opt stack 19
  4043                           
  4044                           ; BSR set to: 1
  4045                           ;incstack = 0
  4046                           ;incstack = 0
  4047  00563E  0101               	movlb	1	; () banked
  4048  005640  6F0C               	movwf	??___lltoft& (0+255),b
  4049  005642  0E8E               	movlw	142
  4050  005644  0101               	movlb	1	; () banked
  4051  005646  0101               	movlb	1	; () banked
  4052  005648  6F10               	movwf	___lltoft@exp& (0+255),b
  4053  00564A  0101               	movlb	1	; () banked
  4054  00564C  510C               	movf	??___lltoft& (0+255),w,b
  4055  00564E  D00D               	goto	l11039
  4056  005650                     l11037:
  4057                           
  4058                           ; BSR set to: 1
  4059  005650  0101               	movlb	1	; () banked
  4060  005652  90D8               	bcf	status,0,c
  4061  005654  0101               	movlb	1	; () banked
  4062  005656  330B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  4063  005658  0101               	movlb	1	; () banked
  4064  00565A  330A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  4065  00565C  0101               	movlb	1	; () banked
  4066  00565E  3309               	rrcf	(___lltoft@c+1)& (0+255),f,b
  4067  005660  0101               	movlb	1	; () banked
  4068  005662  3308               	rrcf	___lltoft@c& (0+255),f,b
  4069  005664  0101               	movlb	1	; () banked
  4070  005666  0101               	movlb	1	; () banked
  4071  005668  2B10               	incf	___lltoft@exp& (0+255),f,b
  4072  00566A                     l11039:
  4073                           
  4074                           ; BSR set to: 1
  4075  00566A  0E00               	movlw	0
  4076  00566C  0101               	movlb	1	; () banked
  4077  00566E  0101               	movlb	1	; () banked
  4078  005670  1508               	andwf	___lltoft@c& (0+255),w,b
  4079  005672  0101               	movlb	1	; () banked
  4080  005674  6F0C               	movwf	??___lltoft& (0+255),b
  4081  005676  0E00               	movlw	0
  4082  005678  0101               	movlb	1	; () banked
  4083  00567A  0101               	movlb	1	; () banked
  4084  00567C  1509               	andwf	(___lltoft@c+1)& (0+255),w,b
  4085  00567E  0101               	movlb	1	; () banked
  4086  005680  6F0D               	movwf	(??___lltoft+1)& (0+255),b
  4087  005682  0E00               	movlw	0
  4088  005684  0101               	movlb	1	; () banked
  4089  005686  0101               	movlb	1	; () banked
  4090  005688  150A               	andwf	(___lltoft@c+2)& (0+255),w,b
  4091  00568A  0101               	movlb	1	; () banked
  4092  00568C  6F0E               	movwf	(??___lltoft+2)& (0+255),b
  4093  00568E  0EFF               	movlw	255
  4094  005690  0101               	movlb	1	; () banked
  4095  005692  0101               	movlb	1	; () banked
  4096  005694  150B               	andwf	(___lltoft@c+3)& (0+255),w,b
  4097  005696  0101               	movlb	1	; () banked
  4098  005698  6F0F               	movwf	(??___lltoft+3)& (0+255),b
  4099  00569A  0101               	movlb	1	; () banked
  4100  00569C  510F               	movf	(??___lltoft+3)& (0+255),w,b
  4101  00569E  110C               	iorwf	??___lltoft& (0+255),w,b
  4102  0056A0  110D               	iorwf	(??___lltoft+1)& (0+255),w,b
  4103  0056A2  110E               	iorwf	(??___lltoft+2)& (0+255),w,b
  4104  0056A4  A4D8               	btfss	status,2,c
  4105  0056A6  D7D4               	goto	l11037
  4106                           
  4107                           ; BSR set to: 1
  4108                           
  4109                           ; BSR set to: 1
  4110  0056A8  C108  F100         	movff	___lltoft@c,?___ftpack
  4111  0056AC  C109  F101         	movff	___lltoft@c+1,?___ftpack+1
  4112  0056B0  C10A  F102         	movff	___lltoft@c+2,?___ftpack+2
  4113  0056B4  C110  F103         	movff	___lltoft@exp,?___ftpack+3
  4114  0056B8  0101               	movlb	1	; () banked
  4115  0056BA  6F0C               	movwf	??___lltoft& (0+255),b
  4116  0056BC  0E00               	movlw	0
  4117  0056BE  0101               	movlb	1	; () banked
  4118  0056C0  0101               	movlb	1	; () banked
  4119  0056C2  6F04               	movwf	(?___ftpack+4)& (0+255),b
  4120  0056C4  0101               	movlb	1	; () banked
  4121  0056C6  510C               	movf	??___lltoft& (0+255),w,b
  4122  0056C8  EC30  F022         	call	___ftpack	;wreg free
  4123  0056CC  C102  F10A         	movff	?___ftpack+2,?___lltoft+2
  4124  0056D0  C101  F109         	movff	?___ftpack+1,?___lltoft+1
  4125  0056D4  C100  F108         	movff	?___ftpack,?___lltoft
  4126  0056D8  0012               	return	
  4127  0056DA                     __end_of___lltoft:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           postinc0	equ	0xFEE
  4136                           wreg	equ	0xFE8
  4137                           indf2	equ	0xFDF
  4138                           postinc2	equ	0xFDE
  4139                           postdec2	equ	0xFDD
  4140                           fsr2h	equ	0xFDA
  4141                           fsr2l	equ	0xFD9
  4142                           status	equ	0xFD8
  4143                           
  4144 ;; *************** function ___llmod *****************
  4145 ;; Defined at:
  4146 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  dividend        4   14[BANK1 ] unsigned long 
  4149 ;;  divisor         4   18[BANK1 ] unsigned long 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  counter         1   23[BANK1 ] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  4   14[BANK1 ] unsigned long 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4161 ;;      Params:         0       0       8       0       0       0       0       0       0
  4162 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4163 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4164 ;;      Totals:         0       0      10       0       0       0       0       0       0
  4165 ;;Total ram usage:       10 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    9
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_sprintf
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text4
  4176  0052AC                     __ptext4:
  4177                           	opt stack 0
  4178  0052AC                     ___llmod:
  4179                           	opt stack 20
  4180                           
  4181                           ;incstack = 0
  4182                           ;incstack = 0
  4183  0052AC  0101               	movlb	1	; () banked
  4184  0052AE  0101               	movlb	1	; () banked
  4185  0052B0  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4186  0052B2  1112               	iorwf	___llmod@divisor& (0+255),w,b
  4187  0052B4  1113               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4188  0052B6  1114               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4189  0052B8  B4D8               	btfsc	status,2,c
  4190  0052BA  D05A               	goto	l848
  4191                           
  4192                           ; BSR set to: 1
  4193  0052BC  0101               	movlb	1	; () banked
  4194  0052BE  6F16               	movwf	??___llmod& (0+255),b
  4195  0052C0  0E01               	movlw	1
  4196  0052C2  0101               	movlb	1	; () banked
  4197  0052C4  0101               	movlb	1	; () banked
  4198  0052C6  6F17               	movwf	___llmod@counter& (0+255),b
  4199  0052C8  0101               	movlb	1	; () banked
  4200  0052CA  5116               	movf	??___llmod& (0+255),w,b
  4201  0052CC  D00D               	goto	l8517
  4202  0052CE                     l8515:
  4203                           
  4204                           ; BSR set to: 1
  4205  0052CE  0101               	movlb	1	; () banked
  4206  0052D0  90D8               	bcf	status,0,c
  4207  0052D2  0101               	movlb	1	; () banked
  4208  0052D4  3712               	rlcf	___llmod@divisor& (0+255),f,b
  4209  0052D6  0101               	movlb	1	; () banked
  4210  0052D8  3713               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4211  0052DA  0101               	movlb	1	; () banked
  4212  0052DC  3714               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4213  0052DE  0101               	movlb	1	; () banked
  4214  0052E0  3715               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4215  0052E2  0101               	movlb	1	; () banked
  4216  0052E4  0101               	movlb	1	; () banked
  4217  0052E6  2B17               	incf	___llmod@counter& (0+255),f,b
  4218  0052E8                     l8517:
  4219                           
  4220                           ; BSR set to: 1
  4221  0052E8  0101               	movlb	1	; () banked
  4222  0052EA  0101               	movlb	1	; () banked
  4223  0052EC  AF15               	btfss	(___llmod@divisor+3)& (0+255),7,b
  4224  0052EE  D7EF               	goto	l8515
  4225  0052F0                     l8519:
  4226                           
  4227                           ; BSR set to: 1
  4228  0052F0  0101               	movlb	1	; () banked
  4229  0052F2  0101               	movlb	1	; () banked
  4230  0052F4  5112               	movf	___llmod@divisor& (0+255),w,b
  4231  0052F6  0101               	movlb	1	; () banked
  4232  0052F8  0101               	movlb	1	; () banked
  4233  0052FA  5D0E               	subwf	___llmod@dividend& (0+255),w,b
  4234  0052FC  0101               	movlb	1	; () banked
  4235  0052FE  0101               	movlb	1	; () banked
  4236  005300  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  4237  005302  0101               	movlb	1	; () banked
  4238  005304  0101               	movlb	1	; () banked
  4239  005306  590F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4240  005308  0101               	movlb	1	; () banked
  4241  00530A  0101               	movlb	1	; () banked
  4242  00530C  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  4243  00530E  0101               	movlb	1	; () banked
  4244  005310  0101               	movlb	1	; () banked
  4245  005312  5910               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4246  005314  0101               	movlb	1	; () banked
  4247  005316  0101               	movlb	1	; () banked
  4248  005318  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4249  00531A  0101               	movlb	1	; () banked
  4250  00531C  0101               	movlb	1	; () banked
  4251  00531E  5911               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4252  005320  A0D8               	btfss	status,0,c
  4253  005322  D018               	goto	l8523
  4254                           
  4255                           ; BSR set to: 1
  4256  005324  0101               	movlb	1	; () banked
  4257  005326  0101               	movlb	1	; () banked
  4258  005328  5112               	movf	___llmod@divisor& (0+255),w,b
  4259  00532A  0101               	movlb	1	; () banked
  4260  00532C  0101               	movlb	1	; () banked
  4261  00532E  5F0E               	subwf	___llmod@dividend& (0+255),f,b
  4262  005330  0101               	movlb	1	; () banked
  4263  005332  0101               	movlb	1	; () banked
  4264  005334  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  4265  005336  0101               	movlb	1	; () banked
  4266  005338  0101               	movlb	1	; () banked
  4267  00533A  5B0F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  4268  00533C  0101               	movlb	1	; () banked
  4269  00533E  0101               	movlb	1	; () banked
  4270  005340  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  4271  005342  0101               	movlb	1	; () banked
  4272  005344  0101               	movlb	1	; () banked
  4273  005346  5B10               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  4274  005348  0101               	movlb	1	; () banked
  4275  00534A  0101               	movlb	1	; () banked
  4276  00534C  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4277  00534E  0101               	movlb	1	; () banked
  4278  005350  0101               	movlb	1	; () banked
  4279  005352  5B11               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  4280  005354                     l8523:
  4281                           
  4282                           ; BSR set to: 1
  4283  005354  0101               	movlb	1	; () banked
  4284  005356  90D8               	bcf	status,0,c
  4285  005358  0101               	movlb	1	; () banked
  4286  00535A  3315               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  4287  00535C  0101               	movlb	1	; () banked
  4288  00535E  3314               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  4289  005360  0101               	movlb	1	; () banked
  4290  005362  3313               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  4291  005364  0101               	movlb	1	; () banked
  4292  005366  3312               	rrcf	___llmod@divisor& (0+255),f,b
  4293                           
  4294                           ; BSR set to: 1
  4295  005368  0101               	movlb	1	; () banked
  4296  00536A  0101               	movlb	1	; () banked
  4297  00536C  2F17               	decfsz	___llmod@counter& (0+255),f,b
  4298  00536E  D7C0               	goto	l8519
  4299  005370                     l848:
  4300                           
  4301                           ; BSR set to: 1
  4302  005370  C10E  F10E         	movff	___llmod@dividend,?___llmod
  4303  005374  C10F  F10F         	movff	___llmod@dividend+1,?___llmod+1
  4304  005378  C110  F110         	movff	___llmod@dividend+2,?___llmod+2
  4305  00537C  C111  F111         	movff	___llmod@dividend+3,?___llmod+3
  4306                           
  4307                           ; BSR set to: 1
  4308  005380  0012               	return	
  4309  005382                     __end_of___llmod:
  4310                           	opt stack 0
  4311                           tblptru	equ	0xFF8
  4312                           tblptrh	equ	0xFF7
  4313                           tblptrl	equ	0xFF6
  4314                           tablat	equ	0xFF5
  4315                           prodh	equ	0xFF4
  4316                           prodl	equ	0xFF3
  4317                           postinc0	equ	0xFEE
  4318                           wreg	equ	0xFE8
  4319                           indf2	equ	0xFDF
  4320                           postinc2	equ	0xFDE
  4321                           postdec2	equ	0xFDD
  4322                           fsr2h	equ	0xFDA
  4323                           fsr2l	equ	0xFD9
  4324                           status	equ	0xFD8
  4325                           
  4326 ;; *************** function ___lldiv *****************
  4327 ;; Defined at:
  4328 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  dividend        4    0[BANK1 ] unsigned long 
  4331 ;;  divisor         4    4[BANK1 ] unsigned long 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  quotient        4    9[BANK1 ] unsigned long 
  4334 ;;  counter         1   13[BANK1 ] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  4    0[BANK1 ] unsigned long 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4344 ;;      Params:         0       0       8       0       0       0       0       0       0
  4345 ;;      Locals:         0       0       5       0       0       0       0       0       0
  4346 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4347 ;;      Totals:         0       0      14       0       0       0       0       0       0
  4348 ;;Total ram usage:       14 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    9
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_sprintf
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text5
  4359  004B22                     __ptext5:
  4360                           	opt stack 0
  4361  004B22                     ___lldiv:
  4362                           	opt stack 20
  4363                           
  4364                           ; BSR set to: 1
  4365                           ;incstack = 0
  4366                           ;incstack = 0
  4367  004B22  0E00               	movlw	0
  4368  004B24  0101               	movlb	1	; () banked
  4369  004B26  0101               	movlb	1	; () banked
  4370  004B28  6F09               	movwf	___lldiv@quotient& (0+255),b
  4371  004B2A  0E00               	movlw	0
  4372  004B2C  0101               	movlb	1	; () banked
  4373  004B2E  6F0A               	movwf	(___lldiv@quotient+1)& (0+255),b
  4374  004B30  0E00               	movlw	0
  4375  004B32  0101               	movlb	1	; () banked
  4376  004B34  6F0B               	movwf	(___lldiv@quotient+2)& (0+255),b
  4377  004B36  0E00               	movlw	0
  4378  004B38  0101               	movlb	1	; () banked
  4379  004B3A  6F0C               	movwf	(___lldiv@quotient+3)& (0+255),b
  4380                           
  4381                           ; BSR set to: 1
  4382  004B3C  0101               	movlb	1	; () banked
  4383  004B3E  0101               	movlb	1	; () banked
  4384  004B40  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4385  004B42  1104               	iorwf	___lldiv@divisor& (0+255),w,b
  4386  004B44  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4387  004B46  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4388  004B48  B4D8               	btfsc	status,2,c
  4389  004B4A  D067               	goto	l838
  4390                           
  4391                           ; BSR set to: 1
  4392  004B4C  0101               	movlb	1	; () banked
  4393  004B4E  6F08               	movwf	??___lldiv& (0+255),b
  4394  004B50  0E01               	movlw	1
  4395  004B52  0101               	movlb	1	; () banked
  4396  004B54  0101               	movlb	1	; () banked
  4397  004B56  6F0D               	movwf	___lldiv@counter& (0+255),b
  4398  004B58  0101               	movlb	1	; () banked
  4399  004B5A  5108               	movf	??___lldiv& (0+255),w,b
  4400  004B5C  D00D               	goto	l11021
  4401  004B5E                     l11019:
  4402                           
  4403                           ; BSR set to: 1
  4404  004B5E  0101               	movlb	1	; () banked
  4405  004B60  90D8               	bcf	status,0,c
  4406  004B62  0101               	movlb	1	; () banked
  4407  004B64  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  4408  004B66  0101               	movlb	1	; () banked
  4409  004B68  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4410  004B6A  0101               	movlb	1	; () banked
  4411  004B6C  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4412  004B6E  0101               	movlb	1	; () banked
  4413  004B70  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4414  004B72  0101               	movlb	1	; () banked
  4415  004B74  0101               	movlb	1	; () banked
  4416  004B76  2B0D               	incf	___lldiv@counter& (0+255),f,b
  4417  004B78                     l11021:
  4418                           
  4419                           ; BSR set to: 1
  4420  004B78  0101               	movlb	1	; () banked
  4421  004B7A  0101               	movlb	1	; () banked
  4422  004B7C  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4423  004B7E  D7EF               	goto	l11019
  4424  004B80                     l11023:
  4425                           
  4426                           ; BSR set to: 1
  4427  004B80  0101               	movlb	1	; () banked
  4428  004B82  90D8               	bcf	status,0,c
  4429  004B84  0101               	movlb	1	; () banked
  4430  004B86  3709               	rlcf	___lldiv@quotient& (0+255),f,b
  4431  004B88  0101               	movlb	1	; () banked
  4432  004B8A  370A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4433  004B8C  0101               	movlb	1	; () banked
  4434  004B8E  370B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4435  004B90  0101               	movlb	1	; () banked
  4436  004B92  370C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4437                           
  4438                           ; BSR set to: 1
  4439  004B94  0101               	movlb	1	; () banked
  4440  004B96  0101               	movlb	1	; () banked
  4441  004B98  5104               	movf	___lldiv@divisor& (0+255),w,b
  4442  004B9A  0101               	movlb	1	; () banked
  4443  004B9C  0101               	movlb	1	; () banked
  4444  004B9E  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  4445  004BA0  0101               	movlb	1	; () banked
  4446  004BA2  0101               	movlb	1	; () banked
  4447  004BA4  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4448  004BA6  0101               	movlb	1	; () banked
  4449  004BA8  0101               	movlb	1	; () banked
  4450  004BAA  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4451  004BAC  0101               	movlb	1	; () banked
  4452  004BAE  0101               	movlb	1	; () banked
  4453  004BB0  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4454  004BB2  0101               	movlb	1	; () banked
  4455  004BB4  0101               	movlb	1	; () banked
  4456  004BB6  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4457  004BB8  0101               	movlb	1	; () banked
  4458  004BBA  0101               	movlb	1	; () banked
  4459  004BBC  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4460  004BBE  0101               	movlb	1	; () banked
  4461  004BC0  0101               	movlb	1	; () banked
  4462  004BC2  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4463  004BC4  A0D8               	btfss	status,0,c
  4464  004BC6  D01B               	goto	l11031
  4465                           
  4466                           ; BSR set to: 1
  4467  004BC8  0101               	movlb	1	; () banked
  4468  004BCA  0101               	movlb	1	; () banked
  4469  004BCC  5104               	movf	___lldiv@divisor& (0+255),w,b
  4470  004BCE  0101               	movlb	1	; () banked
  4471  004BD0  0101               	movlb	1	; () banked
  4472  004BD2  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  4473  004BD4  0101               	movlb	1	; () banked
  4474  004BD6  0101               	movlb	1	; () banked
  4475  004BD8  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4476  004BDA  0101               	movlb	1	; () banked
  4477  004BDC  0101               	movlb	1	; () banked
  4478  004BDE  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4479  004BE0  0101               	movlb	1	; () banked
  4480  004BE2  0101               	movlb	1	; () banked
  4481  004BE4  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4482  004BE6  0101               	movlb	1	; () banked
  4483  004BE8  0101               	movlb	1	; () banked
  4484  004BEA  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4485  004BEC  0101               	movlb	1	; () banked
  4486  004BEE  0101               	movlb	1	; () banked
  4487  004BF0  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4488  004BF2  0101               	movlb	1	; () banked
  4489  004BF4  0101               	movlb	1	; () banked
  4490  004BF6  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4491                           
  4492                           ; BSR set to: 1
  4493  004BF8  0101               	movlb	1	; () banked
  4494  004BFA  0101               	movlb	1	; () banked
  4495  004BFC  8109               	bsf	___lldiv@quotient& (0+255),0,b
  4496  004BFE                     l11031:
  4497                           
  4498                           ; BSR set to: 1
  4499  004BFE  0101               	movlb	1	; () banked
  4500  004C00  90D8               	bcf	status,0,c
  4501  004C02  0101               	movlb	1	; () banked
  4502  004C04  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4503  004C06  0101               	movlb	1	; () banked
  4504  004C08  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4505  004C0A  0101               	movlb	1	; () banked
  4506  004C0C  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4507  004C0E  0101               	movlb	1	; () banked
  4508  004C10  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  4509                           
  4510                           ; BSR set to: 1
  4511  004C12  0101               	movlb	1	; () banked
  4512  004C14  0101               	movlb	1	; () banked
  4513  004C16  2F0D               	decfsz	___lldiv@counter& (0+255),f,b
  4514  004C18  D7B3               	goto	l11023
  4515  004C1A                     l838:
  4516                           
  4517                           ; BSR set to: 1
  4518  004C1A  C109  F100         	movff	___lldiv@quotient,?___lldiv
  4519  004C1E  C10A  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  4520  004C22  C10B  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  4521  004C26  C10C  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  4522                           
  4523                           ; BSR set to: 1
  4524  004C2A  0012               	return	
  4525  004C2C                     __end_of___lldiv:
  4526                           	opt stack 0
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           postinc0	equ	0xFEE
  4534                           wreg	equ	0xFE8
  4535                           indf2	equ	0xFDF
  4536                           postinc2	equ	0xFDE
  4537                           postdec2	equ	0xFDD
  4538                           fsr2h	equ	0xFDA
  4539                           fsr2l	equ	0xFD9
  4540                           status	equ	0xFD8
  4541                           
  4542 ;; *************** function ___ftneg *****************
  4543 ;; Defined at:
  4544 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  f1              3    0[BANK1 ] float 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  3    0[BANK1 ] float 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4558 ;;      Params:         0       0       3       0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4561 ;;      Totals:         0       0       3       0       0       0       0       0       0
  4562 ;;Total ram usage:        3 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    9
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_sprintf
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text6
  4573  00609A                     __ptext6:
  4574                           	opt stack 0
  4575  00609A                     ___ftneg:
  4576                           	opt stack 20
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;incstack = 0
  4580                           ;incstack = 0
  4581  00609A  0E7F               	movlw	127
  4582  00609C  0101               	movlb	1	; () banked
  4583  00609E  0101               	movlb	1	; () banked
  4584  0060A0  1502               	andwf	(___ftneg@f1+2)& (0+255),w,b
  4585  0060A2  0101               	movlb	1	; () banked
  4586  0060A4  1101               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  4587  0060A6  0101               	movlb	1	; () banked
  4588  0060A8  1100               	iorwf	___ftneg@f1& (0+255),w,b
  4589  0060AA  B4D8               	btfsc	status,2,c
  4590  0060AC  D00C               	goto	l784
  4591                           
  4592                           ; BSR set to: 1
  4593  0060AE  0E00               	movlw	0
  4594  0060B0  0101               	movlb	1	; () banked
  4595  0060B2  0101               	movlb	1	; () banked
  4596  0060B4  1B00               	xorwf	___ftneg@f1& (0+255),f,b
  4597  0060B6  0E00               	movlw	0
  4598  0060B8  0101               	movlb	1	; () banked
  4599  0060BA  0101               	movlb	1	; () banked
  4600  0060BC  1B01               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  4601  0060BE  0E80               	movlw	128
  4602  0060C0  0101               	movlb	1	; () banked
  4603  0060C2  0101               	movlb	1	; () banked
  4604  0060C4  1B02               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  4605  0060C6                     l784:
  4606                           
  4607                           ; BSR set to: 1
  4608  0060C6  C100  F100         	movff	___ftneg@f1,?___ftneg
  4609  0060CA  C101  F101         	movff	___ftneg@f1+1,?___ftneg+1
  4610  0060CE  C102  F102         	movff	___ftneg@f1+2,?___ftneg+2
  4611                           
  4612                           ; BSR set to: 1
  4613  0060D2  0012               	return	
  4614  0060D4                     __end_of___ftneg:
  4615                           	opt stack 0
  4616                           tblptru	equ	0xFF8
  4617                           tblptrh	equ	0xFF7
  4618                           tblptrl	equ	0xFF6
  4619                           tablat	equ	0xFF5
  4620                           prodh	equ	0xFF4
  4621                           prodl	equ	0xFF3
  4622                           postinc0	equ	0xFEE
  4623                           wreg	equ	0xFE8
  4624                           indf2	equ	0xFDF
  4625                           postinc2	equ	0xFDE
  4626                           postdec2	equ	0xFDD
  4627                           fsr2h	equ	0xFDA
  4628                           fsr2l	equ	0xFD9
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function ___ftge *****************
  4632 ;; Defined at:
  4633 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  ff1             3    0[BANK1 ] float 
  4636 ;;  ff2             3    3[BANK1 ] float 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;		None               void
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4648 ;;      Params:         0       0       6       0       0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4650 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4651 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4652 ;;Total ram usage:        9 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    9
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_sprintf
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text7
  4663  004D2E                     __ptext7:
  4664                           	opt stack 0
  4665  004D2E                     ___ftge:
  4666                           	opt stack 20
  4667                           
  4668                           ; BSR set to: 1
  4669                           ;incstack = 0
  4670                           ;incstack = 0
  4671  004D2E  0101               	movlb	1	; () banked
  4672  004D30  0101               	movlb	1	; () banked
  4673  004D32  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  4674  004D34  D021               	goto	l10995
  4675                           
  4676                           ; BSR set to: 1
  4677  004D36  0101               	movlb	1	; () banked
  4678  004D38  C100  F106         	movff	___ftge@ff1,??___ftge
  4679  004D3C  0101               	movlb	1	; () banked
  4680  004D3E  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  4681  004D42  0101               	movlb	1	; () banked
  4682  004D44  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  4683  004D48  0101               	movlb	1	; () banked
  4684  004D4A  1F06               	comf	??___ftge& (0+255),f,b
  4685  004D4C  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4686  004D4E  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4687  004D50  2B06               	incf	??___ftge& (0+255),f,b
  4688  004D52  0E00               	movlw	0
  4689  004D54  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4690  004D56  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4691  004D58  0E00               	movlw	0
  4692  004D5A  0101               	movlb	1	; () banked
  4693  004D5C  2506               	addwf	??___ftge& (0+255),w,b
  4694  004D5E  0101               	movlb	1	; () banked
  4695  004D60  0101               	movlb	1	; () banked
  4696  004D62  6F00               	movwf	___ftge@ff1& (0+255),b
  4697  004D64  0E00               	movlw	0
  4698  004D66  0101               	movlb	1	; () banked
  4699  004D68  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4700  004D6A  0101               	movlb	1	; () banked
  4701  004D6C  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  4702  004D6E  0E80               	movlw	128
  4703  004D70  0101               	movlb	1	; () banked
  4704  004D72  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4705  004D74  0101               	movlb	1	; () banked
  4706  004D76  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  4707  004D78                     l10995:
  4708                           
  4709                           ; BSR set to: 1
  4710  004D78  0101               	movlb	1	; () banked
  4711  004D7A  0101               	movlb	1	; () banked
  4712  004D7C  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  4713  004D7E  D021               	goto	l10999
  4714                           
  4715                           ; BSR set to: 1
  4716  004D80  0101               	movlb	1	; () banked
  4717  004D82  C103  F106         	movff	___ftge@ff2,??___ftge
  4718  004D86  0101               	movlb	1	; () banked
  4719  004D88  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  4720  004D8C  0101               	movlb	1	; () banked
  4721  004D8E  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  4722  004D92  0101               	movlb	1	; () banked
  4723  004D94  1F06               	comf	??___ftge& (0+255),f,b
  4724  004D96  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4725  004D98  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4726  004D9A  2B06               	incf	??___ftge& (0+255),f,b
  4727  004D9C  0E00               	movlw	0
  4728  004D9E  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4729  004DA0  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4730  004DA2  0E00               	movlw	0
  4731  004DA4  0101               	movlb	1	; () banked
  4732  004DA6  2506               	addwf	??___ftge& (0+255),w,b
  4733  004DA8  0101               	movlb	1	; () banked
  4734  004DAA  0101               	movlb	1	; () banked
  4735  004DAC  6F03               	movwf	___ftge@ff2& (0+255),b
  4736  004DAE  0E00               	movlw	0
  4737  004DB0  0101               	movlb	1	; () banked
  4738  004DB2  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4739  004DB4  0101               	movlb	1	; () banked
  4740  004DB6  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  4741  004DB8  0E80               	movlw	128
  4742  004DBA  0101               	movlb	1	; () banked
  4743  004DBC  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4744  004DBE  0101               	movlb	1	; () banked
  4745  004DC0  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  4746  004DC2                     l10999:
  4747                           
  4748                           ; BSR set to: 1
  4749  004DC2  0E00               	movlw	0
  4750  004DC4  0101               	movlb	1	; () banked
  4751  004DC6  0101               	movlb	1	; () banked
  4752  004DC8  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  4753  004DCA  0E00               	movlw	0
  4754  004DCC  0101               	movlb	1	; () banked
  4755  004DCE  0101               	movlb	1	; () banked
  4756  004DD0  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  4757  004DD2  0E80               	movlw	128
  4758  004DD4  0101               	movlb	1	; () banked
  4759  004DD6  0101               	movlb	1	; () banked
  4760  004DD8  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  4761                           
  4762                           ; BSR set to: 1
  4763  004DDA  0E00               	movlw	0
  4764  004DDC  0101               	movlb	1	; () banked
  4765  004DDE  0101               	movlb	1	; () banked
  4766  004DE0  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  4767  004DE2  0E00               	movlw	0
  4768  004DE4  0101               	movlb	1	; () banked
  4769  004DE6  0101               	movlb	1	; () banked
  4770  004DE8  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  4771  004DEA  0E80               	movlw	128
  4772  004DEC  0101               	movlb	1	; () banked
  4773  004DEE  0101               	movlb	1	; () banked
  4774  004DF0  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  4775  004DF2  0101               	movlb	1	; () banked
  4776  004DF4  0101               	movlb	1	; () banked
  4777  004DF6  5103               	movf	___ftge@ff2& (0+255),w,b
  4778  004DF8  0101               	movlb	1	; () banked
  4779  004DFA  0101               	movlb	1	; () banked
  4780  004DFC  5D00               	subwf	___ftge@ff1& (0+255),w,b
  4781  004DFE  0101               	movlb	1	; () banked
  4782  004E00  0101               	movlb	1	; () banked
  4783  004E02  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  4784  004E04  0101               	movlb	1	; () banked
  4785  004E06  0101               	movlb	1	; () banked
  4786  004E08  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  4787  004E0A  0101               	movlb	1	; () banked
  4788  004E0C  0101               	movlb	1	; () banked
  4789  004E0E  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  4790  004E10  0101               	movlb	1	; () banked
  4791  004E12  0101               	movlb	1	; () banked
  4792  004E14  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  4793  004E16  B0D8               	btfsc	status,0,c
  4794  004E18  D002               	goto	l11005
  4795                           
  4796                           ; BSR set to: 1
  4797  004E1A  90D8               	bcf	status,0,c
  4798  004E1C  D001               	goto	l768
  4799  004E1E                     l11005:
  4800                           
  4801                           ; BSR set to: 1
  4802  004E1E  80D8               	bsf	status,0,c
  4803  004E20                     l768:
  4804                           
  4805                           ; BSR set to: 1
  4806  004E20  0012               	return	
  4807  004E22                     __end_of___ftge:
  4808                           	opt stack 0
  4809                           tblptru	equ	0xFF8
  4810                           tblptrh	equ	0xFF7
  4811                           tblptrl	equ	0xFF6
  4812                           tablat	equ	0xFF5
  4813                           prodh	equ	0xFF4
  4814                           prodl	equ	0xFF3
  4815                           postinc0	equ	0xFEE
  4816                           wreg	equ	0xFE8
  4817                           indf2	equ	0xFDF
  4818                           postinc2	equ	0xFDE
  4819                           postdec2	equ	0xFDD
  4820                           fsr2h	equ	0xFDA
  4821                           fsr2l	equ	0xFD9
  4822                           status	equ	0xFD8
  4823                           
  4824 ;; *************** function ___asftsub *****************
  4825 ;; Defined at:
  4826 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  f1p             2   76[BANK1 ] PTR float 
  4829 ;;		 -> sprintf@fval(3), 
  4830 ;;  f2              3   78[BANK1 ] float 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  3   76[BANK1 ] float 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4842 ;;      Params:         0       0       5       0       0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4845 ;;      Totals:         0       0       5       0       0       0       0       0       0
  4846 ;;Total ram usage:        5 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:   12
  4849 ;; This function calls:
  4850 ;;		___ftsub
  4851 ;; This function is called by:
  4852 ;;		_sprintf
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text8
  4857  005EA0                     __ptext8:
  4858                           	opt stack 0
  4859  005EA0                     ___asftsub:
  4860                           	opt stack 17
  4861                           
  4862                           ;	Return value of ___asftsub is never used
  4863                           
  4864                           ; BSR set to: 1
  4865                           ;incstack = 0
  4866                           ;incstack = 0
  4867  005EA0  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  4868  005EA4  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  4869  005EA8  0101               	movlb	1	; () banked
  4870  005EAA  CFDE F146          	movff	postinc2,?___ftsub
  4871  005EAE  0101               	movlb	1	; () banked
  4872  005EB0  CFDE F147          	movff	postinc2,?___ftsub+1
  4873  005EB4  0101               	movlb	1	; () banked
  4874  005EB6  CFDD F148          	movff	postdec2,?___ftsub+2
  4875  005EBA  C14E  F149         	movff	___asftsub@f2,?___ftsub+3
  4876  005EBE  C14F  F14A         	movff	___asftsub@f2+1,?___ftsub+4
  4877  005EC2  C150  F14B         	movff	___asftsub@f2+2,?___ftsub+5
  4878  005EC6  EC71  F02F         	call	___ftsub	;wreg free
  4879  005ECA  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  4880  005ECE  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  4881  005ED2  C146  FFDE         	movff	?___ftsub,postinc2
  4882  005ED6  C147  FFDE         	movff	?___ftsub+1,postinc2
  4883  005EDA  C148  FFDD         	movff	?___ftsub+2,postdec2
  4884  005EDE  52DD               	movf	postdec2,f,c
  4885  005EE0  0012               	return	
  4886  005EE2                     __end_of___asftsub:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           postinc0	equ	0xFEE
  4895                           wreg	equ	0xFE8
  4896                           indf2	equ	0xFDF
  4897                           postinc2	equ	0xFDE
  4898                           postdec2	equ	0xFDD
  4899                           fsr2h	equ	0xFDA
  4900                           fsr2l	equ	0xFD9
  4901                           status	equ	0xFD8
  4902                           
  4903 ;; *************** function ___ftsub *****************
  4904 ;; Defined at:
  4905 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  f1              3   70[BANK1 ] float 
  4908 ;;  f2              3   73[BANK1 ] float 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  3   70[BANK1 ] float 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4920 ;;      Params:         0       0       6       0       0       0       0       0       0
  4921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4923 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4924 ;;Total ram usage:        6 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:   11
  4927 ;; This function calls:
  4928 ;;		___ftadd
  4929 ;; This function is called by:
  4930 ;;		___asftsub
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text9
  4935  005EE2                     __ptext9:
  4936                           	opt stack 0
  4937  005EE2                     ___ftsub:
  4938                           	opt stack 17
  4939                           
  4940                           ;incstack = 0
  4941                           ;incstack = 0
  4942  005EE2  0E00               	movlw	0
  4943  005EE4  0101               	movlb	1	; () banked
  4944  005EE6  0101               	movlb	1	; () banked
  4945  005EE8  1B49               	xorwf	___ftsub@f2& (0+255),f,b
  4946  005EEA  0E00               	movlw	0
  4947  005EEC  0101               	movlb	1	; () banked
  4948  005EEE  0101               	movlb	1	; () banked
  4949  005EF0  1B4A               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  4950  005EF2  0E80               	movlw	128
  4951  005EF4  0101               	movlb	1	; () banked
  4952  005EF6  0101               	movlb	1	; () banked
  4953  005EF8  1B4B               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  4954                           
  4955                           ; BSR set to: 1
  4956  005EFA  C146  F138         	movff	___ftsub@f1,?___ftadd
  4957  005EFE  C147  F139         	movff	___ftsub@f1+1,?___ftadd+1
  4958  005F02  C148  F13A         	movff	___ftsub@f1+2,?___ftadd+2
  4959  005F06  C149  F13B         	movff	___ftsub@f2,?___ftadd+3
  4960  005F0A  C14A  F13C         	movff	___ftsub@f2+1,?___ftadd+4
  4961  005F0E  C14B  F13D         	movff	___ftsub@f2+2,?___ftadd+5
  4962  005F12  ECF3  F018         	call	___ftadd	;wreg free
  4963  005F16  C13A  F148         	movff	?___ftadd+2,?___ftsub+2
  4964  005F1A  C139  F147         	movff	?___ftadd+1,?___ftsub+1
  4965  005F1E  C138  F146         	movff	?___ftadd,?___ftsub
  4966  005F22  0012               	return	
  4967  005F24                     __end_of___ftsub:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           postinc0	equ	0xFEE
  4976                           wreg	equ	0xFE8
  4977                           indf2	equ	0xFDF
  4978                           postinc2	equ	0xFDE
  4979                           postdec2	equ	0xFDD
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function ___asftmul *****************
  4985 ;; Defined at:
  4986 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  f1p             2   39[BANK1 ] PTR float 
  4989 ;;		 -> sprintf@integ(3), 
  4990 ;;  f2              3   41[BANK1 ] float 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  3   39[BANK1 ] float 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5002 ;;      Params:         0       0       5       0       0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5005 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5006 ;;Total ram usage:        5 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:   11
  5009 ;; This function calls:
  5010 ;;		___ftmul
  5011 ;; This function is called by:
  5012 ;;		_sprintf
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text10
  5017  005F24                     __ptext10:
  5018                           	opt stack 0
  5019  005F24                     ___asftmul:
  5020                           	opt stack 18
  5021                           
  5022                           ;	Return value of ___asftmul is never used
  5023                           
  5024                           ;incstack = 0
  5025                           ;incstack = 0
  5026  005F24  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  5027  005F28  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5028  005F2C  0101               	movlb	1	; () banked
  5029  005F2E  CFDE F116          	movff	postinc2,?___ftmul
  5030  005F32  0101               	movlb	1	; () banked
  5031  005F34  CFDE F117          	movff	postinc2,?___ftmul+1
  5032  005F38  0101               	movlb	1	; () banked
  5033  005F3A  CFDD F118          	movff	postdec2,?___ftmul+2
  5034  005F3E  C129  F119         	movff	___asftmul@f2,?___ftmul+3
  5035  005F42  C12A  F11A         	movff	___asftmul@f2+1,?___ftmul+4
  5036  005F46  C12B  F11B         	movff	___asftmul@f2+2,?___ftmul+5
  5037  005F4A  ECE1  F01C         	call	___ftmul	;wreg free
  5038  005F4E  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  5039  005F52  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5040  005F56  C116  FFDE         	movff	?___ftmul,postinc2
  5041  005F5A  C117  FFDE         	movff	?___ftmul+1,postinc2
  5042  005F5E  C118  FFDD         	movff	?___ftmul+2,postdec2
  5043  005F62  52DD               	movf	postdec2,f,c
  5044  005F64  0012               	return	
  5045  005F66                     __end_of___asftmul:
  5046                           	opt stack 0
  5047                           tblptru	equ	0xFF8
  5048                           tblptrh	equ	0xFF7
  5049                           tblptrl	equ	0xFF6
  5050                           tablat	equ	0xFF5
  5051                           prodh	equ	0xFF4
  5052                           prodl	equ	0xFF3
  5053                           postinc0	equ	0xFEE
  5054                           wreg	equ	0xFE8
  5055                           indf2	equ	0xFDF
  5056                           postinc2	equ	0xFDE
  5057                           postdec2	equ	0xFDD
  5058                           fsr2h	equ	0xFDA
  5059                           fsr2l	equ	0xFD9
  5060                           status	equ	0xFD8
  5061                           
  5062 ;; *************** function ___asftadd *****************
  5063 ;; Defined at:
  5064 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  f1p             2   70[BANK1 ] PTR float 
  5067 ;;		 -> sprintf@fval(3), 
  5068 ;;  f2              3   72[BANK1 ] float 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  3   70[BANK1 ] float 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5080 ;;      Params:         0       0       5       0       0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5083 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5084 ;;Total ram usage:        5 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:   11
  5087 ;; This function calls:
  5088 ;;		___ftadd
  5089 ;; This function is called by:
  5090 ;;		_sprintf
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text11
  5095  005F66                     __ptext11:
  5096                           	opt stack 0
  5097  005F66                     ___asftadd:
  5098                           	opt stack 18
  5099                           
  5100                           ;	Return value of ___asftadd is never used
  5101                           
  5102                           ;incstack = 0
  5103                           ;incstack = 0
  5104  005F66  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  5105  005F6A  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5106  005F6E  0101               	movlb	1	; () banked
  5107  005F70  CFDE F138          	movff	postinc2,?___ftadd
  5108  005F74  0101               	movlb	1	; () banked
  5109  005F76  CFDE F139          	movff	postinc2,?___ftadd+1
  5110  005F7A  0101               	movlb	1	; () banked
  5111  005F7C  CFDD F13A          	movff	postdec2,?___ftadd+2
  5112  005F80  C148  F13B         	movff	___asftadd@f2,?___ftadd+3
  5113  005F84  C149  F13C         	movff	___asftadd@f2+1,?___ftadd+4
  5114  005F88  C14A  F13D         	movff	___asftadd@f2+2,?___ftadd+5
  5115  005F8C  ECF3  F018         	call	___ftadd	;wreg free
  5116  005F90  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  5117  005F94  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5118  005F98  C138  FFDE         	movff	?___ftadd,postinc2
  5119  005F9C  C139  FFDE         	movff	?___ftadd+1,postinc2
  5120  005FA0  C13A  FFDD         	movff	?___ftadd+2,postdec2
  5121  005FA4  52DD               	movf	postdec2,f,c
  5122  005FA6  0012               	return	
  5123  005FA8                     __end_of___asftadd:
  5124                           	opt stack 0
  5125                           tblptru	equ	0xFF8
  5126                           tblptrh	equ	0xFF7
  5127                           tblptrl	equ	0xFF6
  5128                           tablat	equ	0xFF5
  5129                           prodh	equ	0xFF4
  5130                           prodl	equ	0xFF3
  5131                           postinc0	equ	0xFEE
  5132                           wreg	equ	0xFE8
  5133                           indf2	equ	0xFDF
  5134                           postinc2	equ	0xFDE
  5135                           postdec2	equ	0xFDD
  5136                           fsr2h	equ	0xFDA
  5137                           fsr2l	equ	0xFD9
  5138                           status	equ	0xFD8
  5139                           
  5140 ;; *************** function __div_to_l_ *****************
  5141 ;; Defined at:
  5142 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  f1              3    0[BANK1 ] float 
  5145 ;;  f2              3    3[BANK1 ] float 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  quot            4    7[BANK1 ] unsigned long 
  5148 ;;  exp1            1   12[BANK1 ] unsigned char 
  5149 ;;  cntr            1   11[BANK1 ] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  4    0[BANK1 ] unsigned long 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5159 ;;      Params:         0       0       6       0       0       0       0       0       0
  5160 ;;      Locals:         0       0       6       0       0       0       0       0       0
  5161 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5162 ;;      Totals:         0       0      13       0       0       0       0       0       0
  5163 ;;Total ram usage:       13 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    9
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_sprintf
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text12
  5174  003BB0                     __ptext12:
  5175                           	opt stack 0
  5176  003BB0                     __div_to_l_:
  5177                           	opt stack 20
  5178                           
  5179                           ;incstack = 0
  5180                           ;incstack = 0
  5181  003BB0  0101               	movlb	1	; () banked
  5182  003BB2  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  5183  003BB4  0101               	movlb	1	; () banked
  5184  003BB6  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  5185  003BB8  0101               	movlb	1	; () banked
  5186  003BBA  0101               	movlb	1	; () banked
  5187  003BBC  6F0C               	movwf	__div_to_l_@exp1& (0+255),b
  5188  003BBE  0101               	movlb	1	; () banked
  5189  003BC0  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  5190  003BC2  D001               	goto	l10619
  5191  003BC4  D0B7               	goto	u9690
  5192  003BC6                     l10619:
  5193                           
  5194                           ; BSR set to: 1
  5195  003BC6  0101               	movlb	1	; () banked
  5196  003BC8  3505               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  5197  003BCA  0101               	movlb	1	; () banked
  5198  003BCC  3506               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  5199  003BCE  0101               	movlb	1	; () banked
  5200  003BD0  0101               	movlb	1	; () banked
  5201  003BD2  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  5202  003BD4  0101               	movlb	1	; () banked
  5203  003BD6  670B               	tstfsz	__div_to_l_@cntr& (0+255),b
  5204  003BD8  D001               	goto	l10625
  5205  003BDA  D0AC               	goto	u9690
  5206  003BDC                     l10625:
  5207                           
  5208                           ; BSR set to: 1
  5209  003BDC  0101               	movlb	1	; () banked
  5210  003BDE  0101               	movlb	1	; () banked
  5211  003BE0  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  5212                           
  5213                           ; BSR set to: 1
  5214  003BE2  0EFF               	movlw	255
  5215  003BE4  0101               	movlb	1	; () banked
  5216  003BE6  0101               	movlb	1	; () banked
  5217  003BE8  1700               	andwf	__div_to_l_@f1& (0+255),f,b
  5218  003BEA  0EFF               	movlw	255
  5219  003BEC  0101               	movlb	1	; () banked
  5220  003BEE  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  5221  003BF0  0EFF               	movlw	255
  5222  003BF2  0101               	movlb	1	; () banked
  5223  003BF4  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  5224  003BF6  0E00               	movlw	0
  5225  003BF8  0101               	movlb	1	; () banked
  5226  003BFA  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  5227                           
  5228                           ; BSR set to: 1
  5229  003BFC  0101               	movlb	1	; () banked
  5230  003BFE  0101               	movlb	1	; () banked
  5231  003C00  8F05               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  5232  003C02  0EFF               	movlw	255
  5233  003C04  0101               	movlb	1	; () banked
  5234  003C06  0101               	movlb	1	; () banked
  5235  003C08  1703               	andwf	__div_to_l_@f2& (0+255),f,b
  5236  003C0A  0EFF               	movlw	255
  5237  003C0C  0101               	movlb	1	; () banked
  5238  003C0E  1704               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  5239  003C10  0EFF               	movlw	255
  5240  003C12  0101               	movlb	1	; () banked
  5241  003C14  1705               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  5242  003C16  0E00               	movlw	0
  5243  003C18  0101               	movlb	1	; () banked
  5244  003C1A  1706               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  5245                           
  5246                           ; BSR set to: 1
  5247  003C1C  0E00               	movlw	0
  5248  003C1E  0101               	movlb	1	; () banked
  5249  003C20  0101               	movlb	1	; () banked
  5250  003C22  6F07               	movwf	__div_to_l_@quot& (0+255),b
  5251  003C24  0E00               	movlw	0
  5252  003C26  0101               	movlb	1	; () banked
  5253  003C28  6F08               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5254  003C2A  0E00               	movlw	0
  5255  003C2C  0101               	movlb	1	; () banked
  5256  003C2E  6F09               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5257  003C30  0E00               	movlw	0
  5258  003C32  0101               	movlb	1	; () banked
  5259  003C34  6F0A               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5260                           
  5261                           ; BSR set to: 1
  5262  003C36  0E7F               	movlw	127
  5263  003C38  0101               	movlb	1	; () banked
  5264  003C3A  0101               	movlb	1	; () banked
  5265  003C3C  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  5266                           
  5267                           ; BSR set to: 1
  5268  003C3E  0101               	movlb	1	; () banked
  5269  003C40  0101               	movlb	1	; () banked
  5270  003C42  510B               	movf	__div_to_l_@cntr& (0+255),w,b
  5271  003C44  0FA0               	addlw	160
  5272  003C46  0101               	movlb	1	; () banked
  5273  003C48  0101               	movlb	1	; () banked
  5274  003C4A  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  5275                           
  5276                           ; BSR set to: 1
  5277  003C4C  0101               	movlb	1	; () banked
  5278  003C4E  6F06               	movwf	??__div_to_l_& (0+255),b
  5279  003C50  0E20               	movlw	32
  5280  003C52  0101               	movlb	1	; () banked
  5281  003C54  0101               	movlb	1	; () banked
  5282  003C56  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  5283  003C58  0101               	movlb	1	; () banked
  5284  003C5A  5106               	movf	??__div_to_l_& (0+255),w,b
  5285  003C5C                     l634:
  5286                           
  5287                           ; BSR set to: 1
  5288  003C5C  0101               	movlb	1	; () banked
  5289  003C5E  90D8               	bcf	status,0,c
  5290  003C60  0101               	movlb	1	; () banked
  5291  003C62  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  5292  003C64  0101               	movlb	1	; () banked
  5293  003C66  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5294  003C68  0101               	movlb	1	; () banked
  5295  003C6A  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5296  003C6C  0101               	movlb	1	; () banked
  5297  003C6E  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5298                           
  5299                           ; BSR set to: 1
  5300  003C70  0101               	movlb	1	; () banked
  5301  003C72  0101               	movlb	1	; () banked
  5302  003C74  5103               	movf	__div_to_l_@f2& (0+255),w,b
  5303  003C76  0101               	movlb	1	; () banked
  5304  003C78  0101               	movlb	1	; () banked
  5305  003C7A  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
  5306  003C7C  0101               	movlb	1	; () banked
  5307  003C7E  0101               	movlb	1	; () banked
  5308  003C80  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5309  003C82  0101               	movlb	1	; () banked
  5310  003C84  0101               	movlb	1	; () banked
  5311  003C86  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  5312  003C88  0101               	movlb	1	; () banked
  5313  003C8A  0101               	movlb	1	; () banked
  5314  003C8C  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5315  003C8E  0101               	movlb	1	; () banked
  5316  003C90  0101               	movlb	1	; () banked
  5317  003C92  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  5318  003C94  0101               	movlb	1	; () banked
  5319  003C96  0101               	movlb	1	; () banked
  5320  003C98  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5321  003C9A  0101               	movlb	1	; () banked
  5322  003C9C  0101               	movlb	1	; () banked
  5323  003C9E  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  5324  003CA0  A0D8               	btfss	status,0,c
  5325  003CA2  D01B               	goto	l10645
  5326                           
  5327                           ; BSR set to: 1
  5328  003CA4  0101               	movlb	1	; () banked
  5329  003CA6  0101               	movlb	1	; () banked
  5330  003CA8  5103               	movf	__div_to_l_@f2& (0+255),w,b
  5331  003CAA  0101               	movlb	1	; () banked
  5332  003CAC  0101               	movlb	1	; () banked
  5333  003CAE  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
  5334  003CB0  0101               	movlb	1	; () banked
  5335  003CB2  0101               	movlb	1	; () banked
  5336  003CB4  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5337  003CB6  0101               	movlb	1	; () banked
  5338  003CB8  0101               	movlb	1	; () banked
  5339  003CBA  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  5340  003CBC  0101               	movlb	1	; () banked
  5341  003CBE  0101               	movlb	1	; () banked
  5342  003CC0  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5343  003CC2  0101               	movlb	1	; () banked
  5344  003CC4  0101               	movlb	1	; () banked
  5345  003CC6  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  5346  003CC8  0101               	movlb	1	; () banked
  5347  003CCA  0101               	movlb	1	; () banked
  5348  003CCC  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5349  003CCE  0101               	movlb	1	; () banked
  5350  003CD0  0101               	movlb	1	; () banked
  5351  003CD2  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  5352                           
  5353                           ; BSR set to: 1
  5354  003CD4  0101               	movlb	1	; () banked
  5355  003CD6  0101               	movlb	1	; () banked
  5356  003CD8  8107               	bsf	__div_to_l_@quot& (0+255),0,b
  5357  003CDA                     l10645:
  5358                           
  5359                           ; BSR set to: 1
  5360  003CDA  0101               	movlb	1	; () banked
  5361  003CDC  90D8               	bcf	status,0,c
  5362  003CDE  0101               	movlb	1	; () banked
  5363  003CE0  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
  5364  003CE2  0101               	movlb	1	; () banked
  5365  003CE4  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  5366  003CE6  0101               	movlb	1	; () banked
  5367  003CE8  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  5368  003CEA  0101               	movlb	1	; () banked
  5369  003CEC  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  5370                           
  5371                           ; BSR set to: 1
  5372  003CEE  0101               	movlb	1	; () banked
  5373  003CF0  0101               	movlb	1	; () banked
  5374  003CF2  2F0B               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5375  003CF4  D7B3               	goto	l634
  5376                           
  5377                           ; BSR set to: 1
  5378  003CF6  0101               	movlb	1	; () banked
  5379  003CF8  0101               	movlb	1	; () banked
  5380  003CFA  AF0C               	btfss	__div_to_l_@exp1& (0+255),7,b
  5381  003CFC  D016               	goto	l10659
  5382                           
  5383                           ; BSR set to: 1
  5384  003CFE  0101               	movlb	1	; () banked
  5385  003D00  0101               	movlb	1	; () banked
  5386  003D02  510C               	movf	__div_to_l_@exp1& (0+255),w,b
  5387  003D04  0A80               	xorlw	128
  5388  003D06  0F9F               	addlw	159
  5389  003D08  A0D8               	btfss	status,0,c
  5390  003D0A  D014               	goto	u9690
  5391  003D0C                     l10655:
  5392                           
  5393                           ; BSR set to: 1
  5394  003D0C  0101               	movlb	1	; () banked
  5395  003D0E  90D8               	bcf	status,0,c
  5396  003D10  0101               	movlb	1	; () banked
  5397  003D12  330A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5398  003D14  0101               	movlb	1	; () banked
  5399  003D16  3309               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5400  003D18  0101               	movlb	1	; () banked
  5401  003D1A  3308               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5402  003D1C  0101               	movlb	1	; () banked
  5403  003D1E  3307               	rrcf	__div_to_l_@quot& (0+255),f,b
  5404                           
  5405                           ; BSR set to: 1
  5406  003D20  0101               	movlb	1	; () banked
  5407  003D22  0101               	movlb	1	; () banked
  5408  003D24  3F0C               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5409  003D26  D7F2               	goto	l10655
  5410  003D28  D024               	goto	l641
  5411  003D2A                     l10659:
  5412                           
  5413                           ; BSR set to: 1
  5414  003D2A  0E1F               	movlw	31
  5415  003D2C  0101               	movlb	1	; () banked
  5416  003D2E  0101               	movlb	1	; () banked
  5417  003D30  650C               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5418  003D32  D01B               	goto	l10667
  5419  003D34                     u9690:
  5420                           
  5421                           ; BSR set to: 1
  5422  003D34  0E00               	movlw	0
  5423  003D36  0101               	movlb	1	; () banked
  5424  003D38  0101               	movlb	1	; () banked
  5425  003D3A  6F00               	movwf	?__div_to_l_& (0+255),b
  5426  003D3C  0E00               	movlw	0
  5427  003D3E  0101               	movlb	1	; () banked
  5428  003D40  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
  5429  003D42  0E00               	movlw	0
  5430  003D44  0101               	movlb	1	; () banked
  5431  003D46  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
  5432  003D48  0E00               	movlw	0
  5433  003D4A  0101               	movlb	1	; () banked
  5434  003D4C  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
  5435  003D4E  D019               	goto	l632
  5436  003D50                     l10665:
  5437                           
  5438                           ; BSR set to: 1
  5439  003D50  0101               	movlb	1	; () banked
  5440  003D52  90D8               	bcf	status,0,c
  5441  003D54  0101               	movlb	1	; () banked
  5442  003D56  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  5443  003D58  0101               	movlb	1	; () banked
  5444  003D5A  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5445  003D5C  0101               	movlb	1	; () banked
  5446  003D5E  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5447  003D60  0101               	movlb	1	; () banked
  5448  003D62  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5449  003D64  0101               	movlb	1	; () banked
  5450  003D66  0101               	movlb	1	; () banked
  5451  003D68  070C               	decf	__div_to_l_@exp1& (0+255),f,b
  5452  003D6A                     l10667:
  5453                           
  5454                           ; BSR set to: 1
  5455  003D6A  0101               	movlb	1	; () banked
  5456  003D6C  0101               	movlb	1	; () banked
  5457  003D6E  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  5458  003D70  D7EF               	goto	l10665
  5459  003D72                     l641:
  5460                           
  5461                           ; BSR set to: 1
  5462  003D72  C107  F100         	movff	__div_to_l_@quot,?__div_to_l_
  5463  003D76  C108  F101         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5464  003D7A  C109  F102         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5465  003D7E  C10A  F103         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5466  003D82                     l632:
  5467                           
  5468                           ; BSR set to: 1
  5469  003D82  0012               	return	
  5470  003D84                     __end_of__div_to_l_:
  5471                           	opt stack 0
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           postinc0	equ	0xFEE
  5479                           wreg	equ	0xFE8
  5480                           indf2	equ	0xFDF
  5481                           postinc2	equ	0xFDE
  5482                           postdec2	equ	0xFDD
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function __tdiv_to_l_ *****************
  5488 ;; Defined at:
  5489 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  f1              3    0[BANK1 ] float 
  5492 ;;  f2              3    3[BANK1 ] float 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  quot            4   11[BANK1 ] unsigned long 
  5495 ;;  exp1            1   16[BANK1 ] unsigned char 
  5496 ;;  cntr            1   15[BANK1 ] unsigned char 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  4    0[BANK1 ] unsigned long 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5506 ;;      Params:         0       0       6       0       0       0       0       0       0
  5507 ;;      Locals:         0       0       6       0       0       0       0       0       0
  5508 ;;      Temps:          0       0       5       0       0       0       0       0       0
  5509 ;;      Totals:         0       0      17       0       0       0       0       0       0
  5510 ;;Total ram usage:       17 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    9
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_sprintf
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text13
  5521  0037B2                     __ptext13:
  5522                           	opt stack 0
  5523  0037B2                     __tdiv_to_l_:
  5524                           	opt stack 20
  5525                           
  5526                           ; BSR set to: 1
  5527                           ;incstack = 0
  5528                           ;incstack = 0
  5529  0037B2  0E0F               	movlw	15
  5530  0037B4  0101               	movlb	1	; () banked
  5531  0037B6  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5532  0037B8  0101               	movlb	1	; () banked
  5533  0037BA  C100  F107         	movff	__tdiv_to_l_@f1,??__tdiv_to_l_+1
  5534  0037BE  0101               	movlb	1	; () banked
  5535  0037C0  C101  F108         	movff	__tdiv_to_l_@f1+1,??__tdiv_to_l_+2
  5536  0037C4  0101               	movlb	1	; () banked
  5537  0037C6  C102  F109         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_+3
  5538  0037CA  0101               	movlb	1	; () banked
  5539  0037CC  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  5540  0037CE  0101               	movlb	1	; () banked
  5541  0037D0  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  5542  0037D2  D005               	goto	u9550
  5543  0037D4                     u9555:
  5544  0037D4  0101               	movlb	1	; () banked
  5545  0037D6  90D8               	bcf	status,0,c
  5546  0037D8  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  5547  0037DA  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  5548  0037DC  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  5549  0037DE                     u9550:
  5550  0037DE  0101               	movlb	1	; () banked
  5551  0037E0  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  5552  0037E2  D7F8               	goto	u9555
  5553  0037E4  0101               	movlb	1	; () banked
  5554  0037E6  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  5555  0037E8  0101               	movlb	1	; () banked
  5556  0037EA  0101               	movlb	1	; () banked
  5557  0037EC  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5558  0037EE  0101               	movlb	1	; () banked
  5559  0037F0  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5560  0037F2  D001               	goto	l10563
  5561  0037F4  D0BE               	goto	u9620
  5562  0037F6                     l10563:
  5563                           
  5564                           ; BSR set to: 1
  5565  0037F6  0E0F               	movlw	15
  5566  0037F8  0101               	movlb	1	; () banked
  5567  0037FA  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5568  0037FC  0101               	movlb	1	; () banked
  5569  0037FE  C103  F107         	movff	__tdiv_to_l_@f2,??__tdiv_to_l_+1
  5570  003802  0101               	movlb	1	; () banked
  5571  003804  C104  F108         	movff	__tdiv_to_l_@f2+1,??__tdiv_to_l_+2
  5572  003808  0101               	movlb	1	; () banked
  5573  00380A  C105  F109         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_+3
  5574  00380E  0101               	movlb	1	; () banked
  5575  003810  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  5576  003812  0101               	movlb	1	; () banked
  5577  003814  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  5578  003816  D005               	goto	u9570
  5579  003818                     u9575:
  5580  003818  0101               	movlb	1	; () banked
  5581  00381A  90D8               	bcf	status,0,c
  5582  00381C  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  5583  00381E  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  5584  003820  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  5585  003822                     u9570:
  5586  003822  0101               	movlb	1	; () banked
  5587  003824  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  5588  003826  D7F8               	goto	u9575
  5589  003828  0101               	movlb	1	; () banked
  5590  00382A  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  5591  00382C  0101               	movlb	1	; () banked
  5592  00382E  0101               	movlb	1	; () banked
  5593  003830  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5594  003832  0101               	movlb	1	; () banked
  5595  003834  670F               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  5596  003836  D001               	goto	l10569
  5597  003838  D09C               	goto	u9620
  5598  00383A                     l10569:
  5599                           
  5600                           ; BSR set to: 1
  5601  00383A  0101               	movlb	1	; () banked
  5602  00383C  0101               	movlb	1	; () banked
  5603  00383E  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  5604                           
  5605                           ; BSR set to: 1
  5606  003840  0EFF               	movlw	255
  5607  003842  0101               	movlb	1	; () banked
  5608  003844  0101               	movlb	1	; () banked
  5609  003846  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  5610  003848  0EFF               	movlw	255
  5611  00384A  0101               	movlb	1	; () banked
  5612  00384C  0101               	movlb	1	; () banked
  5613  00384E  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5614  003850  0E00               	movlw	0
  5615  003852  0101               	movlb	1	; () banked
  5616  003854  0101               	movlb	1	; () banked
  5617  003856  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5618  003858  0101               	movlb	1	; () banked
  5619  00385A  0101               	movlb	1	; () banked
  5620  00385C  8F04               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  5621                           
  5622                           ; BSR set to: 1
  5623  00385E  0EFF               	movlw	255
  5624  003860  0101               	movlb	1	; () banked
  5625  003862  0101               	movlb	1	; () banked
  5626  003864  1703               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  5627  003866  0EFF               	movlw	255
  5628  003868  0101               	movlb	1	; () banked
  5629  00386A  0101               	movlb	1	; () banked
  5630  00386C  1704               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  5631  00386E  0E00               	movlw	0
  5632  003870  0101               	movlb	1	; () banked
  5633  003872  0101               	movlb	1	; () banked
  5634  003874  1705               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  5635                           
  5636                           ; BSR set to: 1
  5637  003876  0E00               	movlw	0
  5638  003878  0101               	movlb	1	; () banked
  5639  00387A  0101               	movlb	1	; () banked
  5640  00387C  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
  5641  00387E  0E00               	movlw	0
  5642  003880  0101               	movlb	1	; () banked
  5643  003882  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5644  003884  0E00               	movlw	0
  5645  003886  0101               	movlb	1	; () banked
  5646  003888  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5647  00388A  0E00               	movlw	0
  5648  00388C  0101               	movlb	1	; () banked
  5649  00388E  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5650                           
  5651                           ; BSR set to: 1
  5652  003890  0E7F               	movlw	127
  5653  003892  0101               	movlb	1	; () banked
  5654  003894  0101               	movlb	1	; () banked
  5655  003896  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5656                           
  5657                           ; BSR set to: 1
  5658  003898  0101               	movlb	1	; () banked
  5659  00389A  0101               	movlb	1	; () banked
  5660  00389C  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5661  00389E  0F98               	addlw	152
  5662  0038A0  0101               	movlb	1	; () banked
  5663  0038A2  0101               	movlb	1	; () banked
  5664  0038A4  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5665                           
  5666                           ; BSR set to: 1
  5667  0038A6  0101               	movlb	1	; () banked
  5668  0038A8  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5669  0038AA  0E18               	movlw	24
  5670  0038AC  0101               	movlb	1	; () banked
  5671  0038AE  0101               	movlb	1	; () banked
  5672  0038B0  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5673  0038B2  0101               	movlb	1	; () banked
  5674  0038B4  5106               	movf	??__tdiv_to_l_& (0+255),w,b
  5675  0038B6                     l10583:
  5676                           
  5677                           ; BSR set to: 1
  5678  0038B6  0101               	movlb	1	; () banked
  5679  0038B8  90D8               	bcf	status,0,c
  5680  0038BA  0101               	movlb	1	; () banked
  5681  0038BC  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5682  0038BE  0101               	movlb	1	; () banked
  5683  0038C0  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5684  0038C2  0101               	movlb	1	; () banked
  5685  0038C4  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5686  0038C6  0101               	movlb	1	; () banked
  5687  0038C8  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5688                           
  5689                           ; BSR set to: 1
  5690  0038CA  0101               	movlb	1	; () banked
  5691  0038CC  0101               	movlb	1	; () banked
  5692  0038CE  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5693  0038D0  0101               	movlb	1	; () banked
  5694  0038D2  0101               	movlb	1	; () banked
  5695  0038D4  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  5696  0038D6  0101               	movlb	1	; () banked
  5697  0038D8  0101               	movlb	1	; () banked
  5698  0038DA  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5699  0038DC  0101               	movlb	1	; () banked
  5700  0038DE  0101               	movlb	1	; () banked
  5701  0038E0  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5702  0038E2  0101               	movlb	1	; () banked
  5703  0038E4  0101               	movlb	1	; () banked
  5704  0038E6  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5705  0038E8  0101               	movlb	1	; () banked
  5706  0038EA  0101               	movlb	1	; () banked
  5707  0038EC  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  5708  0038EE  A0D8               	btfss	status,0,c
  5709  0038F0  D015               	goto	l753
  5710                           
  5711                           ; BSR set to: 1
  5712  0038F2  0101               	movlb	1	; () banked
  5713  0038F4  0101               	movlb	1	; () banked
  5714  0038F6  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5715  0038F8  0101               	movlb	1	; () banked
  5716  0038FA  0101               	movlb	1	; () banked
  5717  0038FC  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  5718  0038FE  0101               	movlb	1	; () banked
  5719  003900  0101               	movlb	1	; () banked
  5720  003902  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5721  003904  0101               	movlb	1	; () banked
  5722  003906  0101               	movlb	1	; () banked
  5723  003908  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5724  00390A  0101               	movlb	1	; () banked
  5725  00390C  0101               	movlb	1	; () banked
  5726  00390E  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5727  003910  0101               	movlb	1	; () banked
  5728  003912  0101               	movlb	1	; () banked
  5729  003914  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5730                           
  5731                           ; BSR set to: 1
  5732  003916  0101               	movlb	1	; () banked
  5733  003918  0101               	movlb	1	; () banked
  5734  00391A  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5735  00391C                     l753:
  5736                           
  5737                           ; BSR set to: 1
  5738  00391C  0101               	movlb	1	; () banked
  5739  00391E  90D8               	bcf	status,0,c
  5740  003920  0101               	movlb	1	; () banked
  5741  003922  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  5742  003924  0101               	movlb	1	; () banked
  5743  003926  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5744  003928  0101               	movlb	1	; () banked
  5745  00392A  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5746                           
  5747                           ; BSR set to: 1
  5748  00392C  0101               	movlb	1	; () banked
  5749  00392E  0101               	movlb	1	; () banked
  5750  003930  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5751  003932  D7C1               	goto	l10583
  5752                           
  5753                           ; BSR set to: 1
  5754  003934  0101               	movlb	1	; () banked
  5755  003936  0101               	movlb	1	; () banked
  5756  003938  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5757  00393A  D016               	goto	l10603
  5758                           
  5759                           ; BSR set to: 1
  5760  00393C  0101               	movlb	1	; () banked
  5761  00393E  0101               	movlb	1	; () banked
  5762  003940  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5763  003942  0A80               	xorlw	128
  5764  003944  0F97               	addlw	151
  5765  003946  A0D8               	btfss	status,0,c
  5766  003948  D014               	goto	u9620
  5767  00394A                     l10599:
  5768                           
  5769                           ; BSR set to: 1
  5770  00394A  0101               	movlb	1	; () banked
  5771  00394C  90D8               	bcf	status,0,c
  5772  00394E  0101               	movlb	1	; () banked
  5773  003950  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5774  003952  0101               	movlb	1	; () banked
  5775  003954  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5776  003956  0101               	movlb	1	; () banked
  5777  003958  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5778  00395A  0101               	movlb	1	; () banked
  5779  00395C  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5780                           
  5781                           ; BSR set to: 1
  5782  00395E  0101               	movlb	1	; () banked
  5783  003960  0101               	movlb	1	; () banked
  5784  003962  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5785  003964  D7F2               	goto	l10599
  5786  003966  D024               	goto	l759
  5787  003968                     l10603:
  5788                           
  5789                           ; BSR set to: 1
  5790  003968  0E17               	movlw	23
  5791  00396A  0101               	movlb	1	; () banked
  5792  00396C  0101               	movlb	1	; () banked
  5793  00396E  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5794  003970  D01B               	goto	l10611
  5795  003972                     u9620:
  5796                           
  5797                           ; BSR set to: 1
  5798  003972  0E00               	movlw	0
  5799  003974  0101               	movlb	1	; () banked
  5800  003976  0101               	movlb	1	; () banked
  5801  003978  6F00               	movwf	?__tdiv_to_l_& (0+255),b
  5802  00397A  0E00               	movlw	0
  5803  00397C  0101               	movlb	1	; () banked
  5804  00397E  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5805  003980  0E00               	movlw	0
  5806  003982  0101               	movlb	1	; () banked
  5807  003984  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5808  003986  0E00               	movlw	0
  5809  003988  0101               	movlb	1	; () banked
  5810  00398A  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5811  00398C  D019               	goto	l750
  5812  00398E                     l10609:
  5813                           
  5814                           ; BSR set to: 1
  5815  00398E  0101               	movlb	1	; () banked
  5816  003990  90D8               	bcf	status,0,c
  5817  003992  0101               	movlb	1	; () banked
  5818  003994  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5819  003996  0101               	movlb	1	; () banked
  5820  003998  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5821  00399A  0101               	movlb	1	; () banked
  5822  00399C  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5823  00399E  0101               	movlb	1	; () banked
  5824  0039A0  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5825  0039A2  0101               	movlb	1	; () banked
  5826  0039A4  0101               	movlb	1	; () banked
  5827  0039A6  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5828  0039A8                     l10611:
  5829                           
  5830                           ; BSR set to: 1
  5831  0039A8  0101               	movlb	1	; () banked
  5832  0039AA  0101               	movlb	1	; () banked
  5833  0039AC  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5834  0039AE  D7EF               	goto	l10609
  5835  0039B0                     l759:
  5836                           
  5837                           ; BSR set to: 1
  5838  0039B0  C10B  F100         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5839  0039B4  C10C  F101         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5840  0039B8  C10D  F102         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5841  0039BC  C10E  F103         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5842  0039C0                     l750:
  5843                           
  5844                           ; BSR set to: 1
  5845  0039C0  0012               	return	
  5846  0039C2                     __end_of__tdiv_to_l_:
  5847                           	opt stack 0
  5848                           tblptru	equ	0xFF8
  5849                           tblptrh	equ	0xFF7
  5850                           tblptrl	equ	0xFF6
  5851                           tablat	equ	0xFF5
  5852                           prodh	equ	0xFF4
  5853                           prodl	equ	0xFF3
  5854                           postinc0	equ	0xFEE
  5855                           wreg	equ	0xFE8
  5856                           indf2	equ	0xFDF
  5857                           postinc2	equ	0xFDE
  5858                           postdec2	equ	0xFDD
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function _isdigit *****************
  5864 ;; Defined at:
  5865 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  c               1    0[BANK1 ] unsigned char 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;		None
  5870 ;; Return value:  Size  Location     Type
  5871 ;;		None               void
  5872 ;; Registers used:
  5873 ;;		wreg, status,2, status,0
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5879 ;;      Params:         0       0       1       0       0       0       0       0       0
  5880 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5881 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5882 ;;      Totals:         0       0       3       0       0       0       0       0       0
  5883 ;;Total ram usage:        3 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:    9
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_sprintf
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text14
  5894  005FA8                     __ptext14:
  5895                           	opt stack 0
  5896  005FA8                     _isdigit:
  5897                           	opt stack 20
  5898                           
  5899                           ; BSR set to: 1
  5900                           ;incstack = 0
  5901                           ;incstack = 0
  5902  005FA8  0101               	movlb	1	; () banked
  5903  005FAA  6F01               	movwf	??_isdigit& (0+255),b
  5904  005FAC  0E00               	movlw	0
  5905  005FAE  0101               	movlb	1	; () banked
  5906  005FB0  0101               	movlb	1	; () banked
  5907  005FB2  6F02               	movwf	_isdigit$838& (0+255),b
  5908  005FB4  0101               	movlb	1	; () banked
  5909  005FB6  5101               	movf	??_isdigit& (0+255),w,b
  5910                           
  5911                           ; BSR set to: 1
  5912  005FB8  0E3A               	movlw	58
  5913  005FBA  0101               	movlb	1	; () banked
  5914  005FBC  0101               	movlb	1	; () banked
  5915  005FBE  6100               	cpfslt	isdigit@c& (0+255),b
  5916  005FC0  D00D               	goto	l10553
  5917                           
  5918                           ; BSR set to: 1
  5919  005FC2  0E2F               	movlw	47
  5920  005FC4  0101               	movlb	1	; () banked
  5921  005FC6  0101               	movlb	1	; () banked
  5922  005FC8  6500               	cpfsgt	isdigit@c& (0+255),b
  5923  005FCA  D008               	goto	l10553
  5924                           
  5925                           ; BSR set to: 1
  5926  005FCC  0101               	movlb	1	; () banked
  5927  005FCE  6F01               	movwf	??_isdigit& (0+255),b
  5928  005FD0  0E01               	movlw	1
  5929  005FD2  0101               	movlb	1	; () banked
  5930  005FD4  0101               	movlb	1	; () banked
  5931  005FD6  6F02               	movwf	_isdigit$838& (0+255),b
  5932  005FD8  0101               	movlb	1	; () banked
  5933  005FDA  5101               	movf	??_isdigit& (0+255),w,b
  5934  005FDC                     l10553:
  5935                           
  5936                           ; BSR set to: 1
  5937  005FDC  C102  F101         	movff	_isdigit$838,??_isdigit
  5938  005FE0  0101               	movlb	1	; () banked
  5939  005FE2  3101               	rrcf	??_isdigit& (0+255),w,b
  5940                           
  5941                           ; BSR set to: 1
  5942                           
  5943                           ; BSR set to: 1
  5944  005FE4  0012               	return	
  5945  005FE6                     __end_of_isdigit:
  5946                           	opt stack 0
  5947                           tblptru	equ	0xFF8
  5948                           tblptrh	equ	0xFF7
  5949                           tblptrl	equ	0xFF6
  5950                           tablat	equ	0xFF5
  5951                           prodh	equ	0xFF4
  5952                           prodl	equ	0xFF3
  5953                           postinc0	equ	0xFEE
  5954                           wreg	equ	0xFE8
  5955                           indf2	equ	0xFDF
  5956                           postinc2	equ	0xFDE
  5957                           postdec2	equ	0xFDD
  5958                           fsr2h	equ	0xFDA
  5959                           fsr2l	equ	0xFD9
  5960                           status	equ	0xFD8
  5961                           
  5962 ;; *************** function _scale *****************
  5963 ;; Defined at:
  5964 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  scl             1   39[BANK1 ] char 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  3   39[BANK1 ] char 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5978 ;;      Params:         0       0       3       0       0       0       0       0       0
  5979 ;;      Locals:         0       0       3       0       0       0       0       0       0
  5980 ;;      Temps:          0       0       6       0       0       0       0       0       0
  5981 ;;      Totals:         0       0      12       0       0       0       0       0       0
  5982 ;;Total ram usage:       12 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:   11
  5985 ;; This function calls:
  5986 ;;		___ftmul
  5987 ;;		___awdiv
  5988 ;;		___awmod
  5989 ;;		___wmul
  5990 ;; This function is called by:
  5991 ;;		_sprintf
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text15
  5996  002414                     __ptext15:
  5997                           	opt stack 0
  5998  002414                     _scale:
  5999                           	opt stack 18
  6000                           
  6001                           ;doprnt.c: 428: if(scl < 0) {
  6002                           
  6003                           ; BSR set to: 1
  6004                           ;incstack = 0
  6005                           ;incstack = 0
  6006  002414  0101               	movlb	1	; () banked
  6007  002416  0101               	movlb	1	; () banked
  6008  002418  AF27               	btfss	scale@scl& (0+255),7,b
  6009  00241A  D179               	goto	l10527
  6010                           
  6011                           ; BSR set to: 1
  6012                           ;doprnt.c: 429: scl = -scl;
  6013  00241C  0101               	movlb	1	; () banked
  6014  00241E  0101               	movlb	1	; () banked
  6015  002420  6D27               	negf	scale@scl& (0+255),b
  6016                           
  6017                           ; BSR set to: 1
  6018                           ;doprnt.c: 430: if(scl>=110)
  6019  002422  0101               	movlb	1	; () banked
  6020  002424  0101               	movlb	1	; () banked
  6021  002426  5127               	movf	scale@scl& (0+255),w,b
  6022  002428  0A80               	xorlw	128
  6023  00242A  0F12               	addlw	-238
  6024  00242C  A0D8               	btfss	status,0,c
  6025  00242E  D0DF               	goto	l10517
  6026                           
  6027                           ; BSR set to: 1
  6028                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6029  002430  0E00               	movlw	0
  6030  002432  0101               	movlb	1	; () banked
  6031  002434  0101               	movlb	1	; () banked
  6032  002436  6F13               	movwf	(?___wmul+3)& (0+255),b
  6033  002438  0E03               	movlw	3
  6034  00243A  0101               	movlb	1	; () banked
  6035  00243C  6F12               	movwf	(?___wmul+2)& (0+255),b
  6036  00243E  0E00               	movlw	0
  6037  002440  0101               	movlb	1	; () banked
  6038  002442  0101               	movlb	1	; () banked
  6039  002444  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6040  002446  0E0A               	movlw	10
  6041  002448  0101               	movlb	1	; () banked
  6042  00244A  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6043  00244C  0E00               	movlw	0
  6044  00244E  0101               	movlb	1	; () banked
  6045  002450  0101               	movlb	1	; () banked
  6046  002452  6F03               	movwf	(?___awmod+3)& (0+255),b
  6047  002454  0E64               	movlw	100
  6048  002456  0101               	movlb	1	; () banked
  6049  002458  6F02               	movwf	(?___awmod+2)& (0+255),b
  6050  00245A  0101               	movlb	1	; () banked
  6051  00245C  0101               	movlb	1	; () banked
  6052  00245E  5127               	movf	scale@scl& (0+255),w,b
  6053  002460  0101               	movlb	1	; () banked
  6054  002462  0101               	movlb	1	; () banked
  6055  002464  6F00               	movwf	?___awmod& (0+255),b
  6056  002466  0101               	movlb	1	; () banked
  6057  002468  6B01               	clrf	(?___awmod+1)& (0+255),b
  6058  00246A  0101               	movlb	1	; () banked
  6059  00246C  BF00               	btfsc	?___awmod& (0+255),7,b
  6060  00246E  0701               	decf	(?___awmod+1)& (0+255),f,b
  6061  002470  EC03  F028         	call	___awmod	;wreg free
  6062  002474  0101               	movlb	1	; () banked
  6063  002476  C100  F107         	movff	?___awmod,?___awdiv
  6064  00247A  0101               	movlb	1	; () banked
  6065  00247C  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6066  002480  EC6E  F023         	call	___awdiv	;wreg free
  6067  002484  0E09               	movlw	9
  6068  002486  0101               	movlb	1	; () banked
  6069  002488  0101               	movlb	1	; () banked
  6070  00248A  2507               	addwf	?___awdiv& (0+255),w,b
  6071  00248C  0101               	movlb	1	; () banked
  6072  00248E  0101               	movlb	1	; () banked
  6073  002490  6F10               	movwf	?___wmul& (0+255),b
  6074  002492  0E00               	movlw	0
  6075  002494  0101               	movlb	1	; () banked
  6076  002496  0101               	movlb	1	; () banked
  6077  002498  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6078  00249A  0101               	movlb	1	; () banked
  6079  00249C  6F11               	movwf	(?___wmul+1)& (0+255),b
  6080  00249E  EC5B  F02E         	call	___wmul	;wreg free
  6081  0024A2  0E28               	movlw	low __npowers_
  6082  0024A4  0101               	movlb	1	; () banked
  6083  0024A6  0101               	movlb	1	; () banked
  6084  0024A8  2510               	addwf	?___wmul& (0+255),w,b
  6085  0024AA  6EF6               	movwf	tblptrl,c
  6086  0024AC  0E08               	movlw	high __npowers_
  6087  0024AE  0101               	movlb	1	; () banked
  6088  0024B0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6089  0024B2  6EF7               	movwf	tblptrh,c
  6090  0024B4  0009               	tblrd		*+
  6091  0024B6  CFF5 F12A          	movff	tablat,??_scale
  6092  0024BA  0009               	tblrd		*+
  6093  0024BC  CFF5 F12B          	movff	tablat,??_scale+1
  6094  0024C0  0009               	tblrd		*+
  6095  0024C2  CFF5 F12C          	movff	tablat,??_scale+2
  6096  0024C6  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6097  0024CA  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6098  0024CE  C12A  F119         	movff	??_scale,?___ftmul+3
  6099  0024D2  0E00               	movlw	0
  6100  0024D4  0101               	movlb	1	; () banked
  6101  0024D6  0101               	movlb	1	; () banked
  6102  0024D8  6F13               	movwf	(?___wmul+3)& (0+255),b
  6103  0024DA  0E03               	movlw	3
  6104  0024DC  0101               	movlb	1	; () banked
  6105  0024DE  6F12               	movwf	(?___wmul+2)& (0+255),b
  6106  0024E0  0E00               	movlw	0
  6107  0024E2  0101               	movlb	1	; () banked
  6108  0024E4  0101               	movlb	1	; () banked
  6109  0024E6  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6110  0024E8  0E64               	movlw	100
  6111  0024EA  0101               	movlb	1	; () banked
  6112  0024EC  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6113  0024EE  0101               	movlb	1	; () banked
  6114  0024F0  0101               	movlb	1	; () banked
  6115  0024F2  5127               	movf	scale@scl& (0+255),w,b
  6116  0024F4  0101               	movlb	1	; () banked
  6117  0024F6  0101               	movlb	1	; () banked
  6118  0024F8  6F07               	movwf	?___awdiv& (0+255),b
  6119  0024FA  0101               	movlb	1	; () banked
  6120  0024FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6121  0024FE  0101               	movlb	1	; () banked
  6122  002500  BF07               	btfsc	?___awdiv& (0+255),7,b
  6123  002502  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6124  002504  EC6E  F023         	call	___awdiv	;wreg free
  6125  002508  0E12               	movlw	18
  6126  00250A  0101               	movlb	1	; () banked
  6127  00250C  0101               	movlb	1	; () banked
  6128  00250E  2507               	addwf	?___awdiv& (0+255),w,b
  6129  002510  0101               	movlb	1	; () banked
  6130  002512  0101               	movlb	1	; () banked
  6131  002514  6F10               	movwf	?___wmul& (0+255),b
  6132  002516  0E00               	movlw	0
  6133  002518  0101               	movlb	1	; () banked
  6134  00251A  0101               	movlb	1	; () banked
  6135  00251C  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6136  00251E  0101               	movlb	1	; () banked
  6137  002520  6F11               	movwf	(?___wmul+1)& (0+255),b
  6138  002522  EC5B  F02E         	call	___wmul	;wreg free
  6139  002526  0E28               	movlw	low __npowers_
  6140  002528  0101               	movlb	1	; () banked
  6141  00252A  0101               	movlb	1	; () banked
  6142  00252C  2510               	addwf	?___wmul& (0+255),w,b
  6143  00252E  6EF6               	movwf	tblptrl,c
  6144  002530  0E08               	movlw	high __npowers_
  6145  002532  0101               	movlb	1	; () banked
  6146  002534  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6147  002536  6EF7               	movwf	tblptrh,c
  6148  002538  0009               	tblrd		*+
  6149  00253A  CFF5 F12D          	movff	tablat,??_scale+3
  6150  00253E  0009               	tblrd		*+
  6151  002540  CFF5 F12E          	movff	tablat,??_scale+4
  6152  002544  0009               	tblrd		*+
  6153  002546  CFF5 F12F          	movff	tablat,??_scale+5
  6154  00254A  C12F  F118         	movff	??_scale+5,?___ftmul+2
  6155  00254E  C12E  F117         	movff	??_scale+4,?___ftmul+1
  6156  002552  C12D  F116         	movff	??_scale+3,?___ftmul
  6157  002556  ECE1  F01C         	call	___ftmul	;wreg free
  6158  00255A  C118  F132         	movff	?___ftmul+2,_scale$1203+2
  6159  00255E  C117  F131         	movff	?___ftmul+1,_scale$1203+1
  6160  002562  C116  F130         	movff	?___ftmul,_scale$1203
  6161                           
  6162                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6163  002566  C130  F116         	movff	_scale$1203,?___ftmul
  6164  00256A  C131  F117         	movff	_scale$1203+1,?___ftmul+1
  6165  00256E  C132  F118         	movff	_scale$1203+2,?___ftmul+2
  6166  002572  0E00               	movlw	0
  6167  002574  0101               	movlb	1	; () banked
  6168  002576  0101               	movlb	1	; () banked
  6169  002578  6F13               	movwf	(?___wmul+3)& (0+255),b
  6170  00257A  0E03               	movlw	3
  6171  00257C  0101               	movlb	1	; () banked
  6172  00257E  6F12               	movwf	(?___wmul+2)& (0+255),b
  6173  002580  0E00               	movlw	0
  6174  002582  0101               	movlb	1	; () banked
  6175  002584  0101               	movlb	1	; () banked
  6176  002586  6F03               	movwf	(?___awmod+3)& (0+255),b
  6177  002588  0E0A               	movlw	10
  6178  00258A  0101               	movlb	1	; () banked
  6179  00258C  6F02               	movwf	(?___awmod+2)& (0+255),b
  6180  00258E  0101               	movlb	1	; () banked
  6181  002590  0101               	movlb	1	; () banked
  6182  002592  5127               	movf	scale@scl& (0+255),w,b
  6183  002594  0101               	movlb	1	; () banked
  6184  002596  0101               	movlb	1	; () banked
  6185  002598  6F00               	movwf	?___awmod& (0+255),b
  6186  00259A  0101               	movlb	1	; () banked
  6187  00259C  6B01               	clrf	(?___awmod+1)& (0+255),b
  6188  00259E  0101               	movlb	1	; () banked
  6189  0025A0  BF00               	btfsc	?___awmod& (0+255),7,b
  6190  0025A2  0701               	decf	(?___awmod+1)& (0+255),f,b
  6191  0025A4  EC03  F028         	call	___awmod	;wreg free
  6192  0025A8  0101               	movlb	1	; () banked
  6193  0025AA  C100  F110         	movff	?___awmod,?___wmul
  6194  0025AE  0101               	movlb	1	; () banked
  6195  0025B0  C101  F111         	movff	?___awmod+1,?___wmul+1
  6196  0025B4  EC5B  F02E         	call	___wmul	;wreg free
  6197  0025B8  0E28               	movlw	low __npowers_
  6198  0025BA  0101               	movlb	1	; () banked
  6199  0025BC  0101               	movlb	1	; () banked
  6200  0025BE  2510               	addwf	?___wmul& (0+255),w,b
  6201  0025C0  6EF6               	movwf	tblptrl,c
  6202  0025C2  0E08               	movlw	high __npowers_
  6203  0025C4  0101               	movlb	1	; () banked
  6204  0025C6  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6205  0025C8  6EF7               	movwf	tblptrh,c
  6206  0025CA  0009               	tblrd		*+
  6207  0025CC  CFF5 F12A          	movff	tablat,??_scale
  6208  0025D0  0009               	tblrd		*+
  6209  0025D2  CFF5 F12B          	movff	tablat,??_scale+1
  6210  0025D6  0009               	tblrd		*+
  6211  0025D8  CFF5 F12C          	movff	tablat,??_scale+2
  6212  0025DC  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6213  0025E0  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6214  0025E4  C12A  F119         	movff	??_scale,?___ftmul+3
  6215  0025E8  ECE1  F01C         	call	___ftmul	;wreg free
  6216  0025EC  D1FC               	goto	L10
  6217  0025EE                     l10517:
  6218                           
  6219                           ;doprnt.c: 432: else if(scl > 10)
  6220  0025EE  0101               	movlb	1	; () banked
  6221  0025F0  0101               	movlb	1	; () banked
  6222  0025F2  5127               	movf	scale@scl& (0+255),w,b
  6223  0025F4  0A80               	xorlw	128
  6224  0025F6  0F75               	addlw	-139
  6225  0025F8  A0D8               	btfss	status,0,c
  6226  0025FA  D080               	goto	l10523
  6227                           
  6228                           ; BSR set to: 1
  6229                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6230  0025FC  0E00               	movlw	0
  6231  0025FE  0101               	movlb	1	; () banked
  6232  002600  0101               	movlb	1	; () banked
  6233  002602  6F13               	movwf	(?___wmul+3)& (0+255),b
  6234  002604  0E03               	movlw	3
  6235  002606  0101               	movlb	1	; () banked
  6236  002608  6F12               	movwf	(?___wmul+2)& (0+255),b
  6237  00260A  0E00               	movlw	0
  6238  00260C  0101               	movlb	1	; () banked
  6239  00260E  0101               	movlb	1	; () banked
  6240  002610  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6241  002612  0E0A               	movlw	10
  6242  002614  0101               	movlb	1	; () banked
  6243  002616  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6244  002618  0101               	movlb	1	; () banked
  6245  00261A  0101               	movlb	1	; () banked
  6246  00261C  5127               	movf	scale@scl& (0+255),w,b
  6247  00261E  0101               	movlb	1	; () banked
  6248  002620  0101               	movlb	1	; () banked
  6249  002622  6F07               	movwf	?___awdiv& (0+255),b
  6250  002624  0101               	movlb	1	; () banked
  6251  002626  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6252  002628  0101               	movlb	1	; () banked
  6253  00262A  BF07               	btfsc	?___awdiv& (0+255),7,b
  6254  00262C  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6255  00262E  EC6E  F023         	call	___awdiv	;wreg free
  6256  002632  0E09               	movlw	9
  6257  002634  0101               	movlb	1	; () banked
  6258  002636  0101               	movlb	1	; () banked
  6259  002638  2507               	addwf	?___awdiv& (0+255),w,b
  6260  00263A  0101               	movlb	1	; () banked
  6261  00263C  0101               	movlb	1	; () banked
  6262  00263E  6F10               	movwf	?___wmul& (0+255),b
  6263  002640  0E00               	movlw	0
  6264  002642  0101               	movlb	1	; () banked
  6265  002644  0101               	movlb	1	; () banked
  6266  002646  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6267  002648  0101               	movlb	1	; () banked
  6268  00264A  6F11               	movwf	(?___wmul+1)& (0+255),b
  6269  00264C  EC5B  F02E         	call	___wmul	;wreg free
  6270  002650  0E28               	movlw	low __npowers_
  6271  002652  0101               	movlb	1	; () banked
  6272  002654  0101               	movlb	1	; () banked
  6273  002656  2510               	addwf	?___wmul& (0+255),w,b
  6274  002658  6EF6               	movwf	tblptrl,c
  6275  00265A  0E08               	movlw	high __npowers_
  6276  00265C  0101               	movlb	1	; () banked
  6277  00265E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6278  002660  6EF7               	movwf	tblptrh,c
  6279  002662  0009               	tblrd		*+
  6280  002664  CFF5 F12A          	movff	tablat,??_scale
  6281  002668  0009               	tblrd		*+
  6282  00266A  CFF5 F12B          	movff	tablat,??_scale+1
  6283  00266E  0009               	tblrd		*+
  6284  002670  CFF5 F12C          	movff	tablat,??_scale+2
  6285  002674  C12C  F118         	movff	??_scale+2,?___ftmul+2
  6286  002678  C12B  F117         	movff	??_scale+1,?___ftmul+1
  6287  00267C  C12A  F116         	movff	??_scale,?___ftmul
  6288  002680  0E00               	movlw	0
  6289  002682  0101               	movlb	1	; () banked
  6290  002684  0101               	movlb	1	; () banked
  6291  002686  6F13               	movwf	(?___wmul+3)& (0+255),b
  6292  002688  0E03               	movlw	3
  6293  00268A  0101               	movlb	1	; () banked
  6294  00268C  6F12               	movwf	(?___wmul+2)& (0+255),b
  6295  00268E  0E00               	movlw	0
  6296  002690  0101               	movlb	1	; () banked
  6297  002692  0101               	movlb	1	; () banked
  6298  002694  6F03               	movwf	(?___awmod+3)& (0+255),b
  6299  002696  0E0A               	movlw	10
  6300  002698  0101               	movlb	1	; () banked
  6301  00269A  6F02               	movwf	(?___awmod+2)& (0+255),b
  6302  00269C  0101               	movlb	1	; () banked
  6303  00269E  0101               	movlb	1	; () banked
  6304  0026A0  5127               	movf	scale@scl& (0+255),w,b
  6305  0026A2  0101               	movlb	1	; () banked
  6306  0026A4  0101               	movlb	1	; () banked
  6307  0026A6  6F00               	movwf	?___awmod& (0+255),b
  6308  0026A8  0101               	movlb	1	; () banked
  6309  0026AA  6B01               	clrf	(?___awmod+1)& (0+255),b
  6310  0026AC  0101               	movlb	1	; () banked
  6311  0026AE  BF00               	btfsc	?___awmod& (0+255),7,b
  6312  0026B0  0701               	decf	(?___awmod+1)& (0+255),f,b
  6313  0026B2  EC03  F028         	call	___awmod	;wreg free
  6314  0026B6  0101               	movlb	1	; () banked
  6315  0026B8  C100  F110         	movff	?___awmod,?___wmul
  6316  0026BC  0101               	movlb	1	; () banked
  6317  0026BE  C101  F111         	movff	?___awmod+1,?___wmul+1
  6318  0026C2  EC5B  F02E         	call	___wmul	;wreg free
  6319  0026C6  0E28               	movlw	low __npowers_
  6320  0026C8  0101               	movlb	1	; () banked
  6321  0026CA  0101               	movlb	1	; () banked
  6322  0026CC  2510               	addwf	?___wmul& (0+255),w,b
  6323  0026CE  6EF6               	movwf	tblptrl,c
  6324  0026D0  0E08               	movlw	high __npowers_
  6325  0026D2  0101               	movlb	1	; () banked
  6326  0026D4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6327  0026D6  6EF7               	movwf	tblptrh,c
  6328  0026D8  0009               	tblrd		*+
  6329  0026DA  CFF5 F12D          	movff	tablat,??_scale+3
  6330  0026DE  0009               	tblrd		*+
  6331  0026E0  CFF5 F12E          	movff	tablat,??_scale+4
  6332  0026E4  0009               	tblrd		*+
  6333  0026E6  CFF5 F12F          	movff	tablat,??_scale+5
  6334  0026EA  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  6335  0026EE  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  6336  0026F2  C12D  F119         	movff	??_scale+3,?___ftmul+3
  6337  0026F6  ECE1  F01C         	call	___ftmul	;wreg free
  6338  0026FA  D175               	goto	L10
  6339  0026FC                     l10523:
  6340                           
  6341                           ;doprnt.c: 434: return _npowers_[scl];
  6342  0026FC  0101               	movlb	1	; () banked
  6343  0026FE  0101               	movlb	1	; () banked
  6344  002700  5127               	movf	scale@scl& (0+255),w,b
  6345  002702  0D03               	mullw	3
  6346  002704  0E28               	movlw	low __npowers_
  6347  002706  24F3               	addwf	prodl,w,c
  6348  002708  6EF6               	movwf	tblptrl,c
  6349  00270A  0E08               	movlw	high __npowers_
  6350  00270C  D17B               	goto	L9
  6351  00270E                     l10527:
  6352                           
  6353                           ; BSR set to: 1
  6354                           ;doprnt.c: 435: }
  6355                           ;doprnt.c: 436: if(scl>=110)
  6356  00270E  0101               	movlb	1	; () banked
  6357  002710  0101               	movlb	1	; () banked
  6358  002712  5127               	movf	scale@scl& (0+255),w,b
  6359  002714  0A80               	xorlw	128
  6360  002716  0F12               	addlw	-238
  6361  002718  A0D8               	btfss	status,0,c
  6362  00271A  D0DF               	goto	l10535
  6363                           
  6364                           ; BSR set to: 1
  6365                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6366  00271C  0E00               	movlw	0
  6367  00271E  0101               	movlb	1	; () banked
  6368  002720  0101               	movlb	1	; () banked
  6369  002722  6F13               	movwf	(?___wmul+3)& (0+255),b
  6370  002724  0E03               	movlw	3
  6371  002726  0101               	movlb	1	; () banked
  6372  002728  6F12               	movwf	(?___wmul+2)& (0+255),b
  6373  00272A  0E00               	movlw	0
  6374  00272C  0101               	movlb	1	; () banked
  6375  00272E  0101               	movlb	1	; () banked
  6376  002730  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6377  002732  0E0A               	movlw	10
  6378  002734  0101               	movlb	1	; () banked
  6379  002736  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6380  002738  0E00               	movlw	0
  6381  00273A  0101               	movlb	1	; () banked
  6382  00273C  0101               	movlb	1	; () banked
  6383  00273E  6F03               	movwf	(?___awmod+3)& (0+255),b
  6384  002740  0E64               	movlw	100
  6385  002742  0101               	movlb	1	; () banked
  6386  002744  6F02               	movwf	(?___awmod+2)& (0+255),b
  6387  002746  0101               	movlb	1	; () banked
  6388  002748  0101               	movlb	1	; () banked
  6389  00274A  5127               	movf	scale@scl& (0+255),w,b
  6390  00274C  0101               	movlb	1	; () banked
  6391  00274E  0101               	movlb	1	; () banked
  6392  002750  6F00               	movwf	?___awmod& (0+255),b
  6393  002752  0101               	movlb	1	; () banked
  6394  002754  6B01               	clrf	(?___awmod+1)& (0+255),b
  6395  002756  0101               	movlb	1	; () banked
  6396  002758  BF00               	btfsc	?___awmod& (0+255),7,b
  6397  00275A  0701               	decf	(?___awmod+1)& (0+255),f,b
  6398  00275C  EC03  F028         	call	___awmod	;wreg free
  6399  002760  0101               	movlb	1	; () banked
  6400  002762  C100  F107         	movff	?___awmod,?___awdiv
  6401  002766  0101               	movlb	1	; () banked
  6402  002768  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6403  00276C  EC6E  F023         	call	___awdiv	;wreg free
  6404  002770  0E09               	movlw	9
  6405  002772  0101               	movlb	1	; () banked
  6406  002774  0101               	movlb	1	; () banked
  6407  002776  2507               	addwf	?___awdiv& (0+255),w,b
  6408  002778  0101               	movlb	1	; () banked
  6409  00277A  0101               	movlb	1	; () banked
  6410  00277C  6F10               	movwf	?___wmul& (0+255),b
  6411  00277E  0E00               	movlw	0
  6412  002780  0101               	movlb	1	; () banked
  6413  002782  0101               	movlb	1	; () banked
  6414  002784  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6415  002786  0101               	movlb	1	; () banked
  6416  002788  6F11               	movwf	(?___wmul+1)& (0+255),b
  6417  00278A  EC5B  F02E         	call	___wmul	;wreg free
  6418  00278E  0E4F               	movlw	low __powers_
  6419  002790  0101               	movlb	1	; () banked
  6420  002792  0101               	movlb	1	; () banked
  6421  002794  2510               	addwf	?___wmul& (0+255),w,b
  6422  002796  6EF6               	movwf	tblptrl,c
  6423  002798  0E08               	movlw	high __powers_
  6424  00279A  0101               	movlb	1	; () banked
  6425  00279C  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6426  00279E  6EF7               	movwf	tblptrh,c
  6427  0027A0  0009               	tblrd		*+
  6428  0027A2  CFF5 F12A          	movff	tablat,??_scale
  6429  0027A6  0009               	tblrd		*+
  6430  0027A8  CFF5 F12B          	movff	tablat,??_scale+1
  6431  0027AC  0009               	tblrd		*+
  6432  0027AE  CFF5 F12C          	movff	tablat,??_scale+2
  6433  0027B2  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6434  0027B6  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6435  0027BA  C12A  F119         	movff	??_scale,?___ftmul+3
  6436  0027BE  0E00               	movlw	0
  6437  0027C0  0101               	movlb	1	; () banked
  6438  0027C2  0101               	movlb	1	; () banked
  6439  0027C4  6F13               	movwf	(?___wmul+3)& (0+255),b
  6440  0027C6  0E03               	movlw	3
  6441  0027C8  0101               	movlb	1	; () banked
  6442  0027CA  6F12               	movwf	(?___wmul+2)& (0+255),b
  6443  0027CC  0E00               	movlw	0
  6444  0027CE  0101               	movlb	1	; () banked
  6445  0027D0  0101               	movlb	1	; () banked
  6446  0027D2  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6447  0027D4  0E64               	movlw	100
  6448  0027D6  0101               	movlb	1	; () banked
  6449  0027D8  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6450  0027DA  0101               	movlb	1	; () banked
  6451  0027DC  0101               	movlb	1	; () banked
  6452  0027DE  5127               	movf	scale@scl& (0+255),w,b
  6453  0027E0  0101               	movlb	1	; () banked
  6454  0027E2  0101               	movlb	1	; () banked
  6455  0027E4  6F07               	movwf	?___awdiv& (0+255),b
  6456  0027E6  0101               	movlb	1	; () banked
  6457  0027E8  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6458  0027EA  0101               	movlb	1	; () banked
  6459  0027EC  BF07               	btfsc	?___awdiv& (0+255),7,b
  6460  0027EE  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6461  0027F0  EC6E  F023         	call	___awdiv	;wreg free
  6462  0027F4  0E12               	movlw	18
  6463  0027F6  0101               	movlb	1	; () banked
  6464  0027F8  0101               	movlb	1	; () banked
  6465  0027FA  2507               	addwf	?___awdiv& (0+255),w,b
  6466  0027FC  0101               	movlb	1	; () banked
  6467  0027FE  0101               	movlb	1	; () banked
  6468  002800  6F10               	movwf	?___wmul& (0+255),b
  6469  002802  0E00               	movlw	0
  6470  002804  0101               	movlb	1	; () banked
  6471  002806  0101               	movlb	1	; () banked
  6472  002808  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6473  00280A  0101               	movlb	1	; () banked
  6474  00280C  6F11               	movwf	(?___wmul+1)& (0+255),b
  6475  00280E  EC5B  F02E         	call	___wmul	;wreg free
  6476  002812  0E4F               	movlw	low __powers_
  6477  002814  0101               	movlb	1	; () banked
  6478  002816  0101               	movlb	1	; () banked
  6479  002818  2510               	addwf	?___wmul& (0+255),w,b
  6480  00281A  6EF6               	movwf	tblptrl,c
  6481  00281C  0E08               	movlw	high __powers_
  6482  00281E  0101               	movlb	1	; () banked
  6483  002820  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6484  002822  6EF7               	movwf	tblptrh,c
  6485  002824  0009               	tblrd		*+
  6486  002826  CFF5 F12D          	movff	tablat,??_scale+3
  6487  00282A  0009               	tblrd		*+
  6488  00282C  CFF5 F12E          	movff	tablat,??_scale+4
  6489  002830  0009               	tblrd		*+
  6490  002832  CFF5 F12F          	movff	tablat,??_scale+5
  6491  002836  C12F  F118         	movff	??_scale+5,?___ftmul+2
  6492  00283A  C12E  F117         	movff	??_scale+4,?___ftmul+1
  6493  00283E  C12D  F116         	movff	??_scale+3,?___ftmul
  6494  002842  ECE1  F01C         	call	___ftmul	;wreg free
  6495  002846  C118  F132         	movff	?___ftmul+2,_scale$1203+2
  6496  00284A  C117  F131         	movff	?___ftmul+1,_scale$1203+1
  6497  00284E  C116  F130         	movff	?___ftmul,_scale$1203
  6498                           
  6499                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6500  002852  C130  F116         	movff	_scale$1203,?___ftmul
  6501  002856  C131  F117         	movff	_scale$1203+1,?___ftmul+1
  6502  00285A  C132  F118         	movff	_scale$1203+2,?___ftmul+2
  6503  00285E  0E00               	movlw	0
  6504  002860  0101               	movlb	1	; () banked
  6505  002862  0101               	movlb	1	; () banked
  6506  002864  6F13               	movwf	(?___wmul+3)& (0+255),b
  6507  002866  0E03               	movlw	3
  6508  002868  0101               	movlb	1	; () banked
  6509  00286A  6F12               	movwf	(?___wmul+2)& (0+255),b
  6510  00286C  0E00               	movlw	0
  6511  00286E  0101               	movlb	1	; () banked
  6512  002870  0101               	movlb	1	; () banked
  6513  002872  6F03               	movwf	(?___awmod+3)& (0+255),b
  6514  002874  0E0A               	movlw	10
  6515  002876  0101               	movlb	1	; () banked
  6516  002878  6F02               	movwf	(?___awmod+2)& (0+255),b
  6517  00287A  0101               	movlb	1	; () banked
  6518  00287C  0101               	movlb	1	; () banked
  6519  00287E  5127               	movf	scale@scl& (0+255),w,b
  6520  002880  0101               	movlb	1	; () banked
  6521  002882  0101               	movlb	1	; () banked
  6522  002884  6F00               	movwf	?___awmod& (0+255),b
  6523  002886  0101               	movlb	1	; () banked
  6524  002888  6B01               	clrf	(?___awmod+1)& (0+255),b
  6525  00288A  0101               	movlb	1	; () banked
  6526  00288C  BF00               	btfsc	?___awmod& (0+255),7,b
  6527  00288E  0701               	decf	(?___awmod+1)& (0+255),f,b
  6528  002890  EC03  F028         	call	___awmod	;wreg free
  6529  002894  0101               	movlb	1	; () banked
  6530  002896  C100  F110         	movff	?___awmod,?___wmul
  6531  00289A  0101               	movlb	1	; () banked
  6532  00289C  C101  F111         	movff	?___awmod+1,?___wmul+1
  6533  0028A0  EC5B  F02E         	call	___wmul	;wreg free
  6534  0028A4  0E4F               	movlw	low __powers_
  6535  0028A6  0101               	movlb	1	; () banked
  6536  0028A8  0101               	movlb	1	; () banked
  6537  0028AA  2510               	addwf	?___wmul& (0+255),w,b
  6538  0028AC  6EF6               	movwf	tblptrl,c
  6539  0028AE  0E08               	movlw	high __powers_
  6540  0028B0  0101               	movlb	1	; () banked
  6541  0028B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6542  0028B4  6EF7               	movwf	tblptrh,c
  6543  0028B6  0009               	tblrd		*+
  6544  0028B8  CFF5 F12A          	movff	tablat,??_scale
  6545  0028BC  0009               	tblrd		*+
  6546  0028BE  CFF5 F12B          	movff	tablat,??_scale+1
  6547  0028C2  0009               	tblrd		*+
  6548  0028C4  CFF5 F12C          	movff	tablat,??_scale+2
  6549  0028C8  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6550  0028CC  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6551  0028D0  C12A  F119         	movff	??_scale,?___ftmul+3
  6552  0028D4  ECE1  F01C         	call	___ftmul	;wreg free
  6553  0028D8  D086               	goto	L10
  6554  0028DA                     l10535:
  6555                           
  6556                           ;doprnt.c: 438: else if(scl > 10)
  6557  0028DA  0101               	movlb	1	; () banked
  6558  0028DC  0101               	movlb	1	; () banked
  6559  0028DE  5127               	movf	scale@scl& (0+255),w,b
  6560  0028E0  0A80               	xorlw	128
  6561  0028E2  0F75               	addlw	-139
  6562  0028E4  A0D8               	btfss	status,0,c
  6563  0028E6  D086               	goto	l10541
  6564                           
  6565                           ; BSR set to: 1
  6566                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6567  0028E8  0E00               	movlw	0
  6568  0028EA  0101               	movlb	1	; () banked
  6569  0028EC  0101               	movlb	1	; () banked
  6570  0028EE  6F13               	movwf	(?___wmul+3)& (0+255),b
  6571  0028F0  0E03               	movlw	3
  6572  0028F2  0101               	movlb	1	; () banked
  6573  0028F4  6F12               	movwf	(?___wmul+2)& (0+255),b
  6574  0028F6  0E00               	movlw	0
  6575  0028F8  0101               	movlb	1	; () banked
  6576  0028FA  0101               	movlb	1	; () banked
  6577  0028FC  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6578  0028FE  0E0A               	movlw	10
  6579  002900  0101               	movlb	1	; () banked
  6580  002902  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6581  002904  0101               	movlb	1	; () banked
  6582  002906  0101               	movlb	1	; () banked
  6583  002908  5127               	movf	scale@scl& (0+255),w,b
  6584  00290A  0101               	movlb	1	; () banked
  6585  00290C  0101               	movlb	1	; () banked
  6586  00290E  6F07               	movwf	?___awdiv& (0+255),b
  6587  002910  0101               	movlb	1	; () banked
  6588  002912  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6589  002914  0101               	movlb	1	; () banked
  6590  002916  BF07               	btfsc	?___awdiv& (0+255),7,b
  6591  002918  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6592  00291A  EC6E  F023         	call	___awdiv	;wreg free
  6593  00291E  0E09               	movlw	9
  6594  002920  0101               	movlb	1	; () banked
  6595  002922  0101               	movlb	1	; () banked
  6596  002924  2507               	addwf	?___awdiv& (0+255),w,b
  6597  002926  0101               	movlb	1	; () banked
  6598  002928  0101               	movlb	1	; () banked
  6599  00292A  6F10               	movwf	?___wmul& (0+255),b
  6600  00292C  0E00               	movlw	0
  6601  00292E  0101               	movlb	1	; () banked
  6602  002930  0101               	movlb	1	; () banked
  6603  002932  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6604  002934  0101               	movlb	1	; () banked
  6605  002936  6F11               	movwf	(?___wmul+1)& (0+255),b
  6606  002938  EC5B  F02E         	call	___wmul	;wreg free
  6607  00293C  0E4F               	movlw	low __powers_
  6608  00293E  0101               	movlb	1	; () banked
  6609  002940  0101               	movlb	1	; () banked
  6610  002942  2510               	addwf	?___wmul& (0+255),w,b
  6611  002944  6EF6               	movwf	tblptrl,c
  6612  002946  0E08               	movlw	high __powers_
  6613  002948  0101               	movlb	1	; () banked
  6614  00294A  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6615  00294C  6EF7               	movwf	tblptrh,c
  6616  00294E  0009               	tblrd		*+
  6617  002950  CFF5 F12A          	movff	tablat,??_scale
  6618  002954  0009               	tblrd		*+
  6619  002956  CFF5 F12B          	movff	tablat,??_scale+1
  6620  00295A  0009               	tblrd		*+
  6621  00295C  CFF5 F12C          	movff	tablat,??_scale+2
  6622  002960  C12C  F118         	movff	??_scale+2,?___ftmul+2
  6623  002964  C12B  F117         	movff	??_scale+1,?___ftmul+1
  6624  002968  C12A  F116         	movff	??_scale,?___ftmul
  6625  00296C  0E00               	movlw	0
  6626  00296E  0101               	movlb	1	; () banked
  6627  002970  0101               	movlb	1	; () banked
  6628  002972  6F13               	movwf	(?___wmul+3)& (0+255),b
  6629  002974  0E03               	movlw	3
  6630  002976  0101               	movlb	1	; () banked
  6631  002978  6F12               	movwf	(?___wmul+2)& (0+255),b
  6632  00297A  0E00               	movlw	0
  6633  00297C  0101               	movlb	1	; () banked
  6634  00297E  0101               	movlb	1	; () banked
  6635  002980  6F03               	movwf	(?___awmod+3)& (0+255),b
  6636  002982  0E0A               	movlw	10
  6637  002984  0101               	movlb	1	; () banked
  6638  002986  6F02               	movwf	(?___awmod+2)& (0+255),b
  6639  002988  0101               	movlb	1	; () banked
  6640  00298A  0101               	movlb	1	; () banked
  6641  00298C  5127               	movf	scale@scl& (0+255),w,b
  6642  00298E  0101               	movlb	1	; () banked
  6643  002990  0101               	movlb	1	; () banked
  6644  002992  6F00               	movwf	?___awmod& (0+255),b
  6645  002994  0101               	movlb	1	; () banked
  6646  002996  6B01               	clrf	(?___awmod+1)& (0+255),b
  6647  002998  0101               	movlb	1	; () banked
  6648  00299A  BF00               	btfsc	?___awmod& (0+255),7,b
  6649  00299C  0701               	decf	(?___awmod+1)& (0+255),f,b
  6650  00299E  EC03  F028         	call	___awmod	;wreg free
  6651  0029A2  0101               	movlb	1	; () banked
  6652  0029A4  C100  F110         	movff	?___awmod,?___wmul
  6653  0029A8  0101               	movlb	1	; () banked
  6654  0029AA  C101  F111         	movff	?___awmod+1,?___wmul+1
  6655  0029AE  EC5B  F02E         	call	___wmul	;wreg free
  6656  0029B2  0E4F               	movlw	low __powers_
  6657  0029B4  0101               	movlb	1	; () banked
  6658  0029B6  0101               	movlb	1	; () banked
  6659  0029B8  2510               	addwf	?___wmul& (0+255),w,b
  6660  0029BA  6EF6               	movwf	tblptrl,c
  6661  0029BC  0E08               	movlw	high __powers_
  6662  0029BE  0101               	movlb	1	; () banked
  6663  0029C0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6664  0029C2  6EF7               	movwf	tblptrh,c
  6665  0029C4  0009               	tblrd		*+
  6666  0029C6  CFF5 F12D          	movff	tablat,??_scale+3
  6667  0029CA  0009               	tblrd		*+
  6668  0029CC  CFF5 F12E          	movff	tablat,??_scale+4
  6669  0029D0  0009               	tblrd		*+
  6670  0029D2  CFF5 F12F          	movff	tablat,??_scale+5
  6671  0029D6  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  6672  0029DA  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  6673  0029DE  C12D  F119         	movff	??_scale+3,?___ftmul+3
  6674  0029E2  ECE1  F01C         	call	___ftmul	;wreg free
  6675  0029E6                     L10:
  6676  0029E6  C118  F129         	movff	?___ftmul+2,?_scale+2
  6677  0029EA  C117  F128         	movff	?___ftmul+1,?_scale+1
  6678  0029EE  C116  F127         	movff	?___ftmul,?_scale
  6679  0029F2  D019               	goto	l253
  6680  0029F4                     l10541:
  6681                           
  6682                           ;doprnt.c: 440: return _powers_[scl];
  6683  0029F4  0101               	movlb	1	; () banked
  6684  0029F6  0101               	movlb	1	; () banked
  6685  0029F8  5127               	movf	scale@scl& (0+255),w,b
  6686  0029FA  0D03               	mullw	3
  6687  0029FC  0E4F               	movlw	low __powers_
  6688  0029FE  24F3               	addwf	prodl,w,c
  6689  002A00  6EF6               	movwf	tblptrl,c
  6690  002A02  0E08               	movlw	high __powers_
  6691  002A04                     L9:
  6692  002A04  20F4               	addwfc	prodh,w,c
  6693  002A06  6EF7               	movwf	tblptrh,c
  6694  002A08  0009               	tblrd		*+
  6695  002A0A  CFF5 F12A          	movff	tablat,??_scale
  6696  002A0E  0009               	tblrd		*+
  6697  002A10  CFF5 F12B          	movff	tablat,??_scale+1
  6698  002A14  0009               	tblrd		*+
  6699  002A16  CFF5 F12C          	movff	tablat,??_scale+2
  6700  002A1A  C12C  F129         	movff	??_scale+2,?_scale+2
  6701  002A1E  C12B  F128         	movff	??_scale+1,?_scale+1
  6702  002A22  C12A  F127         	movff	??_scale,?_scale
  6703  002A26                     l253:
  6704  002A26  0012               	return	
  6705  002A28                     __end_of_scale:
  6706                           	opt stack 0
  6707                           tblptru	equ	0xFF8
  6708                           tblptrh	equ	0xFF7
  6709                           tblptrl	equ	0xFF6
  6710                           tablat	equ	0xFF5
  6711                           prodh	equ	0xFF4
  6712                           prodl	equ	0xFF3
  6713                           postinc0	equ	0xFEE
  6714                           wreg	equ	0xFE8
  6715                           indf2	equ	0xFDF
  6716                           postinc2	equ	0xFDE
  6717                           postdec2	equ	0xFDD
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _fround *****************
  6723 ;; Defined at:
  6724 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  prec            1   39[BANK1 ] unsigned char 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  3   39[BANK1 ] unsigned char 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6738 ;;      Params:         0       0       3       0       0       0       0       0       0
  6739 ;;      Locals:         0       0       6       0       0       0       0       0       0
  6740 ;;      Temps:          0       0       6       0       0       0       0       0       0
  6741 ;;      Totals:         0       0      15       0       0       0       0       0       0
  6742 ;;Total ram usage:       15 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:   11
  6745 ;; This function calls:
  6746 ;;		___ftmul
  6747 ;;		___awdiv
  6748 ;;		___awmod
  6749 ;;		___wmul
  6750 ;; This function is called by:
  6751 ;;		_sprintf
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text16
  6756  002E78                     __ptext16:
  6757                           	opt stack 0
  6758  002E78                     _fround:
  6759                           	opt stack 18
  6760                           
  6761                           ;doprnt.c: 413: if(prec>=110)
  6762                           
  6763                           ;incstack = 0
  6764                           ;incstack = 0
  6765  002E78  0E6D               	movlw	109
  6766  002E7A  0101               	movlb	1	; () banked
  6767  002E7C  0101               	movlb	1	; () banked
  6768  002E7E  6527               	cpfsgt	fround@prec& (0+255),b
  6769  002E80  D0ED               	goto	l10493
  6770                           
  6771                           ; BSR set to: 1
  6772                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6773  002E82  0E00               	movlw	0
  6774  002E84  0101               	movlb	1	; () banked
  6775  002E86  0101               	movlb	1	; () banked
  6776  002E88  6F13               	movwf	(?___wmul+3)& (0+255),b
  6777  002E8A  0E03               	movlw	3
  6778  002E8C  0101               	movlb	1	; () banked
  6779  002E8E  6F12               	movwf	(?___wmul+2)& (0+255),b
  6780  002E90  0E00               	movlw	0
  6781  002E92  0101               	movlb	1	; () banked
  6782  002E94  0101               	movlb	1	; () banked
  6783  002E96  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6784  002E98  0E0A               	movlw	10
  6785  002E9A  0101               	movlb	1	; () banked
  6786  002E9C  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6787  002E9E  0E00               	movlw	0
  6788  002EA0  0101               	movlb	1	; () banked
  6789  002EA2  0101               	movlb	1	; () banked
  6790  002EA4  6F03               	movwf	(?___awmod+3)& (0+255),b
  6791  002EA6  0E64               	movlw	100
  6792  002EA8  0101               	movlb	1	; () banked
  6793  002EAA  6F02               	movwf	(?___awmod+2)& (0+255),b
  6794  002EAC  0101               	movlb	1	; () banked
  6795  002EAE  0101               	movlb	1	; () banked
  6796  002EB0  C127  F100         	movff	fround@prec,?___awmod
  6797  002EB4  0101               	movlb	1	; () banked
  6798  002EB6  0101               	movlb	1	; () banked
  6799  002EB8  6B01               	clrf	(?___awmod+1)& (0+255),b
  6800  002EBA  EC03  F028         	call	___awmod	;wreg free
  6801  002EBE  0101               	movlb	1	; () banked
  6802  002EC0  C100  F107         	movff	?___awmod,?___awdiv
  6803  002EC4  0101               	movlb	1	; () banked
  6804  002EC6  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6805  002ECA  EC6E  F023         	call	___awdiv	;wreg free
  6806  002ECE  0E09               	movlw	9
  6807  002ED0  0101               	movlb	1	; () banked
  6808  002ED2  0101               	movlb	1	; () banked
  6809  002ED4  2507               	addwf	?___awdiv& (0+255),w,b
  6810  002ED6  0101               	movlb	1	; () banked
  6811  002ED8  0101               	movlb	1	; () banked
  6812  002EDA  6F10               	movwf	?___wmul& (0+255),b
  6813  002EDC  0E00               	movlw	0
  6814  002EDE  0101               	movlb	1	; () banked
  6815  002EE0  0101               	movlb	1	; () banked
  6816  002EE2  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6817  002EE4  0101               	movlb	1	; () banked
  6818  002EE6  6F11               	movwf	(?___wmul+1)& (0+255),b
  6819  002EE8  EC5B  F02E         	call	___wmul	;wreg free
  6820  002EEC  0E28               	movlw	low __npowers_
  6821  002EEE  0101               	movlb	1	; () banked
  6822  002EF0  0101               	movlb	1	; () banked
  6823  002EF2  2510               	addwf	?___wmul& (0+255),w,b
  6824  002EF4  6EF6               	movwf	tblptrl,c
  6825  002EF6  0E08               	movlw	high __npowers_
  6826  002EF8  0101               	movlb	1	; () banked
  6827  002EFA  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6828  002EFC  6EF7               	movwf	tblptrh,c
  6829  002EFE  0009               	tblrd		*+
  6830  002F00  CFF5 F12A          	movff	tablat,??_fround
  6831  002F04  0009               	tblrd		*+
  6832  002F06  CFF5 F12B          	movff	tablat,??_fround+1
  6833  002F0A  0009               	tblrd		*+
  6834  002F0C  CFF5 F12C          	movff	tablat,??_fround+2
  6835  002F10  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  6836  002F14  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  6837  002F18  C12A  F119         	movff	??_fround,?___ftmul+3
  6838  002F1C  0E00               	movlw	0
  6839  002F1E  0101               	movlb	1	; () banked
  6840  002F20  0101               	movlb	1	; () banked
  6841  002F22  6F13               	movwf	(?___wmul+3)& (0+255),b
  6842  002F24  0E03               	movlw	3
  6843  002F26  0101               	movlb	1	; () banked
  6844  002F28  6F12               	movwf	(?___wmul+2)& (0+255),b
  6845  002F2A  0E00               	movlw	0
  6846  002F2C  0101               	movlb	1	; () banked
  6847  002F2E  0101               	movlb	1	; () banked
  6848  002F30  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6849  002F32  0E64               	movlw	100
  6850  002F34  0101               	movlb	1	; () banked
  6851  002F36  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6852  002F38  0101               	movlb	1	; () banked
  6853  002F3A  0101               	movlb	1	; () banked
  6854  002F3C  C127  F107         	movff	fround@prec,?___awdiv
  6855  002F40  0101               	movlb	1	; () banked
  6856  002F42  0101               	movlb	1	; () banked
  6857  002F44  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6858  002F46  EC6E  F023         	call	___awdiv	;wreg free
  6859  002F4A  0E12               	movlw	18
  6860  002F4C  0101               	movlb	1	; () banked
  6861  002F4E  0101               	movlb	1	; () banked
  6862  002F50  2507               	addwf	?___awdiv& (0+255),w,b
  6863  002F52  0101               	movlb	1	; () banked
  6864  002F54  0101               	movlb	1	; () banked
  6865  002F56  6F10               	movwf	?___wmul& (0+255),b
  6866  002F58  0E00               	movlw	0
  6867  002F5A  0101               	movlb	1	; () banked
  6868  002F5C  0101               	movlb	1	; () banked
  6869  002F5E  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6870  002F60  0101               	movlb	1	; () banked
  6871  002F62  6F11               	movwf	(?___wmul+1)& (0+255),b
  6872  002F64  EC5B  F02E         	call	___wmul	;wreg free
  6873  002F68  0E28               	movlw	low __npowers_
  6874  002F6A  0101               	movlb	1	; () banked
  6875  002F6C  0101               	movlb	1	; () banked
  6876  002F6E  2510               	addwf	?___wmul& (0+255),w,b
  6877  002F70  6EF6               	movwf	tblptrl,c
  6878  002F72  0E08               	movlw	high __npowers_
  6879  002F74  0101               	movlb	1	; () banked
  6880  002F76  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6881  002F78  6EF7               	movwf	tblptrh,c
  6882  002F7A  0009               	tblrd		*+
  6883  002F7C  CFF5 F12D          	movff	tablat,??_fround+3
  6884  002F80  0009               	tblrd		*+
  6885  002F82  CFF5 F12E          	movff	tablat,??_fround+4
  6886  002F86  0009               	tblrd		*+
  6887  002F88  CFF5 F12F          	movff	tablat,??_fround+5
  6888  002F8C  C12F  F118         	movff	??_fround+5,?___ftmul+2
  6889  002F90  C12E  F117         	movff	??_fround+4,?___ftmul+1
  6890  002F94  C12D  F116         	movff	??_fround+3,?___ftmul
  6891  002F98  ECE1  F01C         	call	___ftmul	;wreg free
  6892  002F9C  C118  F135         	movff	?___ftmul+2,_fround$1201+2
  6893  002FA0  C117  F134         	movff	?___ftmul+1,_fround$1201+1
  6894  002FA4  C116  F133         	movff	?___ftmul,_fround$1201
  6895                           
  6896                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6897  002FA8  0E00               	movlw	0
  6898  002FAA  0101               	movlb	1	; () banked
  6899  002FAC  0101               	movlb	1	; () banked
  6900  002FAE  6F13               	movwf	(?___wmul+3)& (0+255),b
  6901  002FB0  0E03               	movlw	3
  6902  002FB2  0101               	movlb	1	; () banked
  6903  002FB4  6F12               	movwf	(?___wmul+2)& (0+255),b
  6904  002FB6  0E00               	movlw	0
  6905  002FB8  0101               	movlb	1	; () banked
  6906  002FBA  0101               	movlb	1	; () banked
  6907  002FBC  6F03               	movwf	(?___awmod+3)& (0+255),b
  6908  002FBE  0E0A               	movlw	10
  6909  002FC0  0101               	movlb	1	; () banked
  6910  002FC2  6F02               	movwf	(?___awmod+2)& (0+255),b
  6911  002FC4  0101               	movlb	1	; () banked
  6912  002FC6  0101               	movlb	1	; () banked
  6913  002FC8  C127  F100         	movff	fround@prec,?___awmod
  6914  002FCC  0101               	movlb	1	; () banked
  6915  002FCE  0101               	movlb	1	; () banked
  6916  002FD0  6B01               	clrf	(?___awmod+1)& (0+255),b
  6917  002FD2  EC03  F028         	call	___awmod	;wreg free
  6918  002FD6  0101               	movlb	1	; () banked
  6919  002FD8  C100  F110         	movff	?___awmod,?___wmul
  6920  002FDC  0101               	movlb	1	; () banked
  6921  002FDE  C101  F111         	movff	?___awmod+1,?___wmul+1
  6922  002FE2  EC5B  F02E         	call	___wmul	;wreg free
  6923  002FE6  0E28               	movlw	low __npowers_
  6924  002FE8  0101               	movlb	1	; () banked
  6925  002FEA  0101               	movlb	1	; () banked
  6926  002FEC  2510               	addwf	?___wmul& (0+255),w,b
  6927  002FEE  6EF6               	movwf	tblptrl,c
  6928  002FF0  0E08               	movlw	high __npowers_
  6929  002FF2  0101               	movlb	1	; () banked
  6930  002FF4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6931  002FF6  6EF7               	movwf	tblptrh,c
  6932  002FF8  0009               	tblrd		*+
  6933  002FFA  CFF5 F12A          	movff	tablat,??_fround
  6934  002FFE  0009               	tblrd		*+
  6935  003000  CFF5 F12B          	movff	tablat,??_fround+1
  6936  003004  0009               	tblrd		*+
  6937  003006  CFF5 F12C          	movff	tablat,??_fround+2
  6938  00300A  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  6939  00300E  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  6940  003012  C12A  F119         	movff	??_fround,?___ftmul+3
  6941  003016  C133  F116         	movff	_fround$1201,?___ftmul
  6942  00301A  C134  F117         	movff	_fround$1201+1,?___ftmul+1
  6943  00301E  C135  F118         	movff	_fround$1201+2,?___ftmul+2
  6944  003022  ECE1  F01C         	call	___ftmul	;wreg free
  6945  003026  C118  F132         	movff	?___ftmul+2,_fround$1202+2
  6946  00302A  C117  F131         	movff	?___ftmul+1,_fround$1202+1
  6947  00302E  C116  F130         	movff	?___ftmul,_fround$1202
  6948                           
  6949                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6950  003032  C130  F116         	movff	_fround$1202,?___ftmul
  6951  003036  C131  F117         	movff	_fround$1202+1,?___ftmul+1
  6952  00303A  C132  F118         	movff	_fround$1202+2,?___ftmul+2
  6953  00303E  0E00               	movlw	0
  6954  003040  0101               	movlb	1	; () banked
  6955  003042  0101               	movlb	1	; () banked
  6956  003044  6F19               	movwf	(?___ftmul+3)& (0+255),b
  6957  003046  0E00               	movlw	0
  6958  003048  0101               	movlb	1	; () banked
  6959  00304A  0101               	movlb	1	; () banked
  6960  00304C  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  6961  00304E  0E3F               	movlw	63
  6962  003050  0101               	movlb	1	; () banked
  6963  003052  0101               	movlb	1	; () banked
  6964  003054  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  6965  003056  ECE1  F01C         	call	___ftmul	;wreg free
  6966  00305A  D0BE               	goto	L12
  6967  00305C                     l10493:
  6968                           
  6969                           ;doprnt.c: 415: else if(prec > 10)
  6970  00305C  0E0A               	movlw	10
  6971  00305E  0101               	movlb	1	; () banked
  6972  003060  0101               	movlb	1	; () banked
  6973  003062  6527               	cpfsgt	fround@prec& (0+255),b
  6974  003064  D092               	goto	l10501
  6975                           
  6976                           ; BSR set to: 1
  6977                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6978  003066  0E00               	movlw	0
  6979  003068  0101               	movlb	1	; () banked
  6980  00306A  0101               	movlb	1	; () banked
  6981  00306C  6F13               	movwf	(?___wmul+3)& (0+255),b
  6982  00306E  0E03               	movlw	3
  6983  003070  0101               	movlb	1	; () banked
  6984  003072  6F12               	movwf	(?___wmul+2)& (0+255),b
  6985  003074  0E00               	movlw	0
  6986  003076  0101               	movlb	1	; () banked
  6987  003078  0101               	movlb	1	; () banked
  6988  00307A  6F03               	movwf	(?___awmod+3)& (0+255),b
  6989  00307C  0E0A               	movlw	10
  6990  00307E  0101               	movlb	1	; () banked
  6991  003080  6F02               	movwf	(?___awmod+2)& (0+255),b
  6992  003082  0101               	movlb	1	; () banked
  6993  003084  0101               	movlb	1	; () banked
  6994  003086  C127  F100         	movff	fround@prec,?___awmod
  6995  00308A  0101               	movlb	1	; () banked
  6996  00308C  0101               	movlb	1	; () banked
  6997  00308E  6B01               	clrf	(?___awmod+1)& (0+255),b
  6998  003090  EC03  F028         	call	___awmod	;wreg free
  6999  003094  0101               	movlb	1	; () banked
  7000  003096  C100  F110         	movff	?___awmod,?___wmul
  7001  00309A  0101               	movlb	1	; () banked
  7002  00309C  C101  F111         	movff	?___awmod+1,?___wmul+1
  7003  0030A0  EC5B  F02E         	call	___wmul	;wreg free
  7004  0030A4  0E28               	movlw	low __npowers_
  7005  0030A6  0101               	movlb	1	; () banked
  7006  0030A8  0101               	movlb	1	; () banked
  7007  0030AA  2510               	addwf	?___wmul& (0+255),w,b
  7008  0030AC  6EF6               	movwf	tblptrl,c
  7009  0030AE  0E08               	movlw	high __npowers_
  7010  0030B0  0101               	movlb	1	; () banked
  7011  0030B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7012  0030B4  6EF7               	movwf	tblptrh,c
  7013  0030B6  0009               	tblrd		*+
  7014  0030B8  CFF5 F12A          	movff	tablat,??_fround
  7015  0030BC  0009               	tblrd		*+
  7016  0030BE  CFF5 F12B          	movff	tablat,??_fround+1
  7017  0030C2  0009               	tblrd		*+
  7018  0030C4  CFF5 F12C          	movff	tablat,??_fround+2
  7019  0030C8  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  7020  0030CC  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  7021  0030D0  C12A  F119         	movff	??_fround,?___ftmul+3
  7022  0030D4  0E00               	movlw	0
  7023  0030D6  0101               	movlb	1	; () banked
  7024  0030D8  0101               	movlb	1	; () banked
  7025  0030DA  6F13               	movwf	(?___wmul+3)& (0+255),b
  7026  0030DC  0E03               	movlw	3
  7027  0030DE  0101               	movlb	1	; () banked
  7028  0030E0  6F12               	movwf	(?___wmul+2)& (0+255),b
  7029  0030E2  0E00               	movlw	0
  7030  0030E4  0101               	movlb	1	; () banked
  7031  0030E6  0101               	movlb	1	; () banked
  7032  0030E8  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7033  0030EA  0E0A               	movlw	10
  7034  0030EC  0101               	movlb	1	; () banked
  7035  0030EE  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7036  0030F0  0101               	movlb	1	; () banked
  7037  0030F2  0101               	movlb	1	; () banked
  7038  0030F4  C127  F107         	movff	fround@prec,?___awdiv
  7039  0030F8  0101               	movlb	1	; () banked
  7040  0030FA  0101               	movlb	1	; () banked
  7041  0030FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  7042  0030FE  EC6E  F023         	call	___awdiv	;wreg free
  7043  003102  0E09               	movlw	9
  7044  003104  0101               	movlb	1	; () banked
  7045  003106  0101               	movlb	1	; () banked
  7046  003108  2507               	addwf	?___awdiv& (0+255),w,b
  7047  00310A  0101               	movlb	1	; () banked
  7048  00310C  0101               	movlb	1	; () banked
  7049  00310E  6F10               	movwf	?___wmul& (0+255),b
  7050  003110  0E00               	movlw	0
  7051  003112  0101               	movlb	1	; () banked
  7052  003114  0101               	movlb	1	; () banked
  7053  003116  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7054  003118  0101               	movlb	1	; () banked
  7055  00311A  6F11               	movwf	(?___wmul+1)& (0+255),b
  7056  00311C  EC5B  F02E         	call	___wmul	;wreg free
  7057  003120  0E28               	movlw	low __npowers_
  7058  003122  0101               	movlb	1	; () banked
  7059  003124  0101               	movlb	1	; () banked
  7060  003126  2510               	addwf	?___wmul& (0+255),w,b
  7061  003128  6EF6               	movwf	tblptrl,c
  7062  00312A  0E08               	movlw	high __npowers_
  7063  00312C  0101               	movlb	1	; () banked
  7064  00312E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7065  003130  6EF7               	movwf	tblptrh,c
  7066  003132  0009               	tblrd		*+
  7067  003134  CFF5 F12D          	movff	tablat,??_fround+3
  7068  003138  0009               	tblrd		*+
  7069  00313A  CFF5 F12E          	movff	tablat,??_fround+4
  7070  00313E  0009               	tblrd		*+
  7071  003140  CFF5 F12F          	movff	tablat,??_fround+5
  7072  003144  C12F  F118         	movff	??_fround+5,?___ftmul+2
  7073  003148  C12E  F117         	movff	??_fround+4,?___ftmul+1
  7074  00314C  C12D  F116         	movff	??_fround+3,?___ftmul
  7075  003150  ECE1  F01C         	call	___ftmul	;wreg free
  7076  003154  C118  F135         	movff	?___ftmul+2,_fround$1201+2
  7077  003158  C117  F134         	movff	?___ftmul+1,_fround$1201+1
  7078  00315C  C116  F133         	movff	?___ftmul,_fround$1201
  7079                           
  7080                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7081  003160  C133  F116         	movff	_fround$1201,?___ftmul
  7082  003164  C134  F117         	movff	_fround$1201+1,?___ftmul+1
  7083  003168  C135  F118         	movff	_fround$1201+2,?___ftmul+2
  7084  00316C  0E00               	movlw	0
  7085  00316E  0101               	movlb	1	; () banked
  7086  003170  0101               	movlb	1	; () banked
  7087  003172  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7088  003174  0E00               	movlw	0
  7089  003176  0101               	movlb	1	; () banked
  7090  003178  0101               	movlb	1	; () banked
  7091  00317A  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7092  00317C  0E3F               	movlw	63
  7093  00317E  0101               	movlb	1	; () banked
  7094  003180  0101               	movlb	1	; () banked
  7095  003182  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7096  003184  ECE1  F01C         	call	___ftmul	;wreg free
  7097  003188  D027               	goto	L12
  7098  00318A                     l10501:
  7099                           
  7100                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7101  00318A  0101               	movlb	1	; () banked
  7102  00318C  0101               	movlb	1	; () banked
  7103  00318E  5127               	movf	fround@prec& (0+255),w,b
  7104  003190  0D03               	mullw	3
  7105  003192  0E28               	movlw	low __npowers_
  7106  003194  24F3               	addwf	prodl,w,c
  7107  003196  6EF6               	movwf	tblptrl,c
  7108  003198  0E08               	movlw	high __npowers_
  7109  00319A  20F4               	addwfc	prodh,w,c
  7110  00319C  6EF7               	movwf	tblptrh,c
  7111  00319E  0009               	tblrd		*+
  7112  0031A0  CFF5 F12A          	movff	tablat,??_fround
  7113  0031A4  0009               	tblrd		*+
  7114  0031A6  CFF5 F12B          	movff	tablat,??_fround+1
  7115  0031AA  0009               	tblrd		*+
  7116  0031AC  CFF5 F12C          	movff	tablat,??_fround+2
  7117  0031B0  C12C  F118         	movff	??_fround+2,?___ftmul+2
  7118  0031B4  C12B  F117         	movff	??_fround+1,?___ftmul+1
  7119  0031B8  C12A  F116         	movff	??_fround,?___ftmul
  7120  0031BC  0E00               	movlw	0
  7121  0031BE  0101               	movlb	1	; () banked
  7122  0031C0  0101               	movlb	1	; () banked
  7123  0031C2  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7124  0031C4  0E00               	movlw	0
  7125  0031C6  0101               	movlb	1	; () banked
  7126  0031C8  0101               	movlb	1	; () banked
  7127  0031CA  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7128  0031CC  0E3F               	movlw	63
  7129  0031CE  0101               	movlb	1	; () banked
  7130  0031D0  0101               	movlb	1	; () banked
  7131  0031D2  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7132  0031D4  ECE1  F01C         	call	___ftmul	;wreg free
  7133  0031D8                     L12:
  7134  0031D8  C118  F129         	movff	?___ftmul+2,?_fround+2
  7135  0031DC  C117  F128         	movff	?___ftmul+1,?_fround+1
  7136  0031E0  C116  F127         	movff	?___ftmul,?_fround
  7137  0031E4  0012               	return	
  7138  0031E6                     __end_of_fround:
  7139                           	opt stack 0
  7140                           tblptru	equ	0xFF8
  7141                           tblptrh	equ	0xFF7
  7142                           tblptrl	equ	0xFF6
  7143                           tablat	equ	0xFF5
  7144                           prodh	equ	0xFF4
  7145                           prodl	equ	0xFF3
  7146                           postinc0	equ	0xFEE
  7147                           wreg	equ	0xFE8
  7148                           indf2	equ	0xFDF
  7149                           postinc2	equ	0xFDE
  7150                           postdec2	equ	0xFDD
  7151                           fsr2h	equ	0xFDA
  7152                           fsr2l	equ	0xFD9
  7153                           status	equ	0xFD8
  7154                           
  7155 ;; *************** function ___wmul *****************
  7156 ;; Defined at:
  7157 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  multiplier      2   16[BANK1 ] unsigned int 
  7160 ;;  multiplicand    2   18[BANK1 ] unsigned int 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  product         2   20[BANK1 ] unsigned int 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  2   16[BANK1 ] unsigned int 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0, prodl, prodh
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7172 ;;      Params:         0       0       4       0       0       0       0       0       0
  7173 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7175 ;;      Totals:         0       0       6       0       0       0       0       0       0
  7176 ;;Total ram usage:        6 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    9
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_fround
  7183 ;;		_scale
  7184 ;;		_sprintf
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text17
  7189  005CB6                     __ptext17:
  7190                           	opt stack 0
  7191  005CB6                     ___wmul:
  7192                           	opt stack 20
  7193                           
  7194                           ;incstack = 0
  7195                           ;incstack = 0
  7196  005CB6  0101               	movlb	1	; () banked
  7197  005CB8  0101               	movlb	1	; () banked
  7198  005CBA  5110               	movf	___wmul@multiplier& (0+255),w,b
  7199  005CBC  0101               	movlb	1	; () banked
  7200  005CBE  0101               	movlb	1	; () banked
  7201  005CC0  0312               	mulwf	___wmul@multiplicand& (0+255),b
  7202  005CC2  CFF3 F114          	movff	prodl,___wmul@product
  7203  005CC6  CFF4 F115          	movff	prodh,___wmul@product+1
  7204  005CCA  0101               	movlb	1	; () banked
  7205  005CCC  0101               	movlb	1	; () banked
  7206  005CCE  5110               	movf	___wmul@multiplier& (0+255),w,b
  7207  005CD0  0101               	movlb	1	; () banked
  7208  005CD2  0101               	movlb	1	; () banked
  7209  005CD4  0313               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7210  005CD6  CFF3 FFF4          	movff	prodl,prodh
  7211  005CDA  6AF3               	clrf	prodl,c
  7212  005CDC  50F3               	movf	prodl,w,c
  7213  005CDE  0101               	movlb	1	; () banked
  7214  005CE0  0101               	movlb	1	; () banked
  7215  005CE2  2714               	addwf	___wmul@product& (0+255),f,b
  7216  005CE4  50F4               	movf	prodh,w,c
  7217  005CE6  0101               	movlb	1	; () banked
  7218  005CE8  0101               	movlb	1	; () banked
  7219  005CEA  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  7220  005CEC  0101               	movlb	1	; () banked
  7221  005CEE  0101               	movlb	1	; () banked
  7222  005CF0  5111               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7223  005CF2  0101               	movlb	1	; () banked
  7224  005CF4  0101               	movlb	1	; () banked
  7225  005CF6  0312               	mulwf	___wmul@multiplicand& (0+255),b
  7226  005CF8  CFF3 FFF4          	movff	prodl,prodh
  7227  005CFC  6AF3               	clrf	prodl,c
  7228  005CFE  50F3               	movf	prodl,w,c
  7229  005D00  0101               	movlb	1	; () banked
  7230  005D02  0101               	movlb	1	; () banked
  7231  005D04  2714               	addwf	___wmul@product& (0+255),f,b
  7232  005D06  50F4               	movf	prodh,w,c
  7233  005D08  0101               	movlb	1	; () banked
  7234  005D0A  0101               	movlb	1	; () banked
  7235  005D0C  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  7236                           
  7237                           ; BSR set to: 1
  7238  005D0E  C114  F110         	movff	___wmul@product,?___wmul
  7239  005D12  C115  F111         	movff	___wmul@product+1,?___wmul+1
  7240                           
  7241                           ; BSR set to: 1
  7242                           
  7243                           ; BSR set to: 1
  7244  005D16  0012               	return	
  7245  005D18                     __end_of___wmul:
  7246                           	opt stack 0
  7247                           tblptru	equ	0xFF8
  7248                           tblptrh	equ	0xFF7
  7249                           tblptrl	equ	0xFF6
  7250                           tablat	equ	0xFF5
  7251                           prodh	equ	0xFF4
  7252                           prodl	equ	0xFF3
  7253                           postinc0	equ	0xFEE
  7254                           wreg	equ	0xFE8
  7255                           indf2	equ	0xFDF
  7256                           postinc2	equ	0xFDE
  7257                           postdec2	equ	0xFDD
  7258                           fsr2h	equ	0xFDA
  7259                           fsr2l	equ	0xFD9
  7260                           status	equ	0xFD8
  7261                           
  7262 ;; *************** function ___awmod *****************
  7263 ;; Defined at:
  7264 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  dividend        2    0[BANK1 ] int 
  7267 ;;  divisor         2    2[BANK1 ] int 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  sign            1    6[BANK1 ] unsigned char 
  7270 ;;  counter         1    5[BANK1 ] unsigned char 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  2    0[BANK1 ] int 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2, status,0
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7280 ;;      Params:         0       0       4       0       0       0       0       0       0
  7281 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7282 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7283 ;;      Totals:         0       0       7       0       0       0       0       0       0
  7284 ;;Total ram usage:        7 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; Hardware stack levels required when called:    9
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_fround
  7291 ;;		_scale
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text18
  7296  005006                     __ptext18:
  7297                           	opt stack 0
  7298  005006                     ___awmod:
  7299                           	opt stack 19
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;incstack = 0
  7303                           ;incstack = 0
  7304  005006  0101               	movlb	1	; () banked
  7305  005008  6F04               	movwf	??___awmod& (0+255),b
  7306  00500A  0E00               	movlw	0
  7307  00500C  0101               	movlb	1	; () banked
  7308  00500E  0101               	movlb	1	; () banked
  7309  005010  6F06               	movwf	___awmod@sign& (0+255),b
  7310  005012  0101               	movlb	1	; () banked
  7311  005014  5104               	movf	??___awmod& (0+255),w,b
  7312                           
  7313                           ; BSR set to: 1
  7314  005016  0101               	movlb	1	; () banked
  7315  005018  0101               	movlb	1	; () banked
  7316  00501A  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7317  00501C  D00F               	goto	l10951
  7318                           
  7319                           ; BSR set to: 1
  7320  00501E  0101               	movlb	1	; () banked
  7321  005020  0101               	movlb	1	; () banked
  7322  005022  6D00               	negf	___awmod@dividend& (0+255),b
  7323  005024  0101               	movlb	1	; () banked
  7324  005026  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  7325  005028  B0D8               	btfsc	status,0,c
  7326  00502A  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  7327                           
  7328                           ; BSR set to: 1
  7329  00502C  0101               	movlb	1	; () banked
  7330  00502E  6F04               	movwf	??___awmod& (0+255),b
  7331  005030  0E01               	movlw	1
  7332  005032  0101               	movlb	1	; () banked
  7333  005034  0101               	movlb	1	; () banked
  7334  005036  6F06               	movwf	___awmod@sign& (0+255),b
  7335  005038  0101               	movlb	1	; () banked
  7336  00503A  5104               	movf	??___awmod& (0+255),w,b
  7337  00503C                     l10951:
  7338                           
  7339                           ; BSR set to: 1
  7340  00503C  0101               	movlb	1	; () banked
  7341  00503E  0101               	movlb	1	; () banked
  7342  005040  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7343  005042  D007               	goto	l10955
  7344                           
  7345                           ; BSR set to: 1
  7346  005044  0101               	movlb	1	; () banked
  7347  005046  0101               	movlb	1	; () banked
  7348  005048  6D02               	negf	___awmod@divisor& (0+255),b
  7349  00504A  0101               	movlb	1	; () banked
  7350  00504C  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  7351  00504E  B0D8               	btfsc	status,0,c
  7352  005050  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  7353  005052                     l10955:
  7354                           
  7355                           ; BSR set to: 1
  7356  005052  0101               	movlb	1	; () banked
  7357  005054  0101               	movlb	1	; () banked
  7358  005056  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7359  005058  1102               	iorwf	___awmod@divisor& (0+255),w,b
  7360  00505A  B4D8               	btfsc	status,2,c
  7361  00505C  D03A               	goto	l10971
  7362                           
  7363                           ; BSR set to: 1
  7364  00505E  0101               	movlb	1	; () banked
  7365  005060  6F04               	movwf	??___awmod& (0+255),b
  7366  005062  0E01               	movlw	1
  7367  005064  0101               	movlb	1	; () banked
  7368  005066  0101               	movlb	1	; () banked
  7369  005068  6F05               	movwf	___awmod@counter& (0+255),b
  7370  00506A  0101               	movlb	1	; () banked
  7371  00506C  5104               	movf	??___awmod& (0+255),w,b
  7372  00506E  D009               	goto	l10961
  7373  005070                     l10959:
  7374                           
  7375                           ; BSR set to: 1
  7376  005070  0101               	movlb	1	; () banked
  7377  005072  0101               	movlb	1	; () banked
  7378  005074  0101               	movlb	1	; () banked
  7379  005076  90D8               	bcf	status,0,c
  7380  005078  3702               	rlcf	___awmod@divisor& (0+255),f,b
  7381  00507A  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7382  00507C  0101               	movlb	1	; () banked
  7383  00507E  0101               	movlb	1	; () banked
  7384  005080  2B05               	incf	___awmod@counter& (0+255),f,b
  7385  005082                     l10961:
  7386                           
  7387                           ; BSR set to: 1
  7388  005082  0101               	movlb	1	; () banked
  7389  005084  0101               	movlb	1	; () banked
  7390  005086  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7391  005088  D7F3               	goto	l10959
  7392  00508A                     l10963:
  7393                           
  7394                           ; BSR set to: 1
  7395  00508A  0101               	movlb	1	; () banked
  7396  00508C  0101               	movlb	1	; () banked
  7397  00508E  5102               	movf	___awmod@divisor& (0+255),w,b
  7398  005090  0101               	movlb	1	; () banked
  7399  005092  0101               	movlb	1	; () banked
  7400  005094  5D00               	subwf	___awmod@dividend& (0+255),w,b
  7401  005096  0101               	movlb	1	; () banked
  7402  005098  0101               	movlb	1	; () banked
  7403  00509A  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7404  00509C  0101               	movlb	1	; () banked
  7405  00509E  0101               	movlb	1	; () banked
  7406  0050A0  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7407  0050A2  A0D8               	btfss	status,0,c
  7408  0050A4  D00C               	goto	l10967
  7409                           
  7410                           ; BSR set to: 1
  7411  0050A6  0101               	movlb	1	; () banked
  7412  0050A8  0101               	movlb	1	; () banked
  7413  0050AA  5102               	movf	___awmod@divisor& (0+255),w,b
  7414  0050AC  0101               	movlb	1	; () banked
  7415  0050AE  0101               	movlb	1	; () banked
  7416  0050B0  5F00               	subwf	___awmod@dividend& (0+255),f,b
  7417  0050B2  0101               	movlb	1	; () banked
  7418  0050B4  0101               	movlb	1	; () banked
  7419  0050B6  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7420  0050B8  0101               	movlb	1	; () banked
  7421  0050BA  0101               	movlb	1	; () banked
  7422  0050BC  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7423  0050BE                     l10967:
  7424                           
  7425                           ; BSR set to: 1
  7426  0050BE  0101               	movlb	1	; () banked
  7427  0050C0  0101               	movlb	1	; () banked
  7428  0050C2  0101               	movlb	1	; () banked
  7429  0050C4  90D8               	bcf	status,0,c
  7430  0050C6  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7431  0050C8  3302               	rrcf	___awmod@divisor& (0+255),f,b
  7432                           
  7433                           ; BSR set to: 1
  7434  0050CA  0101               	movlb	1	; () banked
  7435  0050CC  0101               	movlb	1	; () banked
  7436  0050CE  2F05               	decfsz	___awmod@counter& (0+255),f,b
  7437  0050D0  D7DC               	goto	l10963
  7438  0050D2                     l10971:
  7439                           
  7440                           ; BSR set to: 1
  7441  0050D2  0101               	movlb	1	; () banked
  7442  0050D4  0101               	movlb	1	; () banked
  7443  0050D6  5106               	movf	___awmod@sign& (0+255),w,b
  7444  0050D8  B4D8               	btfsc	status,2,c
  7445  0050DA  D007               	goto	l10975
  7446                           
  7447                           ; BSR set to: 1
  7448  0050DC  0101               	movlb	1	; () banked
  7449  0050DE  0101               	movlb	1	; () banked
  7450  0050E0  6D00               	negf	___awmod@dividend& (0+255),b
  7451  0050E2  0101               	movlb	1	; () banked
  7452  0050E4  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  7453  0050E6  B0D8               	btfsc	status,0,c
  7454  0050E8  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  7455  0050EA                     l10975:
  7456                           
  7457                           ; BSR set to: 1
  7458  0050EA  C100  F100         	movff	___awmod@dividend,?___awmod
  7459  0050EE  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  7460                           
  7461                           ; BSR set to: 1
  7462                           
  7463                           ; BSR set to: 1
  7464  0050F2  0012               	return	
  7465  0050F4                     __end_of___awmod:
  7466                           	opt stack 0
  7467                           tblptru	equ	0xFF8
  7468                           tblptrh	equ	0xFF7
  7469                           tblptrl	equ	0xFF6
  7470                           tablat	equ	0xFF5
  7471                           prodh	equ	0xFF4
  7472                           prodl	equ	0xFF3
  7473                           postinc0	equ	0xFEE
  7474                           wreg	equ	0xFE8
  7475                           indf2	equ	0xFDF
  7476                           postinc2	equ	0xFDE
  7477                           postdec2	equ	0xFDD
  7478                           fsr2h	equ	0xFDA
  7479                           fsr2l	equ	0xFD9
  7480                           status	equ	0xFD8
  7481                           
  7482 ;; *************** function ___awdiv *****************
  7483 ;; Defined at:
  7484 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  dividend        2    7[BANK1 ] int 
  7487 ;;  divisor         2    9[BANK1 ] int 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  quotient        2   14[BANK1 ] int 
  7490 ;;  sign            1   13[BANK1 ] unsigned char 
  7491 ;;  counter         1   12[BANK1 ] unsigned char 
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  2    7[BANK1 ] int 
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7501 ;;      Params:         0       0       4       0       0       0       0       0       0
  7502 ;;      Locals:         0       0       4       0       0       0       0       0       0
  7503 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7504 ;;      Totals:         0       0       9       0       0       0       0       0       0
  7505 ;;Total ram usage:        9 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    9
  7508 ;; This function calls:
  7509 ;;		Nothing
  7510 ;; This function is called by:
  7511 ;;		_fround
  7512 ;;		_scale
  7513 ;;		_sprintf
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text19
  7518  0046DC                     __ptext19:
  7519                           	opt stack 0
  7520  0046DC                     ___awdiv:
  7521                           	opt stack 20
  7522                           
  7523                           ; BSR set to: 1
  7524                           ;incstack = 0
  7525                           ;incstack = 0
  7526  0046DC  0101               	movlb	1	; () banked
  7527  0046DE  6F0B               	movwf	??___awdiv& (0+255),b
  7528  0046E0  0E00               	movlw	0
  7529  0046E2  0101               	movlb	1	; () banked
  7530  0046E4  0101               	movlb	1	; () banked
  7531  0046E6  6F0D               	movwf	___awdiv@sign& (0+255),b
  7532  0046E8  0101               	movlb	1	; () banked
  7533  0046EA  510B               	movf	??___awdiv& (0+255),w,b
  7534                           
  7535                           ; BSR set to: 1
  7536  0046EC  0101               	movlb	1	; () banked
  7537  0046EE  0101               	movlb	1	; () banked
  7538  0046F0  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7539  0046F2  D00F               	goto	l10907
  7540                           
  7541                           ; BSR set to: 1
  7542  0046F4  0101               	movlb	1	; () banked
  7543  0046F6  0101               	movlb	1	; () banked
  7544  0046F8  6D09               	negf	___awdiv@divisor& (0+255),b
  7545  0046FA  0101               	movlb	1	; () banked
  7546  0046FC  1F0A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7547  0046FE  B0D8               	btfsc	status,0,c
  7548  004700  2B0A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7549                           
  7550                           ; BSR set to: 1
  7551  004702  0101               	movlb	1	; () banked
  7552  004704  6F0B               	movwf	??___awdiv& (0+255),b
  7553  004706  0E01               	movlw	1
  7554  004708  0101               	movlb	1	; () banked
  7555  00470A  0101               	movlb	1	; () banked
  7556  00470C  6F0D               	movwf	___awdiv@sign& (0+255),b
  7557  00470E  0101               	movlb	1	; () banked
  7558  004710  510B               	movf	??___awdiv& (0+255),w,b
  7559  004712                     l10907:
  7560                           
  7561                           ; BSR set to: 1
  7562  004712  0101               	movlb	1	; () banked
  7563  004714  0101               	movlb	1	; () banked
  7564  004716  AF08               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7565  004718  D00B               	goto	l10913
  7566                           
  7567                           ; BSR set to: 1
  7568  00471A  0101               	movlb	1	; () banked
  7569  00471C  0101               	movlb	1	; () banked
  7570  00471E  6D07               	negf	___awdiv@dividend& (0+255),b
  7571  004720  0101               	movlb	1	; () banked
  7572  004722  1F08               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7573  004724  B0D8               	btfsc	status,0,c
  7574  004726  2B08               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7575                           
  7576                           ; BSR set to: 1
  7577  004728  0E01               	movlw	1
  7578  00472A  0101               	movlb	1	; () banked
  7579  00472C  0101               	movlb	1	; () banked
  7580  00472E  1B0D               	xorwf	___awdiv@sign& (0+255),f,b
  7581  004730                     l10913:
  7582                           
  7583                           ; BSR set to: 1
  7584  004730  0E00               	movlw	0
  7585  004732  0101               	movlb	1	; () banked
  7586  004734  0101               	movlb	1	; () banked
  7587  004736  6F0F               	movwf	(___awdiv@quotient+1)& (0+255),b
  7588  004738  0E00               	movlw	0
  7589  00473A  0101               	movlb	1	; () banked
  7590  00473C  6F0E               	movwf	___awdiv@quotient& (0+255),b
  7591                           
  7592                           ; BSR set to: 1
  7593  00473E  0101               	movlb	1	; () banked
  7594  004740  0101               	movlb	1	; () banked
  7595  004742  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7596  004744  1109               	iorwf	___awdiv@divisor& (0+255),w,b
  7597  004746  B4D8               	btfsc	status,2,c
  7598  004748  D043               	goto	l10935
  7599                           
  7600                           ; BSR set to: 1
  7601  00474A  0101               	movlb	1	; () banked
  7602  00474C  6F0B               	movwf	??___awdiv& (0+255),b
  7603  00474E  0E01               	movlw	1
  7604  004750  0101               	movlb	1	; () banked
  7605  004752  0101               	movlb	1	; () banked
  7606  004754  6F0C               	movwf	___awdiv@counter& (0+255),b
  7607  004756  0101               	movlb	1	; () banked
  7608  004758  510B               	movf	??___awdiv& (0+255),w,b
  7609  00475A  D009               	goto	l10921
  7610  00475C                     l10919:
  7611                           
  7612                           ; BSR set to: 1
  7613  00475C  0101               	movlb	1	; () banked
  7614  00475E  0101               	movlb	1	; () banked
  7615  004760  0101               	movlb	1	; () banked
  7616  004762  90D8               	bcf	status,0,c
  7617  004764  3709               	rlcf	___awdiv@divisor& (0+255),f,b
  7618  004766  370A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7619  004768  0101               	movlb	1	; () banked
  7620  00476A  0101               	movlb	1	; () banked
  7621  00476C  2B0C               	incf	___awdiv@counter& (0+255),f,b
  7622  00476E                     l10921:
  7623                           
  7624                           ; BSR set to: 1
  7625  00476E  0101               	movlb	1	; () banked
  7626  004770  0101               	movlb	1	; () banked
  7627  004772  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7628  004774  D7F3               	goto	l10919
  7629  004776                     l10923:
  7630                           
  7631                           ; BSR set to: 1
  7632  004776  0101               	movlb	1	; () banked
  7633  004778  0101               	movlb	1	; () banked
  7634  00477A  0101               	movlb	1	; () banked
  7635  00477C  90D8               	bcf	status,0,c
  7636  00477E  370E               	rlcf	___awdiv@quotient& (0+255),f,b
  7637  004780  370F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7638                           
  7639                           ; BSR set to: 1
  7640  004782  0101               	movlb	1	; () banked
  7641  004784  0101               	movlb	1	; () banked
  7642  004786  5109               	movf	___awdiv@divisor& (0+255),w,b
  7643  004788  0101               	movlb	1	; () banked
  7644  00478A  0101               	movlb	1	; () banked
  7645  00478C  5D07               	subwf	___awdiv@dividend& (0+255),w,b
  7646  00478E  0101               	movlb	1	; () banked
  7647  004790  0101               	movlb	1	; () banked
  7648  004792  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7649  004794  0101               	movlb	1	; () banked
  7650  004796  0101               	movlb	1	; () banked
  7651  004798  5908               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7652  00479A  A0D8               	btfss	status,0,c
  7653  00479C  D00F               	goto	l10931
  7654                           
  7655                           ; BSR set to: 1
  7656  00479E  0101               	movlb	1	; () banked
  7657  0047A0  0101               	movlb	1	; () banked
  7658  0047A2  5109               	movf	___awdiv@divisor& (0+255),w,b
  7659  0047A4  0101               	movlb	1	; () banked
  7660  0047A6  0101               	movlb	1	; () banked
  7661  0047A8  5F07               	subwf	___awdiv@dividend& (0+255),f,b
  7662  0047AA  0101               	movlb	1	; () banked
  7663  0047AC  0101               	movlb	1	; () banked
  7664  0047AE  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7665  0047B0  0101               	movlb	1	; () banked
  7666  0047B2  0101               	movlb	1	; () banked
  7667  0047B4  5B08               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7668                           
  7669                           ; BSR set to: 1
  7670  0047B6  0101               	movlb	1	; () banked
  7671  0047B8  0101               	movlb	1	; () banked
  7672  0047BA  810E               	bsf	___awdiv@quotient& (0+255),0,b
  7673  0047BC                     l10931:
  7674                           
  7675                           ; BSR set to: 1
  7676  0047BC  0101               	movlb	1	; () banked
  7677  0047BE  0101               	movlb	1	; () banked
  7678  0047C0  0101               	movlb	1	; () banked
  7679  0047C2  90D8               	bcf	status,0,c
  7680  0047C4  330A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7681  0047C6  3309               	rrcf	___awdiv@divisor& (0+255),f,b
  7682                           
  7683                           ; BSR set to: 1
  7684  0047C8  0101               	movlb	1	; () banked
  7685  0047CA  0101               	movlb	1	; () banked
  7686  0047CC  2F0C               	decfsz	___awdiv@counter& (0+255),f,b
  7687  0047CE  D7D3               	goto	l10923
  7688  0047D0                     l10935:
  7689                           
  7690                           ; BSR set to: 1
  7691  0047D0  0101               	movlb	1	; () banked
  7692  0047D2  0101               	movlb	1	; () banked
  7693  0047D4  510D               	movf	___awdiv@sign& (0+255),w,b
  7694  0047D6  B4D8               	btfsc	status,2,c
  7695  0047D8  D007               	goto	l10939
  7696                           
  7697                           ; BSR set to: 1
  7698  0047DA  0101               	movlb	1	; () banked
  7699  0047DC  0101               	movlb	1	; () banked
  7700  0047DE  6D0E               	negf	___awdiv@quotient& (0+255),b
  7701  0047E0  0101               	movlb	1	; () banked
  7702  0047E2  1F0F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7703  0047E4  B0D8               	btfsc	status,0,c
  7704  0047E6  2B0F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7705  0047E8                     l10939:
  7706                           
  7707                           ; BSR set to: 1
  7708  0047E8  C10E  F107         	movff	___awdiv@quotient,?___awdiv
  7709  0047EC  C10F  F108         	movff	___awdiv@quotient+1,?___awdiv+1
  7710                           
  7711                           ; BSR set to: 1
  7712                           
  7713                           ; BSR set to: 1
  7714  0047F0  0012               	return	
  7715  0047F2                     __end_of___awdiv:
  7716                           	opt stack 0
  7717                           tblptru	equ	0xFF8
  7718                           tblptrh	equ	0xFF7
  7719                           tblptrl	equ	0xFF6
  7720                           tablat	equ	0xFF5
  7721                           prodh	equ	0xFF4
  7722                           prodl	equ	0xFF3
  7723                           postinc0	equ	0xFEE
  7724                           wreg	equ	0xFE8
  7725                           indf2	equ	0xFDF
  7726                           postinc2	equ	0xFDE
  7727                           postdec2	equ	0xFDD
  7728                           fsr2h	equ	0xFDA
  7729                           fsr2l	equ	0xFD9
  7730                           status	equ	0xFD8
  7731                           
  7732 ;; *************** function _Read_LDR *****************
  7733 ;; Defined at:
  7734 ;;		line 281 in file "main.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;		None
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;  analog_readi    3   63[BANK1 ] float 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  3   56[BANK1 ] float 
  7741 ;; Registers used:
  7742 ;;		wreg, status,2, status,0, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7748 ;;      Params:         0       0       3       0       0       0       0       0       0
  7749 ;;      Locals:         0       0       3       0       0       0       0       0       0
  7750 ;;      Temps:          0       0       4       0       0       0       0       0       0
  7751 ;;      Totals:         0       0      10       0       0       0       0       0       0
  7752 ;;Total ram usage:       10 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:   11
  7755 ;; This function calls:
  7756 ;;		___ftdiv
  7757 ;;		___ftmul
  7758 ;;		___awtoft
  7759 ;; This function is called by:
  7760 ;;		_main
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text20
  7765  004C2C                     __ptext20:
  7766                           	opt stack 0
  7767  004C2C                     _Read_LDR:
  7768                           	opt stack 19
  7769                           
  7770                           ;main.c: 282: float analog_reading = 0;
  7771                           
  7772                           ; BSR set to: 1
  7773                           ;incstack = 0
  7774                           ;incstack = 0
  7775  004C2C  0E00               	movlw	0
  7776  004C2E  0101               	movlb	1	; () banked
  7777  004C30  0101               	movlb	1	; () banked
  7778  004C32  6F3F               	movwf	Read_LDR@analog_reading& (0+255),b
  7779  004C34  0E00               	movlw	0
  7780  004C36  0101               	movlb	1	; () banked
  7781  004C38  0101               	movlb	1	; () banked
  7782  004C3A  6F40               	movwf	(Read_LDR@analog_reading+1)& (0+255),b
  7783  004C3C  0E00               	movlw	0
  7784  004C3E  0101               	movlb	1	; () banked
  7785  004C40  0101               	movlb	1	; () banked
  7786  004C42  6F41               	movwf	(Read_LDR@analog_reading+2)& (0+255),b
  7787                           
  7788                           ; BSR set to: 1
  7789                           ;main.c: 283: ADCON0 |= ((1 << ADON) | (1 << GO));
  7790  004C44  0E00               	movlw	0
  7791  004C46  B2C2               	btfsc	4034,1,c	;volatile
  7792  004C48  0E01               	movlw	1
  7793  004C4A  0101               	movlb	1	; () banked
  7794  004C4C  6F3B               	movwf	??_Read_LDR& (0+255),b
  7795  004C4E  0E01               	movlw	1
  7796  004C50  0101               	movlb	1	; () banked
  7797  004C52  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  7798  004C54  0101               	movlb	1	; () banked
  7799  004C56  2B3B               	incf	??_Read_LDR& (0+255),f,b
  7800  004C58  D003               	goto	u8874
  7801  004C5A                     u8875:
  7802  004C5A  0101               	movlb	1	; () banked
  7803  004C5C  90D8               	bcf	status,0,c
  7804  004C5E  373C               	rlcf	(??_Read_LDR+1)& (0+255),f,b
  7805  004C60                     u8874:
  7806  004C60  0101               	movlb	1	; () banked
  7807  004C62  2F3B               	decfsz	??_Read_LDR& (0+255),f,b
  7808  004C64  D7FA               	goto	u8875
  7809  004C66  0E00               	movlw	0
  7810  004C68  B0C2               	btfsc	4034,0,c	;volatile
  7811  004C6A  0E01               	movlw	1
  7812  004C6C  0101               	movlb	1	; () banked
  7813  004C6E  6F3D               	movwf	(??_Read_LDR+2)& (0+255),b
  7814  004C70  0E01               	movlw	1
  7815  004C72  0101               	movlb	1	; () banked
  7816  004C74  6F3E               	movwf	(??_Read_LDR+3)& (0+255),b
  7817  004C76  0101               	movlb	1	; () banked
  7818  004C78  2B3D               	incf	(??_Read_LDR+2)& (0+255),f,b
  7819  004C7A  D003               	goto	u8884
  7820  004C7C                     u8885:
  7821  004C7C  0101               	movlb	1	; () banked
  7822  004C7E  90D8               	bcf	status,0,c
  7823  004C80  373E               	rlcf	(??_Read_LDR+3)& (0+255),f,b
  7824  004C82                     u8884:
  7825  004C82  0101               	movlb	1	; () banked
  7826  004C84  2F3D               	decfsz	(??_Read_LDR+2)& (0+255),f,b
  7827  004C86  D7FA               	goto	u8885
  7828  004C88  0101               	movlb	1	; () banked
  7829  004C8A  513E               	movf	(??_Read_LDR+3)& (0+255),w,b
  7830  004C8C  0101               	movlb	1	; () banked
  7831  004C8E  113C               	iorwf	(??_Read_LDR+1)& (0+255),w,b
  7832  004C90  12C2               	iorwf	4034,f,c	;volatile
  7833  004C92                     l223:
  7834  004C92  B2C2               	btfsc	4034,1,c	;volatile
  7835  004C94  D7FE               	goto	l223
  7836                           
  7837                           ;main.c: 285: analog_reading = (ADRESH * 256) + (ADRESL);
  7838  004C96  50C4               	movf	4036,w,c	;volatile
  7839  004C98  0101               	movlb	1	; () banked
  7840  004C9A  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  7841  004C9C  6B3B               	clrf	??_Read_LDR& (0+255),b
  7842  004C9E  50C3               	movf	4035,w,c	;volatile
  7843  004CA0  0101               	movlb	1	; () banked
  7844  004CA2  253B               	addwf	??_Read_LDR& (0+255),w,b
  7845  004CA4  0101               	movlb	1	; () banked
  7846  004CA6  0101               	movlb	1	; () banked
  7847  004CA8  6F08               	movwf	?___awtoft& (0+255),b
  7848  004CAA  0E00               	movlw	0
  7849  004CAC  0101               	movlb	1	; () banked
  7850  004CAE  213C               	addwfc	(??_Read_LDR+1)& (0+255),w,b
  7851  004CB0  0101               	movlb	1	; () banked
  7852  004CB2  6F09               	movwf	(?___awtoft+1)& (0+255),b
  7853  004CB4  EC89  F02D         	call	___awtoft	;wreg free
  7854  004CB8  C10A  F141         	movff	?___awtoft+2,Read_LDR@analog_reading+2
  7855  004CBC  C109  F140         	movff	?___awtoft+1,Read_LDR@analog_reading+1
  7856  004CC0  C108  F13F         	movff	?___awtoft,Read_LDR@analog_reading
  7857                           
  7858                           ;main.c: 286: analog_reading = analog_reading*5/1023;
  7859  004CC4  0E00               	movlw	0
  7860  004CC6  0101               	movlb	1	; () banked
  7861  004CC8  0101               	movlb	1	; () banked
  7862  004CCA  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7863  004CCC  0EA0               	movlw	160
  7864  004CCE  0101               	movlb	1	; () banked
  7865  004CD0  0101               	movlb	1	; () banked
  7866  004CD2  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7867  004CD4  0E40               	movlw	64
  7868  004CD6  0101               	movlb	1	; () banked
  7869  004CD8  0101               	movlb	1	; () banked
  7870  004CDA  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7871  004CDC  C13F  F116         	movff	Read_LDR@analog_reading,?___ftmul
  7872  004CE0  C140  F117         	movff	Read_LDR@analog_reading+1,?___ftmul+1
  7873  004CE4  C141  F118         	movff	Read_LDR@analog_reading+2,?___ftmul+2
  7874  004CE8  ECE1  F01C         	call	___ftmul	;wreg free
  7875  004CEC  C118  F129         	movff	?___ftmul+2,?___ftdiv+2
  7876  004CF0  C117  F128         	movff	?___ftmul+1,?___ftdiv+1
  7877  004CF4  C116  F127         	movff	?___ftmul,?___ftdiv
  7878  004CF8  0EC0               	movlw	192
  7879  004CFA  0101               	movlb	1	; () banked
  7880  004CFC  0101               	movlb	1	; () banked
  7881  004CFE  6F2A               	movwf	(?___ftdiv+3)& (0+255),b
  7882  004D00  0E7F               	movlw	127
  7883  004D02  0101               	movlb	1	; () banked
  7884  004D04  0101               	movlb	1	; () banked
  7885  004D06  6F2B               	movwf	(?___ftdiv+4)& (0+255),b
  7886  004D08  0E44               	movlw	68
  7887  004D0A  0101               	movlb	1	; () banked
  7888  004D0C  0101               	movlb	1	; () banked
  7889  004D0E  6F2C               	movwf	(?___ftdiv+5)& (0+255),b
  7890  004D10  ECA8  F01F         	call	___ftdiv	;wreg free
  7891  004D14  C129  F141         	movff	?___ftdiv+2,Read_LDR@analog_reading+2
  7892  004D18  C128  F140         	movff	?___ftdiv+1,Read_LDR@analog_reading+1
  7893  004D1C  C127  F13F         	movff	?___ftdiv,Read_LDR@analog_reading
  7894                           
  7895                           ;main.c: 287: return analog_reading;
  7896  004D20  C13F  F138         	movff	Read_LDR@analog_reading,?_Read_LDR
  7897  004D24  C140  F139         	movff	Read_LDR@analog_reading+1,?_Read_LDR+1
  7898  004D28  C141  F13A         	movff	Read_LDR@analog_reading+2,?_Read_LDR+2
  7899  004D2C  0012               	return	
  7900  004D2E                     __end_of_Read_LDR:
  7901                           	opt stack 0
  7902                           tblptru	equ	0xFF8
  7903                           tblptrh	equ	0xFF7
  7904                           tblptrl	equ	0xFF6
  7905                           tablat	equ	0xFF5
  7906                           prodh	equ	0xFF4
  7907                           prodl	equ	0xFF3
  7908                           postinc0	equ	0xFEE
  7909                           wreg	equ	0xFE8
  7910                           indf2	equ	0xFDF
  7911                           postinc2	equ	0xFDE
  7912                           postdec2	equ	0xFDD
  7913                           fsr2h	equ	0xFDA
  7914                           fsr2l	equ	0xFD9
  7915                           status	equ	0xFD8
  7916                           
  7917 ;; *************** function ___awtoft *****************
  7918 ;; Defined at:
  7919 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  c               2    8[BANK1 ] int 
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;  sign            1   12[BANK1 ] unsigned char 
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  3    8[BANK1 ] float 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0, cstack
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7933 ;;      Params:         0       0       3       0       0       0       0       0       0
  7934 ;;      Locals:         0       0       1       0       0       0       0       0       0
  7935 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7936 ;;      Totals:         0       0       5       0       0       0       0       0       0
  7937 ;;Total ram usage:        5 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:   10
  7940 ;; This function calls:
  7941 ;;		___ftpack
  7942 ;; This function is called by:
  7943 ;;		_Read_LDR
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text21
  7948  005B12                     __ptext21:
  7949                           	opt stack 0
  7950  005B12                     ___awtoft:
  7951                           	opt stack 19
  7952                           
  7953                           ;incstack = 0
  7954                           ;incstack = 0
  7955  005B12  0101               	movlb	1	; () banked
  7956  005B14  6F0B               	movwf	??___awtoft& (0+255),b
  7957  005B16  0E00               	movlw	0
  7958  005B18  0101               	movlb	1	; () banked
  7959  005B1A  0101               	movlb	1	; () banked
  7960  005B1C  6F0C               	movwf	___awtoft@sign& (0+255),b
  7961  005B1E  0101               	movlb	1	; () banked
  7962  005B20  510B               	movf	??___awtoft& (0+255),w,b
  7963                           
  7964                           ; BSR set to: 1
  7965  005B22  0101               	movlb	1	; () banked
  7966  005B24  0101               	movlb	1	; () banked
  7967  005B26  AF09               	btfss	(___awtoft@c+1)& (0+255),7,b
  7968  005B28  D00F               	goto	l10987
  7969                           
  7970                           ; BSR set to: 1
  7971  005B2A  0101               	movlb	1	; () banked
  7972  005B2C  0101               	movlb	1	; () banked
  7973  005B2E  6D08               	negf	___awtoft@c& (0+255),b
  7974  005B30  0101               	movlb	1	; () banked
  7975  005B32  1F09               	comf	(___awtoft@c+1)& (0+255),f,b
  7976  005B34  B0D8               	btfsc	status,0,c
  7977  005B36  2B09               	incf	(___awtoft@c+1)& (0+255),f,b
  7978                           
  7979                           ; BSR set to: 1
  7980  005B38  0101               	movlb	1	; () banked
  7981  005B3A  6F0B               	movwf	??___awtoft& (0+255),b
  7982  005B3C  0E01               	movlw	1
  7983  005B3E  0101               	movlb	1	; () banked
  7984  005B40  0101               	movlb	1	; () banked
  7985  005B42  6F0C               	movwf	___awtoft@sign& (0+255),b
  7986  005B44  0101               	movlb	1	; () banked
  7987  005B46  510B               	movf	??___awtoft& (0+255),w,b
  7988  005B48                     l10987:
  7989                           
  7990                           ; BSR set to: 1
  7991  005B48  0101               	movlb	1	; () banked
  7992  005B4A  0101               	movlb	1	; () banked
  7993  005B4C  C108  F100         	movff	___awtoft@c,?___ftpack
  7994  005B50  0101               	movlb	1	; () banked
  7995  005B52  0101               	movlb	1	; () banked
  7996  005B54  C109  F101         	movff	___awtoft@c+1,?___ftpack+1
  7997  005B58  0101               	movlb	1	; () banked
  7998  005B5A  0101               	movlb	1	; () banked
  7999  005B5C  6B02               	clrf	(?___ftpack+2)& (0+255),b
  8000  005B5E  0101               	movlb	1	; () banked
  8001  005B60  6F0B               	movwf	??___awtoft& (0+255),b
  8002  005B62  0E8E               	movlw	142
  8003  005B64  0101               	movlb	1	; () banked
  8004  005B66  0101               	movlb	1	; () banked
  8005  005B68  6F03               	movwf	(?___ftpack+3)& (0+255),b
  8006  005B6A  0101               	movlb	1	; () banked
  8007  005B6C  510B               	movf	??___awtoft& (0+255),w,b
  8008  005B6E  C10C  F104         	movff	___awtoft@sign,?___ftpack+4
  8009  005B72  EC30  F022         	call	___ftpack	;wreg free
  8010  005B76  C102  F10A         	movff	?___ftpack+2,?___awtoft+2
  8011  005B7A  C101  F109         	movff	?___ftpack+1,?___awtoft+1
  8012  005B7E  C100  F108         	movff	?___ftpack,?___awtoft
  8013  005B82  0012               	return	
  8014  005B84                     __end_of___awtoft:
  8015                           	opt stack 0
  8016                           tblptru	equ	0xFF8
  8017                           tblptrh	equ	0xFF7
  8018                           tblptrl	equ	0xFF6
  8019                           tablat	equ	0xFF5
  8020                           prodh	equ	0xFF4
  8021                           prodl	equ	0xFF3
  8022                           postinc0	equ	0xFEE
  8023                           wreg	equ	0xFE8
  8024                           indf2	equ	0xFDF
  8025                           postinc2	equ	0xFDE
  8026                           postdec2	equ	0xFDD
  8027                           fsr2h	equ	0xFDA
  8028                           fsr2l	equ	0xFD9
  8029                           status	equ	0xFD8
  8030                           
  8031 ;; *************** function ___ftmul *****************
  8032 ;; Defined at:
  8033 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;  f1              3   22[BANK1 ] float 
  8036 ;;  f2              3   25[BANK1 ] float 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  f3_as_produc    3   34[BANK1 ] unsigned um
  8039 ;;  sign            1   38[BANK1 ] unsigned char 
  8040 ;;  cntr            1   37[BANK1 ] unsigned char 
  8041 ;;  exp             1   33[BANK1 ] unsigned char 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  3   22[BANK1 ] float 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0, cstack
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8051 ;;      Params:         0       0       6       0       0       0       0       0       0
  8052 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8053 ;;      Temps:          0       0       5       0       0       0       0       0       0
  8054 ;;      Totals:         0       0      17       0       0       0       0       0       0
  8055 ;;Total ram usage:       17 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:   10
  8058 ;; This function calls:
  8059 ;;		___ftpack
  8060 ;; This function is called by:
  8061 ;;		_Read_LDR
  8062 ;;		_fround
  8063 ;;		_scale
  8064 ;;		_sprintf
  8065 ;;		___asftmul
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           	psect	text22
  8070  0039C2                     __ptext22:
  8071                           	opt stack 0
  8072  0039C2                     ___ftmul:
  8073                           	opt stack 19
  8074                           
  8075                           ;incstack = 0
  8076                           ;incstack = 0
  8077  0039C2  0E0F               	movlw	15
  8078  0039C4  0101               	movlb	1	; () banked
  8079  0039C6  6F1C               	movwf	??___ftmul& (0+255),b
  8080  0039C8  0101               	movlb	1	; () banked
  8081  0039CA  C116  F11D         	movff	___ftmul@f1,??___ftmul+1
  8082  0039CE  0101               	movlb	1	; () banked
  8083  0039D0  C117  F11E         	movff	___ftmul@f1+1,??___ftmul+2
  8084  0039D4  0101               	movlb	1	; () banked
  8085  0039D6  C118  F11F         	movff	___ftmul@f1+2,??___ftmul+3
  8086  0039DA  0101               	movlb	1	; () banked
  8087  0039DC  291C               	incf	??___ftmul& (0+255),w,b
  8088  0039DE  0101               	movlb	1	; () banked
  8089  0039E0  6F20               	movwf	(??___ftmul+4)& (0+255),b
  8090  0039E2  D005               	goto	u10060
  8091  0039E4                     u10065:
  8092  0039E4  0101               	movlb	1	; () banked
  8093  0039E6  90D8               	bcf	status,0,c
  8094  0039E8  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  8095  0039EA  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  8096  0039EC  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  8097  0039EE                     u10060:
  8098  0039EE  0101               	movlb	1	; () banked
  8099  0039F0  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  8100  0039F2  D7F8               	goto	u10065
  8101  0039F4  0101               	movlb	1	; () banked
  8102  0039F6  511D               	movf	(??___ftmul+1)& (0+255),w,b
  8103  0039F8  0101               	movlb	1	; () banked
  8104  0039FA  0101               	movlb	1	; () banked
  8105  0039FC  6F21               	movwf	___ftmul@exp& (0+255),b
  8106  0039FE  0101               	movlb	1	; () banked
  8107  003A00  6721               	tstfsz	___ftmul@exp& (0+255),b
  8108  003A02  D001               	goto	l10847
  8109  003A04  D021               	goto	u10090
  8110  003A06                     l10847:
  8111                           
  8112                           ; BSR set to: 1
  8113  003A06  0E0F               	movlw	15
  8114  003A08  0101               	movlb	1	; () banked
  8115  003A0A  6F1C               	movwf	??___ftmul& (0+255),b
  8116  003A0C  0101               	movlb	1	; () banked
  8117  003A0E  C119  F11D         	movff	___ftmul@f2,??___ftmul+1
  8118  003A12  0101               	movlb	1	; () banked
  8119  003A14  C11A  F11E         	movff	___ftmul@f2+1,??___ftmul+2
  8120  003A18  0101               	movlb	1	; () banked
  8121  003A1A  C11B  F11F         	movff	___ftmul@f2+2,??___ftmul+3
  8122  003A1E  0101               	movlb	1	; () banked
  8123  003A20  291C               	incf	??___ftmul& (0+255),w,b
  8124  003A22  0101               	movlb	1	; () banked
  8125  003A24  6F20               	movwf	(??___ftmul+4)& (0+255),b
  8126  003A26  D005               	goto	u10080
  8127  003A28                     u10085:
  8128  003A28  0101               	movlb	1	; () banked
  8129  003A2A  90D8               	bcf	status,0,c
  8130  003A2C  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  8131  003A2E  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  8132  003A30  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  8133  003A32                     u10080:
  8134  003A32  0101               	movlb	1	; () banked
  8135  003A34  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  8136  003A36  D7F8               	goto	u10085
  8137  003A38  0101               	movlb	1	; () banked
  8138  003A3A  511D               	movf	(??___ftmul+1)& (0+255),w,b
  8139  003A3C  0101               	movlb	1	; () banked
  8140  003A3E  0101               	movlb	1	; () banked
  8141  003A40  6F26               	movwf	___ftmul@sign& (0+255),b
  8142  003A42  0101               	movlb	1	; () banked
  8143  003A44  6726               	tstfsz	___ftmul@sign& (0+255),b
  8144  003A46  D00D               	goto	l10853
  8145  003A48                     u10090:
  8146                           
  8147                           ; BSR set to: 1
  8148  003A48  0E00               	movlw	0
  8149  003A4A  0101               	movlb	1	; () banked
  8150  003A4C  0101               	movlb	1	; () banked
  8151  003A4E  6F16               	movwf	?___ftmul& (0+255),b
  8152  003A50  0E00               	movlw	0
  8153  003A52  0101               	movlb	1	; () banked
  8154  003A54  0101               	movlb	1	; () banked
  8155  003A56  6F17               	movwf	(?___ftmul+1)& (0+255),b
  8156  003A58  0E00               	movlw	0
  8157  003A5A  0101               	movlb	1	; () banked
  8158  003A5C  0101               	movlb	1	; () banked
  8159  003A5E  6F18               	movwf	(?___ftmul+2)& (0+255),b
  8160  003A60  D0A6               	goto	l774
  8161  003A62                     l10853:
  8162                           
  8163                           ; BSR set to: 1
  8164  003A62  0101               	movlb	1	; () banked
  8165  003A64  0101               	movlb	1	; () banked
  8166  003A66  5126               	movf	___ftmul@sign& (0+255),w,b
  8167  003A68  0F7B               	addlw	123
  8168  003A6A  0101               	movlb	1	; () banked
  8169  003A6C  0101               	movlb	1	; () banked
  8170  003A6E  2721               	addwf	___ftmul@exp& (0+255),f,b
  8171                           
  8172                           ; BSR set to: 1
  8173  003A70  C118  F126         	movff	___ftmul@f1+2,___ftmul@sign
  8174  003A74  0101               	movlb	1	; () banked
  8175  003A76  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8176  003A78  0101               	movlb	1	; () banked
  8177  003A7A  0101               	movlb	1	; () banked
  8178  003A7C  1B26               	xorwf	___ftmul@sign& (0+255),f,b
  8179  003A7E  0E80               	movlw	128
  8180  003A80  0101               	movlb	1	; () banked
  8181  003A82  0101               	movlb	1	; () banked
  8182  003A84  1726               	andwf	___ftmul@sign& (0+255),f,b
  8183                           
  8184                           ; BSR set to: 1
  8185  003A86  0101               	movlb	1	; () banked
  8186  003A88  0101               	movlb	1	; () banked
  8187  003A8A  8F17               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8188                           
  8189                           ; BSR set to: 1
  8190  003A8C  0101               	movlb	1	; () banked
  8191  003A8E  0101               	movlb	1	; () banked
  8192  003A90  8F1A               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8193                           
  8194                           ; BSR set to: 1
  8195  003A92  0EFF               	movlw	255
  8196  003A94  0101               	movlb	1	; () banked
  8197  003A96  0101               	movlb	1	; () banked
  8198  003A98  1719               	andwf	___ftmul@f2& (0+255),f,b
  8199  003A9A  0EFF               	movlw	255
  8200  003A9C  0101               	movlb	1	; () banked
  8201  003A9E  0101               	movlb	1	; () banked
  8202  003AA0  171A               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8203  003AA2  0E00               	movlw	0
  8204  003AA4  0101               	movlb	1	; () banked
  8205  003AA6  0101               	movlb	1	; () banked
  8206  003AA8  171B               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8207                           
  8208                           ; BSR set to: 1
  8209  003AAA  0E00               	movlw	0
  8210  003AAC  0101               	movlb	1	; () banked
  8211  003AAE  0101               	movlb	1	; () banked
  8212  003AB0  6F22               	movwf	___ftmul@f3_as_product& (0+255),b
  8213  003AB2  0E00               	movlw	0
  8214  003AB4  0101               	movlb	1	; () banked
  8215  003AB6  0101               	movlb	1	; () banked
  8216  003AB8  6F23               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8217  003ABA  0E00               	movlw	0
  8218  003ABC  0101               	movlb	1	; () banked
  8219  003ABE  0101               	movlb	1	; () banked
  8220  003AC0  6F24               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8221                           
  8222                           ; BSR set to: 1
  8223  003AC2  0101               	movlb	1	; () banked
  8224  003AC4  6F1C               	movwf	??___ftmul& (0+255),b
  8225  003AC6  0E07               	movlw	7
  8226  003AC8  0101               	movlb	1	; () banked
  8227  003ACA  0101               	movlb	1	; () banked
  8228  003ACC  6F25               	movwf	___ftmul@cntr& (0+255),b
  8229  003ACE  0101               	movlb	1	; () banked
  8230  003AD0  511C               	movf	??___ftmul& (0+255),w,b
  8231  003AD2                     l10867:
  8232                           
  8233                           ; BSR set to: 1
  8234  003AD2  0101               	movlb	1	; () banked
  8235  003AD4  0101               	movlb	1	; () banked
  8236  003AD6  A116               	btfss	___ftmul@f1& (0+255),0,b
  8237  003AD8  D012               	goto	l10871
  8238                           
  8239                           ; BSR set to: 1
  8240  003ADA  0101               	movlb	1	; () banked
  8241  003ADC  0101               	movlb	1	; () banked
  8242  003ADE  5119               	movf	___ftmul@f2& (0+255),w,b
  8243  003AE0  0101               	movlb	1	; () banked
  8244  003AE2  0101               	movlb	1	; () banked
  8245  003AE4  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8246  003AE6  0101               	movlb	1	; () banked
  8247  003AE8  0101               	movlb	1	; () banked
  8248  003AEA  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8249  003AEC  0101               	movlb	1	; () banked
  8250  003AEE  0101               	movlb	1	; () banked
  8251  003AF0  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8252  003AF2  0101               	movlb	1	; () banked
  8253  003AF4  0101               	movlb	1	; () banked
  8254  003AF6  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8255  003AF8  0101               	movlb	1	; () banked
  8256  003AFA  0101               	movlb	1	; () banked
  8257  003AFC  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8258  003AFE                     l10871:
  8259                           
  8260                           ; BSR set to: 1
  8261  003AFE  0101               	movlb	1	; () banked
  8262  003B00  90D8               	bcf	status,0,c
  8263  003B02  0101               	movlb	1	; () banked
  8264  003B04  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8265  003B06  0101               	movlb	1	; () banked
  8266  003B08  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8267  003B0A  0101               	movlb	1	; () banked
  8268  003B0C  3316               	rrcf	___ftmul@f1& (0+255),f,b
  8269  003B0E  0101               	movlb	1	; () banked
  8270  003B10  90D8               	bcf	status,0,c
  8271  003B12  0101               	movlb	1	; () banked
  8272  003B14  3719               	rlcf	___ftmul@f2& (0+255),f,b
  8273  003B16  0101               	movlb	1	; () banked
  8274  003B18  371A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8275  003B1A  0101               	movlb	1	; () banked
  8276  003B1C  371B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8277                           
  8278                           ; BSR set to: 1
  8279  003B1E  0101               	movlb	1	; () banked
  8280  003B20  0101               	movlb	1	; () banked
  8281  003B22  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  8282  003B24  D7D6               	goto	l10867
  8283                           
  8284                           ; BSR set to: 1
  8285                           
  8286                           ; BSR set to: 1
  8287  003B26  0101               	movlb	1	; () banked
  8288  003B28  6F1C               	movwf	??___ftmul& (0+255),b
  8289  003B2A  0E09               	movlw	9
  8290  003B2C  0101               	movlb	1	; () banked
  8291  003B2E  0101               	movlb	1	; () banked
  8292  003B30  6F25               	movwf	___ftmul@cntr& (0+255),b
  8293  003B32  0101               	movlb	1	; () banked
  8294  003B34  511C               	movf	??___ftmul& (0+255),w,b
  8295  003B36                     l10877:
  8296                           
  8297                           ; BSR set to: 1
  8298  003B36  0101               	movlb	1	; () banked
  8299  003B38  0101               	movlb	1	; () banked
  8300  003B3A  A116               	btfss	___ftmul@f1& (0+255),0,b
  8301  003B3C  D012               	goto	l10881
  8302                           
  8303                           ; BSR set to: 1
  8304  003B3E  0101               	movlb	1	; () banked
  8305  003B40  0101               	movlb	1	; () banked
  8306  003B42  5119               	movf	___ftmul@f2& (0+255),w,b
  8307  003B44  0101               	movlb	1	; () banked
  8308  003B46  0101               	movlb	1	; () banked
  8309  003B48  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8310  003B4A  0101               	movlb	1	; () banked
  8311  003B4C  0101               	movlb	1	; () banked
  8312  003B4E  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8313  003B50  0101               	movlb	1	; () banked
  8314  003B52  0101               	movlb	1	; () banked
  8315  003B54  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8316  003B56  0101               	movlb	1	; () banked
  8317  003B58  0101               	movlb	1	; () banked
  8318  003B5A  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8319  003B5C  0101               	movlb	1	; () banked
  8320  003B5E  0101               	movlb	1	; () banked
  8321  003B60  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8322  003B62                     l10881:
  8323                           
  8324                           ; BSR set to: 1
  8325  003B62  0101               	movlb	1	; () banked
  8326  003B64  90D8               	bcf	status,0,c
  8327  003B66  0101               	movlb	1	; () banked
  8328  003B68  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8329  003B6A  0101               	movlb	1	; () banked
  8330  003B6C  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8331  003B6E  0101               	movlb	1	; () banked
  8332  003B70  3316               	rrcf	___ftmul@f1& (0+255),f,b
  8333  003B72  0101               	movlb	1	; () banked
  8334  003B74  90D8               	bcf	status,0,c
  8335  003B76  0101               	movlb	1	; () banked
  8336  003B78  3324               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8337  003B7A  0101               	movlb	1	; () banked
  8338  003B7C  3323               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8339  003B7E  0101               	movlb	1	; () banked
  8340  003B80  3322               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8341                           
  8342                           ; BSR set to: 1
  8343  003B82  0101               	movlb	1	; () banked
  8344  003B84  0101               	movlb	1	; () banked
  8345  003B86  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  8346  003B88  D7D6               	goto	l10877
  8347                           
  8348                           ; BSR set to: 1
  8349                           
  8350                           ; BSR set to: 1
  8351  003B8A  C122  F100         	movff	___ftmul@f3_as_product,?___ftpack
  8352  003B8E  C123  F101         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  8353  003B92  C124  F102         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  8354  003B96  C121  F103         	movff	___ftmul@exp,?___ftpack+3
  8355  003B9A  C126  F104         	movff	___ftmul@sign,?___ftpack+4
  8356  003B9E  EC30  F022         	call	___ftpack	;wreg free
  8357  003BA2  C102  F118         	movff	?___ftpack+2,?___ftmul+2
  8358  003BA6  C101  F117         	movff	?___ftpack+1,?___ftmul+1
  8359  003BAA  C100  F116         	movff	?___ftpack,?___ftmul
  8360  003BAE                     l774:
  8361  003BAE  0012               	return	
  8362  003BB0                     __end_of___ftmul:
  8363                           	opt stack 0
  8364                           tblptru	equ	0xFF8
  8365                           tblptrh	equ	0xFF7
  8366                           tblptrl	equ	0xFF6
  8367                           tablat	equ	0xFF5
  8368                           prodh	equ	0xFF4
  8369                           prodl	equ	0xFF3
  8370                           postinc0	equ	0xFEE
  8371                           wreg	equ	0xFE8
  8372                           indf2	equ	0xFDF
  8373                           postinc2	equ	0xFDE
  8374                           postdec2	equ	0xFDD
  8375                           fsr2h	equ	0xFDA
  8376                           fsr2l	equ	0xFD9
  8377                           status	equ	0xFD8
  8378                           
  8379 ;; *************** function _Obtener_Distancia *****************
  8380 ;; Defined at:
  8381 ;;		line 241 in file "main.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  Duracion        2   14[BANK1 ] unsigned int 
  8386 ;;  Distancia       2   12[BANK1 ] unsigned int 
  8387 ;;  Timer_1         2   10[BANK1 ] unsigned int 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  2    8[BANK1 ] unsigned int 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8397 ;;      Params:         0       0       2       0       0       0       0       0       0
  8398 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8400 ;;      Totals:         0       0       8       0       0       0       0       0       0
  8401 ;;Total ram usage:        8 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:   10
  8404 ;; This function calls:
  8405 ;;		___lwdiv
  8406 ;; This function is called by:
  8407 ;;		_main
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text23
  8412  00543A                     __ptext23:
  8413                           	opt stack 0
  8414  00543A                     _Obtener_Distancia:
  8415                           	opt stack 20
  8416                           
  8417                           ;main.c: 242: uint16_t Duracion;
  8418                           ;main.c: 243: uint16_t Distancia;
  8419                           ;main.c: 244: uint16_t Timer_1;
  8420                           ;main.c: 246: LATAbits.LATA1=1;
  8421                           
  8422                           ;incstack = 0
  8423                           ;incstack = 0
  8424  00543A  8289               	bsf	3977,1,c	;volatile
  8425                           
  8426                           ;main.c: 247: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8427  00543C  0E06               	movlw	6
  8428  00543E                     u11107:
  8429  00543E  2EE8               	decfsz	wreg,f,c
  8430  005440  D7FE               	goto	u11107
  8431  005442  D000               	nop2		;nop
  8432                           
  8433                           ;main.c: 248: LATAbits.LATA1=0;
  8434  005444  9289               	bcf	3977,1,c	;volatile
  8435  005446                     l207:
  8436  005446  A480               	btfss	3968,2,c	;volatile
  8437  005448  D7FE               	goto	l207
  8438                           
  8439                           ;main.c: 250: T1CONbits.TMR1ON=1;
  8440  00544A  80CD               	bsf	4045,0,c	;volatile
  8441  00544C                     l210:
  8442  00544C  B480               	btfsc	3968,2,c	;volatile
  8443  00544E  D7FE               	goto	l210
  8444                           
  8445                           ;main.c: 252: T1CONbits.TMR1ON=0;
  8446  005450  90CD               	bcf	4045,0,c	;volatile
  8447                           
  8448                           ;main.c: 253: Timer_1=TMR1;
  8449  005452  CFCE F10A          	movff	4046,Obtener_Distancia@Timer_1	;volatile
  8450  005456  CFCF F10B          	movff	4047,Obtener_Distancia@Timer_1+1	;volatile
  8451                           
  8452                           ;main.c: 254: Duracion=Timer_1/2;
  8453  00545A  90D8               	bcf	status,0,c
  8454  00545C  0101               	movlb	1	; () banked
  8455  00545E  0101               	movlb	1	; () banked
  8456  005460  310B               	rrcf	(Obtener_Distancia@Timer_1+1)& (0+255),w,b
  8457  005462  0101               	movlb	1	; () banked
  8458  005464  0101               	movlb	1	; () banked
  8459  005466  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  8460  005468  0101               	movlb	1	; () banked
  8461  00546A  0101               	movlb	1	; () banked
  8462  00546C  310A               	rrcf	Obtener_Distancia@Timer_1& (0+255),w,b
  8463  00546E  0101               	movlb	1	; () banked
  8464  005470  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  8465                           
  8466                           ;main.c: 255: if(Duracion<=23200)
  8467  005472  0EA1               	movlw	161
  8468  005474  0101               	movlb	1	; () banked
  8469  005476  0101               	movlb	1	; () banked
  8470  005478  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  8471  00547A  0E5A               	movlw	90
  8472  00547C  0101               	movlb	1	; () banked
  8473  00547E  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  8474  005480  B0D8               	btfsc	status,0,c
  8475  005482  D014               	goto	l10121
  8476                           
  8477                           ; BSR set to: 1
  8478                           ;main.c: 256: {
  8479                           ;main.c: 257: Distancia=Duracion/58;
  8480  005484  C10E  F100         	movff	Obtener_Distancia@Duracion,?___lwdiv
  8481  005488  C10F  F101         	movff	Obtener_Distancia@Duracion+1,?___lwdiv+1
  8482  00548C  0E00               	movlw	0
  8483  00548E  0101               	movlb	1	; () banked
  8484  005490  0101               	movlb	1	; () banked
  8485  005492  6F03               	movwf	(?___lwdiv+3)& (0+255),b
  8486  005494  0E3A               	movlw	58
  8487  005496  0101               	movlb	1	; () banked
  8488  005498  6F02               	movwf	(?___lwdiv+2)& (0+255),b
  8489  00549A  ECCA  F02A         	call	___lwdiv	;wreg free
  8490  00549E  0101               	movlb	1	; () banked
  8491  0054A0  C100  F10C         	movff	?___lwdiv,Obtener_Distancia@Distancia
  8492  0054A4  0101               	movlb	1	; () banked
  8493  0054A6  C101  F10D         	movff	?___lwdiv+1,Obtener_Distancia@Distancia+1
  8494                           
  8495                           ;main.c: 258: }
  8496  0054AA  D00E               	goto	l214
  8497  0054AC                     l10121:
  8498                           
  8499                           ; BSR set to: 1
  8500                           ;main.c: 259: else if(Duracion<116)
  8501  0054AC  0E74               	movlw	116
  8502  0054AE  0101               	movlb	1	; () banked
  8503  0054B0  0101               	movlb	1	; () banked
  8504  0054B2  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  8505  0054B4  0E00               	movlw	0
  8506  0054B6  0101               	movlb	1	; () banked
  8507  0054B8  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  8508                           
  8509                           ; BSR set to: 1
  8510                           ;main.c: 263: else
  8511                           ;main.c: 264: {
  8512                           ;main.c: 265: Distancia=0;
  8513                           
  8514                           ; BSR set to: 1
  8515                           
  8516                           ;main.c: 262: }
  8517                           
  8518                           ; BSR set to: 1
  8519                           ;main.c: 260: {
  8520                           ;main.c: 261: Distancia=0;
  8521  0054BA  0E00               	movlw	0
  8522  0054BC  0101               	movlb	1	; () banked
  8523  0054BE  0101               	movlb	1	; () banked
  8524  0054C0  6F0D               	movwf	(Obtener_Distancia@Distancia+1)& (0+255),b
  8525  0054C2  0E00               	movlw	0
  8526  0054C4  0101               	movlb	1	; () banked
  8527  0054C6  6F0C               	movwf	Obtener_Distancia@Distancia& (0+255),b
  8528  0054C8                     l214:
  8529                           
  8530                           ; BSR set to: 1
  8531                           ;main.c: 266: }
  8532                           ;main.c: 267: Duracion=0;
  8533  0054C8  0E00               	movlw	0
  8534  0054CA  0101               	movlb	1	; () banked
  8535  0054CC  0101               	movlb	1	; () banked
  8536  0054CE  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  8537  0054D0  0E00               	movlw	0
  8538  0054D2  0101               	movlb	1	; () banked
  8539  0054D4  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  8540                           
  8541                           ;main.c: 268: TMR1=0;
  8542  0054D6  0E00               	movlw	0
  8543  0054D8  6ECF               	movwf	4047,c	;volatile
  8544  0054DA  0E00               	movlw	0
  8545  0054DC  6ECE               	movwf	4046,c	;volatile
  8546                           
  8547                           ; BSR set to: 1
  8548                           ;main.c: 270: return Distancia;
  8549  0054DE  C10C  F108         	movff	Obtener_Distancia@Distancia,?_Obtener_Distancia
  8550  0054E2  C10D  F109         	movff	Obtener_Distancia@Distancia+1,?_Obtener_Distancia+1
  8551                           
  8552                           ; BSR set to: 1
  8553                           
  8554                           ; BSR set to: 1
  8555  0054E6  0012               	return	
  8556  0054E8                     __end_of_Obtener_Distancia:
  8557                           	opt stack 0
  8558                           tblptru	equ	0xFF8
  8559                           tblptrh	equ	0xFF7
  8560                           tblptrl	equ	0xFF6
  8561                           tablat	equ	0xFF5
  8562                           prodh	equ	0xFF4
  8563                           prodl	equ	0xFF3
  8564                           postinc0	equ	0xFEE
  8565                           wreg	equ	0xFE8
  8566                           indf2	equ	0xFDF
  8567                           postinc2	equ	0xFDE
  8568                           postdec2	equ	0xFDD
  8569                           fsr2h	equ	0xFDA
  8570                           fsr2l	equ	0xFD9
  8571                           status	equ	0xFD8
  8572                           
  8573 ;; *************** function ___lwdiv *****************
  8574 ;; Defined at:
  8575 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  dividend        2    0[BANK1 ] unsigned int 
  8578 ;;  divisor         2    2[BANK1 ] unsigned int 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  quotient        2    6[BANK1 ] unsigned int 
  8581 ;;  counter         1    5[BANK1 ] unsigned char 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  2    0[BANK1 ] unsigned int 
  8584 ;; Registers used:
  8585 ;;		wreg, status,2, status,0
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8591 ;;      Params:         0       0       4       0       0       0       0       0       0
  8592 ;;      Locals:         0       0       3       0       0       0       0       0       0
  8593 ;;      Temps:          0       0       1       0       0       0       0       0       0
  8594 ;;      Totals:         0       0       8       0       0       0       0       0       0
  8595 ;;Total ram usage:        8 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:    9
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_Obtener_Distancia
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	text24
  8606  005594                     __ptext24:
  8607                           	opt stack 0
  8608  005594                     ___lwdiv:
  8609                           	opt stack 20
  8610                           
  8611                           ; BSR set to: 1
  8612                           ;incstack = 0
  8613                           ;incstack = 0
  8614  005594  0E00               	movlw	0
  8615  005596  0101               	movlb	1	; () banked
  8616  005598  0101               	movlb	1	; () banked
  8617  00559A  6F07               	movwf	(___lwdiv@quotient+1)& (0+255),b
  8618  00559C  0E00               	movlw	0
  8619  00559E  0101               	movlb	1	; () banked
  8620  0055A0  6F06               	movwf	___lwdiv@quotient& (0+255),b
  8621                           
  8622                           ; BSR set to: 1
  8623  0055A2  0101               	movlb	1	; () banked
  8624  0055A4  0101               	movlb	1	; () banked
  8625  0055A6  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8626  0055A8  1102               	iorwf	___lwdiv@divisor& (0+255),w,b
  8627  0055AA  B4D8               	btfsc	status,2,c
  8628  0055AC  D043               	goto	l907
  8629                           
  8630                           ; BSR set to: 1
  8631  0055AE  0101               	movlb	1	; () banked
  8632  0055B0  6F04               	movwf	??___lwdiv& (0+255),b
  8633  0055B2  0E01               	movlw	1
  8634  0055B4  0101               	movlb	1	; () banked
  8635  0055B6  0101               	movlb	1	; () banked
  8636  0055B8  6F05               	movwf	___lwdiv@counter& (0+255),b
  8637  0055BA  0101               	movlb	1	; () banked
  8638  0055BC  5104               	movf	??___lwdiv& (0+255),w,b
  8639  0055BE  D009               	goto	l11053
  8640  0055C0                     l11051:
  8641                           
  8642                           ; BSR set to: 1
  8643  0055C0  0101               	movlb	1	; () banked
  8644  0055C2  0101               	movlb	1	; () banked
  8645  0055C4  0101               	movlb	1	; () banked
  8646  0055C6  90D8               	bcf	status,0,c
  8647  0055C8  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
  8648  0055CA  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8649  0055CC  0101               	movlb	1	; () banked
  8650  0055CE  0101               	movlb	1	; () banked
  8651  0055D0  2B05               	incf	___lwdiv@counter& (0+255),f,b
  8652  0055D2                     l11053:
  8653                           
  8654                           ; BSR set to: 1
  8655  0055D2  0101               	movlb	1	; () banked
  8656  0055D4  0101               	movlb	1	; () banked
  8657  0055D6  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  8658  0055D8  D7F3               	goto	l11051
  8659  0055DA                     l11055:
  8660                           
  8661                           ; BSR set to: 1
  8662  0055DA  0101               	movlb	1	; () banked
  8663  0055DC  0101               	movlb	1	; () banked
  8664  0055DE  0101               	movlb	1	; () banked
  8665  0055E0  90D8               	bcf	status,0,c
  8666  0055E2  3706               	rlcf	___lwdiv@quotient& (0+255),f,b
  8667  0055E4  3707               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8668                           
  8669                           ; BSR set to: 1
  8670  0055E6  0101               	movlb	1	; () banked
  8671  0055E8  0101               	movlb	1	; () banked
  8672  0055EA  5102               	movf	___lwdiv@divisor& (0+255),w,b
  8673  0055EC  0101               	movlb	1	; () banked
  8674  0055EE  0101               	movlb	1	; () banked
  8675  0055F0  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
  8676  0055F2  0101               	movlb	1	; () banked
  8677  0055F4  0101               	movlb	1	; () banked
  8678  0055F6  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8679  0055F8  0101               	movlb	1	; () banked
  8680  0055FA  0101               	movlb	1	; () banked
  8681  0055FC  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8682  0055FE  A0D8               	btfss	status,0,c
  8683  005600  D00F               	goto	l11063
  8684                           
  8685                           ; BSR set to: 1
  8686  005602  0101               	movlb	1	; () banked
  8687  005604  0101               	movlb	1	; () banked
  8688  005606  5102               	movf	___lwdiv@divisor& (0+255),w,b
  8689  005608  0101               	movlb	1	; () banked
  8690  00560A  0101               	movlb	1	; () banked
  8691  00560C  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
  8692  00560E  0101               	movlb	1	; () banked
  8693  005610  0101               	movlb	1	; () banked
  8694  005612  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8695  005614  0101               	movlb	1	; () banked
  8696  005616  0101               	movlb	1	; () banked
  8697  005618  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8698                           
  8699                           ; BSR set to: 1
  8700  00561A  0101               	movlb	1	; () banked
  8701  00561C  0101               	movlb	1	; () banked
  8702  00561E  8106               	bsf	___lwdiv@quotient& (0+255),0,b
  8703  005620                     l11063:
  8704                           
  8705                           ; BSR set to: 1
  8706  005620  0101               	movlb	1	; () banked
  8707  005622  0101               	movlb	1	; () banked
  8708  005624  0101               	movlb	1	; () banked
  8709  005626  90D8               	bcf	status,0,c
  8710  005628  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8711  00562A  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
  8712                           
  8713                           ; BSR set to: 1
  8714  00562C  0101               	movlb	1	; () banked
  8715  00562E  0101               	movlb	1	; () banked
  8716  005630  2F05               	decfsz	___lwdiv@counter& (0+255),f,b
  8717  005632  D7D3               	goto	l11055
  8718  005634                     l907:
  8719                           
  8720                           ; BSR set to: 1
  8721  005634  C106  F100         	movff	___lwdiv@quotient,?___lwdiv
  8722  005638  C107  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8723                           
  8724                           ; BSR set to: 1
  8725  00563C  0012               	return	
  8726  00563E                     __end_of___lwdiv:
  8727                           	opt stack 0
  8728                           tblptru	equ	0xFF8
  8729                           tblptrh	equ	0xFF7
  8730                           tblptrl	equ	0xFF6
  8731                           tablat	equ	0xFF5
  8732                           prodh	equ	0xFF4
  8733                           prodl	equ	0xFF3
  8734                           postinc0	equ	0xFEE
  8735                           wreg	equ	0xFE8
  8736                           indf2	equ	0xFDF
  8737                           postinc2	equ	0xFDE
  8738                           postdec2	equ	0xFDD
  8739                           fsr2h	equ	0xFDA
  8740                           fsr2l	equ	0xFD9
  8741                           status	equ	0xFD8
  8742                           
  8743 ;; *************** function _inicioInterrupcoes *****************
  8744 ;; Defined at:
  8745 ;;		line 173 in file "main.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;		None
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;		None
  8750 ;; Return value:  Size  Location     Type
  8751 ;;		None               void
  8752 ;; Registers used:
  8753 ;;		None
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8759 ;;      Params:         0       0       0       0       0       0       0       0       0
  8760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8762 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8763 ;;Total ram usage:        0 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; Hardware stack levels required when called:    9
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_main
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text25
  8774  0062E0                     __ptext25:
  8775                           	opt stack 0
  8776  0062E0                     _inicioInterrupcoes:
  8777                           	opt stack 21
  8778                           
  8779                           ;main.c: 174: IPEN = 1;
  8780                           
  8781                           ; BSR set to: 1
  8782                           ;incstack = 0
  8783                           ;incstack = 0
  8784  0062E0  8ED0               	bsf	4048,7,c	;volatile
  8785                           
  8786                           ;main.c: 175: ADIE = 1;
  8787  0062E2  8C9D               	bsf	3997,6,c	;volatile
  8788                           
  8789                           ;main.c: 176: RCIE = 1;
  8790  0062E4  8A9D               	bsf	3997,5,c	;volatile
  8791                           
  8792                           ;main.c: 177: TMR0IE = 1;
  8793  0062E6  8AF2               	bsf	intcon,5,c	;volatile
  8794                           
  8795                           ;main.c: 178: GIEH = 1;
  8796  0062E8  8EF2               	bsf	intcon,7,c	;volatile
  8797                           
  8798                           ;main.c: 179: GIEL = 1;
  8799  0062EA  8CF2               	bsf	intcon,6,c	;volatile
  8800                           
  8801                           ;main.c: 180: ADIP = 0;
  8802  0062EC  9C9F               	bcf	3999,6,c	;volatile
  8803                           
  8804                           ;main.c: 181: TMR0IP = 0;
  8805  0062EE  94F1               	bcf	intcon2,2,c	;volatile
  8806                           
  8807                           ;main.c: 182: RCIP = 1;
  8808  0062F0  8A9F               	bsf	3999,5,c	;volatile
  8809  0062F2  0012               	return	
  8810  0062F4                     __end_of_inicioInterrupcoes:
  8811                           	opt stack 0
  8812                           tblptru	equ	0xFF8
  8813                           tblptrh	equ	0xFF7
  8814                           tblptrl	equ	0xFF6
  8815                           tablat	equ	0xFF5
  8816                           prodh	equ	0xFF4
  8817                           prodl	equ	0xFF3
  8818                           intcon	equ	0xFF2
  8819                           intcon2	equ	0xFF1
  8820                           postinc0	equ	0xFEE
  8821                           wreg	equ	0xFE8
  8822                           indf2	equ	0xFDF
  8823                           postinc2	equ	0xFDE
  8824                           postdec2	equ	0xFDD
  8825                           fsr2h	equ	0xFDA
  8826                           fsr2l	equ	0xFD9
  8827                           status	equ	0xFD8
  8828                           
  8829 ;; *************** function _USART_Init *****************
  8830 ;; Defined at:
  8831 ;;		line 145 in file "main.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;		None
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;  baud_rate       4   70[BANK1 ] long 
  8836 ;;  temp            3   74[BANK1 ] float 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;		None               void
  8839 ;; Registers used:
  8840 ;;		wreg, status,2, status,0, cstack
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8846 ;;      Params:         0       0       0       0       0       0       0       0       0
  8847 ;;      Locals:         0       0       7       0       0       0       0       0       0
  8848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8849 ;;      Totals:         0       0       7       0       0       0       0       0       0
  8850 ;;Total ram usage:        7 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; Hardware stack levels required when called:   11
  8853 ;; This function calls:
  8854 ;;		___altoft
  8855 ;;		___ftadd
  8856 ;;		___ftdiv
  8857 ;;		___fttol
  8858 ;; This function is called by:
  8859 ;;		_main
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           	psect	text26
  8864  0054E8                     __ptext26:
  8865                           	opt stack 0
  8866  0054E8                     _USART_Init:
  8867                           	opt stack 19
  8868                           
  8869                           ;main.c: 146: long int baud_rate = 115200;
  8870                           
  8871                           ;incstack = 0
  8872                           ;incstack = 0
  8873  0054E8  0E00               	movlw	0
  8874  0054EA  0101               	movlb	1	; () banked
  8875  0054EC  0101               	movlb	1	; () banked
  8876  0054EE  6F46               	movwf	USART_Init@baud_rate& (0+255),b
  8877  0054F0  0EC2               	movlw	194
  8878  0054F2  0101               	movlb	1	; () banked
  8879  0054F4  6F47               	movwf	(USART_Init@baud_rate+1)& (0+255),b
  8880  0054F6  0E01               	movlw	1
  8881  0054F8  0101               	movlb	1	; () banked
  8882  0054FA  6F48               	movwf	(USART_Init@baud_rate+2)& (0+255),b
  8883  0054FC  0E00               	movlw	0
  8884  0054FE  0101               	movlb	1	; () banked
  8885  005500  6F49               	movwf	(USART_Init@baud_rate+3)& (0+255),b
  8886                           
  8887                           ; BSR set to: 1
  8888                           ;main.c: 147: float temp;
  8889                           ;main.c: 148: TRISC6=0;
  8890  005502  9C94               	bcf	3988,6,c	;volatile
  8891                           
  8892                           ; BSR set to: 1
  8893                           ;main.c: 149: TRISC7=1;
  8894  005504  8E94               	bsf	3988,7,c	;volatile
  8895                           
  8896                           ; BSR set to: 1
  8897                           ;main.c: 152: temp= (( (float) (200000/64) / (float) baud_rate ) - 1); ;
  8898  005506  C146  F108         	movff	USART_Init@baud_rate,?___altoft
  8899  00550A  C147  F109         	movff	USART_Init@baud_rate+1,?___altoft+1
  8900  00550E  C148  F10A         	movff	USART_Init@baud_rate+2,?___altoft+2
  8901  005512  C149  F10B         	movff	USART_Init@baud_rate+3,?___altoft+3
  8902  005516  ECEA  F028         	call	___altoft	;wreg free
  8903  00551A  C10A  F12C         	movff	?___altoft+2,?___ftdiv+5
  8904  00551E  C109  F12B         	movff	?___altoft+1,?___ftdiv+4
  8905  005522  C108  F12A         	movff	?___altoft,?___ftdiv+3
  8906  005526  0E50               	movlw	80
  8907  005528  0101               	movlb	1	; () banked
  8908  00552A  0101               	movlb	1	; () banked
  8909  00552C  6F27               	movwf	?___ftdiv& (0+255),b
  8910  00552E  0E43               	movlw	67
  8911  005530  0101               	movlb	1	; () banked
  8912  005532  0101               	movlb	1	; () banked
  8913  005534  6F28               	movwf	(?___ftdiv+1)& (0+255),b
  8914  005536  0E45               	movlw	69
  8915  005538  0101               	movlb	1	; () banked
  8916  00553A  0101               	movlb	1	; () banked
  8917  00553C  6F29               	movwf	(?___ftdiv+2)& (0+255),b
  8918  00553E  ECA8  F01F         	call	___ftdiv	;wreg free
  8919  005542  C129  F13A         	movff	?___ftdiv+2,?___ftadd+2
  8920  005546  C128  F139         	movff	?___ftdiv+1,?___ftadd+1
  8921  00554A  C127  F138         	movff	?___ftdiv,?___ftadd
  8922  00554E  0E00               	movlw	0
  8923  005550  0101               	movlb	1	; () banked
  8924  005552  0101               	movlb	1	; () banked
  8925  005554  6F3B               	movwf	(?___ftadd+3)& (0+255),b
  8926  005556  0E80               	movlw	128
  8927  005558  0101               	movlb	1	; () banked
  8928  00555A  0101               	movlb	1	; () banked
  8929  00555C  6F3C               	movwf	(?___ftadd+4)& (0+255),b
  8930  00555E  0EBF               	movlw	191
  8931  005560  0101               	movlb	1	; () banked
  8932  005562  0101               	movlb	1	; () banked
  8933  005564  6F3D               	movwf	(?___ftadd+5)& (0+255),b
  8934  005566  ECF3  F018         	call	___ftadd	;wreg free
  8935  00556A  C13A  F14C         	movff	?___ftadd+2,USART_Init@temp+2
  8936  00556E  C139  F14B         	movff	?___ftadd+1,USART_Init@temp+1
  8937  005572  C138  F14A         	movff	?___ftadd,USART_Init@temp
  8938                           
  8939                           ;main.c: 153: SPBRG = (int) temp;
  8940  005576  C14A  F133         	movff	USART_Init@temp,?___fttol
  8941  00557A  C14B  F134         	movff	USART_Init@temp+1,?___fttol+1
  8942  00557E  C14C  F135         	movff	USART_Init@temp+2,?___fttol+2
  8943  005582  EC70  F021         	call	___fttol	;wreg free
  8944  005586  0101               	movlb	1	; () banked
  8945  005588  0101               	movlb	1	; () banked
  8946  00558A  5133               	movf	?___fttol& (0+255),w,b
  8947  00558C  6EAF               	movwf	4015,c	;volatile
  8948                           
  8949                           ;main.c: 156: RCSTA = 0x90;
  8950  00558E  0E90               	movlw	144
  8951  005590  6EAB               	movwf	4011,c	;volatile
  8952                           
  8953                           ; BSR set to: 1
  8954  005592  0012               	return	
  8955  005594                     __end_of_USART_Init:
  8956                           	opt stack 0
  8957                           tblptru	equ	0xFF8
  8958                           tblptrh	equ	0xFF7
  8959                           tblptrl	equ	0xFF6
  8960                           tablat	equ	0xFF5
  8961                           prodh	equ	0xFF4
  8962                           prodl	equ	0xFF3
  8963                           intcon	equ	0xFF2
  8964                           intcon2	equ	0xFF1
  8965                           postinc0	equ	0xFEE
  8966                           wreg	equ	0xFE8
  8967                           indf2	equ	0xFDF
  8968                           postinc2	equ	0xFDE
  8969                           postdec2	equ	0xFDD
  8970                           fsr2h	equ	0xFDA
  8971                           fsr2l	equ	0xFD9
  8972                           status	equ	0xFD8
  8973                           
  8974 ;; *************** function ___fttol *****************
  8975 ;; Defined at:
  8976 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  f1              3   51[BANK1 ] float 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  lval            4   61[BANK1 ] unsigned long 
  8981 ;;  exp1            1   65[BANK1 ] unsigned char 
  8982 ;;  sign1           1   60[BANK1 ] unsigned char 
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  4   51[BANK1 ] long 
  8985 ;; Registers used:
  8986 ;;		wreg, status,2, status,0
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8992 ;;      Params:         0       0       4       0       0       0       0       0       0
  8993 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8994 ;;      Temps:          0       0       5       0       0       0       0       0       0
  8995 ;;      Totals:         0       0      15       0       0       0       0       0       0
  8996 ;;Total ram usage:       15 bytes
  8997 ;; Hardware stack levels used:    1
  8998 ;; Hardware stack levels required when called:    9
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_USART_Init
  9003 ;;		_sprintf
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text27
  9008  0042E0                     __ptext27:
  9009                           	opt stack 0
  9010  0042E0                     ___fttol:
  9011                           	opt stack 20
  9012                           
  9013                           ; BSR set to: 1
  9014                           ;incstack = 0
  9015                           ;incstack = 0
  9016  0042E0  0E0F               	movlw	15
  9017  0042E2  0101               	movlb	1	; () banked
  9018  0042E4  6F37               	movwf	??___fttol& (0+255),b
  9019  0042E6  0101               	movlb	1	; () banked
  9020  0042E8  C133  F138         	movff	___fttol@f1,??___fttol+1
  9021  0042EC  0101               	movlb	1	; () banked
  9022  0042EE  C134  F139         	movff	___fttol@f1+1,??___fttol+2
  9023  0042F2  0101               	movlb	1	; () banked
  9024  0042F4  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
  9025  0042F8  0101               	movlb	1	; () banked
  9026  0042FA  2937               	incf	??___fttol& (0+255),w,b
  9027  0042FC  0101               	movlb	1	; () banked
  9028  0042FE  6F3B               	movwf	(??___fttol+4)& (0+255),b
  9029  004300  D005               	goto	u6830
  9030  004302                     u6835:
  9031  004302  0101               	movlb	1	; () banked
  9032  004304  90D8               	bcf	status,0,c
  9033  004306  333A               	rrcf	(??___fttol+3)& (0+255),f,b
  9034  004308  3339               	rrcf	(??___fttol+2)& (0+255),f,b
  9035  00430A  3338               	rrcf	(??___fttol+1)& (0+255),f,b
  9036  00430C                     u6830:
  9037  00430C  0101               	movlb	1	; () banked
  9038  00430E  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
  9039  004310  D7F8               	goto	u6835
  9040  004312  0101               	movlb	1	; () banked
  9041  004314  5138               	movf	(??___fttol+1)& (0+255),w,b
  9042  004316  0101               	movlb	1	; () banked
  9043  004318  0101               	movlb	1	; () banked
  9044  00431A  6F41               	movwf	___fttol@exp1& (0+255),b
  9045  00431C  0101               	movlb	1	; () banked
  9046  00431E  6741               	tstfsz	___fttol@exp1& (0+255),b
  9047  004320  D001               	goto	l8449
  9048  004322  D061               	goto	u6880
  9049  004324                     l8449:
  9050                           
  9051                           ; BSR set to: 1
  9052  004324  0E17               	movlw	23
  9053  004326  0101               	movlb	1	; () banked
  9054  004328  6F37               	movwf	??___fttol& (0+255),b
  9055  00432A  0101               	movlb	1	; () banked
  9056  00432C  C133  F138         	movff	___fttol@f1,??___fttol+1
  9057  004330  0101               	movlb	1	; () banked
  9058  004332  C134  F139         	movff	___fttol@f1+1,??___fttol+2
  9059  004336  0101               	movlb	1	; () banked
  9060  004338  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
  9061  00433C  0101               	movlb	1	; () banked
  9062  00433E  2937               	incf	??___fttol& (0+255),w,b
  9063  004340  0101               	movlb	1	; () banked
  9064  004342  6F3B               	movwf	(??___fttol+4)& (0+255),b
  9065  004344  D005               	goto	u6850
  9066  004346                     u6855:
  9067  004346  0101               	movlb	1	; () banked
  9068  004348  90D8               	bcf	status,0,c
  9069  00434A  333A               	rrcf	(??___fttol+3)& (0+255),f,b
  9070  00434C  3339               	rrcf	(??___fttol+2)& (0+255),f,b
  9071  00434E  3338               	rrcf	(??___fttol+1)& (0+255),f,b
  9072  004350                     u6850:
  9073  004350  0101               	movlb	1	; () banked
  9074  004352  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
  9075  004354  D7F8               	goto	u6855
  9076  004356  0101               	movlb	1	; () banked
  9077  004358  5138               	movf	(??___fttol+1)& (0+255),w,b
  9078  00435A  0101               	movlb	1	; () banked
  9079  00435C  0101               	movlb	1	; () banked
  9080  00435E  6F3C               	movwf	___fttol@sign1& (0+255),b
  9081                           
  9082                           ; BSR set to: 1
  9083  004360  0101               	movlb	1	; () banked
  9084  004362  0101               	movlb	1	; () banked
  9085  004364  8F34               	bsf	(___fttol@f1+1)& (0+255),7,b
  9086                           
  9087                           ; BSR set to: 1
  9088  004366  0EFF               	movlw	255
  9089  004368  0101               	movlb	1	; () banked
  9090  00436A  0101               	movlb	1	; () banked
  9091  00436C  1733               	andwf	___fttol@f1& (0+255),f,b
  9092  00436E  0EFF               	movlw	255
  9093  004370  0101               	movlb	1	; () banked
  9094  004372  0101               	movlb	1	; () banked
  9095  004374  1734               	andwf	(___fttol@f1+1)& (0+255),f,b
  9096  004376  0E00               	movlw	0
  9097  004378  0101               	movlb	1	; () banked
  9098  00437A  0101               	movlb	1	; () banked
  9099  00437C  1735               	andwf	(___fttol@f1+2)& (0+255),f,b
  9100                           
  9101                           ; BSR set to: 1
  9102  00437E  0101               	movlb	1	; () banked
  9103  004380  0101               	movlb	1	; () banked
  9104  004382  5133               	movf	___fttol@f1& (0+255),w,b
  9105  004384  0101               	movlb	1	; () banked
  9106  004386  0101               	movlb	1	; () banked
  9107  004388  6F3D               	movwf	___fttol@lval& (0+255),b
  9108  00438A  0101               	movlb	1	; () banked
  9109  00438C  0101               	movlb	1	; () banked
  9110  00438E  5134               	movf	(___fttol@f1+1)& (0+255),w,b
  9111  004390  0101               	movlb	1	; () banked
  9112  004392  6F3E               	movwf	(___fttol@lval+1)& (0+255),b
  9113  004394  0101               	movlb	1	; () banked
  9114  004396  5135               	movf	(___fttol@f1+2)& (0+255),w,b
  9115  004398  0101               	movlb	1	; () banked
  9116  00439A  6F3F               	movwf	(___fttol@lval+2)& (0+255),b
  9117  00439C  0101               	movlb	1	; () banked
  9118  00439E  6B40               	clrf	(___fttol@lval+3)& (0+255),b
  9119                           
  9120                           ; BSR set to: 1
  9121  0043A0  0E8E               	movlw	142
  9122  0043A2  0101               	movlb	1	; () banked
  9123  0043A4  0101               	movlb	1	; () banked
  9124  0043A6  5F41               	subwf	___fttol@exp1& (0+255),f,b
  9125                           
  9126                           ; BSR set to: 1
  9127  0043A8  0101               	movlb	1	; () banked
  9128  0043AA  0101               	movlb	1	; () banked
  9129  0043AC  AF41               	btfss	___fttol@exp1& (0+255),7,b
  9130  0043AE  D016               	goto	l8471
  9131                           
  9132                           ; BSR set to: 1
  9133  0043B0  0101               	movlb	1	; () banked
  9134  0043B2  0101               	movlb	1	; () banked
  9135  0043B4  5141               	movf	___fttol@exp1& (0+255),w,b
  9136  0043B6  0A80               	xorlw	128
  9137  0043B8  0F8F               	addlw	143
  9138  0043BA  A0D8               	btfss	status,0,c
  9139  0043BC  D014               	goto	u6880
  9140  0043BE                     l8467:
  9141                           
  9142                           ; BSR set to: 1
  9143  0043BE  0101               	movlb	1	; () banked
  9144  0043C0  90D8               	bcf	status,0,c
  9145  0043C2  0101               	movlb	1	; () banked
  9146  0043C4  3340               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9147  0043C6  0101               	movlb	1	; () banked
  9148  0043C8  333F               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9149  0043CA  0101               	movlb	1	; () banked
  9150  0043CC  333E               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9151  0043CE  0101               	movlb	1	; () banked
  9152  0043D0  333D               	rrcf	___fttol@lval& (0+255),f,b
  9153                           
  9154                           ; BSR set to: 1
  9155  0043D2  0101               	movlb	1	; () banked
  9156  0043D4  0101               	movlb	1	; () banked
  9157  0043D6  3F41               	incfsz	___fttol@exp1& (0+255),f,b
  9158  0043D8  D7F2               	goto	l8467
  9159  0043DA  D024               	goto	l8481
  9160  0043DC                     l8471:
  9161                           
  9162                           ; BSR set to: 1
  9163  0043DC  0E17               	movlw	23
  9164  0043DE  0101               	movlb	1	; () banked
  9165  0043E0  0101               	movlb	1	; () banked
  9166  0043E2  6541               	cpfsgt	___fttol@exp1& (0+255),b
  9167  0043E4  D01B               	goto	l8479
  9168  0043E6                     u6880:
  9169                           
  9170                           ; BSR set to: 1
  9171  0043E6  0E00               	movlw	0
  9172  0043E8  0101               	movlb	1	; () banked
  9173  0043EA  0101               	movlb	1	; () banked
  9174  0043EC  6F33               	movwf	?___fttol& (0+255),b
  9175  0043EE  0E00               	movlw	0
  9176  0043F0  0101               	movlb	1	; () banked
  9177  0043F2  6F34               	movwf	(?___fttol+1)& (0+255),b
  9178  0043F4  0E00               	movlw	0
  9179  0043F6  0101               	movlb	1	; () banked
  9180  0043F8  6F35               	movwf	(?___fttol+2)& (0+255),b
  9181  0043FA  0E00               	movlw	0
  9182  0043FC  0101               	movlb	1	; () banked
  9183  0043FE  6F36               	movwf	(?___fttol+3)& (0+255),b
  9184  004400  D02E               	goto	l794
  9185  004402                     l8477:
  9186                           
  9187                           ; BSR set to: 1
  9188  004402  0101               	movlb	1	; () banked
  9189  004404  90D8               	bcf	status,0,c
  9190  004406  0101               	movlb	1	; () banked
  9191  004408  373D               	rlcf	___fttol@lval& (0+255),f,b
  9192  00440A  0101               	movlb	1	; () banked
  9193  00440C  373E               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9194  00440E  0101               	movlb	1	; () banked
  9195  004410  373F               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9196  004412  0101               	movlb	1	; () banked
  9197  004414  3740               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9198  004416  0101               	movlb	1	; () banked
  9199  004418  0101               	movlb	1	; () banked
  9200  00441A  0741               	decf	___fttol@exp1& (0+255),f,b
  9201  00441C                     l8479:
  9202                           
  9203                           ; BSR set to: 1
  9204  00441C  0101               	movlb	1	; () banked
  9205  00441E  0101               	movlb	1	; () banked
  9206  004420  6741               	tstfsz	___fttol@exp1& (0+255),b
  9207  004422  D7EF               	goto	l8477
  9208  004424                     l8481:
  9209                           
  9210                           ; BSR set to: 1
  9211  004424  0101               	movlb	1	; () banked
  9212  004426  0101               	movlb	1	; () banked
  9213  004428  513C               	movf	___fttol@sign1& (0+255),w,b
  9214  00442A  B4D8               	btfsc	status,2,c
  9215  00442C  D010               	goto	l8485
  9216                           
  9217                           ; BSR set to: 1
  9218  00442E  0101               	movlb	1	; () banked
  9219  004430  0101               	movlb	1	; () banked
  9220  004432  1F40               	comf	(___fttol@lval+3)& (0+255),f,b
  9221  004434  0101               	movlb	1	; () banked
  9222  004436  1F3F               	comf	(___fttol@lval+2)& (0+255),f,b
  9223  004438  0101               	movlb	1	; () banked
  9224  00443A  1F3E               	comf	(___fttol@lval+1)& (0+255),f,b
  9225  00443C  0101               	movlb	1	; () banked
  9226  00443E  6D3D               	negf	___fttol@lval& (0+255),b
  9227  004440  0E00               	movlw	0
  9228  004442  0101               	movlb	1	; () banked
  9229  004444  233E               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9230  004446  0101               	movlb	1	; () banked
  9231  004448  233F               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9232  00444A  0101               	movlb	1	; () banked
  9233  00444C  2340               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9234  00444E                     l8485:
  9235                           
  9236                           ; BSR set to: 1
  9237  00444E  C13D  F133         	movff	___fttol@lval,?___fttol
  9238  004452  C13E  F134         	movff	___fttol@lval+1,?___fttol+1
  9239  004456  C13F  F135         	movff	___fttol@lval+2,?___fttol+2
  9240  00445A  C140  F136         	movff	___fttol@lval+3,?___fttol+3
  9241  00445E                     l794:
  9242                           
  9243                           ; BSR set to: 1
  9244  00445E  0012               	return	
  9245  004460                     __end_of___fttol:
  9246                           	opt stack 0
  9247                           tblptru	equ	0xFF8
  9248                           tblptrh	equ	0xFF7
  9249                           tblptrl	equ	0xFF6
  9250                           tablat	equ	0xFF5
  9251                           prodh	equ	0xFF4
  9252                           prodl	equ	0xFF3
  9253                           intcon	equ	0xFF2
  9254                           intcon2	equ	0xFF1
  9255                           postinc0	equ	0xFEE
  9256                           wreg	equ	0xFE8
  9257                           indf2	equ	0xFDF
  9258                           postinc2	equ	0xFDE
  9259                           postdec2	equ	0xFDD
  9260                           fsr2h	equ	0xFDA
  9261                           fsr2l	equ	0xFD9
  9262                           status	equ	0xFD8
  9263                           
  9264 ;; *************** function ___ftdiv *****************
  9265 ;; Defined at:
  9266 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  f1              3   39[BANK1 ] float 
  9269 ;;  f2              3   42[BANK1 ] float 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  f3              3   51[BANK1 ] float 
  9272 ;;  sign            1   55[BANK1 ] unsigned char 
  9273 ;;  exp             1   54[BANK1 ] unsigned char 
  9274 ;;  cntr            1   50[BANK1 ] unsigned char 
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  3   39[BANK1 ] float 
  9277 ;; Registers used:
  9278 ;;		wreg, status,2, status,0, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9284 ;;      Params:         0       0       6       0       0       0       0       0       0
  9285 ;;      Locals:         0       0       6       0       0       0       0       0       0
  9286 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9287 ;;      Totals:         0       0      17       0       0       0       0       0       0
  9288 ;;Total ram usage:       17 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:   10
  9291 ;; This function calls:
  9292 ;;		___ftpack
  9293 ;; This function is called by:
  9294 ;;		_USART_Init
  9295 ;;		_Read_LDR
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text28
  9300  003F50                     __ptext28:
  9301                           	opt stack 0
  9302  003F50                     ___ftdiv:
  9303                           	opt stack 19
  9304                           
  9305                           ; BSR set to: 1
  9306                           ;incstack = 0
  9307                           ;incstack = 0
  9308  003F50  0E0F               	movlw	15
  9309  003F52  0101               	movlb	1	; () banked
  9310  003F54  6F2D               	movwf	??___ftdiv& (0+255),b
  9311  003F56  0101               	movlb	1	; () banked
  9312  003F58  C127  F12E         	movff	___ftdiv@f1,??___ftdiv+1
  9313  003F5C  0101               	movlb	1	; () banked
  9314  003F5E  C128  F12F         	movff	___ftdiv@f1+1,??___ftdiv+2
  9315  003F62  0101               	movlb	1	; () banked
  9316  003F64  C129  F130         	movff	___ftdiv@f1+2,??___ftdiv+3
  9317  003F68  0101               	movlb	1	; () banked
  9318  003F6A  292D               	incf	??___ftdiv& (0+255),w,b
  9319  003F6C  0101               	movlb	1	; () banked
  9320  003F6E  6F31               	movwf	(??___ftdiv+4)& (0+255),b
  9321  003F70  D005               	goto	u10010
  9322  003F72                     u10015:
  9323  003F72  0101               	movlb	1	; () banked
  9324  003F74  90D8               	bcf	status,0,c
  9325  003F76  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
  9326  003F78  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
  9327  003F7A  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
  9328  003F7C                     u10010:
  9329  003F7C  0101               	movlb	1	; () banked
  9330  003F7E  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
  9331  003F80  D7F8               	goto	u10015
  9332  003F82  0101               	movlb	1	; () banked
  9333  003F84  512E               	movf	(??___ftdiv+1)& (0+255),w,b
  9334  003F86  0101               	movlb	1	; () banked
  9335  003F88  0101               	movlb	1	; () banked
  9336  003F8A  6F36               	movwf	___ftdiv@exp& (0+255),b
  9337  003F8C  0101               	movlb	1	; () banked
  9338  003F8E  6736               	tstfsz	___ftdiv@exp& (0+255),b
  9339  003F90  D001               	goto	l10799
  9340  003F92  D021               	goto	u10040
  9341  003F94                     l10799:
  9342                           
  9343                           ; BSR set to: 1
  9344  003F94  0E0F               	movlw	15
  9345  003F96  0101               	movlb	1	; () banked
  9346  003F98  6F2D               	movwf	??___ftdiv& (0+255),b
  9347  003F9A  0101               	movlb	1	; () banked
  9348  003F9C  C12A  F12E         	movff	___ftdiv@f2,??___ftdiv+1
  9349  003FA0  0101               	movlb	1	; () banked
  9350  003FA2  C12B  F12F         	movff	___ftdiv@f2+1,??___ftdiv+2
  9351  003FA6  0101               	movlb	1	; () banked
  9352  003FA8  C12C  F130         	movff	___ftdiv@f2+2,??___ftdiv+3
  9353  003FAC  0101               	movlb	1	; () banked
  9354  003FAE  292D               	incf	??___ftdiv& (0+255),w,b
  9355  003FB0  0101               	movlb	1	; () banked
  9356  003FB2  6F31               	movwf	(??___ftdiv+4)& (0+255),b
  9357  003FB4  D005               	goto	u10030
  9358  003FB6                     u10035:
  9359  003FB6  0101               	movlb	1	; () banked
  9360  003FB8  90D8               	bcf	status,0,c
  9361  003FBA  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
  9362  003FBC  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
  9363  003FBE  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
  9364  003FC0                     u10030:
  9365  003FC0  0101               	movlb	1	; () banked
  9366  003FC2  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
  9367  003FC4  D7F8               	goto	u10035
  9368  003FC6  0101               	movlb	1	; () banked
  9369  003FC8  512E               	movf	(??___ftdiv+1)& (0+255),w,b
  9370  003FCA  0101               	movlb	1	; () banked
  9371  003FCC  0101               	movlb	1	; () banked
  9372  003FCE  6F37               	movwf	___ftdiv@sign& (0+255),b
  9373  003FD0  0101               	movlb	1	; () banked
  9374  003FD2  6737               	tstfsz	___ftdiv@sign& (0+255),b
  9375  003FD4  D00D               	goto	l10805
  9376  003FD6                     u10040:
  9377                           
  9378                           ; BSR set to: 1
  9379  003FD6  0E00               	movlw	0
  9380  003FD8  0101               	movlb	1	; () banked
  9381  003FDA  0101               	movlb	1	; () banked
  9382  003FDC  6F27               	movwf	?___ftdiv& (0+255),b
  9383  003FDE  0E00               	movlw	0
  9384  003FE0  0101               	movlb	1	; () banked
  9385  003FE2  0101               	movlb	1	; () banked
  9386  003FE4  6F28               	movwf	(?___ftdiv+1)& (0+255),b
  9387  003FE6  0E00               	movlw	0
  9388  003FE8  0101               	movlb	1	; () banked
  9389  003FEA  0101               	movlb	1	; () banked
  9390  003FEC  6F29               	movwf	(?___ftdiv+2)& (0+255),b
  9391  003FEE  D093               	goto	l742
  9392  003FF0                     l10805:
  9393                           
  9394                           ; BSR set to: 1
  9395  003FF0  0E00               	movlw	0
  9396  003FF2  0101               	movlb	1	; () banked
  9397  003FF4  0101               	movlb	1	; () banked
  9398  003FF6  6F33               	movwf	___ftdiv@f3& (0+255),b
  9399  003FF8  0E00               	movlw	0
  9400  003FFA  0101               	movlb	1	; () banked
  9401  003FFC  0101               	movlb	1	; () banked
  9402  003FFE  6F34               	movwf	(___ftdiv@f3+1)& (0+255),b
  9403  004000  0E00               	movlw	0
  9404  004002  0101               	movlb	1	; () banked
  9405  004004  0101               	movlb	1	; () banked
  9406  004006  6F35               	movwf	(___ftdiv@f3+2)& (0+255),b
  9407                           
  9408                           ; BSR set to: 1
  9409  004008  0101               	movlb	1	; () banked
  9410  00400A  0101               	movlb	1	; () banked
  9411  00400C  5137               	movf	___ftdiv@sign& (0+255),w,b
  9412  00400E  0F89               	addlw	137
  9413  004010  0101               	movlb	1	; () banked
  9414  004012  0101               	movlb	1	; () banked
  9415  004014  5F36               	subwf	___ftdiv@exp& (0+255),f,b
  9416                           
  9417                           ; BSR set to: 1
  9418  004016  C129  F137         	movff	___ftdiv@f1+2,___ftdiv@sign
  9419                           
  9420                           ; BSR set to: 1
  9421  00401A  0101               	movlb	1	; () banked
  9422  00401C  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9423  00401E  0101               	movlb	1	; () banked
  9424  004020  0101               	movlb	1	; () banked
  9425  004022  1B37               	xorwf	___ftdiv@sign& (0+255),f,b
  9426                           
  9427                           ; BSR set to: 1
  9428  004024  0E80               	movlw	128
  9429  004026  0101               	movlb	1	; () banked
  9430  004028  0101               	movlb	1	; () banked
  9431  00402A  1737               	andwf	___ftdiv@sign& (0+255),f,b
  9432                           
  9433                           ; BSR set to: 1
  9434  00402C  0101               	movlb	1	; () banked
  9435  00402E  0101               	movlb	1	; () banked
  9436  004030  8F28               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9437                           
  9438                           ; BSR set to: 1
  9439  004032  0EFF               	movlw	255
  9440  004034  0101               	movlb	1	; () banked
  9441  004036  0101               	movlb	1	; () banked
  9442  004038  1727               	andwf	___ftdiv@f1& (0+255),f,b
  9443  00403A  0EFF               	movlw	255
  9444  00403C  0101               	movlb	1	; () banked
  9445  00403E  0101               	movlb	1	; () banked
  9446  004040  1728               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9447  004042  0E00               	movlw	0
  9448  004044  0101               	movlb	1	; () banked
  9449  004046  0101               	movlb	1	; () banked
  9450  004048  1729               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9451                           
  9452                           ; BSR set to: 1
  9453  00404A  0101               	movlb	1	; () banked
  9454  00404C  0101               	movlb	1	; () banked
  9455  00404E  8F2B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9456                           
  9457                           ; BSR set to: 1
  9458  004050  0EFF               	movlw	255
  9459  004052  0101               	movlb	1	; () banked
  9460  004054  0101               	movlb	1	; () banked
  9461  004056  172A               	andwf	___ftdiv@f2& (0+255),f,b
  9462  004058  0EFF               	movlw	255
  9463  00405A  0101               	movlb	1	; () banked
  9464  00405C  0101               	movlb	1	; () banked
  9465  00405E  172B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9466  004060  0E00               	movlw	0
  9467  004062  0101               	movlb	1	; () banked
  9468  004064  0101               	movlb	1	; () banked
  9469  004066  172C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9470                           
  9471                           ; BSR set to: 1
  9472  004068  0101               	movlb	1	; () banked
  9473  00406A  6F2D               	movwf	??___ftdiv& (0+255),b
  9474  00406C  0E18               	movlw	24
  9475  00406E  0101               	movlb	1	; () banked
  9476  004070  0101               	movlb	1	; () banked
  9477  004072  6F32               	movwf	___ftdiv@cntr& (0+255),b
  9478  004074  0101               	movlb	1	; () banked
  9479  004076  512D               	movf	??___ftdiv& (0+255),w,b
  9480  004078                     l744:
  9481                           
  9482                           ; BSR set to: 1
  9483  004078  0101               	movlb	1	; () banked
  9484  00407A  90D8               	bcf	status,0,c
  9485  00407C  0101               	movlb	1	; () banked
  9486  00407E  3733               	rlcf	___ftdiv@f3& (0+255),f,b
  9487  004080  0101               	movlb	1	; () banked
  9488  004082  3734               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9489  004084  0101               	movlb	1	; () banked
  9490  004086  3735               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9491                           
  9492                           ; BSR set to: 1
  9493  004088  0101               	movlb	1	; () banked
  9494  00408A  0101               	movlb	1	; () banked
  9495  00408C  512A               	movf	___ftdiv@f2& (0+255),w,b
  9496  00408E  0101               	movlb	1	; () banked
  9497  004090  0101               	movlb	1	; () banked
  9498  004092  5D27               	subwf	___ftdiv@f1& (0+255),w,b
  9499  004094  0101               	movlb	1	; () banked
  9500  004096  0101               	movlb	1	; () banked
  9501  004098  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9502  00409A  0101               	movlb	1	; () banked
  9503  00409C  0101               	movlb	1	; () banked
  9504  00409E  5928               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9505  0040A0  0101               	movlb	1	; () banked
  9506  0040A2  0101               	movlb	1	; () banked
  9507  0040A4  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9508  0040A6  0101               	movlb	1	; () banked
  9509  0040A8  0101               	movlb	1	; () banked
  9510  0040AA  5929               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9511  0040AC  A0D8               	btfss	status,0,c
  9512  0040AE  D015               	goto	l745
  9513                           
  9514                           ; BSR set to: 1
  9515  0040B0  0101               	movlb	1	; () banked
  9516  0040B2  0101               	movlb	1	; () banked
  9517  0040B4  512A               	movf	___ftdiv@f2& (0+255),w,b
  9518  0040B6  0101               	movlb	1	; () banked
  9519  0040B8  0101               	movlb	1	; () banked
  9520  0040BA  5F27               	subwf	___ftdiv@f1& (0+255),f,b
  9521  0040BC  0101               	movlb	1	; () banked
  9522  0040BE  0101               	movlb	1	; () banked
  9523  0040C0  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9524  0040C2  0101               	movlb	1	; () banked
  9525  0040C4  0101               	movlb	1	; () banked
  9526  0040C6  5B28               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9527  0040C8  0101               	movlb	1	; () banked
  9528  0040CA  0101               	movlb	1	; () banked
  9529  0040CC  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9530  0040CE  0101               	movlb	1	; () banked
  9531  0040D0  0101               	movlb	1	; () banked
  9532  0040D2  5B29               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9533                           
  9534                           ; BSR set to: 1
  9535  0040D4  0101               	movlb	1	; () banked
  9536  0040D6  0101               	movlb	1	; () banked
  9537  0040D8  8133               	bsf	___ftdiv@f3& (0+255),0,b
  9538  0040DA                     l745:
  9539                           
  9540                           ; BSR set to: 1
  9541  0040DA  0101               	movlb	1	; () banked
  9542  0040DC  90D8               	bcf	status,0,c
  9543  0040DE  0101               	movlb	1	; () banked
  9544  0040E0  3727               	rlcf	___ftdiv@f1& (0+255),f,b
  9545  0040E2  0101               	movlb	1	; () banked
  9546  0040E4  3728               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9547  0040E6  0101               	movlb	1	; () banked
  9548  0040E8  3729               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9549                           
  9550                           ; BSR set to: 1
  9551  0040EA  0101               	movlb	1	; () banked
  9552  0040EC  0101               	movlb	1	; () banked
  9553  0040EE  2F32               	decfsz	___ftdiv@cntr& (0+255),f,b
  9554  0040F0  D7C3               	goto	l744
  9555                           
  9556                           ; BSR set to: 1
  9557                           
  9558                           ; BSR set to: 1
  9559  0040F2  C133  F100         	movff	___ftdiv@f3,?___ftpack
  9560  0040F6  C134  F101         	movff	___ftdiv@f3+1,?___ftpack+1
  9561  0040FA  C135  F102         	movff	___ftdiv@f3+2,?___ftpack+2
  9562  0040FE  C136  F103         	movff	___ftdiv@exp,?___ftpack+3
  9563  004102  C137  F104         	movff	___ftdiv@sign,?___ftpack+4
  9564  004106  EC30  F022         	call	___ftpack	;wreg free
  9565  00410A  C102  F129         	movff	?___ftpack+2,?___ftdiv+2
  9566  00410E  C101  F128         	movff	?___ftpack+1,?___ftdiv+1
  9567  004112  C100  F127         	movff	?___ftpack,?___ftdiv
  9568  004116                     l742:
  9569  004116  0012               	return	
  9570  004118                     __end_of___ftdiv:
  9571                           	opt stack 0
  9572                           tblptru	equ	0xFF8
  9573                           tblptrh	equ	0xFF7
  9574                           tblptrl	equ	0xFF6
  9575                           tablat	equ	0xFF5
  9576                           prodh	equ	0xFF4
  9577                           prodl	equ	0xFF3
  9578                           intcon	equ	0xFF2
  9579                           intcon2	equ	0xFF1
  9580                           postinc0	equ	0xFEE
  9581                           wreg	equ	0xFE8
  9582                           indf2	equ	0xFDF
  9583                           postinc2	equ	0xFDE
  9584                           postdec2	equ	0xFDD
  9585                           fsr2h	equ	0xFDA
  9586                           fsr2l	equ	0xFD9
  9587                           status	equ	0xFD8
  9588                           
  9589 ;; *************** function ___ftadd *****************
  9590 ;; Defined at:
  9591 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;  f1              3   56[BANK1 ] float 
  9594 ;;  f2              3   59[BANK1 ] float 
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;  exp1            1   69[BANK1 ] unsigned char 
  9597 ;;  exp2            1   68[BANK1 ] unsigned char 
  9598 ;;  sign            1   67[BANK1 ] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  3   56[BANK1 ] float 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2, status,0, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9608 ;;      Params:         0       0       6       0       0       0       0       0       0
  9609 ;;      Locals:         0       0       3       0       0       0       0       0       0
  9610 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9611 ;;      Totals:         0       0      14       0       0       0       0       0       0
  9612 ;;Total ram usage:       14 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:   10
  9615 ;; This function calls:
  9616 ;;		___ftpack
  9617 ;; This function is called by:
  9618 ;;		_USART_Init
  9619 ;;		___asftadd
  9620 ;;		___ftsub
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text29
  9625  0031E6                     __ptext29:
  9626                           	opt stack 0
  9627  0031E6                     ___ftadd:
  9628                           	opt stack 17
  9629                           
  9630                           ;incstack = 0
  9631                           ;incstack = 0
  9632  0031E6  0E0F               	movlw	15
  9633  0031E8  0101               	movlb	1	; () banked
  9634  0031EA  6F3E               	movwf	??___ftadd& (0+255),b
  9635  0031EC  0101               	movlb	1	; () banked
  9636  0031EE  C138  F13F         	movff	___ftadd@f1,??___ftadd+1
  9637  0031F2  0101               	movlb	1	; () banked
  9638  0031F4  C139  F140         	movff	___ftadd@f1+1,??___ftadd+2
  9639  0031F8  0101               	movlb	1	; () banked
  9640  0031FA  C13A  F141         	movff	___ftadd@f1+2,??___ftadd+3
  9641  0031FE  0101               	movlb	1	; () banked
  9642  003200  293E               	incf	??___ftadd& (0+255),w,b
  9643  003202  0101               	movlb	1	; () banked
  9644  003204  6F42               	movwf	(??___ftadd+4)& (0+255),b
  9645  003206  D005               	goto	u9800
  9646  003208                     u9805:
  9647  003208  0101               	movlb	1	; () banked
  9648  00320A  90D8               	bcf	status,0,c
  9649  00320C  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
  9650  00320E  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
  9651  003210  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
  9652  003212                     u9800:
  9653  003212  0101               	movlb	1	; () banked
  9654  003214  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
  9655  003216  D7F8               	goto	u9805
  9656  003218  0101               	movlb	1	; () banked
  9657  00321A  513F               	movf	(??___ftadd+1)& (0+255),w,b
  9658  00321C  0101               	movlb	1	; () banked
  9659  00321E  0101               	movlb	1	; () banked
  9660  003220  6F45               	movwf	___ftadd@exp1& (0+255),b
  9661  003222  0E0F               	movlw	15
  9662  003224  0101               	movlb	1	; () banked
  9663  003226  6F3E               	movwf	??___ftadd& (0+255),b
  9664  003228  0101               	movlb	1	; () banked
  9665  00322A  C13B  F13F         	movff	___ftadd@f2,??___ftadd+1
  9666  00322E  0101               	movlb	1	; () banked
  9667  003230  C13C  F140         	movff	___ftadd@f2+1,??___ftadd+2
  9668  003234  0101               	movlb	1	; () banked
  9669  003236  C13D  F141         	movff	___ftadd@f2+2,??___ftadd+3
  9670  00323A  0101               	movlb	1	; () banked
  9671  00323C  293E               	incf	??___ftadd& (0+255),w,b
  9672  00323E  0101               	movlb	1	; () banked
  9673  003240  6F42               	movwf	(??___ftadd+4)& (0+255),b
  9674  003242  D005               	goto	u9810
  9675  003244                     u9815:
  9676  003244  0101               	movlb	1	; () banked
  9677  003246  90D8               	bcf	status,0,c
  9678  003248  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
  9679  00324A  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
  9680  00324C  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
  9681  00324E                     u9810:
  9682  00324E  0101               	movlb	1	; () banked
  9683  003250  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
  9684  003252  D7F8               	goto	u9815
  9685  003254  0101               	movlb	1	; () banked
  9686  003256  513F               	movf	(??___ftadd+1)& (0+255),w,b
  9687  003258  0101               	movlb	1	; () banked
  9688  00325A  0101               	movlb	1	; () banked
  9689  00325C  6F44               	movwf	___ftadd@exp2& (0+255),b
  9690                           
  9691                           ; BSR set to: 1
  9692  00325E  0101               	movlb	1	; () banked
  9693  003260  0101               	movlb	1	; () banked
  9694  003262  5145               	movf	___ftadd@exp1& (0+255),w,b
  9695  003264  B4D8               	btfsc	status,2,c
  9696  003266  D015               	goto	l710
  9697                           
  9698                           ; BSR set to: 1
  9699  003268  0101               	movlb	1	; () banked
  9700  00326A  0101               	movlb	1	; () banked
  9701  00326C  5144               	movf	___ftadd@exp2& (0+255),w,b
  9702  00326E  0101               	movlb	1	; () banked
  9703  003270  0101               	movlb	1	; () banked
  9704  003272  6145               	cpfslt	___ftadd@exp1& (0+255),b
  9705  003274  D015               	goto	l10731
  9706                           
  9707                           ; BSR set to: 1
  9708  003276  0101               	movlb	1	; () banked
  9709  003278  0101               	movlb	1	; () banked
  9710  00327A  5145               	movf	___ftadd@exp1& (0+255),w,b
  9711  00327C  0800               	sublw	0
  9712  00327E  0101               	movlb	1	; () banked
  9713  003280  0101               	movlb	1	; () banked
  9714  003282  2544               	addwf	___ftadd@exp2& (0+255),w,b
  9715  003284  0101               	movlb	1	; () banked
  9716  003286  6F3E               	movwf	??___ftadd& (0+255),b
  9717  003288  0E19               	movlw	25
  9718  00328A  0101               	movlb	1	; () banked
  9719  00328C  5D3E               	subwf	??___ftadd& (0+255),w,b
  9720  00328E  A0D8               	btfss	status,0,c
  9721  003290  D007               	goto	l10731
  9722  003292                     l710:
  9723                           
  9724                           ; BSR set to: 1
  9725  003292  C13B  F138         	movff	___ftadd@f2,?___ftadd
  9726  003296  C13C  F139         	movff	___ftadd@f2+1,?___ftadd+1
  9727  00329A  C13D  F13A         	movff	___ftadd@f2+2,?___ftadd+2
  9728  00329E  D148               	goto	l711
  9729  0032A0                     l10731:
  9730                           
  9731                           ; BSR set to: 1
  9732  0032A0  0101               	movlb	1	; () banked
  9733  0032A2  0101               	movlb	1	; () banked
  9734  0032A4  5144               	movf	___ftadd@exp2& (0+255),w,b
  9735  0032A6  B4D8               	btfsc	status,2,c
  9736  0032A8  D015               	goto	l714
  9737                           
  9738                           ; BSR set to: 1
  9739  0032AA  0101               	movlb	1	; () banked
  9740  0032AC  0101               	movlb	1	; () banked
  9741  0032AE  5145               	movf	___ftadd@exp1& (0+255),w,b
  9742  0032B0  0101               	movlb	1	; () banked
  9743  0032B2  0101               	movlb	1	; () banked
  9744  0032B4  6144               	cpfslt	___ftadd@exp2& (0+255),b
  9745  0032B6  D015               	goto	l10737
  9746                           
  9747                           ; BSR set to: 1
  9748  0032B8  0101               	movlb	1	; () banked
  9749  0032BA  0101               	movlb	1	; () banked
  9750  0032BC  5144               	movf	___ftadd@exp2& (0+255),w,b
  9751  0032BE  0800               	sublw	0
  9752  0032C0  0101               	movlb	1	; () banked
  9753  0032C2  0101               	movlb	1	; () banked
  9754  0032C4  2545               	addwf	___ftadd@exp1& (0+255),w,b
  9755  0032C6  0101               	movlb	1	; () banked
  9756  0032C8  6F3E               	movwf	??___ftadd& (0+255),b
  9757  0032CA  0E19               	movlw	25
  9758  0032CC  0101               	movlb	1	; () banked
  9759  0032CE  5D3E               	subwf	??___ftadd& (0+255),w,b
  9760  0032D0  A0D8               	btfss	status,0,c
  9761  0032D2  D007               	goto	l10737
  9762  0032D4                     l714:
  9763                           
  9764                           ; BSR set to: 1
  9765  0032D4  C138  F138         	movff	___ftadd@f1,?___ftadd
  9766  0032D8  C139  F139         	movff	___ftadd@f1+1,?___ftadd+1
  9767  0032DC  C13A  F13A         	movff	___ftadd@f1+2,?___ftadd+2
  9768  0032E0  D127               	goto	l711
  9769  0032E2                     l10737:
  9770                           
  9771                           ; BSR set to: 1
  9772  0032E2  0101               	movlb	1	; () banked
  9773  0032E4  6F3E               	movwf	??___ftadd& (0+255),b
  9774  0032E6  0E06               	movlw	6
  9775  0032E8  0101               	movlb	1	; () banked
  9776  0032EA  0101               	movlb	1	; () banked
  9777  0032EC  6F43               	movwf	___ftadd@sign& (0+255),b
  9778  0032EE  0101               	movlb	1	; () banked
  9779  0032F0  513E               	movf	??___ftadd& (0+255),w,b
  9780                           
  9781                           ; BSR set to: 1
  9782  0032F2  0101               	movlb	1	; () banked
  9783  0032F4  0101               	movlb	1	; () banked
  9784  0032F6  AF3A               	btfss	(___ftadd@f1+2)& (0+255),7,b
  9785  0032F8  D003               	goto	l10743
  9786                           
  9787                           ; BSR set to: 1
  9788  0032FA  0101               	movlb	1	; () banked
  9789  0032FC  0101               	movlb	1	; () banked
  9790  0032FE  8F43               	bsf	___ftadd@sign& (0+255),7,b
  9791  003300                     l10743:
  9792                           
  9793                           ; BSR set to: 1
  9794  003300  0101               	movlb	1	; () banked
  9795  003302  0101               	movlb	1	; () banked
  9796  003304  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9797  003306  D003               	goto	l716
  9798                           
  9799                           ; BSR set to: 1
  9800  003308  0101               	movlb	1	; () banked
  9801  00330A  0101               	movlb	1	; () banked
  9802  00330C  8D43               	bsf	___ftadd@sign& (0+255),6,b
  9803  00330E                     l716:
  9804                           
  9805                           ; BSR set to: 1
  9806  00330E  0101               	movlb	1	; () banked
  9807  003310  0101               	movlb	1	; () banked
  9808  003312  8F39               	bsf	(___ftadd@f1+1)& (0+255),7,b
  9809                           
  9810                           ; BSR set to: 1
  9811  003314  0EFF               	movlw	255
  9812  003316  0101               	movlb	1	; () banked
  9813  003318  0101               	movlb	1	; () banked
  9814  00331A  1738               	andwf	___ftadd@f1& (0+255),f,b
  9815  00331C  0EFF               	movlw	255
  9816  00331E  0101               	movlb	1	; () banked
  9817  003320  0101               	movlb	1	; () banked
  9818  003322  1739               	andwf	(___ftadd@f1+1)& (0+255),f,b
  9819  003324  0E00               	movlw	0
  9820  003326  0101               	movlb	1	; () banked
  9821  003328  0101               	movlb	1	; () banked
  9822  00332A  173A               	andwf	(___ftadd@f1+2)& (0+255),f,b
  9823  00332C  0101               	movlb	1	; () banked
  9824  00332E  0101               	movlb	1	; () banked
  9825  003330  8F3C               	bsf	(___ftadd@f2+1)& (0+255),7,b
  9826                           
  9827                           ; BSR set to: 1
  9828  003332  0EFF               	movlw	255
  9829  003334  0101               	movlb	1	; () banked
  9830  003336  0101               	movlb	1	; () banked
  9831  003338  173B               	andwf	___ftadd@f2& (0+255),f,b
  9832  00333A  0EFF               	movlw	255
  9833  00333C  0101               	movlb	1	; () banked
  9834  00333E  0101               	movlb	1	; () banked
  9835  003340  173C               	andwf	(___ftadd@f2+1)& (0+255),f,b
  9836  003342  0E00               	movlw	0
  9837  003344  0101               	movlb	1	; () banked
  9838  003346  0101               	movlb	1	; () banked
  9839  003348  173D               	andwf	(___ftadd@f2+2)& (0+255),f,b
  9840                           
  9841                           ; BSR set to: 1
  9842  00334A  0101               	movlb	1	; () banked
  9843  00334C  0101               	movlb	1	; () banked
  9844  00334E  5144               	movf	___ftadd@exp2& (0+255),w,b
  9845  003350  0101               	movlb	1	; () banked
  9846  003352  0101               	movlb	1	; () banked
  9847  003354  6145               	cpfslt	___ftadd@exp1& (0+255),b
  9848  003356  D02F               	goto	l10763
  9849  003358                     l10753:
  9850                           
  9851                           ; BSR set to: 1
  9852  003358  0101               	movlb	1	; () banked
  9853  00335A  90D8               	bcf	status,0,c
  9854  00335C  0101               	movlb	1	; () banked
  9855  00335E  373B               	rlcf	___ftadd@f2& (0+255),f,b
  9856  003360  0101               	movlb	1	; () banked
  9857  003362  373C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  9858  003364  0101               	movlb	1	; () banked
  9859  003366  373D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  9860  003368  0101               	movlb	1	; () banked
  9861  00336A  0101               	movlb	1	; () banked
  9862  00336C  0744               	decf	___ftadd@exp2& (0+255),f,b
  9863                           
  9864                           ; BSR set to: 1
  9865  00336E  0101               	movlb	1	; () banked
  9866  003370  0101               	movlb	1	; () banked
  9867  003372  5144               	movf	___ftadd@exp2& (0+255),w,b
  9868  003374  0101               	movlb	1	; () banked
  9869  003376  0101               	movlb	1	; () banked
  9870  003378  1945               	xorwf	___ftadd@exp1& (0+255),w,b
  9871  00337A  B4D8               	btfsc	status,2,c
  9872  00337C  D014               	goto	l10761
  9873                           
  9874                           ; BSR set to: 1
  9875  00337E  0101               	movlb	1	; () banked
  9876  003380  0101               	movlb	1	; () banked
  9877  003382  0743               	decf	___ftadd@sign& (0+255),f,b
  9878  003384  0101               	movlb	1	; () banked
  9879  003386  5143               	movf	___ftadd@sign& (0+255),w,b
  9880  003388  0B07               	andlw	7
  9881  00338A  B4D8               	btfsc	status,2,c
  9882  00338C  D00C               	goto	l10761
  9883  00338E  D7E4               	goto	l10753
  9884  003390                     l10759:
  9885                           
  9886                           ; BSR set to: 1
  9887  003390  0101               	movlb	1	; () banked
  9888  003392  90D8               	bcf	status,0,c
  9889  003394  0101               	movlb	1	; () banked
  9890  003396  333A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  9891  003398  0101               	movlb	1	; () banked
  9892  00339A  3339               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  9893  00339C  0101               	movlb	1	; () banked
  9894  00339E  3338               	rrcf	___ftadd@f1& (0+255),f,b
  9895  0033A0  0101               	movlb	1	; () banked
  9896  0033A2  0101               	movlb	1	; () banked
  9897  0033A4  2B45               	incf	___ftadd@exp1& (0+255),f,b
  9898  0033A6                     l10761:
  9899                           
  9900                           ; BSR set to: 1
  9901  0033A6  0101               	movlb	1	; () banked
  9902  0033A8  0101               	movlb	1	; () banked
  9903  0033AA  5144               	movf	___ftadd@exp2& (0+255),w,b
  9904  0033AC  0101               	movlb	1	; () banked
  9905  0033AE  0101               	movlb	1	; () banked
  9906  0033B0  6345               	cpfseq	___ftadd@exp1& (0+255),b
  9907  0033B2  D7EE               	goto	l10759
  9908  0033B4  D035               	goto	l725
  9909  0033B6                     l10763:
  9910                           
  9911                           ; BSR set to: 1
  9912  0033B6  0101               	movlb	1	; () banked
  9913  0033B8  0101               	movlb	1	; () banked
  9914  0033BA  5145               	movf	___ftadd@exp1& (0+255),w,b
  9915  0033BC  0101               	movlb	1	; () banked
  9916  0033BE  0101               	movlb	1	; () banked
  9917  0033C0  6144               	cpfslt	___ftadd@exp2& (0+255),b
  9918  0033C2  D02E               	goto	l725
  9919  0033C4                     l10765:
  9920                           
  9921                           ; BSR set to: 1
  9922  0033C4  0101               	movlb	1	; () banked
  9923  0033C6  90D8               	bcf	status,0,c
  9924  0033C8  0101               	movlb	1	; () banked
  9925  0033CA  3738               	rlcf	___ftadd@f1& (0+255),f,b
  9926  0033CC  0101               	movlb	1	; () banked
  9927  0033CE  3739               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  9928  0033D0  0101               	movlb	1	; () banked
  9929  0033D2  373A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  9930  0033D4  0101               	movlb	1	; () banked
  9931  0033D6  0101               	movlb	1	; () banked
  9932  0033D8  0745               	decf	___ftadd@exp1& (0+255),f,b
  9933                           
  9934                           ; BSR set to: 1
  9935  0033DA  0101               	movlb	1	; () banked
  9936  0033DC  0101               	movlb	1	; () banked
  9937  0033DE  5144               	movf	___ftadd@exp2& (0+255),w,b
  9938  0033E0  0101               	movlb	1	; () banked
  9939  0033E2  0101               	movlb	1	; () banked
  9940  0033E4  1945               	xorwf	___ftadd@exp1& (0+255),w,b
  9941  0033E6  B4D8               	btfsc	status,2,c
  9942  0033E8  D014               	goto	l10773
  9943                           
  9944                           ; BSR set to: 1
  9945  0033EA  0101               	movlb	1	; () banked
  9946  0033EC  0101               	movlb	1	; () banked
  9947  0033EE  0743               	decf	___ftadd@sign& (0+255),f,b
  9948  0033F0  0101               	movlb	1	; () banked
  9949  0033F2  5143               	movf	___ftadd@sign& (0+255),w,b
  9950  0033F4  0B07               	andlw	7
  9951  0033F6  B4D8               	btfsc	status,2,c
  9952  0033F8  D00C               	goto	l10773
  9953  0033FA  D7E4               	goto	l10765
  9954  0033FC                     l10771:
  9955                           
  9956                           ; BSR set to: 1
  9957  0033FC  0101               	movlb	1	; () banked
  9958  0033FE  90D8               	bcf	status,0,c
  9959  003400  0101               	movlb	1	; () banked
  9960  003402  333D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  9961  003404  0101               	movlb	1	; () banked
  9962  003406  333C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  9963  003408  0101               	movlb	1	; () banked
  9964  00340A  333B               	rrcf	___ftadd@f2& (0+255),f,b
  9965  00340C  0101               	movlb	1	; () banked
  9966  00340E  0101               	movlb	1	; () banked
  9967  003410  2B44               	incf	___ftadd@exp2& (0+255),f,b
  9968  003412                     l10773:
  9969                           
  9970                           ; BSR set to: 1
  9971  003412  0101               	movlb	1	; () banked
  9972  003414  0101               	movlb	1	; () banked
  9973  003416  5144               	movf	___ftadd@exp2& (0+255),w,b
  9974  003418  0101               	movlb	1	; () banked
  9975  00341A  0101               	movlb	1	; () banked
  9976  00341C  6345               	cpfseq	___ftadd@exp1& (0+255),b
  9977  00341E  D7EE               	goto	l10771
  9978  003420                     l725:
  9979                           
  9980                           ; BSR set to: 1
  9981  003420  0101               	movlb	1	; () banked
  9982  003422  0101               	movlb	1	; () banked
  9983  003424  AF43               	btfss	___ftadd@sign& (0+255),7,b
  9984  003426  D018               	goto	l734
  9985                           
  9986                           ; BSR set to: 1
  9987  003428  0EFF               	movlw	255
  9988  00342A  0101               	movlb	1	; () banked
  9989  00342C  0101               	movlb	1	; () banked
  9990  00342E  1B38               	xorwf	___ftadd@f1& (0+255),f,b
  9991  003430  0EFF               	movlw	255
  9992  003432  0101               	movlb	1	; () banked
  9993  003434  0101               	movlb	1	; () banked
  9994  003436  1B39               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  9995  003438  0EFF               	movlw	255
  9996  00343A  0101               	movlb	1	; () banked
  9997  00343C  0101               	movlb	1	; () banked
  9998  00343E  1B3A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  9999  003440  0E01               	movlw	1
 10000  003442  0101               	movlb	1	; () banked
 10001  003444  0101               	movlb	1	; () banked
 10002  003446  2738               	addwf	___ftadd@f1& (0+255),f,b
 10003  003448  0E00               	movlw	0
 10004  00344A  0101               	movlb	1	; () banked
 10005  00344C  0101               	movlb	1	; () banked
 10006  00344E  2339               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10007  003450  0E00               	movlw	0
 10008  003452  0101               	movlb	1	; () banked
 10009  003454  0101               	movlb	1	; () banked
 10010  003456  233A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10011  003458                     l734:
 10012                           
 10013                           ; BSR set to: 1
 10014  003458  0101               	movlb	1	; () banked
 10015  00345A  0101               	movlb	1	; () banked
 10016  00345C  AD43               	btfss	___ftadd@sign& (0+255),6,b
 10017  00345E  D018               	goto	l10779
 10018                           
 10019                           ; BSR set to: 1
 10020  003460  0EFF               	movlw	255
 10021  003462  0101               	movlb	1	; () banked
 10022  003464  0101               	movlb	1	; () banked
 10023  003466  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 10024  003468  0EFF               	movlw	255
 10025  00346A  0101               	movlb	1	; () banked
 10026  00346C  0101               	movlb	1	; () banked
 10027  00346E  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10028  003470  0EFF               	movlw	255
 10029  003472  0101               	movlb	1	; () banked
 10030  003474  0101               	movlb	1	; () banked
 10031  003476  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10032  003478  0E01               	movlw	1
 10033  00347A  0101               	movlb	1	; () banked
 10034  00347C  0101               	movlb	1	; () banked
 10035  00347E  273B               	addwf	___ftadd@f2& (0+255),f,b
 10036  003480  0E00               	movlw	0
 10037  003482  0101               	movlb	1	; () banked
 10038  003484  0101               	movlb	1	; () banked
 10039  003486  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10040  003488  0E00               	movlw	0
 10041  00348A  0101               	movlb	1	; () banked
 10042  00348C  0101               	movlb	1	; () banked
 10043  00348E  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10044  003490                     l10779:
 10045                           
 10046                           ; BSR set to: 1
 10047  003490  0101               	movlb	1	; () banked
 10048  003492  6F3E               	movwf	??___ftadd& (0+255),b
 10049  003494  0E00               	movlw	0
 10050  003496  0101               	movlb	1	; () banked
 10051  003498  0101               	movlb	1	; () banked
 10052  00349A  6F43               	movwf	___ftadd@sign& (0+255),b
 10053  00349C  0101               	movlb	1	; () banked
 10054  00349E  513E               	movf	??___ftadd& (0+255),w,b
 10055                           
 10056                           ; BSR set to: 1
 10057  0034A0  0101               	movlb	1	; () banked
 10058  0034A2  0101               	movlb	1	; () banked
 10059  0034A4  5138               	movf	___ftadd@f1& (0+255),w,b
 10060  0034A6  0101               	movlb	1	; () banked
 10061  0034A8  0101               	movlb	1	; () banked
 10062  0034AA  273B               	addwf	___ftadd@f2& (0+255),f,b
 10063  0034AC  0101               	movlb	1	; () banked
 10064  0034AE  0101               	movlb	1	; () banked
 10065  0034B0  5139               	movf	(___ftadd@f1+1)& (0+255),w,b
 10066  0034B2  0101               	movlb	1	; () banked
 10067  0034B4  0101               	movlb	1	; () banked
 10068  0034B6  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10069  0034B8  0101               	movlb	1	; () banked
 10070  0034BA  0101               	movlb	1	; () banked
 10071  0034BC  513A               	movf	(___ftadd@f1+2)& (0+255),w,b
 10072  0034BE  0101               	movlb	1	; () banked
 10073  0034C0  0101               	movlb	1	; () banked
 10074  0034C2  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10075                           
 10076                           ; BSR set to: 1
 10077  0034C4  0101               	movlb	1	; () banked
 10078  0034C6  0101               	movlb	1	; () banked
 10079  0034C8  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10080  0034CA  D020               	goto	l10789
 10081                           
 10082                           ; BSR set to: 1
 10083  0034CC  0EFF               	movlw	255
 10084  0034CE  0101               	movlb	1	; () banked
 10085  0034D0  0101               	movlb	1	; () banked
 10086  0034D2  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 10087  0034D4  0EFF               	movlw	255
 10088  0034D6  0101               	movlb	1	; () banked
 10089  0034D8  0101               	movlb	1	; () banked
 10090  0034DA  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10091  0034DC  0EFF               	movlw	255
 10092  0034DE  0101               	movlb	1	; () banked
 10093  0034E0  0101               	movlb	1	; () banked
 10094  0034E2  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10095  0034E4  0E01               	movlw	1
 10096  0034E6  0101               	movlb	1	; () banked
 10097  0034E8  0101               	movlb	1	; () banked
 10098  0034EA  273B               	addwf	___ftadd@f2& (0+255),f,b
 10099  0034EC  0E00               	movlw	0
 10100  0034EE  0101               	movlb	1	; () banked
 10101  0034F0  0101               	movlb	1	; () banked
 10102  0034F2  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10103  0034F4  0E00               	movlw	0
 10104  0034F6  0101               	movlb	1	; () banked
 10105  0034F8  0101               	movlb	1	; () banked
 10106  0034FA  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10107                           
 10108                           ; BSR set to: 1
 10109  0034FC  0101               	movlb	1	; () banked
 10110  0034FE  6F3E               	movwf	??___ftadd& (0+255),b
 10111  003500  0E01               	movlw	1
 10112  003502  0101               	movlb	1	; () banked
 10113  003504  0101               	movlb	1	; () banked
 10114  003506  6F43               	movwf	___ftadd@sign& (0+255),b
 10115  003508  0101               	movlb	1	; () banked
 10116  00350A  513E               	movf	??___ftadd& (0+255),w,b
 10117  00350C                     l10789:
 10118                           
 10119                           ; BSR set to: 1
 10120  00350C  C13B  F100         	movff	___ftadd@f2,?___ftpack
 10121  003510  C13C  F101         	movff	___ftadd@f2+1,?___ftpack+1
 10122  003514  C13D  F102         	movff	___ftadd@f2+2,?___ftpack+2
 10123  003518  C145  F103         	movff	___ftadd@exp1,?___ftpack+3
 10124  00351C  C143  F104         	movff	___ftadd@sign,?___ftpack+4
 10125  003520  EC30  F022         	call	___ftpack	;wreg free
 10126  003524  C102  F13A         	movff	?___ftpack+2,?___ftadd+2
 10127  003528  C101  F139         	movff	?___ftpack+1,?___ftadd+1
 10128  00352C  C100  F138         	movff	?___ftpack,?___ftadd
 10129  003530                     l711:
 10130  003530  0012               	return	
 10131  003532                     __end_of___ftadd:
 10132                           	opt stack 0
 10133                           tblptru	equ	0xFF8
 10134                           tblptrh	equ	0xFF7
 10135                           tblptrl	equ	0xFF6
 10136                           tablat	equ	0xFF5
 10137                           prodh	equ	0xFF4
 10138                           prodl	equ	0xFF3
 10139                           intcon	equ	0xFF2
 10140                           intcon2	equ	0xFF1
 10141                           postinc0	equ	0xFEE
 10142                           wreg	equ	0xFE8
 10143                           indf2	equ	0xFDF
 10144                           postinc2	equ	0xFDE
 10145                           postdec2	equ	0xFDD
 10146                           fsr2h	equ	0xFDA
 10147                           fsr2l	equ	0xFD9
 10148                           status	equ	0xFD8
 10149                           
 10150 ;; *************** function ___altoft *****************
 10151 ;; Defined at:
 10152 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\altoft.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;  c               4    8[BANK1 ] long 
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;  sign            1   17[BANK1 ] unsigned char 
 10157 ;;  exp             1   16[BANK1 ] unsigned char 
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  3    8[BANK1 ] float 
 10160 ;; Registers used:
 10161 ;;		wreg, status,2, status,0, cstack
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10167 ;;      Params:         0       0       4       0       0       0       0       0       0
 10168 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10169 ;;      Temps:          0       0       4       0       0       0       0       0       0
 10170 ;;      Totals:         0       0      10       0       0       0       0       0       0
 10171 ;;Total ram usage:       10 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; Hardware stack levels required when called:   10
 10174 ;; This function calls:
 10175 ;;		___ftpack
 10176 ;; This function is called by:
 10177 ;;		_USART_Init
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text30
 10182  0051D4                     __ptext30:
 10183                           	opt stack 0
 10184  0051D4                     ___altoft:
 10185                           	opt stack 19
 10186                           
 10187                           ;incstack = 0
 10188                           ;incstack = 0
 10189  0051D4  0101               	movlb	1	; () banked
 10190  0051D6  6F0C               	movwf	??___altoft& (0+255),b
 10191  0051D8  0E00               	movlw	0
 10192  0051DA  0101               	movlb	1	; () banked
 10193  0051DC  0101               	movlb	1	; () banked
 10194  0051DE  6F11               	movwf	___altoft@sign& (0+255),b
 10195  0051E0  0101               	movlb	1	; () banked
 10196  0051E2  510C               	movf	??___altoft& (0+255),w,b
 10197  0051E4  0101               	movlb	1	; () banked
 10198  0051E6  6F0C               	movwf	??___altoft& (0+255),b
 10199  0051E8  0E8E               	movlw	142
 10200  0051EA  0101               	movlb	1	; () banked
 10201  0051EC  0101               	movlb	1	; () banked
 10202  0051EE  6F10               	movwf	___altoft@exp& (0+255),b
 10203  0051F0  0101               	movlb	1	; () banked
 10204  0051F2  510C               	movf	??___altoft& (0+255),w,b
 10205                           
 10206                           ; BSR set to: 1
 10207  0051F4  0101               	movlb	1	; () banked
 10208  0051F6  0101               	movlb	1	; () banked
 10209  0051F8  AF0B               	btfss	(___altoft@c+3)& (0+255),7,b
 10210  0051FA  D026               	goto	l10713
 10211                           
 10212                           ; BSR set to: 1
 10213  0051FC  0101               	movlb	1	; () banked
 10214  0051FE  0101               	movlb	1	; () banked
 10215  005200  1F0B               	comf	(___altoft@c+3)& (0+255),f,b
 10216  005202  0101               	movlb	1	; () banked
 10217  005204  1F0A               	comf	(___altoft@c+2)& (0+255),f,b
 10218  005206  0101               	movlb	1	; () banked
 10219  005208  1F09               	comf	(___altoft@c+1)& (0+255),f,b
 10220  00520A  0101               	movlb	1	; () banked
 10221  00520C  6D08               	negf	___altoft@c& (0+255),b
 10222  00520E  0E00               	movlw	0
 10223  005210  0101               	movlb	1	; () banked
 10224  005212  2309               	addwfc	(___altoft@c+1)& (0+255),f,b
 10225  005214  0101               	movlb	1	; () banked
 10226  005216  230A               	addwfc	(___altoft@c+2)& (0+255),f,b
 10227  005218  0101               	movlb	1	; () banked
 10228  00521A  230B               	addwfc	(___altoft@c+3)& (0+255),f,b
 10229                           
 10230                           ; BSR set to: 1
 10231  00521C  0101               	movlb	1	; () banked
 10232  00521E  6F0C               	movwf	??___altoft& (0+255),b
 10233  005220  0E01               	movlw	1
 10234  005222  0101               	movlb	1	; () banked
 10235  005224  0101               	movlb	1	; () banked
 10236  005226  6F11               	movwf	___altoft@sign& (0+255),b
 10237  005228  0101               	movlb	1	; () banked
 10238  00522A  510C               	movf	??___altoft& (0+255),w,b
 10239  00522C  D00D               	goto	l10713
 10240  00522E                     l10711:
 10241                           
 10242                           ; BSR set to: 1
 10243  00522E  0101               	movlb	1	; () banked
 10244  005230  90D8               	bcf	status,0,c
 10245  005232  0101               	movlb	1	; () banked
 10246  005234  330B               	rrcf	(___altoft@c+3)& (0+255),f,b
 10247  005236  0101               	movlb	1	; () banked
 10248  005238  330A               	rrcf	(___altoft@c+2)& (0+255),f,b
 10249  00523A  0101               	movlb	1	; () banked
 10250  00523C  3309               	rrcf	(___altoft@c+1)& (0+255),f,b
 10251  00523E  0101               	movlb	1	; () banked
 10252  005240  3308               	rrcf	___altoft@c& (0+255),f,b
 10253  005242  0101               	movlb	1	; () banked
 10254  005244  0101               	movlb	1	; () banked
 10255  005246  2B10               	incf	___altoft@exp& (0+255),f,b
 10256  005248                     l10713:
 10257                           
 10258                           ; BSR set to: 1
 10259  005248  0E00               	movlw	0
 10260  00524A  0101               	movlb	1	; () banked
 10261  00524C  0101               	movlb	1	; () banked
 10262  00524E  1508               	andwf	___altoft@c& (0+255),w,b
 10263  005250  0101               	movlb	1	; () banked
 10264  005252  6F0C               	movwf	??___altoft& (0+255),b
 10265  005254  0E00               	movlw	0
 10266  005256  0101               	movlb	1	; () banked
 10267  005258  0101               	movlb	1	; () banked
 10268  00525A  1509               	andwf	(___altoft@c+1)& (0+255),w,b
 10269  00525C  0101               	movlb	1	; () banked
 10270  00525E  6F0D               	movwf	(??___altoft+1)& (0+255),b
 10271  005260  0E00               	movlw	0
 10272  005262  0101               	movlb	1	; () banked
 10273  005264  0101               	movlb	1	; () banked
 10274  005266  150A               	andwf	(___altoft@c+2)& (0+255),w,b
 10275  005268  0101               	movlb	1	; () banked
 10276  00526A  6F0E               	movwf	(??___altoft+2)& (0+255),b
 10277  00526C  0EFF               	movlw	255
 10278  00526E  0101               	movlb	1	; () banked
 10279  005270  0101               	movlb	1	; () banked
 10280  005272  150B               	andwf	(___altoft@c+3)& (0+255),w,b
 10281  005274  0101               	movlb	1	; () banked
 10282  005276  6F0F               	movwf	(??___altoft+3)& (0+255),b
 10283  005278  0101               	movlb	1	; () banked
 10284  00527A  510F               	movf	(??___altoft+3)& (0+255),w,b
 10285  00527C  110C               	iorwf	??___altoft& (0+255),w,b
 10286  00527E  110D               	iorwf	(??___altoft+1)& (0+255),w,b
 10287  005280  110E               	iorwf	(??___altoft+2)& (0+255),w,b
 10288  005282  A4D8               	btfss	status,2,c
 10289  005284  D7D4               	goto	l10711
 10290                           
 10291                           ; BSR set to: 1
 10292                           
 10293                           ; BSR set to: 1
 10294  005286  C108  F100         	movff	___altoft@c,?___ftpack
 10295  00528A  C109  F101         	movff	___altoft@c+1,?___ftpack+1
 10296  00528E  C10A  F102         	movff	___altoft@c+2,?___ftpack+2
 10297  005292  C110  F103         	movff	___altoft@exp,?___ftpack+3
 10298  005296  C111  F104         	movff	___altoft@sign,?___ftpack+4
 10299  00529A  EC30  F022         	call	___ftpack	;wreg free
 10300  00529E  C102  F10A         	movff	?___ftpack+2,?___altoft+2
 10301  0052A2  C101  F109         	movff	?___ftpack+1,?___altoft+1
 10302  0052A6  C100  F108         	movff	?___ftpack,?___altoft
 10303  0052AA  0012               	return	
 10304  0052AC                     __end_of___altoft:
 10305                           	opt stack 0
 10306                           tblptru	equ	0xFF8
 10307                           tblptrh	equ	0xFF7
 10308                           tblptrl	equ	0xFF6
 10309                           tablat	equ	0xFF5
 10310                           prodh	equ	0xFF4
 10311                           prodl	equ	0xFF3
 10312                           intcon	equ	0xFF2
 10313                           intcon2	equ	0xFF1
 10314                           postinc0	equ	0xFEE
 10315                           wreg	equ	0xFE8
 10316                           indf2	equ	0xFDF
 10317                           postinc2	equ	0xFDE
 10318                           postdec2	equ	0xFDD
 10319                           fsr2h	equ	0xFDA
 10320                           fsr2l	equ	0xFD9
 10321                           status	equ	0xFD8
 10322                           
 10323 ;; *************** function ___ftpack *****************
 10324 ;; Defined at:
 10325 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  arg             3    0[BANK1 ] unsigned um
 10328 ;;  exp             1    3[BANK1 ] unsigned char 
 10329 ;;  sign            1    4[BANK1 ] unsigned char 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;		None
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  3    0[BANK1 ] float 
 10334 ;; Registers used:
 10335 ;;		wreg, status,2, status,0
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10341 ;;      Params:         0       0       5       0       0       0       0       0       0
 10342 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10343 ;;      Temps:          0       0       3       0       0       0       0       0       0
 10344 ;;      Totals:         0       0       8       0       0       0       0       0       0
 10345 ;;Total ram usage:        8 bytes
 10346 ;; Hardware stack levels used:    1
 10347 ;; Hardware stack levels required when called:    9
 10348 ;; This function calls:
 10349 ;;		Nothing
 10350 ;; This function is called by:
 10351 ;;		___altoft
 10352 ;;		___awtoft
 10353 ;;		___ftadd
 10354 ;;		___ftdiv
 10355 ;;		___ftmul
 10356 ;;		___lltoft
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360                           	psect	text31
 10361  004460                     __ptext31:
 10362                           	opt stack 0
 10363  004460                     ___ftpack:
 10364                           	opt stack 19
 10365                           
 10366                           ;incstack = 0
 10367                           ;incstack = 0
 10368  004460  0101               	movlb	1	; () banked
 10369  004462  0101               	movlb	1	; () banked
 10370  004464  5103               	movf	___ftpack@exp& (0+255),w,b
 10371  004466  B4D8               	btfsc	status,2,c
 10372  004468  D009               	goto	l10673
 10373                           
 10374                           ; BSR set to: 1
 10375  00446A  0101               	movlb	1	; () banked
 10376  00446C  0101               	movlb	1	; () banked
 10377  00446E  5100               	movf	___ftpack@arg& (0+255),w,b
 10378  004470  0101               	movlb	1	; () banked
 10379  004472  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10380  004474  0101               	movlb	1	; () banked
 10381  004476  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10382  004478  A4D8               	btfss	status,2,c
 10383  00447A  D018               	goto	l10679
 10384  00447C                     l10673:
 10385                           
 10386                           ; BSR set to: 1
 10387  00447C  0E00               	movlw	0
 10388  00447E  0101               	movlb	1	; () banked
 10389  004480  0101               	movlb	1	; () banked
 10390  004482  6F00               	movwf	?___ftpack& (0+255),b
 10391  004484  0E00               	movlw	0
 10392  004486  0101               	movlb	1	; () banked
 10393  004488  0101               	movlb	1	; () banked
 10394  00448A  6F01               	movwf	(?___ftpack+1)& (0+255),b
 10395  00448C  0E00               	movlw	0
 10396  00448E  0101               	movlb	1	; () banked
 10397  004490  0101               	movlb	1	; () banked
 10398  004492  6F02               	movwf	(?___ftpack+2)& (0+255),b
 10399  004494  D091               	goto	l673
 10400  004496                     l10677:
 10401                           
 10402                           ; BSR set to: 1
 10403  004496  0101               	movlb	1	; () banked
 10404  004498  0101               	movlb	1	; () banked
 10405  00449A  2B03               	incf	___ftpack@exp& (0+255),f,b
 10406  00449C  0101               	movlb	1	; () banked
 10407  00449E  90D8               	bcf	status,0,c
 10408  0044A0  0101               	movlb	1	; () banked
 10409  0044A2  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10410  0044A4  0101               	movlb	1	; () banked
 10411  0044A6  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10412  0044A8  0101               	movlb	1	; () banked
 10413  0044AA  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10414  0044AC                     l10679:
 10415                           
 10416                           ; BSR set to: 1
 10417  0044AC  0E00               	movlw	0
 10418  0044AE  0101               	movlb	1	; () banked
 10419  0044B0  0101               	movlb	1	; () banked
 10420  0044B2  1500               	andwf	___ftpack@arg& (0+255),w,b
 10421  0044B4  0101               	movlb	1	; () banked
 10422  0044B6  6F05               	movwf	??___ftpack& (0+255),b
 10423  0044B8  0E00               	movlw	0
 10424  0044BA  0101               	movlb	1	; () banked
 10425  0044BC  0101               	movlb	1	; () banked
 10426  0044BE  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10427  0044C0  0101               	movlb	1	; () banked
 10428  0044C2  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10429  0044C4  0EFE               	movlw	254
 10430  0044C6  0101               	movlb	1	; () banked
 10431  0044C8  0101               	movlb	1	; () banked
 10432  0044CA  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10433  0044CC  0101               	movlb	1	; () banked
 10434  0044CE  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10435  0044D0  0101               	movlb	1	; () banked
 10436  0044D2  5105               	movf	??___ftpack& (0+255),w,b
 10437  0044D4  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10438  0044D6  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10439  0044D8  B4D8               	btfsc	status,2,c
 10440  0044DA  D018               	goto	l10685
 10441  0044DC  D7DC               	goto	l10677
 10442  0044DE                     l10681:
 10443                           
 10444                           ; BSR set to: 1
 10445  0044DE  0101               	movlb	1	; () banked
 10446  0044E0  0101               	movlb	1	; () banked
 10447  0044E2  2B03               	incf	___ftpack@exp& (0+255),f,b
 10448                           
 10449                           ; BSR set to: 1
 10450  0044E4  0E01               	movlw	1
 10451  0044E6  0101               	movlb	1	; () banked
 10452  0044E8  0101               	movlb	1	; () banked
 10453  0044EA  2700               	addwf	___ftpack@arg& (0+255),f,b
 10454  0044EC  0E00               	movlw	0
 10455  0044EE  0101               	movlb	1	; () banked
 10456  0044F0  0101               	movlb	1	; () banked
 10457  0044F2  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10458  0044F4  0E00               	movlw	0
 10459  0044F6  0101               	movlb	1	; () banked
 10460  0044F8  0101               	movlb	1	; () banked
 10461  0044FA  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10462  0044FC  0101               	movlb	1	; () banked
 10463  0044FE  90D8               	bcf	status,0,c
 10464  004500  0101               	movlb	1	; () banked
 10465  004502  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10466  004504  0101               	movlb	1	; () banked
 10467  004506  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10468  004508  0101               	movlb	1	; () banked
 10469  00450A  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10470  00450C                     l10685:
 10471                           
 10472                           ; BSR set to: 1
 10473  00450C  0E00               	movlw	0
 10474  00450E  0101               	movlb	1	; () banked
 10475  004510  0101               	movlb	1	; () banked
 10476  004512  1500               	andwf	___ftpack@arg& (0+255),w,b
 10477  004514  0101               	movlb	1	; () banked
 10478  004516  6F05               	movwf	??___ftpack& (0+255),b
 10479  004518  0E00               	movlw	0
 10480  00451A  0101               	movlb	1	; () banked
 10481  00451C  0101               	movlb	1	; () banked
 10482  00451E  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10483  004520  0101               	movlb	1	; () banked
 10484  004522  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10485  004524  0EFF               	movlw	255
 10486  004526  0101               	movlb	1	; () banked
 10487  004528  0101               	movlb	1	; () banked
 10488  00452A  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10489  00452C  0101               	movlb	1	; () banked
 10490  00452E  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10491  004530  0101               	movlb	1	; () banked
 10492  004532  5105               	movf	??___ftpack& (0+255),w,b
 10493  004534  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10494  004536  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10495  004538  B4D8               	btfsc	status,2,c
 10496  00453A  D00C               	goto	l10689
 10497  00453C  D7D0               	goto	l10681
 10498  00453E                     l10687:
 10499                           
 10500                           ; BSR set to: 1
 10501  00453E  0101               	movlb	1	; () banked
 10502  004540  0101               	movlb	1	; () banked
 10503  004542  0703               	decf	___ftpack@exp& (0+255),f,b
 10504  004544  0101               	movlb	1	; () banked
 10505  004546  90D8               	bcf	status,0,c
 10506  004548  0101               	movlb	1	; () banked
 10507  00454A  3700               	rlcf	___ftpack@arg& (0+255),f,b
 10508  00454C  0101               	movlb	1	; () banked
 10509  00454E  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10510  004550  0101               	movlb	1	; () banked
 10511  004552  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10512  004554                     l10689:
 10513                           
 10514                           ; BSR set to: 1
 10515  004554  0101               	movlb	1	; () banked
 10516  004556  0101               	movlb	1	; () banked
 10517  004558  AF01               	btfss	(___ftpack@arg+1)& (0+255),7,b
 10518  00455A  D7F1               	goto	l10687
 10519                           
 10520                           ; BSR set to: 1
 10521  00455C  0101               	movlb	1	; () banked
 10522  00455E  0101               	movlb	1	; () banked
 10523  004560  B103               	btfsc	___ftpack@exp& (0+255),0,b
 10524  004562  D003               	goto	l10693
 10525                           
 10526                           ; BSR set to: 1
 10527  004564  0101               	movlb	1	; () banked
 10528  004566  0101               	movlb	1	; () banked
 10529  004568  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10530  00456A                     l10693:
 10531                           
 10532                           ; BSR set to: 1
 10533  00456A  0101               	movlb	1	; () banked
 10534  00456C  90D8               	bcf	status,0,c
 10535  00456E  3303               	rrcf	___ftpack@exp& (0+255),f,b
 10536  004570  0101               	movlb	1	; () banked
 10537  004572  0101               	movlb	1	; () banked
 10538  004574  5103               	movf	___ftpack@exp& (0+255),w,b
 10539  004576  0101               	movlb	1	; () banked
 10540  004578  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10541  00457A  6B06               	clrf	(??___ftpack+1)& (0+255),b
 10542  00457C  6B05               	clrf	??___ftpack& (0+255),b
 10543  00457E  0101               	movlb	1	; () banked
 10544  004580  5105               	movf	??___ftpack& (0+255),w,b
 10545  004582  0101               	movlb	1	; () banked
 10546  004584  0101               	movlb	1	; () banked
 10547  004586  1300               	iorwf	___ftpack@arg& (0+255),f,b
 10548  004588  0101               	movlb	1	; () banked
 10549  00458A  5106               	movf	(??___ftpack+1)& (0+255),w,b
 10550  00458C  0101               	movlb	1	; () banked
 10551  00458E  0101               	movlb	1	; () banked
 10552  004590  1301               	iorwf	(___ftpack@arg+1)& (0+255),f,b
 10553  004592  0101               	movlb	1	; () banked
 10554  004594  5107               	movf	(??___ftpack+2)& (0+255),w,b
 10555  004596  0101               	movlb	1	; () banked
 10556  004598  0101               	movlb	1	; () banked
 10557  00459A  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10558                           
 10559                           ; BSR set to: 1
 10560  00459C  0101               	movlb	1	; () banked
 10561  00459E  0101               	movlb	1	; () banked
 10562  0045A0  5104               	movf	___ftpack@sign& (0+255),w,b
 10563  0045A2  B4D8               	btfsc	status,2,c
 10564  0045A4  D003               	goto	l10699
 10565                           
 10566                           ; BSR set to: 1
 10567  0045A6  0101               	movlb	1	; () banked
 10568  0045A8  0101               	movlb	1	; () banked
 10569  0045AA  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10570  0045AC                     l10699:
 10571                           
 10572                           ; BSR set to: 1
 10573  0045AC  C100  F100         	movff	___ftpack@arg,?___ftpack
 10574  0045B0  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 10575  0045B4  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 10576  0045B8                     l673:
 10577                           
 10578                           ; BSR set to: 1
 10579  0045B8  0012               	return	
 10580  0045BA                     __end_of___ftpack:
 10581                           	opt stack 0
 10582                           tblptru	equ	0xFF8
 10583                           tblptrh	equ	0xFF7
 10584                           tblptrl	equ	0xFF6
 10585                           tablat	equ	0xFF5
 10586                           prodh	equ	0xFF4
 10587                           prodl	equ	0xFF3
 10588                           intcon	equ	0xFF2
 10589                           intcon2	equ	0xFF1
 10590                           postinc0	equ	0xFEE
 10591                           wreg	equ	0xFE8
 10592                           indf2	equ	0xFDF
 10593                           postinc2	equ	0xFDE
 10594                           postdec2	equ	0xFDD
 10595                           fsr2h	equ	0xFDA
 10596                           fsr2l	equ	0xFD9
 10597                           status	equ	0xFD8
 10598                           
 10599 ;; *************** function _Init_AD *****************
 10600 ;; Defined at:
 10601 ;;		line 273 in file "main.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;		None
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;		None
 10606 ;; Return value:  Size  Location     Type
 10607 ;;		None               void
 10608 ;; Registers used:
 10609 ;;		wreg, status,2
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10615 ;;      Params:         0       0       0       0       0       0       0       0       0
 10616 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10618 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10619 ;;Total ram usage:        0 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; Hardware stack levels required when called:    9
 10622 ;; This function calls:
 10623 ;;		Nothing
 10624 ;; This function is called by:
 10625 ;;		_main
 10626 ;; This function uses a non-reentrant model
 10627 ;;
 10628                           
 10629                           	psect	text32
 10630  0062F4                     __ptext32:
 10631                           	opt stack 0
 10632  0062F4                     _Init_AD:
 10633                           	opt stack 21
 10634                           
 10635                           ;main.c: 274: TRISA0 = 1;
 10636                           
 10637                           ; BSR set to: 1
 10638                           ;incstack = 0
 10639                           ;incstack = 0
 10640  0062F4  8092               	bsf	3986,0,c	;volatile
 10641                           
 10642                           ;main.c: 275: ADCON1 = 0x0e;
 10643  0062F6  0E0E               	movlw	14
 10644  0062F8  6EC1               	movwf	4033,c	;volatile
 10645                           
 10646                           ;main.c: 276: ADCON2 = 0x92;
 10647  0062FA  0E92               	movlw	146
 10648  0062FC  6EC0               	movwf	4032,c	;volatile
 10649                           
 10650                           ;main.c: 277: ADRESH=0;
 10651  0062FE  0E00               	movlw	0
 10652  006300  6EC4               	movwf	4036,c	;volatile
 10653                           
 10654                           ;main.c: 278: ADRESL=0;
 10655  006302  0E00               	movlw	0
 10656  006304  6EC3               	movwf	4035,c	;volatile
 10657  006306  0012               	return	
 10658  006308                     __end_of_Init_AD:
 10659                           	opt stack 0
 10660                           tblptru	equ	0xFF8
 10661                           tblptrh	equ	0xFF7
 10662                           tblptrl	equ	0xFF6
 10663                           tablat	equ	0xFF5
 10664                           prodh	equ	0xFF4
 10665                           prodl	equ	0xFF3
 10666                           intcon	equ	0xFF2
 10667                           intcon2	equ	0xFF1
 10668                           postinc0	equ	0xFEE
 10669                           wreg	equ	0xFE8
 10670                           indf2	equ	0xFDF
 10671                           postinc2	equ	0xFDE
 10672                           postdec2	equ	0xFDD
 10673                           fsr2h	equ	0xFDA
 10674                           fsr2l	equ	0xFD9
 10675                           status	equ	0xFD8
 10676                           
 10677 ;; *************** function _Timer1_Init *****************
 10678 ;; Defined at:
 10679 ;;		line 230 in file "main.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;		None
 10682 ;; Auto vars:     Size  Location     Type
 10683 ;;		None
 10684 ;; Return value:  Size  Location     Type
 10685 ;;		None               void
 10686 ;; Registers used:
 10687 ;;		wreg, status,2
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10693 ;;      Params:         0       0       0       0       0       0       0       0       0
 10694 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10696 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10697 ;;Total ram usage:        0 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; Hardware stack levels required when called:    9
 10700 ;; This function calls:
 10701 ;;		Nothing
 10702 ;; This function is called by:
 10703 ;;		_main
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           	psect	text33
 10708  006308                     __ptext33:
 10709                           	opt stack 0
 10710  006308                     _Timer1_Init:
 10711                           	opt stack 21
 10712                           
 10713                           ;main.c: 231: T1CONbits.RD16=1;
 10714                           
 10715                           ;incstack = 0
 10716                           ;incstack = 0
 10717  006308  8ECD               	bsf	4045,7,c	;volatile
 10718                           
 10719                           ;main.c: 232: T1CONbits.T1CKPS=0b00;
 10720  00630A  0ECF               	movlw	-49
 10721  00630C  16CD               	andwf	4045,f,c	;volatile
 10722                           
 10723                           ;main.c: 233: T1CONbits.TMR1CS=0;
 10724  00630E  92CD               	bcf	4045,1,c	;volatile
 10725                           
 10726                           ;main.c: 234: TMR1=0;
 10727  006310  0E00               	movlw	0
 10728  006312  6ECF               	movwf	4047,c	;volatile
 10729  006314  0E00               	movlw	0
 10730  006316  6ECE               	movwf	4046,c	;volatile
 10731                           
 10732                           ;main.c: 235: TMR1ON=0;
 10733  006318  90CD               	bcf	4045,0,c	;volatile
 10734  00631A  0012               	return	
 10735  00631C                     __end_of_Timer1_Init:
 10736                           	opt stack 0
 10737                           tblptru	equ	0xFF8
 10738                           tblptrh	equ	0xFF7
 10739                           tblptrl	equ	0xFF6
 10740                           tablat	equ	0xFF5
 10741                           prodh	equ	0xFF4
 10742                           prodl	equ	0xFF3
 10743                           intcon	equ	0xFF2
 10744                           intcon2	equ	0xFF1
 10745                           postinc0	equ	0xFEE
 10746                           wreg	equ	0xFE8
 10747                           indf2	equ	0xFDF
 10748                           postinc2	equ	0xFDE
 10749                           postdec2	equ	0xFDD
 10750                           fsr2h	equ	0xFDA
 10751                           fsr2l	equ	0xFD9
 10752                           status	equ	0xFD8
 10753                           
 10754 ;; *************** function _Configuracion_Registros *****************
 10755 ;; Defined at:
 10756 ;;		line 219 in file "main.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;		None
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;		None
 10761 ;; Return value:  Size  Location     Type
 10762 ;;		None               void
 10763 ;; Registers used:
 10764 ;;		wreg, status,2, status,0
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10770 ;;      Params:         0       0       0       0       0       0       0       0       0
 10771 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10772 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10773 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10774 ;;Total ram usage:        0 bytes
 10775 ;; Hardware stack levels used:    1
 10776 ;; Hardware stack levels required when called:    9
 10777 ;; This function calls:
 10778 ;;		Nothing
 10779 ;; This function is called by:
 10780 ;;		_main
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           	psect	text34
 10785  00631C                     __ptext34:
 10786                           	opt stack 0
 10787  00631C                     _Configuracion_Registros:
 10788                           	opt stack 21
 10789                           
 10790                           ;main.c: 220: ADCON1bits.PCFG=0b1111;
 10791                           
 10792                           ;incstack = 0
 10793                           ;incstack = 0
 10794  00631C  80C1               	bsf	4033,0,c	;volatile
 10795  00631E  82C1               	bsf	4033,1,c	;volatile
 10796  006320  84C1               	bsf	4033,2,c	;volatile
 10797  006322  86C1               	bsf	4033,3,c	;volatile
 10798                           
 10799                           ;main.c: 221: TRISA&=~(1<<1);
 10800  006324  9292               	bcf	3986,1,c	;volatile
 10801                           
 10802                           ;main.c: 222: TRISA|=(1<<2);
 10803  006326  8492               	bsf	3986,2,c	;volatile
 10804                           
 10805                           ;main.c: 224: TRISB = 0;
 10806  006328  0E00               	movlw	0
 10807  00632A  6E93               	movwf	3987,c	;volatile
 10808  00632C  0012               	return	
 10809  00632E                     __end_of_Configuracion_Registros:
 10810                           	opt stack 0
 10811                           tblptru	equ	0xFF8
 10812                           tblptrh	equ	0xFF7
 10813                           tblptrl	equ	0xFF6
 10814                           tablat	equ	0xFF5
 10815                           prodh	equ	0xFF4
 10816                           prodl	equ	0xFF3
 10817                           intcon	equ	0xFF2
 10818                           intcon2	equ	0xFF1
 10819                           postinc0	equ	0xFEE
 10820                           wreg	equ	0xFE8
 10821                           indf2	equ	0xFDF
 10822                           postinc2	equ	0xFDE
 10823                           postdec2	equ	0xFDD
 10824                           fsr2h	equ	0xFDA
 10825                           fsr2l	equ	0xFD9
 10826                           status	equ	0xFD8
 10827                           
 10828 ;; *************** function _lcd_putc *****************
 10829 ;; Defined at:
 10830 ;;		line 135 in file "lcd.h"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  a               2    4[BANK1 ] PTR unsigned char 
 10833 ;;		 -> LCD_Buffer(32), 
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;  i               2    6[BANK1 ] int 
 10836 ;; Return value:  Size  Location     Type
 10837 ;;		None               void
 10838 ;; Registers used:
 10839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10845 ;;      Params:         0       0       2       0       0       0       0       0       0
 10846 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10848 ;;      Totals:         0       0       4       0       0       0       0       0       0
 10849 ;;Total ram usage:        4 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:   11
 10852 ;; This function calls:
 10853 ;;		_lcd_write_char
 10854 ;; This function is called by:
 10855 ;;		_main
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text35
 10860  005BEE                     __ptext35:
 10861                           	opt stack 0
 10862  005BEE                     _lcd_putc:
 10863                           	opt stack 19
 10864                           
 10865                           ;lcd.h: 136: int i;
 10866                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
 10867                           
 10868                           ;incstack = 0
 10869                           ;incstack = 0
 10870  005BEE  0E00               	movlw	0
 10871  005BF0  0101               	movlb	1	; () banked
 10872  005BF2  0101               	movlb	1	; () banked
 10873  005BF4  6F07               	movwf	(lcd_putc@i+1)& (0+255),b
 10874  005BF6  0E00               	movlw	0
 10875  005BF8  0101               	movlb	1	; () banked
 10876  005BFA  6F06               	movwf	lcd_putc@i& (0+255),b
 10877  005BFC  D018               	goto	l10047
 10878  005BFE                     l10043:
 10879                           
 10880                           ; BSR set to: 1
 10881                           ;lcd.h: 138: lcd_write_char(a[i]);
 10882  005BFE  0101               	movlb	1	; () banked
 10883  005C00  0101               	movlb	1	; () banked
 10884  005C02  5106               	movf	lcd_putc@i& (0+255),w,b
 10885  005C04  0101               	movlb	1	; () banked
 10886  005C06  0101               	movlb	1	; () banked
 10887  005C08  2504               	addwf	lcd_putc@a& (0+255),w,b
 10888  005C0A  6ED9               	movwf	fsr2l,c
 10889  005C0C  0101               	movlb	1	; () banked
 10890  005C0E  0101               	movlb	1	; () banked
 10891  005C10  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
 10892  005C12  0101               	movlb	1	; () banked
 10893  005C14  0101               	movlb	1	; () banked
 10894  005C16  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
 10895  005C18  6EDA               	movwf	fsr2h,c
 10896  005C1A  50DF               	movf	indf2,w,c
 10897  005C1C  0101               	movlb	1	; () banked
 10898  005C1E  0101               	movlb	1	; () banked
 10899  005C20  6F01               	movwf	?_lcd_write_char& (0+255),b
 10900  005C22  ECE2  F02E         	call	_lcd_write_char	;wreg free
 10901  005C26  0101               	movlb	1	; () banked
 10902  005C28  0101               	movlb	1	; () banked
 10903  005C2A  4B06               	infsnz	lcd_putc@i& (0+255),f,b
 10904  005C2C  2B07               	incf	(lcd_putc@i+1)& (0+255),f,b
 10905  005C2E                     l10047:
 10906                           
 10907                           ; BSR set to: 1
 10908  005C2E  0101               	movlb	1	; () banked
 10909  005C30  0101               	movlb	1	; () banked
 10910  005C32  5106               	movf	lcd_putc@i& (0+255),w,b
 10911  005C34  0101               	movlb	1	; () banked
 10912  005C36  0101               	movlb	1	; () banked
 10913  005C38  2504               	addwf	lcd_putc@a& (0+255),w,b
 10914  005C3A  6ED9               	movwf	fsr2l,c
 10915  005C3C  0101               	movlb	1	; () banked
 10916  005C3E  0101               	movlb	1	; () banked
 10917  005C40  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
 10918  005C42  0101               	movlb	1	; () banked
 10919  005C44  0101               	movlb	1	; () banked
 10920  005C46  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
 10921  005C48  6EDA               	movwf	fsr2h,c
 10922  005C4A  50DF               	movf	indf2,w,c
 10923  005C4C  B4D8               	btfsc	status,2,c
 10924                           
 10925                           ; BSR set to: 1
 10926                           
 10927                           ; BSR set to: 1
 10928  005C4E  0012               	return	
 10929  005C50  D7D6               	goto	l10043
 10930  005C52                     __end_of_lcd_putc:
 10931                           	opt stack 0
 10932                           tblptru	equ	0xFF8
 10933                           tblptrh	equ	0xFF7
 10934                           tblptrl	equ	0xFF6
 10935                           tablat	equ	0xFF5
 10936                           prodh	equ	0xFF4
 10937                           prodl	equ	0xFF3
 10938                           intcon	equ	0xFF2
 10939                           intcon2	equ	0xFF1
 10940                           postinc0	equ	0xFEE
 10941                           wreg	equ	0xFE8
 10942                           indf2	equ	0xFDF
 10943                           postinc2	equ	0xFDE
 10944                           postdec2	equ	0xFDD
 10945                           fsr2h	equ	0xFDA
 10946                           fsr2l	equ	0xFD9
 10947                           status	equ	0xFD8
 10948                           
 10949 ;; *************** function _lcd_write_char *****************
 10950 ;; Defined at:
 10951 ;;		line 117 in file "lcd.h"
 10952 ;; Parameters:    Size  Location     Type
 10953 ;;  a               1    1[BANK1 ] unsigned char 
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;  y               1    3[BANK1 ] unsigned char 
 10956 ;;  temp            1    2[BANK1 ] unsigned char 
 10957 ;; Return value:  Size  Location     Type
 10958 ;;		None               void
 10959 ;; Registers used:
 10960 ;;		wreg, status,2, status,0, cstack
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10966 ;;      Params:         0       0       1       0       0       0       0       0       0
 10967 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10968 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10969 ;;      Totals:         0       0       3       0       0       0       0       0       0
 10970 ;;Total ram usage:        3 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:   10
 10973 ;; This function calls:
 10974 ;;		_Lcd_Port
 10975 ;; This function is called by:
 10976 ;;		_lcd_putc
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980                           	psect	text36
 10981  005DC4                     __ptext36:
 10982                           	opt stack 0
 10983  005DC4                     _lcd_write_char:
 10984                           	opt stack 19
 10985                           
 10986                           ;lcd.h: 118: char temp,y;
 10987                           ;lcd.h: 119: temp = a&0x0F;
 10988                           
 10989                           ; BSR set to: 1
 10990                           ;incstack = 0
 10991                           ;incstack = 0
 10992  005DC4  0101               	movlb	1	; () banked
 10993  005DC6  0101               	movlb	1	; () banked
 10994  005DC8  5101               	movf	lcd_write_char@a& (0+255),w,b
 10995  005DCA  0B0F               	andlw	15
 10996  005DCC  0101               	movlb	1	; () banked
 10997  005DCE  0101               	movlb	1	; () banked
 10998  005DD0  6F02               	movwf	lcd_write_char@temp& (0+255),b
 10999                           
 11000                           ;lcd.h: 120: y = a&0xF0;
 11001  005DD2  0101               	movlb	1	; () banked
 11002  005DD4  0101               	movlb	1	; () banked
 11003  005DD6  5101               	movf	lcd_write_char@a& (0+255),w,b
 11004  005DD8  0BF0               	andlw	240
 11005  005DDA  0101               	movlb	1	; () banked
 11006  005DDC  0101               	movlb	1	; () banked
 11007  005DDE  6F03               	movwf	lcd_write_char@y& (0+255),b
 11008                           
 11009                           ; BSR set to: 1
 11010                           ;lcd.h: 121: RD2 = 1;
 11011  005DE0  8483               	bsf	3971,2,c	;volatile
 11012                           
 11013                           ; BSR set to: 1
 11014                           ;lcd.h: 122: Lcd_Port(y>>4);
 11015  005DE2  0101               	movlb	1	; () banked
 11016  005DE4  0101               	movlb	1	; () banked
 11017  005DE6  3903               	swapf	lcd_write_char@y& (0+255),w,b
 11018  005DE8  0B0F               	andlw	15
 11019  005DEA  0101               	movlb	1	; () banked
 11020  005DEC  0101               	movlb	1	; () banked
 11021  005DEE  6F00               	movwf	?_Lcd_Port& (0+255),b
 11022  005DF0  EC6A  F030         	call	_Lcd_Port	;wreg free
 11023                           
 11024                           ;lcd.h: 123: RD3 = 1;
 11025  005DF4  8683               	bsf	3971,3,c	;volatile
 11026                           
 11027                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
 11028  005DF6  0E1A               	movlw	26
 11029  005DF8                     u11117:
 11030  005DF8  2EE8               	decfsz	wreg,f,c
 11031  005DFA  D7FE               	goto	u11117
 11032  005DFC  D000               	nop2		;nop
 11033                           
 11034                           ;lcd.h: 125: RD3 = 0;
 11035  005DFE  9683               	bcf	3971,3,c	;volatile
 11036                           
 11037                           ;lcd.h: 126: Lcd_Port(temp);
 11038  005E00  C102  F100         	movff	lcd_write_char@temp,?_Lcd_Port
 11039  005E04  EC6A  F030         	call	_Lcd_Port	;wreg free
 11040                           
 11041                           ;lcd.h: 127: RD3 = 1;
 11042  005E08  8683               	bsf	3971,3,c	;volatile
 11043                           
 11044                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
 11045  005E0A  0E1A               	movlw	26
 11046  005E0C                     u11127:
 11047  005E0C  2EE8               	decfsz	wreg,f,c
 11048  005E0E  D7FE               	goto	u11127
 11049  005E10  D000               	nop2		;nop
 11050                           
 11051                           ;lcd.h: 129: RD3 = 0;
 11052  005E12  9683               	bcf	3971,3,c	;volatile
 11053  005E14  0012               	return	
 11054  005E16                     __end_of_lcd_write_char:
 11055                           	opt stack 0
 11056                           tblptru	equ	0xFF8
 11057                           tblptrh	equ	0xFF7
 11058                           tblptrl	equ	0xFF6
 11059                           tablat	equ	0xFF5
 11060                           prodh	equ	0xFF4
 11061                           prodl	equ	0xFF3
 11062                           intcon	equ	0xFF2
 11063                           intcon2	equ	0xFF1
 11064                           postinc0	equ	0xFEE
 11065                           wreg	equ	0xFE8
 11066                           indf2	equ	0xFDF
 11067                           postinc2	equ	0xFDE
 11068                           postdec2	equ	0xFDD
 11069                           fsr2h	equ	0xFDA
 11070                           fsr2l	equ	0xFD9
 11071                           status	equ	0xFD8
 11072                           
 11073 ;; *************** function _lcd_init *****************
 11074 ;; Defined at:
 11075 ;;		line 95 in file "lcd.h"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;		None
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;		None
 11080 ;; Return value:  Size  Location     Type
 11081 ;;		None               void
 11082 ;; Registers used:
 11083 ;;		wreg, status,2, cstack
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11089 ;;      Params:         0       0       0       0       0       0       0       0       0
 11090 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11091 ;;      Temps:          0       0       1       0       0       0       0       0       0
 11092 ;;      Totals:         0       0       1       0       0       0       0       0       0
 11093 ;;Total ram usage:        1 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; Hardware stack levels required when called:   11
 11096 ;; This function calls:
 11097 ;;		_Lcd_Port
 11098 ;;		_Lcd_Cmd
 11099 ;; This function is called by:
 11100 ;;		_main
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           	psect	text37
 11105  0047F2                     __ptext37:
 11106                           	opt stack 0
 11107  0047F2                     _lcd_init:
 11108                           	opt stack 19
 11109                           
 11110                           ;lcd.h: 96: TRISD=0x00;
 11111                           
 11112                           ;incstack = 0
 11113                           ;incstack = 0
 11114  0047F2  0E00               	movlw	0
 11115  0047F4  6E95               	movwf	3989,c	;volatile
 11116                           
 11117                           ;lcd.h: 97: Lcd_Port(0x00);
 11118  0047F6  0101               	movlb	1	; () banked
 11119  0047F8  6F03               	movwf	??_lcd_init& (0+255),b
 11120  0047FA  0E00               	movlw	0
 11121  0047FC  0101               	movlb	1	; () banked
 11122  0047FE  0101               	movlb	1	; () banked
 11123  004800  6F00               	movwf	?_Lcd_Port& (0+255),b
 11124  004802  0101               	movlb	1	; () banked
 11125  004804  5103               	movf	??_lcd_init& (0+255),w,b
 11126  004806  EC6A  F030         	call	_Lcd_Port	;wreg free
 11127                           
 11128                           ;lcd.h: 98: _delay((unsigned long)((20)*(8000000/4000.0)));
 11129  00480A  0E34               	movlw	52
 11130  00480C  0101               	movlb	1	; () banked
 11131  00480E  6F03               	movwf	??_lcd_init& (0+255),b
 11132  004810  0EF1               	movlw	241
 11133  004812                     u11137:
 11134  004812  2EE8               	decfsz	wreg,f,c
 11135  004814  D7FE               	goto	u11137
 11136  004816  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11137  004818  D7FC               	goto	u11137
 11138  00481A  D000               	nop2	
 11139                           
 11140                           ;lcd.h: 99: Lcd_Cmd(0x03);
 11141  00481C  0101               	movlb	1	; () banked
 11142  00481E  6F03               	movwf	??_lcd_init& (0+255),b
 11143  004820  0E03               	movlw	3
 11144  004822  0101               	movlb	1	; () banked
 11145  004824  0101               	movlb	1	; () banked
 11146  004826  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11147  004828  0101               	movlb	1	; () banked
 11148  00482A  5103               	movf	??_lcd_init& (0+255),w,b
 11149  00482C  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11150                           
 11151                           ;lcd.h: 100: _delay((unsigned long)((5)*(8000000/4000.0)));
 11152  004830  0E0D               	movlw	13
 11153  004832  0101               	movlb	1	; () banked
 11154  004834  6F03               	movwf	??_lcd_init& (0+255),b
 11155  004836  0EFB               	movlw	251
 11156  004838                     u11147:
 11157  004838  2EE8               	decfsz	wreg,f,c
 11158  00483A  D7FE               	goto	u11147
 11159  00483C  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11160  00483E  D7FC               	goto	u11147
 11161  004840  D000               	nop2	
 11162                           
 11163                           ;lcd.h: 101: Lcd_Cmd(0x03);
 11164  004842  0101               	movlb	1	; () banked
 11165  004844  6F03               	movwf	??_lcd_init& (0+255),b
 11166  004846  0E03               	movlw	3
 11167  004848  0101               	movlb	1	; () banked
 11168  00484A  0101               	movlb	1	; () banked
 11169  00484C  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11170  00484E  0101               	movlb	1	; () banked
 11171  004850  5103               	movf	??_lcd_init& (0+255),w,b
 11172  004852  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11173                           
 11174                           ;lcd.h: 102: _delay((unsigned long)((11)*(8000000/4000.0)));
 11175  004856  0E1D               	movlw	29
 11176  004858  0101               	movlb	1	; () banked
 11177  00485A  6F03               	movwf	??_lcd_init& (0+255),b
 11178  00485C  0E91               	movlw	145
 11179  00485E                     u11157:
 11180  00485E  2EE8               	decfsz	wreg,f,c
 11181  004860  D7FE               	goto	u11157
 11182  004862  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11183  004864  D7FC               	goto	u11157
 11184                           
 11185                           ;lcd.h: 103: Lcd_Cmd(0x03);
 11186  004866  0101               	movlb	1	; () banked
 11187  004868  6F03               	movwf	??_lcd_init& (0+255),b
 11188  00486A  0E03               	movlw	3
 11189  00486C  0101               	movlb	1	; () banked
 11190  00486E  0101               	movlb	1	; () banked
 11191  004870  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11192  004872  0101               	movlb	1	; () banked
 11193  004874  5103               	movf	??_lcd_init& (0+255),w,b
 11194  004876  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11195                           
 11196                           ;lcd.h: 105: Lcd_Cmd(0x02);
 11197  00487A  0101               	movlb	1	; () banked
 11198  00487C  6F03               	movwf	??_lcd_init& (0+255),b
 11199  00487E  0E02               	movlw	2
 11200  004880  0101               	movlb	1	; () banked
 11201  004882  0101               	movlb	1	; () banked
 11202  004884  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11203  004886  0101               	movlb	1	; () banked
 11204  004888  5103               	movf	??_lcd_init& (0+255),w,b
 11205  00488A  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11206                           
 11207                           ;lcd.h: 106: Lcd_Cmd(0x02);
 11208  00488E  0101               	movlb	1	; () banked
 11209  004890  6F03               	movwf	??_lcd_init& (0+255),b
 11210  004892  0E02               	movlw	2
 11211  004894  0101               	movlb	1	; () banked
 11212  004896  0101               	movlb	1	; () banked
 11213  004898  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11214  00489A  0101               	movlb	1	; () banked
 11215  00489C  5103               	movf	??_lcd_init& (0+255),w,b
 11216  00489E  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11217                           
 11218                           ;lcd.h: 107: Lcd_Cmd(0x08);
 11219  0048A2  0101               	movlb	1	; () banked
 11220  0048A4  6F03               	movwf	??_lcd_init& (0+255),b
 11221  0048A6  0E08               	movlw	8
 11222  0048A8  0101               	movlb	1	; () banked
 11223  0048AA  0101               	movlb	1	; () banked
 11224  0048AC  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11225  0048AE  0101               	movlb	1	; () banked
 11226  0048B0  5103               	movf	??_lcd_init& (0+255),w,b
 11227  0048B2  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11228                           
 11229                           ;lcd.h: 108: Lcd_Cmd(0x00);
 11230  0048B6  0101               	movlb	1	; () banked
 11231  0048B8  6F03               	movwf	??_lcd_init& (0+255),b
 11232  0048BA  0E00               	movlw	0
 11233  0048BC  0101               	movlb	1	; () banked
 11234  0048BE  0101               	movlb	1	; () banked
 11235  0048C0  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11236  0048C2  0101               	movlb	1	; () banked
 11237  0048C4  5103               	movf	??_lcd_init& (0+255),w,b
 11238  0048C6  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11239                           
 11240                           ;lcd.h: 109: Lcd_Cmd(0x0C);
 11241  0048CA  0101               	movlb	1	; () banked
 11242  0048CC  6F03               	movwf	??_lcd_init& (0+255),b
 11243  0048CE  0E0C               	movlw	12
 11244  0048D0  0101               	movlb	1	; () banked
 11245  0048D2  0101               	movlb	1	; () banked
 11246  0048D4  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11247  0048D6  0101               	movlb	1	; () banked
 11248  0048D8  5103               	movf	??_lcd_init& (0+255),w,b
 11249  0048DA  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11250                           
 11251                           ;lcd.h: 110: Lcd_Cmd(0x00);
 11252  0048DE  0101               	movlb	1	; () banked
 11253  0048E0  6F03               	movwf	??_lcd_init& (0+255),b
 11254  0048E2  0E00               	movlw	0
 11255  0048E4  0101               	movlb	1	; () banked
 11256  0048E6  0101               	movlb	1	; () banked
 11257  0048E8  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11258  0048EA  0101               	movlb	1	; () banked
 11259  0048EC  5103               	movf	??_lcd_init& (0+255),w,b
 11260  0048EE  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11261                           
 11262                           ;lcd.h: 111: Lcd_Cmd(0x06);
 11263  0048F2  0101               	movlb	1	; () banked
 11264  0048F4  6F03               	movwf	??_lcd_init& (0+255),b
 11265  0048F6  0E06               	movlw	6
 11266  0048F8  0101               	movlb	1	; () banked
 11267  0048FA  0101               	movlb	1	; () banked
 11268  0048FC  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11269  0048FE  0101               	movlb	1	; () banked
 11270  004900  5103               	movf	??_lcd_init& (0+255),w,b
 11271  004902  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11272  004906  0012               	return	
 11273  004908                     __end_of_lcd_init:
 11274                           	opt stack 0
 11275                           tblptru	equ	0xFF8
 11276                           tblptrh	equ	0xFF7
 11277                           tblptrl	equ	0xFF6
 11278                           tablat	equ	0xFF5
 11279                           prodh	equ	0xFF4
 11280                           prodl	equ	0xFF3
 11281                           intcon	equ	0xFF2
 11282                           intcon2	equ	0xFF1
 11283                           postinc0	equ	0xFEE
 11284                           wreg	equ	0xFE8
 11285                           indf2	equ	0xFDF
 11286                           postinc2	equ	0xFDE
 11287                           postdec2	equ	0xFDD
 11288                           fsr2h	equ	0xFDA
 11289                           fsr2l	equ	0xFD9
 11290                           status	equ	0xFD8
 11291                           
 11292 ;; *************** function _lcd_gotoxy *****************
 11293 ;; Defined at:
 11294 ;;		line 72 in file "lcd.h"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;  a               1    3[BANK1 ] unsigned char 
 11297 ;;  b               1    4[BANK1 ] unsigned char 
 11298 ;; Auto vars:     Size  Location     Type
 11299 ;;  temp            1    7[BANK1 ] unsigned char 
 11300 ;;  y               1    6[BANK1 ] unsigned char 
 11301 ;;  z               1    5[BANK1 ] unsigned char 
 11302 ;; Return value:  Size  Location     Type
 11303 ;;		None               void
 11304 ;; Registers used:
 11305 ;;		wreg, status,2, status,0, cstack
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : 0/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11311 ;;      Params:         0       0       2       0       0       0       0       0       0
 11312 ;;      Locals:         0       0       3       0       0       0       0       0       0
 11313 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11314 ;;      Totals:         0       0       5       0       0       0       0       0       0
 11315 ;;Total ram usage:        5 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; Hardware stack levels required when called:   11
 11318 ;; This function calls:
 11319 ;;		_Lcd_Cmd
 11320 ;; This function is called by:
 11321 ;;		_main
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text38
 11326  0057FA                     __ptext38:
 11327                           	opt stack 0
 11328  0057FA                     _lcd_gotoxy:
 11329                           	opt stack 19
 11330                           
 11331                           ;lcd.h: 73: char temp,z,y;
 11332                           ;lcd.h: 74: if(a == 1)
 11333                           
 11334                           ;incstack = 0
 11335                           ;incstack = 0
 11336  0057FA  0101               	movlb	1	; () banked
 11337  0057FC  0101               	movlb	1	; () banked
 11338  0057FE  0503               	decf	lcd_gotoxy@a& (0+255),w,b
 11339  005800  A4D8               	btfss	status,2,c
 11340  005802  D01E               	goto	l9985
 11341                           
 11342                           ; BSR set to: 1
 11343                           ;lcd.h: 75: {
 11344                           ;lcd.h: 76: temp = 0x80 + b - 1;
 11345  005804  0101               	movlb	1	; () banked
 11346  005806  0101               	movlb	1	; () banked
 11347  005808  5104               	movf	lcd_gotoxy@b& (0+255),w,b
 11348  00580A  0F7F               	addlw	127
 11349  00580C  0101               	movlb	1	; () banked
 11350  00580E  0101               	movlb	1	; () banked
 11351  005810  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
 11352                           
 11353                           ;lcd.h: 77: z = temp>>4;
 11354  005812  0101               	movlb	1	; () banked
 11355  005814  0101               	movlb	1	; () banked
 11356  005816  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
 11357  005818  0B0F               	andlw	15
 11358  00581A  0101               	movlb	1	; () banked
 11359  00581C  0101               	movlb	1	; () banked
 11360  00581E  6F05               	movwf	lcd_gotoxy@z& (0+255),b
 11361                           
 11362                           ;lcd.h: 78: y = temp & 0x0F;
 11363  005820  0101               	movlb	1	; () banked
 11364  005822  0101               	movlb	1	; () banked
 11365  005824  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
 11366  005826  0B0F               	andlw	15
 11367  005828  0101               	movlb	1	; () banked
 11368  00582A  0101               	movlb	1	; () banked
 11369  00582C  6F06               	movwf	lcd_gotoxy@y& (0+255),b
 11370                           
 11371                           ; BSR set to: 1
 11372                           ;lcd.h: 79: Lcd_Cmd(z);
 11373  00582E  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
 11374  005832  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11375                           
 11376                           ;lcd.h: 80: Lcd_Cmd(y);
 11377  005836  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
 11378  00583A  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11379                           
 11380                           ;lcd.h: 81: }
 11381  00583E  D023               	goto	l121
 11382  005840                     l9985:
 11383                           
 11384                           ;lcd.h: 82: else if(a == 2)
 11385  005840  0101               	movlb	1	; () banked
 11386  005842  0101               	movlb	1	; () banked
 11387  005844  5103               	movf	lcd_gotoxy@a& (0+255),w,b
 11388  005846  0A02               	xorlw	2
 11389  005848  A4D8               	btfss	status,2,c
 11390  00584A  D01D               	goto	l121
 11391                           
 11392                           ; BSR set to: 1
 11393                           ;lcd.h: 83: {
 11394                           ;lcd.h: 84: temp = 0xC0 + b - 1;
 11395  00584C  0101               	movlb	1	; () banked
 11396  00584E  0101               	movlb	1	; () banked
 11397  005850  5104               	movf	lcd_gotoxy@b& (0+255),w,b
 11398  005852  0FBF               	addlw	191
 11399  005854  0101               	movlb	1	; () banked
 11400  005856  0101               	movlb	1	; () banked
 11401  005858  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
 11402                           
 11403                           ;lcd.h: 85: z = temp>>4;
 11404  00585A  0101               	movlb	1	; () banked
 11405  00585C  0101               	movlb	1	; () banked
 11406  00585E  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
 11407  005860  0B0F               	andlw	15
 11408  005862  0101               	movlb	1	; () banked
 11409  005864  0101               	movlb	1	; () banked
 11410  005866  6F05               	movwf	lcd_gotoxy@z& (0+255),b
 11411                           
 11412                           ;lcd.h: 86: y = temp & 0x0F;
 11413  005868  0101               	movlb	1	; () banked
 11414  00586A  0101               	movlb	1	; () banked
 11415  00586C  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
 11416  00586E  0B0F               	andlw	15
 11417  005870  0101               	movlb	1	; () banked
 11418  005872  0101               	movlb	1	; () banked
 11419  005874  6F06               	movwf	lcd_gotoxy@y& (0+255),b
 11420                           
 11421                           ; BSR set to: 1
 11422                           ;lcd.h: 87: Lcd_Cmd(z);
 11423  005876  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
 11424  00587A  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11425                           
 11426                           ;lcd.h: 88: Lcd_Cmd(y);
 11427  00587E  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
 11428  005882  EC42  F031         	call	_Lcd_Cmd	;wreg free
 11429  005886                     l121:
 11430  005886  0012               	return	
 11431  005888                     __end_of_lcd_gotoxy:
 11432                           	opt stack 0
 11433                           tblptru	equ	0xFF8
 11434                           tblptrh	equ	0xFF7
 11435                           tblptrl	equ	0xFF6
 11436                           tablat	equ	0xFF5
 11437                           prodh	equ	0xFF4
 11438                           prodl	equ	0xFF3
 11439                           intcon	equ	0xFF2
 11440                           intcon2	equ	0xFF1
 11441                           postinc0	equ	0xFEE
 11442                           wreg	equ	0xFE8
 11443                           indf2	equ	0xFDF
 11444                           postinc2	equ	0xFDE
 11445                           postdec2	equ	0xFDD
 11446                           fsr2h	equ	0xFDA
 11447                           fsr2l	equ	0xFD9
 11448                           status	equ	0xFD8
 11449                           
 11450 ;; *************** function _Lcd_Cmd *****************
 11451 ;; Defined at:
 11452 ;;		line 53 in file "lcd.h"
 11453 ;; Parameters:    Size  Location     Type
 11454 ;;  a               1    1[BANK1 ] unsigned char 
 11455 ;; Auto vars:     Size  Location     Type
 11456 ;;		None
 11457 ;; Return value:  Size  Location     Type
 11458 ;;		None               void
 11459 ;; Registers used:
 11460 ;;		wreg, cstack
 11461 ;; Tracked objects:
 11462 ;;		On entry : 0/0
 11463 ;;		On exit  : 0/0
 11464 ;;		Unchanged: 0/0
 11465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11466 ;;      Params:         0       0       1       0       0       0       0       0       0
 11467 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11468 ;;      Temps:          0       0       1       0       0       0       0       0       0
 11469 ;;      Totals:         0       0       2       0       0       0       0       0       0
 11470 ;;Total ram usage:        2 bytes
 11471 ;; Hardware stack levels used:    1
 11472 ;; Hardware stack levels required when called:   10
 11473 ;; This function calls:
 11474 ;;		_Lcd_Port
 11475 ;; This function is called by:
 11476 ;;		_lcd_gotoxy
 11477 ;;		_lcd_init
 11478 ;;		_lcd_clear
 11479 ;;		_lcd_shift_right
 11480 ;;		_lcd_shift_left
 11481 ;; This function uses a non-reentrant model
 11482 ;;
 11483                           
 11484                           	psect	text39
 11485  006284                     __ptext39:
 11486                           	opt stack 0
 11487  006284                     _Lcd_Cmd:
 11488                           	opt stack 19
 11489                           
 11490                           ;lcd.h: 54: RD2 = 0;
 11491                           
 11492                           ;incstack = 0
 11493                           ;incstack = 0
 11494  006284  9483               	bcf	3971,2,c	;volatile
 11495                           
 11496                           ;lcd.h: 55: Lcd_Port(a);
 11497  006286  C101  F100         	movff	Lcd_Cmd@a,?_Lcd_Port
 11498  00628A  EC6A  F030         	call	_Lcd_Port	;wreg free
 11499                           
 11500                           ;lcd.h: 56: RD3 = 1;
 11501  00628E  8683               	bsf	3971,3,c	;volatile
 11502                           
 11503                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 11504  006290  0E0B               	movlw	11
 11505  006292  0101               	movlb	1	; () banked
 11506  006294  6F02               	movwf	??_Lcd_Cmd& (0+255),b
 11507  006296  0E62               	movlw	98
 11508  006298                     u11167:
 11509  006298  2EE8               	decfsz	wreg,f,c
 11510  00629A  D7FE               	goto	u11167
 11511  00629C  2F02               	decfsz	??_Lcd_Cmd& (0+255),f,b
 11512  00629E  D7FC               	goto	u11167
 11513  0062A0  F000               	nop	
 11514                           
 11515                           ;lcd.h: 58: RD3 = 0;
 11516  0062A2  9683               	bcf	3971,3,c	;volatile
 11517  0062A4  0012               	return	
 11518  0062A6                     __end_of_Lcd_Cmd:
 11519                           	opt stack 0
 11520                           tblptru	equ	0xFF8
 11521                           tblptrh	equ	0xFF7
 11522                           tblptrl	equ	0xFF6
 11523                           tablat	equ	0xFF5
 11524                           prodh	equ	0xFF4
 11525                           prodl	equ	0xFF3
 11526                           intcon	equ	0xFF2
 11527                           intcon2	equ	0xFF1
 11528                           postinc0	equ	0xFEE
 11529                           wreg	equ	0xFE8
 11530                           indf2	equ	0xFDF
 11531                           postinc2	equ	0xFDE
 11532                           postdec2	equ	0xFDD
 11533                           fsr2h	equ	0xFDA
 11534                           fsr2l	equ	0xFD9
 11535                           status	equ	0xFD8
 11536                           
 11537 ;; *************** function _Lcd_Port *****************
 11538 ;; Defined at:
 11539 ;;		line 28 in file "lcd.h"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;  a               1    0[BANK1 ] unsigned char 
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;		None
 11544 ;; Return value:  Size  Location     Type
 11545 ;;		None               void
 11546 ;; Registers used:
 11547 ;;		None
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11553 ;;      Params:         0       0       1       0       0       0       0       0       0
 11554 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11555 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11556 ;;      Totals:         0       0       1       0       0       0       0       0       0
 11557 ;;Total ram usage:        1 bytes
 11558 ;; Hardware stack levels used:    1
 11559 ;; Hardware stack levels required when called:    9
 11560 ;; This function calls:
 11561 ;;		Nothing
 11562 ;; This function is called by:
 11563 ;;		_Lcd_Cmd
 11564 ;;		_lcd_init
 11565 ;;		_lcd_write_char
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           
 11569                           	psect	text40
 11570  0060D4                     __ptext40:
 11571                           	opt stack 0
 11572  0060D4                     _Lcd_Port:
 11573                           	opt stack 19
 11574                           
 11575                           ;lcd.h: 29: if(a & 1)
 11576                           
 11577                           ;incstack = 0
 11578                           ;incstack = 0
 11579  0060D4  0101               	movlb	1	; () banked
 11580  0060D6  0101               	movlb	1	; () banked
 11581  0060D8  A100               	btfss	Lcd_Port@a& (0+255),0,b
 11582  0060DA  D002               	goto	l101
 11583                           
 11584                           ; BSR set to: 1
 11585                           ;lcd.h: 30: RD4 = 1;
 11586  0060DC  8883               	bsf	3971,4,c	;volatile
 11587  0060DE  D001               	goto	l102
 11588  0060E0                     l101:
 11589                           
 11590                           ; BSR set to: 1
 11591                           ;lcd.h: 31: else
 11592                           ;lcd.h: 32: RD4 = 0;
 11593  0060E0  9883               	bcf	3971,4,c	;volatile
 11594  0060E2                     l102:
 11595                           
 11596                           ; BSR set to: 1
 11597                           ;lcd.h: 34: if(a & 2)
 11598  0060E2  0101               	movlb	1	; () banked
 11599  0060E4  0101               	movlb	1	; () banked
 11600  0060E6  A300               	btfss	Lcd_Port@a& (0+255),1,b
 11601  0060E8  D002               	goto	l103
 11602                           
 11603                           ; BSR set to: 1
 11604                           ;lcd.h: 35: RD5 = 1;
 11605  0060EA  8A83               	bsf	3971,5,c	;volatile
 11606  0060EC  D001               	goto	l104
 11607  0060EE                     l103:
 11608                           
 11609                           ; BSR set to: 1
 11610                           ;lcd.h: 36: else
 11611                           ;lcd.h: 37: RD5 = 0;
 11612  0060EE  9A83               	bcf	3971,5,c	;volatile
 11613  0060F0                     l104:
 11614                           
 11615                           ; BSR set to: 1
 11616                           ;lcd.h: 39: if(a & 4)
 11617  0060F0  0101               	movlb	1	; () banked
 11618  0060F2  0101               	movlb	1	; () banked
 11619  0060F4  A500               	btfss	Lcd_Port@a& (0+255),2,b
 11620  0060F6  D002               	goto	l105
 11621                           
 11622                           ; BSR set to: 1
 11623                           ;lcd.h: 40: RD6 = 1;
 11624  0060F8  8C83               	bsf	3971,6,c	;volatile
 11625  0060FA  D001               	goto	l106
 11626  0060FC                     l105:
 11627                           
 11628                           ; BSR set to: 1
 11629                           ;lcd.h: 41: else
 11630                           ;lcd.h: 42: RD6 = 0;
 11631  0060FC  9C83               	bcf	3971,6,c	;volatile
 11632  0060FE                     l106:
 11633                           
 11634                           ; BSR set to: 1
 11635                           ;lcd.h: 44: if(a & 8)
 11636  0060FE  0101               	movlb	1	; () banked
 11637  006100  0101               	movlb	1	; () banked
 11638  006102  A700               	btfss	Lcd_Port@a& (0+255),3,b
 11639  006104  D002               	goto	l107
 11640                           
 11641                           ; BSR set to: 1
 11642                           ;lcd.h: 45: RD7 = 1;
 11643  006106  8E83               	bsf	3971,7,c	;volatile
 11644  006108  D001               	goto	l109
 11645  00610A                     l107:
 11646                           
 11647                           ; BSR set to: 1
 11648                           ;lcd.h: 46: else
 11649                           ;lcd.h: 47: RD7 = 0;
 11650  00610A  9E83               	bcf	3971,7,c	;volatile
 11651  00610C                     l109:
 11652                           
 11653                           ; BSR set to: 1
 11654  00610C  0012               	return	
 11655  00610E                     __end_of_Lcd_Port:
 11656                           	opt stack 0
 11657                           tblptru	equ	0xFF8
 11658                           tblptrh	equ	0xFF7
 11659                           tblptrl	equ	0xFF6
 11660                           tablat	equ	0xFF5
 11661                           prodh	equ	0xFF4
 11662                           prodl	equ	0xFF3
 11663                           intcon	equ	0xFF2
 11664                           intcon2	equ	0xFF1
 11665                           postinc0	equ	0xFEE
 11666                           wreg	equ	0xFE8
 11667                           indf2	equ	0xFDF
 11668                           postinc2	equ	0xFDE
 11669                           postdec2	equ	0xFDD
 11670                           fsr2h	equ	0xFDA
 11671                           fsr2l	equ	0xFD9
 11672                           status	equ	0xFD8
 11673                           
 11674 ;; *************** function _interrupcaoLOW *****************
 11675 ;; Defined at:
 11676 ;;		line 186 in file "main.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;		None
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;		None
 11681 ;; Return value:  Size  Location     Type
 11682 ;;		None               void
 11683 ;; Registers used:
 11684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11690 ;;      Params:         0       0       0       0       0       0       0       0       0
 11691 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11692 ;;      Temps:          0      19       0       0       0       0       0       0       0
 11693 ;;      Totals:         0      19       0       0       0       0       0       0       0
 11694 ;;Total ram usage:       19 bytes
 11695 ;; Hardware stack levels used:    1
 11696 ;; Hardware stack levels required when called:    8
 11697 ;; This function calls:
 11698 ;;		i1_lcd_gotoxy
 11699 ;;		i1_lcd_putc
 11700 ;;		i1_Obtener_Distancia
 11701 ;;		i1_Read_LDR
 11702 ;;		i1_sprintf
 11703 ;; This function is called by:
 11704 ;;		Interrupt level 1
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           	psect	intcodelo
 11709  000018                     __pintcodelo:
 11710                           	opt stack 0
 11711  000018                     _interrupcaoLOW:
 11712                           	opt stack 17
 11713                           
 11714                           ; BSR set to: 1
 11715                           ;incstack = 0
 11716  000018  CFD8 F0A1          	movff	status,??_interrupcaoLOW+2
 11717  00001C  CFE8 F0A2          	movff	wreg,??_interrupcaoLOW+3
 11718  000020  CFE0 F0A3          	movff	bsr,??_interrupcaoLOW+4
 11719  000024  CFFA F0A4          	movff	pclath,??_interrupcaoLOW+5
 11720  000028  CFFB F0A5          	movff	pclatu,??_interrupcaoLOW+6
 11721  00002C  CFE9 F0A6          	movff	fsr0l,??_interrupcaoLOW+7
 11722  000030  CFEA F0A7          	movff	fsr0h,??_interrupcaoLOW+8
 11723  000034  CFE1 F0A8          	movff	fsr1l,??_interrupcaoLOW+9
 11724  000038  CFE2 F0A9          	movff	fsr1h,??_interrupcaoLOW+10
 11725  00003C  CFD9 F0AA          	movff	fsr2l,??_interrupcaoLOW+11
 11726  000040  CFDA F0AB          	movff	fsr2h,??_interrupcaoLOW+12
 11727  000044  CFF3 F0AC          	movff	prodl,??_interrupcaoLOW+13
 11728  000048  CFF4 F0AD          	movff	prodh,??_interrupcaoLOW+14
 11729  00004C  CFF6 F0AE          	movff	tblptrl,??_interrupcaoLOW+15
 11730  000050  CFF7 F0AF          	movff	tblptrh,??_interrupcaoLOW+16
 11731  000054  CFF8 F0B0          	movff	tblptru,??_interrupcaoLOW+17
 11732  000058  CFF5 F0B1          	movff	tablat,??_interrupcaoLOW+18
 11733  00005C                     
 11734                           ;main.c: 188: Distancia=Obtener_Distancia();
 11735  00005C  EC0C  F02D         	call	i1_Obtener_Distancia	;wreg free
 11736  000060  C019  F184         	movff	?i1_Obtener_Distancia,_Distancia
 11737  000064  C01A  F185         	movff	?i1_Obtener_Distancia+1,_Distancia+1
 11738                           
 11739                           ;main.c: 189: LDR_value=Read_LDR();
 11740  000068  EC8B  F027         	call	i1_Read_LDR	;wreg free
 11741  00006C  C049  F183         	movff	?i1_Read_LDR+2,_LDR_value+2
 11742  000070  C048  F182         	movff	?i1_Read_LDR+1,_LDR_value+1
 11743  000074  C047  F181         	movff	?i1_Read_LDR,_LDR_value
 11744                           
 11745                           ;main.c: 190: lcd_gotoxy(1,1);
 11746  000078  0100               	movlb	0	; () banked
 11747  00007A  6F9F               	movwf	??_interrupcaoLOW& (0+255),b
 11748  00007C  0E01               	movlw	1
 11749  00007E  6E14               	movwf	?i1_lcd_gotoxy,c
 11750  000080  0100               	movlb	0	; () banked
 11751  000082  519F               	movf	??_interrupcaoLOW& (0+255),w,b
 11752  000084  0100               	movlb	0	; () banked
 11753  000086  6FA0               	movwf	(??_interrupcaoLOW+1)& (0+255),b
 11754  000088  0E01               	movlw	1
 11755  00008A  6E15               	movwf	?i1_lcd_gotoxy+1,c
 11756  00008C  0100               	movlb	0	; () banked
 11757  00008E  51A0               	movf	(??_interrupcaoLOW+1)& (0+255),w,b
 11758  000090  ECB7  F02E         	call	i1_lcd_gotoxy	;wreg free
 11759  000094                     
 11760                           ;main.c: 191: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
 11761  000094  0101               	movlb	1	; () banked
 11762  000096  0E01               	movlw	high _LCD_Buffer
 11763  000098  0100               	movlb	0	; () banked
 11764  00009A  0100               	movlb	0	; () banked
 11765  00009C  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 11766  00009E  0101               	movlb	1	; () banked
 11767  0000A0  0E86               	movlw	low _LCD_Buffer
 11768  0000A2  0100               	movlb	0	; () banked
 11769  0000A4  6F71               	movwf	?i1_sprintf& (0+255),b
 11770  0000A6  0E08               	movlw	high STR_1
 11771  0000A8  0100               	movlb	0	; () banked
 11772  0000AA  0100               	movlb	0	; () banked
 11773  0000AC  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 11774  0000AE  0E88               	movlw	low STR_1
 11775  0000B0  0100               	movlb	0	; () banked
 11776  0000B2  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 11777  0000B4  C181  F075         	movff	_LDR_value,?i1_sprintf+4
 11778  0000B8  C182  F076         	movff	_LDR_value+1,?i1_sprintf+5
 11779  0000BC  C183  F077         	movff	_LDR_value+2,?i1_sprintf+6
 11780  0000C0  EC55  F00B         	call	i1_sprintf	;wreg free
 11781  0000C4                     
 11782                           ;main.c: 192: lcd_putc(LCD_Buffer);
 11783  0000C4  0101               	movlb	1	; () banked
 11784  0000C6  0E01               	movlw	high _LCD_Buffer
 11785  0000C8  6E16               	movwf	?i1_lcd_putc+1,c
 11786  0000CA  0101               	movlb	1	; () banked
 11787  0000CC  0E86               	movlw	low _LCD_Buffer
 11788  0000CE  6E15               	movwf	?i1_lcd_putc,c
 11789  0000D0  ECDC  F030         	call	i1_lcd_putc	;wreg free
 11790  0000D4                     
 11791                           ;main.c: 193: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
 11792  0000D4  0101               	movlb	1	; () banked
 11793  0000D6  0E01               	movlw	high _LCD_Buffer
 11794  0000D8  0100               	movlb	0	; () banked
 11795  0000DA  0100               	movlb	0	; () banked
 11796  0000DC  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 11797  0000DE  0101               	movlb	1	; () banked
 11798  0000E0  0E86               	movlw	low _LCD_Buffer
 11799  0000E2  0100               	movlb	0	; () banked
 11800  0000E4  6F71               	movwf	?i1_sprintf& (0+255),b
 11801  0000E6  0E08               	movlw	high STR_2
 11802  0000E8  0100               	movlb	0	; () banked
 11803  0000EA  0100               	movlb	0	; () banked
 11804  0000EC  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 11805  0000EE  0E76               	movlw	low STR_2
 11806  0000F0  0100               	movlb	0	; () banked
 11807  0000F2  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 11808  0000F4  C184  F075         	movff	_Distancia,?i1_sprintf+4
 11809  0000F8  C185  F076         	movff	_Distancia+1,?i1_sprintf+5
 11810  0000FC  EC55  F00B         	call	i1_sprintf	;wreg free
 11811  000100                     
 11812                           ;main.c: 194: lcd_gotoxy(2,1);
 11813  000100  0100               	movlb	0	; () banked
 11814  000102  6F9F               	movwf	??_interrupcaoLOW& (0+255),b
 11815  000104  0E02               	movlw	2
 11816  000106  6E14               	movwf	?i1_lcd_gotoxy,c
 11817  000108  0100               	movlb	0	; () banked
 11818  00010A  519F               	movf	??_interrupcaoLOW& (0+255),w,b
 11819  00010C  0100               	movlb	0	; () banked
 11820  00010E  6FA0               	movwf	(??_interrupcaoLOW+1)& (0+255),b
 11821  000110  0E01               	movlw	1
 11822  000112  6E15               	movwf	?i1_lcd_gotoxy+1,c
 11823  000114  0100               	movlb	0	; () banked
 11824  000116  51A0               	movf	(??_interrupcaoLOW+1)& (0+255),w,b
 11825  000118  ECB7  F02E         	call	i1_lcd_gotoxy	;wreg free
 11826                           
 11827                           ;main.c: 195: lcd_putc(LCD_Buffer);
 11828  00011C  0101               	movlb	1	; () banked
 11829  00011E  0E01               	movlw	high _LCD_Buffer
 11830  000120  6E16               	movwf	?i1_lcd_putc+1,c
 11831  000122  0101               	movlb	1	; () banked
 11832  000124  0E86               	movlw	low _LCD_Buffer
 11833  000126  6E15               	movwf	?i1_lcd_putc,c
 11834  000128  ECDC  F030         	call	i1_lcd_putc	;wreg free
 11835  00012C  C0B1  FFF5         	movff	??_interrupcaoLOW+18,tablat
 11836  000130  C0B0  FFF8         	movff	??_interrupcaoLOW+17,tblptru
 11837  000134  C0AF  FFF7         	movff	??_interrupcaoLOW+16,tblptrh
 11838  000138  C0AE  FFF6         	movff	??_interrupcaoLOW+15,tblptrl
 11839  00013C  C0AD  FFF4         	movff	??_interrupcaoLOW+14,prodh
 11840  000140  C0AC  FFF3         	movff	??_interrupcaoLOW+13,prodl
 11841  000144  C0AB  FFDA         	movff	??_interrupcaoLOW+12,fsr2h
 11842  000148  C0AA  FFD9         	movff	??_interrupcaoLOW+11,fsr2l
 11843  00014C  C0A9  FFE2         	movff	??_interrupcaoLOW+10,fsr1h
 11844  000150  C0A8  FFE1         	movff	??_interrupcaoLOW+9,fsr1l
 11845  000154  C0A7  FFEA         	movff	??_interrupcaoLOW+8,fsr0h
 11846  000158  C0A6  FFE9         	movff	??_interrupcaoLOW+7,fsr0l
 11847  00015C  C0A5  FFFB         	movff	??_interrupcaoLOW+6,pclatu
 11848  000160  C0A4  FFFA         	movff	??_interrupcaoLOW+5,pclath
 11849  000164  C0A3  FFE0         	movff	??_interrupcaoLOW+4,bsr
 11850  000168  C0A2  FFE8         	movff	??_interrupcaoLOW+3,wreg
 11851  00016C  C0A1  FFD8         	movff	??_interrupcaoLOW+2,status
 11852  000170  0010               	retfie	
 11853  000172                     __end_of_interrupcaoLOW:
 11854                           	opt stack 0
 11855                           pclatu	equ	0xFFB
 11856                           pclath	equ	0xFFA
 11857                           tblptru	equ	0xFF8
 11858                           tblptrh	equ	0xFF7
 11859                           tblptrl	equ	0xFF6
 11860                           tablat	equ	0xFF5
 11861                           prodh	equ	0xFF4
 11862                           prodl	equ	0xFF3
 11863                           intcon	equ	0xFF2
 11864                           intcon2	equ	0xFF1
 11865                           postinc0	equ	0xFEE
 11866                           fsr0h	equ	0xFEA
 11867                           fsr0l	equ	0xFE9
 11868                           wreg	equ	0xFE8
 11869                           fsr1h	equ	0xFE2
 11870                           fsr1l	equ	0xFE1
 11871                           bsr	equ	0xFE0
 11872                           indf2	equ	0xFDF
 11873                           postinc2	equ	0xFDE
 11874                           postdec2	equ	0xFDD
 11875                           fsr2h	equ	0xFDA
 11876                           fsr2l	equ	0xFD9
 11877                           status	equ	0xFD8
 11878                           
 11879 ;; *************** function i1_sprintf *****************
 11880 ;; Defined at:
 11881 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  sprintf         2   17[BANK0 ] PTR unsigned char 
 11884 ;;		 -> LCD_Buffer(32), 
 11885 ;;  sprintf         2   19[BANK0 ] PTR const unsigned char 
 11886 ;;		 -> STR_4(18), STR_3(10), STR_2(18), STR_1(10), 
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  sprintf         5   46[BANK0 ] struct .
 11889 ;;  sprintf         4   33[BANK0 ] unsigned long 
 11890 ;;  sprintf         3   57[BANK0 ] unsigned long 
 11891 ;;  sprintf         3   43[BANK0 ] unsigned long 
 11892 ;;  sprintf         3    0        unsigned long 
 11893 ;;  sprintf         3    0        unsigned long 
 11894 ;;  sprintf         2   60[BANK0 ] int 
 11895 ;;  sprintf         2   55[BANK0 ] int 
 11896 ;;  sprintf         2   53[BANK0 ] int 
 11897 ;;  sprintf         2   51[BANK0 ] unsigned short 
 11898 ;;  sprintf         2   41[BANK0 ] PTR void [1]
 11899 ;;		 -> ?_sprintf(2), 
 11900 ;;  sprintf         2   39[BANK0 ] unsigned int 
 11901 ;;  sprintf         2   37[BANK0 ] unsigned int 
 11902 ;;  sprintf         1   62[BANK0 ] char 
 11903 ;;  sprintf         1    0        unsigned char 
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  2   17[BANK0 ] int 
 11906 ;; Registers used:
 11907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11913 ;;      Params:         0       7       0       0       0       0       0       0       0
 11914 ;;      Locals:         0      33       0       0       0       0       0       0       0
 11915 ;;      Temps:          0       6       0       0       0       0       0       0       0
 11916 ;;      Totals:         0      46       0       0       0       0       0       0       0
 11917 ;;Total ram usage:       46 bytes
 11918 ;; Hardware stack levels used:    1
 11919 ;; Hardware stack levels required when called:    7
 11920 ;; This function calls:
 11921 ;;		i1_fround
 11922 ;;		i1_scale
 11923 ;;		i1___asftadd
 11924 ;;		i1___asftmul
 11925 ;;		i1___asftsub
 11926 ;;		i1___awdiv
 11927 ;;		i1__div_to_l_
 11928 ;;		i1__tdiv_to_l_
 11929 ;;		i1___ftge
 11930 ;;		i1___ftmul
 11931 ;;		i1___ftneg
 11932 ;;		i1___fttol
 11933 ;;		i1_isdigit
 11934 ;;		i1___lldiv
 11935 ;;		i1___llmod
 11936 ;;		i1___lltoft
 11937 ;;		i1___lwmod
 11938 ;;		i1___wmul
 11939 ;; This function is called by:
 11940 ;;		_interrupcaoLOW
 11941 ;; This function uses a non-reentrant model
 11942 ;;
 11943                           
 11944                           	psect	text42
 11945  0016AA                     __ptext42:
 11946                           	opt stack 0
 11947  0016AA                     i1_sprintf:
 11948                           	opt stack 17
 11949                           
 11950                           ;doprnt.c: 494: va_list ap;
 11951                           ;doprnt.c: 499: signed char c;
 11952                           ;doprnt.c: 501: int width;
 11953                           ;doprnt.c: 504: int prec;
 11954                           ;doprnt.c: 508: unsigned short flag;
 11955                           ;doprnt.c: 515: char d;
 11956                           ;doprnt.c: 516: double fval, integ;
 11957                           ;doprnt.c: 517: int exp;
 11958                           ;doprnt.c: 518: double ival;
 11959                           ;doprnt.c: 519: union {
 11960                           ;doprnt.c: 520: unsigned long _val;
 11961                           ;doprnt.c: 521: struct {
 11962                           ;doprnt.c: 522: const char * _cp;
 11963                           ;doprnt.c: 523: unsigned _len;
 11964                           ;doprnt.c: 524: } _str;
 11965                           ;doprnt.c: 525: } _val;
 11966                           ;doprnt.c: 542: *ap = __va_start();
 11967                           
 11968                           ;incstack = 0
 11969                           ;incstack = 0
 11970  0016AA  0100               	movlb	0	; () banked
 11971  0016AC  0E00               	movlw	high (?i1_sprintf+4)
 11972  0016AE  0100               	movlb	0	; () banked
 11973  0016B0  0100               	movlb	0	; () banked
 11974  0016B2  6F8A               	movwf	(i1sprintf@ap+1)& (0+255),b
 11975  0016B4  0100               	movlb	0	; () banked
 11976  0016B6  0E75               	movlw	low (?i1_sprintf+4)
 11977  0016B8  0100               	movlb	0	; () banked
 11978  0016BA  6F89               	movwf	i1sprintf@ap& (0+255),b
 11979                           
 11980                           ;doprnt.c: 545: while(c = *f++) {
 11981  0016BC  EFF1  F011         	goto	i1l11487
 11982  0016C0                     i1l11163:
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;doprnt.c: 547: if(c != '%')
 11986  0016C0  0100               	movlb	0	; () banked
 11987  0016C2  0100               	movlb	0	; () banked
 11988  0016C4  519E               	movf	i1sprintf@c& (0+255),w,b
 11989  0016C6  0A25               	xorlw	37
 11990  0016C8  B4D8               	btfsc	status,2,c
 11991  0016CA  D00D               	goto	i1l11169
 11992                           
 11993                           ; BSR set to: 0
 11994                           ;doprnt.c: 549: {
 11995                           ;doprnt.c: 550: ((*sp++ = (c)));
 11996  0016CC  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 11997  0016D0  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 11998  0016D4  0100               	movlb	0	; () banked
 11999  0016D6  C09E  FFDF         	movff	i1sprintf@c,indf2
 12000                           
 12001                           ; BSR set to: 0
 12002  0016DA  0100               	movlb	0	; () banked
 12003  0016DC  0100               	movlb	0	; () banked
 12004  0016DE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12005  0016E0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12006                           
 12007                           ;doprnt.c: 551: continue;
 12008  0016E2  EFF1  F011         	goto	i1l11487
 12009  0016E6                     i1l11169:
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;doprnt.c: 552: }
 12013                           ;doprnt.c: 555: width = 0;
 12014  0016E6  0E00               	movlw	0
 12015  0016E8  0100               	movlb	0	; () banked
 12016  0016EA  0100               	movlb	0	; () banked
 12017  0016EC  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 12018  0016EE  0E00               	movlw	0
 12019  0016F0  0100               	movlb	0	; () banked
 12020  0016F2  6F97               	movwf	i1sprintf@width& (0+255),b
 12021                           
 12022                           ;doprnt.c: 557: flag = 0;
 12023  0016F4  0E00               	movlw	0
 12024  0016F6  0100               	movlb	0	; () banked
 12025  0016F8  0100               	movlb	0	; () banked
 12026  0016FA  6F94               	movwf	(i1sprintf@flag+1)& (0+255),b
 12027  0016FC  0E00               	movlw	0
 12028  0016FE  0100               	movlb	0	; () banked
 12029  001700  6F93               	movwf	i1sprintf@flag& (0+255),b
 12030  001702  D007               	goto	i1l11175
 12031  001704                     i1l11171:
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;doprnt.c: 589: flag |= 0x04;
 12035  001704  0100               	movlb	0	; () banked
 12036  001706  0100               	movlb	0	; () banked
 12037  001708  8593               	bsf	i1sprintf@flag& (0+255),2,b
 12038                           
 12039                           ;doprnt.c: 590: f++;
 12040  00170A  0100               	movlb	0	; () banked
 12041  00170C  0100               	movlb	0	; () banked
 12042  00170E  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12043  001710  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12044  001712                     i1l11175:
 12045                           
 12046                           ; BSR set to: 0
 12047  001712  0100               	movlb	0	; () banked
 12048  001714  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12049  001718  0100               	movlb	0	; () banked
 12050  00171A  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12051  00171E  0008               	tblrd		*
 12052  001720  50F5               	movf	tablat,w,c
 12053                           
 12054                           ; Switch size 1, requested type "space"
 12055                           ; Number of cases is 1, Range of values is 48 to 48
 12056                           ; switch strategies available:
 12057                           ; Name         Instructions Cycles
 12058                           ; simple_byte            4     3 (average)
 12059                           ;	Chosen strategy is simple_byte
 12060  001722  0A30               	xorlw	48	; case 48
 12061  001724  B4D8               	btfsc	status,2,c
 12062  001726  D7EE               	goto	i1l11171
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 12066                           
 12067                           ; BSR set to: 0
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;doprnt.c: 595: }
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;doprnt.c: 594: break;
 12074  001728  0100               	movlb	0	; () banked
 12075  00172A  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12076  00172E  0100               	movlb	0	; () banked
 12077  001730  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12078  001734  0008               	tblrd		*
 12079  001736  CFF5 F011          	movff	tablat,?i1_isdigit
 12080  00173A  EC1F  F031         	call	i1_isdigit	;wreg free
 12081  00173E  A0D8               	btfss	status,0,c
 12082  001740  D043               	goto	i1l11189
 12083                           
 12084                           ;doprnt.c: 607: width = 0;
 12085  001742  0E00               	movlw	0
 12086  001744  0100               	movlb	0	; () banked
 12087  001746  0100               	movlb	0	; () banked
 12088  001748  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 12089  00174A  0E00               	movlw	0
 12090  00174C  0100               	movlb	0	; () banked
 12091  00174E  6F97               	movwf	i1sprintf@width& (0+255),b
 12092  001750                     i1l11181:
 12093                           
 12094                           ;doprnt.c: 609: width *= 10;
 12095  001750  C097  F021         	movff	i1sprintf@width,?i1___wmul
 12096  001754  C098  F022         	movff	i1sprintf@width+1,?i1___wmul+1
 12097  001758  0E00               	movlw	0
 12098  00175A  6E24               	movwf	?i1___wmul+3,c
 12099  00175C  0E0A               	movlw	10
 12100  00175E  6E23               	movwf	?i1___wmul+2,c
 12101  001760  EC87  F030         	call	i1___wmul	;wreg free
 12102  001764  C021  F097         	movff	?i1___wmul,i1sprintf@width
 12103  001768  C022  F098         	movff	?i1___wmul+1,i1sprintf@width+1
 12104                           
 12105                           ;doprnt.c: 610: width += *f++ - '0';
 12106  00176C  0100               	movlb	0	; () banked
 12107  00176E  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12108  001772  0100               	movlb	0	; () banked
 12109  001774  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12110  001778  0008               	tblrd		*
 12111  00177A  CFF5 F078          	movff	tablat,??i1_sprintf
 12112  00177E  0ED0               	movlw	208
 12113  001780  0100               	movlb	0	; () banked
 12114  001782  2578               	addwf	??i1_sprintf& (0+255),w,b
 12115  001784  0100               	movlb	0	; () banked
 12116  001786  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12117  001788  0100               	movlb	0	; () banked
 12118  00178A  0100               	movlb	0	; () banked
 12119  00178C  6B7A               	clrf	(??i1_sprintf+2)& (0+255),b
 12120  00178E  0EFF               	movlw	255
 12121  001790  237A               	addwfc	(??i1_sprintf+2)& (0+255),f,b
 12122  001792  0100               	movlb	0	; () banked
 12123  001794  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12124  001796  0100               	movlb	0	; () banked
 12125  001798  0100               	movlb	0	; () banked
 12126  00179A  2797               	addwf	i1sprintf@width& (0+255),f,b
 12127  00179C  0100               	movlb	0	; () banked
 12128  00179E  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 12129  0017A0  0100               	movlb	0	; () banked
 12130  0017A2  0100               	movlb	0	; () banked
 12131  0017A4  2398               	addwfc	(i1sprintf@width+1)& (0+255),f,b
 12132                           
 12133                           ; BSR set to: 0
 12134  0017A6  0100               	movlb	0	; () banked
 12135  0017A8  0100               	movlb	0	; () banked
 12136  0017AA  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12137  0017AC  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 12141  0017AE  0100               	movlb	0	; () banked
 12142  0017B0  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12143  0017B4  0100               	movlb	0	; () banked
 12144  0017B6  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12145  0017BA  0008               	tblrd		*
 12146  0017BC  CFF5 F011          	movff	tablat,?i1_isdigit
 12147  0017C0  EC1F  F031         	call	i1_isdigit	;wreg free
 12148  0017C4  B0D8               	btfsc	status,0,c
 12149  0017C6  D7C4               	goto	i1l11181
 12150  0017C8                     i1l11189:
 12151                           
 12152                           ;doprnt.c: 617: }
 12153                           ;doprnt.c: 620: if(*f == '.') {
 12154  0017C8  0100               	movlb	0	; () banked
 12155  0017CA  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12156  0017CE  0100               	movlb	0	; () banked
 12157  0017D0  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12158  0017D4  0008               	tblrd		*
 12159  0017D6  50F5               	movf	tablat,w,c
 12160  0017D8  0A2E               	xorlw	46
 12161  0017DA  A4D8               	btfss	status,2,c
 12162  0017DC  D03F               	goto	i1l11201
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;doprnt.c: 621: flag |= 0x4000;
 12166  0017DE  0100               	movlb	0	; () banked
 12167  0017E0  0100               	movlb	0	; () banked
 12168  0017E2  8D94               	bsf	(i1sprintf@flag+1)& (0+255),6,b
 12169                           
 12170                           ;doprnt.c: 622: f++;
 12171  0017E4  0100               	movlb	0	; () banked
 12172  0017E6  0100               	movlb	0	; () banked
 12173  0017E8  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12174  0017EA  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;doprnt.c: 629: {
 12178                           ;doprnt.c: 630: prec = 0;
 12179  0017EC  0E00               	movlw	0
 12180  0017EE  0100               	movlb	0	; () banked
 12181  0017F0  0100               	movlb	0	; () banked
 12182  0017F2  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12183  0017F4  0E00               	movlw	0
 12184  0017F6  0100               	movlb	0	; () banked
 12185  0017F8  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12186                           
 12187                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 12188  0017FA  D022               	goto	i1l11199
 12189  0017FC                     i1l11195:
 12190                           
 12191                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 12192  0017FC  C09C  F021         	movff	i1sprintf@prec,?i1___wmul
 12193  001800  C09D  F022         	movff	i1sprintf@prec+1,?i1___wmul+1
 12194  001804  0E00               	movlw	0
 12195  001806  6E24               	movwf	?i1___wmul+3,c
 12196  001808  0E0A               	movlw	10
 12197  00180A  6E23               	movwf	?i1___wmul+2,c
 12198  00180C  EC87  F030         	call	i1___wmul	;wreg free
 12199  001810  0100               	movlb	0	; () banked
 12200  001812  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12201  001816  0100               	movlb	0	; () banked
 12202  001818  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12203  00181C  0008               	tblrd		*
 12204  00181E  50F5               	movf	tablat,w,c
 12205  001820  2621               	addwf	?i1___wmul,f,c
 12206  001822  0E00               	movlw	0
 12207  001824  2222               	addwfc	?i1___wmul+1,f,c
 12208  001826  0ED0               	movlw	208
 12209  001828  2421               	addwf	?i1___wmul,w,c
 12210  00182A  0100               	movlb	0	; () banked
 12211  00182C  0100               	movlb	0	; () banked
 12212  00182E  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12213  001830  0EFF               	movlw	255
 12214  001832  2022               	addwfc	?i1___wmul+1,w,c
 12215  001834  0100               	movlb	0	; () banked
 12216  001836  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12217                           
 12218                           ; BSR set to: 0
 12219  001838  0100               	movlb	0	; () banked
 12220  00183A  0100               	movlb	0	; () banked
 12221  00183C  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12222  00183E  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12223  001840                     i1l11199:
 12224                           
 12225                           ; BSR set to: 0
 12226  001840  0100               	movlb	0	; () banked
 12227  001842  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12228  001846  0100               	movlb	0	; () banked
 12229  001848  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12230  00184C  0008               	tblrd		*
 12231  00184E  CFF5 F011          	movff	tablat,?i1_isdigit
 12232  001852  EC1F  F031         	call	i1_isdigit	;wreg free
 12233  001856  A0D8               	btfss	status,0,c
 12234  001858  D010               	goto	i1l11209
 12235  00185A  D7D0               	goto	i1l11195
 12236  00185C                     i1l11201:
 12237                           
 12238                           ;doprnt.c: 635: prec = 0;
 12239  00185C  0E00               	movlw	0
 12240  00185E  0100               	movlb	0	; () banked
 12241  001860  0100               	movlb	0	; () banked
 12242  001862  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12243  001864  0E00               	movlw	0
 12244  001866  0100               	movlb	0	; () banked
 12245  001868  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;doprnt.c: 637: flag |= 0x1000;
 12249  00186A  0100               	movlb	0	; () banked
 12250  00186C  0100               	movlb	0	; () banked
 12251  00186E  8994               	bsf	(i1sprintf@flag+1)& (0+255),4,b
 12252  001870  D004               	goto	i1l11209
 12253  001872                     i1l11205:
 12254                           
 12255                           ; BSR set to: 0
 12256                           ;doprnt.c: 672: flag |= 0x400;
 12257  001872  0100               	movlb	0	; () banked
 12258  001874  0100               	movlb	0	; () banked
 12259  001876  8594               	bsf	(i1sprintf@flag+1)& (0+255),2,b
 12260                           
 12261                           ;doprnt.c: 673: break;
 12262  001878  D01E               	goto	i1l11211
 12263  00187A                     i1l11209:
 12264  00187A  0100               	movlb	0	; () banked
 12265  00187C  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12266  001880  0100               	movlb	0	; () banked
 12267  001882  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12268  001886  0100               	movlb	0	; () banked
 12269  001888  0100               	movlb	0	; () banked
 12270  00188A  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12271  00188C  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12272  00188E  0008               	tblrd		*
 12273  001890  0100               	movlb	0	; () banked
 12274  001892  CFF5 F09E          	movff	tablat,i1sprintf@c
 12275  001896  0100               	movlb	0	; () banked
 12276  001898  519E               	movf	i1sprintf@c& (0+255),w,b
 12277                           
 12278                           ; Switch size 1, requested type "space"
 12279                           ; Number of cases is 4, Range of values is 0 to 105
 12280                           ; switch strategies available:
 12281                           ; Name         Instructions Cycles
 12282                           ; simple_byte           13     7 (average)
 12283                           ;	Chosen strategy is simple_byte
 12284  00189A  0A00               	xorlw	0	; case 0
 12285  00189C  B4D8               	btfsc	status,2,c
 12286  00189E  EF03  F012         	goto	i1l11489
 12287  0018A2  0A64               	xorlw	100	; case 100
 12288  0018A4  B4D8               	btfsc	status,2,c
 12289  0018A6  D007               	goto	i1l11211
 12290  0018A8  0A02               	xorlw	2	; case 102
 12291  0018AA  B4D8               	btfsc	status,2,c
 12292  0018AC  D7E2               	goto	i1l11205
 12293  0018AE  0A0F               	xorlw	15	; case 105
 12294  0018B0  A4D8               	btfss	status,2,c
 12295  0018B2  EFF1  F011         	goto	i1l11487
 12296  0018B6                     i1l11211:
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;doprnt.c: 834: if(flag & (0x700)) {
 12300  0018B6  0E07               	movlw	7
 12301  0018B8  0100               	movlb	0	; () banked
 12302  0018BA  0100               	movlb	0	; () banked
 12303  0018BC  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 12304  0018BE  B4D8               	btfsc	status,2,c
 12305  0018C0  D3B6               	goto	i1l11391
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;doprnt.c: 836: if(flag & 0x1000)
 12309  0018C2  0100               	movlb	0	; () banked
 12310  0018C4  0100               	movlb	0	; () banked
 12311  0018C6  A994               	btfss	(i1sprintf@flag+1)& (0+255),4,b
 12312  0018C8  D007               	goto	i1l11217
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;doprnt.c: 838: prec = 6;
 12316  0018CA  0E00               	movlw	0
 12317  0018CC  0100               	movlb	0	; () banked
 12318  0018CE  0100               	movlb	0	; () banked
 12319  0018D0  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12320  0018D2  0E06               	movlw	6
 12321  0018D4  0100               	movlb	0	; () banked
 12322  0018D6  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12323  0018D8                     i1l11217:
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12327  0018D8  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 12328  0018DC  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 12329  0018E0  0100               	movlb	0	; () banked
 12330  0018E2  CFDE F099          	movff	postinc2,i1sprintf@fval
 12331  0018E6  0100               	movlb	0	; () banked
 12332  0018E8  CFDE F09A          	movff	postinc2,i1sprintf@fval+1
 12333  0018EC  0100               	movlb	0	; () banked
 12334  0018EE  CFDD F09B          	movff	postdec2,i1sprintf@fval+2
 12335                           
 12336                           ; BSR set to: 0
 12337  0018F2  0E03               	movlw	3
 12338  0018F4  0100               	movlb	0	; () banked
 12339  0018F6  0100               	movlb	0	; () banked
 12340  0018F8  2789               	addwf	i1sprintf@ap& (0+255),f,b
 12341  0018FA  0E00               	movlw	0
 12342  0018FC  0100               	movlb	0	; () banked
 12343  0018FE  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;doprnt.c: 840: if(fval < 0.0) {
 12347  001900  0100               	movlb	0	; () banked
 12348  001902  0100               	movlb	0	; () banked
 12349  001904  519B               	movf	(i1sprintf@fval+2)& (0+255),w,b
 12350  001906  0A80               	xorlw	128
 12351  001908  0F80               	addlw	128
 12352  00190A  E107               	bnz	i1u1056_25
 12353  00190C  0E00               	movlw	0
 12354  00190E  0100               	movlb	0	; () banked
 12355  001910  5D9A               	subwf	(i1sprintf@fval+1)& (0+255),w,b
 12356  001912  E103               	bnz	i1u1056_25
 12357  001914  0E00               	movlw	0
 12358  001916  0100               	movlb	0	; () banked
 12359  001918  5D99               	subwf	i1sprintf@fval& (0+255),w,b
 12360  00191A                     i1u1056_25:
 12361  00191A  B0D8               	btfsc	status,0,c
 12362  00191C  D012               	goto	i1l11227
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;doprnt.c: 841: fval = -fval;
 12366  00191E  C099  F011         	movff	i1sprintf@fval,?i1___ftneg
 12367  001922  C09A  F012         	movff	i1sprintf@fval+1,?i1___ftneg+1
 12368  001926  C09B  F013         	movff	i1sprintf@fval+2,?i1___ftneg+2
 12369  00192A  EC0C  F031         	call	i1___ftneg	;wreg free
 12370  00192E  C013  F09B         	movff	?i1___ftneg+2,i1sprintf@fval+2
 12371  001932  C012  F09A         	movff	?i1___ftneg+1,i1sprintf@fval+1
 12372  001936  C011  F099         	movff	?i1___ftneg,i1sprintf@fval
 12373                           
 12374                           ;doprnt.c: 842: flag |= 0x03;
 12375  00193A  0E03               	movlw	3
 12376  00193C  0100               	movlb	0	; () banked
 12377  00193E  0100               	movlb	0	; () banked
 12378  001940  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 12379  001942                     i1l11227:
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;doprnt.c: 843: }
 12383                           ;doprnt.c: 844: exp = 0;
 12384  001942  0E00               	movlw	0
 12385  001944  0100               	movlb	0	; () banked
 12386  001946  0100               	movlb	0	; () banked
 12387  001948  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12388  00194A  0E00               	movlw	0
 12389  00194C  0100               	movlb	0	; () banked
 12390  00194E  6F95               	movwf	i1sprintf@exp& (0+255),b
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;doprnt.c: 845: if( fval!=0) {
 12394  001950  0E7F               	movlw	127
 12395  001952  0100               	movlb	0	; () banked
 12396  001954  0100               	movlb	0	; () banked
 12397  001956  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 12398  001958  0100               	movlb	0	; () banked
 12399  00195A  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 12400  00195C  0100               	movlb	0	; () banked
 12401  00195E  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 12402  001960  B4D8               	btfsc	status,2,c
 12403  001962  D099               	goto	i1l11255
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12407  001964  0E82               	movlw	130
 12408  001966  0100               	movlb	0	; () banked
 12409  001968  6F78               	movwf	??i1_sprintf& (0+255),b
 12410  00196A  0EFF               	movlw	255
 12411  00196C  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12412  00196E  0100               	movlb	0	; () banked
 12413  001970  C099  F07A         	movff	i1sprintf@fval,??i1_sprintf+2
 12414  001974  0100               	movlb	0	; () banked
 12415  001976  C09A  F07B         	movff	i1sprintf@fval+1,??i1_sprintf+3
 12416  00197A  0100               	movlb	0	; () banked
 12417  00197C  C09B  F07C         	movff	i1sprintf@fval+2,??i1_sprintf+4
 12418  001980  0100               	movlb	0	; () banked
 12419  001982  C09C  F07D         	movff	i1sprintf@fval+3,??i1_sprintf+5
 12420  001986  0E10               	movlw	16
 12421  001988  D006               	goto	i1u1058_20
 12422  00198A                     i1u1058_25:
 12423  00198A  0100               	movlb	0	; () banked
 12424  00198C  90D8               	bcf	status,0,c
 12425  00198E  337D               	rrcf	(??i1_sprintf+5)& (0+255),f,b
 12426  001990  337C               	rrcf	(??i1_sprintf+4)& (0+255),f,b
 12427  001992  337B               	rrcf	(??i1_sprintf+3)& (0+255),f,b
 12428  001994  337A               	rrcf	(??i1_sprintf+2)& (0+255),f,b
 12429  001996                     i1u1058_20:
 12430  001996  2EE8               	decfsz	wreg,f,c
 12431  001998  D7F8               	goto	i1u1058_25
 12432  00199A  0100               	movlb	0	; () banked
 12433  00199C  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 12434  00199E  0100               	movlb	0	; () banked
 12435  0019A0  2578               	addwf	??i1_sprintf& (0+255),w,b
 12436  0019A2  0100               	movlb	0	; () banked
 12437  0019A4  0100               	movlb	0	; () banked
 12438  0019A6  6F95               	movwf	i1sprintf@exp& (0+255),b
 12439  0019A8  0100               	movlb	0	; () banked
 12440  0019AA  0100               	movlb	0	; () banked
 12441  0019AC  0E00               	movlw	0
 12442  0019AE  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 12443  0019B0  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;doprnt.c: 847: exp--;
 12447  0019B2  0100               	movlb	0	; () banked
 12448  0019B4  0100               	movlb	0	; () banked
 12449  0019B6  0795               	decf	i1sprintf@exp& (0+255),f,b
 12450  0019B8  A0D8               	btfss	status,0,c
 12451  0019BA  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;doprnt.c: 848: exp *= 3;
 12455  0019BC  C095  F021         	movff	i1sprintf@exp,?i1___wmul
 12456  0019C0  C096  F022         	movff	i1sprintf@exp+1,?i1___wmul+1
 12457  0019C4  0E00               	movlw	0
 12458  0019C6  6E24               	movwf	?i1___wmul+3,c
 12459  0019C8  0E03               	movlw	3
 12460  0019CA  6E23               	movwf	?i1___wmul+2,c
 12461  0019CC  EC87  F030         	call	i1___wmul	;wreg free
 12462  0019D0  C021  F095         	movff	?i1___wmul,i1sprintf@exp
 12463  0019D4  C022  F096         	movff	?i1___wmul+1,i1sprintf@exp+1
 12464                           
 12465                           ;doprnt.c: 849: exp /= 10;
 12466  0019D8  C095  F018         	movff	i1sprintf@exp,?i1___awdiv
 12467  0019DC  C096  F019         	movff	i1sprintf@exp+1,?i1___awdiv+1
 12468  0019E0  0E00               	movlw	0
 12469  0019E2  6E1B               	movwf	?i1___awdiv+3,c
 12470  0019E4  0E0A               	movlw	10
 12471  0019E6  6E1A               	movwf	?i1___awdiv+2,c
 12472  0019E8  ECB5  F02B         	call	i1___awdiv	;wreg free
 12473  0019EC  C018  F095         	movff	?i1___awdiv,i1sprintf@exp
 12474  0019F0  C019  F096         	movff	?i1___awdiv+1,i1sprintf@exp+1
 12475                           
 12476                           ;doprnt.c: 850: if(exp < 0)
 12477  0019F4  0100               	movlb	0	; () banked
 12478  0019F6  0100               	movlb	0	; () banked
 12479  0019F8  AF96               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 12480  0019FA  D005               	goto	i1l11243
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;doprnt.c: 851: exp--;
 12484  0019FC  0100               	movlb	0	; () banked
 12485  0019FE  0100               	movlb	0	; () banked
 12486  001A00  0795               	decf	i1sprintf@exp& (0+255),f,b
 12487  001A02  A0D8               	btfss	status,0,c
 12488  001A04  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12489  001A06                     i1l11243:
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;doprnt.c: 855: integ = scale(-exp);
 12493  001A06  0100               	movlb	0	; () banked
 12494  001A08  0100               	movlb	0	; () banked
 12495  001A0A  5195               	movf	i1sprintf@exp& (0+255),w,b
 12496  001A0C  0800               	sublw	0
 12497  001A0E  6E47               	movwf	?i1_scale,c
 12498  001A10  EC14  F015         	call	i1_scale	;wreg free
 12499  001A14  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 12500  001A18  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 12501  001A1C  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 12502                           
 12503                           ;doprnt.c: 856: integ *= fval;
 12504  001A20  0100               	movlb	0	; () banked
 12505  001A22  0E00               	movlw	high i1sprintf@integ
 12506  001A24  0100               	movlb	0	; () banked
 12507  001A26  0100               	movlb	0	; () banked
 12508  001A28  6F61               	movwf	(?i1___asftmul+1)& (0+255),b
 12509  001A2A  0100               	movlb	0	; () banked
 12510  001A2C  0E8B               	movlw	low i1sprintf@integ
 12511  001A2E  0100               	movlb	0	; () banked
 12512  001A30  6F60               	movwf	?i1___asftmul& (0+255),b
 12513  001A32  C099  F062         	movff	i1sprintf@fval,?i1___asftmul+2
 12514  001A36  C09A  F063         	movff	i1sprintf@fval+1,?i1___asftmul+3
 12515  001A3A  C09B  F064         	movff	i1sprintf@fval+2,?i1___asftmul+4
 12516  001A3E  EC11  F030         	call	i1___asftmul	;wreg free
 12517                           
 12518                           ;doprnt.c: 857: if(integ < 1.0)
 12519  001A42  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12520  001A46  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12521  001A4A  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12522  001A4E  0E00               	movlw	0
 12523  001A50  6E14               	movwf	?i1___ftge+3,c
 12524  001A52  0E80               	movlw	128
 12525  001A54  6E15               	movwf	?i1___ftge+4,c
 12526  001A56  0E3F               	movlw	63
 12527  001A58  6E16               	movwf	?i1___ftge+5,c
 12528  001A5A  EC6D  F02B         	call	i1___ftge	;wreg free
 12529  001A5E  B0D8               	btfsc	status,0,c
 12530  001A60  D006               	goto	i1l11251
 12531                           
 12532                           ;doprnt.c: 858: exp--;
 12533  001A62  0100               	movlb	0	; () banked
 12534  001A64  0100               	movlb	0	; () banked
 12535  001A66  0795               	decf	i1sprintf@exp& (0+255),f,b
 12536  001A68  A0D8               	btfss	status,0,c
 12537  001A6A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12538  001A6C  D014               	goto	i1l11255
 12539  001A6E                     i1l11251:
 12540                           
 12541                           ;doprnt.c: 859: else if(integ >= 10.0)
 12542  001A6E  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12543  001A72  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12544  001A76  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12545  001A7A  0E00               	movlw	0
 12546  001A7C  6E14               	movwf	?i1___ftge+3,c
 12547  001A7E  0E20               	movlw	32
 12548  001A80  6E15               	movwf	?i1___ftge+4,c
 12549  001A82  0E41               	movlw	65
 12550  001A84  6E16               	movwf	?i1___ftge+5,c
 12551  001A86  EC6D  F02B         	call	i1___ftge	;wreg free
 12552  001A8A  A0D8               	btfss	status,0,c
 12553  001A8C  D004               	goto	i1l11255
 12554                           
 12555                           ;doprnt.c: 860: exp++;
 12556  001A8E  0100               	movlb	0	; () banked
 12557  001A90  0100               	movlb	0	; () banked
 12558  001A92  4B95               	infsnz	i1sprintf@exp& (0+255),f,b
 12559  001A94  2B96               	incf	(i1sprintf@exp+1)& (0+255),f,b
 12560  001A96                     i1l11255:
 12561                           
 12562                           ;doprnt.c: 861: }
 12563                           ;doprnt.c: 1121: if(prec <= 12)
 12564  001A96  0100               	movlb	0	; () banked
 12565  001A98  0100               	movlb	0	; () banked
 12566  001A9A  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12567  001A9C  0A80               	xorlw	128
 12568  001A9E  0F80               	addlw	-128
 12569  001AA0  0E0D               	movlw	13
 12570  001AA2  B4D8               	btfsc	status,2,c
 12571  001AA4  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 12572  001AA6  B0D8               	btfsc	status,0,c
 12573  001AA8  D015               	goto	i1l11259
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;doprnt.c: 1122: fval += fround(prec);
 12577  001AAA  0100               	movlb	0	; () banked
 12578  001AAC  0E00               	movlw	high i1sprintf@fval
 12579  001AAE  0100               	movlb	0	; () banked
 12580  001AB0  0100               	movlb	0	; () banked
 12581  001AB2  6F6D               	movwf	(?i1___asftadd+1)& (0+255),b
 12582  001AB4  0100               	movlb	0	; () banked
 12583  001AB6  0E99               	movlw	low i1sprintf@fval
 12584  001AB8  0100               	movlb	0	; () banked
 12585  001ABA  6F6C               	movwf	?i1___asftadd& (0+255),b
 12586  001ABC  C09C  F047         	movff	i1sprintf@prec,?i1_fround
 12587  001AC0  EC99  F01A         	call	i1_fround	;wreg free
 12588  001AC4  C049  F070         	movff	?i1_fround+2,?i1___asftadd+4
 12589  001AC8  C048  F06F         	movff	?i1_fround+1,?i1___asftadd+3
 12590  001ACC  C047  F06E         	movff	?i1_fround,?i1___asftadd+2
 12591  001AD0  EC2F  F030         	call	i1___asftadd	;wreg free
 12592  001AD4                     i1l11259:
 12593                           
 12594                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12595  001AD4  0100               	movlb	0	; () banked
 12596  001AD6  0100               	movlb	0	; () banked
 12597  001AD8  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12598  001ADA  0A80               	xorlw	128
 12599  001ADC  0F80               	addlw	-128
 12600  001ADE  0E0A               	movlw	10
 12601  001AE0  B4D8               	btfsc	status,2,c
 12602  001AE2  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 12603  001AE4  B0D8               	btfsc	status,0,c
 12604  001AE6  D022               	goto	i1l11267
 12605                           
 12606                           ; BSR set to: 0
 12607  001AE8  0E7F               	movlw	127
 12608  001AEA  0100               	movlb	0	; () banked
 12609  001AEC  0100               	movlb	0	; () banked
 12610  001AEE  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 12611  001AF0  0100               	movlb	0	; () banked
 12612  001AF2  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 12613  001AF4  0100               	movlb	0	; () banked
 12614  001AF6  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 12615  001AF8  B4D8               	btfsc	status,2,c
 12616  001AFA  D067               	goto	i1l11283
 12617                           
 12618                           ; BSR set to: 0
 12619  001AFC  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 12620  001B00  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 12621  001B04  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 12622  001B08  EC7A  F028         	call	i1___fttol	;wreg free
 12623  001B0C  502A               	movf	?i1___fttol+3,w,c
 12624  001B0E  1027               	iorwf	?i1___fttol,w,c
 12625  001B10  1028               	iorwf	?i1___fttol+1,w,c
 12626  001B12  1029               	iorwf	?i1___fttol+2,w,c
 12627  001B14  A4D8               	btfss	status,2,c
 12628  001B16  D059               	goto	i1l11283
 12629  001B18  0100               	movlb	0	; () banked
 12630  001B1A  0100               	movlb	0	; () banked
 12631  001B1C  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12632  001B1E  0A80               	xorlw	128
 12633  001B20  0F80               	addlw	-128
 12634  001B22  0E02               	movlw	2
 12635  001B24  B4D8               	btfsc	status,2,c
 12636  001B26  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 12637  001B28  A0D8               	btfss	status,0,c
 12638  001B2A  D04F               	goto	i1l11283
 12639  001B2C                     i1l11267:
 12640                           
 12641                           ; BSR set to: 0
 12642                           ;doprnt.c: 1129: if(integ < 4.294967296){
 12643  001B2C  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12644  001B30  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12645  001B34  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12646  001B38  0E70               	movlw	112
 12647  001B3A  6E14               	movwf	?i1___ftge+3,c
 12648  001B3C  0E89               	movlw	137
 12649  001B3E  6E15               	movwf	?i1___ftge+4,c
 12650  001B40  0E40               	movlw	64
 12651  001B42  6E16               	movwf	?i1___ftge+5,c
 12652  001B44  EC6D  F02B         	call	i1___ftge	;wreg free
 12653  001B48  B0D8               	btfsc	status,0,c
 12654  001B4A  D003               	goto	i1l11271
 12655                           
 12656                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12657  001B4C  0100               	movlb	0	; () banked
 12658  001B4E  0EF7               	movlw	247
 12659  001B50  D002               	goto	L14
 12660  001B52                     i1l11271:
 12661                           
 12662                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12663  001B52  0100               	movlb	0	; () banked
 12664  001B54  0EF8               	movlw	248
 12665  001B56                     L14:
 12666  001B56  0100               	movlb	0	; () banked
 12667  001B58  2795               	addwf	i1sprintf@exp& (0+255),f,b
 12668  001B5A  0EFF               	movlw	255
 12669  001B5C  0100               	movlb	0	; () banked
 12670  001B5E  2396               	addwfc	(i1sprintf@exp+1)& (0+255),f,b
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;doprnt.c: 1133: }
 12674                           ;doprnt.c: 1134: integ = scale(exp);
 12675                           
 12676                           ; BSR set to: 0
 12677  001B60  C095  F047         	movff	i1sprintf@exp,?i1_scale
 12678  001B64  EC14  F015         	call	i1_scale	;wreg free
 12679  001B68  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 12680  001B6C  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 12681  001B70  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 12682                           
 12683                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 12684  001B74  C099  F011         	movff	i1sprintf@fval,?i1__tdiv_to_l_
 12685  001B78  C09A  F012         	movff	i1sprintf@fval+1,?i1__tdiv_to_l_+1
 12686  001B7C  C09B  F013         	movff	i1sprintf@fval+2,?i1__tdiv_to_l_+2
 12687  001B80  C08B  F014         	movff	i1sprintf@integ,?i1__tdiv_to_l_+3
 12688  001B84  C08C  F015         	movff	i1sprintf@integ+1,?i1__tdiv_to_l_+4
 12689  001B88  C08D  F016         	movff	i1sprintf@integ+2,?i1__tdiv_to_l_+5
 12690  001B8C  ECDD  F022         	call	i1__tdiv_to_l_	;wreg free
 12691  001B90  C014  F084         	movff	?i1__tdiv_to_l_+3,i1_sprintf$563+3
 12692  001B94  C013  F083         	movff	?i1__tdiv_to_l_+2,i1_sprintf$563+2
 12693  001B98  C012  F082         	movff	?i1__tdiv_to_l_+1,i1_sprintf$563+1
 12694  001B9C  C011  F081         	movff	?i1__tdiv_to_l_,i1_sprintf$563
 12695  001BA0  C081  F08E         	movff	i1_sprintf$563,i1sprintf@_val
 12696  001BA4  C082  F08F         	movff	i1_sprintf$563+1,i1sprintf@_val+1
 12697  001BA8  C083  F090         	movff	i1_sprintf$563+2,i1sprintf@_val+2
 12698  001BAC  C084  F091         	movff	i1_sprintf$563+3,i1sprintf@_val+3
 12699                           
 12700                           ;doprnt.c: 1138: fval = 0.0;
 12701  001BB0  0E00               	movlw	0
 12702  001BB2  0100               	movlb	0	; () banked
 12703  001BB4  0100               	movlb	0	; () banked
 12704  001BB6  6F99               	movwf	i1sprintf@fval& (0+255),b
 12705  001BB8  0E00               	movlw	0
 12706  001BBA  0100               	movlb	0	; () banked
 12707  001BBC  0100               	movlb	0	; () banked
 12708  001BBE  6F9A               	movwf	(i1sprintf@fval+1)& (0+255),b
 12709  001BC0  0E00               	movlw	0
 12710  001BC2  0100               	movlb	0	; () banked
 12711  001BC4  0100               	movlb	0	; () banked
 12712  001BC6  6F9B               	movwf	(i1sprintf@fval+2)& (0+255),b
 12713                           
 12714                           ;doprnt.c: 1139: } else {
 12715  001BC8  D02F               	goto	i1l11289
 12716  001BCA                     i1l11283:
 12717                           
 12718                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 12719  001BCA  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 12720  001BCE  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 12721  001BD2  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 12722  001BD6  EC7A  F028         	call	i1___fttol	;wreg free
 12723  001BDA  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 12724  001BDE  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 12725  001BE2  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 12726  001BE6  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 12727                           
 12728                           ;doprnt.c: 1141: fval -= (double)_val._val;
 12729  001BEA  0100               	movlb	0	; () banked
 12730  001BEC  0E00               	movlw	high i1sprintf@fval
 12731  001BEE  6E2E               	movwf	?i1___asftsub+1,c
 12732  001BF0  0100               	movlb	0	; () banked
 12733  001BF2  0E99               	movlw	low i1sprintf@fval
 12734  001BF4  6E2D               	movwf	?i1___asftsub,c
 12735  001BF6  C08E  F019         	movff	i1sprintf@_val,?i1___lltoft
 12736  001BFA  C08F  F01A         	movff	i1sprintf@_val+1,?i1___lltoft+1
 12737  001BFE  C090  F01B         	movff	i1sprintf@_val+2,?i1___lltoft+2
 12738  001C02  C091  F01C         	movff	i1sprintf@_val+3,?i1___lltoft+3
 12739  001C06  EC29  F02E         	call	i1___lltoft	;wreg free
 12740  001C0A  C01B  F031         	movff	?i1___lltoft+2,?i1___asftsub+4
 12741  001C0E  C01A  F030         	movff	?i1___lltoft+1,?i1___asftsub+3
 12742  001C12  C019  F02F         	movff	?i1___lltoft,?i1___asftsub+2
 12743  001C16  ECF3  F02F         	call	i1___asftsub	;wreg free
 12744                           
 12745                           ;doprnt.c: 1142: exp = 0;
 12746  001C1A  0E00               	movlw	0
 12747  001C1C  0100               	movlb	0	; () banked
 12748  001C1E  0100               	movlb	0	; () banked
 12749  001C20  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12750  001C22  0E00               	movlw	0
 12751  001C24  0100               	movlb	0	; () banked
 12752  001C26  6F95               	movwf	i1sprintf@exp& (0+255),b
 12753  001C28                     i1l11289:
 12754                           
 12755                           ; BSR set to: 0
 12756                           ;doprnt.c: 1143: }
 12757                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12758  001C28  0100               	movlb	0	; () banked
 12759  001C2A  6F78               	movwf	??i1_sprintf& (0+255),b
 12760  001C2C  0E01               	movlw	1
 12761  001C2E  0100               	movlb	0	; () banked
 12762  001C30  0100               	movlb	0	; () banked
 12763  001C32  6F9E               	movwf	i1sprintf@c& (0+255),b
 12764  001C34  0100               	movlb	0	; () banked
 12765  001C36  5178               	movf	??i1_sprintf& (0+255),w,b
 12766  001C38                     
 12767                           ; BSR set to: 0
 12768  001C38  0100               	movlb	0	; () banked
 12769  001C3A  0100               	movlb	0	; () banked
 12770  001C3C  519E               	movf	i1sprintf@c& (0+255),w,b
 12771  001C3E  0A0A               	xorlw	10
 12772  001C40  B4D8               	btfsc	status,2,c
 12773  001C42  D021               	goto	i1l11303
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 12777                           
 12778                           ; BSR set to: 0
 12779                           
 12780                           ; BSR set to: 0
 12781  001C44  0100               	movlb	0	; () banked
 12782  001C46  0100               	movlb	0	; () banked
 12783  001C48  519E               	movf	i1sprintf@c& (0+255),w,b
 12784  001C4A  0D04               	mullw	4
 12785  001C4C  0E00               	movlw	low _dpowers
 12786  001C4E  24F3               	addwf	prodl,w,c
 12787  001C50  6EF6               	movwf	tblptrl,c
 12788  001C52  0E08               	movlw	high _dpowers
 12789  001C54  20F4               	addwfc	prodh,w,c
 12790  001C56  6EF7               	movwf	tblptrh,c
 12791  001C58  0009               	tblrd		*+
 12792  001C5A  50F5               	movf	tablat,w,c
 12793  001C5C  0100               	movlb	0	; () banked
 12794  001C5E  0100               	movlb	0	; () banked
 12795  001C60  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 12796  001C62  0009               	tblrd		*+
 12797  001C64  50F5               	movf	tablat,w,c
 12798  001C66  0100               	movlb	0	; () banked
 12799  001C68  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 12800  001C6A  0009               	tblrd		*+
 12801  001C6C  50F5               	movf	tablat,w,c
 12802  001C6E  0100               	movlb	0	; () banked
 12803  001C70  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 12804  001C72  0009               	tblrd		*+
 12805  001C74  50F5               	movf	tablat,w,c
 12806  001C76  0100               	movlb	0	; () banked
 12807  001C78  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 12808  001C7A  A0D8               	btfss	status,0,c
 12809  001C7C  D004               	goto	i1l11303
 12810                           
 12811                           ; BSR set to: 0
 12812                           
 12813                           ; BSR set to: 0
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;doprnt.c: 1147: break;
 12817  001C7E  0100               	movlb	0	; () banked
 12818  001C80  0100               	movlb	0	; () banked
 12819  001C82  2B9E               	incf	i1sprintf@c& (0+255),f,b
 12820  001C84  D7D9               	goto	L15
 12821  001C86                     i1l11303:
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;doprnt.c: 1151: width -= prec + c + exp;
 12825  001C86  0100               	movlb	0	; () banked
 12826  001C88  C09E  F078         	movff	i1sprintf@c,??i1_sprintf
 12827  001C8C  0100               	movlb	0	; () banked
 12828  001C8E  6B79               	clrf	(??i1_sprintf+1)& (0+255),b
 12829  001C90  BF78               	btfsc	??i1_sprintf& (0+255),7,b
 12830  001C92  0779               	decf	(??i1_sprintf+1)& (0+255),f,b
 12831  001C94  0100               	movlb	0	; () banked
 12832  001C96  0100               	movlb	0	; () banked
 12833  001C98  519C               	movf	i1sprintf@prec& (0+255),w,b
 12834  001C9A  0100               	movlb	0	; () banked
 12835  001C9C  2778               	addwf	??i1_sprintf& (0+255),f,b
 12836  001C9E  0100               	movlb	0	; () banked
 12837  001CA0  0100               	movlb	0	; () banked
 12838  001CA2  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12839  001CA4  0100               	movlb	0	; () banked
 12840  001CA6  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 12841  001CA8  0100               	movlb	0	; () banked
 12842  001CAA  0100               	movlb	0	; () banked
 12843  001CAC  5195               	movf	i1sprintf@exp& (0+255),w,b
 12844  001CAE  0100               	movlb	0	; () banked
 12845  001CB0  2778               	addwf	??i1_sprintf& (0+255),f,b
 12846  001CB2  0100               	movlb	0	; () banked
 12847  001CB4  0100               	movlb	0	; () banked
 12848  001CB6  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12849  001CB8  0100               	movlb	0	; () banked
 12850  001CBA  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 12851  001CBC  0100               	movlb	0	; () banked
 12852  001CBE  5178               	movf	??i1_sprintf& (0+255),w,b
 12853  001CC0  0100               	movlb	0	; () banked
 12854  001CC2  0100               	movlb	0	; () banked
 12855  001CC4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 12856  001CC6  0100               	movlb	0	; () banked
 12857  001CC8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12858  001CCA  0100               	movlb	0	; () banked
 12859  001CCC  0100               	movlb	0	; () banked
 12860  001CCE  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 12861                           
 12862                           ;doprnt.c: 1152: if(
 12863                           ;doprnt.c: 1156: prec)
 12864  001CD0  0100               	movlb	0	; () banked
 12865  001CD2  0100               	movlb	0	; () banked
 12866  001CD4  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12867  001CD6  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 12868  001CD8  B4D8               	btfsc	status,2,c
 12869  001CDA  D005               	goto	i1l11307
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;doprnt.c: 1157: width--;
 12873  001CDC  0100               	movlb	0	; () banked
 12874  001CDE  0100               	movlb	0	; () banked
 12875  001CE0  0797               	decf	i1sprintf@width& (0+255),f,b
 12876  001CE2  A0D8               	btfss	status,0,c
 12877  001CE4  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12878  001CE6                     i1l11307:
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;doprnt.c: 1158: if(flag & 0x03)
 12882  001CE6  0E03               	movlw	3
 12883  001CE8  0100               	movlb	0	; () banked
 12884  001CEA  0100               	movlb	0	; () banked
 12885  001CEC  1593               	andwf	i1sprintf@flag& (0+255),w,b
 12886  001CEE  0100               	movlb	0	; () banked
 12887  001CF0  6F78               	movwf	??i1_sprintf& (0+255),b
 12888  001CF2  0E00               	movlw	0
 12889  001CF4  0100               	movlb	0	; () banked
 12890  001CF6  0100               	movlb	0	; () banked
 12891  001CF8  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 12892  001CFA  0100               	movlb	0	; () banked
 12893  001CFC  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12894  001CFE  0100               	movlb	0	; () banked
 12895  001D00  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12896  001D02  1178               	iorwf	??i1_sprintf& (0+255),w,b
 12897  001D04  B4D8               	btfsc	status,2,c
 12898  001D06  D005               	goto	i1l11311
 12899                           
 12900                           ; BSR set to: 0
 12901                           ;doprnt.c: 1159: width--;
 12902  001D08  0100               	movlb	0	; () banked
 12903  001D0A  0100               	movlb	0	; () banked
 12904  001D0C  0797               	decf	i1sprintf@width& (0+255),f,b
 12905  001D0E  A0D8               	btfss	status,0,c
 12906  001D10  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12907  001D12                     i1l11311:
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;doprnt.c: 1162: if(flag & 0x04) {
 12911  001D12  0100               	movlb	0	; () banked
 12912  001D14  0100               	movlb	0	; () banked
 12913  001D16  B593               	btfsc	i1sprintf@flag& (0+255),2,b
 12914  001D18  D010               	goto	i1l11321
 12915  001D1A  D029               	goto	i1l11329
 12916  001D1C                     i1l11315:
 12917                           
 12918                           ; BSR set to: 0
 12919                           ;doprnt.c: 1176: ((*sp++ = ('0')));
 12920  001D1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 12921  001D20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 12922  001D24  0E30               	movlw	48
 12923  001D26  6EDF               	movwf	indf2,c
 12924                           
 12925                           ; BSR set to: 0
 12926  001D28  0100               	movlb	0	; () banked
 12927  001D2A  0100               	movlb	0	; () banked
 12928  001D2C  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12929  001D2E  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12930                           
 12931                           ; BSR set to: 0
 12932                           ;doprnt.c: 1177: width--;
 12933  001D30  0100               	movlb	0	; () banked
 12934  001D32  0100               	movlb	0	; () banked
 12935  001D34  0797               	decf	i1sprintf@width& (0+255),f,b
 12936  001D36  A0D8               	btfss	status,0,c
 12937  001D38  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12938  001D3A                     i1l11321:
 12939                           
 12940                           ; BSR set to: 0
 12941  001D3A  0100               	movlb	0	; () banked
 12942  001D3C  0100               	movlb	0	; () banked
 12943  001D3E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 12944  001D40  0A80               	xorlw	128
 12945  001D42  0F80               	addlw	-128
 12946  001D44  0E01               	movlw	1
 12947  001D46  B4D8               	btfsc	status,2,c
 12948  001D48  5D97               	subwf	i1sprintf@width& (0+255),w,b
 12949  001D4A  A0D8               	btfss	status,0,c
 12950  001D4C  D070               	goto	i1l11345
 12951  001D4E  D7E6               	goto	i1l11315
 12952  001D50                     i1l11323:
 12953                           
 12954                           ; BSR set to: 0
 12955                           ;doprnt.c: 1188: ((*sp++ = (' ')));
 12956  001D50  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 12957  001D54  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 12958  001D58  0E20               	movlw	32
 12959  001D5A  6EDF               	movwf	indf2,c
 12960                           
 12961                           ; BSR set to: 0
 12962  001D5C  0100               	movlb	0	; () banked
 12963  001D5E  0100               	movlb	0	; () banked
 12964  001D60  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12965  001D62  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;doprnt.c: 1189: width--;
 12969  001D64  0100               	movlb	0	; () banked
 12970  001D66  0100               	movlb	0	; () banked
 12971  001D68  0797               	decf	i1sprintf@width& (0+255),f,b
 12972  001D6A  A0D8               	btfss	status,0,c
 12973  001D6C  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12974  001D6E                     i1l11329:
 12975                           
 12976                           ; BSR set to: 0
 12977  001D6E  0100               	movlb	0	; () banked
 12978  001D70  0100               	movlb	0	; () banked
 12979  001D72  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 12980  001D74  0A80               	xorlw	128
 12981  001D76  0F80               	addlw	-128
 12982  001D78  0E01               	movlw	1
 12983  001D7A  B4D8               	btfsc	status,2,c
 12984  001D7C  5D97               	subwf	i1sprintf@width& (0+255),w,b
 12985  001D7E  B0D8               	btfsc	status,0,c
 12986  001D80  D7E7               	goto	i1l11323
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;doprnt.c: 1190: }
 12990                           ;doprnt.c: 1195: if(flag & 0x03)
 12991                           
 12992                           ; BSR set to: 0
 12993  001D82  0E03               	movlw	3
 12994  001D84  0100               	movlb	0	; () banked
 12995  001D86  0100               	movlb	0	; () banked
 12996  001D88  1593               	andwf	i1sprintf@flag& (0+255),w,b
 12997  001D8A  0100               	movlb	0	; () banked
 12998  001D8C  6F78               	movwf	??i1_sprintf& (0+255),b
 12999  001D8E  0E00               	movlw	0
 13000  001D90  0100               	movlb	0	; () banked
 13001  001D92  0100               	movlb	0	; () banked
 13002  001D94  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13003  001D96  0100               	movlb	0	; () banked
 13004  001D98  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13005  001D9A  0100               	movlb	0	; () banked
 13006  001D9C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13007  001D9E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13008  001DA0  B4D8               	btfsc	status,2,c
 13009  001DA2  D045               	goto	i1l11345
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;doprnt.c: 1197: ((*sp++ = ('-')));
 13013  001DA4  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13014  001DA8  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13015  001DAC  0E2D               	movlw	45
 13016  001DAE  D03A               	goto	L16
 13017  001DB0                     i1l11337:
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;doprnt.c: 1207: {
 13021                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
 13022  001DB0  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13023  001DB4  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13024  001DB8  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13025  001DBC  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13026  001DC0  0100               	movlb	0	; () banked
 13027  001DC2  0100               	movlb	0	; () banked
 13028  001DC4  519E               	movf	i1sprintf@c& (0+255),w,b
 13029  001DC6  0D04               	mullw	4
 13030  001DC8  0E00               	movlw	low _dpowers
 13031  001DCA  24F3               	addwf	prodl,w,c
 13032  001DCC  6EF6               	movwf	tblptrl,c
 13033  001DCE  0E08               	movlw	high _dpowers
 13034  001DD0  20F4               	addwfc	prodh,w,c
 13035  001DD2  6EF7               	movwf	tblptrh,c
 13036  001DD4  0009               	tblrd		*+
 13037  001DD6  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13038  001DDA  0009               	tblrd		*+
 13039  001DDC  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13040  001DE0  0009               	tblrd		*+
 13041  001DE2  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13042  001DE6  000A               	tblrd		*-
 13043  001DE8  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13044  001DEC  EC89  F02C         	call	i1___lldiv	;wreg free
 13045  001DF0  C011  F085         	movff	?i1___lldiv,i1sprintf@vd
 13046  001DF4  C012  F086         	movff	?i1___lldiv+1,i1sprintf@vd+1
 13047                           
 13048                           ;doprnt.c: 1209: vd %= 10;
 13049  001DF8  C085  F011         	movff	i1sprintf@vd,?i1___lwmod
 13050  001DFC  C086  F012         	movff	i1sprintf@vd+1,?i1___lwmod+1
 13051  001E00  0E00               	movlw	0
 13052  001E02  6E14               	movwf	?i1___lwmod+3,c
 13053  001E04  0E0A               	movlw	10
 13054  001E06  6E13               	movwf	?i1___lwmod+2,c
 13055  001E08  EC0B  F02F         	call	i1___lwmod	;wreg free
 13056  001E0C  C011  F085         	movff	?i1___lwmod,i1sprintf@vd
 13057  001E10  C012  F086         	movff	?i1___lwmod+1,i1sprintf@vd+1
 13058                           
 13059                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
 13060  001E14  0100               	movlb	0	; () banked
 13061  001E16  0100               	movlb	0	; () banked
 13062  001E18  5185               	movf	i1sprintf@vd& (0+255),w,b
 13063  001E1A  0F30               	addlw	48
 13064  001E1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13065  001E20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13066  001E24                     L16:
 13067  001E24  6EDF               	movwf	indf2,c
 13068                           
 13069                           ; BSR set to: 0
 13070  001E26  0100               	movlb	0	; () banked
 13071  001E28  0100               	movlb	0	; () banked
 13072  001E2A  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13073  001E2C  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13074  001E2E                     i1l11345:
 13075                           
 13076                           ; BSR set to: 0
 13077  001E2E  0100               	movlb	0	; () banked
 13078  001E30  0100               	movlb	0	; () banked
 13079  001E32  079E               	decf	i1sprintf@c& (0+255),f,b
 13080  001E34  0100               	movlb	0	; () banked
 13081  001E36  299E               	incf	i1sprintf@c& (0+255),w,b
 13082  001E38  B4D8               	btfsc	status,2,c
 13083  001E3A  D010               	goto	i1l11353
 13084  001E3C  D7B9               	goto	i1l11337
 13085  001E3E                     i1l11347:
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;doprnt.c: 1215: ((*sp++ = ('0')));
 13089  001E3E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13090  001E42  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13091  001E46  0E30               	movlw	48
 13092  001E48  6EDF               	movwf	indf2,c
 13093                           
 13094                           ; BSR set to: 0
 13095  001E4A  0100               	movlb	0	; () banked
 13096  001E4C  0100               	movlb	0	; () banked
 13097  001E4E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13098  001E50  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;doprnt.c: 1216: exp--;
 13102  001E52  0100               	movlb	0	; () banked
 13103  001E54  0100               	movlb	0	; () banked
 13104  001E56  0795               	decf	i1sprintf@exp& (0+255),f,b
 13105  001E58  A0D8               	btfss	status,0,c
 13106  001E5A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 13107  001E5C                     i1l11353:
 13108                           
 13109                           ; BSR set to: 0
 13110  001E5C  0100               	movlb	0	; () banked
 13111  001E5E  0100               	movlb	0	; () banked
 13112  001E60  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 13113  001E62  0A80               	xorlw	128
 13114  001E64  0F80               	addlw	-128
 13115  001E66  0E01               	movlw	1
 13116  001E68  B4D8               	btfsc	status,2,c
 13117  001E6A  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 13118  001E6C  B0D8               	btfsc	status,0,c
 13119  001E6E  D7E7               	goto	i1l11347
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;doprnt.c: 1217: }
 13123                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13124                           
 13125                           ; BSR set to: 0
 13126  001E70  0100               	movlb	0	; () banked
 13127  001E72  0100               	movlb	0	; () banked
 13128  001E74  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13129  001E76  0A80               	xorlw	128
 13130  001E78  0F80               	addlw	-128
 13131  001E7A  0E09               	movlw	9
 13132  001E7C  B4D8               	btfsc	status,2,c
 13133  001E7E  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13134  001E80  A0D8               	btfss	status,0,c
 13135  001E82  D009               	goto	i1l325
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13139  001E84  0100               	movlb	0	; () banked
 13140  001E86  6F78               	movwf	??i1_sprintf& (0+255),b
 13141  001E88  0E08               	movlw	8
 13142  001E8A  0100               	movlb	0	; () banked
 13143  001E8C  0100               	movlb	0	; () banked
 13144  001E8E  6F9E               	movwf	i1sprintf@c& (0+255),b
 13145  001E90  0100               	movlb	0	; () banked
 13146  001E92  5178               	movf	??i1_sprintf& (0+255),w,b
 13147  001E94  D002               	goto	i1l11359
 13148  001E96                     i1l325:
 13149                           
 13150                           ; BSR set to: 0
 13151                           ;doprnt.c: 1220: else
 13152                           ;doprnt.c: 1221: c = prec;
 13153  001E96  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 13154  001E9A                     i1l11359:
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;doprnt.c: 1222: prec -= c;
 13158  001E9A  0100               	movlb	0	; () banked
 13159  001E9C  0100               	movlb	0	; () banked
 13160  001E9E  519E               	movf	i1sprintf@c& (0+255),w,b
 13161  001EA0  0100               	movlb	0	; () banked
 13162  001EA2  0100               	movlb	0	; () banked
 13163  001EA4  5F9C               	subwf	i1sprintf@prec& (0+255),f,b
 13164  001EA6  0E00               	movlw	0
 13165  001EA8  0100               	movlb	0	; () banked
 13166  001EAA  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13167  001EAC  0EFF               	movlw	255
 13168  001EAE  0100               	movlb	0	; () banked
 13169  001EB0  0100               	movlb	0	; () banked
 13170  001EB2  5B9D               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;doprnt.c: 1226: if(c)
 13174  001EB4  0100               	movlb	0	; () banked
 13175  001EB6  0100               	movlb	0	; () banked
 13176  001EB8  519E               	movf	i1sprintf@c& (0+255),w,b
 13177  001EBA  B4D8               	btfsc	status,2,c
 13178  001EBC  D00A               	goto	i1l11367
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;doprnt.c: 1228: ((*sp++ = ('.')));
 13182  001EBE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13183  001EC2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13184  001EC6  0E2E               	movlw	46
 13185  001EC8  6EDF               	movwf	indf2,c
 13186                           
 13187                           ; BSR set to: 0
 13188  001ECA  0100               	movlb	0	; () banked
 13189  001ECC  0100               	movlb	0	; () banked
 13190  001ECE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13191  001ED0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13192  001ED2                     i1l11367:
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 13196  001ED2  C09E  F047         	movff	i1sprintf@c,?i1_scale
 13197  001ED6  EC14  F015         	call	i1_scale	;wreg free
 13198  001EDA  C049  F080         	movff	?i1_scale+2,i1_sprintf$1829+2
 13199  001EDE  C048  F07F         	movff	?i1_scale+1,i1_sprintf$1829+1
 13200  001EE2  C047  F07E         	movff	?i1_scale,i1_sprintf$1829
 13201                           
 13202                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 13203  001EE6  C099  F039         	movff	i1sprintf@fval,?i1___ftmul+3
 13204  001EEA  C09A  F03A         	movff	i1sprintf@fval+1,?i1___ftmul+4
 13205  001EEE  C09B  F03B         	movff	i1sprintf@fval+2,?i1___ftmul+5
 13206  001EF2  C07E  F036         	movff	i1_sprintf$1829,?i1___ftmul
 13207  001EF6  C07F  F037         	movff	i1_sprintf$1829+1,?i1___ftmul+1
 13208  001EFA  C080  F038         	movff	i1_sprintf$1829+2,?i1___ftmul+2
 13209  001EFE  EC84  F024         	call	i1___ftmul	;wreg free
 13210  001F02  C038  F029         	movff	?i1___ftmul+2,?i1___fttol+2
 13211  001F06  C037  F028         	movff	?i1___ftmul+1,?i1___fttol+1
 13212  001F0A  C036  F027         	movff	?i1___ftmul,?i1___fttol
 13213  001F0E  EC7A  F028         	call	i1___fttol	;wreg free
 13214  001F12  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 13215  001F16  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 13216  001F1A  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 13217  001F1E  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 13218                           
 13219                           ;doprnt.c: 1235: while(c--) {
 13220  001F22  D067               	goto	i1l11381
 13221  001F24                     i1l11371:
 13222                           
 13223                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
 13224  001F24  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13225  001F28  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13226  001F2C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13227  001F30  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13228  001F34  0100               	movlb	0	; () banked
 13229  001F36  0100               	movlb	0	; () banked
 13230  001F38  519E               	movf	i1sprintf@c& (0+255),w,b
 13231  001F3A  0D04               	mullw	4
 13232  001F3C  0E00               	movlw	low _dpowers
 13233  001F3E  24F3               	addwf	prodl,w,c
 13234  001F40  6EF6               	movwf	tblptrl,c
 13235  001F42  0E08               	movlw	high _dpowers
 13236  001F44  20F4               	addwfc	prodh,w,c
 13237  001F46  6EF7               	movwf	tblptrh,c
 13238  001F48  0009               	tblrd		*+
 13239  001F4A  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13240  001F4E  0009               	tblrd		*+
 13241  001F50  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13242  001F54  0009               	tblrd		*+
 13243  001F56  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13244  001F5A  000A               	tblrd		*-
 13245  001F5C  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13246  001F60  EC89  F02C         	call	i1___lldiv	;wreg free
 13247  001F64  C011  F087         	movff	?i1___lldiv,i1sprintf@vd_565
 13248  001F68  C012  F088         	movff	?i1___lldiv+1,i1sprintf@vd_565+1
 13249                           
 13250                           ;doprnt.c: 1237: vd %= 10;
 13251  001F6C  C087  F011         	movff	i1sprintf@vd_565,?i1___lwmod
 13252  001F70  C088  F012         	movff	i1sprintf@vd_565+1,?i1___lwmod+1
 13253  001F74  0E00               	movlw	0
 13254  001F76  6E14               	movwf	?i1___lwmod+3,c
 13255  001F78  0E0A               	movlw	10
 13256  001F7A  6E13               	movwf	?i1___lwmod+2,c
 13257  001F7C  EC0B  F02F         	call	i1___lwmod	;wreg free
 13258  001F80  C011  F087         	movff	?i1___lwmod,i1sprintf@vd_565
 13259  001F84  C012  F088         	movff	?i1___lwmod+1,i1sprintf@vd_565+1
 13260                           
 13261                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
 13262  001F88  0100               	movlb	0	; () banked
 13263  001F8A  0100               	movlb	0	; () banked
 13264  001F8C  5187               	movf	i1sprintf@vd_565& (0+255),w,b
 13265  001F8E  0F30               	addlw	48
 13266  001F90  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13267  001F94  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13268  001F98  6EDF               	movwf	indf2,c
 13269                           
 13270                           ; BSR set to: 0
 13271  001F9A  0100               	movlb	0	; () banked
 13272  001F9C  0100               	movlb	0	; () banked
 13273  001F9E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13274  001FA0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;doprnt.c: 1239: _val._val %= dpowers[c];
 13278  001FA2  C08E  F01F         	movff	i1sprintf@_val,?i1___llmod
 13279  001FA6  C08F  F020         	movff	i1sprintf@_val+1,?i1___llmod+1
 13280  001FAA  C090  F021         	movff	i1sprintf@_val+2,?i1___llmod+2
 13281  001FAE  C091  F022         	movff	i1sprintf@_val+3,?i1___llmod+3
 13282  001FB2  0100               	movlb	0	; () banked
 13283  001FB4  0100               	movlb	0	; () banked
 13284  001FB6  519E               	movf	i1sprintf@c& (0+255),w,b
 13285  001FB8  0D04               	mullw	4
 13286  001FBA  0E00               	movlw	low _dpowers
 13287  001FBC  24F3               	addwf	prodl,w,c
 13288  001FBE  6EF6               	movwf	tblptrl,c
 13289  001FC0  0E08               	movlw	high _dpowers
 13290  001FC2  20F4               	addwfc	prodh,w,c
 13291  001FC4  6EF7               	movwf	tblptrh,c
 13292  001FC6  0009               	tblrd		*+
 13293  001FC8  CFF5 F023          	movff	tablat,?i1___llmod+4
 13294  001FCC  0009               	tblrd		*+
 13295  001FCE  CFF5 F024          	movff	tablat,?i1___llmod+5
 13296  001FD2  0009               	tblrd		*+
 13297  001FD4  CFF5 F025          	movff	tablat,?i1___llmod+6
 13298  001FD8  000A               	tblrd		*-
 13299  001FDA  CFF5 F026          	movff	tablat,?i1___llmod+7
 13300  001FDE  ECC2  F02D         	call	i1___llmod	;wreg free
 13301  001FE2  C022  F091         	movff	?i1___llmod+3,i1sprintf@_val+3
 13302  001FE6  C021  F090         	movff	?i1___llmod+2,i1sprintf@_val+2
 13303  001FEA  C020  F08F         	movff	?i1___llmod+1,i1sprintf@_val+1
 13304  001FEE  C01F  F08E         	movff	?i1___llmod,i1sprintf@_val
 13305  001FF2                     i1l11381:
 13306  001FF2  0100               	movlb	0	; () banked
 13307  001FF4  0100               	movlb	0	; () banked
 13308  001FF6  079E               	decf	i1sprintf@c& (0+255),f,b
 13309  001FF8  0100               	movlb	0	; () banked
 13310  001FFA  299E               	incf	i1sprintf@c& (0+255),w,b
 13311  001FFC  B4D8               	btfsc	status,2,c
 13312  001FFE  D010               	goto	i1l11389
 13313  002000  D791               	goto	i1l11371
 13314  002002                     i1l11383:
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;doprnt.c: 1243: ((*sp++ = ('0')));
 13318  002002  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13319  002006  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13320  00200A  0E30               	movlw	48
 13321  00200C  6EDF               	movwf	indf2,c
 13322                           
 13323                           ; BSR set to: 0
 13324  00200E  0100               	movlb	0	; () banked
 13325  002010  0100               	movlb	0	; () banked
 13326  002012  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13327  002014  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;doprnt.c: 1244: prec--;
 13331  002016  0100               	movlb	0	; () banked
 13332  002018  0100               	movlb	0	; () banked
 13333  00201A  079C               	decf	i1sprintf@prec& (0+255),f,b
 13334  00201C  A0D8               	btfss	status,0,c
 13335  00201E  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13336  002020                     i1l11389:
 13337                           
 13338                           ; BSR set to: 0
 13339  002020  0100               	movlb	0	; () banked
 13340  002022  0100               	movlb	0	; () banked
 13341  002024  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13342  002026  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 13343  002028  B4D8               	btfsc	status,2,c
 13344  00202A  D1DB               	goto	i1l11487
 13345  00202C  D7EA               	goto	i1l11383
 13346  00202E                     i1l11391:
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;doprnt.c: 1253: }
 13350                           ;doprnt.c: 1260: {
 13351                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13352  00202E  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 13353  002032  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 13354  002036  0100               	movlb	0	; () banked
 13355  002038  CFDE F08E          	movff	postinc2,i1sprintf@_val
 13356  00203C  0100               	movlb	0	; () banked
 13357  00203E  CFDD F08F          	movff	postdec2,i1sprintf@_val+1
 13358  002042  0100               	movlb	0	; () banked
 13359  002044  0E00               	movlw	0
 13360  002046  0100               	movlb	0	; () banked
 13361  002048  BF8F               	btfsc	(i1sprintf@_val+1)& (0+255),7,b
 13362  00204A  0EFF               	movlw	-1
 13363  00204C  0100               	movlb	0	; () banked
 13364  00204E  6F90               	movwf	(i1sprintf@_val+2)& (0+255),b
 13365  002050  0100               	movlb	0	; () banked
 13366  002052  6F91               	movwf	(i1sprintf@_val+3)& (0+255),b
 13367                           
 13368                           ; BSR set to: 0
 13369  002054  0E02               	movlw	2
 13370  002056  0100               	movlb	0	; () banked
 13371  002058  0100               	movlb	0	; () banked
 13372  00205A  2789               	addwf	i1sprintf@ap& (0+255),f,b
 13373  00205C  0E00               	movlw	0
 13374  00205E  0100               	movlb	0	; () banked
 13375  002060  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 13376                           
 13377                           ; BSR set to: 0
 13378                           ;doprnt.c: 1268: if((long)_val._val < 0) {
 13379  002062  0100               	movlb	0	; () banked
 13380  002064  0100               	movlb	0	; () banked
 13381  002066  AF91               	btfss	(i1sprintf@_val+3)& (0+255),7,b
 13382  002068  D014               	goto	i1l11401
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;doprnt.c: 1269: flag |= 0x03;
 13386  00206A  0E03               	movlw	3
 13387  00206C  0100               	movlb	0	; () banked
 13388  00206E  0100               	movlb	0	; () banked
 13389  002070  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;doprnt.c: 1270: _val._val = -_val._val;
 13393  002072  0100               	movlb	0	; () banked
 13394  002074  0100               	movlb	0	; () banked
 13395  002076  1F91               	comf	(i1sprintf@_val+3)& (0+255),f,b
 13396  002078  0100               	movlb	0	; () banked
 13397  00207A  1F90               	comf	(i1sprintf@_val+2)& (0+255),f,b
 13398  00207C  0100               	movlb	0	; () banked
 13399  00207E  1F8F               	comf	(i1sprintf@_val+1)& (0+255),f,b
 13400  002080  0100               	movlb	0	; () banked
 13401  002082  6D8E               	negf	i1sprintf@_val& (0+255),b
 13402  002084  0E00               	movlw	0
 13403  002086  0100               	movlb	0	; () banked
 13404  002088  238F               	addwfc	(i1sprintf@_val+1)& (0+255),f,b
 13405  00208A  0100               	movlb	0	; () banked
 13406  00208C  2390               	addwfc	(i1sprintf@_val+2)& (0+255),f,b
 13407  00208E  0100               	movlb	0	; () banked
 13408  002090  2391               	addwfc	(i1sprintf@_val+3)& (0+255),f,b
 13409  002092                     i1l11401:
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;doprnt.c: 1271: }
 13413                           ;doprnt.c: 1273: }
 13414                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
 13415  002092  0100               	movlb	0	; () banked
 13416  002094  0100               	movlb	0	; () banked
 13417  002096  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13418  002098  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 13419  00209A  A4D8               	btfss	status,2,c
 13420  00209C  D00C               	goto	i1l11407
 13421                           
 13422                           ; BSR set to: 0
 13423  00209E  0100               	movlb	0	; () banked
 13424  0020A0  0100               	movlb	0	; () banked
 13425  0020A2  5191               	movf	(i1sprintf@_val+3)& (0+255),w,b
 13426  0020A4  118E               	iorwf	i1sprintf@_val& (0+255),w,b
 13427  0020A6  118F               	iorwf	(i1sprintf@_val+1)& (0+255),w,b
 13428  0020A8  1190               	iorwf	(i1sprintf@_val+2)& (0+255),w,b
 13429  0020AA  A4D8               	btfss	status,2,c
 13430  0020AC  D004               	goto	i1l11407
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;doprnt.c: 1298: prec++;
 13434  0020AE  0100               	movlb	0	; () banked
 13435  0020B0  0100               	movlb	0	; () banked
 13436  0020B2  4B9C               	infsnz	i1sprintf@prec& (0+255),f,b
 13437  0020B4  2B9D               	incf	(i1sprintf@prec+1)& (0+255),f,b
 13438  0020B6                     i1l11407:
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13442  0020B6  0100               	movlb	0	; () banked
 13443  0020B8  6F78               	movwf	??i1_sprintf& (0+255),b
 13444  0020BA  0E01               	movlw	1
 13445  0020BC  0100               	movlb	0	; () banked
 13446  0020BE  0100               	movlb	0	; () banked
 13447  0020C0  6F9E               	movwf	i1sprintf@c& (0+255),b
 13448  0020C2  0100               	movlb	0	; () banked
 13449  0020C4  5178               	movf	??i1_sprintf& (0+255),w,b
 13450  0020C6                     
 13451                           ; BSR set to: 0
 13452  0020C6  0100               	movlb	0	; () banked
 13453  0020C8  0100               	movlb	0	; () banked
 13454  0020CA  519E               	movf	i1sprintf@c& (0+255),w,b
 13455  0020CC  0A0A               	xorlw	10
 13456  0020CE  B4D8               	btfsc	status,2,c
 13457  0020D0  D021               	goto	i1l11421
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 13461                           
 13462                           ; BSR set to: 0
 13463                           
 13464                           ; BSR set to: 0
 13465  0020D2  0100               	movlb	0	; () banked
 13466  0020D4  0100               	movlb	0	; () banked
 13467  0020D6  519E               	movf	i1sprintf@c& (0+255),w,b
 13468  0020D8  0D04               	mullw	4
 13469  0020DA  0E00               	movlw	low _dpowers
 13470  0020DC  24F3               	addwf	prodl,w,c
 13471  0020DE  6EF6               	movwf	tblptrl,c
 13472  0020E0  0E08               	movlw	high _dpowers
 13473  0020E2  20F4               	addwfc	prodh,w,c
 13474  0020E4  6EF7               	movwf	tblptrh,c
 13475  0020E6  0009               	tblrd		*+
 13476  0020E8  50F5               	movf	tablat,w,c
 13477  0020EA  0100               	movlb	0	; () banked
 13478  0020EC  0100               	movlb	0	; () banked
 13479  0020EE  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 13480  0020F0  0009               	tblrd		*+
 13481  0020F2  50F5               	movf	tablat,w,c
 13482  0020F4  0100               	movlb	0	; () banked
 13483  0020F6  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 13484  0020F8  0009               	tblrd		*+
 13485  0020FA  50F5               	movf	tablat,w,c
 13486  0020FC  0100               	movlb	0	; () banked
 13487  0020FE  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 13488  002100  0009               	tblrd		*+
 13489  002102  50F5               	movf	tablat,w,c
 13490  002104  0100               	movlb	0	; () banked
 13491  002106  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 13492  002108  A0D8               	btfss	status,0,c
 13493  00210A  D004               	goto	i1l11421
 13494                           
 13495                           ; BSR set to: 0
 13496                           
 13497                           ; BSR set to: 0
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;doprnt.c: 1314: break;
 13501  00210C  0100               	movlb	0	; () banked
 13502  00210E  0100               	movlb	0	; () banked
 13503  002110  2B9E               	incf	i1sprintf@c& (0+255),f,b
 13504  002112  D7D9               	goto	L17
 13505  002114                     i1l11421:
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;doprnt.c: 1346: if(c < prec)
 13509  002114  0E80               	movlw	128
 13510  002116  0100               	movlb	0	; () banked
 13511  002118  0100               	movlb	0	; () banked
 13512  00211A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13513  00211C  0E7F               	movlw	127
 13514  00211E  6F78               	movwf	??i1_sprintf& (0+255),b
 13515  002120  0100               	movlb	0	; () banked
 13516  002122  0100               	movlb	0	; () banked
 13517  002124  519C               	movf	i1sprintf@prec& (0+255),w,b
 13518  002126  0100               	movlb	0	; () banked
 13519  002128  0100               	movlb	0	; () banked
 13520  00212A  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 13521  00212C  0100               	movlb	0	; () banked
 13522  00212E  0100               	movlb	0	; () banked
 13523  002130  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13524  002132  0A80               	xorlw	128
 13525  002134  0100               	movlb	0	; () banked
 13526  002136  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13527  002138  B0D8               	btfsc	status,0,c
 13528  00213A  D003               	goto	i1l11425
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;doprnt.c: 1347: c = prec;
 13532  00213C  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 13533  002140  D020               	goto	i1l11429
 13534  002142                     i1l11425:
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;doprnt.c: 1348: else if(prec < c)
 13538  002142  0100               	movlb	0	; () banked
 13539  002144  0100               	movlb	0	; () banked
 13540  002146  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13541  002148  0A80               	xorlw	128
 13542  00214A  0100               	movlb	0	; () banked
 13543  00214C  6F78               	movwf	??i1_sprintf& (0+255),b
 13544  00214E  0100               	movlb	0	; () banked
 13545  002150  0100               	movlb	0	; () banked
 13546  002152  519E               	movf	i1sprintf@c& (0+255),w,b
 13547  002154  0100               	movlb	0	; () banked
 13548  002156  0100               	movlb	0	; () banked
 13549  002158  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13550  00215A  0E80               	movlw	128
 13551  00215C  0100               	movlb	0	; () banked
 13552  00215E  0100               	movlb	0	; () banked
 13553  002160  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13554  002162  0E7F               	movlw	127
 13555  002164  0100               	movlb	0	; () banked
 13556  002166  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13557  002168  B0D8               	btfsc	status,0,c
 13558  00216A  D00B               	goto	i1l11429
 13559                           
 13560                           ; BSR set to: 0
 13561                           ;doprnt.c: 1349: prec = c;
 13562  00216C  0100               	movlb	0	; () banked
 13563  00216E  0100               	movlb	0	; () banked
 13564  002170  519E               	movf	i1sprintf@c& (0+255),w,b
 13565  002172  0100               	movlb	0	; () banked
 13566  002174  0100               	movlb	0	; () banked
 13567  002176  6F9C               	movwf	i1sprintf@prec& (0+255),b
 13568  002178  0100               	movlb	0	; () banked
 13569  00217A  6B9D               	clrf	(i1sprintf@prec+1)& (0+255),b
 13570  00217C  0100               	movlb	0	; () banked
 13571  00217E  BF9C               	btfsc	i1sprintf@prec& (0+255),7,b
 13572  002180  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13573  002182                     i1l11429:
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;doprnt.c: 1352: if(width && flag & 0x03)
 13577  002182  0100               	movlb	0	; () banked
 13578  002184  0100               	movlb	0	; () banked
 13579  002186  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13580  002188  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13581  00218A  B4D8               	btfsc	status,2,c
 13582  00218C  D016               	goto	i1l11435
 13583                           
 13584                           ; BSR set to: 0
 13585  00218E  0E03               	movlw	3
 13586  002190  0100               	movlb	0	; () banked
 13587  002192  0100               	movlb	0	; () banked
 13588  002194  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13589  002196  0100               	movlb	0	; () banked
 13590  002198  6F78               	movwf	??i1_sprintf& (0+255),b
 13591  00219A  0E00               	movlw	0
 13592  00219C  0100               	movlb	0	; () banked
 13593  00219E  0100               	movlb	0	; () banked
 13594  0021A0  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13595  0021A2  0100               	movlb	0	; () banked
 13596  0021A4  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13597  0021A6  0100               	movlb	0	; () banked
 13598  0021A8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13599  0021AA  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13600  0021AC  B4D8               	btfsc	status,2,c
 13601  0021AE  D005               	goto	i1l11435
 13602                           
 13603                           ; BSR set to: 0
 13604                           ;doprnt.c: 1353: width--;
 13605  0021B0  0100               	movlb	0	; () banked
 13606  0021B2  0100               	movlb	0	; () banked
 13607  0021B4  0797               	decf	i1sprintf@width& (0+255),f,b
 13608  0021B6  A0D8               	btfss	status,0,c
 13609  0021B8  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13610  0021BA                     i1l11435:
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;doprnt.c: 1355: if(flag & 0x4000) {
 13614  0021BA  0100               	movlb	0	; () banked
 13615  0021BC  0100               	movlb	0	; () banked
 13616  0021BE  AD94               	btfss	(i1sprintf@flag+1)& (0+255),6,b
 13617  0021C0  D028               	goto	i1l11443
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;doprnt.c: 1356: if(width > prec)
 13621  0021C2  0100               	movlb	0	; () banked
 13622  0021C4  0100               	movlb	0	; () banked
 13623  0021C6  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13624  0021C8  0A80               	xorlw	128
 13625  0021CA  0100               	movlb	0	; () banked
 13626  0021CC  6F78               	movwf	??i1_sprintf& (0+255),b
 13627  0021CE  0100               	movlb	0	; () banked
 13628  0021D0  0100               	movlb	0	; () banked
 13629  0021D2  5197               	movf	i1sprintf@width& (0+255),w,b
 13630  0021D4  0100               	movlb	0	; () banked
 13631  0021D6  0100               	movlb	0	; () banked
 13632  0021D8  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13633  0021DA  0100               	movlb	0	; () banked
 13634  0021DC  0100               	movlb	0	; () banked
 13635  0021DE  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13636  0021E0  0A80               	xorlw	128
 13637  0021E2  0100               	movlb	0	; () banked
 13638  0021E4  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13639  0021E6  B0D8               	btfsc	status,0,c
 13640  0021E8  D00D               	goto	i1l11441
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;doprnt.c: 1357: width -= prec;
 13644  0021EA  0100               	movlb	0	; () banked
 13645  0021EC  0100               	movlb	0	; () banked
 13646  0021EE  519C               	movf	i1sprintf@prec& (0+255),w,b
 13647  0021F0  0100               	movlb	0	; () banked
 13648  0021F2  0100               	movlb	0	; () banked
 13649  0021F4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 13650  0021F6  0100               	movlb	0	; () banked
 13651  0021F8  0100               	movlb	0	; () banked
 13652  0021FA  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13653  0021FC  0100               	movlb	0	; () banked
 13654  0021FE  0100               	movlb	0	; () banked
 13655  002200  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 13656  002202  D007               	goto	i1l11443
 13657  002204                     i1l11441:
 13658                           
 13659                           ; BSR set to: 0
 13660                           ;doprnt.c: 1358: else
 13661                           ;doprnt.c: 1359: width = 0;
 13662  002204  0E00               	movlw	0
 13663  002206  0100               	movlb	0	; () banked
 13664  002208  0100               	movlb	0	; () banked
 13665  00220A  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13666  00220C  0E00               	movlw	0
 13667  00220E  0100               	movlb	0	; () banked
 13668  002210  6F97               	movwf	i1sprintf@width& (0+255),b
 13669  002212                     i1l11443:
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;doprnt.c: 1360: }
 13673                           ;doprnt.c: 1388: if(width > c)
 13674  002212  0E80               	movlw	128
 13675  002214  0100               	movlb	0	; () banked
 13676  002216  0100               	movlb	0	; () banked
 13677  002218  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13678  00221A  0E7F               	movlw	127
 13679  00221C  6F78               	movwf	??i1_sprintf& (0+255),b
 13680  00221E  0100               	movlb	0	; () banked
 13681  002220  0100               	movlb	0	; () banked
 13682  002222  5197               	movf	i1sprintf@width& (0+255),w,b
 13683  002224  0100               	movlb	0	; () banked
 13684  002226  0100               	movlb	0	; () banked
 13685  002228  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 13686  00222A  0100               	movlb	0	; () banked
 13687  00222C  0100               	movlb	0	; () banked
 13688  00222E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13689  002230  0A80               	xorlw	128
 13690  002232  0100               	movlb	0	; () banked
 13691  002234  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13692  002236  B0D8               	btfsc	status,0,c
 13693  002238  D00E               	goto	i1l11447
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;doprnt.c: 1389: width -= c;
 13697  00223A  0100               	movlb	0	; () banked
 13698  00223C  0100               	movlb	0	; () banked
 13699  00223E  519E               	movf	i1sprintf@c& (0+255),w,b
 13700  002240  0100               	movlb	0	; () banked
 13701  002242  0100               	movlb	0	; () banked
 13702  002244  5F97               	subwf	i1sprintf@width& (0+255),f,b
 13703  002246  0E00               	movlw	0
 13704  002248  0100               	movlb	0	; () banked
 13705  00224A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13706  00224C  0EFF               	movlw	255
 13707  00224E  0100               	movlb	0	; () banked
 13708  002250  0100               	movlb	0	; () banked
 13709  002252  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 13710  002254  D007               	goto	i1l11449
 13711  002256                     i1l11447:
 13712                           
 13713                           ; BSR set to: 0
 13714                           ;doprnt.c: 1390: else
 13715                           ;doprnt.c: 1391: width = 0;
 13716  002256  0E00               	movlw	0
 13717  002258  0100               	movlb	0	; () banked
 13718  00225A  0100               	movlb	0	; () banked
 13719  00225C  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13720  00225E  0E00               	movlw	0
 13721  002260  0100               	movlb	0	; () banked
 13722  002262  6F97               	movwf	i1sprintf@width& (0+255),b
 13723  002264                     i1l11449:
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;doprnt.c: 1394: if(flag & 0x04) {
 13727  002264  0100               	movlb	0	; () banked
 13728  002266  0100               	movlb	0	; () banked
 13729  002268  A593               	btfss	i1sprintf@flag& (0+255),2,b
 13730  00226A  D031               	goto	i1l11465
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;doprnt.c: 1399: if(flag & 0x03)
 13734  00226C  0E03               	movlw	3
 13735  00226E  0100               	movlb	0	; () banked
 13736  002270  0100               	movlb	0	; () banked
 13737  002272  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13738  002274  0100               	movlb	0	; () banked
 13739  002276  6F78               	movwf	??i1_sprintf& (0+255),b
 13740  002278  0E00               	movlw	0
 13741  00227A  0100               	movlb	0	; () banked
 13742  00227C  0100               	movlb	0	; () banked
 13743  00227E  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13744  002280  0100               	movlb	0	; () banked
 13745  002282  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13746  002284  0100               	movlb	0	; () banked
 13747  002286  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13748  002288  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13749  00228A  B4D8               	btfsc	status,2,c
 13750  00228C  D00A               	goto	i1l11457
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;doprnt.c: 1400: ((*sp++ = ('-')));
 13754  00228E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13755  002292  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13756  002296  0E2D               	movlw	45
 13757  002298  6EDF               	movwf	indf2,c
 13758                           
 13759                           ; BSR set to: 0
 13760  00229A  0100               	movlb	0	; () banked
 13761  00229C  0100               	movlb	0	; () banked
 13762  00229E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13763  0022A0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13764  0022A2                     i1l11457:
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;doprnt.c: 1422: if(width)
 13768  0022A2  0100               	movlb	0	; () banked
 13769  0022A4  0100               	movlb	0	; () banked
 13770  0022A6  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13771  0022A8  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13772  0022AA  B4D8               	btfsc	status,2,c
 13773  0022AC  D08F               	goto	i1l11485
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;doprnt.c: 1424: ((*sp++ = ('0')));
 13777                           
 13778                           ; BSR set to: 0
 13779                           
 13780                           ;doprnt.c: 1423: do
 13781  0022AE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13782  0022B2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13783  0022B6  0E30               	movlw	48
 13784  0022B8  6EDF               	movwf	indf2,c
 13785                           
 13786                           ; BSR set to: 0
 13787  0022BA  0100               	movlb	0	; () banked
 13788  0022BC  0100               	movlb	0	; () banked
 13789  0022BE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13790  0022C0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;doprnt.c: 1425: while(--width);
 13794  0022C2  0100               	movlb	0	; () banked
 13795  0022C4  0100               	movlb	0	; () banked
 13796  0022C6  0797               	decf	i1sprintf@width& (0+255),f,b
 13797  0022C8  A0D8               	btfss	status,0,c
 13798  0022CA  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13799  0022CC  D7EB               	goto	L19
 13800  0022CE                     i1l11465:
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;doprnt.c: 1429: {
 13804                           ;doprnt.c: 1431: if(width
 13805                           ;doprnt.c: 1435: )
 13806  0022CE  0100               	movlb	0	; () banked
 13807  0022D0  0100               	movlb	0	; () banked
 13808  0022D2  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13809  0022D4  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13810  0022D6  B4D8               	btfsc	status,2,c
 13811  0022D8  D014               	goto	i1l11473
 13812  0022DA                     i1l11467:
 13813                           
 13814                           ; BSR set to: 0
 13815                           ;doprnt.c: 1437: ((*sp++ = (' ')));
 13816  0022DA  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13817  0022DE  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13818  0022E2  0E20               	movlw	32
 13819  0022E4  6EDF               	movwf	indf2,c
 13820                           
 13821                           ; BSR set to: 0
 13822  0022E6  0100               	movlb	0	; () banked
 13823  0022E8  0100               	movlb	0	; () banked
 13824  0022EA  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13825  0022EC  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;doprnt.c: 1438: while(--width);
 13829  0022EE  0100               	movlb	0	; () banked
 13830  0022F0  0100               	movlb	0	; () banked
 13831  0022F2  0797               	decf	i1sprintf@width& (0+255),f,b
 13832  0022F4  A0D8               	btfss	status,0,c
 13833  0022F6  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13834  0022F8  0100               	movlb	0	; () banked
 13835  0022FA  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13836  0022FC  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13837  0022FE  A4D8               	btfss	status,2,c
 13838  002300  D7EC               	goto	i1l11467
 13839  002302                     i1l11473:
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;doprnt.c: 1445: if(flag & 0x03)
 13843  002302  0E03               	movlw	3
 13844  002304  0100               	movlb	0	; () banked
 13845  002306  0100               	movlb	0	; () banked
 13846  002308  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13847  00230A  0100               	movlb	0	; () banked
 13848  00230C  6F78               	movwf	??i1_sprintf& (0+255),b
 13849  00230E  0E00               	movlw	0
 13850  002310  0100               	movlb	0	; () banked
 13851  002312  0100               	movlb	0	; () banked
 13852  002314  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13853  002316  0100               	movlb	0	; () banked
 13854  002318  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13855  00231A  0100               	movlb	0	; () banked
 13856  00231C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13857  00231E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13858  002320  B4D8               	btfsc	status,2,c
 13859  002322  D054               	goto	i1l11485
 13860                           
 13861                           ; BSR set to: 0
 13862                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 13863  002324  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13864  002328  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13865  00232C  0E2D               	movlw	45
 13866  00232E  6EDF               	movwf	indf2,c
 13867  002330  D049               	goto	L18
 13868  002332                     i1l11479:
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;doprnt.c: 1485: {
 13872                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 13873  002332  0100               	movlb	0	; () banked
 13874  002334  C09C  F078         	movff	i1sprintf@prec,??i1_sprintf
 13875  002338  0100               	movlb	0	; () banked
 13876  00233A  C09D  F079         	movff	i1sprintf@prec+1,??i1_sprintf+1
 13877  00233E  0100               	movlb	0	; () banked
 13878  002340  90D8               	bcf	status,0,c
 13879  002342  3778               	rlcf	??i1_sprintf& (0+255),f,b
 13880  002344  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 13881  002346  0100               	movlb	0	; () banked
 13882  002348  90D8               	bcf	status,0,c
 13883  00234A  3778               	rlcf	??i1_sprintf& (0+255),f,b
 13884  00234C  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 13885  00234E  0E00               	movlw	low _dpowers
 13886  002350  0100               	movlb	0	; () banked
 13887  002352  2578               	addwf	??i1_sprintf& (0+255),w,b
 13888  002354  6EF6               	movwf	tblptrl,c
 13889  002356  0E08               	movlw	high _dpowers
 13890  002358  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 13891  00235A  6EF7               	movwf	tblptrh,c
 13892  00235C  0009               	tblrd		*+
 13893  00235E  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13894  002362  0009               	tblrd		*+
 13895  002364  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13896  002368  0009               	tblrd		*+
 13897  00236A  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13898  00236E  000A               	tblrd		*-
 13899  002370  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13900  002374  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13901  002378  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13902  00237C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13903  002380  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13904  002384  EC89  F02C         	call	i1___lldiv	;wreg free
 13905  002388  C014  F022         	movff	?i1___lldiv+3,?i1___llmod+3
 13906  00238C  C013  F021         	movff	?i1___lldiv+2,?i1___llmod+2
 13907  002390  C012  F020         	movff	?i1___lldiv+1,?i1___llmod+1
 13908  002394  C011  F01F         	movff	?i1___lldiv,?i1___llmod
 13909  002398  0E0A               	movlw	10
 13910  00239A  6E23               	movwf	?i1___llmod+4,c
 13911  00239C  0E00               	movlw	0
 13912  00239E  6E24               	movwf	?i1___llmod+5,c
 13913  0023A0  0E00               	movlw	0
 13914  0023A2  6E25               	movwf	?i1___llmod+6,c
 13915  0023A4  0E00               	movlw	0
 13916  0023A6  6E26               	movwf	?i1___llmod+7,c
 13917  0023A8  ECC2  F02D         	call	i1___llmod	;wreg free
 13918  0023AC  501F               	movf	?i1___llmod,w,c
 13919  0023AE  0F30               	addlw	48
 13920  0023B0  0100               	movlb	0	; () banked
 13921  0023B2  0100               	movlb	0	; () banked
 13922  0023B4  6F9E               	movwf	i1sprintf@c& (0+255),b
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;doprnt.c: 1530: }
 13926                           ;doprnt.c: 1531: ((*sp++ = (c)));
 13927  0023B6  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13928  0023BA  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13929  0023BE  0100               	movlb	0	; () banked
 13930  0023C0  C09E  FFDF         	movff	i1sprintf@c,indf2
 13931  0023C4                     L18:
 13932                           
 13933                           ; BSR set to: 0
 13934  0023C4  0100               	movlb	0	; () banked
 13935  0023C6  0100               	movlb	0	; () banked
 13936  0023C8  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13937  0023CA  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13938  0023CC                     i1l11485:
 13939                           
 13940                           ; BSR set to: 0
 13941  0023CC  0100               	movlb	0	; () banked
 13942  0023CE  0100               	movlb	0	; () banked
 13943  0023D0  079C               	decf	i1sprintf@prec& (0+255),f,b
 13944  0023D2  A0D8               	btfss	status,0,c
 13945  0023D4  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13946  0023D6  0100               	movlb	0	; () banked
 13947  0023D8  299C               	incf	i1sprintf@prec& (0+255),w,b
 13948  0023DA  B4D8               	btfsc	status,2,c
 13949  0023DC  299D               	incf	(i1sprintf@prec+1)& (0+255),w,b
 13950  0023DE  A4D8               	btfss	status,2,c
 13951  0023E0  D7A8               	goto	i1l11479
 13952  0023E2                     i1l11487:
 13953                           
 13954                           ; BSR set to: 0
 13955  0023E2  0100               	movlb	0	; () banked
 13956  0023E4  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13957  0023E8  0100               	movlb	0	; () banked
 13958  0023EA  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13959  0023EE  0100               	movlb	0	; () banked
 13960  0023F0  0100               	movlb	0	; () banked
 13961  0023F2  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 13962  0023F4  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 13963  0023F6  0008               	tblrd		*
 13964  0023F8  0100               	movlb	0	; () banked
 13965  0023FA  CFF5 F09E          	movff	tablat,i1sprintf@c
 13966  0023FE  0100               	movlb	0	; () banked
 13967  002400  679E               	tstfsz	i1sprintf@c& (0+255),b
 13968  002402  EF60  F00B         	goto	i1l11163
 13969  002406                     i1l11489:
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;doprnt.c: 1545: *sp = 0;
 13973  002406  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13974  00240A  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13975  00240E  0E00               	movlw	0
 13976  002410  6EDF               	movwf	indf2,c
 13977                           
 13978                           ; BSR set to: 0
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;doprnt.c: 1547: return 0;
 13982                           ;	Return value of i1_sprintf is never used
 13983  002412  0012               	return	
 13984  002414                     __end_ofi1_sprintf:
 13985                           	opt stack 0
 13986                           pclatu	equ	0xFFB
 13987                           pclath	equ	0xFFA
 13988                           tblptru	equ	0xFF8
 13989                           tblptrh	equ	0xFF7
 13990                           tblptrl	equ	0xFF6
 13991                           tablat	equ	0xFF5
 13992                           prodh	equ	0xFF4
 13993                           prodl	equ	0xFF3
 13994                           intcon	equ	0xFF2
 13995                           intcon2	equ	0xFF1
 13996                           postinc0	equ	0xFEE
 13997                           fsr0h	equ	0xFEA
 13998                           fsr0l	equ	0xFE9
 13999                           wreg	equ	0xFE8
 14000                           fsr1h	equ	0xFE2
 14001                           fsr1l	equ	0xFE1
 14002                           bsr	equ	0xFE0
 14003                           indf2	equ	0xFDF
 14004                           postinc2	equ	0xFDE
 14005                           postdec2	equ	0xFDD
 14006                           fsr2h	equ	0xFDA
 14007                           fsr2l	equ	0xFD9
 14008                           status	equ	0xFD8
 14009                           
 14010 ;; *************** function i1___lwmod *****************
 14011 ;; Defined at:
 14012 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;  __lwmod         2   16[COMRAM] unsigned int 
 14015 ;;  __lwmod         2   18[COMRAM] unsigned int 
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;  __lwmod         1   21[COMRAM] unsigned char 
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  2   16[COMRAM] unsigned int 
 14020 ;; Registers used:
 14021 ;;		wreg, status,2, status,0
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/0
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14027 ;;      Params:         4       0       0       0       0       0       0       0       0
 14028 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14029 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14030 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14031 ;;Total ram usage:        6 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:    3
 14034 ;; This function calls:
 14035 ;;		Nothing
 14036 ;; This function is called by:
 14037 ;;		i1_sprintf
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text43
 14042  005E16                     __ptext43:
 14043                           	opt stack 0
 14044  005E16                     i1___lwmod:
 14045                           	opt stack 20
 14046                           
 14047                           ; BSR set to: 0
 14048                           ;incstack = 0
 14049                           ;incstack = 0
 14050  005E16  5014               	movf	i1___lwmod@divisor+1,w,c
 14051  005E18  1013               	iorwf	i1___lwmod@divisor,w,c
 14052  005E1A  B4D8               	btfsc	status,2,c
 14053  005E1C  D01A               	goto	i1l917
 14054  005E1E  6E15               	movwf	??i1___lwmod& (0+255),c
 14055  005E20  0E01               	movlw	1
 14056  005E22  6E16               	movwf	i1___lwmod@counter,c
 14057  005E24  5015               	movf	??i1___lwmod& (0+255),w,c
 14058  005E26  D004               	goto	i1l9641
 14059  005E28                     i1l9639:
 14060  005E28  90D8               	bcf	status,0,c
 14061  005E2A  3613               	rlcf	i1___lwmod@divisor,f,c
 14062  005E2C  3614               	rlcf	i1___lwmod@divisor+1,f,c
 14063  005E2E  2A16               	incf	i1___lwmod@counter,f,c
 14064  005E30                     i1l9641:
 14065  005E30  AE14               	btfss	i1___lwmod@divisor+1,7,c
 14066  005E32  D7FA               	goto	i1l9639
 14067  005E34                     i1l9643:
 14068  005E34  5013               	movf	i1___lwmod@divisor,w,c
 14069  005E36  5C11               	subwf	i1___lwmod@dividend,w,c
 14070  005E38  5014               	movf	i1___lwmod@divisor+1,w,c
 14071  005E3A  5812               	subwfb	i1___lwmod@dividend+1,w,c
 14072  005E3C  A0D8               	btfss	status,0,c
 14073  005E3E  D004               	goto	i1l9647
 14074  005E40  5013               	movf	i1___lwmod@divisor,w,c
 14075  005E42  5E11               	subwf	i1___lwmod@dividend,f,c
 14076  005E44  5014               	movf	i1___lwmod@divisor+1,w,c
 14077  005E46  5A12               	subwfb	i1___lwmod@dividend+1,f,c
 14078  005E48                     i1l9647:
 14079  005E48  90D8               	bcf	status,0,c
 14080  005E4A  3214               	rrcf	i1___lwmod@divisor+1,f,c
 14081  005E4C  3213               	rrcf	i1___lwmod@divisor,f,c
 14082  005E4E  2E16               	decfsz	i1___lwmod@counter,f,c
 14083  005E50  D7F1               	goto	i1l9643
 14084  005E52                     i1l917:
 14085  005E52  C011  F011         	movff	i1___lwmod@dividend,?i1___lwmod
 14086  005E56  C012  F012         	movff	i1___lwmod@dividend+1,?i1___lwmod+1
 14087  005E5A  0012               	return	
 14088  005E5C                     __end_ofi1___lwmod:
 14089                           	opt stack 0
 14090                           pclatu	equ	0xFFB
 14091                           pclath	equ	0xFFA
 14092                           tblptru	equ	0xFF8
 14093                           tblptrh	equ	0xFF7
 14094                           tblptrl	equ	0xFF6
 14095                           tablat	equ	0xFF5
 14096                           prodh	equ	0xFF4
 14097                           prodl	equ	0xFF3
 14098                           intcon	equ	0xFF2
 14099                           intcon2	equ	0xFF1
 14100                           postinc0	equ	0xFEE
 14101                           fsr0h	equ	0xFEA
 14102                           fsr0l	equ	0xFE9
 14103                           wreg	equ	0xFE8
 14104                           fsr1h	equ	0xFE2
 14105                           fsr1l	equ	0xFE1
 14106                           bsr	equ	0xFE0
 14107                           indf2	equ	0xFDF
 14108                           postinc2	equ	0xFDE
 14109                           postdec2	equ	0xFDD
 14110                           fsr2h	equ	0xFDA
 14111                           fsr2l	equ	0xFD9
 14112                           status	equ	0xFD8
 14113                           
 14114 ;; *************** function i1___lltoft *****************
 14115 ;; Defined at:
 14116 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;  __lltoft        4   24[COMRAM] unsigned long 
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;  __lltoft        1   32[COMRAM] unsigned char 
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  3   24[COMRAM] float 
 14123 ;; Registers used:
 14124 ;;		wreg, status,2, status,0, cstack
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14130 ;;      Params:         4       0       0       0       0       0       0       0       0
 14131 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14132 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14133 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14134 ;;Total ram usage:        9 bytes
 14135 ;; Hardware stack levels used:    1
 14136 ;; Hardware stack levels required when called:    4
 14137 ;; This function calls:
 14138 ;;		i1___ftpack
 14139 ;; This function is called by:
 14140 ;;		i1_sprintf
 14141 ;; This function uses a non-reentrant model
 14142 ;;
 14143                           
 14144                           	psect	text44
 14145  005C52                     __ptext44:
 14146                           	opt stack 0
 14147  005C52                     i1___lltoft:
 14148                           	opt stack 19
 14149                           
 14150                           ;incstack = 0
 14151                           ;incstack = 0
 14152  005C52  6E1D               	movwf	??i1___lltoft& (0+255),c
 14153  005C54  0E8E               	movlw	142
 14154  005C56  6E21               	movwf	i1___lltoft@exp,c
 14155  005C58  501D               	movf	??i1___lltoft& (0+255),w,c
 14156  005C5A  D006               	goto	i1l9607
 14157  005C5C                     i1l9605:
 14158  005C5C  90D8               	bcf	status,0,c
 14159  005C5E  321C               	rrcf	i1___lltoft@c+3,f,c
 14160  005C60  321B               	rrcf	i1___lltoft@c+2,f,c
 14161  005C62  321A               	rrcf	i1___lltoft@c+1,f,c
 14162  005C64  3219               	rrcf	i1___lltoft@c,f,c
 14163  005C66  2A21               	incf	i1___lltoft@exp,f,c
 14164  005C68                     i1l9607:
 14165  005C68  0E00               	movlw	0
 14166  005C6A  1419               	andwf	i1___lltoft@c,w,c
 14167  005C6C  6E1D               	movwf	??i1___lltoft& (0+255),c
 14168  005C6E  0E00               	movlw	0
 14169  005C70  141A               	andwf	i1___lltoft@c+1,w,c
 14170  005C72  6E1E               	movwf	(??i1___lltoft+1)& (0+255),c
 14171  005C74  0E00               	movlw	0
 14172  005C76  141B               	andwf	i1___lltoft@c+2,w,c
 14173  005C78  6E1F               	movwf	(??i1___lltoft+2)& (0+255),c
 14174  005C7A  0EFF               	movlw	255
 14175  005C7C  141C               	andwf	i1___lltoft@c+3,w,c
 14176  005C7E  6E20               	movwf	(??i1___lltoft+3)& (0+255),c
 14177  005C80  5020               	movf	??i1___lltoft+3,w,c
 14178  005C82  101D               	iorwf	??i1___lltoft,w,c
 14179  005C84  101E               	iorwf	??i1___lltoft+1,w,c
 14180  005C86  101F               	iorwf	??i1___lltoft+2,w,c
 14181  005C88  A4D8               	btfss	status,2,c
 14182  005C8A  D7E8               	goto	i1l9605
 14183  005C8C  C019  F011         	movff	i1___lltoft@c,?i1___ftpack
 14184  005C90  C01A  F012         	movff	i1___lltoft@c+1,?i1___ftpack+1
 14185  005C94  C01B  F013         	movff	i1___lltoft@c+2,?i1___ftpack+2
 14186  005C98  C021  F014         	movff	i1___lltoft@exp,?i1___ftpack+3
 14187  005C9C  6E1D               	movwf	??i1___lltoft& (0+255),c
 14188  005C9E  0E00               	movlw	0
 14189  005CA0  6E15               	movwf	?i1___ftpack+4,c
 14190  005CA2  501D               	movf	??i1___lltoft& (0+255),w,c
 14191  005CA4  ECC1  F029         	call	i1___ftpack	;wreg free
 14192  005CA8  C013  F01B         	movff	?i1___ftpack+2,?i1___lltoft+2
 14193  005CAC  C012  F01A         	movff	?i1___ftpack+1,?i1___lltoft+1
 14194  005CB0  C011  F019         	movff	?i1___ftpack,?i1___lltoft
 14195  005CB4  0012               	return	
 14196  005CB6                     __end_ofi1___lltoft:
 14197                           	opt stack 0
 14198                           pclatu	equ	0xFFB
 14199                           pclath	equ	0xFFA
 14200                           tblptru	equ	0xFF8
 14201                           tblptrh	equ	0xFF7
 14202                           tblptrl	equ	0xFF6
 14203                           tablat	equ	0xFF5
 14204                           prodh	equ	0xFF4
 14205                           prodl	equ	0xFF3
 14206                           intcon	equ	0xFF2
 14207                           intcon2	equ	0xFF1
 14208                           postinc0	equ	0xFEE
 14209                           fsr0h	equ	0xFEA
 14210                           fsr0l	equ	0xFE9
 14211                           wreg	equ	0xFE8
 14212                           fsr1h	equ	0xFE2
 14213                           fsr1l	equ	0xFE1
 14214                           bsr	equ	0xFE0
 14215                           indf2	equ	0xFDF
 14216                           postinc2	equ	0xFDE
 14217                           postdec2	equ	0xFDD
 14218                           fsr2h	equ	0xFDA
 14219                           fsr2l	equ	0xFD9
 14220                           status	equ	0xFD8
 14221                           
 14222 ;; *************** function i1___llmod *****************
 14223 ;; Defined at:
 14224 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
 14225 ;; Parameters:    Size  Location     Type
 14226 ;;  __llmod         4   30[COMRAM] unsigned long 
 14227 ;;  __llmod         4   34[COMRAM] unsigned long 
 14228 ;; Auto vars:     Size  Location     Type
 14229 ;;  __llmod         1   39[COMRAM] unsigned char 
 14230 ;; Return value:  Size  Location     Type
 14231 ;;                  4   30[COMRAM] unsigned long 
 14232 ;; Registers used:
 14233 ;;		wreg, status,2, status,0
 14234 ;; Tracked objects:
 14235 ;;		On entry : 0/0
 14236 ;;		On exit  : 0/0
 14237 ;;		Unchanged: 0/0
 14238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14239 ;;      Params:         8       0       0       0       0       0       0       0       0
 14240 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14241 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14242 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14243 ;;Total ram usage:       10 bytes
 14244 ;; Hardware stack levels used:    1
 14245 ;; Hardware stack levels required when called:    3
 14246 ;; This function calls:
 14247 ;;		Nothing
 14248 ;; This function is called by:
 14249 ;;		i1_sprintf
 14250 ;; This function uses a non-reentrant model
 14251 ;;
 14252                           
 14253                           	psect	text45
 14254  005B84                     __ptext45:
 14255                           	opt stack 0
 14256  005B84                     i1___llmod:
 14257                           	opt stack 20
 14258                           
 14259                           ;incstack = 0
 14260                           ;incstack = 0
 14261  005B84  5026               	movf	i1___llmod@divisor+3,w,c
 14262  005B86  1023               	iorwf	i1___llmod@divisor,w,c
 14263  005B88  1024               	iorwf	i1___llmod@divisor+1,w,c
 14264  005B8A  1025               	iorwf	i1___llmod@divisor+2,w,c
 14265  005B8C  B4D8               	btfsc	status,2,c
 14266  005B8E  D026               	goto	i1l848
 14267  005B90  6E27               	movwf	??i1___llmod& (0+255),c
 14268  005B92  0E01               	movlw	1
 14269  005B94  6E28               	movwf	i1___llmod@counter,c
 14270  005B96  5027               	movf	??i1___llmod& (0+255),w,c
 14271  005B98  D006               	goto	i1l9593
 14272  005B9A                     i1l9591:
 14273  005B9A  90D8               	bcf	status,0,c
 14274  005B9C  3623               	rlcf	i1___llmod@divisor,f,c
 14275  005B9E  3624               	rlcf	i1___llmod@divisor+1,f,c
 14276  005BA0  3625               	rlcf	i1___llmod@divisor+2,f,c
 14277  005BA2  3626               	rlcf	i1___llmod@divisor+3,f,c
 14278  005BA4  2A28               	incf	i1___llmod@counter,f,c
 14279  005BA6                     i1l9593:
 14280  005BA6  AE26               	btfss	i1___llmod@divisor+3,7,c
 14281  005BA8  D7F8               	goto	i1l9591
 14282  005BAA                     i1l9595:
 14283  005BAA  5023               	movf	i1___llmod@divisor,w,c
 14284  005BAC  5C1F               	subwf	i1___llmod@dividend,w,c
 14285  005BAE  5024               	movf	i1___llmod@divisor+1,w,c
 14286  005BB0  5820               	subwfb	i1___llmod@dividend+1,w,c
 14287  005BB2  5025               	movf	i1___llmod@divisor+2,w,c
 14288  005BB4  5821               	subwfb	i1___llmod@dividend+2,w,c
 14289  005BB6  5026               	movf	i1___llmod@divisor+3,w,c
 14290  005BB8  5822               	subwfb	i1___llmod@dividend+3,w,c
 14291  005BBA  A0D8               	btfss	status,0,c
 14292  005BBC  D008               	goto	i1l9599
 14293  005BBE  5023               	movf	i1___llmod@divisor,w,c
 14294  005BC0  5E1F               	subwf	i1___llmod@dividend,f,c
 14295  005BC2  5024               	movf	i1___llmod@divisor+1,w,c
 14296  005BC4  5A20               	subwfb	i1___llmod@dividend+1,f,c
 14297  005BC6  5025               	movf	i1___llmod@divisor+2,w,c
 14298  005BC8  5A21               	subwfb	i1___llmod@dividend+2,f,c
 14299  005BCA  5026               	movf	i1___llmod@divisor+3,w,c
 14300  005BCC  5A22               	subwfb	i1___llmod@dividend+3,f,c
 14301  005BCE                     i1l9599:
 14302  005BCE  90D8               	bcf	status,0,c
 14303  005BD0  3226               	rrcf	i1___llmod@divisor+3,f,c
 14304  005BD2  3225               	rrcf	i1___llmod@divisor+2,f,c
 14305  005BD4  3224               	rrcf	i1___llmod@divisor+1,f,c
 14306  005BD6  3223               	rrcf	i1___llmod@divisor,f,c
 14307  005BD8  2E28               	decfsz	i1___llmod@counter,f,c
 14308  005BDA  D7E7               	goto	i1l9595
 14309  005BDC                     i1l848:
 14310  005BDC  C01F  F01F         	movff	i1___llmod@dividend,?i1___llmod
 14311  005BE0  C020  F020         	movff	i1___llmod@dividend+1,?i1___llmod+1
 14312  005BE4  C021  F021         	movff	i1___llmod@dividend+2,?i1___llmod+2
 14313  005BE8  C022  F022         	movff	i1___llmod@dividend+3,?i1___llmod+3
 14314  005BEC  0012               	return	
 14315  005BEE                     __end_ofi1___llmod:
 14316                           	opt stack 0
 14317                           pclatu	equ	0xFFB
 14318                           pclath	equ	0xFFA
 14319                           tblptru	equ	0xFF8
 14320                           tblptrh	equ	0xFF7
 14321                           tblptrl	equ	0xFF6
 14322                           tablat	equ	0xFF5
 14323                           prodh	equ	0xFF4
 14324                           prodl	equ	0xFF3
 14325                           intcon	equ	0xFF2
 14326                           intcon2	equ	0xFF1
 14327                           postinc0	equ	0xFEE
 14328                           fsr0h	equ	0xFEA
 14329                           fsr0l	equ	0xFE9
 14330                           wreg	equ	0xFE8
 14331                           fsr1h	equ	0xFE2
 14332                           fsr1l	equ	0xFE1
 14333                           bsr	equ	0xFE0
 14334                           indf2	equ	0xFDF
 14335                           postinc2	equ	0xFDE
 14336                           postdec2	equ	0xFDD
 14337                           fsr2h	equ	0xFDA
 14338                           fsr2l	equ	0xFD9
 14339                           status	equ	0xFD8
 14340                           
 14341 ;; *************** function i1___lldiv *****************
 14342 ;; Defined at:
 14343 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
 14344 ;; Parameters:    Size  Location     Type
 14345 ;;  __lldiv         4   16[COMRAM] unsigned long 
 14346 ;;  __lldiv         4   20[COMRAM] unsigned long 
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;  __lldiv         4   25[COMRAM] unsigned long 
 14349 ;;  __lldiv         1   29[COMRAM] unsigned char 
 14350 ;; Return value:  Size  Location     Type
 14351 ;;                  4   16[COMRAM] unsigned long 
 14352 ;; Registers used:
 14353 ;;		wreg, status,2, status,0
 14354 ;; Tracked objects:
 14355 ;;		On entry : 0/0
 14356 ;;		On exit  : 0/0
 14357 ;;		Unchanged: 0/0
 14358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14359 ;;      Params:         8       0       0       0       0       0       0       0       0
 14360 ;;      Locals:         5       0       0       0       0       0       0       0       0
 14361 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14362 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14363 ;;Total ram usage:       14 bytes
 14364 ;; Hardware stack levels used:    1
 14365 ;; Hardware stack levels required when called:    3
 14366 ;; This function calls:
 14367 ;;		Nothing
 14368 ;; This function is called by:
 14369 ;;		i1_sprintf
 14370 ;; This function uses a non-reentrant model
 14371 ;;
 14372                           
 14373                           	psect	text46
 14374  005912                     __ptext46:
 14375                           	opt stack 0
 14376  005912                     i1___lldiv:
 14377                           	opt stack 20
 14378                           
 14379                           ;incstack = 0
 14380                           ;incstack = 0
 14381  005912  0E00               	movlw	0
 14382  005914  6E1A               	movwf	i1___lldiv@quotient,c
 14383  005916  0E00               	movlw	0
 14384  005918  6E1B               	movwf	i1___lldiv@quotient+1,c
 14385  00591A  0E00               	movlw	0
 14386  00591C  6E1C               	movwf	i1___lldiv@quotient+2,c
 14387  00591E  0E00               	movlw	0
 14388  005920  6E1D               	movwf	i1___lldiv@quotient+3,c
 14389  005922  5018               	movf	i1___lldiv@divisor+3,w,c
 14390  005924  1015               	iorwf	i1___lldiv@divisor,w,c
 14391  005926  1016               	iorwf	i1___lldiv@divisor+1,w,c
 14392  005928  1017               	iorwf	i1___lldiv@divisor+2,w,c
 14393  00592A  B4D8               	btfsc	status,2,c
 14394  00592C  D02C               	goto	i1l838
 14395  00592E  6E19               	movwf	??i1___lldiv& (0+255),c
 14396  005930  0E01               	movlw	1
 14397  005932  6E1E               	movwf	i1___lldiv@counter,c
 14398  005934  5019               	movf	??i1___lldiv& (0+255),w,c
 14399  005936  D006               	goto	i1l9573
 14400  005938                     i1l9571:
 14401  005938  90D8               	bcf	status,0,c
 14402  00593A  3615               	rlcf	i1___lldiv@divisor,f,c
 14403  00593C  3616               	rlcf	i1___lldiv@divisor+1,f,c
 14404  00593E  3617               	rlcf	i1___lldiv@divisor+2,f,c
 14405  005940  3618               	rlcf	i1___lldiv@divisor+3,f,c
 14406  005942  2A1E               	incf	i1___lldiv@counter,f,c
 14407  005944                     i1l9573:
 14408  005944  AE18               	btfss	i1___lldiv@divisor+3,7,c
 14409  005946  D7F8               	goto	i1l9571
 14410  005948                     i1l9575:
 14411  005948  90D8               	bcf	status,0,c
 14412  00594A  361A               	rlcf	i1___lldiv@quotient,f,c
 14413  00594C  361B               	rlcf	i1___lldiv@quotient+1,f,c
 14414  00594E  361C               	rlcf	i1___lldiv@quotient+2,f,c
 14415  005950  361D               	rlcf	i1___lldiv@quotient+3,f,c
 14416  005952  5015               	movf	i1___lldiv@divisor,w,c
 14417  005954  5C11               	subwf	i1___lldiv@dividend,w,c
 14418  005956  5016               	movf	i1___lldiv@divisor+1,w,c
 14419  005958  5812               	subwfb	i1___lldiv@dividend+1,w,c
 14420  00595A  5017               	movf	i1___lldiv@divisor+2,w,c
 14421  00595C  5813               	subwfb	i1___lldiv@dividend+2,w,c
 14422  00595E  5018               	movf	i1___lldiv@divisor+3,w,c
 14423  005960  5814               	subwfb	i1___lldiv@dividend+3,w,c
 14424  005962  A0D8               	btfss	status,0,c
 14425  005964  D009               	goto	i1l9583
 14426  005966  5015               	movf	i1___lldiv@divisor,w,c
 14427  005968  5E11               	subwf	i1___lldiv@dividend,f,c
 14428  00596A  5016               	movf	i1___lldiv@divisor+1,w,c
 14429  00596C  5A12               	subwfb	i1___lldiv@dividend+1,f,c
 14430  00596E  5017               	movf	i1___lldiv@divisor+2,w,c
 14431  005970  5A13               	subwfb	i1___lldiv@dividend+2,f,c
 14432  005972  5018               	movf	i1___lldiv@divisor+3,w,c
 14433  005974  5A14               	subwfb	i1___lldiv@dividend+3,f,c
 14434  005976  801A               	bsf	i1___lldiv@quotient,0,c
 14435  005978                     i1l9583:
 14436  005978  90D8               	bcf	status,0,c
 14437  00597A  3218               	rrcf	i1___lldiv@divisor+3,f,c
 14438  00597C  3217               	rrcf	i1___lldiv@divisor+2,f,c
 14439  00597E  3216               	rrcf	i1___lldiv@divisor+1,f,c
 14440  005980  3215               	rrcf	i1___lldiv@divisor,f,c
 14441  005982  2E1E               	decfsz	i1___lldiv@counter,f,c
 14442  005984  D7E1               	goto	i1l9575
 14443  005986                     i1l838:
 14444  005986  C01A  F011         	movff	i1___lldiv@quotient,?i1___lldiv
 14445  00598A  C01B  F012         	movff	i1___lldiv@quotient+1,?i1___lldiv+1
 14446  00598E  C01C  F013         	movff	i1___lldiv@quotient+2,?i1___lldiv+2
 14447  005992  C01D  F014         	movff	i1___lldiv@quotient+3,?i1___lldiv+3
 14448  005996  0012               	return	
 14449  005998                     __end_ofi1___lldiv:
 14450                           	opt stack 0
 14451                           pclatu	equ	0xFFB
 14452                           pclath	equ	0xFFA
 14453                           tblptru	equ	0xFF8
 14454                           tblptrh	equ	0xFF7
 14455                           tblptrl	equ	0xFF6
 14456                           tablat	equ	0xFF5
 14457                           prodh	equ	0xFF4
 14458                           prodl	equ	0xFF3
 14459                           intcon	equ	0xFF2
 14460                           intcon2	equ	0xFF1
 14461                           postinc0	equ	0xFEE
 14462                           fsr0h	equ	0xFEA
 14463                           fsr0l	equ	0xFE9
 14464                           wreg	equ	0xFE8
 14465                           fsr1h	equ	0xFE2
 14466                           fsr1l	equ	0xFE1
 14467                           bsr	equ	0xFE0
 14468                           indf2	equ	0xFDF
 14469                           postinc2	equ	0xFDE
 14470                           postdec2	equ	0xFDD
 14471                           fsr2h	equ	0xFDA
 14472                           fsr2l	equ	0xFD9
 14473                           status	equ	0xFD8
 14474                           
 14475 ;; *************** function i1_isdigit *****************
 14476 ;; Defined at:
 14477 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
 14478 ;; Parameters:    Size  Location     Type
 14479 ;;  isdigit         1   16[COMRAM] unsigned char 
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;  isdigit         1   18[COMRAM] unsigned char 
 14482 ;; Return value:  Size  Location     Type
 14483 ;;		None               void
 14484 ;; Registers used:
 14485 ;;		wreg, status,2, status,0
 14486 ;; Tracked objects:
 14487 ;;		On entry : 0/0
 14488 ;;		On exit  : 0/0
 14489 ;;		Unchanged: 0/0
 14490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14491 ;;      Params:         1       0       0       0       0       0       0       0       0
 14492 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14493 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14494 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14495 ;;Total ram usage:        3 bytes
 14496 ;; Hardware stack levels used:    1
 14497 ;; Hardware stack levels required when called:    3
 14498 ;; This function calls:
 14499 ;;		Nothing
 14500 ;; This function is called by:
 14501 ;;		i1_sprintf
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text47
 14506  00623E                     __ptext47:
 14507                           	opt stack 0
 14508  00623E                     i1_isdigit:
 14509                           	opt stack 20
 14510                           
 14511                           ;incstack = 0
 14512                           ;incstack = 0
 14513  00623E  6E12               	movwf	??i1_isdigit& (0+255),c
 14514  006240  0E00               	movlw	0
 14515  006242  6E13               	movwf	i1_isdigit$838,c
 14516  006244  5012               	movf	??i1_isdigit& (0+255),w,c
 14517  006246  0E3A               	movlw	58
 14518  006248  6011               	cpfslt	i1isdigit@c,c
 14519  00624A  D007               	goto	i1l9561
 14520  00624C  0E2F               	movlw	47
 14521  00624E  6411               	cpfsgt	i1isdigit@c,c
 14522  006250  D004               	goto	i1l9561
 14523  006252  6E12               	movwf	??i1_isdigit& (0+255),c
 14524  006254  0E01               	movlw	1
 14525  006256  6E13               	movwf	i1_isdigit$838,c
 14526  006258  5012               	movf	??i1_isdigit& (0+255),w,c
 14527  00625A                     i1l9561:
 14528  00625A  C013  F012         	movff	i1_isdigit$838,??i1_isdigit
 14529  00625E  3012               	rrcf	??i1_isdigit,w,c
 14530  006260  0012               	return	
 14531  006262                     __end_ofi1_isdigit:
 14532                           	opt stack 0
 14533                           pclatu	equ	0xFFB
 14534                           pclath	equ	0xFFA
 14535                           tblptru	equ	0xFF8
 14536                           tblptrh	equ	0xFF7
 14537                           tblptrl	equ	0xFF6
 14538                           tablat	equ	0xFF5
 14539                           prodh	equ	0xFF4
 14540                           prodl	equ	0xFF3
 14541                           intcon	equ	0xFF2
 14542                           intcon2	equ	0xFF1
 14543                           postinc0	equ	0xFEE
 14544                           fsr0h	equ	0xFEA
 14545                           fsr0l	equ	0xFE9
 14546                           wreg	equ	0xFE8
 14547                           fsr1h	equ	0xFE2
 14548                           fsr1l	equ	0xFE1
 14549                           bsr	equ	0xFE0
 14550                           indf2	equ	0xFDF
 14551                           postinc2	equ	0xFDE
 14552                           postdec2	equ	0xFDD
 14553                           fsr2h	equ	0xFDA
 14554                           fsr2l	equ	0xFD9
 14555                           status	equ	0xFD8
 14556                           
 14557 ;; *************** function i1___fttol *****************
 14558 ;; Defined at:
 14559 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;  __fttol         3   38[COMRAM] float 
 14562 ;; Auto vars:     Size  Location     Type
 14563 ;;  __fttol         4   48[COMRAM] unsigned long 
 14564 ;;  __fttol         1   52[COMRAM] unsigned char 
 14565 ;;  __fttol         1   47[COMRAM] unsigned char 
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  4   38[COMRAM] long 
 14568 ;; Registers used:
 14569 ;;		wreg, status,2, status,0
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14575 ;;      Params:         4       0       0       0       0       0       0       0       0
 14576 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14577 ;;      Temps:          5       0       0       0       0       0       0       0       0
 14578 ;;      Totals:        15       0       0       0       0       0       0       0       0
 14579 ;;Total ram usage:       15 bytes
 14580 ;; Hardware stack levels used:    1
 14581 ;; Hardware stack levels required when called:    3
 14582 ;; This function calls:
 14583 ;;		Nothing
 14584 ;; This function is called by:
 14585 ;;		i1_sprintf
 14586 ;; This function uses a non-reentrant model
 14587 ;;
 14588                           
 14589                           	psect	text48
 14590  0050F4                     __ptext48:
 14591                           	opt stack 0
 14592  0050F4                     i1___fttol:
 14593                           	opt stack 20
 14594                           
 14595                           ;incstack = 0
 14596                           ;incstack = 0
 14597  0050F4  0E0F               	movlw	15
 14598  0050F6  6E2B               	movwf	??i1___fttol& (0+255),c
 14599  0050F8  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 14600  0050FC  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 14601  005100  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 14602  005104  282B               	incf	??i1___fttol,w,c
 14603  005106  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 14604  005108  D004               	goto	i1u853_20
 14605  00510A                     i1u853_25:
 14606  00510A  90D8               	bcf	status,0,c
 14607  00510C  322E               	rrcf	??i1___fttol+3,f,c
 14608  00510E  322D               	rrcf	??i1___fttol+2,f,c
 14609  005110  322C               	rrcf	??i1___fttol+1,f,c
 14610  005112                     i1u853_20:
 14611  005112  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 14612  005114  D7FA               	goto	i1u853_25
 14613  005116  502C               	movf	??i1___fttol+1,w,c
 14614  005118  6E35               	movwf	i1___fttol@exp1,c
 14615  00511A  6635               	tstfsz	i1___fttol@exp1& (0+255),c
 14616  00511C  D001               	goto	i1l9513
 14617  00511E  D035               	goto	i1u858_20
 14618  005120                     i1l9513:
 14619  005120  0E17               	movlw	23
 14620  005122  6E2B               	movwf	??i1___fttol& (0+255),c
 14621  005124  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 14622  005128  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 14623  00512C  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 14624  005130  282B               	incf	??i1___fttol,w,c
 14625  005132  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 14626  005134  D004               	goto	i1u855_20
 14627  005136                     i1u855_25:
 14628  005136  90D8               	bcf	status,0,c
 14629  005138  322E               	rrcf	??i1___fttol+3,f,c
 14630  00513A  322D               	rrcf	??i1___fttol+2,f,c
 14631  00513C  322C               	rrcf	??i1___fttol+1,f,c
 14632  00513E                     i1u855_20:
 14633  00513E  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 14634  005140  D7FA               	goto	i1u855_25
 14635  005142  502C               	movf	??i1___fttol+1,w,c
 14636  005144  6E30               	movwf	i1___fttol@sign1,c
 14637  005146  8E28               	bsf	i1___fttol@f1+1,7,c
 14638  005148  0EFF               	movlw	255
 14639  00514A  1627               	andwf	i1___fttol@f1,f,c
 14640  00514C  0EFF               	movlw	255
 14641  00514E  1628               	andwf	i1___fttol@f1+1,f,c
 14642  005150  0E00               	movlw	0
 14643  005152  1629               	andwf	i1___fttol@f1+2,f,c
 14644  005154  5027               	movf	i1___fttol@f1,w,c
 14645  005156  6E31               	movwf	i1___fttol@lval,c
 14646  005158  5028               	movf	i1___fttol@f1+1,w,c
 14647  00515A  6E32               	movwf	i1___fttol@lval+1,c
 14648  00515C  5029               	movf	i1___fttol@f1+2,w,c
 14649  00515E  6E33               	movwf	i1___fttol@lval+2,c
 14650  005160  6A34               	clrf	i1___fttol@lval+3,c
 14651  005162  0E8E               	movlw	142
 14652  005164  5E35               	subwf	i1___fttol@exp1,f,c
 14653  005166  AE35               	btfss	i1___fttol@exp1,7,c
 14654  005168  D00D               	goto	i1l9535
 14655  00516A  5035               	movf	i1___fttol@exp1,w,c
 14656  00516C  0A80               	xorlw	128
 14657  00516E  0F8F               	addlw	143
 14658  005170  A0D8               	btfss	status,0,c
 14659  005172  D00B               	goto	i1u858_20
 14660  005174                     i1l9531:
 14661  005174  90D8               	bcf	status,0,c
 14662  005176  3234               	rrcf	i1___fttol@lval+3,f,c
 14663  005178  3233               	rrcf	i1___fttol@lval+2,f,c
 14664  00517A  3232               	rrcf	i1___fttol@lval+1,f,c
 14665  00517C  3231               	rrcf	i1___fttol@lval,f,c
 14666  00517E  3E35               	incfsz	i1___fttol@exp1,f,c
 14667  005180  D7F9               	goto	i1l9531
 14668  005182  D014               	goto	i1l9545
 14669  005184                     i1l9535:
 14670  005184  0E17               	movlw	23
 14671  005186  6435               	cpfsgt	i1___fttol@exp1,c
 14672  005188  D00F               	goto	i1l9543
 14673  00518A                     i1u858_20:
 14674  00518A  0E00               	movlw	0
 14675  00518C  6E27               	movwf	?i1___fttol,c
 14676  00518E  0E00               	movlw	0
 14677  005190  6E28               	movwf	?i1___fttol+1,c
 14678  005192  0E00               	movlw	0
 14679  005194  6E29               	movwf	?i1___fttol+2,c
 14680  005196  0E00               	movlw	0
 14681  005198  6E2A               	movwf	?i1___fttol+3,c
 14682  00519A  D01B               	goto	i1l794
 14683  00519C                     i1l9541:
 14684  00519C  90D8               	bcf	status,0,c
 14685  00519E  3631               	rlcf	i1___fttol@lval,f,c
 14686  0051A0  3632               	rlcf	i1___fttol@lval+1,f,c
 14687  0051A2  3633               	rlcf	i1___fttol@lval+2,f,c
 14688  0051A4  3634               	rlcf	i1___fttol@lval+3,f,c
 14689  0051A6  0635               	decf	i1___fttol@exp1,f,c
 14690  0051A8                     i1l9543:
 14691  0051A8  6635               	tstfsz	i1___fttol@exp1,c
 14692  0051AA  D7F8               	goto	i1l9541
 14693  0051AC                     i1l9545:
 14694  0051AC  5030               	movf	i1___fttol@sign1,w,c
 14695  0051AE  B4D8               	btfsc	status,2,c
 14696  0051B0  D008               	goto	i1l9549
 14697  0051B2  1E34               	comf	i1___fttol@lval+3,f,c
 14698  0051B4  1E33               	comf	i1___fttol@lval+2,f,c
 14699  0051B6  1E32               	comf	i1___fttol@lval+1,f,c
 14700  0051B8  6C31               	negf	i1___fttol@lval,c
 14701  0051BA  0E00               	movlw	0
 14702  0051BC  2232               	addwfc	i1___fttol@lval+1,f,c
 14703  0051BE  2233               	addwfc	i1___fttol@lval+2,f,c
 14704  0051C0  2234               	addwfc	i1___fttol@lval+3,f,c
 14705  0051C2                     i1l9549:
 14706  0051C2  C031  F027         	movff	i1___fttol@lval,?i1___fttol
 14707  0051C6  C032  F028         	movff	i1___fttol@lval+1,?i1___fttol+1
 14708  0051CA  C033  F029         	movff	i1___fttol@lval+2,?i1___fttol+2
 14709  0051CE  C034  F02A         	movff	i1___fttol@lval+3,?i1___fttol+3
 14710  0051D2                     i1l794:
 14711  0051D2  0012               	return	
 14712  0051D4                     __end_ofi1___fttol:
 14713                           	opt stack 0
 14714                           pclatu	equ	0xFFB
 14715                           pclath	equ	0xFFA
 14716                           tblptru	equ	0xFF8
 14717                           tblptrh	equ	0xFF7
 14718                           tblptrl	equ	0xFF6
 14719                           tablat	equ	0xFF5
 14720                           prodh	equ	0xFF4
 14721                           prodl	equ	0xFF3
 14722                           intcon	equ	0xFF2
 14723                           intcon2	equ	0xFF1
 14724                           postinc0	equ	0xFEE
 14725                           fsr0h	equ	0xFEA
 14726                           fsr0l	equ	0xFE9
 14727                           wreg	equ	0xFE8
 14728                           fsr1h	equ	0xFE2
 14729                           fsr1l	equ	0xFE1
 14730                           bsr	equ	0xFE0
 14731                           indf2	equ	0xFDF
 14732                           postinc2	equ	0xFDE
 14733                           postdec2	equ	0xFDD
 14734                           fsr2h	equ	0xFDA
 14735                           fsr2l	equ	0xFD9
 14736                           status	equ	0xFD8
 14737                           
 14738 ;; *************** function i1___ftneg *****************
 14739 ;; Defined at:
 14740 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
 14741 ;; Parameters:    Size  Location     Type
 14742 ;;  __ftneg         3   16[COMRAM] float 
 14743 ;; Auto vars:     Size  Location     Type
 14744 ;;		None
 14745 ;; Return value:  Size  Location     Type
 14746 ;;                  3   16[COMRAM] float 
 14747 ;; Registers used:
 14748 ;;		wreg, status,2, status,0
 14749 ;; Tracked objects:
 14750 ;;		On entry : 0/0
 14751 ;;		On exit  : 0/0
 14752 ;;		Unchanged: 0/0
 14753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14754 ;;      Params:         3       0       0       0       0       0       0       0       0
 14755 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14756 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14757 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14758 ;;Total ram usage:        3 bytes
 14759 ;; Hardware stack levels used:    1
 14760 ;; Hardware stack levels required when called:    3
 14761 ;; This function calls:
 14762 ;;		Nothing
 14763 ;; This function is called by:
 14764 ;;		i1_sprintf
 14765 ;; This function uses a non-reentrant model
 14766 ;;
 14767                           
 14768                           	psect	text49
 14769  006218                     __ptext49:
 14770                           	opt stack 0
 14771  006218                     i1___ftneg:
 14772                           	opt stack 20
 14773                           
 14774                           ;incstack = 0
 14775                           ;incstack = 0
 14776  006218  0E7F               	movlw	127
 14777  00621A  1413               	andwf	i1___ftneg@f1+2,w,c
 14778  00621C  1012               	iorwf	i1___ftneg@f1+1,w,c
 14779  00621E  1011               	iorwf	i1___ftneg@f1,w,c
 14780  006220  B4D8               	btfsc	status,2,c
 14781  006222  D006               	goto	i1l784
 14782  006224  0E00               	movlw	0
 14783  006226  1A11               	xorwf	i1___ftneg@f1,f,c
 14784  006228  0E00               	movlw	0
 14785  00622A  1A12               	xorwf	i1___ftneg@f1+1,f,c
 14786  00622C  0E80               	movlw	128
 14787  00622E  1A13               	xorwf	i1___ftneg@f1+2,f,c
 14788  006230                     i1l784:
 14789  006230  C011  F011         	movff	i1___ftneg@f1,?i1___ftneg
 14790  006234  C012  F012         	movff	i1___ftneg@f1+1,?i1___ftneg+1
 14791  006238  C013  F013         	movff	i1___ftneg@f1+2,?i1___ftneg+2
 14792  00623C  0012               	return	
 14793  00623E                     __end_ofi1___ftneg:
 14794                           	opt stack 0
 14795                           pclatu	equ	0xFFB
 14796                           pclath	equ	0xFFA
 14797                           tblptru	equ	0xFF8
 14798                           tblptrh	equ	0xFF7
 14799                           tblptrl	equ	0xFF6
 14800                           tablat	equ	0xFF5
 14801                           prodh	equ	0xFF4
 14802                           prodl	equ	0xFF3
 14803                           intcon	equ	0xFF2
 14804                           intcon2	equ	0xFF1
 14805                           postinc0	equ	0xFEE
 14806                           fsr0h	equ	0xFEA
 14807                           fsr0l	equ	0xFE9
 14808                           wreg	equ	0xFE8
 14809                           fsr1h	equ	0xFE2
 14810                           fsr1l	equ	0xFE1
 14811                           bsr	equ	0xFE0
 14812                           indf2	equ	0xFDF
 14813                           postinc2	equ	0xFDE
 14814                           postdec2	equ	0xFDD
 14815                           fsr2h	equ	0xFDA
 14816                           fsr2l	equ	0xFD9
 14817                           status	equ	0xFD8
 14818                           
 14819 ;; *************** function i1___ftge *****************
 14820 ;; Defined at:
 14821 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
 14822 ;; Parameters:    Size  Location     Type
 14823 ;;  __ftge          3   16[COMRAM] float 
 14824 ;;  __ftge          3   19[COMRAM] float 
 14825 ;; Auto vars:     Size  Location     Type
 14826 ;;		None
 14827 ;; Return value:  Size  Location     Type
 14828 ;;		None               void
 14829 ;; Registers used:
 14830 ;;		wreg, status,2, status,0
 14831 ;; Tracked objects:
 14832 ;;		On entry : 0/0
 14833 ;;		On exit  : 0/0
 14834 ;;		Unchanged: 0/0
 14835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14836 ;;      Params:         6       0       0       0       0       0       0       0       0
 14837 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14838 ;;      Temps:          3       0       0       0       0       0       0       0       0
 14839 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14840 ;;Total ram usage:        9 bytes
 14841 ;; Hardware stack levels used:    1
 14842 ;; Hardware stack levels required when called:    3
 14843 ;; This function calls:
 14844 ;;		Nothing
 14845 ;; This function is called by:
 14846 ;;		i1_sprintf
 14847 ;; This function uses a non-reentrant model
 14848 ;;
 14849                           
 14850                           	psect	text50
 14851  0056DA                     __ptext50:
 14852                           	opt stack 0
 14853  0056DA                     i1___ftge:
 14854                           	opt stack 20
 14855                           
 14856                           ;incstack = 0
 14857                           ;incstack = 0
 14858  0056DA  AE13               	btfss	i1___ftge@ff1+2,7,c
 14859  0056DC  D016               	goto	i1l9435
 14860  0056DE  C011  F017         	movff	i1___ftge@ff1,??i1___ftge
 14861  0056E2  C012  F018         	movff	i1___ftge@ff1+1,??i1___ftge+1
 14862  0056E6  C013  F019         	movff	i1___ftge@ff1+2,??i1___ftge+2
 14863  0056EA  1E17               	comf	??i1___ftge,f,c
 14864  0056EC  1E18               	comf	??i1___ftge+1,f,c
 14865  0056EE  1E19               	comf	??i1___ftge+2,f,c
 14866  0056F0  2A17               	incf	??i1___ftge,f,c
 14867  0056F2  0E00               	movlw	0
 14868  0056F4  2218               	addwfc	??i1___ftge+1,f,c
 14869  0056F6  2219               	addwfc	??i1___ftge+2,f,c
 14870  0056F8  0E00               	movlw	0
 14871  0056FA  2417               	addwf	??i1___ftge,w,c
 14872  0056FC  6E11               	movwf	i1___ftge@ff1,c
 14873  0056FE  0E00               	movlw	0
 14874  005700  2018               	addwfc	??i1___ftge+1,w,c
 14875  005702  6E12               	movwf	i1___ftge@ff1+1,c
 14876  005704  0E80               	movlw	128
 14877  005706  2019               	addwfc	??i1___ftge+2,w,c
 14878  005708  6E13               	movwf	i1___ftge@ff1+2,c
 14879  00570A                     i1l9435:
 14880  00570A  AE16               	btfss	i1___ftge@ff2+2,7,c
 14881  00570C  D016               	goto	i1l9439
 14882  00570E  C014  F017         	movff	i1___ftge@ff2,??i1___ftge
 14883  005712  C015  F018         	movff	i1___ftge@ff2+1,??i1___ftge+1
 14884  005716  C016  F019         	movff	i1___ftge@ff2+2,??i1___ftge+2
 14885  00571A  1E17               	comf	??i1___ftge,f,c
 14886  00571C  1E18               	comf	??i1___ftge+1,f,c
 14887  00571E  1E19               	comf	??i1___ftge+2,f,c
 14888  005720  2A17               	incf	??i1___ftge,f,c
 14889  005722  0E00               	movlw	0
 14890  005724  2218               	addwfc	??i1___ftge+1,f,c
 14891  005726  2219               	addwfc	??i1___ftge+2,f,c
 14892  005728  0E00               	movlw	0
 14893  00572A  2417               	addwf	??i1___ftge,w,c
 14894  00572C  6E14               	movwf	i1___ftge@ff2,c
 14895  00572E  0E00               	movlw	0
 14896  005730  2018               	addwfc	??i1___ftge+1,w,c
 14897  005732  6E15               	movwf	i1___ftge@ff2+1,c
 14898  005734  0E80               	movlw	128
 14899  005736  2019               	addwfc	??i1___ftge+2,w,c
 14900  005738  6E16               	movwf	i1___ftge@ff2+2,c
 14901  00573A                     i1l9439:
 14902  00573A  0E00               	movlw	0
 14903  00573C  1A11               	xorwf	i1___ftge@ff1,f,c
 14904  00573E  0E00               	movlw	0
 14905  005740  1A12               	xorwf	i1___ftge@ff1+1,f,c
 14906  005742  0E80               	movlw	128
 14907  005744  1A13               	xorwf	i1___ftge@ff1+2,f,c
 14908  005746  0E00               	movlw	0
 14909  005748  1A14               	xorwf	i1___ftge@ff2,f,c
 14910  00574A  0E00               	movlw	0
 14911  00574C  1A15               	xorwf	i1___ftge@ff2+1,f,c
 14912  00574E  0E80               	movlw	128
 14913  005750  1A16               	xorwf	i1___ftge@ff2+2,f,c
 14914  005752  5014               	movf	i1___ftge@ff2,w,c
 14915  005754  5C11               	subwf	i1___ftge@ff1,w,c
 14916  005756  5015               	movf	i1___ftge@ff2+1,w,c
 14917  005758  5812               	subwfb	i1___ftge@ff1+1,w,c
 14918  00575A  5016               	movf	i1___ftge@ff2+2,w,c
 14919  00575C  5813               	subwfb	i1___ftge@ff1+2,w,c
 14920  00575E  B0D8               	btfsc	status,0,c
 14921  005760  D002               	goto	i1l9445
 14922  005762  90D8               	bcf	status,0,c
 14923  005764  D001               	goto	i1l768
 14924  005766                     i1l9445:
 14925  005766  80D8               	bsf	status,0,c
 14926  005768                     i1l768:
 14927  005768  0012               	return	
 14928  00576A                     __end_ofi1___ftge:
 14929                           	opt stack 0
 14930                           pclatu	equ	0xFFB
 14931                           pclath	equ	0xFFA
 14932                           tblptru	equ	0xFF8
 14933                           tblptrh	equ	0xFF7
 14934                           tblptrl	equ	0xFF6
 14935                           tablat	equ	0xFF5
 14936                           prodh	equ	0xFF4
 14937                           prodl	equ	0xFF3
 14938                           intcon	equ	0xFF2
 14939                           intcon2	equ	0xFF1
 14940                           postinc0	equ	0xFEE
 14941                           fsr0h	equ	0xFEA
 14942                           fsr0l	equ	0xFE9
 14943                           wreg	equ	0xFE8
 14944                           fsr1h	equ	0xFE2
 14945                           fsr1l	equ	0xFE1
 14946                           bsr	equ	0xFE0
 14947                           indf2	equ	0xFDF
 14948                           postinc2	equ	0xFDE
 14949                           postdec2	equ	0xFDD
 14950                           fsr2h	equ	0xFDA
 14951                           fsr2l	equ	0xFD9
 14952                           status	equ	0xFD8
 14953                           
 14954 ;; *************** function i1__tdiv_to_l_ *****************
 14955 ;; Defined at:
 14956 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;  _tdiv_to_l_     3   16[COMRAM] float 
 14959 ;;  _tdiv_to_l_     3   19[COMRAM] float 
 14960 ;; Auto vars:     Size  Location     Type
 14961 ;;  _tdiv_to_l_     4   27[COMRAM] unsigned long 
 14962 ;;  _tdiv_to_l_     1   32[COMRAM] unsigned char 
 14963 ;;  _tdiv_to_l_     1   31[COMRAM] unsigned char 
 14964 ;; Return value:  Size  Location     Type
 14965 ;;                  4   16[COMRAM] unsigned long 
 14966 ;; Registers used:
 14967 ;;		wreg, status,2, status,0
 14968 ;; Tracked objects:
 14969 ;;		On entry : 0/0
 14970 ;;		On exit  : 0/0
 14971 ;;		Unchanged: 0/0
 14972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14973 ;;      Params:         6       0       0       0       0       0       0       0       0
 14974 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14975 ;;      Temps:          5       0       0       0       0       0       0       0       0
 14976 ;;      Totals:        17       0       0       0       0       0       0       0       0
 14977 ;;Total ram usage:       17 bytes
 14978 ;; Hardware stack levels used:    1
 14979 ;; Hardware stack levels required when called:    3
 14980 ;; This function calls:
 14981 ;;		Nothing
 14982 ;; This function is called by:
 14983 ;;		i1_sprintf
 14984 ;; This function uses a non-reentrant model
 14985 ;;
 14986                           
 14987                           	psect	text51
 14988  0045BA                     __ptext51:
 14989                           	opt stack 0
 14990  0045BA                     i1__tdiv_to_l_:
 14991                           	opt stack 20
 14992                           
 14993                           ;incstack = 0
 14994                           ;incstack = 0
 14995  0045BA  0E0F               	movlw	15
 14996  0045BC  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 14997  0045BE  C011  F018         	movff	i1__tdiv_to_l_@f1,??i1__tdiv_to_l_+1
 14998  0045C2  C012  F019         	movff	i1__tdiv_to_l_@f1+1,??i1__tdiv_to_l_+2
 14999  0045C6  C013  F01A         	movff	i1__tdiv_to_l_@f1+2,??i1__tdiv_to_l_+3
 15000  0045CA  2817               	incf	??i1__tdiv_to_l_,w,c
 15001  0045CC  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 15002  0045CE  D004               	goto	i1u834_20
 15003  0045D0                     i1u834_25:
 15004  0045D0  90D8               	bcf	status,0,c
 15005  0045D2  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 15006  0045D4  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 15007  0045D6  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 15008  0045D8                     i1u834_20:
 15009  0045D8  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 15010  0045DA  D7FA               	goto	i1u834_25
 15011  0045DC  5018               	movf	??i1__tdiv_to_l_+1,w,c
 15012  0045DE  6E21               	movwf	i1__tdiv_to_l_@exp1,c
 15013  0045E0  6621               	tstfsz	i1__tdiv_to_l_@exp1& (0+255),c
 15014  0045E2  D001               	goto	i1l9381
 15015  0045E4  D061               	goto	i1u841_20
 15016  0045E6                     i1l9381:
 15017  0045E6  0E0F               	movlw	15
 15018  0045E8  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15019  0045EA  C014  F018         	movff	i1__tdiv_to_l_@f2,??i1__tdiv_to_l_+1
 15020  0045EE  C015  F019         	movff	i1__tdiv_to_l_@f2+1,??i1__tdiv_to_l_+2
 15021  0045F2  C016  F01A         	movff	i1__tdiv_to_l_@f2+2,??i1__tdiv_to_l_+3
 15022  0045F6  2817               	incf	??i1__tdiv_to_l_,w,c
 15023  0045F8  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 15024  0045FA  D004               	goto	i1u836_20
 15025  0045FC                     i1u836_25:
 15026  0045FC  90D8               	bcf	status,0,c
 15027  0045FE  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 15028  004600  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 15029  004602  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 15030  004604                     i1u836_20:
 15031  004604  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 15032  004606  D7FA               	goto	i1u836_25
 15033  004608  5018               	movf	??i1__tdiv_to_l_+1,w,c
 15034  00460A  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 15035  00460C  6620               	tstfsz	i1__tdiv_to_l_@cntr& (0+255),c
 15036  00460E  D001               	goto	i1l9387
 15037  004610  D04B               	goto	i1u841_20
 15038  004612                     i1l9387:
 15039  004612  8E12               	bsf	i1__tdiv_to_l_@f1+1,7,c
 15040  004614  0EFF               	movlw	255
 15041  004616  1611               	andwf	i1__tdiv_to_l_@f1,f,c
 15042  004618  0EFF               	movlw	255
 15043  00461A  1612               	andwf	i1__tdiv_to_l_@f1+1,f,c
 15044  00461C  0E00               	movlw	0
 15045  00461E  1613               	andwf	i1__tdiv_to_l_@f1+2,f,c
 15046  004620  8E15               	bsf	i1__tdiv_to_l_@f2+1,7,c
 15047  004622  0EFF               	movlw	255
 15048  004624  1614               	andwf	i1__tdiv_to_l_@f2,f,c
 15049  004626  0EFF               	movlw	255
 15050  004628  1615               	andwf	i1__tdiv_to_l_@f2+1,f,c
 15051  00462A  0E00               	movlw	0
 15052  00462C  1616               	andwf	i1__tdiv_to_l_@f2+2,f,c
 15053  00462E  0E00               	movlw	0
 15054  004630  6E1C               	movwf	i1__tdiv_to_l_@quot,c
 15055  004632  0E00               	movlw	0
 15056  004634  6E1D               	movwf	i1__tdiv_to_l_@quot+1,c
 15057  004636  0E00               	movlw	0
 15058  004638  6E1E               	movwf	i1__tdiv_to_l_@quot+2,c
 15059  00463A  0E00               	movlw	0
 15060  00463C  6E1F               	movwf	i1__tdiv_to_l_@quot+3,c
 15061  00463E  0E7F               	movlw	127
 15062  004640  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 15063  004642  5020               	movf	i1__tdiv_to_l_@cntr,w,c
 15064  004644  0F98               	addlw	152
 15065  004646  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 15066  004648  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15067  00464A  0E18               	movlw	24
 15068  00464C  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 15069  00464E  5017               	movf	??i1__tdiv_to_l_& (0+255),w,c
 15070  004650                     i1l9401:
 15071  004650  90D8               	bcf	status,0,c
 15072  004652  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 15073  004654  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 15074  004656  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 15075  004658  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 15076  00465A  5014               	movf	i1__tdiv_to_l_@f2,w,c
 15077  00465C  5C11               	subwf	i1__tdiv_to_l_@f1,w,c
 15078  00465E  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 15079  004660  5812               	subwfb	i1__tdiv_to_l_@f1+1,w,c
 15080  004662  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 15081  004664  5813               	subwfb	i1__tdiv_to_l_@f1+2,w,c
 15082  004666  A0D8               	btfss	status,0,c
 15083  004668  D007               	goto	i1l753
 15084  00466A  5014               	movf	i1__tdiv_to_l_@f2,w,c
 15085  00466C  5E11               	subwf	i1__tdiv_to_l_@f1,f,c
 15086  00466E  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 15087  004670  5A12               	subwfb	i1__tdiv_to_l_@f1+1,f,c
 15088  004672  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 15089  004674  5A13               	subwfb	i1__tdiv_to_l_@f1+2,f,c
 15090  004676  801C               	bsf	i1__tdiv_to_l_@quot,0,c
 15091  004678                     i1l753:
 15092  004678  90D8               	bcf	status,0,c
 15093  00467A  3611               	rlcf	i1__tdiv_to_l_@f1,f,c
 15094  00467C  3612               	rlcf	i1__tdiv_to_l_@f1+1,f,c
 15095  00467E  3613               	rlcf	i1__tdiv_to_l_@f1+2,f,c
 15096  004680  2E20               	decfsz	i1__tdiv_to_l_@cntr,f,c
 15097  004682  D7E6               	goto	i1l9401
 15098  004684  AE21               	btfss	i1__tdiv_to_l_@exp1,7,c
 15099  004686  D00D               	goto	i1l9421
 15100  004688  5021               	movf	i1__tdiv_to_l_@exp1,w,c
 15101  00468A  0A80               	xorlw	128
 15102  00468C  0F97               	addlw	151
 15103  00468E  A0D8               	btfss	status,0,c
 15104  004690  D00B               	goto	i1u841_20
 15105  004692                     i1l9417:
 15106  004692  90D8               	bcf	status,0,c
 15107  004694  321F               	rrcf	i1__tdiv_to_l_@quot+3,f,c
 15108  004696  321E               	rrcf	i1__tdiv_to_l_@quot+2,f,c
 15109  004698  321D               	rrcf	i1__tdiv_to_l_@quot+1,f,c
 15110  00469A  321C               	rrcf	i1__tdiv_to_l_@quot,f,c
 15111  00469C  3E21               	incfsz	i1__tdiv_to_l_@exp1,f,c
 15112  00469E  D7F9               	goto	i1l9417
 15113  0046A0  D014               	goto	i1l759
 15114  0046A2                     i1l9421:
 15115  0046A2  0E17               	movlw	23
 15116  0046A4  6421               	cpfsgt	i1__tdiv_to_l_@exp1,c
 15117  0046A6  D00F               	goto	i1l9429
 15118  0046A8                     i1u841_20:
 15119  0046A8  0E00               	movlw	0
 15120  0046AA  6E11               	movwf	?i1__tdiv_to_l_,c
 15121  0046AC  0E00               	movlw	0
 15122  0046AE  6E12               	movwf	?i1__tdiv_to_l_+1,c
 15123  0046B0  0E00               	movlw	0
 15124  0046B2  6E13               	movwf	?i1__tdiv_to_l_+2,c
 15125  0046B4  0E00               	movlw	0
 15126  0046B6  6E14               	movwf	?i1__tdiv_to_l_+3,c
 15127  0046B8  D010               	goto	i1l750
 15128  0046BA                     i1l9427:
 15129  0046BA  90D8               	bcf	status,0,c
 15130  0046BC  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 15131  0046BE  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 15132  0046C0  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 15133  0046C2  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 15134  0046C4  0621               	decf	i1__tdiv_to_l_@exp1,f,c
 15135  0046C6                     i1l9429:
 15136  0046C6  6621               	tstfsz	i1__tdiv_to_l_@exp1,c
 15137  0046C8  D7F8               	goto	i1l9427
 15138  0046CA                     i1l759:
 15139  0046CA  C01C  F011         	movff	i1__tdiv_to_l_@quot,?i1__tdiv_to_l_
 15140  0046CE  C01D  F012         	movff	i1__tdiv_to_l_@quot+1,?i1__tdiv_to_l_+1
 15141  0046D2  C01E  F013         	movff	i1__tdiv_to_l_@quot+2,?i1__tdiv_to_l_+2
 15142  0046D6  C01F  F014         	movff	i1__tdiv_to_l_@quot+3,?i1__tdiv_to_l_+3
 15143  0046DA                     i1l750:
 15144  0046DA  0012               	return	
 15145  0046DC                     __end_ofi1__tdiv_to_l_:
 15146                           	opt stack 0
 15147                           pclatu	equ	0xFFB
 15148                           pclath	equ	0xFFA
 15149                           tblptru	equ	0xFF8
 15150                           tblptrh	equ	0xFF7
 15151                           tblptrl	equ	0xFF6
 15152                           tablat	equ	0xFF5
 15153                           prodh	equ	0xFF4
 15154                           prodl	equ	0xFF3
 15155                           intcon	equ	0xFF2
 15156                           intcon2	equ	0xFF1
 15157                           postinc0	equ	0xFEE
 15158                           fsr0h	equ	0xFEA
 15159                           fsr0l	equ	0xFE9
 15160                           wreg	equ	0xFE8
 15161                           fsr1h	equ	0xFE2
 15162                           fsr1l	equ	0xFE1
 15163                           bsr	equ	0xFE0
 15164                           indf2	equ	0xFDF
 15165                           postinc2	equ	0xFDE
 15166                           postdec2	equ	0xFDD
 15167                           fsr2h	equ	0xFDA
 15168                           fsr2l	equ	0xFD9
 15169                           status	equ	0xFD8
 15170                           
 15171 ;; *************** function i1__div_to_l_ *****************
 15172 ;; Defined at:
 15173 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
 15174 ;; Parameters:    Size  Location     Type
 15175 ;;  _div_to_l_      3   16[COMRAM] unsigned long 
 15176 ;;  _div_to_l_      3   19[COMRAM] unsigned long 
 15177 ;; Auto vars:     Size  Location     Type
 15178 ;;  _div_to_l_      4   23[COMRAM] unsigned long 
 15179 ;;  _div_to_l_      1   28[COMRAM] unsigned char 
 15180 ;;  _div_to_l_      1   27[COMRAM] unsigned char 
 15181 ;; Return value:  Size  Location     Type
 15182 ;;                  4   16[COMRAM] unsigned long 
 15183 ;; Registers used:
 15184 ;;		wreg, status,2, status,0
 15185 ;; Tracked objects:
 15186 ;;		On entry : 0/0
 15187 ;;		On exit  : 0/0
 15188 ;;		Unchanged: 0/0
 15189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15190 ;;      Params:         6       0       0       0       0       0       0       0       0
 15191 ;;      Locals:         6       0       0       0       0       0       0       0       0
 15192 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15193 ;;      Totals:        13       0       0       0       0       0       0       0       0
 15194 ;;Total ram usage:       13 bytes
 15195 ;; Hardware stack levels used:    1
 15196 ;; Hardware stack levels required when called:    3
 15197 ;; This function calls:
 15198 ;;		Nothing
 15199 ;; This function is called by:
 15200 ;;		i1_sprintf
 15201 ;; This function uses a non-reentrant model
 15202 ;;
 15203                           
 15204                           	psect	text52
 15205  004E22                     __ptext52:
 15206                           	opt stack 0
 15207  004E22                     i1__div_to_l_:
 15208                           	opt stack 20
 15209                           
 15210                           ;incstack = 0
 15211                           ;incstack = 0
 15212  004E22  3413               	rlcf	(i1__div_to_l_@f1+2)& (0+255),w,c
 15213  004E24  3414               	rlcf	(i1__div_to_l_@f1+3)& (0+255),w,c
 15214  004E26  6E1D               	movwf	i1__div_to_l_@exp1,c
 15215  004E28  661D               	tstfsz	i1__div_to_l_@exp1& (0+255),c
 15216  004E2A  D001               	goto	i1l9177
 15217  004E2C  D05A               	goto	i1u799_20
 15218  004E2E                     i1l9177:
 15219  004E2E  3416               	rlcf	(i1__div_to_l_@f2+2)& (0+255),w,c
 15220  004E30  3417               	rlcf	(i1__div_to_l_@f2+3)& (0+255),w,c
 15221  004E32  6E1C               	movwf	i1__div_to_l_@cntr,c
 15222  004E34  661C               	tstfsz	i1__div_to_l_@cntr& (0+255),c
 15223  004E36  D001               	goto	i1l9183
 15224  004E38  D054               	goto	i1u799_20
 15225  004E3A                     i1l9183:
 15226  004E3A  8E13               	bsf	i1__div_to_l_@f1+2,7,c
 15227  004E3C  0EFF               	movlw	255
 15228  004E3E  1611               	andwf	i1__div_to_l_@f1,f,c
 15229  004E40  0EFF               	movlw	255
 15230  004E42  1612               	andwf	i1__div_to_l_@f1+1,f,c
 15231  004E44  0EFF               	movlw	255
 15232  004E46  1613               	andwf	i1__div_to_l_@f1+2,f,c
 15233  004E48  0E00               	movlw	0
 15234  004E4A  1614               	andwf	i1__div_to_l_@f1+3,f,c
 15235  004E4C  8E16               	bsf	i1__div_to_l_@f2+2,7,c
 15236  004E4E  0EFF               	movlw	255
 15237  004E50  1614               	andwf	i1__div_to_l_@f2,f,c
 15238  004E52  0EFF               	movlw	255
 15239  004E54  1615               	andwf	i1__div_to_l_@f2+1,f,c
 15240  004E56  0EFF               	movlw	255
 15241  004E58  1616               	andwf	i1__div_to_l_@f2+2,f,c
 15242  004E5A  0E00               	movlw	0
 15243  004E5C  1617               	andwf	i1__div_to_l_@f2+3,f,c
 15244  004E5E  0E00               	movlw	0
 15245  004E60  6E18               	movwf	i1__div_to_l_@quot,c
 15246  004E62  0E00               	movlw	0
 15247  004E64  6E19               	movwf	i1__div_to_l_@quot+1,c
 15248  004E66  0E00               	movlw	0
 15249  004E68  6E1A               	movwf	i1__div_to_l_@quot+2,c
 15250  004E6A  0E00               	movlw	0
 15251  004E6C  6E1B               	movwf	i1__div_to_l_@quot+3,c
 15252  004E6E  0E7F               	movlw	127
 15253  004E70  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 15254  004E72  501C               	movf	i1__div_to_l_@cntr,w,c
 15255  004E74  0FA0               	addlw	160
 15256  004E76  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 15257  004E78  6E17               	movwf	??i1__div_to_l_& (0+255),c
 15258  004E7A  0E20               	movlw	32
 15259  004E7C  6E1C               	movwf	i1__div_to_l_@cntr,c
 15260  004E7E  5017               	movf	??i1__div_to_l_& (0+255),w,c
 15261  004E80                     i1l634:
 15262  004E80  90D8               	bcf	status,0,c
 15263  004E82  3618               	rlcf	i1__div_to_l_@quot,f,c
 15264  004E84  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 15265  004E86  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 15266  004E88  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 15267  004E8A  5014               	movf	i1__div_to_l_@f2,w,c
 15268  004E8C  5C11               	subwf	i1__div_to_l_@f1,w,c
 15269  004E8E  5015               	movf	i1__div_to_l_@f2+1,w,c
 15270  004E90  5812               	subwfb	i1__div_to_l_@f1+1,w,c
 15271  004E92  5016               	movf	i1__div_to_l_@f2+2,w,c
 15272  004E94  5813               	subwfb	i1__div_to_l_@f1+2,w,c
 15273  004E96  5017               	movf	i1__div_to_l_@f2+3,w,c
 15274  004E98  5814               	subwfb	i1__div_to_l_@f1+3,w,c
 15275  004E9A  A0D8               	btfss	status,0,c
 15276  004E9C  D009               	goto	i1l9203
 15277  004E9E  5014               	movf	i1__div_to_l_@f2,w,c
 15278  004EA0  5E11               	subwf	i1__div_to_l_@f1,f,c
 15279  004EA2  5015               	movf	i1__div_to_l_@f2+1,w,c
 15280  004EA4  5A12               	subwfb	i1__div_to_l_@f1+1,f,c
 15281  004EA6  5016               	movf	i1__div_to_l_@f2+2,w,c
 15282  004EA8  5A13               	subwfb	i1__div_to_l_@f1+2,f,c
 15283  004EAA  5017               	movf	i1__div_to_l_@f2+3,w,c
 15284  004EAC  5A14               	subwfb	i1__div_to_l_@f1+3,f,c
 15285  004EAE  8018               	bsf	i1__div_to_l_@quot,0,c
 15286  004EB0                     i1l9203:
 15287  004EB0  90D8               	bcf	status,0,c
 15288  004EB2  3611               	rlcf	i1__div_to_l_@f1,f,c
 15289  004EB4  3612               	rlcf	i1__div_to_l_@f1+1,f,c
 15290  004EB6  3613               	rlcf	i1__div_to_l_@f1+2,f,c
 15291  004EB8  3614               	rlcf	i1__div_to_l_@f1+3,f,c
 15292  004EBA  2E1C               	decfsz	i1__div_to_l_@cntr,f,c
 15293  004EBC  D7E1               	goto	i1l634
 15294  004EBE  AE1D               	btfss	i1__div_to_l_@exp1,7,c
 15295  004EC0  D00D               	goto	i1l9217
 15296  004EC2  501D               	movf	i1__div_to_l_@exp1,w,c
 15297  004EC4  0A80               	xorlw	128
 15298  004EC6  0F9F               	addlw	159
 15299  004EC8  A0D8               	btfss	status,0,c
 15300  004ECA  D00B               	goto	i1u799_20
 15301  004ECC                     i1l9213:
 15302  004ECC  90D8               	bcf	status,0,c
 15303  004ECE  321B               	rrcf	i1__div_to_l_@quot+3,f,c
 15304  004ED0  321A               	rrcf	i1__div_to_l_@quot+2,f,c
 15305  004ED2  3219               	rrcf	i1__div_to_l_@quot+1,f,c
 15306  004ED4  3218               	rrcf	i1__div_to_l_@quot,f,c
 15307  004ED6  3E1D               	incfsz	i1__div_to_l_@exp1,f,c
 15308  004ED8  D7F9               	goto	i1l9213
 15309  004EDA  D014               	goto	i1l641
 15310  004EDC                     i1l9217:
 15311  004EDC  0E1F               	movlw	31
 15312  004EDE  641D               	cpfsgt	i1__div_to_l_@exp1,c
 15313  004EE0  D00F               	goto	i1l9225
 15314  004EE2                     i1u799_20:
 15315  004EE2  0E00               	movlw	0
 15316  004EE4  6E11               	movwf	?i1__div_to_l_,c
 15317  004EE6  0E00               	movlw	0
 15318  004EE8  6E12               	movwf	?i1__div_to_l_+1,c
 15319  004EEA  0E00               	movlw	0
 15320  004EEC  6E13               	movwf	?i1__div_to_l_+2,c
 15321  004EEE  0E00               	movlw	0
 15322  004EF0  6E14               	movwf	?i1__div_to_l_+3,c
 15323  004EF2  D010               	goto	i1l632
 15324  004EF4                     i1l9223:
 15325  004EF4  90D8               	bcf	status,0,c
 15326  004EF6  3618               	rlcf	i1__div_to_l_@quot,f,c
 15327  004EF8  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 15328  004EFA  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 15329  004EFC  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 15330  004EFE  061D               	decf	i1__div_to_l_@exp1,f,c
 15331  004F00                     i1l9225:
 15332  004F00  661D               	tstfsz	i1__div_to_l_@exp1,c
 15333  004F02  D7F8               	goto	i1l9223
 15334  004F04                     i1l641:
 15335  004F04  C018  F011         	movff	i1__div_to_l_@quot,?i1__div_to_l_
 15336  004F08  C019  F012         	movff	i1__div_to_l_@quot+1,?i1__div_to_l_+1
 15337  004F0C  C01A  F013         	movff	i1__div_to_l_@quot+2,?i1__div_to_l_+2
 15338  004F10  C01B  F014         	movff	i1__div_to_l_@quot+3,?i1__div_to_l_+3
 15339  004F14                     i1l632:
 15340  004F14  0012               	return	
 15341  004F16                     __end_ofi1__div_to_l_:
 15342                           	opt stack 0
 15343                           pclatu	equ	0xFFB
 15344                           pclath	equ	0xFFA
 15345                           tblptru	equ	0xFF8
 15346                           tblptrh	equ	0xFF7
 15347                           tblptrl	equ	0xFF6
 15348                           tablat	equ	0xFF5
 15349                           prodh	equ	0xFF4
 15350                           prodl	equ	0xFF3
 15351                           intcon	equ	0xFF2
 15352                           intcon2	equ	0xFF1
 15353                           postinc0	equ	0xFEE
 15354                           fsr0h	equ	0xFEA
 15355                           fsr0l	equ	0xFE9
 15356                           wreg	equ	0xFE8
 15357                           fsr1h	equ	0xFE2
 15358                           fsr1l	equ	0xFE1
 15359                           bsr	equ	0xFE0
 15360                           indf2	equ	0xFDF
 15361                           postinc2	equ	0xFDE
 15362                           postdec2	equ	0xFDD
 15363                           fsr2h	equ	0xFDA
 15364                           fsr2l	equ	0xFD9
 15365                           status	equ	0xFD8
 15366                           
 15367 ;; *************** function i1___asftsub *****************
 15368 ;; Defined at:
 15369 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
 15370 ;; Parameters:    Size  Location     Type
 15371 ;;  __asftsub       2   44[COMRAM] PTR float 
 15372 ;;		 -> sprintf@fval(3), 
 15373 ;;  __asftsub       3   46[COMRAM] float 
 15374 ;; Auto vars:     Size  Location     Type
 15375 ;;		None
 15376 ;; Return value:  Size  Location     Type
 15377 ;;                  3   44[COMRAM] float 
 15378 ;; Registers used:
 15379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15380 ;; Tracked objects:
 15381 ;;		On entry : 0/0
 15382 ;;		On exit  : 0/0
 15383 ;;		Unchanged: 0/0
 15384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15385 ;;      Params:         5       0       0       0       0       0       0       0       0
 15386 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15387 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15388 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15389 ;;Total ram usage:        5 bytes
 15390 ;; Hardware stack levels used:    1
 15391 ;; Hardware stack levels required when called:    6
 15392 ;; This function calls:
 15393 ;;		i1___ftsub
 15394 ;; This function is called by:
 15395 ;;		i1_sprintf
 15396 ;; This function uses a non-reentrant model
 15397 ;;
 15398                           
 15399                           	psect	text53
 15400  005FE6                     __ptext53:
 15401                           	opt stack 0
 15402  005FE6                     i1___asftsub:
 15403                           	opt stack 17
 15404                           
 15405                           ;	Return value of i1___asftsub is never used
 15406                           
 15407                           ;incstack = 0
 15408                           ;incstack = 0
 15409  005FE6  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 15410  005FEA  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 15411  005FEE  CFDE F027          	movff	postinc2,?i1___ftsub
 15412  005FF2  CFDE F028          	movff	postinc2,?i1___ftsub+1
 15413  005FF6  CFDD F029          	movff	postdec2,?i1___ftsub+2
 15414  005FFA  C02F  F02A         	movff	i1___asftsub@f2,?i1___ftsub+3
 15415  005FFE  C030  F02B         	movff	i1___asftsub@f2+1,?i1___ftsub+4
 15416  006002  C031  F02C         	movff	i1___asftsub@f2+2,?i1___ftsub+5
 15417  006006  ECC1  F030         	call	i1___ftsub	;wreg free
 15418  00600A  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 15419  00600E  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 15420  006012  C027  FFDE         	movff	?i1___ftsub,postinc2
 15421  006016  C028  FFDE         	movff	?i1___ftsub+1,postinc2
 15422  00601A  C029  FFDD         	movff	?i1___ftsub+2,postdec2
 15423  00601E  52DD               	movf	postdec2,f,c
 15424  006020  0012               	return	
 15425  006022                     __end_ofi1___asftsub:
 15426                           	opt stack 0
 15427                           pclatu	equ	0xFFB
 15428                           pclath	equ	0xFFA
 15429                           tblptru	equ	0xFF8
 15430                           tblptrh	equ	0xFF7
 15431                           tblptrl	equ	0xFF6
 15432                           tablat	equ	0xFF5
 15433                           prodh	equ	0xFF4
 15434                           prodl	equ	0xFF3
 15435                           intcon	equ	0xFF2
 15436                           intcon2	equ	0xFF1
 15437                           postinc0	equ	0xFEE
 15438                           fsr0h	equ	0xFEA
 15439                           fsr0l	equ	0xFE9
 15440                           wreg	equ	0xFE8
 15441                           fsr1h	equ	0xFE2
 15442                           fsr1l	equ	0xFE1
 15443                           bsr	equ	0xFE0
 15444                           indf2	equ	0xFDF
 15445                           postinc2	equ	0xFDE
 15446                           postdec2	equ	0xFDD
 15447                           fsr2h	equ	0xFDA
 15448                           fsr2l	equ	0xFD9
 15449                           status	equ	0xFD8
 15450                           
 15451 ;; *************** function i1___ftsub *****************
 15452 ;; Defined at:
 15453 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
 15454 ;; Parameters:    Size  Location     Type
 15455 ;;  __ftsub         3   38[COMRAM] float 
 15456 ;;  __ftsub         3   41[COMRAM] float 
 15457 ;; Auto vars:     Size  Location     Type
 15458 ;;		None
 15459 ;; Return value:  Size  Location     Type
 15460 ;;                  3   38[COMRAM] float 
 15461 ;; Registers used:
 15462 ;;		wreg, status,2, status,0, cstack
 15463 ;; Tracked objects:
 15464 ;;		On entry : 0/0
 15465 ;;		On exit  : 0/0
 15466 ;;		Unchanged: 0/0
 15467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15468 ;;      Params:         6       0       0       0       0       0       0       0       0
 15469 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15470 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15471 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15472 ;;Total ram usage:        6 bytes
 15473 ;; Hardware stack levels used:    1
 15474 ;; Hardware stack levels required when called:    5
 15475 ;; This function calls:
 15476 ;;		i1___ftadd
 15477 ;; This function is called by:
 15478 ;;		i1___asftsub
 15479 ;; This function uses a non-reentrant model
 15480 ;;
 15481                           
 15482                           	psect	text54
 15483  006182                     __ptext54:
 15484                           	opt stack 0
 15485  006182                     i1___ftsub:
 15486                           	opt stack 17
 15487                           
 15488                           ;incstack = 0
 15489                           ;incstack = 0
 15490  006182  0E00               	movlw	0
 15491  006184  1A2A               	xorwf	i1___ftsub@f2,f,c
 15492  006186  0E00               	movlw	0
 15493  006188  1A2B               	xorwf	i1___ftsub@f2+1,f,c
 15494  00618A  0E80               	movlw	128
 15495  00618C  1A2C               	xorwf	i1___ftsub@f2+2,f,c
 15496  00618E  C027  F019         	movff	i1___ftsub@f1,?i1___ftadd
 15497  006192  C028  F01A         	movff	i1___ftsub@f1+1,?i1___ftadd+1
 15498  006196  C029  F01B         	movff	i1___ftsub@f1+2,?i1___ftadd+2
 15499  00619A  C02A  F01C         	movff	i1___ftsub@f2,?i1___ftadd+3
 15500  00619E  C02B  F01D         	movff	i1___ftsub@f2+1,?i1___ftadd+4
 15501  0061A2  C02C  F01E         	movff	i1___ftsub@f2+2,?i1___ftadd+5
 15502  0061A6  ECC2  F01E         	call	i1___ftadd	;wreg free
 15503  0061AA  C01B  F029         	movff	?i1___ftadd+2,?i1___ftsub+2
 15504  0061AE  C01A  F028         	movff	?i1___ftadd+1,?i1___ftsub+1
 15505  0061B2  C019  F027         	movff	?i1___ftadd,?i1___ftsub
 15506  0061B6  0012               	return	
 15507  0061B8                     __end_ofi1___ftsub:
 15508                           	opt stack 0
 15509                           pclatu	equ	0xFFB
 15510                           pclath	equ	0xFFA
 15511                           tblptru	equ	0xFF8
 15512                           tblptrh	equ	0xFF7
 15513                           tblptrl	equ	0xFF6
 15514                           tablat	equ	0xFF5
 15515                           prodh	equ	0xFF4
 15516                           prodl	equ	0xFF3
 15517                           intcon	equ	0xFF2
 15518                           intcon2	equ	0xFF1
 15519                           postinc0	equ	0xFEE
 15520                           fsr0h	equ	0xFEA
 15521                           fsr0l	equ	0xFE9
 15522                           wreg	equ	0xFE8
 15523                           fsr1h	equ	0xFE2
 15524                           fsr1l	equ	0xFE1
 15525                           bsr	equ	0xFE0
 15526                           indf2	equ	0xFDF
 15527                           postinc2	equ	0xFDE
 15528                           postdec2	equ	0xFDD
 15529                           fsr2h	equ	0xFDA
 15530                           fsr2l	equ	0xFD9
 15531                           status	equ	0xFD8
 15532                           
 15533 ;; *************** function i1___asftmul *****************
 15534 ;; Defined at:
 15535 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;  __asftmul       2    0[BANK0 ] PTR float 
 15538 ;;		 -> sprintf@integ(3), 
 15539 ;;  __asftmul       3    2[BANK0 ] float 
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;		None
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  3    0[BANK0 ] float 
 15544 ;; Registers used:
 15545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15551 ;;      Params:         0       5       0       0       0       0       0       0       0
 15552 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15554 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15555 ;;Total ram usage:        5 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; Hardware stack levels required when called:    5
 15558 ;; This function calls:
 15559 ;;		i1___ftmul
 15560 ;; This function is called by:
 15561 ;;		i1_sprintf
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565                           	psect	text55
 15566  006022                     __ptext55:
 15567                           	opt stack 0
 15568  006022                     i1___asftmul:
 15569                           	opt stack 18
 15570                           
 15571                           ;	Return value of i1___asftmul is never used
 15572                           
 15573                           ;incstack = 0
 15574                           ;incstack = 0
 15575  006022  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 15576  006026  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 15577  00602A  CFDE F036          	movff	postinc2,?i1___ftmul
 15578  00602E  CFDE F037          	movff	postinc2,?i1___ftmul+1
 15579  006032  CFDD F038          	movff	postdec2,?i1___ftmul+2
 15580  006036  C062  F039         	movff	i1___asftmul@f2,?i1___ftmul+3
 15581  00603A  C063  F03A         	movff	i1___asftmul@f2+1,?i1___ftmul+4
 15582  00603E  C064  F03B         	movff	i1___asftmul@f2+2,?i1___ftmul+5
 15583  006042  EC84  F024         	call	i1___ftmul	;wreg free
 15584  006046  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 15585  00604A  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 15586  00604E  C036  FFDE         	movff	?i1___ftmul,postinc2
 15587  006052  C037  FFDE         	movff	?i1___ftmul+1,postinc2
 15588  006056  C038  FFDD         	movff	?i1___ftmul+2,postdec2
 15589  00605A  52DD               	movf	postdec2,f,c
 15590  00605C  0012               	return	
 15591  00605E                     __end_ofi1___asftmul:
 15592                           	opt stack 0
 15593                           pclatu	equ	0xFFB
 15594                           pclath	equ	0xFFA
 15595                           tblptru	equ	0xFF8
 15596                           tblptrh	equ	0xFF7
 15597                           tblptrl	equ	0xFF6
 15598                           tablat	equ	0xFF5
 15599                           prodh	equ	0xFF4
 15600                           prodl	equ	0xFF3
 15601                           intcon	equ	0xFF2
 15602                           intcon2	equ	0xFF1
 15603                           postinc0	equ	0xFEE
 15604                           fsr0h	equ	0xFEA
 15605                           fsr0l	equ	0xFE9
 15606                           wreg	equ	0xFE8
 15607                           fsr1h	equ	0xFE2
 15608                           fsr1l	equ	0xFE1
 15609                           bsr	equ	0xFE0
 15610                           indf2	equ	0xFDF
 15611                           postinc2	equ	0xFDE
 15612                           postdec2	equ	0xFDD
 15613                           fsr2h	equ	0xFDA
 15614                           fsr2l	equ	0xFD9
 15615                           status	equ	0xFD8
 15616                           
 15617 ;; *************** function i1___asftadd *****************
 15618 ;; Defined at:
 15619 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
 15620 ;; Parameters:    Size  Location     Type
 15621 ;;  __asftadd       2   12[BANK0 ] PTR float 
 15622 ;;		 -> sprintf@fval(3), 
 15623 ;;  __asftadd       3   14[BANK0 ] float 
 15624 ;; Auto vars:     Size  Location     Type
 15625 ;;		None
 15626 ;; Return value:  Size  Location     Type
 15627 ;;                  3   12[BANK0 ] float 
 15628 ;; Registers used:
 15629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15630 ;; Tracked objects:
 15631 ;;		On entry : 0/0
 15632 ;;		On exit  : 0/0
 15633 ;;		Unchanged: 0/0
 15634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15635 ;;      Params:         0       5       0       0       0       0       0       0       0
 15636 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15637 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15638 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15639 ;;Total ram usage:        5 bytes
 15640 ;; Hardware stack levels used:    1
 15641 ;; Hardware stack levels required when called:    5
 15642 ;; This function calls:
 15643 ;;		i1___ftadd
 15644 ;; This function is called by:
 15645 ;;		i1_sprintf
 15646 ;; This function uses a non-reentrant model
 15647 ;;
 15648                           
 15649                           	psect	text56
 15650  00605E                     __ptext56:
 15651                           	opt stack 0
 15652  00605E                     i1___asftadd:
 15653                           	opt stack 18
 15654                           
 15655                           ;	Return value of i1___asftadd is never used
 15656                           
 15657                           ;incstack = 0
 15658                           ;incstack = 0
 15659  00605E  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 15660  006062  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 15661  006066  CFDE F019          	movff	postinc2,?i1___ftadd
 15662  00606A  CFDE F01A          	movff	postinc2,?i1___ftadd+1
 15663  00606E  CFDD F01B          	movff	postdec2,?i1___ftadd+2
 15664  006072  C06E  F01C         	movff	i1___asftadd@f2,?i1___ftadd+3
 15665  006076  C06F  F01D         	movff	i1___asftadd@f2+1,?i1___ftadd+4
 15666  00607A  C070  F01E         	movff	i1___asftadd@f2+2,?i1___ftadd+5
 15667  00607E  ECC2  F01E         	call	i1___ftadd	;wreg free
 15668  006082  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 15669  006086  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 15670  00608A  C019  FFDE         	movff	?i1___ftadd,postinc2
 15671  00608E  C01A  FFDE         	movff	?i1___ftadd+1,postinc2
 15672  006092  C01B  FFDD         	movff	?i1___ftadd+2,postdec2
 15673  006096  52DD               	movf	postdec2,f,c
 15674  006098  0012               	return	
 15675  00609A                     __end_ofi1___asftadd:
 15676                           	opt stack 0
 15677                           pclatu	equ	0xFFB
 15678                           pclath	equ	0xFFA
 15679                           tblptru	equ	0xFF8
 15680                           tblptrh	equ	0xFF7
 15681                           tblptrl	equ	0xFF6
 15682                           tablat	equ	0xFF5
 15683                           prodh	equ	0xFF4
 15684                           prodl	equ	0xFF3
 15685                           intcon	equ	0xFF2
 15686                           intcon2	equ	0xFF1
 15687                           postinc0	equ	0xFEE
 15688                           fsr0h	equ	0xFEA
 15689                           fsr0l	equ	0xFE9
 15690                           wreg	equ	0xFE8
 15691                           fsr1h	equ	0xFE2
 15692                           fsr1l	equ	0xFE1
 15693                           bsr	equ	0xFE0
 15694                           indf2	equ	0xFDF
 15695                           postinc2	equ	0xFDE
 15696                           postdec2	equ	0xFDD
 15697                           fsr2h	equ	0xFDA
 15698                           fsr2l	equ	0xFD9
 15699                           status	equ	0xFD8
 15700                           
 15701 ;; *************** function i1___ftadd *****************
 15702 ;; Defined at:
 15703 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
 15704 ;; Parameters:    Size  Location     Type
 15705 ;;  __ftadd         3   24[COMRAM] float 
 15706 ;;  __ftadd         3   27[COMRAM] float 
 15707 ;; Auto vars:     Size  Location     Type
 15708 ;;  __ftadd         1   37[COMRAM] unsigned char 
 15709 ;;  __ftadd         1   36[COMRAM] unsigned char 
 15710 ;;  __ftadd         1   35[COMRAM] unsigned char 
 15711 ;; Return value:  Size  Location     Type
 15712 ;;                  3   24[COMRAM] float 
 15713 ;; Registers used:
 15714 ;;		wreg, status,2, status,0, cstack
 15715 ;; Tracked objects:
 15716 ;;		On entry : 0/0
 15717 ;;		On exit  : 0/0
 15718 ;;		Unchanged: 0/0
 15719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15720 ;;      Params:         6       0       0       0       0       0       0       0       0
 15721 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15722 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15723 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15724 ;;Total ram usage:       14 bytes
 15725 ;; Hardware stack levels used:    1
 15726 ;; Hardware stack levels required when called:    4
 15727 ;; This function calls:
 15728 ;;		i1___ftpack
 15729 ;; This function is called by:
 15730 ;;		i1___asftadd
 15731 ;;		i1___ftsub
 15732 ;; This function uses a non-reentrant model
 15733 ;;
 15734                           
 15735                           	psect	text57
 15736  003D84                     __ptext57:
 15737                           	opt stack 0
 15738  003D84                     i1___ftadd:
 15739                           	opt stack 17
 15740                           
 15741                           ;incstack = 0
 15742                           ;incstack = 0
 15743  003D84  0E0F               	movlw	15
 15744  003D86  6E1F               	movwf	??i1___ftadd& (0+255),c
 15745  003D88  C019  F020         	movff	i1___ftadd@f1,??i1___ftadd+1
 15746  003D8C  C01A  F021         	movff	i1___ftadd@f1+1,??i1___ftadd+2
 15747  003D90  C01B  F022         	movff	i1___ftadd@f1+2,??i1___ftadd+3
 15748  003D94  281F               	incf	??i1___ftadd,w,c
 15749  003D96  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 15750  003D98  D004               	goto	i1u808_20
 15751  003D9A                     i1u808_25:
 15752  003D9A  90D8               	bcf	status,0,c
 15753  003D9C  3222               	rrcf	??i1___ftadd+3,f,c
 15754  003D9E  3221               	rrcf	??i1___ftadd+2,f,c
 15755  003DA0  3220               	rrcf	??i1___ftadd+1,f,c
 15756  003DA2                     i1u808_20:
 15757  003DA2  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 15758  003DA4  D7FA               	goto	i1u808_25
 15759  003DA6  5020               	movf	??i1___ftadd+1,w,c
 15760  003DA8  6E26               	movwf	i1___ftadd@exp1,c
 15761  003DAA  0E0F               	movlw	15
 15762  003DAC  6E1F               	movwf	??i1___ftadd& (0+255),c
 15763  003DAE  C01C  F020         	movff	i1___ftadd@f2,??i1___ftadd+1
 15764  003DB2  C01D  F021         	movff	i1___ftadd@f2+1,??i1___ftadd+2
 15765  003DB6  C01E  F022         	movff	i1___ftadd@f2+2,??i1___ftadd+3
 15766  003DBA  281F               	incf	??i1___ftadd,w,c
 15767  003DBC  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 15768  003DBE  D004               	goto	i1u809_20
 15769  003DC0                     i1u809_25:
 15770  003DC0  90D8               	bcf	status,0,c
 15771  003DC2  3222               	rrcf	??i1___ftadd+3,f,c
 15772  003DC4  3221               	rrcf	??i1___ftadd+2,f,c
 15773  003DC6  3220               	rrcf	??i1___ftadd+1,f,c
 15774  003DC8                     i1u809_20:
 15775  003DC8  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 15776  003DCA  D7FA               	goto	i1u809_25
 15777  003DCC  5020               	movf	??i1___ftadd+1,w,c
 15778  003DCE  6E25               	movwf	i1___ftadd@exp2,c
 15779  003DD0  5026               	movf	i1___ftadd@exp1,w,c
 15780  003DD2  B4D8               	btfsc	status,2,c
 15781  003DD4  D00B               	goto	i1l710
 15782  003DD6  5025               	movf	i1___ftadd@exp2,w,c
 15783  003DD8  6026               	cpfslt	i1___ftadd@exp1,c
 15784  003DDA  D00F               	goto	i1l9269
 15785  003DDC  5026               	movf	i1___ftadd@exp1,w,c
 15786  003DDE  0800               	sublw	0
 15787  003DE0  2425               	addwf	i1___ftadd@exp2,w,c
 15788  003DE2  6E1F               	movwf	??i1___ftadd& (0+255),c
 15789  003DE4  0E19               	movlw	25
 15790  003DE6  5C1F               	subwf	??i1___ftadd,w,c
 15791  003DE8  A0D8               	btfss	status,0,c
 15792  003DEA  D007               	goto	i1l9269
 15793  003DEC                     i1l710:
 15794  003DEC  C01C  F019         	movff	i1___ftadd@f2,?i1___ftadd
 15795  003DF0  C01D  F01A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 15796  003DF4  C01E  F01B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 15797  003DF8  D0AA               	goto	i1l711
 15798  003DFA                     i1l9269:
 15799  003DFA  5025               	movf	i1___ftadd@exp2,w,c
 15800  003DFC  B4D8               	btfsc	status,2,c
 15801  003DFE  D00B               	goto	i1l714
 15802  003E00  5026               	movf	i1___ftadd@exp1,w,c
 15803  003E02  6025               	cpfslt	i1___ftadd@exp2,c
 15804  003E04  D00F               	goto	i1l9275
 15805  003E06  5025               	movf	i1___ftadd@exp2,w,c
 15806  003E08  0800               	sublw	0
 15807  003E0A  2426               	addwf	i1___ftadd@exp1,w,c
 15808  003E0C  6E1F               	movwf	??i1___ftadd& (0+255),c
 15809  003E0E  0E19               	movlw	25
 15810  003E10  5C1F               	subwf	??i1___ftadd,w,c
 15811  003E12  A0D8               	btfss	status,0,c
 15812  003E14  D007               	goto	i1l9275
 15813  003E16                     i1l714:
 15814  003E16  C019  F019         	movff	i1___ftadd@f1,?i1___ftadd
 15815  003E1A  C01A  F01A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 15816  003E1E  C01B  F01B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 15817  003E22  D095               	goto	i1l711
 15818  003E24                     i1l9275:
 15819  003E24  6E1F               	movwf	??i1___ftadd& (0+255),c
 15820  003E26  0E06               	movlw	6
 15821  003E28  6E24               	movwf	i1___ftadd@sign,c
 15822  003E2A  501F               	movf	??i1___ftadd& (0+255),w,c
 15823  003E2C  BE1B               	btfsc	i1___ftadd@f1+2,7,c
 15824  003E2E  8E24               	bsf	i1___ftadd@sign,7,c
 15825  003E30  BE1E               	btfsc	i1___ftadd@f2+2,7,c
 15826  003E32  8C24               	bsf	i1___ftadd@sign,6,c
 15827  003E34  8E1A               	bsf	i1___ftadd@f1+1,7,c
 15828  003E36  0EFF               	movlw	255
 15829  003E38  1619               	andwf	i1___ftadd@f1,f,c
 15830  003E3A  0EFF               	movlw	255
 15831  003E3C  161A               	andwf	i1___ftadd@f1+1,f,c
 15832  003E3E  0E00               	movlw	0
 15833  003E40  161B               	andwf	i1___ftadd@f1+2,f,c
 15834  003E42  8E1D               	bsf	i1___ftadd@f2+1,7,c
 15835  003E44  0EFF               	movlw	255
 15836  003E46  161C               	andwf	i1___ftadd@f2,f,c
 15837  003E48  0EFF               	movlw	255
 15838  003E4A  161D               	andwf	i1___ftadd@f2+1,f,c
 15839  003E4C  0E00               	movlw	0
 15840  003E4E  161E               	andwf	i1___ftadd@f2+2,f,c
 15841  003E50  5025               	movf	i1___ftadd@exp2,w,c
 15842  003E52  6026               	cpfslt	i1___ftadd@exp1,c
 15843  003E54  D018               	goto	i1l9301
 15844  003E56                     i1l9291:
 15845  003E56  90D8               	bcf	status,0,c
 15846  003E58  361C               	rlcf	i1___ftadd@f2,f,c
 15847  003E5A  361D               	rlcf	i1___ftadd@f2+1,f,c
 15848  003E5C  361E               	rlcf	i1___ftadd@f2+2,f,c
 15849  003E5E  0625               	decf	i1___ftadd@exp2,f,c
 15850  003E60  5025               	movf	i1___ftadd@exp2,w,c
 15851  003E62  1826               	xorwf	i1___ftadd@exp1,w,c
 15852  003E64  B4D8               	btfsc	status,2,c
 15853  003E66  D00B               	goto	i1l9299
 15854  003E68  0624               	decf	i1___ftadd@sign,f,c
 15855  003E6A  5024               	movf	i1___ftadd@sign& (0+255),w,c
 15856  003E6C  0B07               	andlw	7
 15857  003E6E  B4D8               	btfsc	status,2,c
 15858  003E70  D006               	goto	i1l9299
 15859  003E72  D7F1               	goto	i1l9291
 15860  003E74                     i1l9297:
 15861  003E74  90D8               	bcf	status,0,c
 15862  003E76  321B               	rrcf	i1___ftadd@f1+2,f,c
 15863  003E78  321A               	rrcf	i1___ftadd@f1+1,f,c
 15864  003E7A  3219               	rrcf	i1___ftadd@f1,f,c
 15865  003E7C  2A26               	incf	i1___ftadd@exp1,f,c
 15866  003E7E                     i1l9299:
 15867  003E7E  5025               	movf	i1___ftadd@exp2,w,c
 15868  003E80  6226               	cpfseq	i1___ftadd@exp1,c
 15869  003E82  D7F8               	goto	i1l9297
 15870  003E84  D01A               	goto	i1l725
 15871  003E86                     i1l9301:
 15872  003E86  5026               	movf	i1___ftadd@exp1,w,c
 15873  003E88  6025               	cpfslt	i1___ftadd@exp2,c
 15874  003E8A  D017               	goto	i1l725
 15875  003E8C                     i1l9303:
 15876  003E8C  90D8               	bcf	status,0,c
 15877  003E8E  3619               	rlcf	i1___ftadd@f1,f,c
 15878  003E90  361A               	rlcf	i1___ftadd@f1+1,f,c
 15879  003E92  361B               	rlcf	i1___ftadd@f1+2,f,c
 15880  003E94  0626               	decf	i1___ftadd@exp1,f,c
 15881  003E96  5025               	movf	i1___ftadd@exp2,w,c
 15882  003E98  1826               	xorwf	i1___ftadd@exp1,w,c
 15883  003E9A  B4D8               	btfsc	status,2,c
 15884  003E9C  D00B               	goto	i1l9311
 15885  003E9E  0624               	decf	i1___ftadd@sign,f,c
 15886  003EA0  5024               	movf	i1___ftadd@sign& (0+255),w,c
 15887  003EA2  0B07               	andlw	7
 15888  003EA4  B4D8               	btfsc	status,2,c
 15889  003EA6  D006               	goto	i1l9311
 15890  003EA8  D7F1               	goto	i1l9303
 15891  003EAA                     i1l9309:
 15892  003EAA  90D8               	bcf	status,0,c
 15893  003EAC  321E               	rrcf	i1___ftadd@f2+2,f,c
 15894  003EAE  321D               	rrcf	i1___ftadd@f2+1,f,c
 15895  003EB0  321C               	rrcf	i1___ftadd@f2,f,c
 15896  003EB2  2A25               	incf	i1___ftadd@exp2,f,c
 15897  003EB4                     i1l9311:
 15898  003EB4  5025               	movf	i1___ftadd@exp2,w,c
 15899  003EB6  6226               	cpfseq	i1___ftadd@exp1,c
 15900  003EB8  D7F8               	goto	i1l9309
 15901  003EBA                     i1l725:
 15902  003EBA  AE24               	btfss	i1___ftadd@sign,7,c
 15903  003EBC  D00C               	goto	i1l734
 15904  003EBE  0EFF               	movlw	255
 15905  003EC0  1A19               	xorwf	i1___ftadd@f1,f,c
 15906  003EC2  0EFF               	movlw	255
 15907  003EC4  1A1A               	xorwf	i1___ftadd@f1+1,f,c
 15908  003EC6  0EFF               	movlw	255
 15909  003EC8  1A1B               	xorwf	i1___ftadd@f1+2,f,c
 15910  003ECA  0E01               	movlw	1
 15911  003ECC  2619               	addwf	i1___ftadd@f1,f,c
 15912  003ECE  0E00               	movlw	0
 15913  003ED0  221A               	addwfc	i1___ftadd@f1+1,f,c
 15914  003ED2  0E00               	movlw	0
 15915  003ED4  221B               	addwfc	i1___ftadd@f1+2,f,c
 15916  003ED6                     i1l734:
 15917  003ED6  AC24               	btfss	i1___ftadd@sign,6,c
 15918  003ED8  D00C               	goto	i1l9317
 15919  003EDA  0EFF               	movlw	255
 15920  003EDC  1A1C               	xorwf	i1___ftadd@f2,f,c
 15921  003EDE  0EFF               	movlw	255
 15922  003EE0  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 15923  003EE2  0EFF               	movlw	255
 15924  003EE4  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 15925  003EE6  0E01               	movlw	1
 15926  003EE8  261C               	addwf	i1___ftadd@f2,f,c
 15927  003EEA  0E00               	movlw	0
 15928  003EEC  221D               	addwfc	i1___ftadd@f2+1,f,c
 15929  003EEE  0E00               	movlw	0
 15930  003EF0  221E               	addwfc	i1___ftadd@f2+2,f,c
 15931  003EF2                     i1l9317:
 15932  003EF2  6E1F               	movwf	??i1___ftadd& (0+255),c
 15933  003EF4  0E00               	movlw	0
 15934  003EF6  6E24               	movwf	i1___ftadd@sign,c
 15935  003EF8  501F               	movf	??i1___ftadd& (0+255),w,c
 15936  003EFA  5019               	movf	i1___ftadd@f1,w,c
 15937  003EFC  261C               	addwf	i1___ftadd@f2,f,c
 15938  003EFE  501A               	movf	i1___ftadd@f1+1,w,c
 15939  003F00  221D               	addwfc	i1___ftadd@f2+1,f,c
 15940  003F02  501B               	movf	i1___ftadd@f1+2,w,c
 15941  003F04  221E               	addwfc	i1___ftadd@f2+2,f,c
 15942  003F06  AE1E               	btfss	i1___ftadd@f2+2,7,c
 15943  003F08  D010               	goto	i1l9327
 15944  003F0A  0EFF               	movlw	255
 15945  003F0C  1A1C               	xorwf	i1___ftadd@f2,f,c
 15946  003F0E  0EFF               	movlw	255
 15947  003F10  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 15948  003F12  0EFF               	movlw	255
 15949  003F14  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 15950  003F16  0E01               	movlw	1
 15951  003F18  261C               	addwf	i1___ftadd@f2,f,c
 15952  003F1A  0E00               	movlw	0
 15953  003F1C  221D               	addwfc	i1___ftadd@f2+1,f,c
 15954  003F1E  0E00               	movlw	0
 15955  003F20  221E               	addwfc	i1___ftadd@f2+2,f,c
 15956  003F22  6E1F               	movwf	??i1___ftadd& (0+255),c
 15957  003F24  0E01               	movlw	1
 15958  003F26  6E24               	movwf	i1___ftadd@sign,c
 15959  003F28  501F               	movf	??i1___ftadd& (0+255),w,c
 15960  003F2A                     i1l9327:
 15961  003F2A  C01C  F011         	movff	i1___ftadd@f2,?i1___ftpack
 15962  003F2E  C01D  F012         	movff	i1___ftadd@f2+1,?i1___ftpack+1
 15963  003F32  C01E  F013         	movff	i1___ftadd@f2+2,?i1___ftpack+2
 15964  003F36  C026  F014         	movff	i1___ftadd@exp1,?i1___ftpack+3
 15965  003F3A  C024  F015         	movff	i1___ftadd@sign,?i1___ftpack+4
 15966  003F3E  ECC1  F029         	call	i1___ftpack	;wreg free
 15967  003F42  C013  F01B         	movff	?i1___ftpack+2,?i1___ftadd+2
 15968  003F46  C012  F01A         	movff	?i1___ftpack+1,?i1___ftadd+1
 15969  003F4A  C011  F019         	movff	?i1___ftpack,?i1___ftadd
 15970  003F4E                     i1l711:
 15971  003F4E  0012               	return	
 15972  003F50                     __end_ofi1___ftadd:
 15973                           	opt stack 0
 15974                           pclatu	equ	0xFFB
 15975                           pclath	equ	0xFFA
 15976                           tblptru	equ	0xFF8
 15977                           tblptrh	equ	0xFF7
 15978                           tblptrl	equ	0xFF6
 15979                           tablat	equ	0xFF5
 15980                           prodh	equ	0xFF4
 15981                           prodl	equ	0xFF3
 15982                           intcon	equ	0xFF2
 15983                           intcon2	equ	0xFF1
 15984                           postinc0	equ	0xFEE
 15985                           fsr0h	equ	0xFEA
 15986                           fsr0l	equ	0xFE9
 15987                           wreg	equ	0xFE8
 15988                           fsr1h	equ	0xFE2
 15989                           fsr1l	equ	0xFE1
 15990                           bsr	equ	0xFE0
 15991                           indf2	equ	0xFDF
 15992                           postinc2	equ	0xFDE
 15993                           postdec2	equ	0xFDD
 15994                           fsr2h	equ	0xFDA
 15995                           fsr2l	equ	0xFD9
 15996                           status	equ	0xFD8
 15997                           
 15998 ;; *************** function i1_scale *****************
 15999 ;; Defined at:
 16000 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;  scale           1   70[COMRAM] char 
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;  scale           3    0        float 
 16005 ;;  scale           3    0        float 
 16006 ;; Return value:  Size  Location     Type
 16007 ;;                  3   70[COMRAM] float 
 16008 ;; Registers used:
 16009 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16010 ;; Tracked objects:
 16011 ;;		On entry : 0/0
 16012 ;;		On exit  : 0/0
 16013 ;;		Unchanged: 0/0
 16014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16015 ;;      Params:         3       0       0       0       0       0       0       0       0
 16016 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16017 ;;      Temps:          0       6       0       0       0       0       0       0       0
 16018 ;;      Totals:         3       9       0       0       0       0       0       0       0
 16019 ;;Total ram usage:       12 bytes
 16020 ;; Hardware stack levels used:    1
 16021 ;; Hardware stack levels required when called:    5
 16022 ;; This function calls:
 16023 ;;		i1___awdiv
 16024 ;;		i1___awmod
 16025 ;;		i1___ftmul
 16026 ;;		i1___wmul
 16027 ;; This function is called by:
 16028 ;;		i1_sprintf
 16029 ;; This function uses a non-reentrant model
 16030 ;;
 16031                           
 16032                           	psect	text58
 16033  002A28                     __ptext58:
 16034                           	opt stack 0
 16035  002A28                     i1_scale:
 16036                           	opt stack 18
 16037                           
 16038                           ;doprnt.c: 428: if(scl < 0) {
 16039                           
 16040                           ;incstack = 0
 16041                           ;incstack = 0
 16042  002A28  AE47               	btfss	i1scale@scl,7,c
 16043  002A2A  D108               	goto	i1l11143
 16044                           
 16045                           ;doprnt.c: 429: scl = -scl;
 16046  002A2C  6C47               	negf	i1scale@scl,c
 16047                           
 16048                           ;doprnt.c: 430: if(scl>=110)
 16049  002A2E  5047               	movf	i1scale@scl,w,c
 16050  002A30  0A80               	xorlw	128
 16051  002A32  0F12               	addlw	-238
 16052  002A34  A0D8               	btfss	status,0,c
 16053  002A36  D09D               	goto	i1l11133
 16054                           
 16055                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16056  002A38  0E00               	movlw	0
 16057  002A3A  6E24               	movwf	?i1___wmul+3,c
 16058  002A3C  0E03               	movlw	3
 16059  002A3E  6E23               	movwf	?i1___wmul+2,c
 16060  002A40  0E00               	movlw	0
 16061  002A42  6E1B               	movwf	?i1___awdiv+3,c
 16062  002A44  0E0A               	movlw	10
 16063  002A46  6E1A               	movwf	?i1___awdiv+2,c
 16064  002A48  0E00               	movlw	0
 16065  002A4A  6E14               	movwf	?i1___awmod+3,c
 16066  002A4C  0E64               	movlw	100
 16067  002A4E  6E13               	movwf	?i1___awmod+2,c
 16068  002A50  5047               	movf	i1scale@scl,w,c
 16069  002A52  6E11               	movwf	?i1___awmod,c
 16070  002A54  6A12               	clrf	?i1___awmod+1,c
 16071  002A56  BE11               	btfsc	?i1___awmod,7,c
 16072  002A58  0612               	decf	?i1___awmod+1,f,c
 16073  002A5A  EC4B  F02D         	call	i1___awmod	;wreg free
 16074  002A5E  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16075  002A62  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16076  002A66  ECB5  F02B         	call	i1___awdiv	;wreg free
 16077  002A6A  0E09               	movlw	9
 16078  002A6C  2418               	addwf	?i1___awdiv,w,c
 16079  002A6E  6E21               	movwf	?i1___wmul,c
 16080  002A70  0E00               	movlw	0
 16081  002A72  2019               	addwfc	?i1___awdiv+1,w,c
 16082  002A74  6E22               	movwf	?i1___wmul+1,c
 16083  002A76  EC87  F030         	call	i1___wmul	;wreg free
 16084  002A7A  0E28               	movlw	low __npowers_
 16085  002A7C  2421               	addwf	?i1___wmul,w,c
 16086  002A7E  6EF6               	movwf	tblptrl,c
 16087  002A80  0E08               	movlw	high __npowers_
 16088  002A82  2022               	addwfc	?i1___wmul+1,w,c
 16089  002A84  6EF7               	movwf	tblptrh,c
 16090  002A86  0009               	tblrd		*+
 16091  002A88  CFF5 F060          	movff	tablat,??i1_scale
 16092  002A8C  0009               	tblrd		*+
 16093  002A8E  CFF5 F061          	movff	tablat,??i1_scale+1
 16094  002A92  0009               	tblrd		*+
 16095  002A94  CFF5 F062          	movff	tablat,??i1_scale+2
 16096  002A98  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16097  002A9C  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16098  002AA0  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16099  002AA4  0E00               	movlw	0
 16100  002AA6  6E24               	movwf	?i1___wmul+3,c
 16101  002AA8  0E03               	movlw	3
 16102  002AAA  6E23               	movwf	?i1___wmul+2,c
 16103  002AAC  0E00               	movlw	0
 16104  002AAE  6E1B               	movwf	?i1___awdiv+3,c
 16105  002AB0  0E64               	movlw	100
 16106  002AB2  6E1A               	movwf	?i1___awdiv+2,c
 16107  002AB4  5047               	movf	i1scale@scl,w,c
 16108  002AB6  6E18               	movwf	?i1___awdiv,c
 16109  002AB8  6A19               	clrf	?i1___awdiv+1,c
 16110  002ABA  BE18               	btfsc	?i1___awdiv,7,c
 16111  002ABC  0619               	decf	?i1___awdiv+1,f,c
 16112  002ABE  ECB5  F02B         	call	i1___awdiv	;wreg free
 16113  002AC2  0E12               	movlw	18
 16114  002AC4  2418               	addwf	?i1___awdiv,w,c
 16115  002AC6  6E21               	movwf	?i1___wmul,c
 16116  002AC8  0E00               	movlw	0
 16117  002ACA  2019               	addwfc	?i1___awdiv+1,w,c
 16118  002ACC  6E22               	movwf	?i1___wmul+1,c
 16119  002ACE  EC87  F030         	call	i1___wmul	;wreg free
 16120  002AD2  0E28               	movlw	low __npowers_
 16121  002AD4  2421               	addwf	?i1___wmul,w,c
 16122  002AD6  6EF6               	movwf	tblptrl,c
 16123  002AD8  0E08               	movlw	high __npowers_
 16124  002ADA  2022               	addwfc	?i1___wmul+1,w,c
 16125  002ADC  6EF7               	movwf	tblptrh,c
 16126  002ADE  0009               	tblrd		*+
 16127  002AE0  CFF5 F063          	movff	tablat,??i1_scale+3
 16128  002AE4  0009               	tblrd		*+
 16129  002AE6  CFF5 F064          	movff	tablat,??i1_scale+4
 16130  002AEA  0009               	tblrd		*+
 16131  002AEC  CFF5 F065          	movff	tablat,??i1_scale+5
 16132  002AF0  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 16133  002AF4  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 16134  002AF8  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 16135  002AFC  EC84  F024         	call	i1___ftmul	;wreg free
 16136  002B00  C038  F068         	movff	?i1___ftmul+2,i1_scale$1828+2
 16137  002B04  C037  F067         	movff	?i1___ftmul+1,i1_scale$1828+1
 16138  002B08  C036  F066         	movff	?i1___ftmul,i1_scale$1828
 16139                           
 16140                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16141  002B0C  C066  F036         	movff	i1_scale$1828,?i1___ftmul
 16142  002B10  C067  F037         	movff	i1_scale$1828+1,?i1___ftmul+1
 16143  002B14  C068  F038         	movff	i1_scale$1828+2,?i1___ftmul+2
 16144  002B18  0E00               	movlw	0
 16145  002B1A  6E24               	movwf	?i1___wmul+3,c
 16146  002B1C  0E03               	movlw	3
 16147  002B1E  6E23               	movwf	?i1___wmul+2,c
 16148  002B20  0E00               	movlw	0
 16149  002B22  6E14               	movwf	?i1___awmod+3,c
 16150  002B24  0E0A               	movlw	10
 16151  002B26  6E13               	movwf	?i1___awmod+2,c
 16152  002B28  5047               	movf	i1scale@scl,w,c
 16153  002B2A  6E11               	movwf	?i1___awmod,c
 16154  002B2C  6A12               	clrf	?i1___awmod+1,c
 16155  002B2E  BE11               	btfsc	?i1___awmod,7,c
 16156  002B30  0612               	decf	?i1___awmod+1,f,c
 16157  002B32  EC4B  F02D         	call	i1___awmod	;wreg free
 16158  002B36  C011  F021         	movff	?i1___awmod,?i1___wmul
 16159  002B3A  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16160  002B3E  EC87  F030         	call	i1___wmul	;wreg free
 16161  002B42  0E28               	movlw	low __npowers_
 16162  002B44  2421               	addwf	?i1___wmul,w,c
 16163  002B46  6EF6               	movwf	tblptrl,c
 16164  002B48  0E08               	movlw	high __npowers_
 16165  002B4A  2022               	addwfc	?i1___wmul+1,w,c
 16166  002B4C  6EF7               	movwf	tblptrh,c
 16167  002B4E  0009               	tblrd		*+
 16168  002B50  CFF5 F060          	movff	tablat,??i1_scale
 16169  002B54  0009               	tblrd		*+
 16170  002B56  CFF5 F061          	movff	tablat,??i1_scale+1
 16171  002B5A  0009               	tblrd		*+
 16172  002B5C  CFF5 F062          	movff	tablat,??i1_scale+2
 16173  002B60  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16174  002B64  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16175  002B68  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16176  002B6C  EC84  F024         	call	i1___ftmul	;wreg free
 16177  002B70  D164               	goto	L24
 16178  002B72                     i1l11133:
 16179                           
 16180                           ;doprnt.c: 432: else if(scl > 10)
 16181  002B72  5047               	movf	i1scale@scl,w,c
 16182  002B74  0A80               	xorlw	128
 16183  002B76  0F75               	addlw	-139
 16184  002B78  A0D8               	btfss	status,0,c
 16185  002B7A  D059               	goto	i1l11139
 16186                           
 16187                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 16188  002B7C  0E00               	movlw	0
 16189  002B7E  6E24               	movwf	?i1___wmul+3,c
 16190  002B80  0E03               	movlw	3
 16191  002B82  6E23               	movwf	?i1___wmul+2,c
 16192  002B84  0E00               	movlw	0
 16193  002B86  6E1B               	movwf	?i1___awdiv+3,c
 16194  002B88  0E0A               	movlw	10
 16195  002B8A  6E1A               	movwf	?i1___awdiv+2,c
 16196  002B8C  5047               	movf	i1scale@scl,w,c
 16197  002B8E  6E18               	movwf	?i1___awdiv,c
 16198  002B90  6A19               	clrf	?i1___awdiv+1,c
 16199  002B92  BE18               	btfsc	?i1___awdiv,7,c
 16200  002B94  0619               	decf	?i1___awdiv+1,f,c
 16201  002B96  ECB5  F02B         	call	i1___awdiv	;wreg free
 16202  002B9A  0E09               	movlw	9
 16203  002B9C  2418               	addwf	?i1___awdiv,w,c
 16204  002B9E  6E21               	movwf	?i1___wmul,c
 16205  002BA0  0E00               	movlw	0
 16206  002BA2  2019               	addwfc	?i1___awdiv+1,w,c
 16207  002BA4  6E22               	movwf	?i1___wmul+1,c
 16208  002BA6  EC87  F030         	call	i1___wmul	;wreg free
 16209  002BAA  0E28               	movlw	low __npowers_
 16210  002BAC  2421               	addwf	?i1___wmul,w,c
 16211  002BAE  6EF6               	movwf	tblptrl,c
 16212  002BB0  0E08               	movlw	high __npowers_
 16213  002BB2  2022               	addwfc	?i1___wmul+1,w,c
 16214  002BB4  6EF7               	movwf	tblptrh,c
 16215  002BB6  0009               	tblrd		*+
 16216  002BB8  CFF5 F060          	movff	tablat,??i1_scale
 16217  002BBC  0009               	tblrd		*+
 16218  002BBE  CFF5 F061          	movff	tablat,??i1_scale+1
 16219  002BC2  0009               	tblrd		*+
 16220  002BC4  CFF5 F062          	movff	tablat,??i1_scale+2
 16221  002BC8  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 16222  002BCC  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 16223  002BD0  C060  F036         	movff	??i1_scale,?i1___ftmul
 16224  002BD4  0E00               	movlw	0
 16225  002BD6  6E24               	movwf	?i1___wmul+3,c
 16226  002BD8  0E03               	movlw	3
 16227  002BDA  6E23               	movwf	?i1___wmul+2,c
 16228  002BDC  0E00               	movlw	0
 16229  002BDE  6E14               	movwf	?i1___awmod+3,c
 16230  002BE0  0E0A               	movlw	10
 16231  002BE2  6E13               	movwf	?i1___awmod+2,c
 16232  002BE4  5047               	movf	i1scale@scl,w,c
 16233  002BE6  6E11               	movwf	?i1___awmod,c
 16234  002BE8  6A12               	clrf	?i1___awmod+1,c
 16235  002BEA  BE11               	btfsc	?i1___awmod,7,c
 16236  002BEC  0612               	decf	?i1___awmod+1,f,c
 16237  002BEE  EC4B  F02D         	call	i1___awmod	;wreg free
 16238  002BF2  C011  F021         	movff	?i1___awmod,?i1___wmul
 16239  002BF6  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16240  002BFA  EC87  F030         	call	i1___wmul	;wreg free
 16241  002BFE  0E28               	movlw	low __npowers_
 16242  002C00  2421               	addwf	?i1___wmul,w,c
 16243  002C02  6EF6               	movwf	tblptrl,c
 16244  002C04  0E08               	movlw	high __npowers_
 16245  002C06  2022               	addwfc	?i1___wmul+1,w,c
 16246  002C08  6EF7               	movwf	tblptrh,c
 16247  002C0A  0009               	tblrd		*+
 16248  002C0C  CFF5 F063          	movff	tablat,??i1_scale+3
 16249  002C10  0009               	tblrd		*+
 16250  002C12  CFF5 F064          	movff	tablat,??i1_scale+4
 16251  002C16  0009               	tblrd		*+
 16252  002C18  CFF5 F065          	movff	tablat,??i1_scale+5
 16253  002C1C  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 16254  002C20  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 16255  002C24  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 16256  002C28  EC84  F024         	call	i1___ftmul	;wreg free
 16257  002C2C  D106               	goto	L24
 16258  002C2E                     i1l11139:
 16259                           
 16260                           ;doprnt.c: 434: return _npowers_[scl];
 16261  002C2E  5047               	movf	i1scale@scl,w,c
 16262  002C30  0D03               	mullw	3
 16263  002C32  0E28               	movlw	low __npowers_
 16264  002C34  24F3               	addwf	prodl,w,c
 16265  002C36  6EF6               	movwf	tblptrl,c
 16266  002C38  0E08               	movlw	high __npowers_
 16267  002C3A  D10C               	goto	L23
 16268  002C3C                     i1l11143:
 16269                           
 16270                           ;doprnt.c: 435: }
 16271                           ;doprnt.c: 436: if(scl>=110)
 16272  002C3C  5047               	movf	i1scale@scl,w,c
 16273  002C3E  0A80               	xorlw	128
 16274  002C40  0F12               	addlw	-238
 16275  002C42  A0D8               	btfss	status,0,c
 16276  002C44  D09D               	goto	i1l11151
 16277                           
 16278                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16279  002C46  0E00               	movlw	0
 16280  002C48  6E24               	movwf	?i1___wmul+3,c
 16281  002C4A  0E03               	movlw	3
 16282  002C4C  6E23               	movwf	?i1___wmul+2,c
 16283  002C4E  0E00               	movlw	0
 16284  002C50  6E1B               	movwf	?i1___awdiv+3,c
 16285  002C52  0E0A               	movlw	10
 16286  002C54  6E1A               	movwf	?i1___awdiv+2,c
 16287  002C56  0E00               	movlw	0
 16288  002C58  6E14               	movwf	?i1___awmod+3,c
 16289  002C5A  0E64               	movlw	100
 16290  002C5C  6E13               	movwf	?i1___awmod+2,c
 16291  002C5E  5047               	movf	i1scale@scl,w,c
 16292  002C60  6E11               	movwf	?i1___awmod,c
 16293  002C62  6A12               	clrf	?i1___awmod+1,c
 16294  002C64  BE11               	btfsc	?i1___awmod,7,c
 16295  002C66  0612               	decf	?i1___awmod+1,f,c
 16296  002C68  EC4B  F02D         	call	i1___awmod	;wreg free
 16297  002C6C  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16298  002C70  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16299  002C74  ECB5  F02B         	call	i1___awdiv	;wreg free
 16300  002C78  0E09               	movlw	9
 16301  002C7A  2418               	addwf	?i1___awdiv,w,c
 16302  002C7C  6E21               	movwf	?i1___wmul,c
 16303  002C7E  0E00               	movlw	0
 16304  002C80  2019               	addwfc	?i1___awdiv+1,w,c
 16305  002C82  6E22               	movwf	?i1___wmul+1,c
 16306  002C84  EC87  F030         	call	i1___wmul	;wreg free
 16307  002C88  0E4F               	movlw	low __powers_
 16308  002C8A  2421               	addwf	?i1___wmul,w,c
 16309  002C8C  6EF6               	movwf	tblptrl,c
 16310  002C8E  0E08               	movlw	high __powers_
 16311  002C90  2022               	addwfc	?i1___wmul+1,w,c
 16312  002C92  6EF7               	movwf	tblptrh,c
 16313  002C94  0009               	tblrd		*+
 16314  002C96  CFF5 F060          	movff	tablat,??i1_scale
 16315  002C9A  0009               	tblrd		*+
 16316  002C9C  CFF5 F061          	movff	tablat,??i1_scale+1
 16317  002CA0  0009               	tblrd		*+
 16318  002CA2  CFF5 F062          	movff	tablat,??i1_scale+2
 16319  002CA6  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16320  002CAA  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16321  002CAE  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16322  002CB2  0E00               	movlw	0
 16323  002CB4  6E24               	movwf	?i1___wmul+3,c
 16324  002CB6  0E03               	movlw	3
 16325  002CB8  6E23               	movwf	?i1___wmul+2,c
 16326  002CBA  0E00               	movlw	0
 16327  002CBC  6E1B               	movwf	?i1___awdiv+3,c
 16328  002CBE  0E64               	movlw	100
 16329  002CC0  6E1A               	movwf	?i1___awdiv+2,c
 16330  002CC2  5047               	movf	i1scale@scl,w,c
 16331  002CC4  6E18               	movwf	?i1___awdiv,c
 16332  002CC6  6A19               	clrf	?i1___awdiv+1,c
 16333  002CC8  BE18               	btfsc	?i1___awdiv,7,c
 16334  002CCA  0619               	decf	?i1___awdiv+1,f,c
 16335  002CCC  ECB5  F02B         	call	i1___awdiv	;wreg free
 16336  002CD0  0E12               	movlw	18
 16337  002CD2  2418               	addwf	?i1___awdiv,w,c
 16338  002CD4  6E21               	movwf	?i1___wmul,c
 16339  002CD6  0E00               	movlw	0
 16340  002CD8  2019               	addwfc	?i1___awdiv+1,w,c
 16341  002CDA  6E22               	movwf	?i1___wmul+1,c
 16342  002CDC  EC87  F030         	call	i1___wmul	;wreg free
 16343  002CE0  0E4F               	movlw	low __powers_
 16344  002CE2  2421               	addwf	?i1___wmul,w,c
 16345  002CE4  6EF6               	movwf	tblptrl,c
 16346  002CE6  0E08               	movlw	high __powers_
 16347  002CE8  2022               	addwfc	?i1___wmul+1,w,c
 16348  002CEA  6EF7               	movwf	tblptrh,c
 16349  002CEC  0009               	tblrd		*+
 16350  002CEE  CFF5 F063          	movff	tablat,??i1_scale+3
 16351  002CF2  0009               	tblrd		*+
 16352  002CF4  CFF5 F064          	movff	tablat,??i1_scale+4
 16353  002CF8  0009               	tblrd		*+
 16354  002CFA  CFF5 F065          	movff	tablat,??i1_scale+5
 16355  002CFE  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 16356  002D02  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 16357  002D06  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 16358  002D0A  EC84  F024         	call	i1___ftmul	;wreg free
 16359  002D0E  C038  F068         	movff	?i1___ftmul+2,i1_scale$1828+2
 16360  002D12  C037  F067         	movff	?i1___ftmul+1,i1_scale$1828+1
 16361  002D16  C036  F066         	movff	?i1___ftmul,i1_scale$1828
 16362                           
 16363                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16364  002D1A  C066  F036         	movff	i1_scale$1828,?i1___ftmul
 16365  002D1E  C067  F037         	movff	i1_scale$1828+1,?i1___ftmul+1
 16366  002D22  C068  F038         	movff	i1_scale$1828+2,?i1___ftmul+2
 16367  002D26  0E00               	movlw	0
 16368  002D28  6E24               	movwf	?i1___wmul+3,c
 16369  002D2A  0E03               	movlw	3
 16370  002D2C  6E23               	movwf	?i1___wmul+2,c
 16371  002D2E  0E00               	movlw	0
 16372  002D30  6E14               	movwf	?i1___awmod+3,c
 16373  002D32  0E0A               	movlw	10
 16374  002D34  6E13               	movwf	?i1___awmod+2,c
 16375  002D36  5047               	movf	i1scale@scl,w,c
 16376  002D38  6E11               	movwf	?i1___awmod,c
 16377  002D3A  6A12               	clrf	?i1___awmod+1,c
 16378  002D3C  BE11               	btfsc	?i1___awmod,7,c
 16379  002D3E  0612               	decf	?i1___awmod+1,f,c
 16380  002D40  EC4B  F02D         	call	i1___awmod	;wreg free
 16381  002D44  C011  F021         	movff	?i1___awmod,?i1___wmul
 16382  002D48  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16383  002D4C  EC87  F030         	call	i1___wmul	;wreg free
 16384  002D50  0E4F               	movlw	low __powers_
 16385  002D52  2421               	addwf	?i1___wmul,w,c
 16386  002D54  6EF6               	movwf	tblptrl,c
 16387  002D56  0E08               	movlw	high __powers_
 16388  002D58  2022               	addwfc	?i1___wmul+1,w,c
 16389  002D5A  6EF7               	movwf	tblptrh,c
 16390  002D5C  0009               	tblrd		*+
 16391  002D5E  CFF5 F060          	movff	tablat,??i1_scale
 16392  002D62  0009               	tblrd		*+
 16393  002D64  CFF5 F061          	movff	tablat,??i1_scale+1
 16394  002D68  0009               	tblrd		*+
 16395  002D6A  CFF5 F062          	movff	tablat,??i1_scale+2
 16396  002D6E  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16397  002D72  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16398  002D76  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16399  002D7A  EC84  F024         	call	i1___ftmul	;wreg free
 16400  002D7E  D05D               	goto	L24
 16401  002D80                     i1l11151:
 16402                           
 16403                           ;doprnt.c: 438: else if(scl > 10)
 16404  002D80  5047               	movf	i1scale@scl,w,c
 16405  002D82  0A80               	xorlw	128
 16406  002D84  0F75               	addlw	-139
 16407  002D86  A0D8               	btfss	status,0,c
 16408  002D88  D05F               	goto	i1l11157
 16409                           
 16410                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 16411  002D8A  0E00               	movlw	0
 16412  002D8C  6E24               	movwf	?i1___wmul+3,c
 16413  002D8E  0E03               	movlw	3
 16414  002D90  6E23               	movwf	?i1___wmul+2,c
 16415  002D92  0E00               	movlw	0
 16416  002D94  6E1B               	movwf	?i1___awdiv+3,c
 16417  002D96  0E0A               	movlw	10
 16418  002D98  6E1A               	movwf	?i1___awdiv+2,c
 16419  002D9A  5047               	movf	i1scale@scl,w,c
 16420  002D9C  6E18               	movwf	?i1___awdiv,c
 16421  002D9E  6A19               	clrf	?i1___awdiv+1,c
 16422  002DA0  BE18               	btfsc	?i1___awdiv,7,c
 16423  002DA2  0619               	decf	?i1___awdiv+1,f,c
 16424  002DA4  ECB5  F02B         	call	i1___awdiv	;wreg free
 16425  002DA8  0E09               	movlw	9
 16426  002DAA  2418               	addwf	?i1___awdiv,w,c
 16427  002DAC  6E21               	movwf	?i1___wmul,c
 16428  002DAE  0E00               	movlw	0
 16429  002DB0  2019               	addwfc	?i1___awdiv+1,w,c
 16430  002DB2  6E22               	movwf	?i1___wmul+1,c
 16431  002DB4  EC87  F030         	call	i1___wmul	;wreg free
 16432  002DB8  0E4F               	movlw	low __powers_
 16433  002DBA  2421               	addwf	?i1___wmul,w,c
 16434  002DBC  6EF6               	movwf	tblptrl,c
 16435  002DBE  0E08               	movlw	high __powers_
 16436  002DC0  2022               	addwfc	?i1___wmul+1,w,c
 16437  002DC2  6EF7               	movwf	tblptrh,c
 16438  002DC4  0009               	tblrd		*+
 16439  002DC6  CFF5 F060          	movff	tablat,??i1_scale
 16440  002DCA  0009               	tblrd		*+
 16441  002DCC  CFF5 F061          	movff	tablat,??i1_scale+1
 16442  002DD0  0009               	tblrd		*+
 16443  002DD2  CFF5 F062          	movff	tablat,??i1_scale+2
 16444  002DD6  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 16445  002DDA  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 16446  002DDE  C060  F036         	movff	??i1_scale,?i1___ftmul
 16447  002DE2  0E00               	movlw	0
 16448  002DE4  6E24               	movwf	?i1___wmul+3,c
 16449  002DE6  0E03               	movlw	3
 16450  002DE8  6E23               	movwf	?i1___wmul+2,c
 16451  002DEA  0E00               	movlw	0
 16452  002DEC  6E14               	movwf	?i1___awmod+3,c
 16453  002DEE  0E0A               	movlw	10
 16454  002DF0  6E13               	movwf	?i1___awmod+2,c
 16455  002DF2  5047               	movf	i1scale@scl,w,c
 16456  002DF4  6E11               	movwf	?i1___awmod,c
 16457  002DF6  6A12               	clrf	?i1___awmod+1,c
 16458  002DF8  BE11               	btfsc	?i1___awmod,7,c
 16459  002DFA  0612               	decf	?i1___awmod+1,f,c
 16460  002DFC  EC4B  F02D         	call	i1___awmod	;wreg free
 16461  002E00  C011  F021         	movff	?i1___awmod,?i1___wmul
 16462  002E04  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16463  002E08  EC87  F030         	call	i1___wmul	;wreg free
 16464  002E0C  0E4F               	movlw	low __powers_
 16465  002E0E  2421               	addwf	?i1___wmul,w,c
 16466  002E10  6EF6               	movwf	tblptrl,c
 16467  002E12  0E08               	movlw	high __powers_
 16468  002E14  2022               	addwfc	?i1___wmul+1,w,c
 16469  002E16  6EF7               	movwf	tblptrh,c
 16470  002E18  0009               	tblrd		*+
 16471  002E1A  CFF5 F063          	movff	tablat,??i1_scale+3
 16472  002E1E  0009               	tblrd		*+
 16473  002E20  CFF5 F064          	movff	tablat,??i1_scale+4
 16474  002E24  0009               	tblrd		*+
 16475  002E26  CFF5 F065          	movff	tablat,??i1_scale+5
 16476  002E2A  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 16477  002E2E  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 16478  002E32  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 16479  002E36  EC84  F024         	call	i1___ftmul	;wreg free
 16480  002E3A                     L24:
 16481  002E3A  C038  F049         	movff	?i1___ftmul+2,?i1_scale+2
 16482  002E3E  C037  F048         	movff	?i1___ftmul+1,?i1_scale+1
 16483  002E42  C036  F047         	movff	?i1___ftmul,?i1_scale
 16484  002E46  D017               	goto	i1l253
 16485  002E48                     i1l11157:
 16486                           
 16487                           ;doprnt.c: 440: return _powers_[scl];
 16488  002E48  5047               	movf	i1scale@scl,w,c
 16489  002E4A  0D03               	mullw	3
 16490  002E4C  0E4F               	movlw	low __powers_
 16491  002E4E  24F3               	addwf	prodl,w,c
 16492  002E50  6EF6               	movwf	tblptrl,c
 16493  002E52  0E08               	movlw	high __powers_
 16494  002E54                     L23:
 16495  002E54  20F4               	addwfc	prodh,w,c
 16496  002E56  6EF7               	movwf	tblptrh,c
 16497  002E58  0009               	tblrd		*+
 16498  002E5A  CFF5 F060          	movff	tablat,??i1_scale
 16499  002E5E  0009               	tblrd		*+
 16500  002E60  CFF5 F061          	movff	tablat,??i1_scale+1
 16501  002E64  0009               	tblrd		*+
 16502  002E66  CFF5 F062          	movff	tablat,??i1_scale+2
 16503  002E6A  C062  F049         	movff	??i1_scale+2,?i1_scale+2
 16504  002E6E  C061  F048         	movff	??i1_scale+1,?i1_scale+1
 16505  002E72  C060  F047         	movff	??i1_scale,?i1_scale
 16506  002E76                     i1l253:
 16507  002E76  0012               	return	
 16508  002E78                     __end_ofi1_scale:
 16509                           	opt stack 0
 16510                           pclatu	equ	0xFFB
 16511                           pclath	equ	0xFFA
 16512                           tblptru	equ	0xFF8
 16513                           tblptrh	equ	0xFF7
 16514                           tblptrl	equ	0xFF6
 16515                           tablat	equ	0xFF5
 16516                           prodh	equ	0xFF4
 16517                           prodl	equ	0xFF3
 16518                           intcon	equ	0xFF2
 16519                           intcon2	equ	0xFF1
 16520                           postinc0	equ	0xFEE
 16521                           fsr0h	equ	0xFEA
 16522                           fsr0l	equ	0xFE9
 16523                           wreg	equ	0xFE8
 16524                           fsr1h	equ	0xFE2
 16525                           fsr1l	equ	0xFE1
 16526                           bsr	equ	0xFE0
 16527                           indf2	equ	0xFDF
 16528                           postinc2	equ	0xFDE
 16529                           postdec2	equ	0xFDD
 16530                           fsr2h	equ	0xFDA
 16531                           fsr2l	equ	0xFD9
 16532                           status	equ	0xFD8
 16533                           
 16534 ;; *************** function i1___wmul *****************
 16535 ;; Defined at:
 16536 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
 16537 ;; Parameters:    Size  Location     Type
 16538 ;;  __wmul          2   32[COMRAM] unsigned int 
 16539 ;;  __wmul          2   34[COMRAM] unsigned int 
 16540 ;; Auto vars:     Size  Location     Type
 16541 ;;  __wmul          2   36[COMRAM] unsigned int 
 16542 ;; Return value:  Size  Location     Type
 16543 ;;                  2   32[COMRAM] unsigned int 
 16544 ;; Registers used:
 16545 ;;		wreg, status,2, status,0, prodl, prodh
 16546 ;; Tracked objects:
 16547 ;;		On entry : 0/0
 16548 ;;		On exit  : 0/0
 16549 ;;		Unchanged: 0/0
 16550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16551 ;;      Params:         4       0       0       0       0       0       0       0       0
 16552 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16553 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16554 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16555 ;;Total ram usage:        6 bytes
 16556 ;; Hardware stack levels used:    1
 16557 ;; Hardware stack levels required when called:    3
 16558 ;; This function calls:
 16559 ;;		Nothing
 16560 ;; This function is called by:
 16561 ;;		i1_fround
 16562 ;;		i1_scale
 16563 ;;		i1_sprintf
 16564 ;; This function uses a non-reentrant model
 16565 ;;
 16566                           
 16567                           	psect	text59
 16568  00610E                     __ptext59:
 16569                           	opt stack 0
 16570  00610E                     i1___wmul:
 16571                           	opt stack 20
 16572                           
 16573                           ;incstack = 0
 16574                           ;incstack = 0
 16575  00610E  5021               	movf	i1___wmul@multiplier,w,c
 16576  006110  0223               	mulwf	i1___wmul@multiplicand,c
 16577  006112  CFF3 F025          	movff	prodl,i1___wmul@product
 16578  006116  CFF4 F026          	movff	prodh,i1___wmul@product+1
 16579  00611A  5021               	movf	i1___wmul@multiplier,w,c
 16580  00611C  0224               	mulwf	i1___wmul@multiplicand+1,c
 16581  00611E  CFF3 FFF4          	movff	prodl,prodh
 16582  006122  6AF3               	clrf	prodl,c
 16583  006124  50F3               	movf	prodl,w,c
 16584  006126  2625               	addwf	i1___wmul@product,f,c
 16585  006128  50F4               	movf	prodh,w,c
 16586  00612A  2226               	addwfc	i1___wmul@product+1,f,c
 16587  00612C  5022               	movf	i1___wmul@multiplier+1,w,c
 16588  00612E  0223               	mulwf	i1___wmul@multiplicand,c
 16589  006130  CFF3 FFF4          	movff	prodl,prodh
 16590  006134  6AF3               	clrf	prodl,c
 16591  006136  50F3               	movf	prodl,w,c
 16592  006138  2625               	addwf	i1___wmul@product,f,c
 16593  00613A  50F4               	movf	prodh,w,c
 16594  00613C  2226               	addwfc	i1___wmul@product+1,f,c
 16595  00613E  C025  F021         	movff	i1___wmul@product,?i1___wmul
 16596  006142  C026  F022         	movff	i1___wmul@product+1,?i1___wmul+1
 16597  006146  0012               	return	
 16598  006148                     __end_ofi1___wmul:
 16599                           	opt stack 0
 16600                           pclatu	equ	0xFFB
 16601                           pclath	equ	0xFFA
 16602                           tblptru	equ	0xFF8
 16603                           tblptrh	equ	0xFF7
 16604                           tblptrl	equ	0xFF6
 16605                           tablat	equ	0xFF5
 16606                           prodh	equ	0xFF4
 16607                           prodl	equ	0xFF3
 16608                           intcon	equ	0xFF2
 16609                           intcon2	equ	0xFF1
 16610                           postinc0	equ	0xFEE
 16611                           fsr0h	equ	0xFEA
 16612                           fsr0l	equ	0xFE9
 16613                           wreg	equ	0xFE8
 16614                           fsr1h	equ	0xFE2
 16615                           fsr1l	equ	0xFE1
 16616                           bsr	equ	0xFE0
 16617                           indf2	equ	0xFDF
 16618                           postinc2	equ	0xFDE
 16619                           postdec2	equ	0xFDD
 16620                           fsr2h	equ	0xFDA
 16621                           fsr2l	equ	0xFD9
 16622                           status	equ	0xFD8
 16623                           
 16624 ;; *************** function i1___awmod *****************
 16625 ;; Defined at:
 16626 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
 16627 ;; Parameters:    Size  Location     Type
 16628 ;;  __awmod         2   16[COMRAM] int 
 16629 ;;  __awmod         2   18[COMRAM] int 
 16630 ;; Auto vars:     Size  Location     Type
 16631 ;;  __awmod         1   22[COMRAM] unsigned char 
 16632 ;;  __awmod         1   21[COMRAM] unsigned char 
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  2   16[COMRAM] int 
 16635 ;; Registers used:
 16636 ;;		wreg, status,2, status,0
 16637 ;; Tracked objects:
 16638 ;;		On entry : 0/0
 16639 ;;		On exit  : 0/0
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16642 ;;      Params:         4       0       0       0       0       0       0       0       0
 16643 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16644 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16645 ;;      Totals:         7       0       0       0       0       0       0       0       0
 16646 ;;Total ram usage:        7 bytes
 16647 ;; Hardware stack levels used:    1
 16648 ;; Hardware stack levels required when called:    3
 16649 ;; This function calls:
 16650 ;;		Nothing
 16651 ;; This function is called by:
 16652 ;;		i1_fround
 16653 ;;		i1_scale
 16654 ;; This function uses a non-reentrant model
 16655 ;;
 16656                           
 16657                           	psect	text60
 16658  005A96                     __ptext60:
 16659                           	opt stack 0
 16660  005A96                     i1___awmod:
 16661                           	opt stack 19
 16662                           
 16663                           ;incstack = 0
 16664                           ;incstack = 0
 16665  005A96  6E15               	movwf	??i1___awmod& (0+255),c
 16666  005A98  0E00               	movlw	0
 16667  005A9A  6E17               	movwf	i1___awmod@sign,c
 16668  005A9C  5015               	movf	??i1___awmod& (0+255),w,c
 16669  005A9E  AE12               	btfss	i1___awmod@dividend+1,7,c
 16670  005AA0  D008               	goto	i1l9131
 16671  005AA2  6C11               	negf	i1___awmod@dividend,c
 16672  005AA4  1E12               	comf	i1___awmod@dividend+1,f,c
 16673  005AA6  B0D8               	btfsc	status,0,c
 16674  005AA8  2A12               	incf	i1___awmod@dividend+1,f,c
 16675  005AAA  6E15               	movwf	??i1___awmod& (0+255),c
 16676  005AAC  0E01               	movlw	1
 16677  005AAE  6E17               	movwf	i1___awmod@sign,c
 16678  005AB0  5015               	movf	??i1___awmod& (0+255),w,c
 16679  005AB2                     i1l9131:
 16680  005AB2  AE14               	btfss	i1___awmod@divisor+1,7,c
 16681  005AB4  D004               	goto	i1l9135
 16682  005AB6  6C13               	negf	i1___awmod@divisor,c
 16683  005AB8  1E14               	comf	i1___awmod@divisor+1,f,c
 16684  005ABA  B0D8               	btfsc	status,0,c
 16685  005ABC  2A14               	incf	i1___awmod@divisor+1,f,c
 16686  005ABE                     i1l9135:
 16687  005ABE  5014               	movf	i1___awmod@divisor+1,w,c
 16688  005AC0  1013               	iorwf	i1___awmod@divisor,w,c
 16689  005AC2  B4D8               	btfsc	status,2,c
 16690  005AC4  D01A               	goto	i1l9151
 16691  005AC6  6E15               	movwf	??i1___awmod& (0+255),c
 16692  005AC8  0E01               	movlw	1
 16693  005ACA  6E16               	movwf	i1___awmod@counter,c
 16694  005ACC  5015               	movf	??i1___awmod& (0+255),w,c
 16695  005ACE  D004               	goto	i1l9141
 16696  005AD0                     i1l9139:
 16697  005AD0  90D8               	bcf	status,0,c
 16698  005AD2  3613               	rlcf	i1___awmod@divisor,f,c
 16699  005AD4  3614               	rlcf	i1___awmod@divisor+1,f,c
 16700  005AD6  2A16               	incf	i1___awmod@counter,f,c
 16701  005AD8                     i1l9141:
 16702  005AD8  AE14               	btfss	i1___awmod@divisor+1,7,c
 16703  005ADA  D7FA               	goto	i1l9139
 16704  005ADC                     i1l9143:
 16705  005ADC  5013               	movf	i1___awmod@divisor,w,c
 16706  005ADE  5C11               	subwf	i1___awmod@dividend,w,c
 16707  005AE0  5014               	movf	i1___awmod@divisor+1,w,c
 16708  005AE2  5812               	subwfb	i1___awmod@dividend+1,w,c
 16709  005AE4  A0D8               	btfss	status,0,c
 16710  005AE6  D004               	goto	i1l9147
 16711  005AE8  5013               	movf	i1___awmod@divisor,w,c
 16712  005AEA  5E11               	subwf	i1___awmod@dividend,f,c
 16713  005AEC  5014               	movf	i1___awmod@divisor+1,w,c
 16714  005AEE  5A12               	subwfb	i1___awmod@dividend+1,f,c
 16715  005AF0                     i1l9147:
 16716  005AF0  90D8               	bcf	status,0,c
 16717  005AF2  3214               	rrcf	i1___awmod@divisor+1,f,c
 16718  005AF4  3213               	rrcf	i1___awmod@divisor,f,c
 16719  005AF6  2E16               	decfsz	i1___awmod@counter,f,c
 16720  005AF8  D7F1               	goto	i1l9143
 16721  005AFA                     i1l9151:
 16722  005AFA  5017               	movf	i1___awmod@sign,w,c
 16723  005AFC  B4D8               	btfsc	status,2,c
 16724  005AFE  D004               	goto	i1l9155
 16725  005B00  6C11               	negf	i1___awmod@dividend,c
 16726  005B02  1E12               	comf	i1___awmod@dividend+1,f,c
 16727  005B04  B0D8               	btfsc	status,0,c
 16728  005B06  2A12               	incf	i1___awmod@dividend+1,f,c
 16729  005B08                     i1l9155:
 16730  005B08  C011  F011         	movff	i1___awmod@dividend,?i1___awmod
 16731  005B0C  C012  F012         	movff	i1___awmod@dividend+1,?i1___awmod+1
 16732  005B10  0012               	return	
 16733  005B12                     __end_ofi1___awmod:
 16734                           	opt stack 0
 16735                           pclatu	equ	0xFFB
 16736                           pclath	equ	0xFFA
 16737                           tblptru	equ	0xFF8
 16738                           tblptrh	equ	0xFF7
 16739                           tblptrl	equ	0xFF6
 16740                           tablat	equ	0xFF5
 16741                           prodh	equ	0xFF4
 16742                           prodl	equ	0xFF3
 16743                           intcon	equ	0xFF2
 16744                           intcon2	equ	0xFF1
 16745                           postinc0	equ	0xFEE
 16746                           fsr0h	equ	0xFEA
 16747                           fsr0l	equ	0xFE9
 16748                           wreg	equ	0xFE8
 16749                           fsr1h	equ	0xFE2
 16750                           fsr1l	equ	0xFE1
 16751                           bsr	equ	0xFE0
 16752                           indf2	equ	0xFDF
 16753                           postinc2	equ	0xFDE
 16754                           postdec2	equ	0xFDD
 16755                           fsr2h	equ	0xFDA
 16756                           fsr2l	equ	0xFD9
 16757                           status	equ	0xFD8
 16758                           
 16759 ;; *************** function i1___awdiv *****************
 16760 ;; Defined at:
 16761 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
 16762 ;; Parameters:    Size  Location     Type
 16763 ;;  __awdiv         2   23[COMRAM] int 
 16764 ;;  __awdiv         2   25[COMRAM] int 
 16765 ;; Auto vars:     Size  Location     Type
 16766 ;;  __awdiv         2   30[COMRAM] int 
 16767 ;;  __awdiv         1   29[COMRAM] unsigned char 
 16768 ;;  __awdiv         1   28[COMRAM] unsigned char 
 16769 ;; Return value:  Size  Location     Type
 16770 ;;                  2   23[COMRAM] int 
 16771 ;; Registers used:
 16772 ;;		wreg, status,2, status,0
 16773 ;; Tracked objects:
 16774 ;;		On entry : 0/0
 16775 ;;		On exit  : 0/0
 16776 ;;		Unchanged: 0/0
 16777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16778 ;;      Params:         4       0       0       0       0       0       0       0       0
 16779 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16780 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16781 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16782 ;;Total ram usage:        9 bytes
 16783 ;; Hardware stack levels used:    1
 16784 ;; Hardware stack levels required when called:    3
 16785 ;; This function calls:
 16786 ;;		Nothing
 16787 ;; This function is called by:
 16788 ;;		i1_fround
 16789 ;;		i1_scale
 16790 ;;		i1_sprintf
 16791 ;; This function uses a non-reentrant model
 16792 ;;
 16793                           
 16794                           	psect	text61
 16795  00576A                     __ptext61:
 16796                           	opt stack 0
 16797  00576A                     i1___awdiv:
 16798                           	opt stack 20
 16799                           
 16800                           ;incstack = 0
 16801                           ;incstack = 0
 16802  00576A  6E1C               	movwf	??i1___awdiv& (0+255),c
 16803  00576C  0E00               	movlw	0
 16804  00576E  6E1E               	movwf	i1___awdiv@sign,c
 16805  005770  501C               	movf	??i1___awdiv& (0+255),w,c
 16806  005772  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 16807  005774  D008               	goto	i1l9087
 16808  005776  6C1A               	negf	i1___awdiv@divisor,c
 16809  005778  1E1B               	comf	i1___awdiv@divisor+1,f,c
 16810  00577A  B0D8               	btfsc	status,0,c
 16811  00577C  2A1B               	incf	i1___awdiv@divisor+1,f,c
 16812  00577E  6E1C               	movwf	??i1___awdiv& (0+255),c
 16813  005780  0E01               	movlw	1
 16814  005782  6E1E               	movwf	i1___awdiv@sign,c
 16815  005784  501C               	movf	??i1___awdiv& (0+255),w,c
 16816  005786                     i1l9087:
 16817  005786  AE19               	btfss	i1___awdiv@dividend+1,7,c
 16818  005788  D006               	goto	i1l9093
 16819  00578A  6C18               	negf	i1___awdiv@dividend,c
 16820  00578C  1E19               	comf	i1___awdiv@dividend+1,f,c
 16821  00578E  B0D8               	btfsc	status,0,c
 16822  005790  2A19               	incf	i1___awdiv@dividend+1,f,c
 16823  005792  0E01               	movlw	1
 16824  005794  1A1E               	xorwf	i1___awdiv@sign,f,c
 16825  005796                     i1l9093:
 16826  005796  0E00               	movlw	0
 16827  005798  6E20               	movwf	i1___awdiv@quotient+1,c
 16828  00579A  0E00               	movlw	0
 16829  00579C  6E1F               	movwf	i1___awdiv@quotient,c
 16830  00579E  501B               	movf	i1___awdiv@divisor+1,w,c
 16831  0057A0  101A               	iorwf	i1___awdiv@divisor,w,c
 16832  0057A2  B4D8               	btfsc	status,2,c
 16833  0057A4  D01E               	goto	i1l9115
 16834  0057A6  6E1C               	movwf	??i1___awdiv& (0+255),c
 16835  0057A8  0E01               	movlw	1
 16836  0057AA  6E1D               	movwf	i1___awdiv@counter,c
 16837  0057AC  501C               	movf	??i1___awdiv& (0+255),w,c
 16838  0057AE  D004               	goto	i1l9101
 16839  0057B0                     i1l9099:
 16840  0057B0  90D8               	bcf	status,0,c
 16841  0057B2  361A               	rlcf	i1___awdiv@divisor,f,c
 16842  0057B4  361B               	rlcf	i1___awdiv@divisor+1,f,c
 16843  0057B6  2A1D               	incf	i1___awdiv@counter,f,c
 16844  0057B8                     i1l9101:
 16845  0057B8  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 16846  0057BA  D7FA               	goto	i1l9099
 16847  0057BC                     i1l9103:
 16848  0057BC  90D8               	bcf	status,0,c
 16849  0057BE  361F               	rlcf	i1___awdiv@quotient,f,c
 16850  0057C0  3620               	rlcf	i1___awdiv@quotient+1,f,c
 16851  0057C2  501A               	movf	i1___awdiv@divisor,w,c
 16852  0057C4  5C18               	subwf	i1___awdiv@dividend,w,c
 16853  0057C6  501B               	movf	i1___awdiv@divisor+1,w,c
 16854  0057C8  5819               	subwfb	i1___awdiv@dividend+1,w,c
 16855  0057CA  A0D8               	btfss	status,0,c
 16856  0057CC  D005               	goto	i1l9111
 16857  0057CE  501A               	movf	i1___awdiv@divisor,w,c
 16858  0057D0  5E18               	subwf	i1___awdiv@dividend,f,c
 16859  0057D2  501B               	movf	i1___awdiv@divisor+1,w,c
 16860  0057D4  5A19               	subwfb	i1___awdiv@dividend+1,f,c
 16861  0057D6  801F               	bsf	i1___awdiv@quotient,0,c
 16862  0057D8                     i1l9111:
 16863  0057D8  90D8               	bcf	status,0,c
 16864  0057DA  321B               	rrcf	i1___awdiv@divisor+1,f,c
 16865  0057DC  321A               	rrcf	i1___awdiv@divisor,f,c
 16866  0057DE  2E1D               	decfsz	i1___awdiv@counter,f,c
 16867  0057E0  D7ED               	goto	i1l9103
 16868  0057E2                     i1l9115:
 16869  0057E2  501E               	movf	i1___awdiv@sign,w,c
 16870  0057E4  B4D8               	btfsc	status,2,c
 16871  0057E6  D004               	goto	i1l9119
 16872  0057E8  6C1F               	negf	i1___awdiv@quotient,c
 16873  0057EA  1E20               	comf	i1___awdiv@quotient+1,f,c
 16874  0057EC  B0D8               	btfsc	status,0,c
 16875  0057EE  2A20               	incf	i1___awdiv@quotient+1,f,c
 16876  0057F0                     i1l9119:
 16877  0057F0  C01F  F018         	movff	i1___awdiv@quotient,?i1___awdiv
 16878  0057F4  C020  F019         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
 16879  0057F8  0012               	return	
 16880  0057FA                     __end_ofi1___awdiv:
 16881                           	opt stack 0
 16882                           pclatu	equ	0xFFB
 16883                           pclath	equ	0xFFA
 16884                           tblptru	equ	0xFF8
 16885                           tblptrh	equ	0xFF7
 16886                           tblptrl	equ	0xFF6
 16887                           tablat	equ	0xFF5
 16888                           prodh	equ	0xFF4
 16889                           prodl	equ	0xFF3
 16890                           intcon	equ	0xFF2
 16891                           intcon2	equ	0xFF1
 16892                           postinc0	equ	0xFEE
 16893                           fsr0h	equ	0xFEA
 16894                           fsr0l	equ	0xFE9
 16895                           wreg	equ	0xFE8
 16896                           fsr1h	equ	0xFE2
 16897                           fsr1l	equ	0xFE1
 16898                           bsr	equ	0xFE0
 16899                           indf2	equ	0xFDF
 16900                           postinc2	equ	0xFDE
 16901                           postdec2	equ	0xFDD
 16902                           fsr2h	equ	0xFDA
 16903                           fsr2l	equ	0xFD9
 16904                           status	equ	0xFD8
 16905                           
 16906 ;; *************** function i1_fround *****************
 16907 ;; Defined at:
 16908 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;  fround          1   70[COMRAM] unsigned char 
 16911 ;; Auto vars:     Size  Location     Type
 16912 ;;  fround          3    0        float 
 16913 ;;  fround          3    0        float 
 16914 ;;  fround          3    0        float 
 16915 ;; Return value:  Size  Location     Type
 16916 ;;                  3   70[COMRAM] float 
 16917 ;; Registers used:
 16918 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16919 ;; Tracked objects:
 16920 ;;		On entry : 0/0
 16921 ;;		On exit  : 0/0
 16922 ;;		Unchanged: 0/0
 16923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16924 ;;      Params:         3       0       0       0       0       0       0       0       0
 16925 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16926 ;;      Temps:          0       6       0       0       0       0       0       0       0
 16927 ;;      Totals:         3      12       0       0       0       0       0       0       0
 16928 ;;Total ram usage:       15 bytes
 16929 ;; Hardware stack levels used:    1
 16930 ;; Hardware stack levels required when called:    5
 16931 ;; This function calls:
 16932 ;;		i1___awdiv
 16933 ;;		i1___awmod
 16934 ;;		i1___ftmul
 16935 ;;		i1___wmul
 16936 ;; This function is called by:
 16937 ;;		i1_sprintf
 16938 ;; This function uses a non-reentrant model
 16939 ;;
 16940                           
 16941                           	psect	text62
 16942  003532                     __ptext62:
 16943                           	opt stack 0
 16944  003532                     i1_fround:
 16945                           	opt stack 18
 16946                           
 16947                           ;doprnt.c: 413: if(prec>=110)
 16948                           
 16949                           ;incstack = 0
 16950                           ;incstack = 0
 16951  003532  0E6D               	movlw	109
 16952  003534  6447               	cpfsgt	i1fround@prec,c
 16953  003536  D0AB               	goto	i1l11109
 16954                           
 16955                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16956  003538  0E00               	movlw	0
 16957  00353A  6E24               	movwf	?i1___wmul+3,c
 16958  00353C  0E03               	movlw	3
 16959  00353E  6E23               	movwf	?i1___wmul+2,c
 16960  003540  0E00               	movlw	0
 16961  003542  6E1B               	movwf	?i1___awdiv+3,c
 16962  003544  0E0A               	movlw	10
 16963  003546  6E1A               	movwf	?i1___awdiv+2,c
 16964  003548  0E00               	movlw	0
 16965  00354A  6E14               	movwf	?i1___awmod+3,c
 16966  00354C  0E64               	movlw	100
 16967  00354E  6E13               	movwf	?i1___awmod+2,c
 16968  003550  C047  F011         	movff	i1fround@prec,?i1___awmod
 16969  003554  6A12               	clrf	?i1___awmod+1,c
 16970  003556  EC4B  F02D         	call	i1___awmod	;wreg free
 16971  00355A  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16972  00355E  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16973  003562  ECB5  F02B         	call	i1___awdiv	;wreg free
 16974  003566  0E09               	movlw	9
 16975  003568  2418               	addwf	?i1___awdiv,w,c
 16976  00356A  6E21               	movwf	?i1___wmul,c
 16977  00356C  0E00               	movlw	0
 16978  00356E  2019               	addwfc	?i1___awdiv+1,w,c
 16979  003570  6E22               	movwf	?i1___wmul+1,c
 16980  003572  EC87  F030         	call	i1___wmul	;wreg free
 16981  003576  0E28               	movlw	low __npowers_
 16982  003578  2421               	addwf	?i1___wmul,w,c
 16983  00357A  6EF6               	movwf	tblptrl,c
 16984  00357C  0E08               	movlw	high __npowers_
 16985  00357E  2022               	addwfc	?i1___wmul+1,w,c
 16986  003580  6EF7               	movwf	tblptrh,c
 16987  003582  0009               	tblrd		*+
 16988  003584  CFF5 F060          	movff	tablat,??i1_fround
 16989  003588  0009               	tblrd		*+
 16990  00358A  CFF5 F061          	movff	tablat,??i1_fround+1
 16991  00358E  0009               	tblrd		*+
 16992  003590  CFF5 F062          	movff	tablat,??i1_fround+2
 16993  003594  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 16994  003598  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 16995  00359C  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 16996  0035A0  0E00               	movlw	0
 16997  0035A2  6E24               	movwf	?i1___wmul+3,c
 16998  0035A4  0E03               	movlw	3
 16999  0035A6  6E23               	movwf	?i1___wmul+2,c
 17000  0035A8  0E00               	movlw	0
 17001  0035AA  6E1B               	movwf	?i1___awdiv+3,c
 17002  0035AC  0E64               	movlw	100
 17003  0035AE  6E1A               	movwf	?i1___awdiv+2,c
 17004  0035B0  C047  F018         	movff	i1fround@prec,?i1___awdiv
 17005  0035B4  6A19               	clrf	?i1___awdiv+1,c
 17006  0035B6  ECB5  F02B         	call	i1___awdiv	;wreg free
 17007  0035BA  0E12               	movlw	18
 17008  0035BC  2418               	addwf	?i1___awdiv,w,c
 17009  0035BE  6E21               	movwf	?i1___wmul,c
 17010  0035C0  0E00               	movlw	0
 17011  0035C2  2019               	addwfc	?i1___awdiv+1,w,c
 17012  0035C4  6E22               	movwf	?i1___wmul+1,c
 17013  0035C6  EC87  F030         	call	i1___wmul	;wreg free
 17014  0035CA  0E28               	movlw	low __npowers_
 17015  0035CC  2421               	addwf	?i1___wmul,w,c
 17016  0035CE  6EF6               	movwf	tblptrl,c
 17017  0035D0  0E08               	movlw	high __npowers_
 17018  0035D2  2022               	addwfc	?i1___wmul+1,w,c
 17019  0035D4  6EF7               	movwf	tblptrh,c
 17020  0035D6  0009               	tblrd		*+
 17021  0035D8  CFF5 F063          	movff	tablat,??i1_fround+3
 17022  0035DC  0009               	tblrd		*+
 17023  0035DE  CFF5 F064          	movff	tablat,??i1_fround+4
 17024  0035E2  0009               	tblrd		*+
 17025  0035E4  CFF5 F065          	movff	tablat,??i1_fround+5
 17026  0035E8  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 17027  0035EC  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 17028  0035F0  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 17029  0035F4  EC84  F024         	call	i1___ftmul	;wreg free
 17030  0035F8  C038  F06B         	movff	?i1___ftmul+2,i1_fround$1826+2
 17031  0035FC  C037  F06A         	movff	?i1___ftmul+1,i1_fround$1826+1
 17032  003600  C036  F069         	movff	?i1___ftmul,i1_fround$1826
 17033                           
 17034                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17035  003604  0E00               	movlw	0
 17036  003606  6E24               	movwf	?i1___wmul+3,c
 17037  003608  0E03               	movlw	3
 17038  00360A  6E23               	movwf	?i1___wmul+2,c
 17039  00360C  0E00               	movlw	0
 17040  00360E  6E14               	movwf	?i1___awmod+3,c
 17041  003610  0E0A               	movlw	10
 17042  003612  6E13               	movwf	?i1___awmod+2,c
 17043  003614  C047  F011         	movff	i1fround@prec,?i1___awmod
 17044  003618  6A12               	clrf	?i1___awmod+1,c
 17045  00361A  EC4B  F02D         	call	i1___awmod	;wreg free
 17046  00361E  C011  F021         	movff	?i1___awmod,?i1___wmul
 17047  003622  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17048  003626  EC87  F030         	call	i1___wmul	;wreg free
 17049  00362A  0E28               	movlw	low __npowers_
 17050  00362C  2421               	addwf	?i1___wmul,w,c
 17051  00362E  6EF6               	movwf	tblptrl,c
 17052  003630  0E08               	movlw	high __npowers_
 17053  003632  2022               	addwfc	?i1___wmul+1,w,c
 17054  003634  6EF7               	movwf	tblptrh,c
 17055  003636  0009               	tblrd		*+
 17056  003638  CFF5 F060          	movff	tablat,??i1_fround
 17057  00363C  0009               	tblrd		*+
 17058  00363E  CFF5 F061          	movff	tablat,??i1_fround+1
 17059  003642  0009               	tblrd		*+
 17060  003644  CFF5 F062          	movff	tablat,??i1_fround+2
 17061  003648  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17062  00364C  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17063  003650  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17064  003654  C069  F036         	movff	i1_fround$1826,?i1___ftmul
 17065  003658  C06A  F037         	movff	i1_fround$1826+1,?i1___ftmul+1
 17066  00365C  C06B  F038         	movff	i1_fround$1826+2,?i1___ftmul+2
 17067  003660  EC84  F024         	call	i1___ftmul	;wreg free
 17068  003664  C038  F068         	movff	?i1___ftmul+2,i1_fround$1827+2
 17069  003668  C037  F067         	movff	?i1___ftmul+1,i1_fround$1827+1
 17070  00366C  C036  F066         	movff	?i1___ftmul,i1_fround$1827
 17071                           
 17072                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17073  003670  C066  F036         	movff	i1_fround$1827,?i1___ftmul
 17074  003674  C067  F037         	movff	i1_fround$1827+1,?i1___ftmul+1
 17075  003678  C068  F038         	movff	i1_fround$1827+2,?i1___ftmul+2
 17076  00367C  0E00               	movlw	0
 17077  00367E  6E39               	movwf	?i1___ftmul+3,c
 17078  003680  0E00               	movlw	0
 17079  003682  6E3A               	movwf	?i1___ftmul+4,c
 17080  003684  0E3F               	movlw	63
 17081  003686  6E3B               	movwf	?i1___ftmul+5,c
 17082  003688  EC84  F024         	call	i1___ftmul	;wreg free
 17083  00368C  D08B               	goto	L26
 17084  00368E                     i1l11109:
 17085                           
 17086                           ;doprnt.c: 415: else if(prec > 10)
 17087  00368E  0E0A               	movlw	10
 17088  003690  6447               	cpfsgt	i1fround@prec,c
 17089  003692  D069               	goto	i1l11117
 17090                           
 17091                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17092  003694  0E00               	movlw	0
 17093  003696  6E24               	movwf	?i1___wmul+3,c
 17094  003698  0E03               	movlw	3
 17095  00369A  6E23               	movwf	?i1___wmul+2,c
 17096  00369C  0E00               	movlw	0
 17097  00369E  6E14               	movwf	?i1___awmod+3,c
 17098  0036A0  0E0A               	movlw	10
 17099  0036A2  6E13               	movwf	?i1___awmod+2,c
 17100  0036A4  C047  F011         	movff	i1fround@prec,?i1___awmod
 17101  0036A8  6A12               	clrf	?i1___awmod+1,c
 17102  0036AA  EC4B  F02D         	call	i1___awmod	;wreg free
 17103  0036AE  C011  F021         	movff	?i1___awmod,?i1___wmul
 17104  0036B2  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17105  0036B6  EC87  F030         	call	i1___wmul	;wreg free
 17106  0036BA  0E28               	movlw	low __npowers_
 17107  0036BC  2421               	addwf	?i1___wmul,w,c
 17108  0036BE  6EF6               	movwf	tblptrl,c
 17109  0036C0  0E08               	movlw	high __npowers_
 17110  0036C2  2022               	addwfc	?i1___wmul+1,w,c
 17111  0036C4  6EF7               	movwf	tblptrh,c
 17112  0036C6  0009               	tblrd		*+
 17113  0036C8  CFF5 F060          	movff	tablat,??i1_fround
 17114  0036CC  0009               	tblrd		*+
 17115  0036CE  CFF5 F061          	movff	tablat,??i1_fround+1
 17116  0036D2  0009               	tblrd		*+
 17117  0036D4  CFF5 F062          	movff	tablat,??i1_fround+2
 17118  0036D8  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17119  0036DC  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17120  0036E0  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17121  0036E4  0E00               	movlw	0
 17122  0036E6  6E24               	movwf	?i1___wmul+3,c
 17123  0036E8  0E03               	movlw	3
 17124  0036EA  6E23               	movwf	?i1___wmul+2,c
 17125  0036EC  0E00               	movlw	0
 17126  0036EE  6E1B               	movwf	?i1___awdiv+3,c
 17127  0036F0  0E0A               	movlw	10
 17128  0036F2  6E1A               	movwf	?i1___awdiv+2,c
 17129  0036F4  C047  F018         	movff	i1fround@prec,?i1___awdiv
 17130  0036F8  6A19               	clrf	?i1___awdiv+1,c
 17131  0036FA  ECB5  F02B         	call	i1___awdiv	;wreg free
 17132  0036FE  0E09               	movlw	9
 17133  003700  2418               	addwf	?i1___awdiv,w,c
 17134  003702  6E21               	movwf	?i1___wmul,c
 17135  003704  0E00               	movlw	0
 17136  003706  2019               	addwfc	?i1___awdiv+1,w,c
 17137  003708  6E22               	movwf	?i1___wmul+1,c
 17138  00370A  EC87  F030         	call	i1___wmul	;wreg free
 17139  00370E  0E28               	movlw	low __npowers_
 17140  003710  2421               	addwf	?i1___wmul,w,c
 17141  003712  6EF6               	movwf	tblptrl,c
 17142  003714  0E08               	movlw	high __npowers_
 17143  003716  2022               	addwfc	?i1___wmul+1,w,c
 17144  003718  6EF7               	movwf	tblptrh,c
 17145  00371A  0009               	tblrd		*+
 17146  00371C  CFF5 F063          	movff	tablat,??i1_fround+3
 17147  003720  0009               	tblrd		*+
 17148  003722  CFF5 F064          	movff	tablat,??i1_fround+4
 17149  003726  0009               	tblrd		*+
 17150  003728  CFF5 F065          	movff	tablat,??i1_fround+5
 17151  00372C  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 17152  003730  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 17153  003734  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 17154  003738  EC84  F024         	call	i1___ftmul	;wreg free
 17155  00373C  C038  F06B         	movff	?i1___ftmul+2,i1_fround$1826+2
 17156  003740  C037  F06A         	movff	?i1___ftmul+1,i1_fround$1826+1
 17157  003744  C036  F069         	movff	?i1___ftmul,i1_fround$1826
 17158                           
 17159                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17160  003748  C069  F036         	movff	i1_fround$1826,?i1___ftmul
 17161  00374C  C06A  F037         	movff	i1_fround$1826+1,?i1___ftmul+1
 17162  003750  C06B  F038         	movff	i1_fround$1826+2,?i1___ftmul+2
 17163  003754  0E00               	movlw	0
 17164  003756  6E39               	movwf	?i1___ftmul+3,c
 17165  003758  0E00               	movlw	0
 17166  00375A  6E3A               	movwf	?i1___ftmul+4,c
 17167  00375C  0E3F               	movlw	63
 17168  00375E  6E3B               	movwf	?i1___ftmul+5,c
 17169  003760  EC84  F024         	call	i1___ftmul	;wreg free
 17170  003764  D01F               	goto	L26
 17171  003766                     i1l11117:
 17172                           
 17173                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17174  003766  5047               	movf	i1fround@prec,w,c
 17175  003768  0D03               	mullw	3
 17176  00376A  0E28               	movlw	low __npowers_
 17177  00376C  24F3               	addwf	prodl,w,c
 17178  00376E  6EF6               	movwf	tblptrl,c
 17179  003770  0E08               	movlw	high __npowers_
 17180  003772  20F4               	addwfc	prodh,w,c
 17181  003774  6EF7               	movwf	tblptrh,c
 17182  003776  0009               	tblrd		*+
 17183  003778  CFF5 F060          	movff	tablat,??i1_fround
 17184  00377C  0009               	tblrd		*+
 17185  00377E  CFF5 F061          	movff	tablat,??i1_fround+1
 17186  003782  0009               	tblrd		*+
 17187  003784  CFF5 F062          	movff	tablat,??i1_fround+2
 17188  003788  C062  F038         	movff	??i1_fround+2,?i1___ftmul+2
 17189  00378C  C061  F037         	movff	??i1_fround+1,?i1___ftmul+1
 17190  003790  C060  F036         	movff	??i1_fround,?i1___ftmul
 17191  003794  0E00               	movlw	0
 17192  003796  6E39               	movwf	?i1___ftmul+3,c
 17193  003798  0E00               	movlw	0
 17194  00379A  6E3A               	movwf	?i1___ftmul+4,c
 17195  00379C  0E3F               	movlw	63
 17196  00379E  6E3B               	movwf	?i1___ftmul+5,c
 17197  0037A0  EC84  F024         	call	i1___ftmul	;wreg free
 17198  0037A4                     L26:
 17199  0037A4  C038  F049         	movff	?i1___ftmul+2,?i1_fround+2
 17200  0037A8  C037  F048         	movff	?i1___ftmul+1,?i1_fround+1
 17201  0037AC  C036  F047         	movff	?i1___ftmul,?i1_fround
 17202  0037B0  0012               	return	
 17203  0037B2                     __end_ofi1_fround:
 17204                           	opt stack 0
 17205                           pclatu	equ	0xFFB
 17206                           pclath	equ	0xFFA
 17207                           tblptru	equ	0xFF8
 17208                           tblptrh	equ	0xFF7
 17209                           tblptrl	equ	0xFF6
 17210                           tablat	equ	0xFF5
 17211                           prodh	equ	0xFF4
 17212                           prodl	equ	0xFF3
 17213                           intcon	equ	0xFF2
 17214                           intcon2	equ	0xFF1
 17215                           postinc0	equ	0xFEE
 17216                           fsr0h	equ	0xFEA
 17217                           fsr0l	equ	0xFE9
 17218                           wreg	equ	0xFE8
 17219                           fsr1h	equ	0xFE2
 17220                           fsr1l	equ	0xFE1
 17221                           bsr	equ	0xFE0
 17222                           indf2	equ	0xFDF
 17223                           postinc2	equ	0xFDE
 17224                           postdec2	equ	0xFDD
 17225                           fsr2h	equ	0xFDA
 17226                           fsr2l	equ	0xFD9
 17227                           status	equ	0xFD8
 17228                           
 17229 ;; *************** function i1_Read_LDR *****************
 17230 ;; Defined at:
 17231 ;;		line 281 in file "main.c"
 17232 ;; Parameters:    Size  Location     Type
 17233 ;;		None
 17234 ;; Auto vars:     Size  Location     Type
 17235 ;;  Read_LDR        3   21[BANK0 ] float 
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  3   70[COMRAM] float 
 17238 ;; Registers used:
 17239 ;;		wreg, status,2, status,0, cstack
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/0
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17245 ;;      Params:         3       0       0       0       0       0       0       0       0
 17246 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17247 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17248 ;;      Totals:         3       7       0       0       0       0       0       0       0
 17249 ;;Total ram usage:       10 bytes
 17250 ;; Hardware stack levels used:    1
 17251 ;; Hardware stack levels required when called:    5
 17252 ;; This function calls:
 17253 ;;		i1___awtoft
 17254 ;;		i1___ftdiv
 17255 ;;		i1___ftmul
 17256 ;; This function is called by:
 17257 ;;		_interrupcaoLOW
 17258 ;; This function uses a non-reentrant model
 17259 ;;
 17260                           
 17261                           	psect	text63
 17262  004F16                     __ptext63:
 17263                           	opt stack 0
 17264  004F16                     i1_Read_LDR:
 17265                           	opt stack 19
 17266                           
 17267                           ;main.c: 282: float analog_reading = 0;
 17268                           
 17269                           ;incstack = 0
 17270                           ;incstack = 0
 17271  004F16  0E00               	movlw	0
 17272  004F18  0100               	movlb	0	; () banked
 17273  004F1A  0100               	movlb	0	; () banked
 17274  004F1C  6F75               	movwf	i1Read_LDR@analog_reading& (0+255),b
 17275  004F1E  0E00               	movlw	0
 17276  004F20  0100               	movlb	0	; () banked
 17277  004F22  0100               	movlb	0	; () banked
 17278  004F24  6F76               	movwf	(i1Read_LDR@analog_reading+1)& (0+255),b
 17279  004F26  0E00               	movlw	0
 17280  004F28  0100               	movlb	0	; () banked
 17281  004F2A  0100               	movlb	0	; () banked
 17282  004F2C  6F77               	movwf	(i1Read_LDR@analog_reading+2)& (0+255),b
 17283                           
 17284                           ; BSR set to: 0
 17285                           ;main.c: 283: ADCON0 |= ((1 << ADON) | (1 << GO));
 17286  004F2E  0E00               	movlw	0
 17287  004F30  B2C2               	btfsc	4034,1,c	;volatile
 17288  004F32  0E01               	movlw	1
 17289  004F34  0100               	movlb	0	; () banked
 17290  004F36  6F71               	movwf	??i1_Read_LDR& (0+255),b
 17291  004F38  0E01               	movlw	1
 17292  004F3A  0100               	movlb	0	; () banked
 17293  004F3C  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 17294  004F3E  0100               	movlb	0	; () banked
 17295  004F40  2B71               	incf	??i1_Read_LDR& (0+255),f,b
 17296  004F42  D003               	goto	i1u1039_24
 17297  004F44                     i1u1039_25:
 17298  004F44  0100               	movlb	0	; () banked
 17299  004F46  90D8               	bcf	status,0,c
 17300  004F48  3772               	rlcf	(??i1_Read_LDR+1)& (0+255),f,b
 17301  004F4A                     i1u1039_24:
 17302  004F4A  0100               	movlb	0	; () banked
 17303  004F4C  2F71               	decfsz	??i1_Read_LDR& (0+255),f,b
 17304  004F4E  D7FA               	goto	i1u1039_25
 17305  004F50  0E00               	movlw	0
 17306  004F52  B0C2               	btfsc	4034,0,c	;volatile
 17307  004F54  0E01               	movlw	1
 17308  004F56  0100               	movlb	0	; () banked
 17309  004F58  6F73               	movwf	(??i1_Read_LDR+2)& (0+255),b
 17310  004F5A  0E01               	movlw	1
 17311  004F5C  0100               	movlb	0	; () banked
 17312  004F5E  6F74               	movwf	(??i1_Read_LDR+3)& (0+255),b
 17313  004F60  0100               	movlb	0	; () banked
 17314  004F62  2B73               	incf	(??i1_Read_LDR+2)& (0+255),f,b
 17315  004F64  D003               	goto	i1u1040_24
 17316  004F66                     i1u1040_25:
 17317  004F66  0100               	movlb	0	; () banked
 17318  004F68  90D8               	bcf	status,0,c
 17319  004F6A  3774               	rlcf	(??i1_Read_LDR+3)& (0+255),f,b
 17320  004F6C                     i1u1040_24:
 17321  004F6C  0100               	movlb	0	; () banked
 17322  004F6E  2F73               	decfsz	(??i1_Read_LDR+2)& (0+255),f,b
 17323  004F70  D7FA               	goto	i1u1040_25
 17324  004F72  0100               	movlb	0	; () banked
 17325  004F74  5174               	movf	(??i1_Read_LDR+3)& (0+255),w,b
 17326  004F76  0100               	movlb	0	; () banked
 17327  004F78  1172               	iorwf	(??i1_Read_LDR+1)& (0+255),w,b
 17328  004F7A  12C2               	iorwf	4034,f,c	;volatile
 17329  004F7C                     i1l223:
 17330  004F7C  B2C2               	btfsc	4034,1,c	;volatile
 17331  004F7E  D7FE               	goto	i1l223
 17332                           
 17333                           ;main.c: 285: analog_reading = (ADRESH * 256) + (ADRESL);
 17334  004F80  50C4               	movf	4036,w,c	;volatile
 17335  004F82  0100               	movlb	0	; () banked
 17336  004F84  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 17337  004F86  6B71               	clrf	??i1_Read_LDR& (0+255),b
 17338  004F88  50C3               	movf	4035,w,c	;volatile
 17339  004F8A  0100               	movlb	0	; () banked
 17340  004F8C  2571               	addwf	??i1_Read_LDR& (0+255),w,b
 17341  004F8E  6E19               	movwf	?i1___awtoft,c
 17342  004F90  0E00               	movlw	0
 17343  004F92  0100               	movlb	0	; () banked
 17344  004F94  2172               	addwfc	(??i1_Read_LDR+1)& (0+255),w,b
 17345  004F96  6E1A               	movwf	?i1___awtoft+1,c
 17346  004F98  EC2E  F02F         	call	i1___awtoft	;wreg free
 17347  004F9C  C01B  F077         	movff	?i1___awtoft+2,i1Read_LDR@analog_reading+2
 17348  004FA0  C01A  F076         	movff	?i1___awtoft+1,i1Read_LDR@analog_reading+1
 17349  004FA4  C019  F075         	movff	?i1___awtoft,i1Read_LDR@analog_reading
 17350                           
 17351                           ;main.c: 286: analog_reading = analog_reading*5/1023;
 17352  004FA8  0E00               	movlw	0
 17353  004FAA  6E39               	movwf	?i1___ftmul+3,c
 17354  004FAC  0EA0               	movlw	160
 17355  004FAE  6E3A               	movwf	?i1___ftmul+4,c
 17356  004FB0  0E40               	movlw	64
 17357  004FB2  6E3B               	movwf	?i1___ftmul+5,c
 17358  004FB4  C075  F036         	movff	i1Read_LDR@analog_reading,?i1___ftmul
 17359  004FB8  C076  F037         	movff	i1Read_LDR@analog_reading+1,?i1___ftmul+1
 17360  004FBC  C077  F038         	movff	i1Read_LDR@analog_reading+2,?i1___ftmul+2
 17361  004FC0  EC84  F024         	call	i1___ftmul	;wreg free
 17362  004FC4  C038  F062         	movff	?i1___ftmul+2,?i1___ftdiv+2
 17363  004FC8  C037  F061         	movff	?i1___ftmul+1,?i1___ftdiv+1
 17364  004FCC  C036  F060         	movff	?i1___ftmul,?i1___ftdiv
 17365  004FD0  0EC0               	movlw	192
 17366  004FD2  0100               	movlb	0	; () banked
 17367  004FD4  0100               	movlb	0	; () banked
 17368  004FD6  6F63               	movwf	(?i1___ftdiv+3)& (0+255),b
 17369  004FD8  0E7F               	movlw	127
 17370  004FDA  0100               	movlb	0	; () banked
 17371  004FDC  0100               	movlb	0	; () banked
 17372  004FDE  6F64               	movwf	(?i1___ftdiv+4)& (0+255),b
 17373  004FE0  0E44               	movlw	68
 17374  004FE2  0100               	movlb	0	; () banked
 17375  004FE4  0100               	movlb	0	; () banked
 17376  004FE6  6F65               	movwf	(?i1___ftdiv+5)& (0+255),b
 17377  004FE8  EC8C  F020         	call	i1___ftdiv	;wreg free
 17378  004FEC  C062  F077         	movff	?i1___ftdiv+2,i1Read_LDR@analog_reading+2
 17379  004FF0  C061  F076         	movff	?i1___ftdiv+1,i1Read_LDR@analog_reading+1
 17380  004FF4  C060  F075         	movff	?i1___ftdiv,i1Read_LDR@analog_reading
 17381                           
 17382                           ;main.c: 287: return analog_reading;
 17383  004FF8  C075  F047         	movff	i1Read_LDR@analog_reading,?i1_Read_LDR
 17384  004FFC  C076  F048         	movff	i1Read_LDR@analog_reading+1,?i1_Read_LDR+1
 17385  005000  C077  F049         	movff	i1Read_LDR@analog_reading+2,?i1_Read_LDR+2
 17386  005004  0012               	return	
 17387  005006                     __end_ofi1_Read_LDR:
 17388                           	opt stack 0
 17389                           pclatu	equ	0xFFB
 17390                           pclath	equ	0xFFA
 17391                           tblptru	equ	0xFF8
 17392                           tblptrh	equ	0xFF7
 17393                           tblptrl	equ	0xFF6
 17394                           tablat	equ	0xFF5
 17395                           prodh	equ	0xFF4
 17396                           prodl	equ	0xFF3
 17397                           intcon	equ	0xFF2
 17398                           intcon2	equ	0xFF1
 17399                           postinc0	equ	0xFEE
 17400                           fsr0h	equ	0xFEA
 17401                           fsr0l	equ	0xFE9
 17402                           wreg	equ	0xFE8
 17403                           fsr1h	equ	0xFE2
 17404                           fsr1l	equ	0xFE1
 17405                           bsr	equ	0xFE0
 17406                           indf2	equ	0xFDF
 17407                           postinc2	equ	0xFDE
 17408                           postdec2	equ	0xFDD
 17409                           fsr2h	equ	0xFDA
 17410                           fsr2l	equ	0xFD9
 17411                           status	equ	0xFD8
 17412                           
 17413 ;; *************** function i1___ftmul *****************
 17414 ;; Defined at:
 17415 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
 17416 ;; Parameters:    Size  Location     Type
 17417 ;;  __ftmul         3   53[COMRAM] float 
 17418 ;;  __ftmul         3   56[COMRAM] float 
 17419 ;; Auto vars:     Size  Location     Type
 17420 ;;  __ftmul         3   65[COMRAM] unsigned um
 17421 ;;  __ftmul         1   69[COMRAM] unsigned char 
 17422 ;;  __ftmul         1   68[COMRAM] unsigned char 
 17423 ;;  __ftmul         1   64[COMRAM] unsigned char 
 17424 ;; Return value:  Size  Location     Type
 17425 ;;                  3   53[COMRAM] float 
 17426 ;; Registers used:
 17427 ;;		wreg, status,2, status,0, cstack
 17428 ;; Tracked objects:
 17429 ;;		On entry : 0/0
 17430 ;;		On exit  : 0/0
 17431 ;;		Unchanged: 0/0
 17432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17433 ;;      Params:         6       0       0       0       0       0       0       0       0
 17434 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17435 ;;      Temps:          5       0       0       0       0       0       0       0       0
 17436 ;;      Totals:        17       0       0       0       0       0       0       0       0
 17437 ;;Total ram usage:       17 bytes
 17438 ;; Hardware stack levels used:    1
 17439 ;; Hardware stack levels required when called:    4
 17440 ;; This function calls:
 17441 ;;		i1___ftpack
 17442 ;; This function is called by:
 17443 ;;		i1_Read_LDR
 17444 ;;		i1_fround
 17445 ;;		i1_scale
 17446 ;;		i1_sprintf
 17447 ;;		i1___asftmul
 17448 ;; This function uses a non-reentrant model
 17449 ;;
 17450                           
 17451                           	psect	text64
 17452  004908                     __ptext64:
 17453                           	opt stack 0
 17454  004908                     i1___ftmul:
 17455                           	opt stack 19
 17456                           
 17457                           ;incstack = 0
 17458                           ;incstack = 0
 17459  004908  0E0F               	movlw	15
 17460  00490A  6E3C               	movwf	??i1___ftmul& (0+255),c
 17461  00490C  C036  F03D         	movff	i1___ftmul@f1,??i1___ftmul+1
 17462  004910  C037  F03E         	movff	i1___ftmul@f1+1,??i1___ftmul+2
 17463  004914  C038  F03F         	movff	i1___ftmul@f1+2,??i1___ftmul+3
 17464  004918  283C               	incf	??i1___ftmul,w,c
 17465  00491A  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 17466  00491C  D004               	goto	i1u846_20
 17467  00491E                     i1u846_25:
 17468  00491E  90D8               	bcf	status,0,c
 17469  004920  323F               	rrcf	??i1___ftmul+3,f,c
 17470  004922  323E               	rrcf	??i1___ftmul+2,f,c
 17471  004924  323D               	rrcf	??i1___ftmul+1,f,c
 17472  004926                     i1u846_20:
 17473  004926  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 17474  004928  D7FA               	goto	i1u846_25
 17475  00492A  503D               	movf	??i1___ftmul+1,w,c
 17476  00492C  6E41               	movwf	i1___ftmul@exp,c
 17477  00492E  6641               	tstfsz	i1___ftmul@exp& (0+255),c
 17478  004930  D001               	goto	i1l9455
 17479  004932  D015               	goto	i1u849_20
 17480  004934                     i1l9455:
 17481  004934  0E0F               	movlw	15
 17482  004936  6E3C               	movwf	??i1___ftmul& (0+255),c
 17483  004938  C039  F03D         	movff	i1___ftmul@f2,??i1___ftmul+1
 17484  00493C  C03A  F03E         	movff	i1___ftmul@f2+1,??i1___ftmul+2
 17485  004940  C03B  F03F         	movff	i1___ftmul@f2+2,??i1___ftmul+3
 17486  004944  283C               	incf	??i1___ftmul,w,c
 17487  004946  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 17488  004948  D004               	goto	i1u848_20
 17489  00494A                     i1u848_25:
 17490  00494A  90D8               	bcf	status,0,c
 17491  00494C  323F               	rrcf	??i1___ftmul+3,f,c
 17492  00494E  323E               	rrcf	??i1___ftmul+2,f,c
 17493  004950  323D               	rrcf	??i1___ftmul+1,f,c
 17494  004952                     i1u848_20:
 17495  004952  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 17496  004954  D7FA               	goto	i1u848_25
 17497  004956  503D               	movf	??i1___ftmul+1,w,c
 17498  004958  6E46               	movwf	i1___ftmul@sign,c
 17499  00495A  6646               	tstfsz	i1___ftmul@sign& (0+255),c
 17500  00495C  D007               	goto	i1l9461
 17501  00495E                     i1u849_20:
 17502  00495E  0E00               	movlw	0
 17503  004960  6E36               	movwf	?i1___ftmul,c
 17504  004962  0E00               	movlw	0
 17505  004964  6E37               	movwf	?i1___ftmul+1,c
 17506  004966  0E00               	movlw	0
 17507  004968  6E38               	movwf	?i1___ftmul+2,c
 17508  00496A  D055               	goto	i1l774
 17509  00496C                     i1l9461:
 17510  00496C  5046               	movf	i1___ftmul@sign,w,c
 17511  00496E  0F7B               	addlw	123
 17512  004970  2641               	addwf	i1___ftmul@exp,f,c
 17513  004972  C038  F046         	movff	i1___ftmul@f1+2,i1___ftmul@sign
 17514  004976  503B               	movf	(i1___ftmul@f2+2)& (0+255),w,c
 17515  004978  1A46               	xorwf	i1___ftmul@sign,f,c
 17516  00497A  0E80               	movlw	128
 17517  00497C  1646               	andwf	i1___ftmul@sign,f,c
 17518  00497E  8E37               	bsf	i1___ftmul@f1+1,7,c
 17519  004980  8E3A               	bsf	i1___ftmul@f2+1,7,c
 17520  004982  0EFF               	movlw	255
 17521  004984  1639               	andwf	i1___ftmul@f2,f,c
 17522  004986  0EFF               	movlw	255
 17523  004988  163A               	andwf	i1___ftmul@f2+1,f,c
 17524  00498A  0E00               	movlw	0
 17525  00498C  163B               	andwf	i1___ftmul@f2+2,f,c
 17526  00498E  0E00               	movlw	0
 17527  004990  6E42               	movwf	i1___ftmul@f3_as_product,c
 17528  004992  0E00               	movlw	0
 17529  004994  6E43               	movwf	i1___ftmul@f3_as_product+1,c
 17530  004996  0E00               	movlw	0
 17531  004998  6E44               	movwf	i1___ftmul@f3_as_product+2,c
 17532  00499A  6E3C               	movwf	??i1___ftmul& (0+255),c
 17533  00499C  0E07               	movlw	7
 17534  00499E  6E45               	movwf	i1___ftmul@cntr,c
 17535  0049A0  503C               	movf	??i1___ftmul& (0+255),w,c
 17536  0049A2                     i1l9475:
 17537  0049A2  A036               	btfss	i1___ftmul@f1,0,c
 17538  0049A4  D006               	goto	i1l9479
 17539  0049A6  5039               	movf	i1___ftmul@f2,w,c
 17540  0049A8  2642               	addwf	i1___ftmul@f3_as_product,f,c
 17541  0049AA  503A               	movf	i1___ftmul@f2+1,w,c
 17542  0049AC  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 17543  0049AE  503B               	movf	i1___ftmul@f2+2,w,c
 17544  0049B0  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 17545  0049B2                     i1l9479:
 17546  0049B2  90D8               	bcf	status,0,c
 17547  0049B4  3238               	rrcf	i1___ftmul@f1+2,f,c
 17548  0049B6  3237               	rrcf	i1___ftmul@f1+1,f,c
 17549  0049B8  3236               	rrcf	i1___ftmul@f1,f,c
 17550  0049BA  90D8               	bcf	status,0,c
 17551  0049BC  3639               	rlcf	i1___ftmul@f2,f,c
 17552  0049BE  363A               	rlcf	i1___ftmul@f2+1,f,c
 17553  0049C0  363B               	rlcf	i1___ftmul@f2+2,f,c
 17554  0049C2  2E45               	decfsz	i1___ftmul@cntr,f,c
 17555  0049C4  D7EE               	goto	i1l9475
 17556  0049C6  6E3C               	movwf	??i1___ftmul& (0+255),c
 17557  0049C8  0E09               	movlw	9
 17558  0049CA  6E45               	movwf	i1___ftmul@cntr,c
 17559  0049CC  503C               	movf	??i1___ftmul& (0+255),w,c
 17560  0049CE                     i1l9485:
 17561  0049CE  A036               	btfss	i1___ftmul@f1,0,c
 17562  0049D0  D006               	goto	i1l9489
 17563  0049D2  5039               	movf	i1___ftmul@f2,w,c
 17564  0049D4  2642               	addwf	i1___ftmul@f3_as_product,f,c
 17565  0049D6  503A               	movf	i1___ftmul@f2+1,w,c
 17566  0049D8  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 17567  0049DA  503B               	movf	i1___ftmul@f2+2,w,c
 17568  0049DC  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 17569  0049DE                     i1l9489:
 17570  0049DE  90D8               	bcf	status,0,c
 17571  0049E0  3238               	rrcf	i1___ftmul@f1+2,f,c
 17572  0049E2  3237               	rrcf	i1___ftmul@f1+1,f,c
 17573  0049E4  3236               	rrcf	i1___ftmul@f1,f,c
 17574  0049E6  90D8               	bcf	status,0,c
 17575  0049E8  3244               	rrcf	i1___ftmul@f3_as_product+2,f,c
 17576  0049EA  3243               	rrcf	i1___ftmul@f3_as_product+1,f,c
 17577  0049EC  3242               	rrcf	i1___ftmul@f3_as_product,f,c
 17578  0049EE  2E45               	decfsz	i1___ftmul@cntr,f,c
 17579  0049F0  D7EE               	goto	i1l9485
 17580  0049F2  C042  F011         	movff	i1___ftmul@f3_as_product,?i1___ftpack
 17581  0049F6  C043  F012         	movff	i1___ftmul@f3_as_product+1,?i1___ftpack+1
 17582  0049FA  C044  F013         	movff	i1___ftmul@f3_as_product+2,?i1___ftpack+2
 17583  0049FE  C041  F014         	movff	i1___ftmul@exp,?i1___ftpack+3
 17584  004A02  C046  F015         	movff	i1___ftmul@sign,?i1___ftpack+4
 17585  004A06  ECC1  F029         	call	i1___ftpack	;wreg free
 17586  004A0A  C013  F038         	movff	?i1___ftpack+2,?i1___ftmul+2
 17587  004A0E  C012  F037         	movff	?i1___ftpack+1,?i1___ftmul+1
 17588  004A12  C011  F036         	movff	?i1___ftpack,?i1___ftmul
 17589  004A16                     i1l774:
 17590  004A16  0012               	return	
 17591  004A18                     __end_ofi1___ftmul:
 17592                           	opt stack 0
 17593                           pclatu	equ	0xFFB
 17594                           pclath	equ	0xFFA
 17595                           tblptru	equ	0xFF8
 17596                           tblptrh	equ	0xFF7
 17597                           tblptrl	equ	0xFF6
 17598                           tablat	equ	0xFF5
 17599                           prodh	equ	0xFF4
 17600                           prodl	equ	0xFF3
 17601                           intcon	equ	0xFF2
 17602                           intcon2	equ	0xFF1
 17603                           postinc0	equ	0xFEE
 17604                           fsr0h	equ	0xFEA
 17605                           fsr0l	equ	0xFE9
 17606                           wreg	equ	0xFE8
 17607                           fsr1h	equ	0xFE2
 17608                           fsr1l	equ	0xFE1
 17609                           bsr	equ	0xFE0
 17610                           indf2	equ	0xFDF
 17611                           postinc2	equ	0xFDE
 17612                           postdec2	equ	0xFDD
 17613                           fsr2h	equ	0xFDA
 17614                           fsr2l	equ	0xFD9
 17615                           status	equ	0xFD8
 17616                           
 17617 ;; *************** function i1___ftdiv *****************
 17618 ;; Defined at:
 17619 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
 17620 ;; Parameters:    Size  Location     Type
 17621 ;;  __ftdiv         3    0[BANK0 ] float 
 17622 ;;  __ftdiv         3    3[BANK0 ] float 
 17623 ;; Auto vars:     Size  Location     Type
 17624 ;;  __ftdiv         3   13[BANK0 ] float 
 17625 ;;  __ftdiv         1   16[BANK0 ] unsigned char 
 17626 ;;  __ftdiv         1   12[BANK0 ] unsigned char 
 17627 ;;  __ftdiv         1   11[BANK0 ] unsigned char 
 17628 ;; Return value:  Size  Location     Type
 17629 ;;                  3    0[BANK0 ] float 
 17630 ;; Registers used:
 17631 ;;		wreg, status,2, status,0, cstack
 17632 ;; Tracked objects:
 17633 ;;		On entry : 0/0
 17634 ;;		On exit  : 0/0
 17635 ;;		Unchanged: 0/0
 17636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17637 ;;      Params:         0       6       0       0       0       0       0       0       0
 17638 ;;      Locals:         0       6       0       0       0       0       0       0       0
 17639 ;;      Temps:          0       5       0       0       0       0       0       0       0
 17640 ;;      Totals:         0      17       0       0       0       0       0       0       0
 17641 ;;Total ram usage:       17 bytes
 17642 ;; Hardware stack levels used:    1
 17643 ;; Hardware stack levels required when called:    4
 17644 ;; This function calls:
 17645 ;;		i1___ftpack
 17646 ;; This function is called by:
 17647 ;;		i1_Read_LDR
 17648 ;; This function uses a non-reentrant model
 17649 ;;
 17650                           
 17651                           	psect	text65
 17652  004118                     __ptext65:
 17653                           	opt stack 0
 17654  004118                     i1___ftdiv:
 17655                           	opt stack 19
 17656                           
 17657                           ;incstack = 0
 17658                           ;incstack = 0
 17659  004118  0E0F               	movlw	15
 17660  00411A  0100               	movlb	0	; () banked
 17661  00411C  6F66               	movwf	??i1___ftdiv& (0+255),b
 17662  00411E  0100               	movlb	0	; () banked
 17663  004120  C060  F067         	movff	i1___ftdiv@f1,??i1___ftdiv+1
 17664  004124  0100               	movlb	0	; () banked
 17665  004126  C061  F068         	movff	i1___ftdiv@f1+1,??i1___ftdiv+2
 17666  00412A  0100               	movlb	0	; () banked
 17667  00412C  C062  F069         	movff	i1___ftdiv@f1+2,??i1___ftdiv+3
 17668  004130  0100               	movlb	0	; () banked
 17669  004132  2966               	incf	??i1___ftdiv& (0+255),w,b
 17670  004134  0100               	movlb	0	; () banked
 17671  004136  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 17672  004138  D005               	goto	i1u1105_20
 17673  00413A                     i1u1105_25:
 17674  00413A  0100               	movlb	0	; () banked
 17675  00413C  90D8               	bcf	status,0,c
 17676  00413E  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 17677  004140  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 17678  004142  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 17679  004144                     i1u1105_20:
 17680  004144  0100               	movlb	0	; () banked
 17681  004146  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 17682  004148  D7F8               	goto	i1u1105_25
 17683  00414A  0100               	movlb	0	; () banked
 17684  00414C  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 17685  00414E  0100               	movlb	0	; () banked
 17686  004150  0100               	movlb	0	; () banked
 17687  004152  6F6C               	movwf	i1___ftdiv@exp& (0+255),b
 17688  004154  0100               	movlb	0	; () banked
 17689  004156  676C               	tstfsz	i1___ftdiv@exp& (0+255),b
 17690  004158  D001               	goto	i1l11503
 17691  00415A  D021               	goto	i1u1108_20
 17692  00415C                     i1l11503:
 17693                           
 17694                           ; BSR set to: 0
 17695  00415C  0E0F               	movlw	15
 17696  00415E  0100               	movlb	0	; () banked
 17697  004160  6F66               	movwf	??i1___ftdiv& (0+255),b
 17698  004162  0100               	movlb	0	; () banked
 17699  004164  C063  F067         	movff	i1___ftdiv@f2,??i1___ftdiv+1
 17700  004168  0100               	movlb	0	; () banked
 17701  00416A  C064  F068         	movff	i1___ftdiv@f2+1,??i1___ftdiv+2
 17702  00416E  0100               	movlb	0	; () banked
 17703  004170  C065  F069         	movff	i1___ftdiv@f2+2,??i1___ftdiv+3
 17704  004174  0100               	movlb	0	; () banked
 17705  004176  2966               	incf	??i1___ftdiv& (0+255),w,b
 17706  004178  0100               	movlb	0	; () banked
 17707  00417A  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 17708  00417C  D005               	goto	i1u1107_20
 17709  00417E                     i1u1107_25:
 17710  00417E  0100               	movlb	0	; () banked
 17711  004180  90D8               	bcf	status,0,c
 17712  004182  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 17713  004184  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 17714  004186  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 17715  004188                     i1u1107_20:
 17716  004188  0100               	movlb	0	; () banked
 17717  00418A  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 17718  00418C  D7F8               	goto	i1u1107_25
 17719  00418E  0100               	movlb	0	; () banked
 17720  004190  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 17721  004192  0100               	movlb	0	; () banked
 17722  004194  0100               	movlb	0	; () banked
 17723  004196  6F70               	movwf	i1___ftdiv@sign& (0+255),b
 17724  004198  0100               	movlb	0	; () banked
 17725  00419A  6770               	tstfsz	i1___ftdiv@sign& (0+255),b
 17726  00419C  D00D               	goto	i1l11509
 17727  00419E                     i1u1108_20:
 17728                           
 17729                           ; BSR set to: 0
 17730  00419E  0E00               	movlw	0
 17731  0041A0  0100               	movlb	0	; () banked
 17732  0041A2  0100               	movlb	0	; () banked
 17733  0041A4  6F60               	movwf	?i1___ftdiv& (0+255),b
 17734  0041A6  0E00               	movlw	0
 17735  0041A8  0100               	movlb	0	; () banked
 17736  0041AA  0100               	movlb	0	; () banked
 17737  0041AC  6F61               	movwf	(?i1___ftdiv+1)& (0+255),b
 17738  0041AE  0E00               	movlw	0
 17739  0041B0  0100               	movlb	0	; () banked
 17740  0041B2  0100               	movlb	0	; () banked
 17741  0041B4  6F62               	movwf	(?i1___ftdiv+2)& (0+255),b
 17742  0041B6  D093               	goto	i1l742
 17743  0041B8                     i1l11509:
 17744                           
 17745                           ; BSR set to: 0
 17746  0041B8  0E00               	movlw	0
 17747  0041BA  0100               	movlb	0	; () banked
 17748  0041BC  0100               	movlb	0	; () banked
 17749  0041BE  6F6D               	movwf	i1___ftdiv@f3& (0+255),b
 17750  0041C0  0E00               	movlw	0
 17751  0041C2  0100               	movlb	0	; () banked
 17752  0041C4  0100               	movlb	0	; () banked
 17753  0041C6  6F6E               	movwf	(i1___ftdiv@f3+1)& (0+255),b
 17754  0041C8  0E00               	movlw	0
 17755  0041CA  0100               	movlb	0	; () banked
 17756  0041CC  0100               	movlb	0	; () banked
 17757  0041CE  6F6F               	movwf	(i1___ftdiv@f3+2)& (0+255),b
 17758                           
 17759                           ; BSR set to: 0
 17760  0041D0  0100               	movlb	0	; () banked
 17761  0041D2  0100               	movlb	0	; () banked
 17762  0041D4  5170               	movf	i1___ftdiv@sign& (0+255),w,b
 17763  0041D6  0F89               	addlw	137
 17764  0041D8  0100               	movlb	0	; () banked
 17765  0041DA  0100               	movlb	0	; () banked
 17766  0041DC  5F6C               	subwf	i1___ftdiv@exp& (0+255),f,b
 17767                           
 17768                           ; BSR set to: 0
 17769  0041DE  C062  F070         	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
 17770                           
 17771                           ; BSR set to: 0
 17772  0041E2  0100               	movlb	0	; () banked
 17773  0041E4  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17774  0041E6  0100               	movlb	0	; () banked
 17775  0041E8  0100               	movlb	0	; () banked
 17776  0041EA  1B70               	xorwf	i1___ftdiv@sign& (0+255),f,b
 17777                           
 17778                           ; BSR set to: 0
 17779  0041EC  0E80               	movlw	128
 17780  0041EE  0100               	movlb	0	; () banked
 17781  0041F0  0100               	movlb	0	; () banked
 17782  0041F2  1770               	andwf	i1___ftdiv@sign& (0+255),f,b
 17783                           
 17784                           ; BSR set to: 0
 17785  0041F4  0100               	movlb	0	; () banked
 17786  0041F6  0100               	movlb	0	; () banked
 17787  0041F8  8F61               	bsf	(i1___ftdiv@f1+1)& (0+255),7,b
 17788                           
 17789                           ; BSR set to: 0
 17790  0041FA  0EFF               	movlw	255
 17791  0041FC  0100               	movlb	0	; () banked
 17792  0041FE  0100               	movlb	0	; () banked
 17793  004200  1760               	andwf	i1___ftdiv@f1& (0+255),f,b
 17794  004202  0EFF               	movlw	255
 17795  004204  0100               	movlb	0	; () banked
 17796  004206  0100               	movlb	0	; () banked
 17797  004208  1761               	andwf	(i1___ftdiv@f1+1)& (0+255),f,b
 17798  00420A  0E00               	movlw	0
 17799  00420C  0100               	movlb	0	; () banked
 17800  00420E  0100               	movlb	0	; () banked
 17801  004210  1762               	andwf	(i1___ftdiv@f1+2)& (0+255),f,b
 17802                           
 17803                           ; BSR set to: 0
 17804  004212  0100               	movlb	0	; () banked
 17805  004214  0100               	movlb	0	; () banked
 17806  004216  8F64               	bsf	(i1___ftdiv@f2+1)& (0+255),7,b
 17807                           
 17808                           ; BSR set to: 0
 17809  004218  0EFF               	movlw	255
 17810  00421A  0100               	movlb	0	; () banked
 17811  00421C  0100               	movlb	0	; () banked
 17812  00421E  1763               	andwf	i1___ftdiv@f2& (0+255),f,b
 17813  004220  0EFF               	movlw	255
 17814  004222  0100               	movlb	0	; () banked
 17815  004224  0100               	movlb	0	; () banked
 17816  004226  1764               	andwf	(i1___ftdiv@f2+1)& (0+255),f,b
 17817  004228  0E00               	movlw	0
 17818  00422A  0100               	movlb	0	; () banked
 17819  00422C  0100               	movlb	0	; () banked
 17820  00422E  1765               	andwf	(i1___ftdiv@f2+2)& (0+255),f,b
 17821                           
 17822                           ; BSR set to: 0
 17823  004230  0100               	movlb	0	; () banked
 17824  004232  6F66               	movwf	??i1___ftdiv& (0+255),b
 17825  004234  0E18               	movlw	24
 17826  004236  0100               	movlb	0	; () banked
 17827  004238  0100               	movlb	0	; () banked
 17828  00423A  6F6B               	movwf	i1___ftdiv@cntr& (0+255),b
 17829  00423C  0100               	movlb	0	; () banked
 17830  00423E  5166               	movf	??i1___ftdiv& (0+255),w,b
 17831  004240                     i1l744:
 17832                           
 17833                           ; BSR set to: 0
 17834  004240  0100               	movlb	0	; () banked
 17835  004242  90D8               	bcf	status,0,c
 17836  004244  0100               	movlb	0	; () banked
 17837  004246  376D               	rlcf	i1___ftdiv@f3& (0+255),f,b
 17838  004248  0100               	movlb	0	; () banked
 17839  00424A  376E               	rlcf	(i1___ftdiv@f3+1)& (0+255),f,b
 17840  00424C  0100               	movlb	0	; () banked
 17841  00424E  376F               	rlcf	(i1___ftdiv@f3+2)& (0+255),f,b
 17842                           
 17843                           ; BSR set to: 0
 17844  004250  0100               	movlb	0	; () banked
 17845  004252  0100               	movlb	0	; () banked
 17846  004254  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 17847  004256  0100               	movlb	0	; () banked
 17848  004258  0100               	movlb	0	; () banked
 17849  00425A  5D60               	subwf	i1___ftdiv@f1& (0+255),w,b
 17850  00425C  0100               	movlb	0	; () banked
 17851  00425E  0100               	movlb	0	; () banked
 17852  004260  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 17853  004262  0100               	movlb	0	; () banked
 17854  004264  0100               	movlb	0	; () banked
 17855  004266  5961               	subwfb	(i1___ftdiv@f1+1)& (0+255),w,b
 17856  004268  0100               	movlb	0	; () banked
 17857  00426A  0100               	movlb	0	; () banked
 17858  00426C  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17859  00426E  0100               	movlb	0	; () banked
 17860  004270  0100               	movlb	0	; () banked
 17861  004272  5962               	subwfb	(i1___ftdiv@f1+2)& (0+255),w,b
 17862  004274  A0D8               	btfss	status,0,c
 17863  004276  D015               	goto	i1l745
 17864                           
 17865                           ; BSR set to: 0
 17866  004278  0100               	movlb	0	; () banked
 17867  00427A  0100               	movlb	0	; () banked
 17868  00427C  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 17869  00427E  0100               	movlb	0	; () banked
 17870  004280  0100               	movlb	0	; () banked
 17871  004282  5F60               	subwf	i1___ftdiv@f1& (0+255),f,b
 17872  004284  0100               	movlb	0	; () banked
 17873  004286  0100               	movlb	0	; () banked
 17874  004288  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 17875  00428A  0100               	movlb	0	; () banked
 17876  00428C  0100               	movlb	0	; () banked
 17877  00428E  5B61               	subwfb	(i1___ftdiv@f1+1)& (0+255),f,b
 17878  004290  0100               	movlb	0	; () banked
 17879  004292  0100               	movlb	0	; () banked
 17880  004294  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17881  004296  0100               	movlb	0	; () banked
 17882  004298  0100               	movlb	0	; () banked
 17883  00429A  5B62               	subwfb	(i1___ftdiv@f1+2)& (0+255),f,b
 17884                           
 17885                           ; BSR set to: 0
 17886  00429C  0100               	movlb	0	; () banked
 17887  00429E  0100               	movlb	0	; () banked
 17888  0042A0  816D               	bsf	i1___ftdiv@f3& (0+255),0,b
 17889  0042A2                     i1l745:
 17890                           
 17891                           ; BSR set to: 0
 17892  0042A2  0100               	movlb	0	; () banked
 17893  0042A4  90D8               	bcf	status,0,c
 17894  0042A6  0100               	movlb	0	; () banked
 17895  0042A8  3760               	rlcf	i1___ftdiv@f1& (0+255),f,b
 17896  0042AA  0100               	movlb	0	; () banked
 17897  0042AC  3761               	rlcf	(i1___ftdiv@f1+1)& (0+255),f,b
 17898  0042AE  0100               	movlb	0	; () banked
 17899  0042B0  3762               	rlcf	(i1___ftdiv@f1+2)& (0+255),f,b
 17900                           
 17901                           ; BSR set to: 0
 17902  0042B2  0100               	movlb	0	; () banked
 17903  0042B4  0100               	movlb	0	; () banked
 17904  0042B6  2F6B               	decfsz	i1___ftdiv@cntr& (0+255),f,b
 17905  0042B8  D7C3               	goto	i1l744
 17906                           
 17907                           ; BSR set to: 0
 17908                           
 17909                           ; BSR set to: 0
 17910  0042BA  C06D  F011         	movff	i1___ftdiv@f3,?i1___ftpack
 17911  0042BE  C06E  F012         	movff	i1___ftdiv@f3+1,?i1___ftpack+1
 17912  0042C2  C06F  F013         	movff	i1___ftdiv@f3+2,?i1___ftpack+2
 17913  0042C6  C06C  F014         	movff	i1___ftdiv@exp,?i1___ftpack+3
 17914  0042CA  C070  F015         	movff	i1___ftdiv@sign,?i1___ftpack+4
 17915  0042CE  ECC1  F029         	call	i1___ftpack	;wreg free
 17916  0042D2  C013  F062         	movff	?i1___ftpack+2,?i1___ftdiv+2
 17917  0042D6  C012  F061         	movff	?i1___ftpack+1,?i1___ftdiv+1
 17918  0042DA  C011  F060         	movff	?i1___ftpack,?i1___ftdiv
 17919  0042DE                     i1l742:
 17920  0042DE  0012               	return	
 17921  0042E0                     __end_ofi1___ftdiv:
 17922                           	opt stack 0
 17923                           pclatu	equ	0xFFB
 17924                           pclath	equ	0xFFA
 17925                           tblptru	equ	0xFF8
 17926                           tblptrh	equ	0xFF7
 17927                           tblptrl	equ	0xFF6
 17928                           tablat	equ	0xFF5
 17929                           prodh	equ	0xFF4
 17930                           prodl	equ	0xFF3
 17931                           intcon	equ	0xFF2
 17932                           intcon2	equ	0xFF1
 17933                           postinc0	equ	0xFEE
 17934                           fsr0h	equ	0xFEA
 17935                           fsr0l	equ	0xFE9
 17936                           wreg	equ	0xFE8
 17937                           fsr1h	equ	0xFE2
 17938                           fsr1l	equ	0xFE1
 17939                           bsr	equ	0xFE0
 17940                           indf2	equ	0xFDF
 17941                           postinc2	equ	0xFDE
 17942                           postdec2	equ	0xFDD
 17943                           fsr2h	equ	0xFDA
 17944                           fsr2l	equ	0xFD9
 17945                           status	equ	0xFD8
 17946                           
 17947 ;; *************** function i1___ftpack *****************
 17948 ;; Defined at:
 17949 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 17950 ;; Parameters:    Size  Location     Type
 17951 ;;  __ftpack        3   16[COMRAM] unsigned um
 17952 ;;  __ftpack        1   19[COMRAM] unsigned char 
 17953 ;;  __ftpack        1   20[COMRAM] unsigned char 
 17954 ;; Auto vars:     Size  Location     Type
 17955 ;;		None
 17956 ;; Return value:  Size  Location     Type
 17957 ;;                  3   16[COMRAM] float 
 17958 ;; Registers used:
 17959 ;;		wreg, status,2, status,0
 17960 ;; Tracked objects:
 17961 ;;		On entry : 0/0
 17962 ;;		On exit  : 0/0
 17963 ;;		Unchanged: 0/0
 17964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17965 ;;      Params:         5       0       0       0       0       0       0       0       0
 17966 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17967 ;;      Temps:          3       0       0       0       0       0       0       0       0
 17968 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17969 ;;Total ram usage:        8 bytes
 17970 ;; Hardware stack levels used:    1
 17971 ;; Hardware stack levels required when called:    3
 17972 ;; This function calls:
 17973 ;;		Nothing
 17974 ;; This function is called by:
 17975 ;;		i1___awtoft
 17976 ;;		i1___ftadd
 17977 ;;		i1___ftdiv
 17978 ;;		i1___ftmul
 17979 ;;		i1___lltoft
 17980 ;; This function uses a non-reentrant model
 17981 ;;
 17982                           
 17983                           	psect	text66
 17984  005382                     __ptext66:
 17985                           	opt stack 0
 17986  005382                     i1___ftpack:
 17987                           	opt stack 19
 17988                           
 17989                           ;incstack = 0
 17990                           ;incstack = 0
 17991  005382  5014               	movf	i1___ftpack@exp,w,c
 17992  005384  B4D8               	btfsc	status,2,c
 17993  005386  D005               	goto	i1l9231
 17994  005388  5011               	movf	i1___ftpack@arg,w,c
 17995  00538A  1012               	iorwf	i1___ftpack@arg+1,w,c
 17996  00538C  1013               	iorwf	i1___ftpack@arg+2,w,c
 17997  00538E  A4D8               	btfss	status,2,c
 17998  005390  D00C               	goto	i1l9237
 17999  005392                     i1l9231:
 18000  005392  0E00               	movlw	0
 18001  005394  6E11               	movwf	?i1___ftpack,c
 18002  005396  0E00               	movlw	0
 18003  005398  6E12               	movwf	?i1___ftpack+1,c
 18004  00539A  0E00               	movlw	0
 18005  00539C  6E13               	movwf	?i1___ftpack+2,c
 18006  00539E  D04C               	goto	i1l673
 18007  0053A0                     i1l9235:
 18008  0053A0  2A14               	incf	i1___ftpack@exp,f,c
 18009  0053A2  90D8               	bcf	status,0,c
 18010  0053A4  3213               	rrcf	i1___ftpack@arg+2,f,c
 18011  0053A6  3212               	rrcf	i1___ftpack@arg+1,f,c
 18012  0053A8  3211               	rrcf	i1___ftpack@arg,f,c
 18013  0053AA                     i1l9237:
 18014  0053AA  0E00               	movlw	0
 18015  0053AC  1411               	andwf	i1___ftpack@arg,w,c
 18016  0053AE  6E16               	movwf	??i1___ftpack& (0+255),c
 18017  0053B0  0E00               	movlw	0
 18018  0053B2  1412               	andwf	i1___ftpack@arg+1,w,c
 18019  0053B4  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 18020  0053B6  0EFE               	movlw	254
 18021  0053B8  1413               	andwf	i1___ftpack@arg+2,w,c
 18022  0053BA  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18023  0053BC  5016               	movf	??i1___ftpack,w,c
 18024  0053BE  1017               	iorwf	??i1___ftpack+1,w,c
 18025  0053C0  1018               	iorwf	??i1___ftpack+2,w,c
 18026  0053C2  B4D8               	btfsc	status,2,c
 18027  0053C4  D00C               	goto	i1l9243
 18028  0053C6  D7EC               	goto	i1l9235
 18029  0053C8                     i1l9239:
 18030  0053C8  2A14               	incf	i1___ftpack@exp,f,c
 18031  0053CA  0E01               	movlw	1
 18032  0053CC  2611               	addwf	i1___ftpack@arg,f,c
 18033  0053CE  0E00               	movlw	0
 18034  0053D0  2212               	addwfc	i1___ftpack@arg+1,f,c
 18035  0053D2  0E00               	movlw	0
 18036  0053D4  2213               	addwfc	i1___ftpack@arg+2,f,c
 18037  0053D6  90D8               	bcf	status,0,c
 18038  0053D8  3213               	rrcf	i1___ftpack@arg+2,f,c
 18039  0053DA  3212               	rrcf	i1___ftpack@arg+1,f,c
 18040  0053DC  3211               	rrcf	i1___ftpack@arg,f,c
 18041  0053DE                     i1l9243:
 18042  0053DE  0E00               	movlw	0
 18043  0053E0  1411               	andwf	i1___ftpack@arg,w,c
 18044  0053E2  6E16               	movwf	??i1___ftpack& (0+255),c
 18045  0053E4  0E00               	movlw	0
 18046  0053E6  1412               	andwf	i1___ftpack@arg+1,w,c
 18047  0053E8  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 18048  0053EA  0EFF               	movlw	255
 18049  0053EC  1413               	andwf	i1___ftpack@arg+2,w,c
 18050  0053EE  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18051  0053F0  5016               	movf	??i1___ftpack,w,c
 18052  0053F2  1017               	iorwf	??i1___ftpack+1,w,c
 18053  0053F4  1018               	iorwf	??i1___ftpack+2,w,c
 18054  0053F6  B4D8               	btfsc	status,2,c
 18055  0053F8  D006               	goto	i1l9247
 18056  0053FA  D7E6               	goto	i1l9239
 18057  0053FC                     i1l9245:
 18058  0053FC  0614               	decf	i1___ftpack@exp,f,c
 18059  0053FE  90D8               	bcf	status,0,c
 18060  005400  3611               	rlcf	i1___ftpack@arg,f,c
 18061  005402  3612               	rlcf	i1___ftpack@arg+1,f,c
 18062  005404  3613               	rlcf	i1___ftpack@arg+2,f,c
 18063  005406                     i1l9247:
 18064  005406  AE12               	btfss	i1___ftpack@arg+1,7,c
 18065  005408  D7F9               	goto	i1l9245
 18066  00540A  A014               	btfss	i1___ftpack@exp,0,c
 18067  00540C  9E12               	bcf	i1___ftpack@arg+1,7,c
 18068  00540E  90D8               	bcf	status,0,c
 18069  005410  3214               	rrcf	i1___ftpack@exp,f,c
 18070  005412  5014               	movf	i1___ftpack@exp,w,c
 18071  005414  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18072  005416  6A17               	clrf	(??i1___ftpack+1)& (0+255),c
 18073  005418  6A16               	clrf	??i1___ftpack& (0+255),c
 18074  00541A  5016               	movf	??i1___ftpack,w,c
 18075  00541C  1211               	iorwf	i1___ftpack@arg,f,c
 18076  00541E  5017               	movf	??i1___ftpack+1,w,c
 18077  005420  1212               	iorwf	i1___ftpack@arg+1,f,c
 18078  005422  5018               	movf	??i1___ftpack+2,w,c
 18079  005424  1213               	iorwf	i1___ftpack@arg+2,f,c
 18080  005426  5015               	movf	i1___ftpack@sign,w,c
 18081  005428  A4D8               	btfss	status,2,c
 18082  00542A  8E13               	bsf	i1___ftpack@arg+2,7,c
 18083  00542C  C011  F011         	movff	i1___ftpack@arg,?i1___ftpack
 18084  005430  C012  F012         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 18085  005434  C013  F013         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 18086  005438                     i1l673:
 18087  005438  0012               	return	
 18088  00543A                     __end_ofi1___ftpack:
 18089                           	opt stack 0
 18090                           pclatu	equ	0xFFB
 18091                           pclath	equ	0xFFA
 18092                           tblptru	equ	0xFF8
 18093                           tblptrh	equ	0xFF7
 18094                           tblptrl	equ	0xFF6
 18095                           tablat	equ	0xFF5
 18096                           prodh	equ	0xFF4
 18097                           prodl	equ	0xFF3
 18098                           intcon	equ	0xFF2
 18099                           intcon2	equ	0xFF1
 18100                           postinc0	equ	0xFEE
 18101                           fsr0h	equ	0xFEA
 18102                           fsr0l	equ	0xFE9
 18103                           wreg	equ	0xFE8
 18104                           fsr1h	equ	0xFE2
 18105                           fsr1l	equ	0xFE1
 18106                           bsr	equ	0xFE0
 18107                           indf2	equ	0xFDF
 18108                           postinc2	equ	0xFDE
 18109                           postdec2	equ	0xFDD
 18110                           fsr2h	equ	0xFDA
 18111                           fsr2l	equ	0xFD9
 18112                           status	equ	0xFD8
 18113                           
 18114 ;; *************** function i1___awtoft *****************
 18115 ;; Defined at:
 18116 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
 18117 ;; Parameters:    Size  Location     Type
 18118 ;;  __awtoft        2   24[COMRAM] int 
 18119 ;; Auto vars:     Size  Location     Type
 18120 ;;  __awtoft        1   28[COMRAM] unsigned char 
 18121 ;; Return value:  Size  Location     Type
 18122 ;;                  3   24[COMRAM] float 
 18123 ;; Registers used:
 18124 ;;		wreg, status,2, status,0, cstack
 18125 ;; Tracked objects:
 18126 ;;		On entry : 0/0
 18127 ;;		On exit  : 0/0
 18128 ;;		Unchanged: 0/0
 18129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18130 ;;      Params:         3       0       0       0       0       0       0       0       0
 18131 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18132 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18133 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18134 ;;Total ram usage:        5 bytes
 18135 ;; Hardware stack levels used:    1
 18136 ;; Hardware stack levels required when called:    4
 18137 ;; This function calls:
 18138 ;;		i1___ftpack
 18139 ;; This function is called by:
 18140 ;;		i1_Read_LDR
 18141 ;; This function uses a non-reentrant model
 18142 ;;
 18143                           
 18144                           	psect	text67
 18145  005E5C                     __ptext67:
 18146                           	opt stack 0
 18147  005E5C                     i1___awtoft:
 18148                           	opt stack 19
 18149                           
 18150                           ;incstack = 0
 18151                           ;incstack = 0
 18152  005E5C  6E1C               	movwf	??i1___awtoft& (0+255),c
 18153  005E5E  0E00               	movlw	0
 18154  005E60  6E1D               	movwf	i1___awtoft@sign,c
 18155  005E62  501C               	movf	??i1___awtoft& (0+255),w,c
 18156  005E64  AE1A               	btfss	i1___awtoft@c+1,7,c
 18157  005E66  D008               	goto	i1l9167
 18158  005E68  6C19               	negf	i1___awtoft@c,c
 18159  005E6A  1E1A               	comf	i1___awtoft@c+1,f,c
 18160  005E6C  B0D8               	btfsc	status,0,c
 18161  005E6E  2A1A               	incf	i1___awtoft@c+1,f,c
 18162  005E70  6E1C               	movwf	??i1___awtoft& (0+255),c
 18163  005E72  0E01               	movlw	1
 18164  005E74  6E1D               	movwf	i1___awtoft@sign,c
 18165  005E76  501C               	movf	??i1___awtoft& (0+255),w,c
 18166  005E78                     i1l9167:
 18167  005E78  C019  F011         	movff	i1___awtoft@c,?i1___ftpack
 18168  005E7C  C01A  F012         	movff	i1___awtoft@c+1,?i1___ftpack+1
 18169  005E80  6A13               	clrf	?i1___ftpack+2,c
 18170  005E82  6E1C               	movwf	??i1___awtoft& (0+255),c
 18171  005E84  0E8E               	movlw	142
 18172  005E86  6E14               	movwf	?i1___ftpack+3,c
 18173  005E88  501C               	movf	??i1___awtoft& (0+255),w,c
 18174  005E8A  C01D  F015         	movff	i1___awtoft@sign,?i1___ftpack+4
 18175  005E8E  ECC1  F029         	call	i1___ftpack	;wreg free
 18176  005E92  C013  F01B         	movff	?i1___ftpack+2,?i1___awtoft+2
 18177  005E96  C012  F01A         	movff	?i1___ftpack+1,?i1___awtoft+1
 18178  005E9A  C011  F019         	movff	?i1___ftpack,?i1___awtoft
 18179  005E9E  0012               	return	
 18180  005EA0                     __end_ofi1___awtoft:
 18181                           	opt stack 0
 18182                           pclatu	equ	0xFFB
 18183                           pclath	equ	0xFFA
 18184                           tblptru	equ	0xFF8
 18185                           tblptrh	equ	0xFF7
 18186                           tblptrl	equ	0xFF6
 18187                           tablat	equ	0xFF5
 18188                           prodh	equ	0xFF4
 18189                           prodl	equ	0xFF3
 18190                           intcon	equ	0xFF2
 18191                           intcon2	equ	0xFF1
 18192                           postinc0	equ	0xFEE
 18193                           fsr0h	equ	0xFEA
 18194                           fsr0l	equ	0xFE9
 18195                           wreg	equ	0xFE8
 18196                           fsr1h	equ	0xFE2
 18197                           fsr1l	equ	0xFE1
 18198                           bsr	equ	0xFE0
 18199                           indf2	equ	0xFDF
 18200                           postinc2	equ	0xFDE
 18201                           postdec2	equ	0xFDD
 18202                           fsr2h	equ	0xFDA
 18203                           fsr2l	equ	0xFD9
 18204                           status	equ	0xFD8
 18205                           
 18206 ;; *************** function i1_Obtener_Distancia *****************
 18207 ;; Defined at:
 18208 ;;		line 241 in file "main.c"
 18209 ;; Parameters:    Size  Location     Type
 18210 ;;		None
 18211 ;; Auto vars:     Size  Location     Type
 18212 ;;  Obtener_Dist    2   30[COMRAM] unsigned int 
 18213 ;;  Obtener_Dist    2   28[COMRAM] unsigned int 
 18214 ;;  Obtener_Dist    2   26[COMRAM] unsigned int 
 18215 ;; Return value:  Size  Location     Type
 18216 ;;                  2   24[COMRAM] unsigned int 
 18217 ;; Registers used:
 18218 ;;		wreg, status,2, status,0, cstack
 18219 ;; Tracked objects:
 18220 ;;		On entry : 0/0
 18221 ;;		On exit  : 0/0
 18222 ;;		Unchanged: 0/0
 18223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18224 ;;      Params:         2       0       0       0       0       0       0       0       0
 18225 ;;      Locals:         6       0       0       0       0       0       0       0       0
 18226 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18227 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18228 ;;Total ram usage:        8 bytes
 18229 ;; Hardware stack levels used:    1
 18230 ;; Hardware stack levels required when called:    4
 18231 ;; This function calls:
 18232 ;;		i1___lwdiv
 18233 ;; This function is called by:
 18234 ;;		_interrupcaoLOW
 18235 ;; This function uses a non-reentrant model
 18236 ;;
 18237                           
 18238                           	psect	text68
 18239  005A18                     __ptext68:
 18240                           	opt stack 0
 18241  005A18                     i1_Obtener_Distancia:
 18242                           	opt stack 20
 18243                           
 18244                           ;main.c: 242: uint16_t Duracion;
 18245                           ;main.c: 243: uint16_t Distancia;
 18246                           ;main.c: 244: uint16_t Timer_1;
 18247                           ;main.c: 246: LATAbits.LATA1=1;
 18248                           
 18249                           ;incstack = 0
 18250                           ;incstack = 0
 18251  005A18  8289               	bsf	3977,1,c	;volatile
 18252                           
 18253                           ;main.c: 247: _delay((unsigned long)((10)*(8000000/4000000.0)));
 18254  005A1A  0E06               	movlw	6
 18255  005A1C                     i1u1117_27:
 18256  005A1C  2EE8               	decfsz	wreg,f,c
 18257  005A1E  D7FE               	goto	i1u1117_27
 18258  005A20  D000               	nop2		;nop
 18259                           
 18260                           ;main.c: 248: LATAbits.LATA1=0;
 18261  005A22  9289               	bcf	3977,1,c	;volatile
 18262  005A24                     i1l207:
 18263  005A24  A480               	btfss	3968,2,c	;volatile
 18264  005A26  D7FE               	goto	i1l207
 18265                           
 18266                           ;main.c: 250: T1CONbits.TMR1ON=1;
 18267  005A28  80CD               	bsf	4045,0,c	;volatile
 18268  005A2A                     i1l210:
 18269  005A2A  B480               	btfsc	3968,2,c	;volatile
 18270  005A2C  D7FE               	goto	i1l210
 18271                           
 18272                           ;main.c: 252: T1CONbits.TMR1ON=0;
 18273  005A2E  90CD               	bcf	4045,0,c	;volatile
 18274                           
 18275                           ;main.c: 253: Timer_1=TMR1;
 18276  005A30  CFCE F01B          	movff	4046,i1Obtener_Distancia@Timer_1	;volatile
 18277  005A34  CFCF F01C          	movff	4047,i1Obtener_Distancia@Timer_1+1	;volatile
 18278                           
 18279                           ;main.c: 254: Duracion=Timer_1/2;
 18280  005A38  90D8               	bcf	status,0,c
 18281  005A3A  301C               	rrcf	i1Obtener_Distancia@Timer_1+1,w,c
 18282  005A3C  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 18283  005A3E  301B               	rrcf	i1Obtener_Distancia@Timer_1,w,c
 18284  005A40  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 18285                           
 18286                           ;main.c: 255: if(Duracion<=23200)
 18287  005A42  0EA1               	movlw	161
 18288  005A44  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 18289  005A46  0E5A               	movlw	90
 18290  005A48  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 18291  005A4A  B0D8               	btfsc	status,0,c
 18292  005A4C  D00F               	goto	i1l8653
 18293                           
 18294                           ;main.c: 256: {
 18295                           ;main.c: 257: Distancia=Duracion/58;
 18296  005A4E  C01F  F011         	movff	i1Obtener_Distancia@Duracion,?i1___lwdiv
 18297  005A52  C020  F012         	movff	i1Obtener_Distancia@Duracion+1,?i1___lwdiv+1
 18298  005A56  0E00               	movlw	0
 18299  005A58  6E14               	movwf	?i1___lwdiv+3,c
 18300  005A5A  0E3A               	movlw	58
 18301  005A5C  6E13               	movwf	?i1___lwdiv+2,c
 18302  005A5E  EC8C  F02E         	call	i1___lwdiv	;wreg free
 18303  005A62  C011  F01D         	movff	?i1___lwdiv,i1Obtener_Distancia@Distancia
 18304  005A66  C012  F01E         	movff	?i1___lwdiv+1,i1Obtener_Distancia@Distancia+1
 18305                           
 18306                           ;main.c: 258: }
 18307  005A6A  D008               	goto	i1l214
 18308  005A6C                     i1l8653:
 18309                           
 18310                           ;main.c: 259: else if(Duracion<116)
 18311  005A6C  0E74               	movlw	116
 18312  005A6E  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 18313  005A70  0E00               	movlw	0
 18314  005A72  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 18315                           
 18316                           ;main.c: 263: else
 18317                           ;main.c: 264: {
 18318                           ;main.c: 265: Distancia=0;
 18319                           
 18320                           ;main.c: 262: }
 18321                           
 18322                           ;main.c: 260: {
 18323                           ;main.c: 261: Distancia=0;
 18324  005A74  0E00               	movlw	0
 18325  005A76  6E1E               	movwf	i1Obtener_Distancia@Distancia+1,c
 18326  005A78  0E00               	movlw	0
 18327  005A7A  6E1D               	movwf	i1Obtener_Distancia@Distancia,c
 18328  005A7C                     i1l214:
 18329                           
 18330                           ;main.c: 266: }
 18331                           ;main.c: 267: Duracion=0;
 18332  005A7C  0E00               	movlw	0
 18333  005A7E  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 18334  005A80  0E00               	movlw	0
 18335  005A82  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 18336                           
 18337                           ;main.c: 268: TMR1=0;
 18338  005A84  0E00               	movlw	0
 18339  005A86  6ECF               	movwf	4047,c	;volatile
 18340  005A88  0E00               	movlw	0
 18341  005A8A  6ECE               	movwf	4046,c	;volatile
 18342                           
 18343                           ;main.c: 270: return Distancia;
 18344  005A8C  C01D  F019         	movff	i1Obtener_Distancia@Distancia,?i1_Obtener_Distancia
 18345  005A90  C01E  F01A         	movff	i1Obtener_Distancia@Distancia+1,?i1_Obtener_Distancia+1
 18346  005A94  0012               	return	
 18347  005A96                     __end_ofi1_Obtener_Distancia:
 18348                           	opt stack 0
 18349                           pclatu	equ	0xFFB
 18350                           pclath	equ	0xFFA
 18351                           tblptru	equ	0xFF8
 18352                           tblptrh	equ	0xFF7
 18353                           tblptrl	equ	0xFF6
 18354                           tablat	equ	0xFF5
 18355                           prodh	equ	0xFF4
 18356                           prodl	equ	0xFF3
 18357                           intcon	equ	0xFF2
 18358                           intcon2	equ	0xFF1
 18359                           postinc0	equ	0xFEE
 18360                           fsr0h	equ	0xFEA
 18361                           fsr0l	equ	0xFE9
 18362                           wreg	equ	0xFE8
 18363                           fsr1h	equ	0xFE2
 18364                           fsr1l	equ	0xFE1
 18365                           bsr	equ	0xFE0
 18366                           indf2	equ	0xFDF
 18367                           postinc2	equ	0xFDE
 18368                           postdec2	equ	0xFDD
 18369                           fsr2h	equ	0xFDA
 18370                           fsr2l	equ	0xFD9
 18371                           status	equ	0xFD8
 18372                           
 18373 ;; *************** function i1___lwdiv *****************
 18374 ;; Defined at:
 18375 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
 18376 ;; Parameters:    Size  Location     Type
 18377 ;;  __lwdiv         2   16[COMRAM] unsigned int 
 18378 ;;  __lwdiv         2   18[COMRAM] unsigned int 
 18379 ;; Auto vars:     Size  Location     Type
 18380 ;;  __lwdiv         2   22[COMRAM] unsigned int 
 18381 ;;  __lwdiv         1   21[COMRAM] unsigned char 
 18382 ;; Return value:  Size  Location     Type
 18383 ;;                  2   16[COMRAM] unsigned int 
 18384 ;; Registers used:
 18385 ;;		wreg, status,2, status,0
 18386 ;; Tracked objects:
 18387 ;;		On entry : 0/0
 18388 ;;		On exit  : 0/0
 18389 ;;		Unchanged: 0/0
 18390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18391 ;;      Params:         4       0       0       0       0       0       0       0       0
 18392 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18393 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18394 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18395 ;;Total ram usage:        8 bytes
 18396 ;; Hardware stack levels used:    1
 18397 ;; Hardware stack levels required when called:    3
 18398 ;; This function calls:
 18399 ;;		Nothing
 18400 ;; This function is called by:
 18401 ;;		i1_Obtener_Distancia
 18402 ;; This function uses a non-reentrant model
 18403 ;;
 18404                           
 18405                           	psect	text69
 18406  005D18                     __ptext69:
 18407                           	opt stack 0
 18408  005D18                     i1___lwdiv:
 18409                           	opt stack 20
 18410                           
 18411                           ;incstack = 0
 18412                           ;incstack = 0
 18413  005D18  0E00               	movlw	0
 18414  005D1A  6E18               	movwf	i1___lwdiv@quotient+1,c
 18415  005D1C  0E00               	movlw	0
 18416  005D1E  6E17               	movwf	i1___lwdiv@quotient,c
 18417  005D20  5014               	movf	i1___lwdiv@divisor+1,w,c
 18418  005D22  1013               	iorwf	i1___lwdiv@divisor,w,c
 18419  005D24  B4D8               	btfsc	status,2,c
 18420  005D26  D01E               	goto	i1l907
 18421  005D28  6E15               	movwf	??i1___lwdiv& (0+255),c
 18422  005D2A  0E01               	movlw	1
 18423  005D2C  6E16               	movwf	i1___lwdiv@counter,c
 18424  005D2E  5015               	movf	??i1___lwdiv& (0+255),w,c
 18425  005D30  D004               	goto	i1l9621
 18426  005D32                     i1l9619:
 18427  005D32  90D8               	bcf	status,0,c
 18428  005D34  3613               	rlcf	i1___lwdiv@divisor,f,c
 18429  005D36  3614               	rlcf	i1___lwdiv@divisor+1,f,c
 18430  005D38  2A16               	incf	i1___lwdiv@counter,f,c
 18431  005D3A                     i1l9621:
 18432  005D3A  AE14               	btfss	i1___lwdiv@divisor+1,7,c
 18433  005D3C  D7FA               	goto	i1l9619
 18434  005D3E                     i1l9623:
 18435  005D3E  90D8               	bcf	status,0,c
 18436  005D40  3617               	rlcf	i1___lwdiv@quotient,f,c
 18437  005D42  3618               	rlcf	i1___lwdiv@quotient+1,f,c
 18438  005D44  5013               	movf	i1___lwdiv@divisor,w,c
 18439  005D46  5C11               	subwf	i1___lwdiv@dividend,w,c
 18440  005D48  5014               	movf	i1___lwdiv@divisor+1,w,c
 18441  005D4A  5812               	subwfb	i1___lwdiv@dividend+1,w,c
 18442  005D4C  A0D8               	btfss	status,0,c
 18443  005D4E  D005               	goto	i1l9631
 18444  005D50  5013               	movf	i1___lwdiv@divisor,w,c
 18445  005D52  5E11               	subwf	i1___lwdiv@dividend,f,c
 18446  005D54  5014               	movf	i1___lwdiv@divisor+1,w,c
 18447  005D56  5A12               	subwfb	i1___lwdiv@dividend+1,f,c
 18448  005D58  8017               	bsf	i1___lwdiv@quotient,0,c
 18449  005D5A                     i1l9631:
 18450  005D5A  90D8               	bcf	status,0,c
 18451  005D5C  3214               	rrcf	i1___lwdiv@divisor+1,f,c
 18452  005D5E  3213               	rrcf	i1___lwdiv@divisor,f,c
 18453  005D60  2E16               	decfsz	i1___lwdiv@counter,f,c
 18454  005D62  D7ED               	goto	i1l9623
 18455  005D64                     i1l907:
 18456  005D64  C017  F011         	movff	i1___lwdiv@quotient,?i1___lwdiv
 18457  005D68  C018  F012         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
 18458  005D6C  0012               	return	
 18459  005D6E                     __end_ofi1___lwdiv:
 18460                           	opt stack 0
 18461                           pclatu	equ	0xFFB
 18462                           pclath	equ	0xFFA
 18463                           tblptru	equ	0xFF8
 18464                           tblptrh	equ	0xFF7
 18465                           tblptrl	equ	0xFF6
 18466                           tablat	equ	0xFF5
 18467                           prodh	equ	0xFF4
 18468                           prodl	equ	0xFF3
 18469                           intcon	equ	0xFF2
 18470                           intcon2	equ	0xFF1
 18471                           postinc0	equ	0xFEE
 18472                           fsr0h	equ	0xFEA
 18473                           fsr0l	equ	0xFE9
 18474                           wreg	equ	0xFE8
 18475                           fsr1h	equ	0xFE2
 18476                           fsr1l	equ	0xFE1
 18477                           bsr	equ	0xFE0
 18478                           indf2	equ	0xFDF
 18479                           postinc2	equ	0xFDE
 18480                           postdec2	equ	0xFDD
 18481                           fsr2h	equ	0xFDA
 18482                           fsr2l	equ	0xFD9
 18483                           status	equ	0xFD8
 18484                           
 18485 ;; *************** function i1_lcd_putc *****************
 18486 ;; Defined at:
 18487 ;;		line 135 in file "lcd.h"
 18488 ;; Parameters:    Size  Location     Type
 18489 ;;  lcd_putc        2   20[COMRAM] PTR unsigned char 
 18490 ;;		 -> LCD_Buffer(32), 
 18491 ;; Auto vars:     Size  Location     Type
 18492 ;;  lcd_putc        2   22[COMRAM] int 
 18493 ;; Return value:  Size  Location     Type
 18494 ;;		None               void
 18495 ;; Registers used:
 18496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18497 ;; Tracked objects:
 18498 ;;		On entry : 0/0
 18499 ;;		On exit  : 0/0
 18500 ;;		Unchanged: 0/0
 18501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18502 ;;      Params:         2       0       0       0       0       0       0       0       0
 18503 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18504 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18505 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18506 ;;Total ram usage:        4 bytes
 18507 ;; Hardware stack levels used:    1
 18508 ;; Hardware stack levels required when called:    5
 18509 ;; This function calls:
 18510 ;;		i1_lcd_write_char
 18511 ;; This function is called by:
 18512 ;;		_interrupcaoLOW
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           	psect	text70
 18517  0061B8                     __ptext70:
 18518                           	opt stack 0
 18519  0061B8                     i1_lcd_putc:
 18520                           	opt stack 19
 18521                           
 18522                           ;lcd.h: 136: int i;
 18523                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
 18524                           
 18525                           ;incstack = 0
 18526                           ;incstack = 0
 18527  0061B8  0E00               	movlw	0
 18528  0061BA  6E18               	movwf	i1lcd_putc@i+1,c
 18529  0061BC  0E00               	movlw	0
 18530  0061BE  6E17               	movwf	i1lcd_putc@i,c
 18531  0061C0  D00C               	goto	i1l8641
 18532  0061C2                     i1l8637:
 18533                           
 18534                           ;lcd.h: 138: lcd_write_char(a[i]);
 18535  0061C2  5017               	movf	i1lcd_putc@i,w,c
 18536  0061C4  2415               	addwf	i1lcd_putc@a,w,c
 18537  0061C6  6ED9               	movwf	fsr2l,c
 18538  0061C8  5018               	movf	i1lcd_putc@i+1,w,c
 18539  0061CA  2016               	addwfc	i1lcd_putc@a+1,w,c
 18540  0061CC  6EDA               	movwf	fsr2h,c
 18541  0061CE  50DF               	movf	indf2,w,c
 18542  0061D0  6E12               	movwf	?i1_lcd_write_char,c
 18543  0061D2  ECA4  F030         	call	i1_lcd_write_char	;wreg free
 18544  0061D6  4A17               	infsnz	i1lcd_putc@i,f,c
 18545  0061D8  2A18               	incf	i1lcd_putc@i+1,f,c
 18546  0061DA                     i1l8641:
 18547  0061DA  5017               	movf	i1lcd_putc@i,w,c
 18548  0061DC  2415               	addwf	i1lcd_putc@a,w,c
 18549  0061DE  6ED9               	movwf	fsr2l,c
 18550  0061E0  5018               	movf	i1lcd_putc@i+1,w,c
 18551  0061E2  2016               	addwfc	i1lcd_putc@a+1,w,c
 18552  0061E4  6EDA               	movwf	fsr2h,c
 18553  0061E6  50DF               	movf	indf2,w,c
 18554  0061E8  B4D8               	btfsc	status,2,c
 18555  0061EA  0012               	return	
 18556  0061EC  D7EA               	goto	i1l8637
 18557  0061EE                     __end_ofi1_lcd_putc:
 18558                           	opt stack 0
 18559                           pclatu	equ	0xFFB
 18560                           pclath	equ	0xFFA
 18561                           tblptru	equ	0xFF8
 18562                           tblptrh	equ	0xFF7
 18563                           tblptrl	equ	0xFF6
 18564                           tablat	equ	0xFF5
 18565                           prodh	equ	0xFF4
 18566                           prodl	equ	0xFF3
 18567                           intcon	equ	0xFF2
 18568                           intcon2	equ	0xFF1
 18569                           postinc0	equ	0xFEE
 18570                           fsr0h	equ	0xFEA
 18571                           fsr0l	equ	0xFE9
 18572                           wreg	equ	0xFE8
 18573                           fsr1h	equ	0xFE2
 18574                           fsr1l	equ	0xFE1
 18575                           bsr	equ	0xFE0
 18576                           indf2	equ	0xFDF
 18577                           postinc2	equ	0xFDE
 18578                           postdec2	equ	0xFDD
 18579                           fsr2h	equ	0xFDA
 18580                           fsr2l	equ	0xFD9
 18581                           status	equ	0xFD8
 18582                           
 18583 ;; *************** function i1_lcd_write_char *****************
 18584 ;; Defined at:
 18585 ;;		line 117 in file "lcd.h"
 18586 ;; Parameters:    Size  Location     Type
 18587 ;;  lcd_write_ch    1   17[COMRAM] unsigned char 
 18588 ;; Auto vars:     Size  Location     Type
 18589 ;;  lcd_write_ch    1   19[COMRAM] unsigned char 
 18590 ;;  lcd_write_ch    1   18[COMRAM] unsigned char 
 18591 ;; Return value:  Size  Location     Type
 18592 ;;		None               void
 18593 ;; Registers used:
 18594 ;;		wreg, status,2, status,0, cstack
 18595 ;; Tracked objects:
 18596 ;;		On entry : 0/0
 18597 ;;		On exit  : 0/0
 18598 ;;		Unchanged: 0/0
 18599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18600 ;;      Params:         1       0       0       0       0       0       0       0       0
 18601 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18603 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18604 ;;Total ram usage:        3 bytes
 18605 ;; Hardware stack levels used:    1
 18606 ;; Hardware stack levels required when called:    4
 18607 ;; This function calls:
 18608 ;;		i1_Lcd_Port
 18609 ;; This function is called by:
 18610 ;;		i1_lcd_putc
 18611 ;; This function uses a non-reentrant model
 18612 ;;
 18613                           
 18614                           	psect	text71
 18615  006148                     __ptext71:
 18616                           	opt stack 0
 18617  006148                     i1_lcd_write_char:
 18618                           	opt stack 19
 18619                           
 18620                           ;lcd.h: 118: char temp,y;
 18621                           ;lcd.h: 119: temp = a&0x0F;
 18622                           
 18623                           ;incstack = 0
 18624                           ;incstack = 0
 18625  006148  5012               	movf	i1lcd_write_char@a,w,c
 18626  00614A  0B0F               	andlw	15
 18627  00614C  6E13               	movwf	i1lcd_write_char@temp,c
 18628                           
 18629                           ;lcd.h: 120: y = a&0xF0;
 18630  00614E  5012               	movf	i1lcd_write_char@a,w,c
 18631  006150  0BF0               	andlw	240
 18632  006152  6E14               	movwf	i1lcd_write_char@y,c
 18633                           
 18634                           ;lcd.h: 121: RD2 = 1;
 18635  006154  8483               	bsf	3971,2,c	;volatile
 18636                           
 18637                           ;lcd.h: 122: Lcd_Port(y>>4);
 18638  006156  3814               	swapf	i1lcd_write_char@y,w,c
 18639  006158  0B0F               	andlw	15
 18640  00615A  6E11               	movwf	?i1_Lcd_Port,c
 18641  00615C  ECF7  F030         	call	i1_Lcd_Port	;wreg free
 18642                           
 18643                           ;lcd.h: 123: RD3 = 1;
 18644  006160  8683               	bsf	3971,3,c	;volatile
 18645                           
 18646                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
 18647  006162  0E1A               	movlw	26
 18648  006164                     i1u1118_27:
 18649  006164  2EE8               	decfsz	wreg,f,c
 18650  006166  D7FE               	goto	i1u1118_27
 18651  006168  D000               	nop2		;nop
 18652                           
 18653                           ;lcd.h: 125: RD3 = 0;
 18654  00616A  9683               	bcf	3971,3,c	;volatile
 18655                           
 18656                           ;lcd.h: 126: Lcd_Port(temp);
 18657  00616C  C013  F011         	movff	i1lcd_write_char@temp,?i1_Lcd_Port
 18658  006170  ECF7  F030         	call	i1_Lcd_Port	;wreg free
 18659                           
 18660                           ;lcd.h: 127: RD3 = 1;
 18661  006174  8683               	bsf	3971,3,c	;volatile
 18662                           
 18663                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
 18664  006176  0E1A               	movlw	26
 18665  006178                     i1u1119_27:
 18666  006178  2EE8               	decfsz	wreg,f,c
 18667  00617A  D7FE               	goto	i1u1119_27
 18668  00617C  D000               	nop2		;nop
 18669                           
 18670                           ;lcd.h: 129: RD3 = 0;
 18671  00617E  9683               	bcf	3971,3,c	;volatile
 18672  006180  0012               	return	
 18673  006182                     __end_ofi1_lcd_write_char:
 18674                           	opt stack 0
 18675                           pclatu	equ	0xFFB
 18676                           pclath	equ	0xFFA
 18677                           tblptru	equ	0xFF8
 18678                           tblptrh	equ	0xFF7
 18679                           tblptrl	equ	0xFF6
 18680                           tablat	equ	0xFF5
 18681                           prodh	equ	0xFF4
 18682                           prodl	equ	0xFF3
 18683                           intcon	equ	0xFF2
 18684                           intcon2	equ	0xFF1
 18685                           postinc0	equ	0xFEE
 18686                           fsr0h	equ	0xFEA
 18687                           fsr0l	equ	0xFE9
 18688                           wreg	equ	0xFE8
 18689                           fsr1h	equ	0xFE2
 18690                           fsr1l	equ	0xFE1
 18691                           bsr	equ	0xFE0
 18692                           indf2	equ	0xFDF
 18693                           postinc2	equ	0xFDE
 18694                           postdec2	equ	0xFDD
 18695                           fsr2h	equ	0xFDA
 18696                           fsr2l	equ	0xFD9
 18697                           status	equ	0xFD8
 18698                           
 18699 ;; *************** function i1_lcd_gotoxy *****************
 18700 ;; Defined at:
 18701 ;;		line 72 in file "lcd.h"
 18702 ;; Parameters:    Size  Location     Type
 18703 ;;  lcd_gotoxy      1   19[COMRAM] unsigned char 
 18704 ;;  lcd_gotoxy      1   20[COMRAM] unsigned char 
 18705 ;; Auto vars:     Size  Location     Type
 18706 ;;  lcd_gotoxy      1   23[COMRAM] unsigned char 
 18707 ;;  lcd_gotoxy      1   22[COMRAM] unsigned char 
 18708 ;;  lcd_gotoxy      1   21[COMRAM] unsigned char 
 18709 ;; Return value:  Size  Location     Type
 18710 ;;		None               void
 18711 ;; Registers used:
 18712 ;;		wreg, status,2, status,0, cstack
 18713 ;; Tracked objects:
 18714 ;;		On entry : 0/0
 18715 ;;		On exit  : 0/0
 18716 ;;		Unchanged: 0/0
 18717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18718 ;;      Params:         2       0       0       0       0       0       0       0       0
 18719 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18720 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18721 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18722 ;;Total ram usage:        5 bytes
 18723 ;; Hardware stack levels used:    1
 18724 ;; Hardware stack levels required when called:    5
 18725 ;; This function calls:
 18726 ;;		i1_Lcd_Cmd
 18727 ;; This function is called by:
 18728 ;;		_interrupcaoLOW
 18729 ;; This function uses a non-reentrant model
 18730 ;;
 18731                           
 18732                           	psect	text72
 18733  005D6E                     __ptext72:
 18734                           	opt stack 0
 18735  005D6E                     i1_lcd_gotoxy:
 18736                           	opt stack 19
 18737                           
 18738                           ;lcd.h: 73: char temp,z,y;
 18739                           ;lcd.h: 74: if(a == 1)
 18740                           
 18741                           ;incstack = 0
 18742                           ;incstack = 0
 18743  005D6E  0414               	decf	i1lcd_gotoxy@a,w,c
 18744  005D70  A4D8               	btfss	status,2,c
 18745  005D72  D012               	goto	i1l8609
 18746                           
 18747                           ;lcd.h: 75: {
 18748                           ;lcd.h: 76: temp = 0x80 + b - 1;
 18749  005D74  5015               	movf	i1lcd_gotoxy@b,w,c
 18750  005D76  0F7F               	addlw	127
 18751  005D78  6E18               	movwf	i1lcd_gotoxy@temp,c
 18752                           
 18753                           ;lcd.h: 77: z = temp>>4;
 18754  005D7A  3818               	swapf	i1lcd_gotoxy@temp,w,c
 18755  005D7C  0B0F               	andlw	15
 18756  005D7E  6E16               	movwf	i1lcd_gotoxy@z,c
 18757                           
 18758                           ;lcd.h: 78: y = temp & 0x0F;
 18759  005D80  5018               	movf	i1lcd_gotoxy@temp,w,c
 18760  005D82  0B0F               	andlw	15
 18761  005D84  6E17               	movwf	i1lcd_gotoxy@y,c
 18762                           
 18763                           ;lcd.h: 79: Lcd_Cmd(z);
 18764  005D86  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 18765  005D8A  EC53  F031         	call	i1_Lcd_Cmd	;wreg free
 18766                           
 18767                           ;lcd.h: 80: Lcd_Cmd(y);
 18768  005D8E  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 18769  005D92  EC53  F031         	call	i1_Lcd_Cmd	;wreg free
 18770                           
 18771                           ;lcd.h: 81: }
 18772  005D96  D015               	goto	i1l121
 18773  005D98                     i1l8609:
 18774                           
 18775                           ;lcd.h: 82: else if(a == 2)
 18776  005D98  5014               	movf	i1lcd_gotoxy@a,w,c
 18777  005D9A  0A02               	xorlw	2
 18778  005D9C  A4D8               	btfss	status,2,c
 18779  005D9E  D011               	goto	i1l121
 18780                           
 18781                           ;lcd.h: 83: {
 18782                           ;lcd.h: 84: temp = 0xC0 + b - 1;
 18783  005DA0  5015               	movf	i1lcd_gotoxy@b,w,c
 18784  005DA2  0FBF               	addlw	191
 18785  005DA4  6E18               	movwf	i1lcd_gotoxy@temp,c
 18786                           
 18787                           ;lcd.h: 85: z = temp>>4;
 18788  005DA6  3818               	swapf	i1lcd_gotoxy@temp,w,c
 18789  005DA8  0B0F               	andlw	15
 18790  005DAA  6E16               	movwf	i1lcd_gotoxy@z,c
 18791                           
 18792                           ;lcd.h: 86: y = temp & 0x0F;
 18793  005DAC  5018               	movf	i1lcd_gotoxy@temp,w,c
 18794  005DAE  0B0F               	andlw	15
 18795  005DB0  6E17               	movwf	i1lcd_gotoxy@y,c
 18796                           
 18797                           ;lcd.h: 87: Lcd_Cmd(z);
 18798  005DB2  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 18799  005DB6  EC53  F031         	call	i1_Lcd_Cmd	;wreg free
 18800                           
 18801                           ;lcd.h: 88: Lcd_Cmd(y);
 18802  005DBA  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 18803  005DBE  EC53  F031         	call	i1_Lcd_Cmd	;wreg free
 18804  005DC2                     i1l121:
 18805  005DC2  0012               	return	
 18806  005DC4                     __end_ofi1_lcd_gotoxy:
 18807                           	opt stack 0
 18808                           pclatu	equ	0xFFB
 18809                           pclath	equ	0xFFA
 18810                           tblptru	equ	0xFF8
 18811                           tblptrh	equ	0xFF7
 18812                           tblptrl	equ	0xFF6
 18813                           tablat	equ	0xFF5
 18814                           prodh	equ	0xFF4
 18815                           prodl	equ	0xFF3
 18816                           intcon	equ	0xFF2
 18817                           intcon2	equ	0xFF1
 18818                           postinc0	equ	0xFEE
 18819                           fsr0h	equ	0xFEA
 18820                           fsr0l	equ	0xFE9
 18821                           wreg	equ	0xFE8
 18822                           fsr1h	equ	0xFE2
 18823                           fsr1l	equ	0xFE1
 18824                           bsr	equ	0xFE0
 18825                           indf2	equ	0xFDF
 18826                           postinc2	equ	0xFDE
 18827                           postdec2	equ	0xFDD
 18828                           fsr2h	equ	0xFDA
 18829                           fsr2l	equ	0xFD9
 18830                           status	equ	0xFD8
 18831                           
 18832 ;; *************** function i1_Lcd_Cmd *****************
 18833 ;; Defined at:
 18834 ;;		line 53 in file "lcd.h"
 18835 ;; Parameters:    Size  Location     Type
 18836 ;;  Lcd_Cmd         1   17[COMRAM] unsigned char 
 18837 ;; Auto vars:     Size  Location     Type
 18838 ;;		None
 18839 ;; Return value:  Size  Location     Type
 18840 ;;		None               void
 18841 ;; Registers used:
 18842 ;;		wreg, cstack
 18843 ;; Tracked objects:
 18844 ;;		On entry : 0/0
 18845 ;;		On exit  : 0/0
 18846 ;;		Unchanged: 0/0
 18847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18848 ;;      Params:         1       0       0       0       0       0       0       0       0
 18849 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18850 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18851 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18852 ;;Total ram usage:        2 bytes
 18853 ;; Hardware stack levels used:    1
 18854 ;; Hardware stack levels required when called:    4
 18855 ;; This function calls:
 18856 ;;		i1_Lcd_Port
 18857 ;; This function is called by:
 18858 ;;		i1_lcd_gotoxy
 18859 ;; This function uses a non-reentrant model
 18860 ;;
 18861                           
 18862                           	psect	text73
 18863  0062A6                     __ptext73:
 18864                           	opt stack 0
 18865  0062A6                     i1_Lcd_Cmd:
 18866                           	opt stack 19
 18867                           
 18868                           ;lcd.h: 54: RD2 = 0;
 18869                           
 18870                           ;incstack = 0
 18871                           ;incstack = 0
 18872  0062A6  9483               	bcf	3971,2,c	;volatile
 18873                           
 18874                           ;lcd.h: 55: Lcd_Port(a);
 18875  0062A8  C012  F011         	movff	i1Lcd_Cmd@a,?i1_Lcd_Port
 18876  0062AC  ECF7  F030         	call	i1_Lcd_Port	;wreg free
 18877                           
 18878                           ;lcd.h: 56: RD3 = 1;
 18879  0062B0  8683               	bsf	3971,3,c	;volatile
 18880                           
 18881                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 18882  0062B2  0E0B               	movlw	11
 18883  0062B4  6E13               	movwf	??i1_Lcd_Cmd& (0+255),c
 18884  0062B6  0E62               	movlw	98
 18885  0062B8                     i1u1120_27:
 18886  0062B8  2EE8               	decfsz	wreg,f,c
 18887  0062BA  D7FE               	goto	i1u1120_27
 18888  0062BC  2E13               	decfsz	??i1_Lcd_Cmd& (0+255),f,c
 18889  0062BE  D7FC               	goto	i1u1120_27
 18890  0062C0  F000               	nop	
 18891                           
 18892                           ;lcd.h: 58: RD3 = 0;
 18893  0062C2  9683               	bcf	3971,3,c	;volatile
 18894  0062C4  0012               	return	
 18895  0062C6                     __end_ofi1_Lcd_Cmd:
 18896                           	opt stack 0
 18897                           pclatu	equ	0xFFB
 18898                           pclath	equ	0xFFA
 18899                           tblptru	equ	0xFF8
 18900                           tblptrh	equ	0xFF7
 18901                           tblptrl	equ	0xFF6
 18902                           tablat	equ	0xFF5
 18903                           prodh	equ	0xFF4
 18904                           prodl	equ	0xFF3
 18905                           intcon	equ	0xFF2
 18906                           intcon2	equ	0xFF1
 18907                           postinc0	equ	0xFEE
 18908                           fsr0h	equ	0xFEA
 18909                           fsr0l	equ	0xFE9
 18910                           wreg	equ	0xFE8
 18911                           fsr1h	equ	0xFE2
 18912                           fsr1l	equ	0xFE1
 18913                           bsr	equ	0xFE0
 18914                           indf2	equ	0xFDF
 18915                           postinc2	equ	0xFDE
 18916                           postdec2	equ	0xFDD
 18917                           fsr2h	equ	0xFDA
 18918                           fsr2l	equ	0xFD9
 18919                           status	equ	0xFD8
 18920                           
 18921 ;; *************** function i1_Lcd_Port *****************
 18922 ;; Defined at:
 18923 ;;		line 28 in file "lcd.h"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;  Lcd_Port        1   16[COMRAM] unsigned char 
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;		None
 18928 ;; Return value:  Size  Location     Type
 18929 ;;		None               void
 18930 ;; Registers used:
 18931 ;;		None
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/0
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18937 ;;      Params:         1       0       0       0       0       0       0       0       0
 18938 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18939 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18940 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18941 ;;Total ram usage:        1 bytes
 18942 ;; Hardware stack levels used:    1
 18943 ;; Hardware stack levels required when called:    3
 18944 ;; This function calls:
 18945 ;;		Nothing
 18946 ;; This function is called by:
 18947 ;;		i1_Lcd_Cmd
 18948 ;;		i1_lcd_write_char
 18949 ;; This function uses a non-reentrant model
 18950 ;;
 18951                           
 18952                           	psect	text74
 18953  0061EE                     __ptext74:
 18954                           	opt stack 0
 18955  0061EE                     i1_Lcd_Port:
 18956                           	opt stack 19
 18957                           
 18958                           ;lcd.h: 29: if(a & 1)
 18959                           
 18960                           ;incstack = 0
 18961                           ;incstack = 0
 18962  0061EE  A011               	btfss	i1Lcd_Port@a,0,c
 18963  0061F0  D002               	goto	i1l101
 18964                           
 18965                           ;lcd.h: 30: RD4 = 1;
 18966  0061F2  8883               	bsf	3971,4,c	;volatile
 18967  0061F4  D001               	goto	i1l102
 18968  0061F6                     i1l101:
 18969                           
 18970                           ;lcd.h: 31: else
 18971                           ;lcd.h: 32: RD4 = 0;
 18972  0061F6  9883               	bcf	3971,4,c	;volatile
 18973  0061F8                     i1l102:
 18974                           
 18975                           ;lcd.h: 34: if(a & 2)
 18976  0061F8  A211               	btfss	i1Lcd_Port@a,1,c
 18977  0061FA  D002               	goto	i1l103
 18978                           
 18979                           ;lcd.h: 35: RD5 = 1;
 18980  0061FC  8A83               	bsf	3971,5,c	;volatile
 18981  0061FE  D001               	goto	i1l104
 18982  006200                     i1l103:
 18983                           
 18984                           ;lcd.h: 36: else
 18985                           ;lcd.h: 37: RD5 = 0;
 18986  006200  9A83               	bcf	3971,5,c	;volatile
 18987  006202                     i1l104:
 18988                           
 18989                           ;lcd.h: 39: if(a & 4)
 18990  006202  A411               	btfss	i1Lcd_Port@a,2,c
 18991  006204  D002               	goto	i1l105
 18992                           
 18993                           ;lcd.h: 40: RD6 = 1;
 18994  006206  8C83               	bsf	3971,6,c	;volatile
 18995  006208  D001               	goto	i1l106
 18996  00620A                     i1l105:
 18997                           
 18998                           ;lcd.h: 41: else
 18999                           ;lcd.h: 42: RD6 = 0;
 19000  00620A  9C83               	bcf	3971,6,c	;volatile
 19001  00620C                     i1l106:
 19002                           
 19003                           ;lcd.h: 44: if(a & 8)
 19004  00620C  A611               	btfss	i1Lcd_Port@a,3,c
 19005  00620E  D002               	goto	i1l107
 19006                           
 19007                           ;lcd.h: 45: RD7 = 1;
 19008  006210  8E83               	bsf	3971,7,c	;volatile
 19009  006212  D001               	goto	i1l109
 19010  006214                     i1l107:
 19011                           
 19012                           ;lcd.h: 46: else
 19013                           ;lcd.h: 47: RD7 = 0;
 19014  006214  9E83               	bcf	3971,7,c	;volatile
 19015  006216                     i1l109:
 19016  006216  0012               	return	
 19017  006218                     __end_ofi1_Lcd_Port:
 19018                           	opt stack 0
 19019                           pclatu	equ	0xFFB
 19020                           pclath	equ	0xFFA
 19021                           tblptru	equ	0xFF8
 19022                           tblptrh	equ	0xFF7
 19023                           tblptrl	equ	0xFF6
 19024                           tablat	equ	0xFF5
 19025                           prodh	equ	0xFF4
 19026                           prodl	equ	0xFF3
 19027                           intcon	equ	0xFF2
 19028                           intcon2	equ	0xFF1
 19029                           postinc0	equ	0xFEE
 19030                           fsr0h	equ	0xFEA
 19031                           fsr0l	equ	0xFE9
 19032                           wreg	equ	0xFE8
 19033                           fsr1h	equ	0xFE2
 19034                           fsr1l	equ	0xFE1
 19035                           bsr	equ	0xFE0
 19036                           indf2	equ	0xFDF
 19037                           postinc2	equ	0xFDE
 19038                           postdec2	equ	0xFDD
 19039                           fsr2h	equ	0xFDA
 19040                           fsr2l	equ	0xFD9
 19041                           status	equ	0xFD8
 19042                           
 19043 ;; *************** function _interrupcaoHIGH *****************
 19044 ;; Defined at:
 19045 ;;		line 205 in file "main.c"
 19046 ;; Parameters:    Size  Location     Type
 19047 ;;		None
 19048 ;; Auto vars:     Size  Location     Type
 19049 ;;  esp_server_d    1   15[COMRAM] unsigned char 
 19050 ;; Return value:  Size  Location     Type
 19051 ;;		None               void
 19052 ;; Registers used:
 19053 ;;		wreg, status,2, status,0, cstack
 19054 ;; Tracked objects:
 19055 ;;		On entry : 0/0
 19056 ;;		On exit  : 0/0
 19057 ;;		Unchanged: 0/0
 19058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19059 ;;      Params:         0       0       0       0       0       0       0       0       0
 19060 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19061 ;;      Temps:         14       0       0       0       0       0       0       0       0
 19062 ;;      Totals:        15       0       0       0       0       0       0       0       0
 19063 ;;Total ram usage:       15 bytes
 19064 ;; Hardware stack levels used:    1
 19065 ;; Hardware stack levels required when called:    2
 19066 ;; This function calls:
 19067 ;;		_control_LED
 19068 ;; This function is called by:
 19069 ;;		Interrupt level 2
 19070 ;; This function uses a non-reentrant model
 19071 ;;
 19072                           
 19073                           	psect	intcode
 19074  000008                     __pintcode:
 19075                           	opt stack 0
 19076  000008                     _interrupcaoHIGH:
 19077                           	opt stack 17
 19078                           
 19079                           ;incstack = 0
 19080  000008  CFFA F002          	movff	pclath,??_interrupcaoHIGH
 19081  00000C  CFFB F003          	movff	pclatu,??_interrupcaoHIGH+1
 19082  000010  CFE9 F004          	movff	fsr0l,??_interrupcaoHIGH+2
 19083  000014  EDCC  F02C         	call	int_func,f	;refresh shadow registers
 19084                           pclatu	equ	0xFFB
 19085                           pclath	equ	0xFFA
 19086                           tblptru	equ	0xFF8
 19087                           tblptrh	equ	0xFF7
 19088                           tblptrl	equ	0xFF6
 19089                           tablat	equ	0xFF5
 19090                           prodh	equ	0xFF4
 19091                           prodl	equ	0xFF3
 19092                           intcon	equ	0xFF2
 19093                           intcon2	equ	0xFF1
 19094                           postinc0	equ	0xFEE
 19095                           fsr0h	equ	0xFEA
 19096                           fsr0l	equ	0xFE9
 19097                           wreg	equ	0xFE8
 19098                           fsr1h	equ	0xFE2
 19099                           fsr1l	equ	0xFE1
 19100                           bsr	equ	0xFE0
 19101                           indf2	equ	0xFDF
 19102                           postinc2	equ	0xFDE
 19103                           postdec2	equ	0xFDD
 19104                           fsr2h	equ	0xFDA
 19105                           fsr2l	equ	0xFD9
 19106                           status	equ	0xFD8
 19107                           
 19108                           	psect	intcode_body
 19109  005998                     __pintcode_body:
 19110                           	opt stack 17
 19111  005998                     int_func:
 19112                           	opt stack 17
 19113  005998  0006               	pop		; remove dummy address from shadow register refresh
 19114  00599A  CFEA F005          	movff	fsr0h,??_interrupcaoHIGH+3
 19115  00599E  CFE1 F006          	movff	fsr1l,??_interrupcaoHIGH+4
 19116  0059A2  CFE2 F007          	movff	fsr1h,??_interrupcaoHIGH+5
 19117  0059A6  CFD9 F008          	movff	fsr2l,??_interrupcaoHIGH+6
 19118  0059AA  CFDA F009          	movff	fsr2h,??_interrupcaoHIGH+7
 19119  0059AE  CFF3 F00A          	movff	prodl,??_interrupcaoHIGH+8
 19120  0059B2  CFF4 F00B          	movff	prodh,??_interrupcaoHIGH+9
 19121  0059B6  CFF6 F00C          	movff	tblptrl,??_interrupcaoHIGH+10
 19122  0059BA  CFF7 F00D          	movff	tblptrh,??_interrupcaoHIGH+11
 19123  0059BE  CFF8 F00E          	movff	tblptru,??_interrupcaoHIGH+12
 19124  0059C2  CFF5 F00F          	movff	tablat,??_interrupcaoHIGH+13
 19125  0059C6                     
 19126                           ;main.c: 206: char esp_server_data;
 19127                           ;main.c: 207: if (RCIF == 1)
 19128  0059C6  AA9E               	btfss	3998,5,c	;volatile
 19129  0059C8  D001               	goto	i2u529_41
 19130  0059CA  D001               	goto	i2u529_40
 19131  0059CC                     i2u529_41:
 19132  0059CC  D008               	goto	i2l198
 19133  0059CE                     i2u529_40:
 19134  0059CE                     
 19135                           ;main.c: 208: {
 19136                           ;main.c: 209: esp_server_data = RCREG;
 19137  0059CE  CFAE F010          	movff	4014,interrupcaoHIGH@esp_server_data	;volatile
 19138  0059D2                     
 19139                           ;main.c: 210: control_LED(esp_server_data);
 19140  0059D2  C010  F001         	movff	interrupcaoHIGH@esp_server_data,?_control_LED
 19141  0059D6  EC63  F031         	call	_control_LED	;wreg free
 19142  0059DA                     
 19143                           ;main.c: 211: RCIF =0 ;
 19144  0059DA  9A9E               	bcf	3998,5,c	;volatile
 19145  0059DC  D000               	goto	i2l198
 19146  0059DE                     i2l198:
 19147  0059DE  C00F  FFF5         	movff	??_interrupcaoHIGH+13,tablat
 19148  0059E2  C00E  FFF8         	movff	??_interrupcaoHIGH+12,tblptru
 19149  0059E6  C00D  FFF7         	movff	??_interrupcaoHIGH+11,tblptrh
 19150  0059EA  C00C  FFF6         	movff	??_interrupcaoHIGH+10,tblptrl
 19151  0059EE  C00B  FFF4         	movff	??_interrupcaoHIGH+9,prodh
 19152  0059F2  C00A  FFF3         	movff	??_interrupcaoHIGH+8,prodl
 19153  0059F6  C009  FFDA         	movff	??_interrupcaoHIGH+7,fsr2h
 19154  0059FA  C008  FFD9         	movff	??_interrupcaoHIGH+6,fsr2l
 19155  0059FE  C007  FFE2         	movff	??_interrupcaoHIGH+5,fsr1h
 19156  005A02  C006  FFE1         	movff	??_interrupcaoHIGH+4,fsr1l
 19157  005A06  C005  FFEA         	movff	??_interrupcaoHIGH+3,fsr0h
 19158  005A0A  C004  FFE9         	movff	??_interrupcaoHIGH+2,fsr0l
 19159  005A0E  C003  FFFB         	movff	??_interrupcaoHIGH+1,pclatu
 19160  005A12  C002  FFFA         	movff	??_interrupcaoHIGH,pclath
 19161  005A16  0011               	retfie		f
 19162  005A18                     __end_of_interrupcaoHIGH:
 19163                           	opt stack 0
 19164                           pclatu	equ	0xFFB
 19165                           pclath	equ	0xFFA
 19166                           tblptru	equ	0xFF8
 19167                           tblptrh	equ	0xFF7
 19168                           tblptrl	equ	0xFF6
 19169                           tablat	equ	0xFF5
 19170                           prodh	equ	0xFF4
 19171                           prodl	equ	0xFF3
 19172                           intcon	equ	0xFF2
 19173                           intcon2	equ	0xFF1
 19174                           postinc0	equ	0xFEE
 19175                           fsr0h	equ	0xFEA
 19176                           fsr0l	equ	0xFE9
 19177                           wreg	equ	0xFE8
 19178                           fsr1h	equ	0xFE2
 19179                           fsr1l	equ	0xFE1
 19180                           bsr	equ	0xFE0
 19181                           indf2	equ	0xFDF
 19182                           postinc2	equ	0xFDE
 19183                           postdec2	equ	0xFDD
 19184                           fsr2h	equ	0xFDA
 19185                           fsr2l	equ	0xFD9
 19186                           status	equ	0xFD8
 19187                           
 19188 ;; *************** function _control_LED *****************
 19189 ;; Defined at:
 19190 ;;		line 132 in file "main.c"
 19191 ;; Parameters:    Size  Location     Type
 19192 ;;  data            1    0[COMRAM] unsigned char 
 19193 ;; Auto vars:     Size  Location     Type
 19194 ;;		None
 19195 ;; Return value:  Size  Location     Type
 19196 ;;		None               void
 19197 ;; Registers used:
 19198 ;;		wreg, status,2, status,0, cstack
 19199 ;; Tracked objects:
 19200 ;;		On entry : 0/0
 19201 ;;		On exit  : 0/0
 19202 ;;		Unchanged: 0/0
 19203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19204 ;;      Params:         1       0       0       0       0       0       0       0       0
 19205 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19206 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19207 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19208 ;;Total ram usage:        1 bytes
 19209 ;; Hardware stack levels used:    1
 19210 ;; Hardware stack levels required when called:    1
 19211 ;; This function calls:
 19212 ;;		_led_off
 19213 ;;		_led_on
 19214 ;; This function is called by:
 19215 ;;		_interrupcaoHIGH
 19216 ;; This function uses a non-reentrant model
 19217 ;;
 19218                           
 19219                           	psect	text76
 19220  0062C6                     __ptext76:
 19221                           	opt stack 0
 19222  0062C6                     _control_LED:
 19223                           	opt stack 17
 19224                           
 19225                           ;main.c: 133: if(data == 174){
 19226                           
 19227                           ;incstack = 0
 19228                           ;incstack = 0
 19229  0062C6  5001               	movf	control_LED@data,w,c
 19230  0062C8  0AAE               	xorlw	174
 19231  0062CA  A4D8               	btfss	status,2,c
 19232  0062CC  D003               	goto	i2l7069
 19233                           
 19234                           ;main.c: 134: led_on();
 19235  0062CE  EC97  F031         	call	_led_on	;wreg free
 19236                           
 19237                           ;main.c: 135: }else if(data == 170){
 19238  0062D2  D005               	goto	i2l185
 19239  0062D4                     i2l7069:
 19240  0062D4  5001               	movf	control_LED@data,w,c
 19241  0062D6  0AAA               	xorlw	170
 19242  0062D8  B4D8               	btfsc	status,2,c
 19243                           
 19244                           ;main.c: 136: led_off();
 19245  0062DA  EC9A  F031         	call	_led_off	;wreg free
 19246  0062DE                     i2l185:
 19247  0062DE  0012               	return	
 19248  0062E0                     __end_of_control_LED:
 19249                           	opt stack 0
 19250                           pclatu	equ	0xFFB
 19251                           pclath	equ	0xFFA
 19252                           tblptru	equ	0xFF8
 19253                           tblptrh	equ	0xFF7
 19254                           tblptrl	equ	0xFF6
 19255                           tablat	equ	0xFF5
 19256                           prodh	equ	0xFF4
 19257                           prodl	equ	0xFF3
 19258                           intcon	equ	0xFF2
 19259                           intcon2	equ	0xFF1
 19260                           postinc0	equ	0xFEE
 19261                           fsr0h	equ	0xFEA
 19262                           fsr0l	equ	0xFE9
 19263                           wreg	equ	0xFE8
 19264                           fsr1h	equ	0xFE2
 19265                           fsr1l	equ	0xFE1
 19266                           bsr	equ	0xFE0
 19267                           indf2	equ	0xFDF
 19268                           postinc2	equ	0xFDE
 19269                           postdec2	equ	0xFDD
 19270                           fsr2h	equ	0xFDA
 19271                           fsr2l	equ	0xFD9
 19272                           status	equ	0xFD8
 19273                           
 19274 ;; *************** function _led_on *****************
 19275 ;; Defined at:
 19276 ;;		line 111 in file "main.c"
 19277 ;; Parameters:    Size  Location     Type
 19278 ;;		None
 19279 ;; Auto vars:     Size  Location     Type
 19280 ;;		None
 19281 ;; Return value:  Size  Location     Type
 19282 ;;		None               void
 19283 ;; Registers used:
 19284 ;;		wreg, status,2
 19285 ;; Tracked objects:
 19286 ;;		On entry : 0/0
 19287 ;;		On exit  : 0/0
 19288 ;;		Unchanged: 0/0
 19289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19290 ;;      Params:         0       0       0       0       0       0       0       0       0
 19291 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19292 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19293 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19294 ;;Total ram usage:        0 bytes
 19295 ;; Hardware stack levels used:    1
 19296 ;; This function calls:
 19297 ;;		Nothing
 19298 ;; This function is called by:
 19299 ;;		_control_LED
 19300 ;;		_FSM
 19301 ;; This function uses a non-reentrant model
 19302 ;;
 19303                           
 19304                           	psect	text77
 19305  00632E                     __ptext77:
 19306                           	opt stack 0
 19307  00632E                     _led_on:
 19308                           	opt stack 17
 19309                           
 19310                           ;main.c: 112: LATB = 0x01;
 19311                           
 19312                           ;incstack = 0
 19313                           ;incstack = 0
 19314  00632E  0E01               	movlw	1
 19315  006330  6E8A               	movwf	3978,c	;volatile
 19316  006332  0012               	return	
 19317  006334                     __end_of_led_on:
 19318                           	opt stack 0
 19319                           pclatu	equ	0xFFB
 19320                           pclath	equ	0xFFA
 19321                           tblptru	equ	0xFF8
 19322                           tblptrh	equ	0xFF7
 19323                           tblptrl	equ	0xFF6
 19324                           tablat	equ	0xFF5
 19325                           prodh	equ	0xFF4
 19326                           prodl	equ	0xFF3
 19327                           intcon	equ	0xFF2
 19328                           intcon2	equ	0xFF1
 19329                           postinc0	equ	0xFEE
 19330                           fsr0h	equ	0xFEA
 19331                           fsr0l	equ	0xFE9
 19332                           wreg	equ	0xFE8
 19333                           fsr1h	equ	0xFE2
 19334                           fsr1l	equ	0xFE1
 19335                           bsr	equ	0xFE0
 19336                           indf2	equ	0xFDF
 19337                           postinc2	equ	0xFDE
 19338                           postdec2	equ	0xFDD
 19339                           fsr2h	equ	0xFDA
 19340                           fsr2l	equ	0xFD9
 19341                           status	equ	0xFD8
 19342                           
 19343 ;; *************** function _led_off *****************
 19344 ;; Defined at:
 19345 ;;		line 108 in file "main.c"
 19346 ;; Parameters:    Size  Location     Type
 19347 ;;		None
 19348 ;; Auto vars:     Size  Location     Type
 19349 ;;		None
 19350 ;; Return value:  Size  Location     Type
 19351 ;;		None               void
 19352 ;; Registers used:
 19353 ;;		wreg, status,2
 19354 ;; Tracked objects:
 19355 ;;		On entry : 0/0
 19356 ;;		On exit  : 0/0
 19357 ;;		Unchanged: 0/0
 19358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19359 ;;      Params:         0       0       0       0       0       0       0       0       0
 19360 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19361 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19362 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19363 ;;Total ram usage:        0 bytes
 19364 ;; Hardware stack levels used:    1
 19365 ;; This function calls:
 19366 ;;		Nothing
 19367 ;; This function is called by:
 19368 ;;		_control_LED
 19369 ;;		_FSM
 19370 ;; This function uses a non-reentrant model
 19371 ;;
 19372                           
 19373                           	psect	text78
 19374  006334                     __ptext78:
 19375                           	opt stack 0
 19376  006334                     _led_off:
 19377                           	opt stack 17
 19378                           
 19379                           ;main.c: 109: LATB = 0x00;
 19380                           
 19381                           ;incstack = 0
 19382                           ;incstack = 0
 19383  006334  0E00               	movlw	0
 19384  006336  6E8A               	movwf	3978,c	;volatile
 19385  006338  0012               	return	
 19386  00633A                     __end_of_led_off:
 19387                           	opt stack 0
 19388                           pclatu	equ	0xFFB
 19389                           pclath	equ	0xFFA
 19390                           tblptru	equ	0xFF8
 19391                           tblptrh	equ	0xFF7
 19392                           tblptrl	equ	0xFF6
 19393                           tablat	equ	0xFF5
 19394                           prodh	equ	0xFF4
 19395                           prodl	equ	0xFF3
 19396                           intcon	equ	0xFF2
 19397                           intcon2	equ	0xFF1
 19398                           postinc0	equ	0xFEE
 19399                           fsr0h	equ	0xFEA
 19400                           fsr0l	equ	0xFE9
 19401                           wreg	equ	0xFE8
 19402                           fsr1h	equ	0xFE2
 19403                           fsr1l	equ	0xFE1
 19404                           bsr	equ	0xFE0
 19405                           indf2	equ	0xFDF
 19406                           postinc2	equ	0xFDE
 19407                           postdec2	equ	0xFDD
 19408                           fsr2h	equ	0xFDA
 19409                           fsr2l	equ	0xFD9
 19410                           status	equ	0xFD8
 19411                           pclatu	equ	0xFFB
 19412                           pclath	equ	0xFFA
 19413                           tblptru	equ	0xFF8
 19414                           tblptrh	equ	0xFF7
 19415                           tblptrl	equ	0xFF6
 19416                           tablat	equ	0xFF5
 19417                           prodh	equ	0xFF4
 19418                           prodl	equ	0xFF3
 19419                           intcon	equ	0xFF2
 19420                           intcon2	equ	0xFF1
 19421                           postinc0	equ	0xFEE
 19422                           fsr0h	equ	0xFEA
 19423                           fsr0l	equ	0xFE9
 19424                           wreg	equ	0xFE8
 19425                           fsr1h	equ	0xFE2
 19426                           fsr1l	equ	0xFE1
 19427                           bsr	equ	0xFE0
 19428                           indf2	equ	0xFDF
 19429                           postinc2	equ	0xFDE
 19430                           postdec2	equ	0xFDD
 19431                           fsr2h	equ	0xFDA
 19432                           fsr2l	equ	0xFD9
 19433                           status	equ	0xFD8
 19434                           
 19435                           	psect	rparam
 19436  0000                     pclatu	equ	0xFFB
 19437                           pclath	equ	0xFFA
 19438                           tblptru	equ	0xFF8
 19439                           tblptrh	equ	0xFF7
 19440                           tblptrl	equ	0xFF6
 19441                           tablat	equ	0xFF5
 19442                           prodh	equ	0xFF4
 19443                           prodl	equ	0xFF3
 19444                           intcon	equ	0xFF2
 19445                           intcon2	equ	0xFF1
 19446                           postinc0	equ	0xFEE
 19447                           fsr0h	equ	0xFEA
 19448                           fsr0l	equ	0xFE9
 19449                           wreg	equ	0xFE8
 19450                           fsr1h	equ	0xFE2
 19451                           fsr1l	equ	0xFE1
 19452                           bsr	equ	0xFE0
 19453                           indf2	equ	0xFDF
 19454                           postinc2	equ	0xFDE
 19455                           postdec2	equ	0xFDD
 19456                           fsr2h	equ	0xFDA
 19457                           fsr2l	equ	0xFD9
 19458                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    118
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      79
    BANK0           160     82      82
    BANK1           256    129     166
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?___ftsub	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___asftsub	float  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?__tdiv_to_l_	unsigned long  size(2) Largest target is 0

    ?__div_to_l_	unsigned long  size(2) Largest target is 0

    ?___asftadd	float  size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 0

    ?_scale	float  size(2) Largest target is 0

    ?_fround	float  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awmod	int  size(2) Largest target is 0

    ?_Read_LDR	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?_Obtener_Distancia	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 4
		 -> USART_Init@baud_rate(BANK1[4]), 

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___altoft	float  size(2) Largest target is 0

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK1[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[10]), STR_2(CODE[18]), STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S552$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupcaoLOW in COMRAM

    _interrupcaoLOW->i1_Read_LDR
    i1_sprintf->i1_fround
    i1_sprintf->i1_scale
    i1___lltoft->i1___ftpack
    i1___llmod->i1___lldiv
    i1___fttol->i1___wmul
    i1___asftsub->i1___ftsub
    i1___ftsub->i1___ftadd
    i1___asftmul->i1___ftmul
    i1___asftadd->i1_fround
    i1___ftadd->i1___ftpack
    i1_scale->i1___ftmul
    i1___wmul->i1___awdiv
    i1___awdiv->i1___awmod
    i1_fround->i1___ftmul
    i1_Read_LDR->i1___ftmul
    i1___ftmul->i1___fttol
    i1___ftdiv->i1___ftmul
    i1___awtoft->i1___ftpack
    i1_Obtener_Distancia->i1___lwdiv
    i1_lcd_putc->i1_lcd_write_char
    i1_lcd_write_char->i1_Lcd_Port
    i1_lcd_gotoxy->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _interrupcaoHIGH->_control_LED

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcaoLOW in BANK0

    _interrupcaoLOW->i1_sprintf
    i1_sprintf->i1___asftadd
    i1___asftadd->i1_fround
    i1_Read_LDR->i1___ftdiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___asftsub
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___asftadd->___ftadd
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    _Read_LDR->___ftdiv
    ___awtoft->___ftpack
    ___ftmul->___wmul
    _Obtener_Distancia->___lwdiv
    _USART_Init->___ftadd
    ___fttol->_scale
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___altoft->___ftpack
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_init->_Lcd_Cmd
    _lcd_gotoxy->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcaoLOW in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcaoLOW in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcaoLOW in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcaoLOW in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcaoLOW in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcaoLOW in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcaoLOW in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24656
                                            127 BANK1      2     2      0
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
            _Configuracion_Registros
                        _Timer1_Init
                            _Init_AD
                         _USART_Init
                 _inicioInterrupcoes
                  _Obtener_Distancia
                           _Read_LDR
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    43      7   17881
                                             81 BANK1     46    39      7
                             _fround
                              _scale
                            _isdigit
                        __tdiv_to_l_
                         __div_to_l_
                          ___asftadd
                          ___asftmul
                            ___ftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     232
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4     414
                                              8 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     159
                                             14 BANK1     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     241
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      65
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     198
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___asftsub                                            5     0      5    1695
                                             76 BANK1      5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    1602
                                             70 BANK1      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5     893
                                             39 BANK1      5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___asftadd                                            5     0      5    1630
                                             70 BANK1      5     0      5
                             _fround (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          13     7      6     758
                                              0 BANK1     13     7      6
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17    11      6     454
                                              0 BANK1     17    11      6
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     2      1      99
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _scale                                               15    12      3    2617
                                             39 BANK1     12     9      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _fround                                              18    15      3    2338
                                             39 BANK1     15    12      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     242
                                             16 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     433
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     445
                                              7 BANK1      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Read_LDR                                            10     7      3    2048
                                             56 BANK1     10     7      3
                            ___ftdiv
                            ___ftmul
                           ___awtoft
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             5     2      3     445
                                              8 BANK1      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             17    11      6     800
                                             22 BANK1     17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Obtener_Distancia                                    8     6      2     414
                                              8 BANK1      8     6      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     241
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _inicioInterrupcoes                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     7      0    3105
                                             70 BANK1      7     7      0
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     252
                                             51 BANK1     15    11      4
                              _scale (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             17    11      6     732
                                             39 BANK1     17    11      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             14     8      6    1537
                                             56 BANK1     14     8      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4     516
                                              8 BANK1     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     312
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_AD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion_Registros                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             4     2      2     384
                                              4 BANK1      4     2      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       3     2      1     254
                                              1 BANK1      3     2      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     279
                                              3 BANK1      1     1      0
                           _Lcd_Port
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           5     3      2     545
                                              3 BANK1      5     3      2
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     1      1     155
                                              1 BANK1      2     1      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     0      1     124
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupcaoLOW                                      19    19      0   50280
                                             63 BANK0     19    19      0
                       i1_lcd_gotoxy
                         i1_lcd_putc
                i1_Obtener_Distancia
                         i1_Read_LDR
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (7) i1_sprintf                                           53    46      7   42519
                                             17 BANK0     46    39      7
                           i1_fround
                            i1_scale
                        i1___asftadd
                        i1___asftmul
                        i1___asftsub
                          i1___awdiv
                       i1__div_to_l_
                      i1__tdiv_to_l_
                           i1___ftge
                          i1___ftmul
                          i1___ftneg
                          i1___fttol
                          i1_isdigit
                          i1___lldiv
                          i1___llmod
                         i1___lltoft
                          i1___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___lwmod                                            6     2      4     521
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i1___lltoft                                           9     5      4     904
                                             24 COMRAM     9     5      4
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1___llmod                                           10     2      8     521
                                             30 COMRAM    10     2      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___lldiv                                           14     6      8     527
                                             16 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (8) i1_isdigit                                            3     2      1     223
                                             16 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (8) i1___fttol                                           15    11      4     823
                                             38 COMRAM    15    11      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___ftneg                                            3     0      3     148
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (8) i1___ftge                                             9     3      6     446
                                             16 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) i1__tdiv_to_l_                                       17    11      6     983
                                             16 COMRAM    17    11      6
 ---------------------------------------------------------------------------------
 (8) i1__div_to_l_                                        13     7      6    1409
                                             16 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (8) i1___asftsub                                          5     0      5    3799
                                             44 COMRAM     5     0      5
                          i1___ftsub
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___ftsub                                            6     0      6    3580
                                             38 COMRAM     6     0      6
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (8) i1___asftmul                                          5     0      5    2001
                                              0 BANK0      5     0      5
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (8) i1___asftadd                                          5     0      5    3651
                                             12 BANK0      5     0      5
                           i1_fround (ARG)
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (10) i1___ftadd                                          14     8      6    3432
                                             24 COMRAM    14     8      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1_scale                                             21    18      3    6161
                                             70 COMRAM     3     0      3
                                              0 BANK0      9     9      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                          i1___fttol (ARG)
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4     517
                                             32 COMRAM     6     2      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     969
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            9     5      4     977
                                             23 COMRAM     9     5      4
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i1_fround                                            27    24      3    5369
                                             70 COMRAM     3     0      3
                                              0 BANK0     12    12      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) i1_Read_LDR                                          10     7      3    4720
                                             70 COMRAM     3     0      3
                                             17 BANK0      7     7      0
                         i1___awtoft
                          i1___ftdiv
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (8) i1___ftmul                                           17    11      6    1737
                                             53 COMRAM    17    11      6
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack
                          i1___fttol (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___ftdiv                                           17    11      6    1815
                                              0 BANK0     17    11      6
                         i1___ftpack
                          i1___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___ftpack                                           8     3      5     679
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) i1___awtoft                                           5     2      3     977
                                             24 COMRAM     5     2      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) i1_Obtener_Distancia                                  8     6      2     904
                                             24 COMRAM     8     6      2
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            8     4      4     527
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1_lcd_putc                                           4     2      2     884
                                             20 COMRAM     4     2      2
                   i1_lcd_write_char
 ---------------------------------------------------------------------------------
 (8) i1_lcd_write_char                                     3     2      1     588
                                             17 COMRAM     3     2      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_lcd_gotoxy                                         5     3      2    1253
                                             19 COMRAM     5     3      2
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Cmd                                            2     1      1     365
                                             17 COMRAM     2     1      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (9) i1_Lcd_Port                                           1     0      1     292
                                             16 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _interrupcaoHIGH                                    15    15      0      45
                                              1 COMRAM    15    15      0
                        _control_LED
 ---------------------------------------------------------------------------------
 (13) _control_LED                                         1     0      1      30
                                              0 COMRAM     1     0      1
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (14) _led_on                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _led_off                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _Lcd_Cmd
       _Lcd_Port
   _lcd_init
     _Lcd_Port
     _Lcd_Cmd
       _Lcd_Port
   _lcd_putc
     _lcd_write_char
       _Lcd_Port
   _Configuracion_Registros
   _Timer1_Init
   _Init_AD
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fttol
       _scale (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _inicioInterrupcoes
   _Obtener_Distancia
     ___lwdiv
   _Read_LDR
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___awtoft
       ___ftpack
   _sprintf
     _fround
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     __tdiv_to_l_
     __div_to_l_
     ___asftadd
       _fround (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___asftmul
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___asftsub
       ___ftsub
         ___ftadd
           ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___awdiv
       ___awmod (ARG)
     ___ftge
     ___ftneg
     ___fttol
       _scale (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___lwmod
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)

 _interrupcaoLOW (ROOT)
   i1_lcd_gotoxy
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_lcd_putc
     i1_lcd_write_char
       i1_Lcd_Port
   i1_Obtener_Distancia
     i1___lwdiv
   i1_Read_LDR
     i1___awtoft
       i1___ftpack
     i1___ftdiv
       i1___ftpack
       i1___ftmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
     i1___ftmul
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)
       i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
   i1_sprintf
     i1_fround
       i1___awdiv
         i1___awmod (ARG)
       i1___awmod
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1_scale
       i1___awdiv
         i1___awmod (ARG)
       i1___awmod
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___fttol (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1___asftadd
       i1_fround (ARG)
         i1___awdiv
           i1___awmod (ARG)
         i1___awmod
         i1___ftmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___ftadd (ARG)
         i1___ftpack
     i1___asftmul
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
     i1___asftsub
       i1___ftsub
         i1___ftadd
           i1___ftpack
       i1___lltoft (ARG)
         i1___ftpack
     i1___awdiv
       i1___awmod (ARG)
     i1__div_to_l_
     i1__tdiv_to_l_
     i1___ftge
     i1___ftmul
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)
       i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1___ftneg
     i1___fttol
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)
       i1___ftpack (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1_isdigit
     i1___lldiv
     i1___llmod
       i1___lldiv (ARG)
     i1___lltoft
       i1___ftpack
     i1___lwmod
     i1___wmul
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     81      A6       7       64.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      52       5       51.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      4F       1       83.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      1D       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     147      20        0.0%
DATA                 0      0     164       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Jun 10 01:01:46 2022

              _inicioInterrupcoes 62E0                      ___asftadd@f2 0148  
                    ___altoft@exp 0110                        i1___awtoft 5E5C  
                      i1___ftpack 5382                     ___asftadd@f1p 0146  
          __end_of_interrupcaoLOW 0172                       i1___asftadd 605E  
           __size_ofi1__div_to_l_ 00F4                     ___altoft@sign 0111  
                      i1___lltoft 5C52         __end_of_Obtener_Distancia 54E8  
                              _GO 007E11                       i1___asftmul 6022  
                     i1___asftsub 5FE6                      ___awdiv@sign 010D  
                              bsr 000FE0               ___wmul@multiplicand 0112  
                     __CFG_BORV$3 000000                  i1___wmul@product 0025  
                    ___asftmul@f2 0129           __end_of_interrupcaoHIGH 5A18  
                    __CFG_CP0$OFF 000000                      ___asftsub@f2 014E  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                      ___ftadd@exp1 0145  
                    ___ftadd@exp2 0144               ?_inicioInterrupcoes 0001  
                    ___ftadd@sign 0143                               l101 60E0  
                             l102 60E2                               l103 60EE  
                             l104 60F0                               l105 60FC  
                             l121 5886                               l106 60FE  
                             l210 544C                               l107 610A  
                             l109 610C                               l214 54C8  
                             l207 5446                               l223 4C92  
                             l253 2A26                               l325 10FC  
                             l710 3292                               l711 3530  
                             l632 3D82                               l641 3D72  
                             l714 32D4                               l634 3C5C  
                             l716 330E                               l725 3420  
                             l734 3458                               l742 4116  
                             l750 39C0                               l744 4078  
                             l673 45B8                               l745 40DA  
                             l753 391C                               l907 5634  
                             l917 5908                               l774 3BAE  
                             l838 4C1A                               l759 39B0  
                             l768 4E20                               l784 60C6  
                             l848 5370                      i1___ftadd@f1 0019  
                             l794 445E                      i1___ftadd@f2 001C  
                    __CFG_CPB$OFF 000000                               _RD2 007C1A  
                             _RD3 007C1B                               _RD4 007C1C  
                             _RD5 007C1D                               _RD6 007C1E  
                             _RD7 007C1F                      __CFG_CPD$OFF 000000  
                    i1___ftge@ff1 0011                      i1___ftge@ff2 0014  
                    __CFG_BOR$OFF 000000                      i1___ftdiv@f1 0060  
                    i1___ftdiv@f2 0063                      i1___ftdiv@f3 006D  
                    ___awmod@sign 0106        i1Obtener_Distancia@Timer_1 001B  
                    i1___ftneg@f1 0011                               wreg 000FE8  
                    i1___awtoft@c 0019                      __CFG_FOSC$HS 000000  
                   ___asftmul@f1p 0127                       _sprintf$563 0161  
                    i1___ftmul@f1 0036                      i1___ftmul@f2 0039  
                      i1_lcd_putc 61B8                     ___asftsub@f1p 014C  
                     lcd_gotoxy@a 0103                       lcd_gotoxy@b 0104  
                    i1___ftsub@f1 0027                      i1___ftsub@f2 002A  
                    i1___fttol@f1 0027                       lcd_gotoxy@y 0106  
                     lcd_gotoxy@z 0105                      ?_control_LED 0001  
                    __CFG_LVP$OFF 000000                      ___ftdiv@cntr 0132  
                    ___ftdiv@sign 0137                      __CFG_WDT$OFF 000000  
                    i1___lltoft@c 0019                              _ADIE 007CEE  
                            _ADIP 007CFE                              l8523 5354  
                            l8515 52CE                              l8517 52E8  
                            l8471 43DC                              l8519 52F0  
                            l8481 4424                              l8449 4324  
                            l8467 43BE                              _ADON 007E10  
                            l8485 444E                              l8477 4402  
                            l8479 441C                              STR_1 0888  
                            STR_2 0876                              STR_3 0888  
                            STR_4 0876                              l9985 5840  
                            _GIEH 007F97                              _GIEL 007F96  
                            _LATB 000F8A                              _IPEN 007E87  
                            _RCIE 007CED                              _RCIF 007CF5  
                            _RCIP 007CFD                              u6830 430C  
                            u6850 4350                              u6835 4302  
                            u6855 4346                              u6880 43E6  
                            u9620 3972                              u9550 37DE  
                            u9800 3212                              u9810 324E  
                            u9570 3822                              u9555 37D4  
                            u9805 3208                              u9815 3244  
                            u9575 3818                              u8874 4C60  
                            u9690 3D34                              u8875 4C5A  
                            u8884 4C82                              u8885 4C7C  
                            u8990 0BA4                              u8975 0B28  
                            _TMR1 000FCE                              u8995 0B98  
                 lcd_write_char@a 0101                   lcd_write_char@y 0103  
          __end_of_lcd_write_char 5E16        Obtener_Distancia@Distancia 010C  
            ??_inicioInterrupcoes 0100                 i1___lldiv@divisor 0015  
                            _main 4A18                      ___ftpack@arg 0100  
                    ___ftpack@exp 0103                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
               i1___lldiv@counter 001E                              pclat 000FFA  
                   i1___ftdiv@exp 006C                              prodh 000FF4  
                            prodl 000FF3                              start 0172  
                    i1__div_to_l_ 4E22                     __CFG_IESO$OFF 000000  
                 __end_ofi1_scale 2E78                      _sprintf$1204 015E  
                 __end_of_Lcd_Cmd 62A6                     __CFG_MCLRE$ON 000000  
                    ___ftmul@cntr 0125                      ___ftmul@sign 0126  
                   i1___ftmul@exp 0041                   __end_of_Init_AD 6308  
                    ___fttol@exp1 0141                      ___fttol@lval 013D  
                 ?_interrupcaoLOW 0001                    i1___asftadd@f2 006E  
                   __CFG_PLLDIV$1 000000           i1___ftmul@f3_as_product 0042  
                  __CFG_CCP2MX$ON 000000                             l10121 54AC  
                           l10043 5BFE                             l11005 4E1E  
                           l11021 4B78                             l10301 0F8E  
                           l10047 5C2E                             l11031 4BFE  
                           l11023 4B80                             l10303 0FA4  
                           l10231 0CA0                             l10223 0C28  
                           l10207 0B50                             l10151 08EE  
                           l10143 08AA                             l10401 1394  
                           l10161 093C                             l10065 4A30  
                           l11051 55C0                             l11019 4B5E  
                           l10251 0DA0                             l10235 0CD4  
                           l10155 08FC                             l11053 55D2  
                           l10501 318A                             l11037 5650  
                           l10421 1484                             l10405 13C2  
                           l10333 10C2                             l10317 1004  
                           l10325 1094                             l10309 0FC2  
                           l10181 0A6A                             l10149 08D0  
                           l11063 5620                             l11055 55DA  
                           l11039 566A                             l11071 58A6  
                           l10423 1492                             l10415 143A  
                           l10351 118A                             l10327 10A4  
                           l10263 0E18                             l10247 0D6E  
                           l10239 0D12                             l10191 0AC4  
                           l10175 09F4                             l11073 58B8  
                           l10409 1402                             l10361 1272  
                           l10185 0A80                             l10169 09C0  
                           l10523 26FC                             l10611 39A8  
                           l10603 3968                             l11075 58C0  
                           l10427 14D6                             l10363 1282  
                           l10347 1138                             l10339 1100  
                           l10291 0F66                             l10283 0EDA  
                           l10371 12AE                             l10179 0A4C  
                           l10541 29F4                             l10517 25EE  
                           l10453 1582                             l10437 1522  
                           l10445 154E                             l10429 14E4  
                           l10381 1312                             l10269 0E7C  
                           l10197 0AE6                             l10189 0A88  
                           l10711 522E                             l10535 28DA  
                           l10527 270E                             l11079 58F4  
                           l10447 155A                             l10295 0F70  
                           l10287 0F3A                             l10713 5248  
                           l10553 5FDC                             l10609 398E  
                           l10625 3BDC                             l10465 1662  
                           l10369 12A0                             l10731 32A0  
                           l10563 37F6                             l10619 3BC6  
                           l10459 15B2                             l10387 1336  
                           l10467 1678                             l10805 3FF0  
                           l10493 305C                             l10645 3CDA  
                           l10469 169C                             l10743 3300  
                           l10583 38B6                             l10655 3D0C  
                           l10681 44DE                             l10673 447C  
                           l10761 33A6                             l10753 3358  
                           l10737 32E2                             l10921 476E  
                           l10913 4730                             l10569 383A  
                           l10665 3D50                             l10771 33FC  
                           l10763 33B6                             l10931 47BC  
                           l10923 4776                             l10907 4712  
                           l10667 3D6A                             l10659 3D2A  
                           l10693 456A                             l10685 450C  
                           l10677 4496                             l10773 3412  
                           l10765 33C4                             l10853 3A62  
                           l10687 453E                             l10679 44AC  
                           l10759 3390                             l10871 3AFE  
                           l10847 3A06                             l10919 475C  
                           l10935 47D0                             l10951 503C  
                           l10599 394A                             l10689 4554  
                           l10881 3B62                             l10961 5082  
                           l10699 45AC                             l10779 3490  
                           l10867 3AD2                             l10939 47E8  
                           l10963 508A                             l10971 50D2  
                           l10955 5052                             l10789 350C  
                           l10877 3B36                             l10799 3F94  
                           l10975 50EA                             l10967 50BE  
                           l10959 5070                             l10987 5B48  
                           l10995 4D78                             l10999 4DC2  
    __size_ofi1_Obtener_Distancia 007E                             ?_main 0001  
                  i1___awdiv@sign 001E             __size_ofi1_lcd_gotoxy 0056  
                 __end_of___awdiv 47F2                   __end_of___ftadd 3532  
                 __end_of___awmod 50F4                   __end_of___ftdiv 4118  
                 __end_of___ftneg 60D4                             u10010 3F7C  
                 __end_of___lldiv 4C2C                             u10030 3FC0  
                           u10015 3F72                             u10040 3FD6  
       __size_ofi1_lcd_write_char 003A                             u10035 3FB6  
                           u10060 39EE                             u10080 3A32  
                           u10065 39E4                             u10090 3A48  
                           u11107 543E                             u11117 5DF8  
                           u10085 3A28                   __end_of___ftmul 3BB0  
                           u11127 5E0C                             u11137 4812  
                           u11147 4838                   ___awdiv@divisor 0109  
                           u11157 485E                             u11167 6298  
                 __end_of___llmod 5382                   __end_of___ftsub 5F24  
                 __end_of___fttol 4460                   __end_of___lwdiv 563E  
                  i1___asftmul@f2 0062                             i1l101 61F6  
                           i1l102 61F8                             i1l103 6200  
                           i1l104 6202                             i1l105 620A  
                           i1l121 5DC2                             i1l106 620C  
                           i1l210 5A2A                             i1l107 6214  
                           i1l109 6216                             i1l214 5A7C  
                           i1l207 5A24                             i1l223 4F7C  
                           i1l253 2E76                             i1l325 1E96  
                 __end_of___lwmod 5912                             i1l194 012C  
                           i1l710 3DEC                             i1l711 3F4E  
                           i1l632 4F14                             i1l641 4F04  
                           i1l714 3E16                             i1l634 4E80  
                           i1l725 3EBA                             i1l742 42DE  
                           i1l734 3ED6                             i1l750 46DA  
                           i1l744 4240                             i2l185 62DE  
                           i1l673 5438                             i1l745 42A2  
                           i1l753 4678                             i1l907 5D64  
                           i2l197 59DE                             i1l917 5E52  
                           i2l198 59DE                             i1l774 4A16  
                           i1l838 5986                             i1l759 46CA  
                           i1l768 5768                             i1l784 6230  
                           i1l848 5BDC                             i1l794 51D2  
                 ___awdiv@counter 010C                             _RCREG 000FAE  
                           _RCSTA 000FAB                    i1___asftsub@f2 002F  
                           _SPBRG 000FAF                     __CFG_USBDIV$1 000000  
                  i1___ftadd@exp1 0026                    i1___ftadd@exp2 0025  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISD 000F95                    i1___ftadd@sign 0024  
                      i1isdigit@c 0011                     __CFG_PWRT$OFF 000000  
                     ?i1_Lcd_Port 0011                i1__tdiv_to_l_@exp1 0021  
              i1__tdiv_to_l_@cntr 0020                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                        i1scale@scl 0047  
                    ___lltoft@exp 0110                i1__tdiv_to_l_@quot 001C  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
              __size_ofi1_Lcd_Cmd 0020                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                i1___lwmod@dividend 0011  
                   __CFG_WRTC$OFF 000000                   __end_of_led_off 633A  
                   __CFG_WRTD$OFF 000000                    i1___awmod@sign 0017  
              i1___lldiv@dividend 0011                    __CFG_EBTRB$OFF 000000  
                   ___awtoft@sign 010C                   __end_of_dpowers 0828  
                           _scale 2414                   __end_of_isdigit 5FE6  
                     ?i1_Read_LDR 0047                     ___ftpack@sign 0104  
                __end_ofi1___ftge 576A                             tablat 000FF5  
                __end_ofi1___wmul 6148                    i1___ftdiv@cntr 006B  
            i1lcd_write_char@temp 0013                    i1___ftdiv@sign 0070  
                 ?_lcd_write_char 0101                             status 000FD8  
             i1___wmul@multiplier 0021                   __end_of_sprintf 16AA  
              __size_ofi1___awdiv 0090                __size_ofi1___ftadd 01CC  
              __size_ofi1___awmod 007C                  __end_ofi1_fround 37B2  
              __size_ofi1___ftdiv 01C8                __size_ofi1___ftneg 0026  
              __size_ofi1___lldiv 0086                    __CFG_ICPRT$OFF 000000  
          __size_ofi1__tdiv_to_l_ 0122                __size_ofi1___ftmul 0110  
              __size_ofi1___llmod 006A                __size_ofi1___ftsub 0036  
              __size_ofi1___fttol 00E0                __size_ofi1___lwdiv 0056  
              __size_ofi1___lwmod 0046                    __CFG_PBADEN$ON 000000  
                  i1___ftpack@arg 0011                    i1___ftpack@exp 0014  
                     ?_USART_Init 0001                  __end_of_Lcd_Port 610E  
                 __initialization 6262                      i1_lcd_gotoxy 5D6E  
                    __end_of_main 4B22                    i1_sprintf$1829 007E  
                     ?i1___awtoft 0019                       ?i1___ftpack 0011  
                  i1___ftmul@cntr 0045                __size_ofi1_isdigit 0024  
                  i1___ftmul@sign 0046                i1___lldiv@quotient 001A  
                __end_of_Read_LDR 4D2E                       ?i1___lltoft 0019  
      __size_of_Obtener_Distancia 00AE                       i1lcd_putc@a 0015  
                     i1lcd_putc@i 0017                        i1sprintf@c 009E  
                      i1sprintf@f 0073                    i1___fttol@exp1 0035  
                  i1___fttol@lval 0031                  ?_interrupcaoHIGH 0001  
                          ??_main 017F                     ___fttol@sign1 013C  
              __size_ofi1_sprintf 0D6A                     __activetblptr 000002  
                 i1___asftadd@f1p 006C              __size_of__tdiv_to_l_ 0210  
                    i1_scale$1828 0066                       ?i1_lcd_putc 0015  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                    i1___lltoft@exp 0021  
                __end_of___altoft 52AC                  ___llmod@dividend 010E  
                          ?_scale 0127                            _ADRESH 000FC4  
                          _ADRESL 000FC3                  ___awdiv@dividend 0107  
                __end_of___awtoft 5B84                  __end_of___ftpack 45BA  
                __end_of___lltoft 56DA                 i1___llmod@divisor 0023  
                 i1___asftmul@f1p 0060                            i1l9101 57B8  
                          i1l9111 57D8                            i1l9103 57BC  
                          i1l9115 57E2                            i1l9131 5AB2  
                          i1l9203 4EB0                            i1l9141 5AD8  
                          i1l9301 3E86                            i1l9213 4ECC  
                          i1l9231 5392                            i1l9119 57F0  
                          i1l9143 5ADC                            i1l9151 5AFA  
                          i1l9135 5ABE                            i1l9311 3EB4  
                          i1l9303 3E8C                            i1l9223 4EF4  
                          i1l9225 4F00                            i1l9217 4EDC  
                          i1l9401 4650                            i1l9243 53DE  
                          i1l9235 53A0                            i1l9155 5B08  
                          i1l9147 5AF0                            i1l9139 5AD0  
                          i1l9245 53FC                            i1l9237 53AA  
                          i1l9093 5796                            i1l9317 3EF2  
                          i1l9309 3EAA                            i1l9421 46A2  
                          i1l9167 5E78                            i1l9247 5406  
                          i1l9239 53C8                            i1l9087 5786  
                          i1l9327 3F2A                            i1l9183 4E3A  
                          i1l8609 5D98                            i1l8641 61DA  
                          i1l9177 4E2E                            i1l9417 4692  
                          i1l9513 5120                            i1l9099 57B0  
                          i1l9291 3E56                            i1l9275 3E24  
                          i1l9427 46BA                            i1l9435 570A  
                          i1l9531 5174                            i1l8637 61C2  
                          i1l9621 5D3A                            i1l8653 5A6C  
                          i1l9461 496C                            i1l9269 3DFA  
                          i1l9429 46C6                            i1l9381 45E6  
                          i1l9445 5766                            i1l9541 519C  
                          i1l9605 5C5C                            i1l9631 5D5A  
                          i1l9623 5D3E                            i1l9455 4934  
                          i1l9439 573A                            i1l9543 51A8  
                          i1l9535 5184                            i1l9607 5C68  
                          i2l7073 59C6                            i1l9297 3E74  
                          i1l9545 51AC                            i1l9561 625A  
                          i1l9641 5E30                            i2l7075 59CE  
                          i1l9619 5D32                            i1l9475 49A2  
                          i1l9299 3E7E                            i1l9387 4612  
                          i1l9571 5938                            i1l9643 5E34  
                       ??i1_scale 0060                            i2l7069 62D4  
                          i2l7077 59D2                            i1l9485 49CE  
                          i1l9549 51C2                            i1l9573 5944  
                          i2l7079 59DA                            i1l9479 49B2  
                          i1l9583 5978                            i1l9575 5948  
                          i1l9591 5B9A                            i1l9647 5E48  
                          i1l9639 5E28                            i1l9489 49DE  
                          i1l9593 5BA6                            i1l9595 5BAA  
                          i1l9599 5BCE                 i1___llmod@counter 0028  
                 i1___asftsub@f1p 002D                         ??_Lcd_Cmd 0102  
                          _TMR0IE 007F95                            _TMR0IP 007F8A  
                          _TMR1ON 007E68                            _TRISA0 007C90  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
                   i1sprintf@_val 008E                     i1sprintf@flag 0093  
                   i1sprintf@fval 0099                         ??_Init_AD 0100  
                   i1sprintf@prec 009C                     ??_Timer1_Init 0100  
                  __CFG_XINST$OFF 000000                  __end_of__powers_ 0876  
             __size_ofi1_Lcd_Port 002A                 __end_ofi1_Lcd_Cmd 62C6  
                __end_of_lcd_init 4908                  __end_of_lcd_putc 5C52  
                          ___ftge 4D2E                            ___wmul 5CB6  
                       ??___awdiv 010B                         ??___ftadd 013E  
                  __CFG_STVREN$ON 000000                         ??___awmod 0104  
                       ??___ftdiv 012D                         ??___ftneg 0103  
                       ??___lldiv 0108                         ??___ftmul 011C  
                       ??___llmod 0116                         ??___ftsub 014C  
                       ??___fttol 0137                         ??___lwdiv 0104  
                       ??___lwmod 0104                            _led_on 632E  
             __size_ofi1_Read_LDR 00F0                            _fround 2E78  
                          clear_0 6268                  ___awdiv@quotient 010E  
                 ___awmod@divisor 0102                   ___awmod@counter 0105  
                       ??_led_off 0001                     i1__tdiv_to_l_ 45BA  
           ___ftmul@f3_as_product 0122                 __end_ofi1___awdiv 57FA  
               __end_ofi1___ftadd 3F50                 __end_ofi1___awmod 5B12  
               __end_ofi1___ftdiv 42E0                 __end_ofi1___ftneg 623E  
               __end_ofi1___lldiv 5998                 __end_ofi1___ftmul 4A18  
               __end_ofi1___llmod 5BEE                 __end_ofi1___ftsub 61B8  
               __end_ofi1___fttol 51D4                 __end_ofi1___lwdiv 5D6E  
               __end_ofi1___lwmod 5E5C                         ??_isdigit 0101  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
             __size_of_USART_Init 00AC                         ??_sprintf 0158  
               __end_ofi1_isdigit 6262                __size_of___asftadd 0042  
             __size_ofi1___awtoft 0044               __size_ofi1___ftpack 00B8  
    i1Obtener_Distancia@Distancia 001D                __size_of___asftmul 0042  
              __size_of___asftsub 0042              __size_of_control_LED 001A  
             __size_ofi1___lltoft 0064          ?_Configuracion_Registros 0001  
                      __accesstop 0060           __end_of__initialization 627A  
                      ___altoft@c 0108                   i1___awtoft@sign 001D  
                      ___ftadd@f1 0138                        ___ftadd@f2 013B  
                      ___ftge@ff1 0100                        ___ftge@ff2 0103  
                 i1___ftpack@sign 0015                 __end_ofi1_sprintf 2414  
                      ___ftdiv@f1 0127                        ___ftdiv@f2 012A  
                      ___ftdiv@f3 0133                        ___ftneg@f1 0100  
                      ___awtoft@c 0108                        ___ftmul@f1 0116  
                      ___ftmul@f2 0119                        ___ftsub@f1 0146  
                      ___ftsub@f2 0149                        ___fttol@f1 0133  
                  __pcstackCOMRAM 0001    interrupcaoHIGH@esp_server_data 0010  
             __size_ofi1_lcd_putc 0036                        ___lltoft@c 0108  
                    ?i1___asftadd 006C                     __end_of_scale 2A28  
                    ?i1___asftmul 0060                      ?i1___asftsub 002D  
             __end_of_Timer1_Init 631C            Read_LDR@analog_reading 013F  
                  ?i1__tdiv_to_l_ 0011                         ?i1___ftge 0011  
                       ?i1___wmul 0021                  i1_lcd_write_char 6148  
                  lcd_gotoxy@temp 0107                        __div_to_l_ 3BB0  
                       ?i1_fround 0047                       i1sprintf@ap 0089  
                     i1sprintf@vd 0085                       i1sprintf@sp 0071  
                 i1___fttol@sign1 0030                         ?_Lcd_Port 0100  
                 __div_to_l_@exp1 010C                   __div_to_l_@cntr 010B  
                    sprintf@integ 016B                           ??_scale 012A  
                 __div_to_l_@quot 0107                      sprintf@width 0177  
                      __pbssBANK1 0181                         ?_Read_LDR 0138  
             i1_Obtener_Distancia 5A18                     __div_to_l_@f1 0100  
                   __div_to_l_@f2 0103                  ??_interrupcaoLOW 009F  
                         ?___ftge 0100                           ?___wmul 0110  
                         ?_led_on 0001                         ?___altoft 0108  
               __end_of___asftadd 5FA8                           ?_fround 0127  
               __end_of___asftmul 5F66                 __end_of___asftsub 5EE2  
                       ?___awtoft 0108                         ?___ftpack 0100  
            ?i1_Obtener_Distancia 0019                        ??i1___ftge 0017  
                       ?___lltoft 0108                        ??i1___wmul 0025  
                   i1_fround$1826 0069                     i1_fround$1827 0066  
              i1___llmod@dividend 001F                     i1_isdigit$838 0013  
                         i1l11201 185C                           i1l11211 18B6  
                         i1l11117 3766                           i1l11109 368E  
                         i1l11133 2B72                           i1l11205 1872  
                         i1l11151 2D80                           i1l11143 2C3C  
                         i1l11311 1D12                           i1l11303 1C86  
              i1___awdiv@dividend 0018                           i1l11401 2092  
                         i1l11321 1D3A                           i1l11217 18D8  
                         i1l11209 187A                           i1l11139 2C2E  
                         i1l11323 1D50                           i1l11315 1D1C  
                         i1l11307 1CE6                           i1l11251 1A6E  
                         i1l11243 1A06                           i1l11227 1942  
                         i1l11171 1704                           i1l11163 16C0  
                         i1l11157 2E48                           i1l11421 2114  
                         i1l11181 1750                           i1l11503 415C  
                         i1l11407 20B6                           i1l11271 1B52  
                         i1l11255 1A96                           i1l11175 1712  
                         i1l11441 2204                           i1l11425 2142  
                         i1l11353 1E5C                           i1l11337 1DB0  
                         i1l11345 1E2E                           i1l11329 1D6E  
                         i1l11169 16E6                           i1l10481 0100  
                         i1l10473 005C                           i1l11443 2212  
                         i1l11435 21BA                           i1l11371 1F24  
                         i1l11347 1E3E                           i1l11283 1BCA  
                         i1l11267 1B2C                           i1l11259 1AD4  
                         i1l11195 17FC                           i1l10475 0094  
                         i1l11509 41B8                           i1l11429 2182  
                         i1l11381 1FF2                           i1l11189 17C8  
                         i1l10477 00C4                           i1l11447 2256  
                         i1l11383 2002                           i1l11367 1ED2  
                         i1l11359 1E9A                           i1l11391 202E  
                         i1l11199 1840                           i1l10479 00D4  
                         i1l11473 2302                           i1l11457 22A2  
                         i1l11465 22CE                           i1l11449 2264  
                         i1l11289 1C28                           i1l11467 22DA  
                         i1l11485 23CC                           i1l11389 2020  
                         i1l11479 2332                           i1l11487 23E2  
                         i1l11489 2406                      ??i1_Lcd_Port 0012  
                      ??i1_fround 0060                        _lcd_gotoxy 57FA  
 __end_of_Configuracion_Registros 632E                  ??_lcd_write_char 0102  
                      ??_Lcd_Port 0101                      ??i1_Read_LDR 0071  
                       ?_lcd_init 0001                         ?_lcd_putc 0104  
                  i1sprintf@integ 008B                           i1_scale 2A28  
                      ??_Read_LDR 013B                    i1sprintf@width 0097  
                 __CFG_VREGEN$OFF 000000                lcd_write_char@temp 0102  
                         _Lcd_Cmd 6284       __size_of_inicioInterrupcoes 0014  
                         _Init_AD 62F4                      i1fround@prec 0047  
                    ??_USART_Init 0146                 __end_of__npowers_ 084F  
                         __Hparam 0000                        _scale$1203 0130  
                     _Timer1_Init 6308                           __Lparam 0000  
              i1___awdiv@quotient 001F                __end_ofi1_Lcd_Port 6218  
                 __size_of___ftge 00F4                      ??i1___awtoft 001C  
                    ??i1___ftpack 0016                           ___awdiv 46DC  
                         ___ftadd 31E6                           ___awmod 5006  
                         ___ftdiv 3F50                           ___ftneg 609A  
                         ___lldiv 4B22                   __size_of___wmul 0062  
                         ___ftmul 39C2                           ___llmod 52AC  
                         ___ftsub 5EE2                           ___fttol 42E0  
                    ??i1___lltoft 001D                           ___lwdiv 5594  
                         ___lwmod 5888                   ??i1__tdiv_to_l_ 0017  
                    __psmallconst 0800                        ??___altoft 010C  
                 __size_of_led_on 0006             ??i1_Obtener_Distancia 001B  
                         __pcinit 6262                        ??___awtoft 010B  
                      ??___ftpack 0105                __end_ofi1_Read_LDR 5006  
                 __size_of_fround 036E                           __ramtop 0800  
                      ??___lltoft 010C                           __ptext0 4A18  
                         __ptext1 0894                           __ptext2 5888  
                         __ptext3 563E                           __ptext4 52AC  
                         __ptext5 4B22                           __ptext6 609A  
                         __ptext7 4D2E                           __ptext8 5EA0  
                         __ptext9 5EE2                           _led_off 6334  
                       _T1CONbits 000FCD                       ?__div_to_l_ 0100  
                  USART_Init@temp 014A                           _dpowers 0800  
               i1___lwdiv@divisor 0013                           _isdigit 5FA8  
               i1___lwdiv@counter 0016                  ___awmod@dividend 0100  
                    ??i1_lcd_putc 0017                __end_of_USART_Init 5594  
                         _sprintf 0894                        ??_lcd_init 0103  
                  __pintcode_body 5998                        ??_lcd_putc 0106  
            end_of_initialization 627A                __end_ofi1___awtoft 5EA0  
              __end_ofi1___ftpack 543A                         i1u1040_24 4F6C  
                       i1u1040_25 4F66                         i1u1120_27 62B8  
                       i1u1105_20 4144                         i1u1105_25 413A  
                       i1u1107_20 4188                         i1u1107_25 417E  
                       i1u1108_20 419E                         i1u1117_27 5A1C  
              __end_ofi1___lltoft 5CB6                         i1u1118_27 6164  
                       i1u1039_24 4F4A                         i1u1039_25 4F44  
                       i1u1119_27 6178                         i1u1056_25 191A  
                       i1u1058_20 1996                     __Lmediumconst 0000  
                       i1u1058_25 198A                           int_func 5998  
                 ___lldiv@divisor 0104                   ___lldiv@counter 010D  
                       _LDR_value 0181                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                 i1__div_to_l_@f1 0011                   i1__div_to_l_@f2 0014  
                       Lcd_Port@a 0100                __end_ofi1_lcd_putc 61EE  
                  __tdiv_to_l_@f1 0100                    __tdiv_to_l_@f2 0103  
           i1___wmul@multiplicand 0023                         i1_Lcd_Cmd 62A6  
                   ??__tdiv_to_l_ 0106                         _PORTAbits 000F80  
            __size_ofi1___asftadd 003C              __size_ofi1___asftmul 003C  
            __size_ofi1___asftsub 003C                       ?_lcd_gotoxy 0103  
                       i1___awdiv 576A                         i1___ftadd 3D84  
                       i1___awmod 5A96                         i1___ftdiv 4118  
                       i1___ftneg 6218                         i1___lldiv 5912  
                       i1___ftmul 4908                         i1___llmod 5B84  
                       i1___ftsub 6182                         i1___fttol 50F4  
        __size_of_interrupcaoHIGH 5A10                         i1___lwdiv 5D18  
                       i1___lwmod 5E16               USART_Init@baud_rate 0146  
                     ___ftdiv@exp 0136          __end_ofi1_lcd_write_char 6182  
                       i1_isdigit 623E               __size_of__div_to_l_ 01D4  
       Obtener_Distancia@Duracion 010E                       ___ftmul@exp 0121  
                       i1_sprintf 16AA  __size_of_Configuracion_Registros 0012  
                  __end_of___ftge 4E22                    __end_of___wmul 5D18  
                      ?i1_Lcd_Cmd 0012                         _Distancia 0184  
                  __end_of_led_on 6334                 i1___lwmod@divisor 0013  
                  __end_of_fround 31E6                 i1___lwmod@counter 0016  
               __size_ofi1___ftge 0090               start_initialization 6262  
               __size_ofi1___wmul 003A               __end_of__tdiv_to_l_ 39C2  
                  _theresMovement 004E                        ?i1___awdiv 0018  
                      ?i1___ftadd 0019                     i1_sprintf$563 0081  
                      ?i1___awmod 0011                        ?i1___ftdiv 0060  
                   ??_control_LED 0002                        ?i1___ftneg 0011  
                      ?i1___lldiv 0011                        ?i1___ftmul 0036  
                      ?i1___llmod 001F                        ?i1___ftsub 0027  
                      ?i1___fttol 0027                 __size_ofi1_fround 0280  
                      ?i1___lwdiv 0011                        ?i1___lwmod 0011  
                   i1lcd_gotoxy@a 0014                     i1lcd_gotoxy@b 0015  
                   i1lcd_gotoxy@y 0017                     i1lcd_gotoxy@z 0016  
               __size_of_Lcd_Port 003A                  i1lcd_gotoxy@temp 0018  
                 ___llmod@divisor 0112                        ?i1_isdigit 0011  
                 ___llmod@counter 0117                     ?i1__div_to_l_ 0011  
               __size_of_Read_LDR 0102                      i1sprintf@exp 0095  
                      ?i1_sprintf 0071                          ??___ftge 0106  
             __size_of_lcd_gotoxy 008E                          ??___wmul 0114  
                   sprintf@vd_565 0167                          ??_led_on 0001  
              i1___awmod@dividend 0011                  __CFG_LPT1OSC$OFF 000000  
                        ??_fround 012A                 __size_of___altoft 00D8  
                      fround@prec 0127                 __size_of___awtoft 0072  
               __size_of___ftpack 015A                         ___asftadd 5F66  
                       ___asftmul 5F24                         ___asftsub 5EA0  
               __size_of___lltoft 009C                       __pbssCOMRAM 004A  
     i1Obtener_Distancia@Duracion 001F                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100               __end_of__stringdata 0892  
               i1lcd_write_char@a 0012                 i1lcd_write_char@y 0014  
                        ?i1_scale 0047                          ?_Lcd_Cmd 0101  
               __size_of_lcd_init 0116                       sprintf@_val 016E  
                     sprintf@flag 0173                 __size_of_lcd_putc 0064  
                     sprintf@fval 0179                       sprintf@prec 017C  
                  ??i1__div_to_l_ 0017               __end_of_control_LED 62E0  
               ??_interrupcaoHIGH 0002                          ?_Init_AD 0001  
                    ?_Timer1_Init 0001                  ___lwdiv@dividend 0100  
                   ?i1_lcd_gotoxy 0014                         __pintcode 0008  
                        ?___awdiv 0107                          ?___ftadd 0138  
                        ?___awmod 0100                          ?___ftdiv 0127  
                        ?___ftneg 0100                          ?___lldiv 0100  
                        ?___ftmul 0116                          ?___llmod 010E  
                        ?___ftsub 0146                         __npowers_ 0828  
                        ?___fttol 0133                          ?___lwdiv 0100  
                        ?___lwmod 0100                       ??i1_Lcd_Cmd 0013  
               i1___awdiv@divisor 001A                       __pintcodelo 0018  
               i1___awdiv@counter 001D                       __tdiv_to_l_ 37B2  
                        ?_led_off 0001                      ??__div_to_l_ 0106  
                     __smallconst 0800                        ?___asftadd 0146  
                        ?_isdigit 0100                        ?___asftmul 0127  
                      ?___asftsub 014C                       ??i1___awdiv 001C  
                     ??i1___ftadd 001F                       ??i1___awmod 0015  
                     ??i1___ftdiv 0066                       ??i1___ftneg 0014  
                     ??i1___lldiv 0019                       ??i1___ftmul 003C  
                     ??i1___llmod 0027                       ??i1___ftsub 002D  
                     ??i1___fttol 002B                  ___lwdiv@quotient 0106  
                     ??i1___lwdiv 0015                       ??i1___lwmod 0015  
                        ?_sprintf 0151                    __size_of_scale 0614  
      __end_of_inicioInterrupcoes 62F4                    ___wmul@product 0114  
                        _LATAbits 000F89                       ??i1_isdigit 0012  
                  ??i1_lcd_gotoxy 0016                       _contControl 004A  
                        Lcd_Cmd@a 0101                          i1u808_20 3DA2  
                        i1u808_25 3D9A                          i1u809_20 3DC8  
                        i1u841_20 46A8                          i1u809_25 3DC0  
                        i1u834_20 45D8                __end_of__div_to_l_ 3D84  
                        i1u834_25 45D0                          i1u836_20 4604  
                        i1u836_25 45FC                          i1u853_20 5112  
                        i1u853_25 510A                          i1u846_20 4926  
                        i1u846_25 491E                          i1u855_20 513E  
                        i1u855_25 5136                          i1u848_20 4952  
                        i1u848_25 494A                          i1u849_20 495E  
                        i2u529_40 59CE                          i2u529_41 59CC  
                        i1u858_20 518A       __end_ofi1_Obtener_Distancia 5A96  
                        i1u799_20 4EE2                       ??i1_sprintf 0078  
                __CFG_WDTPS$32768 000000           _Configuracion_Registros 631C  
           __end_ofi1__tdiv_to_l_ 46DC                          i1___ftge 56DA  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                     __stringdata 0876           __size_of_interrupcaoLOW 015A  
               ___wmul@multiplier 0110                          i1___wmul 610E  
                 i1sprintf@vd_565 0087                          i1_fround 3532  
                       lcd_putc@a 0104                         lcd_putc@i 0106  
                    ??_lcd_gotoxy 0105                          _Lcd_Port 60D4  
                i1__tdiv_to_l_@f1 0011                       _control_LED 62C6  
                i1__tdiv_to_l_@f2 0014                          _Read_LDR 4C2C  
                __size_ofi1_scale 0450                  __size_of_Lcd_Cmd 0022  
               ?i1_lcd_write_char 0012           __size_of_lcd_write_char 0052  
                __size_of_Init_AD 0014                          __Hrparam 0000  
              ??i1_lcd_write_char 0013                          __Lrparam 0000  
               i1___awmod@divisor 0013                     ??i1___asftadd 004A  
              __end_of_lcd_gotoxy 5888                   control_LED@data 0001  
                   ??i1___asftmul 0047                     ??i1___asftsub 0032  
               i1___awmod@counter 0016                  __size_of___awdiv 0116  
                __size_of___ftadd 034C                  __size_of___awmod 00EE  
                __size_of___ftdiv 01C8                  __size_of___ftneg 003A  
                __size_of___lldiv 010A                          ___altoft 51D4  
                __size_of___ftmul 01EE                  __size_of___llmod 00D6  
                __size_of___ftsub 0042                  __size_of___fttol 0180  
                __size_of___lwdiv 00AA                  __size_of___lwmod 008A  
                        ___awtoft 5B12                          ___ftpack 4460  
                     _fround$1201 0133                       _fround$1202 0130  
                        ___lltoft 563E                       _isdigit$838 0102  
            __end_ofi1__div_to_l_ 4F16                       ??___asftadd 014B  
                __size_of_led_off 0006                        sprintf@exp 0175  
                     ??___asftmul 012C                       ??___asftsub 0151  
                __size_of_isdigit 003E                   ___lwdiv@divisor 0102  
                 ___lwdiv@counter 0105                          __ptext10 5F24  
                        __ptext11 5F66                          __ptext20 4C2C  
                        __ptext12 3BB0                          __ptext21 5B12  
                        __ptext13 37B2                          __ptext30 51D4  
                        __ptext22 39C2                          __ptext14 5FA8  
                        __ptext31 4460                          __ptext23 543A  
                        __ptext15 2414                          __ptext40 60D4  
                        __ptext32 62F4                          __ptext24 5594  
                        __ptext16 2E78                          __ptext33 6308  
                        __ptext25 62E0                          __ptext17 5CB6  
                        __ptext50 56DA                          __ptext42 16AA  
                        __ptext34 631C                          __ptext26 54E8  
                        __ptext18 5006                          __ptext51 45BA  
                        __ptext43 5E16                          __ptext35 5BEE  
                        __ptext27 42E0                          __ptext19 46DC  
                        __ptext60 5A96                          __ptext52 4E22  
                        __ptext44 5C52                          __ptext36 5DC4  
                        __ptext28 3F50                          __ptext61 576A  
                        __ptext53 5FE6                          __ptext45 5B84  
                        __ptext37 47F2                          __ptext29 31E6  
                        __ptext70 61B8                          __ptext62 3532  
                        __ptext54 6182                          __ptext46 5912  
                        __ptext38 57FA                          __ptext71 6148  
                        __ptext63 4F16                          __ptext55 6022  
                        __ptext47 623E                          __ptext39 6284  
                        __ptext72 5D6E                          __ptext64 4908  
                        __ptext56 605E                          __ptext48 50F4  
                        __ptext73 62A6                          __ptext65 4118  
                        __ptext57 3D84                          __ptext49 6218  
                        __ptext74 61EE                          __ptext66 5382  
                        __ptext58 2A28                          __ptext67 5E5C  
                        __ptext59 610E                          __ptext76 62C6  
                        __ptext68 5A18                          __ptext77 632E  
                        __ptext69 5D18                          __ptext78 6334  
                        _isBright 004C                          __powers_ 084F  
                        _lcd_init 47F2                          _lcd_putc 5BEE  
                __size_of_sprintf 0E16                i1___lwdiv@dividend 0011  
                   __size_of_main 010A                       i1Lcd_Port@a 0011  
       ??_Configuracion_Registros 0100                        _LCD_Buffer 0186  
            __size_of_Timer1_Init 0014             __CFG_CPUDIV$OSC1_PLL2 000000  
              i1___lwdiv@quotient 0017               __end_ofi1___asftadd 609A  
             __end_ofi1___asftmul 605E               __end_ofi1___asftsub 6022  
               i1__div_to_l_@exp1 001D                 i1__div_to_l_@cntr 001C  
               i1__div_to_l_@quot 0018                   _interrupcaoHIGH 0008  
            __end_ofi1_lcd_gotoxy 5DC4                          isdigit@c 0100  
                        scale@scl 0127                          intlevel1 0000  
                        intlevel2 0000                         sprintf@ap 0169  
                __tdiv_to_l_@exp1 0110                         sprintf@vd 0165  
                       sprintf@sp 0151                  __tdiv_to_l_@cntr 010F  
                __tdiv_to_l_@quot 010B                  ___lwmod@dividend 0100  
                ___lldiv@dividend 0100                        i1Lcd_Cmd@a 0012  
                    ?__tdiv_to_l_ 0100                    _interrupcaoLOW 0018  
               _Obtener_Distancia 543A                          sprintf@c 017E  
                        sprintf@f 0153                  ___lldiv@quotient 0109  
                 ___lwmod@divisor 0102                ?_Obtener_Distancia 0108  
                 ___lwmod@counter 0105                        i1_Lcd_Port 61EE  
                      i1_Read_LDR 4F16               ??_Obtener_Distancia 010A  
        Obtener_Distancia@Timer_1 010A                    _lcd_write_char 5DC4  
                      _USART_Init 54E8          i1Read_LDR@analog_reading 0075  
