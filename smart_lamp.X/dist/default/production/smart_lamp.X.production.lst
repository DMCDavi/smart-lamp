

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Jun 10 01:19:15 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	text80,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    96  0000                     
    97                           	psect	smallconst
    98  000800                     __psmallconst:
    99                           	opt stack 0
   100  000800                     _dpowers:
   101                           	opt stack 0
   102  000800  0001               	dw	1
   103  000802  0000               	dw	0
   104  000804  000A               	dw	10
   105  000806  0000               	dw	0
   106  000808  0064               	dw	100
   107  00080A  0000               	dw	0
   108  00080C  03E8               	dw	1000
   109  00080E  0000               	dw	0
   110  000810  2710               	dw	10000
   111  000812  0000               	dw	0
   112  000814  86A0               	dw	34464
   113  000816  0001               	dw	1
   114  000818  4240               	dw	16960
   115  00081A  000F               	dw	15
   116  00081C  9680               	dw	38528
   117  00081E  0098               	dw	152
   118  000820  E100               	dw	57600
   119  000822  05F5               	dw	1525
   120  000824  CA00               	dw	51712
   121  000826  3B9A               	dw	15258
   122  000828                     __end_of_dpowers:
   123                           	opt stack 0
   124  000828                     __npowers_:
   125                           	opt stack 0
   126  000828  00                 	db	0
   127  000829  80                 	db	128
   128  00082A  3F                 	db	63
   129  00082B  CD                 	db	205
   130  00082C  CC                 	db	204
   131  00082D  3D                 	db	61
   132  00082E  D7                 	db	215
   133  00082F  23                 	db	35
   134  000830  3C                 	db	60
   135  000831  12                 	db	18
   136  000832  83                 	db	131
   137  000833  3A                 	db	58
   138  000834  B7                 	db	183
   139  000835  D1                 	db	209
   140  000836  38                 	db	56
   141  000837  C6                 	db	198
   142  000838  27                 	db	39
   143  000839  37                 	db	55
   144  00083A  38                 	db	56
   145  00083B  86                 	db	134
   146  00083C  35                 	db	53
   147  00083D  C0                 	db	192
   148  00083E  D6                 	db	214
   149  00083F  33                 	db	51
   150  000840  CC                 	db	204
   151  000841  2B                 	db	43
   152  000842  32                 	db	50
   153  000843  70                 	db	112
   154  000844  89                 	db	137
   155  000845  30                 	db	48
   156  000846  E7                 	db	231
   157  000847  DB                 	db	219
   158  000848  2E                 	db	46
   159  000849  E5                 	db	229
   160  00084A  3C                 	db	60
   161  00084B  1E                 	db	30
   162  00084C  42                 	db	66
   163  00084D  A2                 	db	162
   164  00084E  0D                 	db	13
   165  00084F                     __end_of__npowers_:
   166                           	opt stack 0
   167  00084F                     __powers_:
   168                           	opt stack 0
   169  00084F  00                 	db	0
   170  000850  80                 	db	128
   171  000851  3F                 	db	63
   172  000852  00                 	db	0
   173  000853  20                 	db	32
   174  000854  41                 	db	65
   175  000855  00                 	db	0
   176  000856  C8                 	db	200
   177  000857  42                 	db	66
   178  000858  00                 	db	0
   179  000859  7A                 	db	122
   180  00085A  44                 	db	68
   181  00085B  40                 	db	64
   182  00085C  1C                 	db	28
   183  00085D  46                 	db	70
   184  00085E  50                 	db	80
   185  00085F  C3                 	db	195
   186  000860  47                 	db	71
   187  000861  24                 	db	36
   188  000862  74                 	db	116
   189  000863  49                 	db	73
   190  000864  97                 	db	151
   191  000865  18                 	db	24
   192  000866  4B                 	db	75
   193  000867  BC                 	db	188
   194  000868  BE                 	db	190
   195  000869  4C                 	db	76
   196  00086A  6B                 	db	107
   197  00086B  6E                 	db	110
   198  00086C  4E                 	db	78
   199  00086D  03                 	db	3
   200  00086E  15                 	db	21
   201  00086F  50                 	db	80
   202  000870  79                 	db	121
   203  000871  AD                 	db	173
   204  000872  60                 	db	96
   205  000873  F3                 	db	243
   206  000874  49                 	db	73
   207  000875  71                 	db	113
   208  000876                     __end_of__powers_:
   209                           	opt stack 0
   210  0000                     _TMR1	set	4046
   211  0000                     _ADCON0	set	4034
   212  0000                     _ADCON0bits	set	4034
   213  0000                     _ADCON1	set	4033
   214  0000                     _ADCON1bits	set	4033
   215  0000                     _ADCON2	set	4032
   216  0000                     _ADRESH	set	4036
   217  0000                     _ADRESL	set	4035
   218  0000                     _LATAbits	set	3977
   219  0000                     _LATB	set	3978
   220  0000                     _PORTAbits	set	3968
   221  0000                     _RCREG	set	4014
   222  0000                     _RCSTA	set	4011
   223  0000                     _SPBRG	set	4015
   224  0000                     _T1CONbits	set	4045
   225  0000                     _TRISA	set	3986
   226  0000                     _TRISB	set	3987
   227  0000                     _TRISD	set	3989
   228  0000                     _ADIE	set	31982
   229  0000                     _ADIP	set	31998
   230  0000                     _ADON	set	32272
   231  0000                     _GIEH	set	32663
   232  0000                     _GIEL	set	32662
   233  0000                     _GO	set	32273
   234  0000                     _IPEN	set	32391
   235  0000                     _RCIE	set	31981
   236  0000                     _RCIF	set	31989
   237  0000                     _RCIP	set	31997
   238  0000                     _RD2	set	31770
   239  0000                     _RD3	set	31771
   240  0000                     _RD4	set	31772
   241  0000                     _RD5	set	31773
   242  0000                     _RD6	set	31774
   243  0000                     _RD7	set	31775
   244  0000                     _TMR0IE	set	32661
   245  0000                     _TMR0IP	set	32650
   246  0000                     _TMR1ON	set	32360
   247  0000                     _TRISA0	set	31888
   248  0000                     _TRISC6	set	31910
   249  0000                     _TRISC7	set	31911
   250  000876                     __stringdata:
   251                           	opt stack 0
   252  000876                     STR_2:
   253  000876  44                 	db	68	;'D'
   254  000877  69                 	db	105	;'i'
   255  000878  73                 	db	115	;'s'
   256  000879  74                 	db	116	;'t'
   257  00087A  61                 	db	97	;'a'
   258  00087B  6E                 	db	110	;'n'
   259  00087C  63                 	db	99	;'c'
   260  00087D  69                 	db	105	;'i'
   261  00087E  61                 	db	97	;'a'
   262  00087F  3A                 	db	58	;':'
   263  000880  20                 	db	32
   264  000881  25                 	db	37
   265  000882  30                 	db	48	;'0'
   266  000883  33                 	db	51	;'3'
   267  000884  64                 	db	100	;'d'
   268  000885  63                 	db	99	;'c'
   269  000886  6D                 	db	109	;'m'
   270  000887  00                 	db	0
   271  000888                     STR_1:
   272  000888  4C                 	db	76	;'L'
   273  000889  44                 	db	68	;'D'
   274  00088A  52                 	db	82	;'R'
   275  00088B  3A                 	db	58	;':'
   276  00088C  20                 	db	32
   277  00088D  25                 	db	37
   278  00088E  2E                 	db	46
   279  00088F  32                 	db	50	;'2'
   280  000890  66                 	db	102	;'f'
   281  000891  00                 	db	0
   282  000892                     __end_of__stringdata:
   283                           	opt stack 0
   284                           
   285                           ; #config settings
   286  000892  00                 	db	0	; dummy byte at the end
   287  0000                     
   288                           	psect	cinit
   289  00631C                     __pcinit:
   290                           	opt stack 0
   291  00631C                     start_initialization:
   292                           	opt stack 0
   293  00631C                     __initialization:
   294                           	opt stack 0
   295                           
   296                           ; Clear objects allocated to BANK1 (37 bytes)
   297  00631C  EE01  F081         	lfsr	0,__pbssBANK1
   298  006320  0E25               	movlw	37
   299  006322                     clear_0:
   300  006322  6AEE               	clrf	postinc0,c
   301  006324  06E8               	decf	wreg,f,c
   302  006326  E1FD               	bnz	clear_0
   303                           
   304                           ; Clear objects allocated to COMRAM (6 bytes)
   305  006328  6A4F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   306  00632A  6A4E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   307  00632C  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   308  00632E  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   309  006330  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   310  006332  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   311  006334                     end_of_initialization:
   312                           	opt stack 0
   313  006334                     __end_of__initialization:
   314                           	opt stack 0
   315  006334  0E00               	movlw	low (__Lmediumconst shr (0+16))
   316  006336  6EF8               	movwf	tblptru,c
   317  006338  0100               	movlb	0
   318  00633A  EFC0  F031         	goto	_main	;jump to C main() function
   319                           tblptru	equ	0xFF8
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           
   323                           	psect	bssCOMRAM
   324  00004A                     __pbssCOMRAM:
   325                           	opt stack 0
   326  00004A                     _contControl:
   327                           	opt stack 0
   328  00004A                     	ds	2
   329  00004C                     _isBright:
   330                           	opt stack 0
   331  00004C                     	ds	2
   332  00004E                     _theresMovement:
   333                           	opt stack 0
   334  00004E                     	ds	2
   335                           tblptru	equ	0xFF8
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           
   339                           	psect	bssBANK1
   340  000181                     __pbssBANK1:
   341                           	opt stack 0
   342  000181                     _LDR_value:
   343                           	opt stack 0
   344  000181                     	ds	3
   345  000184                     _Distancia:
   346                           	opt stack 0
   347  000184                     	ds	2
   348  000186                     _LCD_Buffer:
   349                           	opt stack 0
   350  000186                     	ds	32
   351                           tblptru	equ	0xFF8
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           
   355                           	psect	cstackBANK1
   356  000100                     __pcstackBANK1:
   357                           	opt stack 0
   358  000100                     ?_isdigit:
   359                           	opt stack 0
   360  000100                     ?_Lcd_Port:
   361                           	opt stack 0
   362  000100                     ?___ftge:
   363                           	opt stack 0
   364  000100                     ?___awmod:
   365                           	opt stack 0
   366  000100                     ?___lwdiv:
   367                           	opt stack 0
   368  000100                     ?___lwmod:
   369                           	opt stack 0
   370  000100                     ?___ftpack:
   371                           	opt stack 0
   372  000100                     ?___ftneg:
   373                           	opt stack 0
   374  000100                     ?__tdiv_to_l_:
   375                           	opt stack 0
   376  000100                     ?__div_to_l_:
   377                           	opt stack 0
   378  000100                     ?___lldiv:
   379                           	opt stack 0
   380  000100                     Lcd_Port@a:
   381                           	opt stack 0
   382  000100                     isdigit@c:
   383                           	opt stack 0
   384  000100                     ___awmod@dividend:
   385                           	opt stack 0
   386  000100                     ___lwdiv@dividend:
   387                           	opt stack 0
   388  000100                     ___lwmod@dividend:
   389                           	opt stack 0
   390  000100                     __div_to_l_@f1:
   391                           	opt stack 0
   392  000100                     ___ftpack@arg:
   393                           	opt stack 0
   394  000100                     __tdiv_to_l_@f1:
   395                           	opt stack 0
   396  000100                     ___ftge@ff1:
   397                           	opt stack 0
   398  000100                     ___ftneg@f1:
   399                           	opt stack 0
   400  000100                     ___lldiv@dividend:
   401                           	opt stack 0
   402                           
   403                           ; 4 bytes @ 0x0
   404  000100                     	ds	1
   405  000101                     ??_isdigit:
   406  000101                     ?_Lcd_Cmd:
   407                           	opt stack 0
   408  000101                     ?_lcd_write_char:
   409                           	opt stack 0
   410  000101                     Lcd_Cmd@a:
   411                           	opt stack 0
   412  000101                     lcd_write_char@a:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x1
   416  000101                     	ds	1
   417  000102                     ??_Lcd_Cmd:
   418  000102                     lcd_write_char@temp:
   419                           	opt stack 0
   420  000102                     _isdigit$841:
   421                           	opt stack 0
   422  000102                     ___awmod@divisor:
   423                           	opt stack 0
   424  000102                     ___lwdiv@divisor:
   425                           	opt stack 0
   426  000102                     ___lwmod@divisor:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430  000102                     	ds	1
   431  000103                     ?_lcd_gotoxy:
   432                           	opt stack 0
   433  000103                     ??_lcd_init:
   434  000103                     lcd_gotoxy@a:
   435                           	opt stack 0
   436  000103                     lcd_write_char@y:
   437                           	opt stack 0
   438  000103                     ___ftpack@exp:
   439                           	opt stack 0
   440  000103                     __div_to_l_@f2:
   441                           	opt stack 0
   442  000103                     __tdiv_to_l_@f2:
   443                           	opt stack 0
   444  000103                     ___ftge@ff2:
   445                           	opt stack 0
   446                           
   447                           ; 3 bytes @ 0x3
   448  000103                     	ds	1
   449  000104                     ?_lcd_putc:
   450                           	opt stack 0
   451  000104                     ??___awmod:
   452  000104                     ??___lwdiv:
   453  000104                     ??___lwmod:
   454  000104                     lcd_gotoxy@b:
   455                           	opt stack 0
   456  000104                     ___ftpack@sign:
   457                           	opt stack 0
   458  000104                     lcd_putc@a:
   459                           	opt stack 0
   460  000104                     ___lldiv@divisor:
   461                           	opt stack 0
   462                           
   463                           ; 4 bytes @ 0x4
   464  000104                     	ds	1
   465  000105                     ??___ftpack:
   466  000105                     lcd_gotoxy@z:
   467                           	opt stack 0
   468  000105                     ___awmod@counter:
   469                           	opt stack 0
   470  000105                     ___lwdiv@counter:
   471                           	opt stack 0
   472  000105                     ___lwmod@counter:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x5
   476  000105                     	ds	1
   477  000106                     ??__tdiv_to_l_:
   478  000106                     ??__div_to_l_:
   479  000106                     ??___ftge:
   480  000106                     lcd_gotoxy@y:
   481                           	opt stack 0
   482  000106                     ___awmod@sign:
   483                           	opt stack 0
   484  000106                     lcd_putc@i:
   485                           	opt stack 0
   486  000106                     ___lwdiv@quotient:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x6
   490  000106                     	ds	1
   491  000107                     ?___awdiv:
   492                           	opt stack 0
   493  000107                     lcd_gotoxy@temp:
   494                           	opt stack 0
   495  000107                     ___awdiv@dividend:
   496                           	opt stack 0
   497  000107                     __div_to_l_@quot:
   498                           	opt stack 0
   499                           
   500                           ; 4 bytes @ 0x7
   501  000107                     	ds	1
   502  000108                     ??___lldiv:
   503  000108                     ?_Obtener_Distancia:
   504                           	opt stack 0
   505  000108                     ?___altoft:
   506                           	opt stack 0
   507  000108                     ?___awtoft:
   508                           	opt stack 0
   509  000108                     ?___lltoft:
   510                           	opt stack 0
   511  000108                     ___awtoft@c:
   512                           	opt stack 0
   513  000108                     ___altoft@c:
   514                           	opt stack 0
   515  000108                     ___lltoft@c:
   516                           	opt stack 0
   517                           
   518                           ; 4 bytes @ 0x8
   519  000108                     	ds	1
   520  000109                     ___awdiv@divisor:
   521                           	opt stack 0
   522  000109                     ___lldiv@quotient:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x9
   526  000109                     	ds	1
   527  00010A                     Obtener_Distancia@Timer_1:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0xA
   531  00010A                     	ds	1
   532  00010B                     ??___awdiv:
   533  00010B                     ??___awtoft:
   534  00010B                     __div_to_l_@cntr:
   535                           	opt stack 0
   536  00010B                     __tdiv_to_l_@quot:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0xB
   540  00010B                     	ds	1
   541  00010C                     ??___altoft:
   542  00010C                     ??___lltoft:
   543  00010C                     ___awdiv@counter:
   544                           	opt stack 0
   545  00010C                     ___awtoft@sign:
   546                           	opt stack 0
   547  00010C                     __div_to_l_@exp1:
   548                           	opt stack 0
   549  00010C                     Obtener_Distancia@Distancia:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0xC
   553  00010C                     	ds	1
   554  00010D                     ___awdiv@sign:
   555                           	opt stack 0
   556  00010D                     ___lldiv@counter:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0xD
   560  00010D                     	ds	1
   561  00010E                     ?___llmod:
   562                           	opt stack 0
   563  00010E                     Obtener_Distancia@Duracion:
   564                           	opt stack 0
   565  00010E                     ___awdiv@quotient:
   566                           	opt stack 0
   567  00010E                     ___llmod@dividend:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0xE
   571  00010E                     	ds	1
   572  00010F                     __tdiv_to_l_@cntr:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0xF
   576  00010F                     	ds	1
   577  000110                     ?___wmul:
   578                           	opt stack 0
   579  000110                     ___altoft@exp:
   580                           	opt stack 0
   581  000110                     __tdiv_to_l_@exp1:
   582                           	opt stack 0
   583  000110                     ___lltoft@exp:
   584                           	opt stack 0
   585  000110                     ___wmul@multiplier:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x10
   589  000110                     	ds	1
   590  000111                     ___altoft@sign:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x11
   594  000111                     	ds	1
   595  000112                     ___wmul@multiplicand:
   596                           	opt stack 0
   597  000112                     ___llmod@divisor:
   598                           	opt stack 0
   599                           
   600                           ; 4 bytes @ 0x12
   601  000112                     	ds	2
   602  000114                     ___wmul@product:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x14
   606  000114                     	ds	2
   607  000116                     ??___llmod:
   608  000116                     ?___ftmul:
   609                           	opt stack 0
   610  000116                     ___ftmul@f1:
   611                           	opt stack 0
   612                           
   613                           ; 3 bytes @ 0x16
   614  000116                     	ds	1
   615  000117                     ___llmod@counter:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x17
   619  000117                     	ds	2
   620  000119                     ___ftmul@f2:
   621                           	opt stack 0
   622                           
   623                           ; 3 bytes @ 0x19
   624  000119                     	ds	3
   625  00011C                     ??___ftmul:
   626                           
   627                           ; 0 bytes @ 0x1C
   628  00011C                     	ds	5
   629  000121                     ___ftmul@exp:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x21
   633  000121                     	ds	1
   634  000122                     ___ftmul@f3_as_product:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x22
   638  000122                     	ds	3
   639  000125                     ___ftmul@cntr:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0x25
   643  000125                     	ds	1
   644  000126                     ___ftmul@sign:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x26
   648  000126                     	ds	1
   649  000127                     ?___ftdiv:
   650                           	opt stack 0
   651  000127                     ?_fround:
   652                           	opt stack 0
   653  000127                     ?_scale:
   654                           	opt stack 0
   655  000127                     ?___asftmul:
   656                           	opt stack 0
   657  000127                     fround@prec:
   658                           	opt stack 0
   659  000127                     scale@scl:
   660                           	opt stack 0
   661  000127                     ___asftmul@f1p:
   662                           	opt stack 0
   663  000127                     ___ftdiv@f1:
   664                           	opt stack 0
   665                           
   666                           ; 3 bytes @ 0x27
   667  000127                     	ds	2
   668  000129                     ___asftmul@f2:
   669                           	opt stack 0
   670                           
   671                           ; 3 bytes @ 0x29
   672  000129                     	ds	1
   673  00012A                     ??_fround:
   674  00012A                     ??_scale:
   675  00012A                     ___ftdiv@f2:
   676                           	opt stack 0
   677                           
   678                           ; 3 bytes @ 0x2A
   679  00012A                     	ds	2
   680  00012C                     
   681                           ; 0 bytes @ 0x2C
   682  00012C                     	ds	1
   683  00012D                     ??___ftdiv:
   684                           
   685                           ; 0 bytes @ 0x2D
   686  00012D                     	ds	3
   687  000130                     _fround$1205:
   688                           	opt stack 0
   689  000130                     _scale$1206:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x30
   693  000130                     	ds	2
   694  000132                     ___ftdiv@cntr:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x32
   698  000132                     	ds	1
   699  000133                     ?___fttol:
   700                           	opt stack 0
   701  000133                     ___ftdiv@f3:
   702                           	opt stack 0
   703  000133                     ___fttol@f1:
   704                           	opt stack 0
   705  000133                     _fround$1204:
   706                           	opt stack 0
   707                           
   708                           ; 3 bytes @ 0x33
   709  000133                     	ds	3
   710  000136                     ___ftdiv@exp:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x36
   714  000136                     	ds	1
   715  000137                     ??___fttol:
   716  000137                     ___ftdiv@sign:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x37
   720  000137                     	ds	1
   721  000138                     ?_Read_LDR:
   722                           	opt stack 0
   723  000138                     ?___ftadd:
   724                           	opt stack 0
   725  000138                     ___ftadd@f1:
   726                           	opt stack 0
   727                           
   728                           ; 3 bytes @ 0x38
   729  000138                     	ds	3
   730  00013B                     ??_Read_LDR:
   731  00013B                     ___ftadd@f2:
   732                           	opt stack 0
   733                           
   734                           ; 3 bytes @ 0x3B
   735  00013B                     	ds	1
   736  00013C                     ___fttol@sign1:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x3C
   740  00013C                     	ds	1
   741  00013D                     ___fttol@lval:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x3D
   745  00013D                     	ds	1
   746  00013E                     ??___ftadd:
   747                           
   748                           ; 0 bytes @ 0x3E
   749  00013E                     	ds	1
   750  00013F                     Read_LDR@analog_reading:
   751                           	opt stack 0
   752                           
   753                           ; 3 bytes @ 0x3F
   754  00013F                     	ds	2
   755  000141                     ___fttol@exp1:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x41
   759  000141                     	ds	2
   760  000143                     ___ftadd@sign:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x43
   764  000143                     	ds	1
   765  000144                     ___ftadd@exp2:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x44
   769  000144                     	ds	1
   770  000145                     ___ftadd@exp1:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x45
   774  000145                     	ds	1
   775  000146                     ?___ftsub:
   776                           	opt stack 0
   777  000146                     ?___asftadd:
   778                           	opt stack 0
   779  000146                     ___asftadd@f1p:
   780                           	opt stack 0
   781  000146                     ___ftsub@f1:
   782                           	opt stack 0
   783  000146                     USART_Init@baud_rate:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x46
   787  000146                     	ds	2
   788  000148                     ___asftadd@f2:
   789                           	opt stack 0
   790                           
   791                           ; 3 bytes @ 0x48
   792  000148                     	ds	1
   793  000149                     ___ftsub@f2:
   794                           	opt stack 0
   795                           
   796                           ; 3 bytes @ 0x49
   797  000149                     	ds	1
   798  00014A                     USART_Init@temp:
   799                           	opt stack 0
   800                           
   801                           ; 3 bytes @ 0x4A
   802  00014A                     	ds	1
   803  00014B                     
   804                           ; 0 bytes @ 0x4B
   805  00014B                     	ds	1
   806  00014C                     ?___asftsub:
   807                           	opt stack 0
   808  00014C                     ___asftsub@f1p:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x4C
   812  00014C                     	ds	2
   813  00014E                     ___asftsub@f2:
   814                           	opt stack 0
   815                           
   816                           ; 3 bytes @ 0x4E
   817  00014E                     	ds	3
   818  000151                     ?_sprintf:
   819                           	opt stack 0
   820  000151                     sprintf@sp:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x51
   824  000151                     	ds	2
   825  000153                     sprintf@f:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x53
   829  000153                     	ds	5
   830  000158                     ??_sprintf:
   831                           
   832                           ; 0 bytes @ 0x58
   833  000158                     	ds	6
   834  00015E                     _sprintf$1207:
   835                           	opt stack 0
   836                           
   837                           ; 3 bytes @ 0x5E
   838  00015E                     	ds	3
   839  000161                     _sprintf$566:
   840                           	opt stack 0
   841                           
   842                           ; 4 bytes @ 0x61
   843  000161                     	ds	4
   844  000165                     sprintf@vd:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x65
   848  000165                     	ds	2
   849  000167                     sprintf@vd_568:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x67
   853  000167                     	ds	2
   854  000169                     sprintf@ap:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x69
   858  000169                     	ds	2
   859  00016B                     sprintf@integ:
   860                           	opt stack 0
   861                           
   862                           ; 3 bytes @ 0x6B
   863  00016B                     	ds	3
   864  00016E                     sprintf@_val:
   865                           	opt stack 0
   866                           
   867                           ; 5 bytes @ 0x6E
   868  00016E                     	ds	5
   869  000173                     sprintf@flag:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x73
   873  000173                     	ds	2
   874  000175                     sprintf@exp:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x75
   878  000175                     	ds	2
   879  000177                     sprintf@width:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x77
   883  000177                     	ds	2
   884  000179                     sprintf@fval:
   885                           	opt stack 0
   886                           
   887                           ; 3 bytes @ 0x79
   888  000179                     	ds	3
   889  00017C                     sprintf@prec:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x7C
   893  00017C                     	ds	2
   894  00017E                     sprintf@c:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0x7E
   898  00017E                     	ds	1
   899  00017F                     ??_mainLoop:
   900                           
   901                           ; 0 bytes @ 0x7F
   902  00017F                     	ds	2
   903  000181                     tblptru	equ	0xFF8
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           
   907                           ; 0 bytes @ 0x81
   908                           
   909                           	psect	cstackBANK0
   910  000060                     __pcstackBANK0:
   911                           	opt stack 0
   912  000060                     ??i1_fround:
   913  000060                     ??i1_scale:
   914  000060                     ?i1___asftmul:
   915                           	opt stack 0
   916  000060                     ?i1___ftdiv:
   917                           	opt stack 0
   918  000060                     i1___asftmul@f1p:
   919                           	opt stack 0
   920  000060                     i1___ftdiv@f1:
   921                           	opt stack 0
   922                           
   923                           ; 3 bytes @ 0x0
   924  000060                     	ds	2
   925  000062                     i1___asftmul@f2:
   926                           	opt stack 0
   927                           
   928                           ; 3 bytes @ 0x2
   929  000062                     	ds	1
   930  000063                     i1___ftdiv@f2:
   931                           	opt stack 0
   932                           
   933                           ; 3 bytes @ 0x3
   934  000063                     	ds	3
   935  000066                     ??i1___ftdiv:
   936  000066                     i1_fround$1834:
   937                           	opt stack 0
   938  000066                     i1_scale$1835:
   939                           	opt stack 0
   940                           
   941                           ; 3 bytes @ 0x6
   942  000066                     	ds	3
   943  000069                     i1_fround$1833:
   944                           	opt stack 0
   945                           
   946                           ; 3 bytes @ 0x9
   947  000069                     	ds	2
   948  00006B                     i1___ftdiv@cntr:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0xB
   952  00006B                     	ds	1
   953  00006C                     ?i1___asftadd:
   954                           	opt stack 0
   955  00006C                     i1___ftdiv@exp:
   956                           	opt stack 0
   957  00006C                     i1___asftadd@f1p:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0xC
   961  00006C                     	ds	1
   962  00006D                     i1___ftdiv@f3:
   963                           	opt stack 0
   964                           
   965                           ; 3 bytes @ 0xD
   966  00006D                     	ds	1
   967  00006E                     i1___asftadd@f2:
   968                           	opt stack 0
   969                           
   970                           ; 3 bytes @ 0xE
   971  00006E                     	ds	2
   972  000070                     i1___ftdiv@sign:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x10
   976  000070                     	ds	1
   977  000071                     ??i1_Read_LDR:
   978  000071                     ?i1_sprintf:
   979                           	opt stack 0
   980  000071                     i1sprintf@sp:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x11
   984  000071                     	ds	2
   985  000073                     i1sprintf@f:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x13
   989  000073                     	ds	2
   990  000075                     i1Read_LDR@analog_reading:
   991                           	opt stack 0
   992                           
   993                           ; 3 bytes @ 0x15
   994  000075                     	ds	3
   995  000078                     ??i1_sprintf:
   996                           
   997                           ; 0 bytes @ 0x18
   998  000078                     	ds	6
   999  00007E                     i1_sprintf$1836:
  1000                           	opt stack 0
  1001                           
  1002                           ; 3 bytes @ 0x1E
  1003  00007E                     	ds	3
  1004  000081                     i1_sprintf$566:
  1005                           	opt stack 0
  1006                           
  1007                           ; 4 bytes @ 0x21
  1008  000081                     	ds	4
  1009  000085                     i1sprintf@vd:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x25
  1013  000085                     	ds	2
  1014  000087                     i1sprintf@vd_568:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x27
  1018  000087                     	ds	2
  1019  000089                     i1sprintf@ap:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x29
  1023  000089                     	ds	2
  1024  00008B                     i1sprintf@integ:
  1025                           	opt stack 0
  1026                           
  1027                           ; 3 bytes @ 0x2B
  1028  00008B                     	ds	3
  1029  00008E                     i1sprintf@_val:
  1030                           	opt stack 0
  1031                           
  1032                           ; 5 bytes @ 0x2E
  1033  00008E                     	ds	5
  1034  000093                     i1sprintf@flag:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x33
  1038  000093                     	ds	2
  1039  000095                     i1sprintf@exp:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x35
  1043  000095                     	ds	2
  1044  000097                     i1sprintf@width:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0x37
  1048  000097                     	ds	2
  1049  000099                     i1sprintf@fval:
  1050                           	opt stack 0
  1051                           
  1052                           ; 3 bytes @ 0x39
  1053  000099                     	ds	3
  1054  00009C                     i1sprintf@prec:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x3C
  1058  00009C                     	ds	2
  1059  00009E                     i1sprintf@c:
  1060                           	opt stack 0
  1061                           
  1062                           ; 1 bytes @ 0x3E
  1063  00009E                     	ds	1
  1064  00009F                     ??i1_mainLoop:
  1065                           
  1066                           ; 0 bytes @ 0x3F
  1067  00009F                     	ds	2
  1068  0000A1                     ??_interrupcaoLOW:
  1069                           
  1070                           ; 0 bytes @ 0x41
  1071  0000A1                     	ds	17
  1072                           tblptru	equ	0xFF8
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           
  1076                           	psect	cstackCOMRAM
  1077  000001                     __pcstackCOMRAM:
  1078                           	opt stack 0
  1079  000001                     ?_control_LED:
  1080                           	opt stack 0
  1081  000001                     control_LED@data:
  1082                           	opt stack 0
  1083                           
  1084                           ; 1 bytes @ 0x0
  1085  000001                     	ds	1
  1086  000002                     ??_interrupcaoHIGH:
  1087                           
  1088                           ; 0 bytes @ 0x1
  1089  000002                     	ds	14
  1090  000010                     interrupcaoHIGH@esp_server_data:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0xF
  1094  000010                     	ds	1
  1095  000011                     ?i1_Lcd_Port:
  1096                           	opt stack 0
  1097  000011                     ?i1___ftge:
  1098                           	opt stack 0
  1099  000011                     ?i1_isdigit:
  1100                           	opt stack 0
  1101  000011                     ?i1___awmod:
  1102                           	opt stack 0
  1103  000011                     ?i1___lwdiv:
  1104                           	opt stack 0
  1105  000011                     ?i1___lwmod:
  1106                           	opt stack 0
  1107  000011                     ?i1___ftpack:
  1108                           	opt stack 0
  1109  000011                     ?i1___ftneg:
  1110                           	opt stack 0
  1111  000011                     ?i1__div_to_l_:
  1112                           	opt stack 0
  1113  000011                     ?i1__tdiv_to_l_:
  1114                           	opt stack 0
  1115  000011                     ?i1___lldiv:
  1116                           	opt stack 0
  1117  000011                     i1Lcd_Port@a:
  1118                           	opt stack 0
  1119  000011                     i1isdigit@c:
  1120                           	opt stack 0
  1121  000011                     i1___awmod@dividend:
  1122                           	opt stack 0
  1123  000011                     i1___lwdiv@dividend:
  1124                           	opt stack 0
  1125  000011                     i1___lwmod@dividend:
  1126                           	opt stack 0
  1127  000011                     i1__div_to_l_@f1:
  1128                           	opt stack 0
  1129  000011                     i1___ftpack@arg:
  1130                           	opt stack 0
  1131  000011                     i1__tdiv_to_l_@f1:
  1132                           	opt stack 0
  1133  000011                     i1___ftge@ff1:
  1134                           	opt stack 0
  1135  000011                     i1___ftneg@f1:
  1136                           	opt stack 0
  1137  000011                     i1___lldiv@dividend:
  1138                           	opt stack 0
  1139                           
  1140                           ; 4 bytes @ 0x10
  1141  000011                     	ds	1
  1142  000012                     ?i1_Lcd_Cmd:
  1143                           	opt stack 0
  1144  000012                     ?i1_lcd_write_char:
  1145                           	opt stack 0
  1146  000012                     ??i1_isdigit:
  1147  000012                     i1Lcd_Cmd@a:
  1148                           	opt stack 0
  1149  000012                     i1lcd_write_char@a:
  1150                           	opt stack 0
  1151                           
  1152                           ; 1 bytes @ 0x11
  1153  000012                     	ds	1
  1154  000013                     ??i1_Lcd_Cmd:
  1155  000013                     i1lcd_write_char@temp:
  1156                           	opt stack 0
  1157  000013                     i1_isdigit$841:
  1158                           	opt stack 0
  1159  000013                     i1___awmod@divisor:
  1160                           	opt stack 0
  1161  000013                     i1___lwdiv@divisor:
  1162                           	opt stack 0
  1163  000013                     i1___lwmod@divisor:
  1164                           	opt stack 0
  1165                           
  1166                           ; 2 bytes @ 0x12
  1167  000013                     	ds	1
  1168  000014                     ?i1_lcd_gotoxy:
  1169                           	opt stack 0
  1170  000014                     i1lcd_gotoxy@a:
  1171                           	opt stack 0
  1172  000014                     i1lcd_write_char@y:
  1173                           	opt stack 0
  1174  000014                     i1___ftpack@exp:
  1175                           	opt stack 0
  1176  000014                     i1__div_to_l_@f2:
  1177                           	opt stack 0
  1178  000014                     i1__tdiv_to_l_@f2:
  1179                           	opt stack 0
  1180  000014                     i1___ftge@ff2:
  1181                           	opt stack 0
  1182                           
  1183                           ; 3 bytes @ 0x13
  1184  000014                     	ds	1
  1185  000015                     ?i1_lcd_putc:
  1186                           	opt stack 0
  1187  000015                     ??i1___awmod:
  1188  000015                     ??i1___lwdiv:
  1189  000015                     ??i1___lwmod:
  1190  000015                     i1lcd_gotoxy@b:
  1191                           	opt stack 0
  1192  000015                     i1___ftpack@sign:
  1193                           	opt stack 0
  1194  000015                     i1lcd_putc@a:
  1195                           	opt stack 0
  1196  000015                     i1___lldiv@divisor:
  1197                           	opt stack 0
  1198                           
  1199                           ; 4 bytes @ 0x14
  1200  000015                     	ds	1
  1201  000016                     ??i1___ftpack:
  1202  000016                     i1lcd_gotoxy@z:
  1203                           	opt stack 0
  1204  000016                     i1___awmod@counter:
  1205                           	opt stack 0
  1206  000016                     i1___lwdiv@counter:
  1207                           	opt stack 0
  1208  000016                     i1___lwmod@counter:
  1209                           	opt stack 0
  1210                           
  1211                           ; 1 bytes @ 0x15
  1212  000016                     	ds	1
  1213  000017                     ??i1__div_to_l_:
  1214  000017                     ??i1__tdiv_to_l_:
  1215  000017                     ??i1___ftge:
  1216  000017                     i1lcd_gotoxy@y:
  1217                           	opt stack 0
  1218  000017                     i1___awmod@sign:
  1219                           	opt stack 0
  1220  000017                     i1lcd_putc@i:
  1221                           	opt stack 0
  1222  000017                     i1___lwdiv@quotient:
  1223                           	opt stack 0
  1224                           
  1225                           ; 2 bytes @ 0x16
  1226  000017                     	ds	1
  1227  000018                     ?i1___awdiv:
  1228                           	opt stack 0
  1229  000018                     i1lcd_gotoxy@temp:
  1230                           	opt stack 0
  1231  000018                     i1___awdiv@dividend:
  1232                           	opt stack 0
  1233  000018                     i1__div_to_l_@quot:
  1234                           	opt stack 0
  1235                           
  1236                           ; 4 bytes @ 0x17
  1237  000018                     	ds	1
  1238  000019                     ??i1___lldiv:
  1239  000019                     ?i1_Obtener_Distancia:
  1240                           	opt stack 0
  1241  000019                     ?i1___awtoft:
  1242                           	opt stack 0
  1243  000019                     ?i1___ftadd:
  1244                           	opt stack 0
  1245  000019                     ?i1___lltoft:
  1246                           	opt stack 0
  1247  000019                     i1___awtoft@c:
  1248                           	opt stack 0
  1249  000019                     i1___ftadd@f1:
  1250                           	opt stack 0
  1251  000019                     i1___lltoft@c:
  1252                           	opt stack 0
  1253                           
  1254                           ; 4 bytes @ 0x18
  1255  000019                     	ds	1
  1256  00001A                     i1___awdiv@divisor:
  1257                           	opt stack 0
  1258  00001A                     i1___lldiv@quotient:
  1259                           	opt stack 0
  1260                           
  1261                           ; 4 bytes @ 0x19
  1262  00001A                     	ds	1
  1263  00001B                     i1Obtener_Distancia@Timer_1:
  1264                           	opt stack 0
  1265                           
  1266                           ; 2 bytes @ 0x1A
  1267  00001B                     	ds	1
  1268  00001C                     ??i1___awdiv:
  1269  00001C                     ??i1___awtoft:
  1270  00001C                     i1__div_to_l_@cntr:
  1271                           	opt stack 0
  1272  00001C                     i1___ftadd@f2:
  1273                           	opt stack 0
  1274  00001C                     i1__tdiv_to_l_@quot:
  1275                           	opt stack 0
  1276                           
  1277                           ; 4 bytes @ 0x1B
  1278  00001C                     	ds	1
  1279  00001D                     ??i1___lltoft:
  1280  00001D                     i1___awdiv@counter:
  1281                           	opt stack 0
  1282  00001D                     i1___awtoft@sign:
  1283                           	opt stack 0
  1284  00001D                     i1__div_to_l_@exp1:
  1285                           	opt stack 0
  1286  00001D                     i1Obtener_Distancia@Distancia:
  1287                           	opt stack 0
  1288                           
  1289                           ; 2 bytes @ 0x1C
  1290  00001D                     	ds	1
  1291  00001E                     i1___awdiv@sign:
  1292                           	opt stack 0
  1293  00001E                     i1___lldiv@counter:
  1294                           	opt stack 0
  1295                           
  1296                           ; 1 bytes @ 0x1D
  1297  00001E                     	ds	1
  1298  00001F                     ??i1___ftadd:
  1299  00001F                     ?i1___llmod:
  1300                           	opt stack 0
  1301  00001F                     i1Obtener_Distancia@Duracion:
  1302                           	opt stack 0
  1303  00001F                     i1___awdiv@quotient:
  1304                           	opt stack 0
  1305  00001F                     i1___llmod@dividend:
  1306                           	opt stack 0
  1307                           
  1308                           ; 4 bytes @ 0x1E
  1309  00001F                     	ds	1
  1310  000020                     i1__tdiv_to_l_@cntr:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x1F
  1314  000020                     	ds	1
  1315  000021                     ?i1___wmul:
  1316                           	opt stack 0
  1317  000021                     i1__tdiv_to_l_@exp1:
  1318                           	opt stack 0
  1319  000021                     i1___lltoft@exp:
  1320                           	opt stack 0
  1321  000021                     i1___wmul@multiplier:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x20
  1325  000021                     	ds	2
  1326  000023                     i1___wmul@multiplicand:
  1327                           	opt stack 0
  1328  000023                     i1___llmod@divisor:
  1329                           	opt stack 0
  1330                           
  1331                           ; 4 bytes @ 0x22
  1332  000023                     	ds	1
  1333  000024                     i1___ftadd@sign:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x23
  1337  000024                     	ds	1
  1338  000025                     i1___ftadd@exp2:
  1339                           	opt stack 0
  1340  000025                     i1___wmul@product:
  1341                           	opt stack 0
  1342                           
  1343                           ; 2 bytes @ 0x24
  1344  000025                     	ds	1
  1345  000026                     i1___ftadd@exp1:
  1346                           	opt stack 0
  1347                           
  1348                           ; 1 bytes @ 0x25
  1349  000026                     	ds	1
  1350  000027                     ??i1___llmod:
  1351  000027                     ?i1___ftsub:
  1352                           	opt stack 0
  1353  000027                     ?i1___fttol:
  1354                           	opt stack 0
  1355  000027                     i1___ftsub@f1:
  1356                           	opt stack 0
  1357  000027                     i1___fttol@f1:
  1358                           	opt stack 0
  1359                           
  1360                           ; 3 bytes @ 0x26
  1361  000027                     	ds	1
  1362  000028                     i1___llmod@counter:
  1363                           	opt stack 0
  1364                           
  1365                           ; 1 bytes @ 0x27
  1366  000028                     	ds	2
  1367  00002A                     i1___ftsub@f2:
  1368                           	opt stack 0
  1369                           
  1370                           ; 3 bytes @ 0x29
  1371  00002A                     	ds	1
  1372  00002B                     ??i1___fttol:
  1373                           
  1374                           ; 0 bytes @ 0x2A
  1375  00002B                     	ds	2
  1376  00002D                     ?i1___asftsub:
  1377                           	opt stack 0
  1378  00002D                     i1___asftsub@f1p:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x2C
  1382  00002D                     	ds	2
  1383  00002F                     i1___asftsub@f2:
  1384                           	opt stack 0
  1385                           
  1386                           ; 3 bytes @ 0x2E
  1387  00002F                     	ds	1
  1388  000030                     i1___fttol@sign1:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0x2F
  1392  000030                     	ds	1
  1393  000031                     i1___fttol@lval:
  1394                           	opt stack 0
  1395                           
  1396                           ; 4 bytes @ 0x30
  1397  000031                     	ds	1
  1398  000032                     
  1399                           ; 0 bytes @ 0x31
  1400  000032                     	ds	3
  1401  000035                     i1___fttol@exp1:
  1402                           	opt stack 0
  1403                           
  1404                           ; 1 bytes @ 0x34
  1405  000035                     	ds	1
  1406  000036                     ?i1___ftmul:
  1407                           	opt stack 0
  1408  000036                     i1___ftmul@f1:
  1409                           	opt stack 0
  1410                           
  1411                           ; 3 bytes @ 0x35
  1412  000036                     	ds	3
  1413  000039                     i1___ftmul@f2:
  1414                           	opt stack 0
  1415                           
  1416                           ; 3 bytes @ 0x38
  1417  000039                     	ds	3
  1418  00003C                     ??i1___ftmul:
  1419                           
  1420                           ; 0 bytes @ 0x3B
  1421  00003C                     	ds	5
  1422  000041                     i1___ftmul@exp:
  1423                           	opt stack 0
  1424                           
  1425                           ; 1 bytes @ 0x40
  1426  000041                     	ds	1
  1427  000042                     i1___ftmul@f3_as_product:
  1428                           	opt stack 0
  1429                           
  1430                           ; 3 bytes @ 0x41
  1431  000042                     	ds	3
  1432  000045                     i1___ftmul@cntr:
  1433                           	opt stack 0
  1434                           
  1435                           ; 1 bytes @ 0x44
  1436  000045                     	ds	1
  1437  000046                     i1___ftmul@sign:
  1438                           	opt stack 0
  1439                           
  1440                           ; 1 bytes @ 0x45
  1441  000046                     	ds	1
  1442  000047                     ?i1_Read_LDR:
  1443                           	opt stack 0
  1444  000047                     ?i1_fround:
  1445                           	opt stack 0
  1446  000047                     ?i1_scale:
  1447                           	opt stack 0
  1448  000047                     i1fround@prec:
  1449                           	opt stack 0
  1450  000047                     i1scale@scl:
  1451                           	opt stack 0
  1452                           
  1453                           ; 1 bytes @ 0x46
  1454  000047                     	ds	3
  1455  00004A                     tblptru	equ	0xFF8
  1456                           postinc0	equ	0xFEE
  1457                           wreg	equ	0xFE8
  1458                           
  1459                           ; 0 bytes @ 0x49
  1460 ;;
  1461 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1462 ;;
  1463 ;; *************** function _main *****************
  1464 ;; Defined at:
  1465 ;;		line 75 in file "main.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;		None               void
  1472 ;; Registers used:
  1473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1479 ;;      Params:         0       0       0       0       0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1482 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1483 ;;Total ram usage:        0 bytes
  1484 ;; Hardware stack levels required when called:   16
  1485 ;; This function calls:
  1486 ;;		_lcd_init
  1487 ;;		_Configuracion_Registros
  1488 ;;		_Timer1_Init
  1489 ;;		_Init_AD
  1490 ;;		_USART_Init
  1491 ;;		_inicioInterrupcoes
  1492 ;;		_mainLoop
  1493 ;; This function is called by:
  1494 ;;		Startup code after reset
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text0
  1499  006380                     __ptext0:
  1500                           	opt stack 0
  1501  006380                     _main:
  1502                           	opt stack 15
  1503                           
  1504                           ;main.c: 77: Configuracion_Registros();
  1505                           
  1506                           ;incstack = 0
  1507                           ;incstack = 0
  1508  006380  ECFA  F031         	call	_Configuracion_Registros	;wreg free
  1509                           
  1510                           ;main.c: 78: Timer1_Init();
  1511  006384  ECF0  F031         	call	_Timer1_Init	;wreg free
  1512                           
  1513                           ;main.c: 79: lcd_init();
  1514  006388  ECF9  F023         	call	_lcd_init	;wreg free
  1515                           
  1516                           ;main.c: 80: Init_AD();
  1517  00638C  ECE6  F031         	call	_Init_AD	;wreg free
  1518                           
  1519                           ;main.c: 82: USART_Init();
  1520  006390  ECD1  F02A         	call	_USART_Init	;wreg free
  1521                           
  1522                           ;main.c: 83: inicioInterrupcoes();
  1523  006394  ECDC  F031         	call	_inicioInterrupcoes	;wreg free
  1524  006398                     l10088:
  1525                           
  1526                           ;main.c: 86: mainLoop();
  1527  006398  EC06  F027         	call	_mainLoop	;wreg free
  1528  00639C  D7FD               	goto	l10088
  1529  00639E                     __end_of_main:
  1530                           	opt stack 0
  1531                           tblptru	equ	0xFF8
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           
  1535 ;; *************** function _mainLoop *****************
  1536 ;; Defined at:
  1537 ;;		line 92 in file "main.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;		None               void
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1553 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1554 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1555 ;;Total ram usage:        2 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:   15
  1558 ;; This function calls:
  1559 ;;		_lcd_gotoxy
  1560 ;;		_lcd_putc
  1561 ;;		_Obtener_Distancia
  1562 ;;		_Read_LDR
  1563 ;;		_sprintf
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text1
  1570  004E0C                     __ptext1:
  1571                           	opt stack 0
  1572  004E0C                     _mainLoop:
  1573                           	opt stack 15
  1574                           
  1575                           ;main.c: 93: Distancia=Obtener_Distancia();
  1576                           
  1577                           ;incstack = 0
  1578                           ;incstack = 0
  1579  004E0C  EC7A  F02A         	call	_Obtener_Distancia	;wreg free
  1580  004E10  0101               	movlb	1	; () banked
  1581  004E12  C108  F184         	movff	?_Obtener_Distancia,_Distancia
  1582  004E16  0101               	movlb	1	; () banked
  1583  004E18  C109  F185         	movff	?_Obtener_Distancia+1,_Distancia+1
  1584                           
  1585                           ;main.c: 94: LDR_value=Read_LDR();
  1586  004E1C  EC91  F025         	call	_Read_LDR	;wreg free
  1587  004E20  C13A  F183         	movff	?_Read_LDR+2,_LDR_value+2
  1588  004E24  C139  F182         	movff	?_Read_LDR+1,_LDR_value+1
  1589  004E28  C138  F181         	movff	?_Read_LDR,_LDR_value
  1590                           
  1591                           ;main.c: 95: lcd_gotoxy(1,1);
  1592  004E2C  0101               	movlb	1	; () banked
  1593  004E2E  6F7F               	movwf	??_mainLoop& (0+255),b
  1594  004E30  0E01               	movlw	1
  1595  004E32  0101               	movlb	1	; () banked
  1596  004E34  0101               	movlb	1	; () banked
  1597  004E36  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  1598  004E38  0101               	movlb	1	; () banked
  1599  004E3A  517F               	movf	??_mainLoop& (0+255),w,b
  1600  004E3C  0101               	movlb	1	; () banked
  1601  004E3E  6F80               	movwf	(??_mainLoop+1)& (0+255),b
  1602  004E40  0E01               	movlw	1
  1603  004E42  0101               	movlb	1	; () banked
  1604  004E44  0101               	movlb	1	; () banked
  1605  004E46  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  1606  004E48  0101               	movlb	1	; () banked
  1607  004E4A  5180               	movf	(??_mainLoop+1)& (0+255),w,b
  1608  004E4C  EC5A  F02C         	call	_lcd_gotoxy	;wreg free
  1609                           
  1610                           ;main.c: 96: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
  1611  004E50  0101               	movlb	1	; () banked
  1612  004E52  0E01               	movlw	high _LCD_Buffer
  1613  004E54  0101               	movlb	1	; () banked
  1614  004E56  0101               	movlb	1	; () banked
  1615  004E58  6F52               	movwf	(?_sprintf+1)& (0+255),b
  1616  004E5A  0101               	movlb	1	; () banked
  1617  004E5C  0E86               	movlw	low _LCD_Buffer
  1618  004E5E  0101               	movlb	1	; () banked
  1619  004E60  6F51               	movwf	?_sprintf& (0+255),b
  1620  004E62  0E08               	movlw	high STR_1
  1621  004E64  0101               	movlb	1	; () banked
  1622  004E66  0101               	movlb	1	; () banked
  1623  004E68  6F54               	movwf	(?_sprintf+3)& (0+255),b
  1624  004E6A  0E88               	movlw	low STR_1
  1625  004E6C  0101               	movlb	1	; () banked
  1626  004E6E  6F53               	movwf	(?_sprintf+2)& (0+255),b
  1627  004E70  C181  F155         	movff	_LDR_value,?_sprintf+4
  1628  004E74  C182  F156         	movff	_LDR_value+1,?_sprintf+5
  1629  004E78  C183  F157         	movff	_LDR_value+2,?_sprintf+6
  1630  004E7C  EC4A  F004         	call	_sprintf	;wreg free
  1631                           
  1632                           ;main.c: 97: lcd_putc(LCD_Buffer);
  1633  004E80  0101               	movlb	1	; () banked
  1634  004E82  0E01               	movlw	high _LCD_Buffer
  1635  004E84  0101               	movlb	1	; () banked
  1636  004E86  0101               	movlb	1	; () banked
  1637  004E88  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  1638  004E8A  0101               	movlb	1	; () banked
  1639  004E8C  0E86               	movlw	low _LCD_Buffer
  1640  004E8E  0101               	movlb	1	; () banked
  1641  004E90  6F04               	movwf	?_lcd_putc& (0+255),b
  1642  004E92  EC54  F02E         	call	_lcd_putc	;wreg free
  1643                           
  1644                           ;main.c: 98: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
  1645  004E96  0101               	movlb	1	; () banked
  1646  004E98  0E01               	movlw	high _LCD_Buffer
  1647  004E9A  0101               	movlb	1	; () banked
  1648  004E9C  0101               	movlb	1	; () banked
  1649  004E9E  6F52               	movwf	(?_sprintf+1)& (0+255),b
  1650  004EA0  0101               	movlb	1	; () banked
  1651  004EA2  0E86               	movlw	low _LCD_Buffer
  1652  004EA4  0101               	movlb	1	; () banked
  1653  004EA6  6F51               	movwf	?_sprintf& (0+255),b
  1654  004EA8  0E08               	movlw	high STR_2
  1655  004EAA  0101               	movlb	1	; () banked
  1656  004EAC  0101               	movlb	1	; () banked
  1657  004EAE  6F54               	movwf	(?_sprintf+3)& (0+255),b
  1658  004EB0  0E76               	movlw	low STR_2
  1659  004EB2  0101               	movlb	1	; () banked
  1660  004EB4  6F53               	movwf	(?_sprintf+2)& (0+255),b
  1661  004EB6  C184  F155         	movff	_Distancia,?_sprintf+4
  1662  004EBA  C185  F156         	movff	_Distancia+1,?_sprintf+5
  1663  004EBE  EC4A  F004         	call	_sprintf	;wreg free
  1664                           
  1665                           ;main.c: 99: lcd_gotoxy(2,1);
  1666  004EC2  0101               	movlb	1	; () banked
  1667  004EC4  6F7F               	movwf	??_mainLoop& (0+255),b
  1668  004EC6  0E02               	movlw	2
  1669  004EC8  0101               	movlb	1	; () banked
  1670  004ECA  0101               	movlb	1	; () banked
  1671  004ECC  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  1672  004ECE  0101               	movlb	1	; () banked
  1673  004ED0  517F               	movf	??_mainLoop& (0+255),w,b
  1674  004ED2  0101               	movlb	1	; () banked
  1675  004ED4  6F80               	movwf	(??_mainLoop+1)& (0+255),b
  1676  004ED6  0E01               	movlw	1
  1677  004ED8  0101               	movlb	1	; () banked
  1678  004EDA  0101               	movlb	1	; () banked
  1679  004EDC  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  1680  004EDE  0101               	movlb	1	; () banked
  1681  004EE0  5180               	movf	(??_mainLoop+1)& (0+255),w,b
  1682  004EE2  EC5A  F02C         	call	_lcd_gotoxy	;wreg free
  1683                           
  1684                           ;main.c: 100: lcd_putc(LCD_Buffer);
  1685  004EE6  0101               	movlb	1	; () banked
  1686  004EE8  0E01               	movlw	high _LCD_Buffer
  1687  004EEA  0101               	movlb	1	; () banked
  1688  004EEC  0101               	movlb	1	; () banked
  1689  004EEE  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  1690  004EF0  0101               	movlb	1	; () banked
  1691  004EF2  0E86               	movlw	low _LCD_Buffer
  1692  004EF4  0101               	movlb	1	; () banked
  1693  004EF6  6F04               	movwf	?_lcd_putc& (0+255),b
  1694  004EF8  EC54  F02E         	call	_lcd_putc	;wreg free
  1695  004EFC  0012               	return	
  1696  004EFE                     __end_of_mainLoop:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           postinc0	equ	0xFEE
  1700                           wreg	equ	0xFE8
  1701                           
  1702 ;; *************** function _sprintf *****************
  1703 ;; Defined at:
  1704 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  sp              2   81[BANK1 ] PTR unsigned char 
  1707 ;;		 -> LCD_Buffer(32), 
  1708 ;;  f               2   83[BANK1 ] PTR const unsigned char 
  1709 ;;		 -> STR_2(18), STR_1(10), 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  vd              2  101[BANK1 ] unsigned int 
  1712 ;;  vd              2  103[BANK1 ] unsigned int 
  1713 ;;  _val            5  110[BANK1 ] struct .
  1714 ;;  fval            3  121[BANK1 ] struct .
  1715 ;;  integ           3  107[BANK1 ] struct .
  1716 ;;  ival            3    0        struct .
  1717 ;;  prec            2  124[BANK1 ] int 
  1718 ;;  width           2  119[BANK1 ] int 
  1719 ;;  exp             2  117[BANK1 ] int 
  1720 ;;  flag            2  115[BANK1 ] unsigned short 
  1721 ;;  ap              2  105[BANK1 ] PTR void [1]
  1722 ;;		 -> ?_sprintf(2), 
  1723 ;;  c               1  126[BANK1 ] char 
  1724 ;;  d               1    0        unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  2   81[BANK1 ] int 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1734 ;;      Params:         0       0       7       0       0       0       0       0       0
  1735 ;;      Locals:         0       0      33       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       6       0       0       0       0       0       0
  1737 ;;      Totals:         0       0      46       0       0       0       0       0       0
  1738 ;;Total ram usage:       46 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:   14
  1741 ;; This function calls:
  1742 ;;		_fround
  1743 ;;		_scale
  1744 ;;		_isdigit
  1745 ;;		__tdiv_to_l_
  1746 ;;		__div_to_l_
  1747 ;;		___asftadd
  1748 ;;		___asftmul
  1749 ;;		___ftmul
  1750 ;;		___asftsub
  1751 ;;		___awdiv
  1752 ;;		___ftge
  1753 ;;		___ftneg
  1754 ;;		___fttol
  1755 ;;		___lldiv
  1756 ;;		___llmod
  1757 ;;		___lltoft
  1758 ;;		___lwmod
  1759 ;;		___wmul
  1760 ;; This function is called by:
  1761 ;;		_mainLoop
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text2
  1766  000894                     __ptext2:
  1767                           	opt stack 0
  1768  000894                     _sprintf:
  1769                           	opt stack 15
  1770                           
  1771                           ;doprnt.c: 494: va_list ap;
  1772                           ;doprnt.c: 499: signed char c;
  1773                           ;doprnt.c: 501: int width;
  1774                           ;doprnt.c: 504: int prec;
  1775                           ;doprnt.c: 508: unsigned short flag;
  1776                           ;doprnt.c: 515: char d;
  1777                           ;doprnt.c: 516: double fval, integ;
  1778                           ;doprnt.c: 517: int exp;
  1779                           ;doprnt.c: 518: double ival;
  1780                           ;doprnt.c: 519: union {
  1781                           ;doprnt.c: 520: unsigned long _val;
  1782                           ;doprnt.c: 521: struct {
  1783                           ;doprnt.c: 522: const char * _cp;
  1784                           ;doprnt.c: 523: unsigned _len;
  1785                           ;doprnt.c: 524: } _str;
  1786                           ;doprnt.c: 525: } _val;
  1787                           ;doprnt.c: 542: *ap = __va_start();
  1788                           
  1789                           ;incstack = 0
  1790                           ;incstack = 0
  1791  000894  0101               	movlb	1	; () banked
  1792  000896  0E01               	movlw	high (?_sprintf+4)
  1793  000898  0101               	movlb	1	; () banked
  1794  00089A  0101               	movlb	1	; () banked
  1795  00089C  6F6A               	movwf	(sprintf@ap+1)& (0+255),b
  1796  00089E  0101               	movlb	1	; () banked
  1797  0008A0  0E55               	movlw	low (?_sprintf+4)
  1798  0008A2  0101               	movlb	1	; () banked
  1799  0008A4  6F69               	movwf	sprintf@ap& (0+255),b
  1800                           
  1801                           ;doprnt.c: 545: while(c = *f++) {
  1802  0008A6  EF3C  F00B         	goto	l10486
  1803  0008AA                     l10162:
  1804                           
  1805                           ; BSR set to: 1
  1806                           ;doprnt.c: 547: if(c != '%')
  1807  0008AA  0101               	movlb	1	; () banked
  1808  0008AC  0101               	movlb	1	; () banked
  1809  0008AE  517E               	movf	sprintf@c& (0+255),w,b
  1810  0008B0  0A25               	xorlw	37
  1811  0008B2  B4D8               	btfsc	status,2,c
  1812  0008B4  D00D               	goto	l10168
  1813                           
  1814                           ; BSR set to: 1
  1815                           ;doprnt.c: 549: {
  1816                           ;doprnt.c: 550: ((*sp++ = (c)));
  1817  0008B6  C151  FFD9         	movff	sprintf@sp,fsr2l
  1818  0008BA  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  1819  0008BE  0101               	movlb	1	; () banked
  1820  0008C0  C17E  FFDF         	movff	sprintf@c,indf2
  1821                           
  1822                           ; BSR set to: 1
  1823  0008C4  0101               	movlb	1	; () banked
  1824  0008C6  0101               	movlb	1	; () banked
  1825  0008C8  4B51               	infsnz	sprintf@sp& (0+255),f,b
  1826  0008CA  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  1827                           
  1828                           ;doprnt.c: 551: continue;
  1829  0008CC  EF3C  F00B         	goto	l10486
  1830  0008D0                     l10168:
  1831                           
  1832                           ; BSR set to: 1
  1833                           ;doprnt.c: 552: }
  1834                           ;doprnt.c: 555: width = 0;
  1835  0008D0  0E00               	movlw	0
  1836  0008D2  0101               	movlb	1	; () banked
  1837  0008D4  0101               	movlb	1	; () banked
  1838  0008D6  6F78               	movwf	(sprintf@width+1)& (0+255),b
  1839  0008D8  0E00               	movlw	0
  1840  0008DA  0101               	movlb	1	; () banked
  1841  0008DC  6F77               	movwf	sprintf@width& (0+255),b
  1842                           
  1843                           ;doprnt.c: 557: flag = 0;
  1844  0008DE  0E00               	movlw	0
  1845  0008E0  0101               	movlb	1	; () banked
  1846  0008E2  0101               	movlb	1	; () banked
  1847  0008E4  6F74               	movwf	(sprintf@flag+1)& (0+255),b
  1848  0008E6  0E00               	movlw	0
  1849  0008E8  0101               	movlb	1	; () banked
  1850  0008EA  6F73               	movwf	sprintf@flag& (0+255),b
  1851  0008EC  D007               	goto	l10174
  1852  0008EE                     l10170:
  1853                           
  1854                           ; BSR set to: 1
  1855                           ;doprnt.c: 589: flag |= 0x04;
  1856  0008EE  0101               	movlb	1	; () banked
  1857  0008F0  0101               	movlb	1	; () banked
  1858  0008F2  8573               	bsf	sprintf@flag& (0+255),2,b
  1859                           
  1860                           ;doprnt.c: 590: f++;
  1861  0008F4  0101               	movlb	1	; () banked
  1862  0008F6  0101               	movlb	1	; () banked
  1863  0008F8  4B53               	infsnz	sprintf@f& (0+255),f,b
  1864  0008FA  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1865  0008FC                     l10174:
  1866                           
  1867                           ; BSR set to: 1
  1868  0008FC  0101               	movlb	1	; () banked
  1869  0008FE  C153  FFF6         	movff	sprintf@f,tblptrl
  1870  000902  0101               	movlb	1	; () banked
  1871  000904  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1872  000908  0008               	tblrd		*
  1873  00090A  50F5               	movf	tablat,w,c
  1874                           
  1875                           ; Switch size 1, requested type "space"
  1876                           ; Number of cases is 1, Range of values is 48 to 48
  1877                           ; switch strategies available:
  1878                           ; Name         Instructions Cycles
  1879                           ; simple_byte            4     3 (average)
  1880                           ;	Chosen strategy is simple_byte
  1881  00090C  0A30               	xorlw	48	; case 48
  1882  00090E  B4D8               	btfsc	status,2,c
  1883  000910  D7EE               	goto	l10170
  1884                           
  1885                           ; BSR set to: 1
  1886                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1887                           
  1888                           ; BSR set to: 1
  1889                           
  1890                           ; BSR set to: 1
  1891                           ;doprnt.c: 595: }
  1892                           
  1893                           ; BSR set to: 1
  1894                           ;doprnt.c: 594: break;
  1895  000912  0101               	movlb	1	; () banked
  1896  000914  C153  FFF6         	movff	sprintf@f,tblptrl
  1897  000918  0101               	movlb	1	; () banked
  1898  00091A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1899  00091E  0008               	tblrd		*
  1900  000920  0101               	movlb	1	; () banked
  1901  000922  CFF5 F100          	movff	tablat,?_isdigit
  1902  000926  EC31  F030         	call	_isdigit	;wreg free
  1903  00092A  A0D8               	btfss	status,0,c
  1904  00092C  D049               	goto	l10188
  1905                           
  1906                           ;doprnt.c: 607: width = 0;
  1907  00092E  0E00               	movlw	0
  1908  000930  0101               	movlb	1	; () banked
  1909  000932  0101               	movlb	1	; () banked
  1910  000934  6F78               	movwf	(sprintf@width+1)& (0+255),b
  1911  000936  0E00               	movlw	0
  1912  000938  0101               	movlb	1	; () banked
  1913  00093A  6F77               	movwf	sprintf@width& (0+255),b
  1914  00093C                     l10180:
  1915                           
  1916                           ;doprnt.c: 609: width *= 10;
  1917  00093C  C177  F110         	movff	sprintf@width,?___wmul
  1918  000940  C178  F111         	movff	sprintf@width+1,?___wmul+1
  1919  000944  0E00               	movlw	0
  1920  000946  0101               	movlb	1	; () banked
  1921  000948  0101               	movlb	1	; () banked
  1922  00094A  6F13               	movwf	(?___wmul+3)& (0+255),b
  1923  00094C  0E0A               	movlw	10
  1924  00094E  0101               	movlb	1	; () banked
  1925  000950  6F12               	movwf	(?___wmul+2)& (0+255),b
  1926  000952  ECB8  F02E         	call	___wmul	;wreg free
  1927  000956  0101               	movlb	1	; () banked
  1928  000958  C110  F177         	movff	?___wmul,sprintf@width
  1929  00095C  0101               	movlb	1	; () banked
  1930  00095E  C111  F178         	movff	?___wmul+1,sprintf@width+1
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;doprnt.c: 610: width += *f++ - '0';
  1934  000962  0101               	movlb	1	; () banked
  1935  000964  C153  FFF6         	movff	sprintf@f,tblptrl
  1936  000968  0101               	movlb	1	; () banked
  1937  00096A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1938  00096E  0008               	tblrd		*
  1939  000970  CFF5 F158          	movff	tablat,??_sprintf
  1940  000974  0ED0               	movlw	208
  1941  000976  0101               	movlb	1	; () banked
  1942  000978  2558               	addwf	??_sprintf& (0+255),w,b
  1943  00097A  0101               	movlb	1	; () banked
  1944  00097C  6F59               	movwf	(??_sprintf+1)& (0+255),b
  1945  00097E  0101               	movlb	1	; () banked
  1946  000980  0101               	movlb	1	; () banked
  1947  000982  6B5A               	clrf	(??_sprintf+2)& (0+255),b
  1948  000984  0EFF               	movlw	255
  1949  000986  235A               	addwfc	(??_sprintf+2)& (0+255),f,b
  1950  000988  0101               	movlb	1	; () banked
  1951  00098A  5159               	movf	(??_sprintf+1)& (0+255),w,b
  1952  00098C  0101               	movlb	1	; () banked
  1953  00098E  0101               	movlb	1	; () banked
  1954  000990  2777               	addwf	sprintf@width& (0+255),f,b
  1955  000992  0101               	movlb	1	; () banked
  1956  000994  515A               	movf	(??_sprintf+2)& (0+255),w,b
  1957  000996  0101               	movlb	1	; () banked
  1958  000998  0101               	movlb	1	; () banked
  1959  00099A  2378               	addwfc	(sprintf@width+1)& (0+255),f,b
  1960                           
  1961                           ; BSR set to: 1
  1962  00099C  0101               	movlb	1	; () banked
  1963  00099E  0101               	movlb	1	; () banked
  1964  0009A0  4B53               	infsnz	sprintf@f& (0+255),f,b
  1965  0009A2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1966                           
  1967                           ; BSR set to: 1
  1968                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1969  0009A4  0101               	movlb	1	; () banked
  1970  0009A6  C153  FFF6         	movff	sprintf@f,tblptrl
  1971  0009AA  0101               	movlb	1	; () banked
  1972  0009AC  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1973  0009B0  0008               	tblrd		*
  1974  0009B2  0101               	movlb	1	; () banked
  1975  0009B4  CFF5 F100          	movff	tablat,?_isdigit
  1976  0009B8  EC31  F030         	call	_isdigit	;wreg free
  1977  0009BC  B0D8               	btfsc	status,0,c
  1978  0009BE  D7BE               	goto	l10180
  1979  0009C0                     l10188:
  1980                           
  1981                           ;doprnt.c: 617: }
  1982                           ;doprnt.c: 620: if(*f == '.') {
  1983  0009C0  0101               	movlb	1	; () banked
  1984  0009C2  C153  FFF6         	movff	sprintf@f,tblptrl
  1985  0009C6  0101               	movlb	1	; () banked
  1986  0009C8  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1987  0009CC  0008               	tblrd		*
  1988  0009CE  50F5               	movf	tablat,w,c
  1989  0009D0  0A2E               	xorlw	46
  1990  0009D2  A4D8               	btfss	status,2,c
  1991  0009D4  D04A               	goto	l10200
  1992                           
  1993                           ; BSR set to: 1
  1994                           ;doprnt.c: 621: flag |= 0x4000;
  1995  0009D6  0101               	movlb	1	; () banked
  1996  0009D8  0101               	movlb	1	; () banked
  1997  0009DA  8D74               	bsf	(sprintf@flag+1)& (0+255),6,b
  1998                           
  1999                           ;doprnt.c: 622: f++;
  2000  0009DC  0101               	movlb	1	; () banked
  2001  0009DE  0101               	movlb	1	; () banked
  2002  0009E0  4B53               	infsnz	sprintf@f& (0+255),f,b
  2003  0009E2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2004                           
  2005                           ; BSR set to: 1
  2006                           ;doprnt.c: 629: {
  2007                           ;doprnt.c: 630: prec = 0;
  2008  0009E4  0E00               	movlw	0
  2009  0009E6  0101               	movlb	1	; () banked
  2010  0009E8  0101               	movlb	1	; () banked
  2011  0009EA  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2012  0009EC  0E00               	movlw	0
  2013  0009EE  0101               	movlb	1	; () banked
  2014  0009F0  6F7C               	movwf	sprintf@prec& (0+255),b
  2015                           
  2016                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  2017  0009F2  D02C               	goto	l10198
  2018  0009F4                     l10194:
  2019                           
  2020                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  2021  0009F4  C17C  F110         	movff	sprintf@prec,?___wmul
  2022  0009F8  C17D  F111         	movff	sprintf@prec+1,?___wmul+1
  2023  0009FC  0E00               	movlw	0
  2024  0009FE  0101               	movlb	1	; () banked
  2025  000A00  0101               	movlb	1	; () banked
  2026  000A02  6F13               	movwf	(?___wmul+3)& (0+255),b
  2027  000A04  0E0A               	movlw	10
  2028  000A06  0101               	movlb	1	; () banked
  2029  000A08  6F12               	movwf	(?___wmul+2)& (0+255),b
  2030  000A0A  ECB8  F02E         	call	___wmul	;wreg free
  2031  000A0E  0101               	movlb	1	; () banked
  2032  000A10  C153  FFF6         	movff	sprintf@f,tblptrl
  2033  000A14  0101               	movlb	1	; () banked
  2034  000A16  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2035  000A1A  0008               	tblrd		*
  2036  000A1C  50F5               	movf	tablat,w,c
  2037  000A1E  0101               	movlb	1	; () banked
  2038  000A20  0101               	movlb	1	; () banked
  2039  000A22  2710               	addwf	?___wmul& (0+255),f,b
  2040  000A24  0E00               	movlw	0
  2041  000A26  0101               	movlb	1	; () banked
  2042  000A28  2311               	addwfc	(?___wmul+1)& (0+255),f,b
  2043  000A2A  0ED0               	movlw	208
  2044  000A2C  0101               	movlb	1	; () banked
  2045  000A2E  0101               	movlb	1	; () banked
  2046  000A30  2510               	addwf	?___wmul& (0+255),w,b
  2047  000A32  0101               	movlb	1	; () banked
  2048  000A34  0101               	movlb	1	; () banked
  2049  000A36  6F7C               	movwf	sprintf@prec& (0+255),b
  2050  000A38  0EFF               	movlw	255
  2051  000A3A  0101               	movlb	1	; () banked
  2052  000A3C  0101               	movlb	1	; () banked
  2053  000A3E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  2054  000A40  0101               	movlb	1	; () banked
  2055  000A42  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2056                           
  2057                           ; BSR set to: 1
  2058  000A44  0101               	movlb	1	; () banked
  2059  000A46  0101               	movlb	1	; () banked
  2060  000A48  4B53               	infsnz	sprintf@f& (0+255),f,b
  2061  000A4A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2062  000A4C                     l10198:
  2063                           
  2064                           ; BSR set to: 1
  2065  000A4C  0101               	movlb	1	; () banked
  2066  000A4E  C153  FFF6         	movff	sprintf@f,tblptrl
  2067  000A52  0101               	movlb	1	; () banked
  2068  000A54  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2069  000A58  0008               	tblrd		*
  2070  000A5A  0101               	movlb	1	; () banked
  2071  000A5C  CFF5 F100          	movff	tablat,?_isdigit
  2072  000A60  EC31  F030         	call	_isdigit	;wreg free
  2073  000A64  A0D8               	btfss	status,0,c
  2074  000A66  D010               	goto	l10208
  2075  000A68  D7C5               	goto	l10194
  2076  000A6A                     l10200:
  2077                           
  2078                           ;doprnt.c: 635: prec = 0;
  2079  000A6A  0E00               	movlw	0
  2080  000A6C  0101               	movlb	1	; () banked
  2081  000A6E  0101               	movlb	1	; () banked
  2082  000A70  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2083  000A72  0E00               	movlw	0
  2084  000A74  0101               	movlb	1	; () banked
  2085  000A76  6F7C               	movwf	sprintf@prec& (0+255),b
  2086                           
  2087                           ; BSR set to: 1
  2088                           ;doprnt.c: 637: flag |= 0x1000;
  2089  000A78  0101               	movlb	1	; () banked
  2090  000A7A  0101               	movlb	1	; () banked
  2091  000A7C  8974               	bsf	(sprintf@flag+1)& (0+255),4,b
  2092  000A7E  D004               	goto	l10208
  2093  000A80                     l10204:
  2094                           
  2095                           ; BSR set to: 1
  2096                           ;doprnt.c: 672: flag |= 0x400;
  2097  000A80  0101               	movlb	1	; () banked
  2098  000A82  0101               	movlb	1	; () banked
  2099  000A84  8574               	bsf	(sprintf@flag+1)& (0+255),2,b
  2100                           
  2101                           ;doprnt.c: 673: break;
  2102  000A86  D01E               	goto	l10210
  2103  000A88                     l10208:
  2104  000A88  0101               	movlb	1	; () banked
  2105  000A8A  C153  FFF6         	movff	sprintf@f,tblptrl
  2106  000A8E  0101               	movlb	1	; () banked
  2107  000A90  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2108  000A94  0101               	movlb	1	; () banked
  2109  000A96  0101               	movlb	1	; () banked
  2110  000A98  4B53               	infsnz	sprintf@f& (0+255),f,b
  2111  000A9A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2112  000A9C  0008               	tblrd		*
  2113  000A9E  0101               	movlb	1	; () banked
  2114  000AA0  CFF5 F17E          	movff	tablat,sprintf@c
  2115  000AA4  0101               	movlb	1	; () banked
  2116  000AA6  517E               	movf	sprintf@c& (0+255),w,b
  2117                           
  2118                           ; Switch size 1, requested type "space"
  2119                           ; Number of cases is 4, Range of values is 0 to 105
  2120                           ; switch strategies available:
  2121                           ; Name         Instructions Cycles
  2122                           ; simple_byte           13     7 (average)
  2123                           ;	Chosen strategy is simple_byte
  2124  000AA8  0A00               	xorlw	0	; case 0
  2125  000AAA  B4D8               	btfsc	status,2,c
  2126  000AAC  EF4E  F00B         	goto	l10488
  2127  000AB0  0A64               	xorlw	100	; case 100
  2128  000AB2  B4D8               	btfsc	status,2,c
  2129  000AB4  D007               	goto	l10210
  2130  000AB6  0A02               	xorlw	2	; case 102
  2131  000AB8  B4D8               	btfsc	status,2,c
  2132  000ABA  D7E2               	goto	l10204
  2133  000ABC  0A0F               	xorlw	15	; case 105
  2134  000ABE  A4D8               	btfss	status,2,c
  2135  000AC0  EF3C  F00B         	goto	l10486
  2136  000AC4                     l10210:
  2137                           
  2138                           ; BSR set to: 1
  2139                           ;doprnt.c: 834: if(flag & (0x700)) {
  2140  000AC4  0E07               	movlw	7
  2141  000AC6  0101               	movlb	1	; () banked
  2142  000AC8  0101               	movlb	1	; () banked
  2143  000ACA  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2144  000ACC  B4D8               	btfsc	status,2,c
  2145  000ACE  D3EF               	goto	l10390
  2146                           
  2147                           ; BSR set to: 1
  2148                           ;doprnt.c: 836: if(flag & 0x1000)
  2149  000AD0  0101               	movlb	1	; () banked
  2150  000AD2  0101               	movlb	1	; () banked
  2151  000AD4  A974               	btfss	(sprintf@flag+1)& (0+255),4,b
  2152  000AD6  D007               	goto	l10216
  2153                           
  2154                           ; BSR set to: 1
  2155                           ;doprnt.c: 838: prec = 6;
  2156  000AD8  0E00               	movlw	0
  2157  000ADA  0101               	movlb	1	; () banked
  2158  000ADC  0101               	movlb	1	; () banked
  2159  000ADE  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2160  000AE0  0E06               	movlw	6
  2161  000AE2  0101               	movlb	1	; () banked
  2162  000AE4  6F7C               	movwf	sprintf@prec& (0+255),b
  2163  000AE6                     l10216:
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2167  000AE6  C169  FFD9         	movff	sprintf@ap,fsr2l
  2168  000AEA  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  2169  000AEE  0101               	movlb	1	; () banked
  2170  000AF0  CFDE F179          	movff	postinc2,sprintf@fval
  2171  000AF4  0101               	movlb	1	; () banked
  2172  000AF6  CFDE F17A          	movff	postinc2,sprintf@fval+1
  2173  000AFA  0101               	movlb	1	; () banked
  2174  000AFC  CFDD F17B          	movff	postdec2,sprintf@fval+2
  2175                           
  2176                           ; BSR set to: 1
  2177  000B00  0E03               	movlw	3
  2178  000B02  0101               	movlb	1	; () banked
  2179  000B04  0101               	movlb	1	; () banked
  2180  000B06  2769               	addwf	sprintf@ap& (0+255),f,b
  2181  000B08  0E00               	movlw	0
  2182  000B0A  0101               	movlb	1	; () banked
  2183  000B0C  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2184                           
  2185                           ; BSR set to: 1
  2186                           ;doprnt.c: 840: if(fval < 0.0) {
  2187  000B0E  0101               	movlb	1	; () banked
  2188  000B10  0101               	movlb	1	; () banked
  2189  000B12  517B               	movf	(sprintf@fval+2)& (0+255),w,b
  2190  000B14  0A80               	xorlw	128
  2191  000B16  0F80               	addlw	128
  2192  000B18  E107               	bnz	u8975
  2193  000B1A  0E00               	movlw	0
  2194  000B1C  0101               	movlb	1	; () banked
  2195  000B1E  5D7A               	subwf	(sprintf@fval+1)& (0+255),w,b
  2196  000B20  E103               	bnz	u8975
  2197  000B22  0E00               	movlw	0
  2198  000B24  0101               	movlb	1	; () banked
  2199  000B26  5D79               	subwf	sprintf@fval& (0+255),w,b
  2200  000B28                     u8975:
  2201  000B28  B0D8               	btfsc	status,0,c
  2202  000B2A  D012               	goto	l10226
  2203                           
  2204                           ; BSR set to: 1
  2205                           ;doprnt.c: 841: fval = -fval;
  2206  000B2C  C179  F100         	movff	sprintf@fval,?___ftneg
  2207  000B30  C17A  F101         	movff	sprintf@fval+1,?___ftneg+1
  2208  000B34  C17B  F102         	movff	sprintf@fval+2,?___ftneg+2
  2209  000B38  ECAA  F030         	call	___ftneg	;wreg free
  2210  000B3C  C102  F17B         	movff	?___ftneg+2,sprintf@fval+2
  2211  000B40  C101  F17A         	movff	?___ftneg+1,sprintf@fval+1
  2212  000B44  C100  F179         	movff	?___ftneg,sprintf@fval
  2213                           
  2214                           ;doprnt.c: 842: flag |= 0x03;
  2215  000B48  0E03               	movlw	3
  2216  000B4A  0101               	movlb	1	; () banked
  2217  000B4C  0101               	movlb	1	; () banked
  2218  000B4E  1373               	iorwf	sprintf@flag& (0+255),f,b
  2219  000B50                     l10226:
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;doprnt.c: 843: }
  2223                           ;doprnt.c: 844: exp = 0;
  2224  000B50  0E00               	movlw	0
  2225  000B52  0101               	movlb	1	; () banked
  2226  000B54  0101               	movlb	1	; () banked
  2227  000B56  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2228  000B58  0E00               	movlw	0
  2229  000B5A  0101               	movlb	1	; () banked
  2230  000B5C  6F75               	movwf	sprintf@exp& (0+255),b
  2231                           
  2232                           ; BSR set to: 1
  2233                           ;doprnt.c: 845: if( fval!=0) {
  2234  000B5E  0E7F               	movlw	127
  2235  000B60  0101               	movlb	1	; () banked
  2236  000B62  0101               	movlb	1	; () banked
  2237  000B64  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  2238  000B66  0101               	movlb	1	; () banked
  2239  000B68  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2240  000B6A  0101               	movlb	1	; () banked
  2241  000B6C  1179               	iorwf	sprintf@fval& (0+255),w,b
  2242  000B6E  B4D8               	btfsc	status,2,c
  2243  000B70  D0B1               	goto	l10254
  2244                           
  2245                           ; BSR set to: 1
  2246                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2247  000B72  0E82               	movlw	130
  2248  000B74  0101               	movlb	1	; () banked
  2249  000B76  6F58               	movwf	??_sprintf& (0+255),b
  2250  000B78  0EFF               	movlw	255
  2251  000B7A  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2252  000B7C  0101               	movlb	1	; () banked
  2253  000B7E  C179  F15A         	movff	sprintf@fval,??_sprintf+2
  2254  000B82  0101               	movlb	1	; () banked
  2255  000B84  C17A  F15B         	movff	sprintf@fval+1,??_sprintf+3
  2256  000B88  0101               	movlb	1	; () banked
  2257  000B8A  C17B  F15C         	movff	sprintf@fval+2,??_sprintf+4
  2258  000B8E  0101               	movlb	1	; () banked
  2259  000B90  C17C  F15D         	movff	sprintf@fval+3,??_sprintf+5
  2260  000B94  0E10               	movlw	16
  2261  000B96  D006               	goto	u8990
  2262  000B98                     u8995:
  2263  000B98  0101               	movlb	1	; () banked
  2264  000B9A  90D8               	bcf	status,0,c
  2265  000B9C  335D               	rrcf	(??_sprintf+5)& (0+255),f,b
  2266  000B9E  335C               	rrcf	(??_sprintf+4)& (0+255),f,b
  2267  000BA0  335B               	rrcf	(??_sprintf+3)& (0+255),f,b
  2268  000BA2  335A               	rrcf	(??_sprintf+2)& (0+255),f,b
  2269  000BA4                     u8990:
  2270  000BA4  2EE8               	decfsz	wreg,f,c
  2271  000BA6  D7F8               	goto	u8995
  2272  000BA8  0101               	movlb	1	; () banked
  2273  000BAA  515A               	movf	(??_sprintf+2)& (0+255),w,b
  2274  000BAC  0101               	movlb	1	; () banked
  2275  000BAE  2558               	addwf	??_sprintf& (0+255),w,b
  2276  000BB0  0101               	movlb	1	; () banked
  2277  000BB2  0101               	movlb	1	; () banked
  2278  000BB4  6F75               	movwf	sprintf@exp& (0+255),b
  2279  000BB6  0101               	movlb	1	; () banked
  2280  000BB8  0101               	movlb	1	; () banked
  2281  000BBA  0E00               	movlw	0
  2282  000BBC  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  2283  000BBE  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;doprnt.c: 847: exp--;
  2287  000BC0  0101               	movlb	1	; () banked
  2288  000BC2  0101               	movlb	1	; () banked
  2289  000BC4  0775               	decf	sprintf@exp& (0+255),f,b
  2290  000BC6  A0D8               	btfss	status,0,c
  2291  000BC8  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2292                           
  2293                           ; BSR set to: 1
  2294                           ;doprnt.c: 848: exp *= 3;
  2295  000BCA  C175  F110         	movff	sprintf@exp,?___wmul
  2296  000BCE  C176  F111         	movff	sprintf@exp+1,?___wmul+1
  2297  000BD2  0E00               	movlw	0
  2298  000BD4  0101               	movlb	1	; () banked
  2299  000BD6  0101               	movlb	1	; () banked
  2300  000BD8  6F13               	movwf	(?___wmul+3)& (0+255),b
  2301  000BDA  0E03               	movlw	3
  2302  000BDC  0101               	movlb	1	; () banked
  2303  000BDE  6F12               	movwf	(?___wmul+2)& (0+255),b
  2304  000BE0  ECB8  F02E         	call	___wmul	;wreg free
  2305  000BE4  0101               	movlb	1	; () banked
  2306  000BE6  C110  F175         	movff	?___wmul,sprintf@exp
  2307  000BEA  0101               	movlb	1	; () banked
  2308  000BEC  C111  F176         	movff	?___wmul+1,sprintf@exp+1
  2309                           
  2310                           ; BSR set to: 1
  2311                           ;doprnt.c: 849: exp /= 10;
  2312  000BF0  C175  F107         	movff	sprintf@exp,?___awdiv
  2313  000BF4  C176  F108         	movff	sprintf@exp+1,?___awdiv+1
  2314  000BF8  0E00               	movlw	0
  2315  000BFA  0101               	movlb	1	; () banked
  2316  000BFC  0101               	movlb	1	; () banked
  2317  000BFE  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  2318  000C00  0E0A               	movlw	10
  2319  000C02  0101               	movlb	1	; () banked
  2320  000C04  6F09               	movwf	(?___awdiv+2)& (0+255),b
  2321  000C06  EC6E  F023         	call	___awdiv	;wreg free
  2322  000C0A  0101               	movlb	1	; () banked
  2323  000C0C  C107  F175         	movff	?___awdiv,sprintf@exp
  2324  000C10  0101               	movlb	1	; () banked
  2325  000C12  C108  F176         	movff	?___awdiv+1,sprintf@exp+1
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;doprnt.c: 850: if(exp < 0)
  2329  000C16  0101               	movlb	1	; () banked
  2330  000C18  0101               	movlb	1	; () banked
  2331  000C1A  AF76               	btfss	(sprintf@exp+1)& (0+255),7,b
  2332  000C1C  D005               	goto	l10242
  2333                           
  2334                           ; BSR set to: 1
  2335                           ;doprnt.c: 851: exp--;
  2336  000C1E  0101               	movlb	1	; () banked
  2337  000C20  0101               	movlb	1	; () banked
  2338  000C22  0775               	decf	sprintf@exp& (0+255),f,b
  2339  000C24  A0D8               	btfss	status,0,c
  2340  000C26  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2341  000C28                     l10242:
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;doprnt.c: 855: integ = scale(-exp);
  2345  000C28  0101               	movlb	1	; () banked
  2346  000C2A  0101               	movlb	1	; () banked
  2347  000C2C  5175               	movf	sprintf@exp& (0+255),w,b
  2348  000C2E  0800               	sublw	0
  2349  000C30  0101               	movlb	1	; () banked
  2350  000C32  0101               	movlb	1	; () banked
  2351  000C34  6F27               	movwf	?_scale& (0+255),b
  2352  000C36  EC0A  F012         	call	_scale	;wreg free
  2353  000C3A  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  2354  000C3E  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  2355  000C42  C127  F16B         	movff	?_scale,sprintf@integ
  2356                           
  2357                           ;doprnt.c: 856: integ *= fval;
  2358  000C46  0101               	movlb	1	; () banked
  2359  000C48  0E01               	movlw	high sprintf@integ
  2360  000C4A  0101               	movlb	1	; () banked
  2361  000C4C  0101               	movlb	1	; () banked
  2362  000C4E  6F28               	movwf	(?___asftmul+1)& (0+255),b
  2363  000C50  0101               	movlb	1	; () banked
  2364  000C52  0E6B               	movlw	low sprintf@integ
  2365  000C54  0101               	movlb	1	; () banked
  2366  000C56  6F27               	movwf	?___asftmul& (0+255),b
  2367  000C58  C179  F129         	movff	sprintf@fval,?___asftmul+2
  2368  000C5C  C17A  F12A         	movff	sprintf@fval+1,?___asftmul+3
  2369  000C60  C17B  F12B         	movff	sprintf@fval+2,?___asftmul+4
  2370  000C64  ECEF  F02F         	call	___asftmul	;wreg free
  2371                           
  2372                           ;doprnt.c: 857: if(integ < 1.0)
  2373  000C68  C16B  F100         	movff	sprintf@integ,?___ftge
  2374  000C6C  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2375  000C70  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2376  000C74  0E00               	movlw	0
  2377  000C76  0101               	movlb	1	; () banked
  2378  000C78  0101               	movlb	1	; () banked
  2379  000C7A  6F03               	movwf	(?___ftge+3)& (0+255),b
  2380  000C7C  0E80               	movlw	128
  2381  000C7E  0101               	movlb	1	; () banked
  2382  000C80  0101               	movlb	1	; () banked
  2383  000C82  6F04               	movwf	(?___ftge+4)& (0+255),b
  2384  000C84  0E3F               	movlw	63
  2385  000C86  0101               	movlb	1	; () banked
  2386  000C88  0101               	movlb	1	; () banked
  2387  000C8A  6F05               	movwf	(?___ftge+5)& (0+255),b
  2388  000C8C  EC12  F026         	call	___ftge	;wreg free
  2389  000C90  B0D8               	btfsc	status,0,c
  2390  000C92  D006               	goto	l10250
  2391                           
  2392                           ;doprnt.c: 858: exp--;
  2393  000C94  0101               	movlb	1	; () banked
  2394  000C96  0101               	movlb	1	; () banked
  2395  000C98  0775               	decf	sprintf@exp& (0+255),f,b
  2396  000C9A  A0D8               	btfss	status,0,c
  2397  000C9C  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2398  000C9E  D01A               	goto	l10254
  2399  000CA0                     l10250:
  2400                           
  2401                           ;doprnt.c: 859: else if(integ >= 10.0)
  2402  000CA0  C16B  F100         	movff	sprintf@integ,?___ftge
  2403  000CA4  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2404  000CA8  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2405  000CAC  0E00               	movlw	0
  2406  000CAE  0101               	movlb	1	; () banked
  2407  000CB0  0101               	movlb	1	; () banked
  2408  000CB2  6F03               	movwf	(?___ftge+3)& (0+255),b
  2409  000CB4  0E20               	movlw	32
  2410  000CB6  0101               	movlb	1	; () banked
  2411  000CB8  0101               	movlb	1	; () banked
  2412  000CBA  6F04               	movwf	(?___ftge+4)& (0+255),b
  2413  000CBC  0E41               	movlw	65
  2414  000CBE  0101               	movlb	1	; () banked
  2415  000CC0  0101               	movlb	1	; () banked
  2416  000CC2  6F05               	movwf	(?___ftge+5)& (0+255),b
  2417  000CC4  EC12  F026         	call	___ftge	;wreg free
  2418  000CC8  A0D8               	btfss	status,0,c
  2419  000CCA  D004               	goto	l10254
  2420                           
  2421                           ;doprnt.c: 860: exp++;
  2422  000CCC  0101               	movlb	1	; () banked
  2423  000CCE  0101               	movlb	1	; () banked
  2424  000CD0  4B75               	infsnz	sprintf@exp& (0+255),f,b
  2425  000CD2  2B76               	incf	(sprintf@exp+1)& (0+255),f,b
  2426  000CD4                     l10254:
  2427                           
  2428                           ;doprnt.c: 861: }
  2429                           ;doprnt.c: 1121: if(prec <= 12)
  2430  000CD4  0101               	movlb	1	; () banked
  2431  000CD6  0101               	movlb	1	; () banked
  2432  000CD8  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2433  000CDA  0A80               	xorlw	128
  2434  000CDC  0F80               	addlw	-128
  2435  000CDE  0E0D               	movlw	13
  2436  000CE0  B4D8               	btfsc	status,2,c
  2437  000CE2  5D7C               	subwf	sprintf@prec& (0+255),w,b
  2438  000CE4  B0D8               	btfsc	status,0,c
  2439  000CE6  D015               	goto	l10258
  2440                           
  2441                           ; BSR set to: 1
  2442                           ;doprnt.c: 1122: fval += fround(prec);
  2443  000CE8  0101               	movlb	1	; () banked
  2444  000CEA  0E01               	movlw	high sprintf@fval
  2445  000CEC  0101               	movlb	1	; () banked
  2446  000CEE  0101               	movlb	1	; () banked
  2447  000CF0  6F47               	movwf	(?___asftadd+1)& (0+255),b
  2448  000CF2  0101               	movlb	1	; () banked
  2449  000CF4  0E79               	movlw	low sprintf@fval
  2450  000CF6  0101               	movlb	1	; () banked
  2451  000CF8  6F46               	movwf	?___asftadd& (0+255),b
  2452  000CFA  C17C  F127         	movff	sprintf@prec,?_fround
  2453  000CFE  EC3C  F017         	call	_fround	;wreg free
  2454  000D02  C129  F14A         	movff	?_fround+2,?___asftadd+4
  2455  000D06  C128  F149         	movff	?_fround+1,?___asftadd+3
  2456  000D0A  C127  F148         	movff	?_fround,?___asftadd+2
  2457  000D0E  EC10  F030         	call	___asftadd	;wreg free
  2458  000D12                     l10258:
  2459                           
  2460                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2461  000D12  0101               	movlb	1	; () banked
  2462  000D14  0101               	movlb	1	; () banked
  2463  000D16  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2464  000D18  0A80               	xorlw	128
  2465  000D1A  0F80               	addlw	-128
  2466  000D1C  0E0A               	movlw	10
  2467  000D1E  B4D8               	btfsc	status,2,c
  2468  000D20  5D75               	subwf	sprintf@exp& (0+255),w,b
  2469  000D22  B0D8               	btfsc	status,0,c
  2470  000D24  D024               	goto	l10266
  2471                           
  2472                           ; BSR set to: 1
  2473  000D26  0E7F               	movlw	127
  2474  000D28  0101               	movlb	1	; () banked
  2475  000D2A  0101               	movlb	1	; () banked
  2476  000D2C  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  2477  000D2E  0101               	movlb	1	; () banked
  2478  000D30  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2479  000D32  0101               	movlb	1	; () banked
  2480  000D34  1179               	iorwf	sprintf@fval& (0+255),w,b
  2481  000D36  B4D8               	btfsc	status,2,c
  2482  000D38  D06F               	goto	l10282
  2483                           
  2484                           ; BSR set to: 1
  2485  000D3A  C179  F133         	movff	sprintf@fval,?___fttol
  2486  000D3E  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  2487  000D42  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  2488  000D46  EC70  F021         	call	___fttol	;wreg free
  2489  000D4A  0101               	movlb	1	; () banked
  2490  000D4C  0101               	movlb	1	; () banked
  2491  000D4E  5136               	movf	(?___fttol+3)& (0+255),w,b
  2492  000D50  1133               	iorwf	?___fttol& (0+255),w,b
  2493  000D52  1134               	iorwf	(?___fttol+1)& (0+255),w,b
  2494  000D54  1135               	iorwf	(?___fttol+2)& (0+255),w,b
  2495  000D56  A4D8               	btfss	status,2,c
  2496  000D58  D05F               	goto	l10282
  2497                           
  2498                           ; BSR set to: 1
  2499  000D5A  0101               	movlb	1	; () banked
  2500  000D5C  0101               	movlb	1	; () banked
  2501  000D5E  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2502  000D60  0A80               	xorlw	128
  2503  000D62  0F80               	addlw	-128
  2504  000D64  0E02               	movlw	2
  2505  000D66  B4D8               	btfsc	status,2,c
  2506  000D68  5D75               	subwf	sprintf@exp& (0+255),w,b
  2507  000D6A  A0D8               	btfss	status,0,c
  2508  000D6C  D055               	goto	l10282
  2509  000D6E                     l10266:
  2510                           
  2511                           ; BSR set to: 1
  2512                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2513  000D6E  C16B  F100         	movff	sprintf@integ,?___ftge
  2514  000D72  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2515  000D76  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2516  000D7A  0E70               	movlw	112
  2517  000D7C  0101               	movlb	1	; () banked
  2518  000D7E  0101               	movlb	1	; () banked
  2519  000D80  6F03               	movwf	(?___ftge+3)& (0+255),b
  2520  000D82  0E89               	movlw	137
  2521  000D84  0101               	movlb	1	; () banked
  2522  000D86  0101               	movlb	1	; () banked
  2523  000D88  6F04               	movwf	(?___ftge+4)& (0+255),b
  2524  000D8A  0E40               	movlw	64
  2525  000D8C  0101               	movlb	1	; () banked
  2526  000D8E  0101               	movlb	1	; () banked
  2527  000D90  6F05               	movwf	(?___ftge+5)& (0+255),b
  2528  000D92  EC12  F026         	call	___ftge	;wreg free
  2529  000D96  B0D8               	btfsc	status,0,c
  2530  000D98  D003               	goto	l10270
  2531                           
  2532                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2533  000D9A  0101               	movlb	1	; () banked
  2534  000D9C  0EF7               	movlw	247
  2535  000D9E  D002               	goto	L1
  2536  000DA0                     l10270:
  2537                           
  2538                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2539  000DA0  0101               	movlb	1	; () banked
  2540  000DA2  0EF8               	movlw	248
  2541  000DA4                     L1:
  2542  000DA4  0101               	movlb	1	; () banked
  2543  000DA6  2775               	addwf	sprintf@exp& (0+255),f,b
  2544  000DA8  0EFF               	movlw	255
  2545  000DAA  0101               	movlb	1	; () banked
  2546  000DAC  2376               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2547                           
  2548                           ; BSR set to: 1
  2549                           ;doprnt.c: 1133: }
  2550                           ;doprnt.c: 1134: integ = scale(exp);
  2551                           
  2552                           ; BSR set to: 1
  2553  000DAE  C175  F127         	movff	sprintf@exp,?_scale
  2554  000DB2  EC0A  F012         	call	_scale	;wreg free
  2555  000DB6  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  2556  000DBA  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  2557  000DBE  C127  F16B         	movff	?_scale,sprintf@integ
  2558                           
  2559                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2560  000DC2  C179  F100         	movff	sprintf@fval,?__tdiv_to_l_
  2561  000DC6  C17A  F101         	movff	sprintf@fval+1,?__tdiv_to_l_+1
  2562  000DCA  C17B  F102         	movff	sprintf@fval+2,?__tdiv_to_l_+2
  2563  000DCE  C16B  F103         	movff	sprintf@integ,?__tdiv_to_l_+3
  2564  000DD2  C16C  F104         	movff	sprintf@integ+1,?__tdiv_to_l_+4
  2565  000DD6  C16D  F105         	movff	sprintf@integ+2,?__tdiv_to_l_+5
  2566  000DDA  ECD9  F01B         	call	__tdiv_to_l_	;wreg free
  2567  000DDE  C103  F164         	movff	?__tdiv_to_l_+3,_sprintf$566+3
  2568  000DE2  C102  F163         	movff	?__tdiv_to_l_+2,_sprintf$566+2
  2569  000DE6  C101  F162         	movff	?__tdiv_to_l_+1,_sprintf$566+1
  2570  000DEA  C100  F161         	movff	?__tdiv_to_l_,_sprintf$566
  2571  000DEE  C161  F16E         	movff	_sprintf$566,sprintf@_val
  2572  000DF2  C162  F16F         	movff	_sprintf$566+1,sprintf@_val+1
  2573  000DF6  C163  F170         	movff	_sprintf$566+2,sprintf@_val+2
  2574  000DFA  C164  F171         	movff	_sprintf$566+3,sprintf@_val+3
  2575                           
  2576                           ;doprnt.c: 1138: fval = 0.0;
  2577  000DFE  0E00               	movlw	0
  2578  000E00  0101               	movlb	1	; () banked
  2579  000E02  0101               	movlb	1	; () banked
  2580  000E04  6F79               	movwf	sprintf@fval& (0+255),b
  2581  000E06  0E00               	movlw	0
  2582  000E08  0101               	movlb	1	; () banked
  2583  000E0A  0101               	movlb	1	; () banked
  2584  000E0C  6F7A               	movwf	(sprintf@fval+1)& (0+255),b
  2585  000E0E  0E00               	movlw	0
  2586  000E10  0101               	movlb	1	; () banked
  2587  000E12  0101               	movlb	1	; () banked
  2588  000E14  6F7B               	movwf	(sprintf@fval+2)& (0+255),b
  2589                           
  2590                           ;doprnt.c: 1139: } else {
  2591  000E16  D032               	goto	l10288
  2592  000E18                     l10282:
  2593                           
  2594                           ; BSR set to: 1
  2595                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2596  000E18  C179  F133         	movff	sprintf@fval,?___fttol
  2597  000E1C  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  2598  000E20  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  2599  000E24  EC70  F021         	call	___fttol	;wreg free
  2600  000E28  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  2601  000E2C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  2602  000E30  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  2603  000E34  C133  F16E         	movff	?___fttol,sprintf@_val
  2604                           
  2605                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2606  000E38  0101               	movlb	1	; () banked
  2607  000E3A  0E01               	movlw	high sprintf@fval
  2608  000E3C  0101               	movlb	1	; () banked
  2609  000E3E  0101               	movlb	1	; () banked
  2610  000E40  6F4D               	movwf	(?___asftsub+1)& (0+255),b
  2611  000E42  0101               	movlb	1	; () banked
  2612  000E44  0E79               	movlw	low sprintf@fval
  2613  000E46  0101               	movlb	1	; () banked
  2614  000E48  6F4C               	movwf	?___asftsub& (0+255),b
  2615  000E4A  C16E  F108         	movff	sprintf@_val,?___lltoft
  2616  000E4E  C16F  F109         	movff	sprintf@_val+1,?___lltoft+1
  2617  000E52  C170  F10A         	movff	sprintf@_val+2,?___lltoft+2
  2618  000E56  C171  F10B         	movff	sprintf@_val+3,?___lltoft+3
  2619  000E5A  EC7C  F02B         	call	___lltoft	;wreg free
  2620  000E5E  C10A  F150         	movff	?___lltoft+2,?___asftsub+4
  2621  000E62  C109  F14F         	movff	?___lltoft+1,?___asftsub+3
  2622  000E66  C108  F14E         	movff	?___lltoft,?___asftsub+2
  2623  000E6A  ECAD  F02F         	call	___asftsub	;wreg free
  2624                           
  2625                           ;doprnt.c: 1142: exp = 0;
  2626  000E6E  0E00               	movlw	0
  2627  000E70  0101               	movlb	1	; () banked
  2628  000E72  0101               	movlb	1	; () banked
  2629  000E74  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2630  000E76  0E00               	movlw	0
  2631  000E78  0101               	movlb	1	; () banked
  2632  000E7A  6F75               	movwf	sprintf@exp& (0+255),b
  2633  000E7C                     l10288:
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;doprnt.c: 1143: }
  2637                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2638  000E7C  0101               	movlb	1	; () banked
  2639  000E7E  6F58               	movwf	??_sprintf& (0+255),b
  2640  000E80  0E01               	movlw	1
  2641  000E82  0101               	movlb	1	; () banked
  2642  000E84  0101               	movlb	1	; () banked
  2643  000E86  6F7E               	movwf	sprintf@c& (0+255),b
  2644  000E88  0101               	movlb	1	; () banked
  2645  000E8A  5158               	movf	??_sprintf& (0+255),w,b
  2646  000E8C                     
  2647                           ; BSR set to: 1
  2648  000E8C  0101               	movlb	1	; () banked
  2649  000E8E  0101               	movlb	1	; () banked
  2650  000E90  517E               	movf	sprintf@c& (0+255),w,b
  2651  000E92  0A0A               	xorlw	10
  2652  000E94  B4D8               	btfsc	status,2,c
  2653  000E96  D021               	goto	l10302
  2654                           
  2655                           ; BSR set to: 1
  2656                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2657                           
  2658                           ; BSR set to: 1
  2659                           
  2660                           ; BSR set to: 1
  2661  000E98  0101               	movlb	1	; () banked
  2662  000E9A  0101               	movlb	1	; () banked
  2663  000E9C  517E               	movf	sprintf@c& (0+255),w,b
  2664  000E9E  0D04               	mullw	4
  2665  000EA0  0E00               	movlw	low _dpowers
  2666  000EA2  24F3               	addwf	prodl,w,c
  2667  000EA4  6EF6               	movwf	tblptrl,c
  2668  000EA6  0E08               	movlw	high _dpowers
  2669  000EA8  20F4               	addwfc	prodh,w,c
  2670  000EAA  6EF7               	movwf	tblptrh,c
  2671  000EAC  0009               	tblrd		*+
  2672  000EAE  50F5               	movf	tablat,w,c
  2673  000EB0  0101               	movlb	1	; () banked
  2674  000EB2  0101               	movlb	1	; () banked
  2675  000EB4  5D6E               	subwf	sprintf@_val& (0+255),w,b
  2676  000EB6  0009               	tblrd		*+
  2677  000EB8  50F5               	movf	tablat,w,c
  2678  000EBA  0101               	movlb	1	; () banked
  2679  000EBC  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2680  000EBE  0009               	tblrd		*+
  2681  000EC0  50F5               	movf	tablat,w,c
  2682  000EC2  0101               	movlb	1	; () banked
  2683  000EC4  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2684  000EC6  0009               	tblrd		*+
  2685  000EC8  50F5               	movf	tablat,w,c
  2686  000ECA  0101               	movlb	1	; () banked
  2687  000ECC  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2688  000ECE  A0D8               	btfss	status,0,c
  2689  000ED0  D004               	goto	l10302
  2690                           
  2691                           ; BSR set to: 1
  2692                           
  2693                           ; BSR set to: 1
  2694                           
  2695                           ; BSR set to: 1
  2696                           ;doprnt.c: 1147: break;
  2697  000ED2  0101               	movlb	1	; () banked
  2698  000ED4  0101               	movlb	1	; () banked
  2699  000ED6  2B7E               	incf	sprintf@c& (0+255),f,b
  2700  000ED8  D7D9               	goto	L2
  2701  000EDA                     l10302:
  2702                           
  2703                           ; BSR set to: 1
  2704                           ;doprnt.c: 1151: width -= prec + c + exp;
  2705  000EDA  0101               	movlb	1	; () banked
  2706  000EDC  C17E  F158         	movff	sprintf@c,??_sprintf
  2707  000EE0  0101               	movlb	1	; () banked
  2708  000EE2  6B59               	clrf	(??_sprintf+1)& (0+255),b
  2709  000EE4  BF58               	btfsc	??_sprintf& (0+255),7,b
  2710  000EE6  0759               	decf	(??_sprintf+1)& (0+255),f,b
  2711  000EE8  0101               	movlb	1	; () banked
  2712  000EEA  0101               	movlb	1	; () banked
  2713  000EEC  517C               	movf	sprintf@prec& (0+255),w,b
  2714  000EEE  0101               	movlb	1	; () banked
  2715  000EF0  2758               	addwf	??_sprintf& (0+255),f,b
  2716  000EF2  0101               	movlb	1	; () banked
  2717  000EF4  0101               	movlb	1	; () banked
  2718  000EF6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2719  000EF8  0101               	movlb	1	; () banked
  2720  000EFA  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  2721  000EFC  0101               	movlb	1	; () banked
  2722  000EFE  0101               	movlb	1	; () banked
  2723  000F00  5175               	movf	sprintf@exp& (0+255),w,b
  2724  000F02  0101               	movlb	1	; () banked
  2725  000F04  2758               	addwf	??_sprintf& (0+255),f,b
  2726  000F06  0101               	movlb	1	; () banked
  2727  000F08  0101               	movlb	1	; () banked
  2728  000F0A  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2729  000F0C  0101               	movlb	1	; () banked
  2730  000F0E  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  2731  000F10  0101               	movlb	1	; () banked
  2732  000F12  5158               	movf	??_sprintf& (0+255),w,b
  2733  000F14  0101               	movlb	1	; () banked
  2734  000F16  0101               	movlb	1	; () banked
  2735  000F18  5F77               	subwf	sprintf@width& (0+255),f,b
  2736  000F1A  0101               	movlb	1	; () banked
  2737  000F1C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2738  000F1E  0101               	movlb	1	; () banked
  2739  000F20  0101               	movlb	1	; () banked
  2740  000F22  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  2741                           
  2742                           ;doprnt.c: 1152: if(
  2743                           ;doprnt.c: 1156: prec)
  2744  000F24  0101               	movlb	1	; () banked
  2745  000F26  0101               	movlb	1	; () banked
  2746  000F28  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2747  000F2A  117C               	iorwf	sprintf@prec& (0+255),w,b
  2748  000F2C  B4D8               	btfsc	status,2,c
  2749  000F2E  D005               	goto	l10306
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;doprnt.c: 1157: width--;
  2753  000F30  0101               	movlb	1	; () banked
  2754  000F32  0101               	movlb	1	; () banked
  2755  000F34  0777               	decf	sprintf@width& (0+255),f,b
  2756  000F36  A0D8               	btfss	status,0,c
  2757  000F38  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2758  000F3A                     l10306:
  2759                           
  2760                           ; BSR set to: 1
  2761                           ;doprnt.c: 1158: if(flag & 0x03)
  2762  000F3A  0E03               	movlw	3
  2763  000F3C  0101               	movlb	1	; () banked
  2764  000F3E  0101               	movlb	1	; () banked
  2765  000F40  1573               	andwf	sprintf@flag& (0+255),w,b
  2766  000F42  0101               	movlb	1	; () banked
  2767  000F44  6F58               	movwf	??_sprintf& (0+255),b
  2768  000F46  0E00               	movlw	0
  2769  000F48  0101               	movlb	1	; () banked
  2770  000F4A  0101               	movlb	1	; () banked
  2771  000F4C  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2772  000F4E  0101               	movlb	1	; () banked
  2773  000F50  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2774  000F52  0101               	movlb	1	; () banked
  2775  000F54  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2776  000F56  1158               	iorwf	??_sprintf& (0+255),w,b
  2777  000F58  B4D8               	btfsc	status,2,c
  2778  000F5A  D005               	goto	l10310
  2779                           
  2780                           ; BSR set to: 1
  2781                           ;doprnt.c: 1159: width--;
  2782  000F5C  0101               	movlb	1	; () banked
  2783  000F5E  0101               	movlb	1	; () banked
  2784  000F60  0777               	decf	sprintf@width& (0+255),f,b
  2785  000F62  A0D8               	btfss	status,0,c
  2786  000F64  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2787  000F66                     l10310:
  2788                           
  2789                           ; BSR set to: 1
  2790                           ;doprnt.c: 1162: if(flag & 0x04) {
  2791  000F66  0101               	movlb	1	; () banked
  2792  000F68  0101               	movlb	1	; () banked
  2793  000F6A  B573               	btfsc	sprintf@flag& (0+255),2,b
  2794  000F6C  D010               	goto	l10320
  2795  000F6E  D029               	goto	l10328
  2796  000F70                     l10314:
  2797                           
  2798                           ; BSR set to: 1
  2799                           ;doprnt.c: 1176: ((*sp++ = ('0')));
  2800  000F70  C151  FFD9         	movff	sprintf@sp,fsr2l
  2801  000F74  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2802  000F78  0E30               	movlw	48
  2803  000F7A  6EDF               	movwf	indf2,c
  2804                           
  2805                           ; BSR set to: 1
  2806  000F7C  0101               	movlb	1	; () banked
  2807  000F7E  0101               	movlb	1	; () banked
  2808  000F80  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2809  000F82  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2810                           
  2811                           ; BSR set to: 1
  2812                           ;doprnt.c: 1177: width--;
  2813  000F84  0101               	movlb	1	; () banked
  2814  000F86  0101               	movlb	1	; () banked
  2815  000F88  0777               	decf	sprintf@width& (0+255),f,b
  2816  000F8A  A0D8               	btfss	status,0,c
  2817  000F8C  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2818  000F8E                     l10320:
  2819                           
  2820                           ; BSR set to: 1
  2821  000F8E  0101               	movlb	1	; () banked
  2822  000F90  0101               	movlb	1	; () banked
  2823  000F92  5178               	movf	(sprintf@width+1)& (0+255),w,b
  2824  000F94  0A80               	xorlw	128
  2825  000F96  0F80               	addlw	-128
  2826  000F98  0E01               	movlw	1
  2827  000F9A  B4D8               	btfsc	status,2,c
  2828  000F9C  5D77               	subwf	sprintf@width& (0+255),w,b
  2829  000F9E  A0D8               	btfss	status,0,c
  2830  000FA0  D079               	goto	l10344
  2831  000FA2  D7E6               	goto	l10314
  2832  000FA4                     l10322:
  2833                           
  2834                           ; BSR set to: 1
  2835                           ;doprnt.c: 1188: ((*sp++ = (' ')));
  2836  000FA4  C151  FFD9         	movff	sprintf@sp,fsr2l
  2837  000FA8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2838  000FAC  0E20               	movlw	32
  2839  000FAE  6EDF               	movwf	indf2,c
  2840                           
  2841                           ; BSR set to: 1
  2842  000FB0  0101               	movlb	1	; () banked
  2843  000FB2  0101               	movlb	1	; () banked
  2844  000FB4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2845  000FB6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2846                           
  2847                           ; BSR set to: 1
  2848                           ;doprnt.c: 1189: width--;
  2849  000FB8  0101               	movlb	1	; () banked
  2850  000FBA  0101               	movlb	1	; () banked
  2851  000FBC  0777               	decf	sprintf@width& (0+255),f,b
  2852  000FBE  A0D8               	btfss	status,0,c
  2853  000FC0  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2854  000FC2                     l10328:
  2855                           
  2856                           ; BSR set to: 1
  2857  000FC2  0101               	movlb	1	; () banked
  2858  000FC4  0101               	movlb	1	; () banked
  2859  000FC6  5178               	movf	(sprintf@width+1)& (0+255),w,b
  2860  000FC8  0A80               	xorlw	128
  2861  000FCA  0F80               	addlw	-128
  2862  000FCC  0E01               	movlw	1
  2863  000FCE  B4D8               	btfsc	status,2,c
  2864  000FD0  5D77               	subwf	sprintf@width& (0+255),w,b
  2865  000FD2  B0D8               	btfsc	status,0,c
  2866  000FD4  D7E7               	goto	l10322
  2867                           
  2868                           ; BSR set to: 1
  2869                           ;doprnt.c: 1190: }
  2870                           ;doprnt.c: 1195: if(flag & 0x03)
  2871                           
  2872                           ; BSR set to: 1
  2873  000FD6  0E03               	movlw	3
  2874  000FD8  0101               	movlb	1	; () banked
  2875  000FDA  0101               	movlb	1	; () banked
  2876  000FDC  1573               	andwf	sprintf@flag& (0+255),w,b
  2877  000FDE  0101               	movlb	1	; () banked
  2878  000FE0  6F58               	movwf	??_sprintf& (0+255),b
  2879  000FE2  0E00               	movlw	0
  2880  000FE4  0101               	movlb	1	; () banked
  2881  000FE6  0101               	movlb	1	; () banked
  2882  000FE8  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2883  000FEA  0101               	movlb	1	; () banked
  2884  000FEC  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2885  000FEE  0101               	movlb	1	; () banked
  2886  000FF0  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2887  000FF2  1158               	iorwf	??_sprintf& (0+255),w,b
  2888  000FF4  B4D8               	btfsc	status,2,c
  2889  000FF6  D04E               	goto	l10344
  2890                           
  2891                           ; BSR set to: 1
  2892                           ;doprnt.c: 1197: ((*sp++ = ('-')));
  2893  000FF8  C151  FFD9         	movff	sprintf@sp,fsr2l
  2894  000FFC  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2895  001000  0E2D               	movlw	45
  2896  001002  D043               	goto	L3
  2897  001004                     l10336:
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;doprnt.c: 1207: {
  2901                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
  2902  001004  C16E  F100         	movff	sprintf@_val,?___lldiv
  2903  001008  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  2904  00100C  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  2905  001010  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  2906  001014  0101               	movlb	1	; () banked
  2907  001016  0101               	movlb	1	; () banked
  2908  001018  517E               	movf	sprintf@c& (0+255),w,b
  2909  00101A  0D04               	mullw	4
  2910  00101C  0E00               	movlw	low _dpowers
  2911  00101E  24F3               	addwf	prodl,w,c
  2912  001020  6EF6               	movwf	tblptrl,c
  2913  001022  0E08               	movlw	high _dpowers
  2914  001024  20F4               	addwfc	prodh,w,c
  2915  001026  6EF7               	movwf	tblptrh,c
  2916  001028  0009               	tblrd		*+
  2917  00102A  0101               	movlb	1	; () banked
  2918  00102C  CFF5 F104          	movff	tablat,?___lldiv+4
  2919  001030  0009               	tblrd		*+
  2920  001032  0101               	movlb	1	; () banked
  2921  001034  CFF5 F105          	movff	tablat,?___lldiv+5
  2922  001038  0009               	tblrd		*+
  2923  00103A  0101               	movlb	1	; () banked
  2924  00103C  CFF5 F106          	movff	tablat,?___lldiv+6
  2925  001040  000A               	tblrd		*-
  2926  001042  0101               	movlb	1	; () banked
  2927  001044  CFF5 F107          	movff	tablat,?___lldiv+7
  2928  001048  EC0C  F025         	call	___lldiv	;wreg free
  2929  00104C  C100  F165         	movff	?___lldiv,sprintf@vd
  2930  001050  C101  F166         	movff	?___lldiv+1,sprintf@vd+1
  2931                           
  2932                           ;doprnt.c: 1209: vd %= 10;
  2933  001054  C165  F100         	movff	sprintf@vd,?___lwmod
  2934  001058  C166  F101         	movff	sprintf@vd+1,?___lwmod+1
  2935  00105C  0E00               	movlw	0
  2936  00105E  0101               	movlb	1	; () banked
  2937  001060  0101               	movlb	1	; () banked
  2938  001062  6F03               	movwf	(?___lwmod+3)& (0+255),b
  2939  001064  0E0A               	movlw	10
  2940  001066  0101               	movlb	1	; () banked
  2941  001068  6F02               	movwf	(?___lwmod+2)& (0+255),b
  2942  00106A  ECA1  F02C         	call	___lwmod	;wreg free
  2943  00106E  0101               	movlb	1	; () banked
  2944  001070  C100  F165         	movff	?___lwmod,sprintf@vd
  2945  001074  0101               	movlb	1	; () banked
  2946  001076  C101  F166         	movff	?___lwmod+1,sprintf@vd+1
  2947                           
  2948                           ; BSR set to: 1
  2949                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
  2950  00107A  0101               	movlb	1	; () banked
  2951  00107C  0101               	movlb	1	; () banked
  2952  00107E  5165               	movf	sprintf@vd& (0+255),w,b
  2953  001080  0F30               	addlw	48
  2954  001082  C151  FFD9         	movff	sprintf@sp,fsr2l
  2955  001086  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2956  00108A                     L3:
  2957  00108A  6EDF               	movwf	indf2,c
  2958                           
  2959                           ; BSR set to: 1
  2960  00108C  0101               	movlb	1	; () banked
  2961  00108E  0101               	movlb	1	; () banked
  2962  001090  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2963  001092  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2964  001094                     l10344:
  2965                           
  2966                           ; BSR set to: 1
  2967  001094  0101               	movlb	1	; () banked
  2968  001096  0101               	movlb	1	; () banked
  2969  001098  077E               	decf	sprintf@c& (0+255),f,b
  2970  00109A  0101               	movlb	1	; () banked
  2971  00109C  297E               	incf	sprintf@c& (0+255),w,b
  2972  00109E  B4D8               	btfsc	status,2,c
  2973  0010A0  D010               	goto	l10352
  2974  0010A2  D7B0               	goto	l10336
  2975  0010A4                     l10346:
  2976                           
  2977                           ; BSR set to: 1
  2978                           ;doprnt.c: 1215: ((*sp++ = ('0')));
  2979  0010A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  2980  0010A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2981  0010AC  0E30               	movlw	48
  2982  0010AE  6EDF               	movwf	indf2,c
  2983                           
  2984                           ; BSR set to: 1
  2985  0010B0  0101               	movlb	1	; () banked
  2986  0010B2  0101               	movlb	1	; () banked
  2987  0010B4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2988  0010B6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;doprnt.c: 1216: exp--;
  2992  0010B8  0101               	movlb	1	; () banked
  2993  0010BA  0101               	movlb	1	; () banked
  2994  0010BC  0775               	decf	sprintf@exp& (0+255),f,b
  2995  0010BE  A0D8               	btfss	status,0,c
  2996  0010C0  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2997  0010C2                     l10352:
  2998                           
  2999                           ; BSR set to: 1
  3000  0010C2  0101               	movlb	1	; () banked
  3001  0010C4  0101               	movlb	1	; () banked
  3002  0010C6  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  3003  0010C8  0A80               	xorlw	128
  3004  0010CA  0F80               	addlw	-128
  3005  0010CC  0E01               	movlw	1
  3006  0010CE  B4D8               	btfsc	status,2,c
  3007  0010D0  5D75               	subwf	sprintf@exp& (0+255),w,b
  3008  0010D2  B0D8               	btfsc	status,0,c
  3009  0010D4  D7E7               	goto	l10346
  3010                           
  3011                           ; BSR set to: 1
  3012                           ;doprnt.c: 1217: }
  3013                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3014                           
  3015                           ; BSR set to: 1
  3016  0010D6  0101               	movlb	1	; () banked
  3017  0010D8  0101               	movlb	1	; () banked
  3018  0010DA  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3019  0010DC  0A80               	xorlw	128
  3020  0010DE  0F80               	addlw	-128
  3021  0010E0  0E09               	movlw	9
  3022  0010E2  B4D8               	btfsc	status,2,c
  3023  0010E4  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3024  0010E6  A0D8               	btfss	status,0,c
  3025  0010E8  D009               	goto	l330
  3026                           
  3027                           ; BSR set to: 1
  3028                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3029  0010EA  0101               	movlb	1	; () banked
  3030  0010EC  6F58               	movwf	??_sprintf& (0+255),b
  3031  0010EE  0E08               	movlw	8
  3032  0010F0  0101               	movlb	1	; () banked
  3033  0010F2  0101               	movlb	1	; () banked
  3034  0010F4  6F7E               	movwf	sprintf@c& (0+255),b
  3035  0010F6  0101               	movlb	1	; () banked
  3036  0010F8  5158               	movf	??_sprintf& (0+255),w,b
  3037  0010FA  D002               	goto	l10358
  3038  0010FC                     l330:
  3039                           
  3040                           ; BSR set to: 1
  3041                           ;doprnt.c: 1220: else
  3042                           ;doprnt.c: 1221: c = prec;
  3043  0010FC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  3044  001100                     l10358:
  3045                           
  3046                           ; BSR set to: 1
  3047                           ;doprnt.c: 1222: prec -= c;
  3048  001100  0101               	movlb	1	; () banked
  3049  001102  0101               	movlb	1	; () banked
  3050  001104  517E               	movf	sprintf@c& (0+255),w,b
  3051  001106  0101               	movlb	1	; () banked
  3052  001108  0101               	movlb	1	; () banked
  3053  00110A  5F7C               	subwf	sprintf@prec& (0+255),f,b
  3054  00110C  0E00               	movlw	0
  3055  00110E  0101               	movlb	1	; () banked
  3056  001110  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3057  001112  0EFF               	movlw	255
  3058  001114  0101               	movlb	1	; () banked
  3059  001116  0101               	movlb	1	; () banked
  3060  001118  5B7D               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3061                           
  3062                           ; BSR set to: 1
  3063                           ;doprnt.c: 1226: if(c)
  3064  00111A  0101               	movlb	1	; () banked
  3065  00111C  0101               	movlb	1	; () banked
  3066  00111E  517E               	movf	sprintf@c& (0+255),w,b
  3067  001120  B4D8               	btfsc	status,2,c
  3068  001122  D00A               	goto	l10366
  3069                           
  3070                           ; BSR set to: 1
  3071                           ;doprnt.c: 1228: ((*sp++ = ('.')));
  3072  001124  C151  FFD9         	movff	sprintf@sp,fsr2l
  3073  001128  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3074  00112C  0E2E               	movlw	46
  3075  00112E  6EDF               	movwf	indf2,c
  3076                           
  3077                           ; BSR set to: 1
  3078  001130  0101               	movlb	1	; () banked
  3079  001132  0101               	movlb	1	; () banked
  3080  001134  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3081  001136  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3082  001138                     l10366:
  3083                           
  3084                           ; BSR set to: 1
  3085                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  3086  001138  C17E  F127         	movff	sprintf@c,?_scale
  3087  00113C  EC0A  F012         	call	_scale	;wreg free
  3088  001140  C129  F160         	movff	?_scale+2,_sprintf$1207+2
  3089  001144  C128  F15F         	movff	?_scale+1,_sprintf$1207+1
  3090  001148  C127  F15E         	movff	?_scale,_sprintf$1207
  3091                           
  3092                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  3093  00114C  C179  F119         	movff	sprintf@fval,?___ftmul+3
  3094  001150  C17A  F11A         	movff	sprintf@fval+1,?___ftmul+4
  3095  001154  C17B  F11B         	movff	sprintf@fval+2,?___ftmul+5
  3096  001158  C15E  F116         	movff	_sprintf$1207,?___ftmul
  3097  00115C  C15F  F117         	movff	_sprintf$1207+1,?___ftmul+1
  3098  001160  C160  F118         	movff	_sprintf$1207+2,?___ftmul+2
  3099  001164  ECE1  F01C         	call	___ftmul	;wreg free
  3100  001168  C118  F135         	movff	?___ftmul+2,?___fttol+2
  3101  00116C  C117  F134         	movff	?___ftmul+1,?___fttol+1
  3102  001170  C116  F133         	movff	?___ftmul,?___fttol
  3103  001174  EC70  F021         	call	___fttol	;wreg free
  3104  001178  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  3105  00117C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  3106  001180  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  3107  001184  C133  F16E         	movff	?___fttol,sprintf@_val
  3108                           
  3109                           ;doprnt.c: 1235: while(c--) {
  3110  001188  D074               	goto	l10380
  3111  00118A                     l10370:
  3112                           
  3113                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
  3114  00118A  C16E  F100         	movff	sprintf@_val,?___lldiv
  3115  00118E  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  3116  001192  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  3117  001196  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  3118  00119A  0101               	movlb	1	; () banked
  3119  00119C  0101               	movlb	1	; () banked
  3120  00119E  517E               	movf	sprintf@c& (0+255),w,b
  3121  0011A0  0D04               	mullw	4
  3122  0011A2  0E00               	movlw	low _dpowers
  3123  0011A4  24F3               	addwf	prodl,w,c
  3124  0011A6  6EF6               	movwf	tblptrl,c
  3125  0011A8  0E08               	movlw	high _dpowers
  3126  0011AA  20F4               	addwfc	prodh,w,c
  3127  0011AC  6EF7               	movwf	tblptrh,c
  3128  0011AE  0009               	tblrd		*+
  3129  0011B0  0101               	movlb	1	; () banked
  3130  0011B2  CFF5 F104          	movff	tablat,?___lldiv+4
  3131  0011B6  0009               	tblrd		*+
  3132  0011B8  0101               	movlb	1	; () banked
  3133  0011BA  CFF5 F105          	movff	tablat,?___lldiv+5
  3134  0011BE  0009               	tblrd		*+
  3135  0011C0  0101               	movlb	1	; () banked
  3136  0011C2  CFF5 F106          	movff	tablat,?___lldiv+6
  3137  0011C6  000A               	tblrd		*-
  3138  0011C8  0101               	movlb	1	; () banked
  3139  0011CA  CFF5 F107          	movff	tablat,?___lldiv+7
  3140  0011CE  EC0C  F025         	call	___lldiv	;wreg free
  3141  0011D2  C100  F167         	movff	?___lldiv,sprintf@vd_568
  3142  0011D6  C101  F168         	movff	?___lldiv+1,sprintf@vd_568+1
  3143                           
  3144                           ;doprnt.c: 1237: vd %= 10;
  3145  0011DA  C167  F100         	movff	sprintf@vd_568,?___lwmod
  3146  0011DE  C168  F101         	movff	sprintf@vd_568+1,?___lwmod+1
  3147  0011E2  0E00               	movlw	0
  3148  0011E4  0101               	movlb	1	; () banked
  3149  0011E6  0101               	movlb	1	; () banked
  3150  0011E8  6F03               	movwf	(?___lwmod+3)& (0+255),b
  3151  0011EA  0E0A               	movlw	10
  3152  0011EC  0101               	movlb	1	; () banked
  3153  0011EE  6F02               	movwf	(?___lwmod+2)& (0+255),b
  3154  0011F0  ECA1  F02C         	call	___lwmod	;wreg free
  3155  0011F4  0101               	movlb	1	; () banked
  3156  0011F6  C100  F167         	movff	?___lwmod,sprintf@vd_568
  3157  0011FA  0101               	movlb	1	; () banked
  3158  0011FC  C101  F168         	movff	?___lwmod+1,sprintf@vd_568+1
  3159                           
  3160                           ; BSR set to: 1
  3161                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
  3162  001200  0101               	movlb	1	; () banked
  3163  001202  0101               	movlb	1	; () banked
  3164  001204  5167               	movf	sprintf@vd_568& (0+255),w,b
  3165  001206  0F30               	addlw	48
  3166  001208  C151  FFD9         	movff	sprintf@sp,fsr2l
  3167  00120C  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3168  001210  6EDF               	movwf	indf2,c
  3169                           
  3170                           ; BSR set to: 1
  3171  001212  0101               	movlb	1	; () banked
  3172  001214  0101               	movlb	1	; () banked
  3173  001216  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3174  001218  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3175                           
  3176                           ; BSR set to: 1
  3177                           ;doprnt.c: 1239: _val._val %= dpowers[c];
  3178  00121A  C16E  F10E         	movff	sprintf@_val,?___llmod
  3179  00121E  C16F  F10F         	movff	sprintf@_val+1,?___llmod+1
  3180  001222  C170  F110         	movff	sprintf@_val+2,?___llmod+2
  3181  001226  C171  F111         	movff	sprintf@_val+3,?___llmod+3
  3182  00122A  0101               	movlb	1	; () banked
  3183  00122C  0101               	movlb	1	; () banked
  3184  00122E  517E               	movf	sprintf@c& (0+255),w,b
  3185  001230  0D04               	mullw	4
  3186  001232  0E00               	movlw	low _dpowers
  3187  001234  24F3               	addwf	prodl,w,c
  3188  001236  6EF6               	movwf	tblptrl,c
  3189  001238  0E08               	movlw	high _dpowers
  3190  00123A  20F4               	addwfc	prodh,w,c
  3191  00123C  6EF7               	movwf	tblptrh,c
  3192  00123E  0009               	tblrd		*+
  3193  001240  0101               	movlb	1	; () banked
  3194  001242  CFF5 F112          	movff	tablat,?___llmod+4
  3195  001246  0009               	tblrd		*+
  3196  001248  0101               	movlb	1	; () banked
  3197  00124A  CFF5 F113          	movff	tablat,?___llmod+5
  3198  00124E  0009               	tblrd		*+
  3199  001250  0101               	movlb	1	; () banked
  3200  001252  CFF5 F114          	movff	tablat,?___llmod+6
  3201  001256  000A               	tblrd		*-
  3202  001258  0101               	movlb	1	; () banked
  3203  00125A  CFF5 F115          	movff	tablat,?___llmod+7
  3204  00125E  EC4A  F029         	call	___llmod	;wreg free
  3205  001262  C111  F171         	movff	?___llmod+3,sprintf@_val+3
  3206  001266  C110  F170         	movff	?___llmod+2,sprintf@_val+2
  3207  00126A  C10F  F16F         	movff	?___llmod+1,sprintf@_val+1
  3208  00126E  C10E  F16E         	movff	?___llmod,sprintf@_val
  3209  001272                     l10380:
  3210  001272  0101               	movlb	1	; () banked
  3211  001274  0101               	movlb	1	; () banked
  3212  001276  077E               	decf	sprintf@c& (0+255),f,b
  3213  001278  0101               	movlb	1	; () banked
  3214  00127A  297E               	incf	sprintf@c& (0+255),w,b
  3215  00127C  B4D8               	btfsc	status,2,c
  3216  00127E  D010               	goto	l10388
  3217  001280  D784               	goto	l10370
  3218  001282                     l10382:
  3219                           
  3220                           ; BSR set to: 1
  3221                           ;doprnt.c: 1243: ((*sp++ = ('0')));
  3222  001282  C151  FFD9         	movff	sprintf@sp,fsr2l
  3223  001286  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3224  00128A  0E30               	movlw	48
  3225  00128C  6EDF               	movwf	indf2,c
  3226                           
  3227                           ; BSR set to: 1
  3228  00128E  0101               	movlb	1	; () banked
  3229  001290  0101               	movlb	1	; () banked
  3230  001292  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3231  001294  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3232                           
  3233                           ; BSR set to: 1
  3234                           ;doprnt.c: 1244: prec--;
  3235  001296  0101               	movlb	1	; () banked
  3236  001298  0101               	movlb	1	; () banked
  3237  00129A  077C               	decf	sprintf@prec& (0+255),f,b
  3238  00129C  A0D8               	btfss	status,0,c
  3239  00129E  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3240  0012A0                     l10388:
  3241                           
  3242                           ; BSR set to: 1
  3243  0012A0  0101               	movlb	1	; () banked
  3244  0012A2  0101               	movlb	1	; () banked
  3245  0012A4  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3246  0012A6  117C               	iorwf	sprintf@prec& (0+255),w,b
  3247  0012A8  B4D8               	btfsc	status,2,c
  3248  0012AA  D1E6               	goto	l10486
  3249  0012AC  D7EA               	goto	l10382
  3250  0012AE                     l10390:
  3251                           
  3252                           ; BSR set to: 1
  3253                           ;doprnt.c: 1253: }
  3254                           ;doprnt.c: 1260: {
  3255                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3256  0012AE  C169  FFD9         	movff	sprintf@ap,fsr2l
  3257  0012B2  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  3258  0012B6  0101               	movlb	1	; () banked
  3259  0012B8  CFDE F16E          	movff	postinc2,sprintf@_val
  3260  0012BC  0101               	movlb	1	; () banked
  3261  0012BE  CFDD F16F          	movff	postdec2,sprintf@_val+1
  3262  0012C2  0101               	movlb	1	; () banked
  3263  0012C4  0E00               	movlw	0
  3264  0012C6  0101               	movlb	1	; () banked
  3265  0012C8  BF6F               	btfsc	(sprintf@_val+1)& (0+255),7,b
  3266  0012CA  0EFF               	movlw	-1
  3267  0012CC  0101               	movlb	1	; () banked
  3268  0012CE  6F70               	movwf	(sprintf@_val+2)& (0+255),b
  3269  0012D0  0101               	movlb	1	; () banked
  3270  0012D2  6F71               	movwf	(sprintf@_val+3)& (0+255),b
  3271                           
  3272                           ; BSR set to: 1
  3273  0012D4  0E02               	movlw	2
  3274  0012D6  0101               	movlb	1	; () banked
  3275  0012D8  0101               	movlb	1	; () banked
  3276  0012DA  2769               	addwf	sprintf@ap& (0+255),f,b
  3277  0012DC  0E00               	movlw	0
  3278  0012DE  0101               	movlb	1	; () banked
  3279  0012E0  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3280                           
  3281                           ; BSR set to: 1
  3282                           ;doprnt.c: 1268: if((long)_val._val < 0) {
  3283  0012E2  0101               	movlb	1	; () banked
  3284  0012E4  0101               	movlb	1	; () banked
  3285  0012E6  AF71               	btfss	(sprintf@_val+3)& (0+255),7,b
  3286  0012E8  D014               	goto	l10400
  3287                           
  3288                           ; BSR set to: 1
  3289                           ;doprnt.c: 1269: flag |= 0x03;
  3290  0012EA  0E03               	movlw	3
  3291  0012EC  0101               	movlb	1	; () banked
  3292  0012EE  0101               	movlb	1	; () banked
  3293  0012F0  1373               	iorwf	sprintf@flag& (0+255),f,b
  3294                           
  3295                           ; BSR set to: 1
  3296                           ;doprnt.c: 1270: _val._val = -_val._val;
  3297  0012F2  0101               	movlb	1	; () banked
  3298  0012F4  0101               	movlb	1	; () banked
  3299  0012F6  1F71               	comf	(sprintf@_val+3)& (0+255),f,b
  3300  0012F8  0101               	movlb	1	; () banked
  3301  0012FA  1F70               	comf	(sprintf@_val+2)& (0+255),f,b
  3302  0012FC  0101               	movlb	1	; () banked
  3303  0012FE  1F6F               	comf	(sprintf@_val+1)& (0+255),f,b
  3304  001300  0101               	movlb	1	; () banked
  3305  001302  6D6E               	negf	sprintf@_val& (0+255),b
  3306  001304  0E00               	movlw	0
  3307  001306  0101               	movlb	1	; () banked
  3308  001308  236F               	addwfc	(sprintf@_val+1)& (0+255),f,b
  3309  00130A  0101               	movlb	1	; () banked
  3310  00130C  2370               	addwfc	(sprintf@_val+2)& (0+255),f,b
  3311  00130E  0101               	movlb	1	; () banked
  3312  001310  2371               	addwfc	(sprintf@_val+3)& (0+255),f,b
  3313  001312                     l10400:
  3314                           
  3315                           ; BSR set to: 1
  3316                           ;doprnt.c: 1271: }
  3317                           ;doprnt.c: 1273: }
  3318                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
  3319  001312  0101               	movlb	1	; () banked
  3320  001314  0101               	movlb	1	; () banked
  3321  001316  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3322  001318  117C               	iorwf	sprintf@prec& (0+255),w,b
  3323  00131A  A4D8               	btfss	status,2,c
  3324  00131C  D00C               	goto	l10406
  3325                           
  3326                           ; BSR set to: 1
  3327  00131E  0101               	movlb	1	; () banked
  3328  001320  0101               	movlb	1	; () banked
  3329  001322  5171               	movf	(sprintf@_val+3)& (0+255),w,b
  3330  001324  116E               	iorwf	sprintf@_val& (0+255),w,b
  3331  001326  116F               	iorwf	(sprintf@_val+1)& (0+255),w,b
  3332  001328  1170               	iorwf	(sprintf@_val+2)& (0+255),w,b
  3333  00132A  A4D8               	btfss	status,2,c
  3334  00132C  D004               	goto	l10406
  3335                           
  3336                           ; BSR set to: 1
  3337                           ;doprnt.c: 1298: prec++;
  3338  00132E  0101               	movlb	1	; () banked
  3339  001330  0101               	movlb	1	; () banked
  3340  001332  4B7C               	infsnz	sprintf@prec& (0+255),f,b
  3341  001334  2B7D               	incf	(sprintf@prec+1)& (0+255),f,b
  3342  001336                     l10406:
  3343                           
  3344                           ; BSR set to: 1
  3345                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3346  001336  0101               	movlb	1	; () banked
  3347  001338  6F58               	movwf	??_sprintf& (0+255),b
  3348  00133A  0E01               	movlw	1
  3349  00133C  0101               	movlb	1	; () banked
  3350  00133E  0101               	movlb	1	; () banked
  3351  001340  6F7E               	movwf	sprintf@c& (0+255),b
  3352  001342  0101               	movlb	1	; () banked
  3353  001344  5158               	movf	??_sprintf& (0+255),w,b
  3354  001346                     
  3355                           ; BSR set to: 1
  3356  001346  0101               	movlb	1	; () banked
  3357  001348  0101               	movlb	1	; () banked
  3358  00134A  517E               	movf	sprintf@c& (0+255),w,b
  3359  00134C  0A0A               	xorlw	10
  3360  00134E  B4D8               	btfsc	status,2,c
  3361  001350  D021               	goto	l10420
  3362                           
  3363                           ; BSR set to: 1
  3364                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  3365                           
  3366                           ; BSR set to: 1
  3367                           
  3368                           ; BSR set to: 1
  3369  001352  0101               	movlb	1	; () banked
  3370  001354  0101               	movlb	1	; () banked
  3371  001356  517E               	movf	sprintf@c& (0+255),w,b
  3372  001358  0D04               	mullw	4
  3373  00135A  0E00               	movlw	low _dpowers
  3374  00135C  24F3               	addwf	prodl,w,c
  3375  00135E  6EF6               	movwf	tblptrl,c
  3376  001360  0E08               	movlw	high _dpowers
  3377  001362  20F4               	addwfc	prodh,w,c
  3378  001364  6EF7               	movwf	tblptrh,c
  3379  001366  0009               	tblrd		*+
  3380  001368  50F5               	movf	tablat,w,c
  3381  00136A  0101               	movlb	1	; () banked
  3382  00136C  0101               	movlb	1	; () banked
  3383  00136E  5D6E               	subwf	sprintf@_val& (0+255),w,b
  3384  001370  0009               	tblrd		*+
  3385  001372  50F5               	movf	tablat,w,c
  3386  001374  0101               	movlb	1	; () banked
  3387  001376  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3388  001378  0009               	tblrd		*+
  3389  00137A  50F5               	movf	tablat,w,c
  3390  00137C  0101               	movlb	1	; () banked
  3391  00137E  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3392  001380  0009               	tblrd		*+
  3393  001382  50F5               	movf	tablat,w,c
  3394  001384  0101               	movlb	1	; () banked
  3395  001386  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3396  001388  A0D8               	btfss	status,0,c
  3397  00138A  D004               	goto	l10420
  3398                           
  3399                           ; BSR set to: 1
  3400                           
  3401                           ; BSR set to: 1
  3402                           
  3403                           ; BSR set to: 1
  3404                           ;doprnt.c: 1314: break;
  3405  00138C  0101               	movlb	1	; () banked
  3406  00138E  0101               	movlb	1	; () banked
  3407  001390  2B7E               	incf	sprintf@c& (0+255),f,b
  3408  001392  D7D9               	goto	L4
  3409  001394                     l10420:
  3410                           
  3411                           ; BSR set to: 1
  3412                           ;doprnt.c: 1346: if(c < prec)
  3413  001394  0E80               	movlw	128
  3414  001396  0101               	movlb	1	; () banked
  3415  001398  0101               	movlb	1	; () banked
  3416  00139A  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3417  00139C  0E7F               	movlw	127
  3418  00139E  6F58               	movwf	??_sprintf& (0+255),b
  3419  0013A0  0101               	movlb	1	; () banked
  3420  0013A2  0101               	movlb	1	; () banked
  3421  0013A4  517C               	movf	sprintf@prec& (0+255),w,b
  3422  0013A6  0101               	movlb	1	; () banked
  3423  0013A8  0101               	movlb	1	; () banked
  3424  0013AA  5D7E               	subwf	sprintf@c& (0+255),w,b
  3425  0013AC  0101               	movlb	1	; () banked
  3426  0013AE  0101               	movlb	1	; () banked
  3427  0013B0  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3428  0013B2  0A80               	xorlw	128
  3429  0013B4  0101               	movlb	1	; () banked
  3430  0013B6  5958               	subwfb	??_sprintf& (0+255),w,b
  3431  0013B8  B0D8               	btfsc	status,0,c
  3432  0013BA  D003               	goto	l10424
  3433                           
  3434                           ; BSR set to: 1
  3435                           ;doprnt.c: 1347: c = prec;
  3436  0013BC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  3437  0013C0  D020               	goto	l10428
  3438  0013C2                     l10424:
  3439                           
  3440                           ; BSR set to: 1
  3441                           ;doprnt.c: 1348: else if(prec < c)
  3442  0013C2  0101               	movlb	1	; () banked
  3443  0013C4  0101               	movlb	1	; () banked
  3444  0013C6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3445  0013C8  0A80               	xorlw	128
  3446  0013CA  0101               	movlb	1	; () banked
  3447  0013CC  6F58               	movwf	??_sprintf& (0+255),b
  3448  0013CE  0101               	movlb	1	; () banked
  3449  0013D0  0101               	movlb	1	; () banked
  3450  0013D2  517E               	movf	sprintf@c& (0+255),w,b
  3451  0013D4  0101               	movlb	1	; () banked
  3452  0013D6  0101               	movlb	1	; () banked
  3453  0013D8  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3454  0013DA  0E80               	movlw	128
  3455  0013DC  0101               	movlb	1	; () banked
  3456  0013DE  0101               	movlb	1	; () banked
  3457  0013E0  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3458  0013E2  0E7F               	movlw	127
  3459  0013E4  0101               	movlb	1	; () banked
  3460  0013E6  5958               	subwfb	??_sprintf& (0+255),w,b
  3461  0013E8  B0D8               	btfsc	status,0,c
  3462  0013EA  D00B               	goto	l10428
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;doprnt.c: 1349: prec = c;
  3466  0013EC  0101               	movlb	1	; () banked
  3467  0013EE  0101               	movlb	1	; () banked
  3468  0013F0  517E               	movf	sprintf@c& (0+255),w,b
  3469  0013F2  0101               	movlb	1	; () banked
  3470  0013F4  0101               	movlb	1	; () banked
  3471  0013F6  6F7C               	movwf	sprintf@prec& (0+255),b
  3472  0013F8  0101               	movlb	1	; () banked
  3473  0013FA  6B7D               	clrf	(sprintf@prec+1)& (0+255),b
  3474  0013FC  0101               	movlb	1	; () banked
  3475  0013FE  BF7C               	btfsc	sprintf@prec& (0+255),7,b
  3476  001400  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3477  001402                     l10428:
  3478                           
  3479                           ; BSR set to: 1
  3480                           ;doprnt.c: 1352: if(width && flag & 0x03)
  3481  001402  0101               	movlb	1	; () banked
  3482  001404  0101               	movlb	1	; () banked
  3483  001406  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3484  001408  1177               	iorwf	sprintf@width& (0+255),w,b
  3485  00140A  B4D8               	btfsc	status,2,c
  3486  00140C  D016               	goto	l10434
  3487                           
  3488                           ; BSR set to: 1
  3489  00140E  0E03               	movlw	3
  3490  001410  0101               	movlb	1	; () banked
  3491  001412  0101               	movlb	1	; () banked
  3492  001414  1573               	andwf	sprintf@flag& (0+255),w,b
  3493  001416  0101               	movlb	1	; () banked
  3494  001418  6F58               	movwf	??_sprintf& (0+255),b
  3495  00141A  0E00               	movlw	0
  3496  00141C  0101               	movlb	1	; () banked
  3497  00141E  0101               	movlb	1	; () banked
  3498  001420  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3499  001422  0101               	movlb	1	; () banked
  3500  001424  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3501  001426  0101               	movlb	1	; () banked
  3502  001428  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3503  00142A  1158               	iorwf	??_sprintf& (0+255),w,b
  3504  00142C  B4D8               	btfsc	status,2,c
  3505  00142E  D005               	goto	l10434
  3506                           
  3507                           ; BSR set to: 1
  3508                           ;doprnt.c: 1353: width--;
  3509  001430  0101               	movlb	1	; () banked
  3510  001432  0101               	movlb	1	; () banked
  3511  001434  0777               	decf	sprintf@width& (0+255),f,b
  3512  001436  A0D8               	btfss	status,0,c
  3513  001438  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3514  00143A                     l10434:
  3515                           
  3516                           ; BSR set to: 1
  3517                           ;doprnt.c: 1355: if(flag & 0x4000) {
  3518  00143A  0101               	movlb	1	; () banked
  3519  00143C  0101               	movlb	1	; () banked
  3520  00143E  AD74               	btfss	(sprintf@flag+1)& (0+255),6,b
  3521  001440  D028               	goto	l10442
  3522                           
  3523                           ; BSR set to: 1
  3524                           ;doprnt.c: 1356: if(width > prec)
  3525  001442  0101               	movlb	1	; () banked
  3526  001444  0101               	movlb	1	; () banked
  3527  001446  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3528  001448  0A80               	xorlw	128
  3529  00144A  0101               	movlb	1	; () banked
  3530  00144C  6F58               	movwf	??_sprintf& (0+255),b
  3531  00144E  0101               	movlb	1	; () banked
  3532  001450  0101               	movlb	1	; () banked
  3533  001452  5177               	movf	sprintf@width& (0+255),w,b
  3534  001454  0101               	movlb	1	; () banked
  3535  001456  0101               	movlb	1	; () banked
  3536  001458  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3537  00145A  0101               	movlb	1	; () banked
  3538  00145C  0101               	movlb	1	; () banked
  3539  00145E  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3540  001460  0A80               	xorlw	128
  3541  001462  0101               	movlb	1	; () banked
  3542  001464  5958               	subwfb	??_sprintf& (0+255),w,b
  3543  001466  B0D8               	btfsc	status,0,c
  3544  001468  D00D               	goto	l10440
  3545                           
  3546                           ; BSR set to: 1
  3547                           ;doprnt.c: 1357: width -= prec;
  3548  00146A  0101               	movlb	1	; () banked
  3549  00146C  0101               	movlb	1	; () banked
  3550  00146E  517C               	movf	sprintf@prec& (0+255),w,b
  3551  001470  0101               	movlb	1	; () banked
  3552  001472  0101               	movlb	1	; () banked
  3553  001474  5F77               	subwf	sprintf@width& (0+255),f,b
  3554  001476  0101               	movlb	1	; () banked
  3555  001478  0101               	movlb	1	; () banked
  3556  00147A  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3557  00147C  0101               	movlb	1	; () banked
  3558  00147E  0101               	movlb	1	; () banked
  3559  001480  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  3560  001482  D007               	goto	l10442
  3561  001484                     l10440:
  3562                           
  3563                           ; BSR set to: 1
  3564                           ;doprnt.c: 1358: else
  3565                           ;doprnt.c: 1359: width = 0;
  3566  001484  0E00               	movlw	0
  3567  001486  0101               	movlb	1	; () banked
  3568  001488  0101               	movlb	1	; () banked
  3569  00148A  6F78               	movwf	(sprintf@width+1)& (0+255),b
  3570  00148C  0E00               	movlw	0
  3571  00148E  0101               	movlb	1	; () banked
  3572  001490  6F77               	movwf	sprintf@width& (0+255),b
  3573  001492                     l10442:
  3574                           
  3575                           ; BSR set to: 1
  3576                           ;doprnt.c: 1360: }
  3577                           ;doprnt.c: 1388: if(width > c)
  3578  001492  0E80               	movlw	128
  3579  001494  0101               	movlb	1	; () banked
  3580  001496  0101               	movlb	1	; () banked
  3581  001498  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3582  00149A  0E7F               	movlw	127
  3583  00149C  6F58               	movwf	??_sprintf& (0+255),b
  3584  00149E  0101               	movlb	1	; () banked
  3585  0014A0  0101               	movlb	1	; () banked
  3586  0014A2  5177               	movf	sprintf@width& (0+255),w,b
  3587  0014A4  0101               	movlb	1	; () banked
  3588  0014A6  0101               	movlb	1	; () banked
  3589  0014A8  5D7E               	subwf	sprintf@c& (0+255),w,b
  3590  0014AA  0101               	movlb	1	; () banked
  3591  0014AC  0101               	movlb	1	; () banked
  3592  0014AE  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3593  0014B0  0A80               	xorlw	128
  3594  0014B2  0101               	movlb	1	; () banked
  3595  0014B4  5958               	subwfb	??_sprintf& (0+255),w,b
  3596  0014B6  B0D8               	btfsc	status,0,c
  3597  0014B8  D00E               	goto	l10446
  3598                           
  3599                           ; BSR set to: 1
  3600                           ;doprnt.c: 1389: width -= c;
  3601  0014BA  0101               	movlb	1	; () banked
  3602  0014BC  0101               	movlb	1	; () banked
  3603  0014BE  517E               	movf	sprintf@c& (0+255),w,b
  3604  0014C0  0101               	movlb	1	; () banked
  3605  0014C2  0101               	movlb	1	; () banked
  3606  0014C4  5F77               	subwf	sprintf@width& (0+255),f,b
  3607  0014C6  0E00               	movlw	0
  3608  0014C8  0101               	movlb	1	; () banked
  3609  0014CA  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3610  0014CC  0EFF               	movlw	255
  3611  0014CE  0101               	movlb	1	; () banked
  3612  0014D0  0101               	movlb	1	; () banked
  3613  0014D2  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  3614  0014D4  D007               	goto	l10448
  3615  0014D6                     l10446:
  3616                           
  3617                           ; BSR set to: 1
  3618                           ;doprnt.c: 1390: else
  3619                           ;doprnt.c: 1391: width = 0;
  3620  0014D6  0E00               	movlw	0
  3621  0014D8  0101               	movlb	1	; () banked
  3622  0014DA  0101               	movlb	1	; () banked
  3623  0014DC  6F78               	movwf	(sprintf@width+1)& (0+255),b
  3624  0014DE  0E00               	movlw	0
  3625  0014E0  0101               	movlb	1	; () banked
  3626  0014E2  6F77               	movwf	sprintf@width& (0+255),b
  3627  0014E4                     l10448:
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;doprnt.c: 1394: if(flag & 0x04) {
  3631  0014E4  0101               	movlb	1	; () banked
  3632  0014E6  0101               	movlb	1	; () banked
  3633  0014E8  A573               	btfss	sprintf@flag& (0+255),2,b
  3634  0014EA  D031               	goto	l10464
  3635                           
  3636                           ; BSR set to: 1
  3637                           ;doprnt.c: 1399: if(flag & 0x03)
  3638  0014EC  0E03               	movlw	3
  3639  0014EE  0101               	movlb	1	; () banked
  3640  0014F0  0101               	movlb	1	; () banked
  3641  0014F2  1573               	andwf	sprintf@flag& (0+255),w,b
  3642  0014F4  0101               	movlb	1	; () banked
  3643  0014F6  6F58               	movwf	??_sprintf& (0+255),b
  3644  0014F8  0E00               	movlw	0
  3645  0014FA  0101               	movlb	1	; () banked
  3646  0014FC  0101               	movlb	1	; () banked
  3647  0014FE  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3648  001500  0101               	movlb	1	; () banked
  3649  001502  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3650  001504  0101               	movlb	1	; () banked
  3651  001506  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3652  001508  1158               	iorwf	??_sprintf& (0+255),w,b
  3653  00150A  B4D8               	btfsc	status,2,c
  3654  00150C  D00A               	goto	l10456
  3655                           
  3656                           ; BSR set to: 1
  3657                           ;doprnt.c: 1400: ((*sp++ = ('-')));
  3658  00150E  C151  FFD9         	movff	sprintf@sp,fsr2l
  3659  001512  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3660  001516  0E2D               	movlw	45
  3661  001518  6EDF               	movwf	indf2,c
  3662                           
  3663                           ; BSR set to: 1
  3664  00151A  0101               	movlb	1	; () banked
  3665  00151C  0101               	movlb	1	; () banked
  3666  00151E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3667  001520  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3668  001522                     l10456:
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;doprnt.c: 1422: if(width)
  3672  001522  0101               	movlb	1	; () banked
  3673  001524  0101               	movlb	1	; () banked
  3674  001526  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3675  001528  1177               	iorwf	sprintf@width& (0+255),w,b
  3676  00152A  B4D8               	btfsc	status,2,c
  3677  00152C  D09A               	goto	l10484
  3678                           
  3679                           ; BSR set to: 1
  3680                           ;doprnt.c: 1424: ((*sp++ = ('0')));
  3681                           
  3682                           ; BSR set to: 1
  3683                           
  3684                           ;doprnt.c: 1423: do
  3685  00152E  C151  FFD9         	movff	sprintf@sp,fsr2l
  3686  001532  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3687  001536  0E30               	movlw	48
  3688  001538  6EDF               	movwf	indf2,c
  3689                           
  3690                           ; BSR set to: 1
  3691  00153A  0101               	movlb	1	; () banked
  3692  00153C  0101               	movlb	1	; () banked
  3693  00153E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3694  001540  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;doprnt.c: 1425: while(--width);
  3698  001542  0101               	movlb	1	; () banked
  3699  001544  0101               	movlb	1	; () banked
  3700  001546  0777               	decf	sprintf@width& (0+255),f,b
  3701  001548  A0D8               	btfss	status,0,c
  3702  00154A  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3703  00154C  D7EB               	goto	L6
  3704  00154E                     l10464:
  3705                           
  3706                           ; BSR set to: 1
  3707                           ;doprnt.c: 1429: {
  3708                           ;doprnt.c: 1431: if(width
  3709                           ;doprnt.c: 1435: )
  3710  00154E  0101               	movlb	1	; () banked
  3711  001550  0101               	movlb	1	; () banked
  3712  001552  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3713  001554  1177               	iorwf	sprintf@width& (0+255),w,b
  3714  001556  B4D8               	btfsc	status,2,c
  3715  001558  D014               	goto	l10472
  3716  00155A                     l10466:
  3717                           
  3718                           ; BSR set to: 1
  3719                           ;doprnt.c: 1437: ((*sp++ = (' ')));
  3720  00155A  C151  FFD9         	movff	sprintf@sp,fsr2l
  3721  00155E  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3722  001562  0E20               	movlw	32
  3723  001564  6EDF               	movwf	indf2,c
  3724                           
  3725                           ; BSR set to: 1
  3726  001566  0101               	movlb	1	; () banked
  3727  001568  0101               	movlb	1	; () banked
  3728  00156A  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3729  00156C  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3730                           
  3731                           ; BSR set to: 1
  3732                           ;doprnt.c: 1438: while(--width);
  3733  00156E  0101               	movlb	1	; () banked
  3734  001570  0101               	movlb	1	; () banked
  3735  001572  0777               	decf	sprintf@width& (0+255),f,b
  3736  001574  A0D8               	btfss	status,0,c
  3737  001576  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3738  001578  0101               	movlb	1	; () banked
  3739  00157A  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3740  00157C  1177               	iorwf	sprintf@width& (0+255),w,b
  3741  00157E  A4D8               	btfss	status,2,c
  3742  001580  D7EC               	goto	l10466
  3743  001582                     l10472:
  3744                           
  3745                           ; BSR set to: 1
  3746                           ;doprnt.c: 1445: if(flag & 0x03)
  3747  001582  0E03               	movlw	3
  3748  001584  0101               	movlb	1	; () banked
  3749  001586  0101               	movlb	1	; () banked
  3750  001588  1573               	andwf	sprintf@flag& (0+255),w,b
  3751  00158A  0101               	movlb	1	; () banked
  3752  00158C  6F58               	movwf	??_sprintf& (0+255),b
  3753  00158E  0E00               	movlw	0
  3754  001590  0101               	movlb	1	; () banked
  3755  001592  0101               	movlb	1	; () banked
  3756  001594  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3757  001596  0101               	movlb	1	; () banked
  3758  001598  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3759  00159A  0101               	movlb	1	; () banked
  3760  00159C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3761  00159E  1158               	iorwf	??_sprintf& (0+255),w,b
  3762  0015A0  B4D8               	btfsc	status,2,c
  3763  0015A2  D05F               	goto	l10484
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  3767  0015A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  3768  0015A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3769  0015AC  0E2D               	movlw	45
  3770  0015AE  6EDF               	movwf	indf2,c
  3771  0015B0  D054               	goto	L5
  3772  0015B2                     l10478:
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;doprnt.c: 1485: {
  3776                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  3777  0015B2  0101               	movlb	1	; () banked
  3778  0015B4  C17C  F158         	movff	sprintf@prec,??_sprintf
  3779  0015B8  0101               	movlb	1	; () banked
  3780  0015BA  C17D  F159         	movff	sprintf@prec+1,??_sprintf+1
  3781  0015BE  0101               	movlb	1	; () banked
  3782  0015C0  90D8               	bcf	status,0,c
  3783  0015C2  3758               	rlcf	??_sprintf& (0+255),f,b
  3784  0015C4  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  3785  0015C6  0101               	movlb	1	; () banked
  3786  0015C8  90D8               	bcf	status,0,c
  3787  0015CA  3758               	rlcf	??_sprintf& (0+255),f,b
  3788  0015CC  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  3789  0015CE  0E00               	movlw	low _dpowers
  3790  0015D0  0101               	movlb	1	; () banked
  3791  0015D2  2558               	addwf	??_sprintf& (0+255),w,b
  3792  0015D4  6EF6               	movwf	tblptrl,c
  3793  0015D6  0E08               	movlw	high _dpowers
  3794  0015D8  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  3795  0015DA  6EF7               	movwf	tblptrh,c
  3796  0015DC  0009               	tblrd		*+
  3797  0015DE  0101               	movlb	1	; () banked
  3798  0015E0  CFF5 F104          	movff	tablat,?___lldiv+4
  3799  0015E4  0009               	tblrd		*+
  3800  0015E6  0101               	movlb	1	; () banked
  3801  0015E8  CFF5 F105          	movff	tablat,?___lldiv+5
  3802  0015EC  0009               	tblrd		*+
  3803  0015EE  0101               	movlb	1	; () banked
  3804  0015F0  CFF5 F106          	movff	tablat,?___lldiv+6
  3805  0015F4  000A               	tblrd		*-
  3806  0015F6  0101               	movlb	1	; () banked
  3807  0015F8  CFF5 F107          	movff	tablat,?___lldiv+7
  3808  0015FC  C16E  F100         	movff	sprintf@_val,?___lldiv
  3809  001600  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  3810  001604  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  3811  001608  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  3812  00160C  EC0C  F025         	call	___lldiv	;wreg free
  3813  001610  C103  F111         	movff	?___lldiv+3,?___llmod+3
  3814  001614  C102  F110         	movff	?___lldiv+2,?___llmod+2
  3815  001618  C101  F10F         	movff	?___lldiv+1,?___llmod+1
  3816  00161C  C100  F10E         	movff	?___lldiv,?___llmod
  3817  001620  0E0A               	movlw	10
  3818  001622  0101               	movlb	1	; () banked
  3819  001624  0101               	movlb	1	; () banked
  3820  001626  6F12               	movwf	(?___llmod+4)& (0+255),b
  3821  001628  0E00               	movlw	0
  3822  00162A  0101               	movlb	1	; () banked
  3823  00162C  6F13               	movwf	(?___llmod+5)& (0+255),b
  3824  00162E  0E00               	movlw	0
  3825  001630  0101               	movlb	1	; () banked
  3826  001632  6F14               	movwf	(?___llmod+6)& (0+255),b
  3827  001634  0E00               	movlw	0
  3828  001636  0101               	movlb	1	; () banked
  3829  001638  6F15               	movwf	(?___llmod+7)& (0+255),b
  3830  00163A  EC4A  F029         	call	___llmod	;wreg free
  3831  00163E  0101               	movlb	1	; () banked
  3832  001640  0101               	movlb	1	; () banked
  3833  001642  510E               	movf	?___llmod& (0+255),w,b
  3834  001644  0F30               	addlw	48
  3835  001646  0101               	movlb	1	; () banked
  3836  001648  0101               	movlb	1	; () banked
  3837  00164A  6F7E               	movwf	sprintf@c& (0+255),b
  3838                           
  3839                           ; BSR set to: 1
  3840                           ;doprnt.c: 1530: }
  3841                           ;doprnt.c: 1531: ((*sp++ = (c)));
  3842  00164C  C151  FFD9         	movff	sprintf@sp,fsr2l
  3843  001650  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3844  001654  0101               	movlb	1	; () banked
  3845  001656  C17E  FFDF         	movff	sprintf@c,indf2
  3846  00165A                     L5:
  3847                           
  3848                           ; BSR set to: 1
  3849  00165A  0101               	movlb	1	; () banked
  3850  00165C  0101               	movlb	1	; () banked
  3851  00165E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3852  001660  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3853  001662                     l10484:
  3854                           
  3855                           ; BSR set to: 1
  3856  001662  0101               	movlb	1	; () banked
  3857  001664  0101               	movlb	1	; () banked
  3858  001666  077C               	decf	sprintf@prec& (0+255),f,b
  3859  001668  A0D8               	btfss	status,0,c
  3860  00166A  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3861  00166C  0101               	movlb	1	; () banked
  3862  00166E  297C               	incf	sprintf@prec& (0+255),w,b
  3863  001670  B4D8               	btfsc	status,2,c
  3864  001672  297D               	incf	(sprintf@prec+1)& (0+255),w,b
  3865  001674  A4D8               	btfss	status,2,c
  3866  001676  D79D               	goto	l10478
  3867  001678                     l10486:
  3868                           
  3869                           ; BSR set to: 1
  3870  001678  0101               	movlb	1	; () banked
  3871  00167A  C153  FFF6         	movff	sprintf@f,tblptrl
  3872  00167E  0101               	movlb	1	; () banked
  3873  001680  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3874  001684  0101               	movlb	1	; () banked
  3875  001686  0101               	movlb	1	; () banked
  3876  001688  4B53               	infsnz	sprintf@f& (0+255),f,b
  3877  00168A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  3878  00168C  0008               	tblrd		*
  3879  00168E  0101               	movlb	1	; () banked
  3880  001690  CFF5 F17E          	movff	tablat,sprintf@c
  3881  001694  0101               	movlb	1	; () banked
  3882  001696  677E               	tstfsz	sprintf@c& (0+255),b
  3883  001698  EF55  F004         	goto	l10162
  3884  00169C                     l10488:
  3885                           
  3886                           ; BSR set to: 1
  3887                           ;doprnt.c: 1545: *sp = 0;
  3888  00169C  C151  FFD9         	movff	sprintf@sp,fsr2l
  3889  0016A0  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3890  0016A4  0E00               	movlw	0
  3891  0016A6  6EDF               	movwf	indf2,c
  3892                           
  3893                           ; BSR set to: 1
  3894                           
  3895                           ; BSR set to: 1
  3896                           ;doprnt.c: 1547: return 0;
  3897                           ;	Return value of _sprintf is never used
  3898  0016A8  0012               	return	
  3899  0016AA                     __end_of_sprintf:
  3900                           	opt stack 0
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           postinc0	equ	0xFEE
  3908                           wreg	equ	0xFE8
  3909                           indf2	equ	0xFDF
  3910                           postinc2	equ	0xFDE
  3911                           postdec2	equ	0xFDD
  3912                           fsr2h	equ	0xFDA
  3913                           fsr2l	equ	0xFD9
  3914                           status	equ	0xFD8
  3915                           
  3916 ;; *************** function ___lwmod *****************
  3917 ;; Defined at:
  3918 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  dividend        2    0[BANK1 ] unsigned int 
  3921 ;;  divisor         2    2[BANK1 ] unsigned int 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  counter         1    5[BANK1 ] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2    0[BANK1 ] unsigned int 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3933 ;;      Params:         0       0       4       0       0       0       0       0       0
  3934 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3935 ;;      Temps:          0       0       1       0       0       0       0       0       0
  3936 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3937 ;;Total ram usage:        6 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:   10
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_sprintf
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text3
  3948  005942                     __ptext3:
  3949                           	opt stack 0
  3950  005942                     ___lwmod:
  3951                           	opt stack 18
  3952                           
  3953                           ; BSR set to: 1
  3954                           ;incstack = 0
  3955                           ;incstack = 0
  3956  005942  0101               	movlb	1	; () banked
  3957  005944  0101               	movlb	1	; () banked
  3958  005946  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3959  005948  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  3960  00594A  B4D8               	btfsc	status,2,c
  3961  00594C  D03A               	goto	l922
  3962                           
  3963                           ; BSR set to: 1
  3964  00594E  0101               	movlb	1	; () banked
  3965  005950  6F04               	movwf	??___lwmod& (0+255),b
  3966  005952  0E01               	movlw	1
  3967  005954  0101               	movlb	1	; () banked
  3968  005956  0101               	movlb	1	; () banked
  3969  005958  6F05               	movwf	___lwmod@counter& (0+255),b
  3970  00595A  0101               	movlb	1	; () banked
  3971  00595C  5104               	movf	??___lwmod& (0+255),w,b
  3972  00595E  D009               	goto	l11084
  3973  005960                     l11082:
  3974                           
  3975                           ; BSR set to: 1
  3976  005960  0101               	movlb	1	; () banked
  3977  005962  0101               	movlb	1	; () banked
  3978  005964  0101               	movlb	1	; () banked
  3979  005966  90D8               	bcf	status,0,c
  3980  005968  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  3981  00596A  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3982  00596C  0101               	movlb	1	; () banked
  3983  00596E  0101               	movlb	1	; () banked
  3984  005970  2B05               	incf	___lwmod@counter& (0+255),f,b
  3985  005972                     l11084:
  3986                           
  3987                           ; BSR set to: 1
  3988  005972  0101               	movlb	1	; () banked
  3989  005974  0101               	movlb	1	; () banked
  3990  005976  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3991  005978  D7F3               	goto	l11082
  3992  00597A                     l11086:
  3993                           
  3994                           ; BSR set to: 1
  3995  00597A  0101               	movlb	1	; () banked
  3996  00597C  0101               	movlb	1	; () banked
  3997  00597E  5102               	movf	___lwmod@divisor& (0+255),w,b
  3998  005980  0101               	movlb	1	; () banked
  3999  005982  0101               	movlb	1	; () banked
  4000  005984  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  4001  005986  0101               	movlb	1	; () banked
  4002  005988  0101               	movlb	1	; () banked
  4003  00598A  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4004  00598C  0101               	movlb	1	; () banked
  4005  00598E  0101               	movlb	1	; () banked
  4006  005990  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4007  005992  A0D8               	btfss	status,0,c
  4008  005994  D00C               	goto	l11090
  4009                           
  4010                           ; BSR set to: 1
  4011  005996  0101               	movlb	1	; () banked
  4012  005998  0101               	movlb	1	; () banked
  4013  00599A  5102               	movf	___lwmod@divisor& (0+255),w,b
  4014  00599C  0101               	movlb	1	; () banked
  4015  00599E  0101               	movlb	1	; () banked
  4016  0059A0  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  4017  0059A2  0101               	movlb	1	; () banked
  4018  0059A4  0101               	movlb	1	; () banked
  4019  0059A6  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4020  0059A8  0101               	movlb	1	; () banked
  4021  0059AA  0101               	movlb	1	; () banked
  4022  0059AC  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4023  0059AE                     l11090:
  4024                           
  4025                           ; BSR set to: 1
  4026  0059AE  0101               	movlb	1	; () banked
  4027  0059B0  0101               	movlb	1	; () banked
  4028  0059B2  0101               	movlb	1	; () banked
  4029  0059B4  90D8               	bcf	status,0,c
  4030  0059B6  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4031  0059B8  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  4032                           
  4033                           ; BSR set to: 1
  4034  0059BA  0101               	movlb	1	; () banked
  4035  0059BC  0101               	movlb	1	; () banked
  4036  0059BE  2F05               	decfsz	___lwmod@counter& (0+255),f,b
  4037  0059C0  D7DC               	goto	l11086
  4038  0059C2                     l922:
  4039                           
  4040                           ; BSR set to: 1
  4041  0059C2  C100  F100         	movff	___lwmod@dividend,?___lwmod
  4042  0059C6  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  4043                           
  4044                           ; BSR set to: 1
  4045  0059CA  0012               	return	
  4046  0059CC                     __end_of___lwmod:
  4047                           	opt stack 0
  4048                           tblptru	equ	0xFF8
  4049                           tblptrh	equ	0xFF7
  4050                           tblptrl	equ	0xFF6
  4051                           tablat	equ	0xFF5
  4052                           prodh	equ	0xFF4
  4053                           prodl	equ	0xFF3
  4054                           postinc0	equ	0xFEE
  4055                           wreg	equ	0xFE8
  4056                           indf2	equ	0xFDF
  4057                           postinc2	equ	0xFDE
  4058                           postdec2	equ	0xFDD
  4059                           fsr2h	equ	0xFDA
  4060                           fsr2l	equ	0xFD9
  4061                           status	equ	0xFD8
  4062                           
  4063 ;; *************** function ___lltoft *****************
  4064 ;; Defined at:
  4065 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  c               4    8[BANK1 ] unsigned long 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  exp             1   16[BANK1 ] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  3    8[BANK1 ] float 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4079 ;;      Params:         0       0       4       0       0       0       0       0       0
  4080 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4081 ;;      Temps:          0       0       4       0       0       0       0       0       0
  4082 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4083 ;;Total ram usage:        9 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:   11
  4086 ;; This function calls:
  4087 ;;		___ftpack
  4088 ;; This function is called by:
  4089 ;;		_sprintf
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text4
  4094  0056F8                     __ptext4:
  4095                           	opt stack 0
  4096  0056F8                     ___lltoft:
  4097                           	opt stack 17
  4098                           
  4099                           ; BSR set to: 1
  4100                           ;incstack = 0
  4101                           ;incstack = 0
  4102  0056F8  0101               	movlb	1	; () banked
  4103  0056FA  6F0C               	movwf	??___lltoft& (0+255),b
  4104  0056FC  0E8E               	movlw	142
  4105  0056FE  0101               	movlb	1	; () banked
  4106  005700  0101               	movlb	1	; () banked
  4107  005702  6F10               	movwf	___lltoft@exp& (0+255),b
  4108  005704  0101               	movlb	1	; () banked
  4109  005706  510C               	movf	??___lltoft& (0+255),w,b
  4110  005708  D00D               	goto	l11050
  4111  00570A                     l11048:
  4112                           
  4113                           ; BSR set to: 1
  4114  00570A  0101               	movlb	1	; () banked
  4115  00570C  90D8               	bcf	status,0,c
  4116  00570E  0101               	movlb	1	; () banked
  4117  005710  330B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  4118  005712  0101               	movlb	1	; () banked
  4119  005714  330A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  4120  005716  0101               	movlb	1	; () banked
  4121  005718  3309               	rrcf	(___lltoft@c+1)& (0+255),f,b
  4122  00571A  0101               	movlb	1	; () banked
  4123  00571C  3308               	rrcf	___lltoft@c& (0+255),f,b
  4124  00571E  0101               	movlb	1	; () banked
  4125  005720  0101               	movlb	1	; () banked
  4126  005722  2B10               	incf	___lltoft@exp& (0+255),f,b
  4127  005724                     l11050:
  4128                           
  4129                           ; BSR set to: 1
  4130  005724  0E00               	movlw	0
  4131  005726  0101               	movlb	1	; () banked
  4132  005728  0101               	movlb	1	; () banked
  4133  00572A  1508               	andwf	___lltoft@c& (0+255),w,b
  4134  00572C  0101               	movlb	1	; () banked
  4135  00572E  6F0C               	movwf	??___lltoft& (0+255),b
  4136  005730  0E00               	movlw	0
  4137  005732  0101               	movlb	1	; () banked
  4138  005734  0101               	movlb	1	; () banked
  4139  005736  1509               	andwf	(___lltoft@c+1)& (0+255),w,b
  4140  005738  0101               	movlb	1	; () banked
  4141  00573A  6F0D               	movwf	(??___lltoft+1)& (0+255),b
  4142  00573C  0E00               	movlw	0
  4143  00573E  0101               	movlb	1	; () banked
  4144  005740  0101               	movlb	1	; () banked
  4145  005742  150A               	andwf	(___lltoft@c+2)& (0+255),w,b
  4146  005744  0101               	movlb	1	; () banked
  4147  005746  6F0E               	movwf	(??___lltoft+2)& (0+255),b
  4148  005748  0EFF               	movlw	255
  4149  00574A  0101               	movlb	1	; () banked
  4150  00574C  0101               	movlb	1	; () banked
  4151  00574E  150B               	andwf	(___lltoft@c+3)& (0+255),w,b
  4152  005750  0101               	movlb	1	; () banked
  4153  005752  6F0F               	movwf	(??___lltoft+3)& (0+255),b
  4154  005754  0101               	movlb	1	; () banked
  4155  005756  510F               	movf	(??___lltoft+3)& (0+255),w,b
  4156  005758  110C               	iorwf	??___lltoft& (0+255),w,b
  4157  00575A  110D               	iorwf	(??___lltoft+1)& (0+255),w,b
  4158  00575C  110E               	iorwf	(??___lltoft+2)& (0+255),w,b
  4159  00575E  A4D8               	btfss	status,2,c
  4160  005760  D7D4               	goto	l11048
  4161                           
  4162                           ; BSR set to: 1
  4163                           
  4164                           ; BSR set to: 1
  4165  005762  C108  F100         	movff	___lltoft@c,?___ftpack
  4166  005766  C109  F101         	movff	___lltoft@c+1,?___ftpack+1
  4167  00576A  C10A  F102         	movff	___lltoft@c+2,?___ftpack+2
  4168  00576E  C110  F103         	movff	___lltoft@exp,?___ftpack+3
  4169  005772  0101               	movlb	1	; () banked
  4170  005774  6F0C               	movwf	??___lltoft& (0+255),b
  4171  005776  0E00               	movlw	0
  4172  005778  0101               	movlb	1	; () banked
  4173  00577A  0101               	movlb	1	; () banked
  4174  00577C  6F04               	movwf	(?___ftpack+4)& (0+255),b
  4175  00577E  0101               	movlb	1	; () banked
  4176  005780  510C               	movf	??___lltoft& (0+255),w,b
  4177  005782  EC30  F022         	call	___ftpack	;wreg free
  4178  005786  C102  F10A         	movff	?___ftpack+2,?___lltoft+2
  4179  00578A  C101  F109         	movff	?___ftpack+1,?___lltoft+1
  4180  00578E  C100  F108         	movff	?___ftpack,?___lltoft
  4181  005792  0012               	return	
  4182  005794                     __end_of___lltoft:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           indf2	equ	0xFDF
  4193                           postinc2	equ	0xFDE
  4194                           postdec2	equ	0xFDD
  4195                           fsr2h	equ	0xFDA
  4196                           fsr2l	equ	0xFD9
  4197                           status	equ	0xFD8
  4198                           
  4199 ;; *************** function ___llmod *****************
  4200 ;; Defined at:
  4201 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  dividend        4   14[BANK1 ] unsigned long 
  4204 ;;  divisor         4   18[BANK1 ] unsigned long 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  counter         1   23[BANK1 ] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  4   14[BANK1 ] unsigned long 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4216 ;;      Params:         0       0       8       0       0       0       0       0       0
  4217 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4218 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4219 ;;      Totals:         0       0      10       0       0       0       0       0       0
  4220 ;;Total ram usage:       10 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:   10
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_sprintf
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text5
  4231  005294                     __ptext5:
  4232                           	opt stack 0
  4233  005294                     ___llmod:
  4234                           	opt stack 18
  4235                           
  4236                           ;incstack = 0
  4237                           ;incstack = 0
  4238  005294  0101               	movlb	1	; () banked
  4239  005296  0101               	movlb	1	; () banked
  4240  005298  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4241  00529A  1112               	iorwf	___llmod@divisor& (0+255),w,b
  4242  00529C  1113               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4243  00529E  1114               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4244  0052A0  B4D8               	btfsc	status,2,c
  4245  0052A2  D05A               	goto	l853
  4246                           
  4247                           ; BSR set to: 1
  4248  0052A4  0101               	movlb	1	; () banked
  4249  0052A6  6F16               	movwf	??___llmod& (0+255),b
  4250  0052A8  0E01               	movlw	1
  4251  0052AA  0101               	movlb	1	; () banked
  4252  0052AC  0101               	movlb	1	; () banked
  4253  0052AE  6F17               	movwf	___llmod@counter& (0+255),b
  4254  0052B0  0101               	movlb	1	; () banked
  4255  0052B2  5116               	movf	??___llmod& (0+255),w,b
  4256  0052B4  D00D               	goto	l8530
  4257  0052B6                     l8528:
  4258                           
  4259                           ; BSR set to: 1
  4260  0052B6  0101               	movlb	1	; () banked
  4261  0052B8  90D8               	bcf	status,0,c
  4262  0052BA  0101               	movlb	1	; () banked
  4263  0052BC  3712               	rlcf	___llmod@divisor& (0+255),f,b
  4264  0052BE  0101               	movlb	1	; () banked
  4265  0052C0  3713               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4266  0052C2  0101               	movlb	1	; () banked
  4267  0052C4  3714               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4268  0052C6  0101               	movlb	1	; () banked
  4269  0052C8  3715               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4270  0052CA  0101               	movlb	1	; () banked
  4271  0052CC  0101               	movlb	1	; () banked
  4272  0052CE  2B17               	incf	___llmod@counter& (0+255),f,b
  4273  0052D0                     l8530:
  4274                           
  4275                           ; BSR set to: 1
  4276  0052D0  0101               	movlb	1	; () banked
  4277  0052D2  0101               	movlb	1	; () banked
  4278  0052D4  AF15               	btfss	(___llmod@divisor+3)& (0+255),7,b
  4279  0052D6  D7EF               	goto	l8528
  4280  0052D8                     l8532:
  4281                           
  4282                           ; BSR set to: 1
  4283  0052D8  0101               	movlb	1	; () banked
  4284  0052DA  0101               	movlb	1	; () banked
  4285  0052DC  5112               	movf	___llmod@divisor& (0+255),w,b
  4286  0052DE  0101               	movlb	1	; () banked
  4287  0052E0  0101               	movlb	1	; () banked
  4288  0052E2  5D0E               	subwf	___llmod@dividend& (0+255),w,b
  4289  0052E4  0101               	movlb	1	; () banked
  4290  0052E6  0101               	movlb	1	; () banked
  4291  0052E8  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  4292  0052EA  0101               	movlb	1	; () banked
  4293  0052EC  0101               	movlb	1	; () banked
  4294  0052EE  590F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4295  0052F0  0101               	movlb	1	; () banked
  4296  0052F2  0101               	movlb	1	; () banked
  4297  0052F4  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  4298  0052F6  0101               	movlb	1	; () banked
  4299  0052F8  0101               	movlb	1	; () banked
  4300  0052FA  5910               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4301  0052FC  0101               	movlb	1	; () banked
  4302  0052FE  0101               	movlb	1	; () banked
  4303  005300  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4304  005302  0101               	movlb	1	; () banked
  4305  005304  0101               	movlb	1	; () banked
  4306  005306  5911               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4307  005308  A0D8               	btfss	status,0,c
  4308  00530A  D018               	goto	l8536
  4309                           
  4310                           ; BSR set to: 1
  4311  00530C  0101               	movlb	1	; () banked
  4312  00530E  0101               	movlb	1	; () banked
  4313  005310  5112               	movf	___llmod@divisor& (0+255),w,b
  4314  005312  0101               	movlb	1	; () banked
  4315  005314  0101               	movlb	1	; () banked
  4316  005316  5F0E               	subwf	___llmod@dividend& (0+255),f,b
  4317  005318  0101               	movlb	1	; () banked
  4318  00531A  0101               	movlb	1	; () banked
  4319  00531C  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  4320  00531E  0101               	movlb	1	; () banked
  4321  005320  0101               	movlb	1	; () banked
  4322  005322  5B0F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  4323  005324  0101               	movlb	1	; () banked
  4324  005326  0101               	movlb	1	; () banked
  4325  005328  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  4326  00532A  0101               	movlb	1	; () banked
  4327  00532C  0101               	movlb	1	; () banked
  4328  00532E  5B10               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  4329  005330  0101               	movlb	1	; () banked
  4330  005332  0101               	movlb	1	; () banked
  4331  005334  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4332  005336  0101               	movlb	1	; () banked
  4333  005338  0101               	movlb	1	; () banked
  4334  00533A  5B11               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  4335  00533C                     l8536:
  4336                           
  4337                           ; BSR set to: 1
  4338  00533C  0101               	movlb	1	; () banked
  4339  00533E  90D8               	bcf	status,0,c
  4340  005340  0101               	movlb	1	; () banked
  4341  005342  3315               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  4342  005344  0101               	movlb	1	; () banked
  4343  005346  3314               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  4344  005348  0101               	movlb	1	; () banked
  4345  00534A  3313               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  4346  00534C  0101               	movlb	1	; () banked
  4347  00534E  3312               	rrcf	___llmod@divisor& (0+255),f,b
  4348                           
  4349                           ; BSR set to: 1
  4350  005350  0101               	movlb	1	; () banked
  4351  005352  0101               	movlb	1	; () banked
  4352  005354  2F17               	decfsz	___llmod@counter& (0+255),f,b
  4353  005356  D7C0               	goto	l8532
  4354  005358                     l853:
  4355                           
  4356                           ; BSR set to: 1
  4357  005358  C10E  F10E         	movff	___llmod@dividend,?___llmod
  4358  00535C  C10F  F10F         	movff	___llmod@dividend+1,?___llmod+1
  4359  005360  C110  F110         	movff	___llmod@dividend+2,?___llmod+2
  4360  005364  C111  F111         	movff	___llmod@dividend+3,?___llmod+3
  4361                           
  4362                           ; BSR set to: 1
  4363  005368  0012               	return	
  4364  00536A                     __end_of___llmod:
  4365                           	opt stack 0
  4366                           tblptru	equ	0xFF8
  4367                           tblptrh	equ	0xFF7
  4368                           tblptrl	equ	0xFF6
  4369                           tablat	equ	0xFF5
  4370                           prodh	equ	0xFF4
  4371                           prodl	equ	0xFF3
  4372                           postinc0	equ	0xFEE
  4373                           wreg	equ	0xFE8
  4374                           indf2	equ	0xFDF
  4375                           postinc2	equ	0xFDE
  4376                           postdec2	equ	0xFDD
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8
  4380                           
  4381 ;; *************** function ___lldiv *****************
  4382 ;; Defined at:
  4383 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  dividend        4    0[BANK1 ] unsigned long 
  4386 ;;  divisor         4    4[BANK1 ] unsigned long 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  quotient        4    9[BANK1 ] unsigned long 
  4389 ;;  counter         1   13[BANK1 ] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  4    0[BANK1 ] unsigned long 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4399 ;;      Params:         0       0       8       0       0       0       0       0       0
  4400 ;;      Locals:         0       0       5       0       0       0       0       0       0
  4401 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4402 ;;      Totals:         0       0      14       0       0       0       0       0       0
  4403 ;;Total ram usage:       14 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:   10
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_sprintf
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text6
  4414  004A18                     __ptext6:
  4415                           	opt stack 0
  4416  004A18                     ___lldiv:
  4417                           	opt stack 18
  4418                           
  4419                           ; BSR set to: 1
  4420                           ;incstack = 0
  4421                           ;incstack = 0
  4422  004A18  0E00               	movlw	0
  4423  004A1A  0101               	movlb	1	; () banked
  4424  004A1C  0101               	movlb	1	; () banked
  4425  004A1E  6F09               	movwf	___lldiv@quotient& (0+255),b
  4426  004A20  0E00               	movlw	0
  4427  004A22  0101               	movlb	1	; () banked
  4428  004A24  6F0A               	movwf	(___lldiv@quotient+1)& (0+255),b
  4429  004A26  0E00               	movlw	0
  4430  004A28  0101               	movlb	1	; () banked
  4431  004A2A  6F0B               	movwf	(___lldiv@quotient+2)& (0+255),b
  4432  004A2C  0E00               	movlw	0
  4433  004A2E  0101               	movlb	1	; () banked
  4434  004A30  6F0C               	movwf	(___lldiv@quotient+3)& (0+255),b
  4435                           
  4436                           ; BSR set to: 1
  4437  004A32  0101               	movlb	1	; () banked
  4438  004A34  0101               	movlb	1	; () banked
  4439  004A36  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4440  004A38  1104               	iorwf	___lldiv@divisor& (0+255),w,b
  4441  004A3A  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4442  004A3C  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4443  004A3E  B4D8               	btfsc	status,2,c
  4444  004A40  D067               	goto	l843
  4445                           
  4446                           ; BSR set to: 1
  4447  004A42  0101               	movlb	1	; () banked
  4448  004A44  6F08               	movwf	??___lldiv& (0+255),b
  4449  004A46  0E01               	movlw	1
  4450  004A48  0101               	movlb	1	; () banked
  4451  004A4A  0101               	movlb	1	; () banked
  4452  004A4C  6F0D               	movwf	___lldiv@counter& (0+255),b
  4453  004A4E  0101               	movlb	1	; () banked
  4454  004A50  5108               	movf	??___lldiv& (0+255),w,b
  4455  004A52  D00D               	goto	l11032
  4456  004A54                     l11030:
  4457                           
  4458                           ; BSR set to: 1
  4459  004A54  0101               	movlb	1	; () banked
  4460  004A56  90D8               	bcf	status,0,c
  4461  004A58  0101               	movlb	1	; () banked
  4462  004A5A  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  4463  004A5C  0101               	movlb	1	; () banked
  4464  004A5E  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4465  004A60  0101               	movlb	1	; () banked
  4466  004A62  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4467  004A64  0101               	movlb	1	; () banked
  4468  004A66  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4469  004A68  0101               	movlb	1	; () banked
  4470  004A6A  0101               	movlb	1	; () banked
  4471  004A6C  2B0D               	incf	___lldiv@counter& (0+255),f,b
  4472  004A6E                     l11032:
  4473                           
  4474                           ; BSR set to: 1
  4475  004A6E  0101               	movlb	1	; () banked
  4476  004A70  0101               	movlb	1	; () banked
  4477  004A72  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4478  004A74  D7EF               	goto	l11030
  4479  004A76                     l11034:
  4480                           
  4481                           ; BSR set to: 1
  4482  004A76  0101               	movlb	1	; () banked
  4483  004A78  90D8               	bcf	status,0,c
  4484  004A7A  0101               	movlb	1	; () banked
  4485  004A7C  3709               	rlcf	___lldiv@quotient& (0+255),f,b
  4486  004A7E  0101               	movlb	1	; () banked
  4487  004A80  370A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4488  004A82  0101               	movlb	1	; () banked
  4489  004A84  370B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4490  004A86  0101               	movlb	1	; () banked
  4491  004A88  370C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4492                           
  4493                           ; BSR set to: 1
  4494  004A8A  0101               	movlb	1	; () banked
  4495  004A8C  0101               	movlb	1	; () banked
  4496  004A8E  5104               	movf	___lldiv@divisor& (0+255),w,b
  4497  004A90  0101               	movlb	1	; () banked
  4498  004A92  0101               	movlb	1	; () banked
  4499  004A94  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  4500  004A96  0101               	movlb	1	; () banked
  4501  004A98  0101               	movlb	1	; () banked
  4502  004A9A  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4503  004A9C  0101               	movlb	1	; () banked
  4504  004A9E  0101               	movlb	1	; () banked
  4505  004AA0  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4506  004AA2  0101               	movlb	1	; () banked
  4507  004AA4  0101               	movlb	1	; () banked
  4508  004AA6  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4509  004AA8  0101               	movlb	1	; () banked
  4510  004AAA  0101               	movlb	1	; () banked
  4511  004AAC  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4512  004AAE  0101               	movlb	1	; () banked
  4513  004AB0  0101               	movlb	1	; () banked
  4514  004AB2  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4515  004AB4  0101               	movlb	1	; () banked
  4516  004AB6  0101               	movlb	1	; () banked
  4517  004AB8  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4518  004ABA  A0D8               	btfss	status,0,c
  4519  004ABC  D01B               	goto	l11042
  4520                           
  4521                           ; BSR set to: 1
  4522  004ABE  0101               	movlb	1	; () banked
  4523  004AC0  0101               	movlb	1	; () banked
  4524  004AC2  5104               	movf	___lldiv@divisor& (0+255),w,b
  4525  004AC4  0101               	movlb	1	; () banked
  4526  004AC6  0101               	movlb	1	; () banked
  4527  004AC8  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  4528  004ACA  0101               	movlb	1	; () banked
  4529  004ACC  0101               	movlb	1	; () banked
  4530  004ACE  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4531  004AD0  0101               	movlb	1	; () banked
  4532  004AD2  0101               	movlb	1	; () banked
  4533  004AD4  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4534  004AD6  0101               	movlb	1	; () banked
  4535  004AD8  0101               	movlb	1	; () banked
  4536  004ADA  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4537  004ADC  0101               	movlb	1	; () banked
  4538  004ADE  0101               	movlb	1	; () banked
  4539  004AE0  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4540  004AE2  0101               	movlb	1	; () banked
  4541  004AE4  0101               	movlb	1	; () banked
  4542  004AE6  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4543  004AE8  0101               	movlb	1	; () banked
  4544  004AEA  0101               	movlb	1	; () banked
  4545  004AEC  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4546                           
  4547                           ; BSR set to: 1
  4548  004AEE  0101               	movlb	1	; () banked
  4549  004AF0  0101               	movlb	1	; () banked
  4550  004AF2  8109               	bsf	___lldiv@quotient& (0+255),0,b
  4551  004AF4                     l11042:
  4552                           
  4553                           ; BSR set to: 1
  4554  004AF4  0101               	movlb	1	; () banked
  4555  004AF6  90D8               	bcf	status,0,c
  4556  004AF8  0101               	movlb	1	; () banked
  4557  004AFA  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4558  004AFC  0101               	movlb	1	; () banked
  4559  004AFE  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4560  004B00  0101               	movlb	1	; () banked
  4561  004B02  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4562  004B04  0101               	movlb	1	; () banked
  4563  004B06  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  4564                           
  4565                           ; BSR set to: 1
  4566  004B08  0101               	movlb	1	; () banked
  4567  004B0A  0101               	movlb	1	; () banked
  4568  004B0C  2F0D               	decfsz	___lldiv@counter& (0+255),f,b
  4569  004B0E  D7B3               	goto	l11034
  4570  004B10                     l843:
  4571                           
  4572                           ; BSR set to: 1
  4573  004B10  C109  F100         	movff	___lldiv@quotient,?___lldiv
  4574  004B14  C10A  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  4575  004B18  C10B  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  4576  004B1C  C10C  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  4577                           
  4578                           ; BSR set to: 1
  4579  004B20  0012               	return	
  4580  004B22                     __end_of___lldiv:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           postinc0	equ	0xFEE
  4589                           wreg	equ	0xFE8
  4590                           indf2	equ	0xFDF
  4591                           postinc2	equ	0xFDE
  4592                           postdec2	equ	0xFDD
  4593                           fsr2h	equ	0xFDA
  4594                           fsr2l	equ	0xFD9
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function ___ftneg *****************
  4598 ;; Defined at:
  4599 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  f1              3    0[BANK1 ] float 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  3    0[BANK1 ] float 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4613 ;;      Params:         0       0       3       0       0       0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4616 ;;      Totals:         0       0       3       0       0       0       0       0       0
  4617 ;;Total ram usage:        3 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:   10
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_sprintf
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text7
  4628  006154                     __ptext7:
  4629                           	opt stack 0
  4630  006154                     ___ftneg:
  4631                           	opt stack 18
  4632                           
  4633                           ; BSR set to: 1
  4634                           ;incstack = 0
  4635                           ;incstack = 0
  4636  006154  0E7F               	movlw	127
  4637  006156  0101               	movlb	1	; () banked
  4638  006158  0101               	movlb	1	; () banked
  4639  00615A  1502               	andwf	(___ftneg@f1+2)& (0+255),w,b
  4640  00615C  0101               	movlb	1	; () banked
  4641  00615E  1101               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  4642  006160  0101               	movlb	1	; () banked
  4643  006162  1100               	iorwf	___ftneg@f1& (0+255),w,b
  4644  006164  B4D8               	btfsc	status,2,c
  4645  006166  D00C               	goto	l789
  4646                           
  4647                           ; BSR set to: 1
  4648  006168  0E00               	movlw	0
  4649  00616A  0101               	movlb	1	; () banked
  4650  00616C  0101               	movlb	1	; () banked
  4651  00616E  1B00               	xorwf	___ftneg@f1& (0+255),f,b
  4652  006170  0E00               	movlw	0
  4653  006172  0101               	movlb	1	; () banked
  4654  006174  0101               	movlb	1	; () banked
  4655  006176  1B01               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  4656  006178  0E80               	movlw	128
  4657  00617A  0101               	movlb	1	; () banked
  4658  00617C  0101               	movlb	1	; () banked
  4659  00617E  1B02               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  4660  006180                     l789:
  4661                           
  4662                           ; BSR set to: 1
  4663  006180  C100  F100         	movff	___ftneg@f1,?___ftneg
  4664  006184  C101  F101         	movff	___ftneg@f1+1,?___ftneg+1
  4665  006188  C102  F102         	movff	___ftneg@f1+2,?___ftneg+2
  4666                           
  4667                           ; BSR set to: 1
  4668  00618C  0012               	return	
  4669  00618E                     __end_of___ftneg:
  4670                           	opt stack 0
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           prodh	equ	0xFF4
  4676                           prodl	equ	0xFF3
  4677                           postinc0	equ	0xFEE
  4678                           wreg	equ	0xFE8
  4679                           indf2	equ	0xFDF
  4680                           postinc2	equ	0xFDE
  4681                           postdec2	equ	0xFDD
  4682                           fsr2h	equ	0xFDA
  4683                           fsr2l	equ	0xFD9
  4684                           status	equ	0xFD8
  4685                           
  4686 ;; *************** function ___ftge *****************
  4687 ;; Defined at:
  4688 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  ff1             3    0[BANK1 ] float 
  4691 ;;  ff2             3    3[BANK1 ] float 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;		None
  4694 ;; Return value:  Size  Location     Type
  4695 ;;		None               void
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4703 ;;      Params:         0       0       6       0       0       0       0       0       0
  4704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4705 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4706 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4707 ;;Total ram usage:        9 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:   10
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_sprintf
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text8
  4718  004C24                     __ptext8:
  4719                           	opt stack 0
  4720  004C24                     ___ftge:
  4721                           	opt stack 18
  4722                           
  4723                           ; BSR set to: 1
  4724                           ;incstack = 0
  4725                           ;incstack = 0
  4726  004C24  0101               	movlb	1	; () banked
  4727  004C26  0101               	movlb	1	; () banked
  4728  004C28  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  4729  004C2A  D021               	goto	l11006
  4730                           
  4731                           ; BSR set to: 1
  4732  004C2C  0101               	movlb	1	; () banked
  4733  004C2E  C100  F106         	movff	___ftge@ff1,??___ftge
  4734  004C32  0101               	movlb	1	; () banked
  4735  004C34  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  4736  004C38  0101               	movlb	1	; () banked
  4737  004C3A  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  4738  004C3E  0101               	movlb	1	; () banked
  4739  004C40  1F06               	comf	??___ftge& (0+255),f,b
  4740  004C42  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4741  004C44  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4742  004C46  2B06               	incf	??___ftge& (0+255),f,b
  4743  004C48  0E00               	movlw	0
  4744  004C4A  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4745  004C4C  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4746  004C4E  0E00               	movlw	0
  4747  004C50  0101               	movlb	1	; () banked
  4748  004C52  2506               	addwf	??___ftge& (0+255),w,b
  4749  004C54  0101               	movlb	1	; () banked
  4750  004C56  0101               	movlb	1	; () banked
  4751  004C58  6F00               	movwf	___ftge@ff1& (0+255),b
  4752  004C5A  0E00               	movlw	0
  4753  004C5C  0101               	movlb	1	; () banked
  4754  004C5E  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4755  004C60  0101               	movlb	1	; () banked
  4756  004C62  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  4757  004C64  0E80               	movlw	128
  4758  004C66  0101               	movlb	1	; () banked
  4759  004C68  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4760  004C6A  0101               	movlb	1	; () banked
  4761  004C6C  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  4762  004C6E                     l11006:
  4763                           
  4764                           ; BSR set to: 1
  4765  004C6E  0101               	movlb	1	; () banked
  4766  004C70  0101               	movlb	1	; () banked
  4767  004C72  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  4768  004C74  D021               	goto	l11010
  4769                           
  4770                           ; BSR set to: 1
  4771  004C76  0101               	movlb	1	; () banked
  4772  004C78  C103  F106         	movff	___ftge@ff2,??___ftge
  4773  004C7C  0101               	movlb	1	; () banked
  4774  004C7E  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  4775  004C82  0101               	movlb	1	; () banked
  4776  004C84  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  4777  004C88  0101               	movlb	1	; () banked
  4778  004C8A  1F06               	comf	??___ftge& (0+255),f,b
  4779  004C8C  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4780  004C8E  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4781  004C90  2B06               	incf	??___ftge& (0+255),f,b
  4782  004C92  0E00               	movlw	0
  4783  004C94  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4784  004C96  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4785  004C98  0E00               	movlw	0
  4786  004C9A  0101               	movlb	1	; () banked
  4787  004C9C  2506               	addwf	??___ftge& (0+255),w,b
  4788  004C9E  0101               	movlb	1	; () banked
  4789  004CA0  0101               	movlb	1	; () banked
  4790  004CA2  6F03               	movwf	___ftge@ff2& (0+255),b
  4791  004CA4  0E00               	movlw	0
  4792  004CA6  0101               	movlb	1	; () banked
  4793  004CA8  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4794  004CAA  0101               	movlb	1	; () banked
  4795  004CAC  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  4796  004CAE  0E80               	movlw	128
  4797  004CB0  0101               	movlb	1	; () banked
  4798  004CB2  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4799  004CB4  0101               	movlb	1	; () banked
  4800  004CB6  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  4801  004CB8                     l11010:
  4802                           
  4803                           ; BSR set to: 1
  4804  004CB8  0E00               	movlw	0
  4805  004CBA  0101               	movlb	1	; () banked
  4806  004CBC  0101               	movlb	1	; () banked
  4807  004CBE  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  4808  004CC0  0E00               	movlw	0
  4809  004CC2  0101               	movlb	1	; () banked
  4810  004CC4  0101               	movlb	1	; () banked
  4811  004CC6  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  4812  004CC8  0E80               	movlw	128
  4813  004CCA  0101               	movlb	1	; () banked
  4814  004CCC  0101               	movlb	1	; () banked
  4815  004CCE  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  4816                           
  4817                           ; BSR set to: 1
  4818  004CD0  0E00               	movlw	0
  4819  004CD2  0101               	movlb	1	; () banked
  4820  004CD4  0101               	movlb	1	; () banked
  4821  004CD6  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  4822  004CD8  0E00               	movlw	0
  4823  004CDA  0101               	movlb	1	; () banked
  4824  004CDC  0101               	movlb	1	; () banked
  4825  004CDE  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  4826  004CE0  0E80               	movlw	128
  4827  004CE2  0101               	movlb	1	; () banked
  4828  004CE4  0101               	movlb	1	; () banked
  4829  004CE6  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  4830  004CE8  0101               	movlb	1	; () banked
  4831  004CEA  0101               	movlb	1	; () banked
  4832  004CEC  5103               	movf	___ftge@ff2& (0+255),w,b
  4833  004CEE  0101               	movlb	1	; () banked
  4834  004CF0  0101               	movlb	1	; () banked
  4835  004CF2  5D00               	subwf	___ftge@ff1& (0+255),w,b
  4836  004CF4  0101               	movlb	1	; () banked
  4837  004CF6  0101               	movlb	1	; () banked
  4838  004CF8  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  4839  004CFA  0101               	movlb	1	; () banked
  4840  004CFC  0101               	movlb	1	; () banked
  4841  004CFE  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  4842  004D00  0101               	movlb	1	; () banked
  4843  004D02  0101               	movlb	1	; () banked
  4844  004D04  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  4845  004D06  0101               	movlb	1	; () banked
  4846  004D08  0101               	movlb	1	; () banked
  4847  004D0A  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  4848  004D0C  B0D8               	btfsc	status,0,c
  4849  004D0E  D002               	goto	l11016
  4850                           
  4851                           ; BSR set to: 1
  4852  004D10  90D8               	bcf	status,0,c
  4853  004D12  D001               	goto	l773
  4854  004D14                     l11016:
  4855                           
  4856                           ; BSR set to: 1
  4857  004D14  80D8               	bsf	status,0,c
  4858  004D16                     l773:
  4859                           
  4860                           ; BSR set to: 1
  4861  004D16  0012               	return	
  4862  004D18                     __end_of___ftge:
  4863                           	opt stack 0
  4864                           tblptru	equ	0xFF8
  4865                           tblptrh	equ	0xFF7
  4866                           tblptrl	equ	0xFF6
  4867                           tablat	equ	0xFF5
  4868                           prodh	equ	0xFF4
  4869                           prodl	equ	0xFF3
  4870                           postinc0	equ	0xFEE
  4871                           wreg	equ	0xFE8
  4872                           indf2	equ	0xFDF
  4873                           postinc2	equ	0xFDE
  4874                           postdec2	equ	0xFDD
  4875                           fsr2h	equ	0xFDA
  4876                           fsr2l	equ	0xFD9
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function ___asftsub *****************
  4880 ;; Defined at:
  4881 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  f1p             2   76[BANK1 ] PTR float 
  4884 ;;		 -> sprintf@fval(3), 
  4885 ;;  f2              3   78[BANK1 ] float 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  3   76[BANK1 ] float 
  4890 ;; Registers used:
  4891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4897 ;;      Params:         0       0       5       0       0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4900 ;;      Totals:         0       0       5       0       0       0       0       0       0
  4901 ;;Total ram usage:        5 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:   13
  4904 ;; This function calls:
  4905 ;;		___ftsub
  4906 ;; This function is called by:
  4907 ;;		_sprintf
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text9
  4912  005F5A                     __ptext9:
  4913                           	opt stack 0
  4914  005F5A                     ___asftsub:
  4915                           	opt stack 15
  4916                           
  4917                           ;	Return value of ___asftsub is never used
  4918                           
  4919                           ; BSR set to: 1
  4920                           ;incstack = 0
  4921                           ;incstack = 0
  4922  005F5A  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  4923  005F5E  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  4924  005F62  0101               	movlb	1	; () banked
  4925  005F64  CFDE F146          	movff	postinc2,?___ftsub
  4926  005F68  0101               	movlb	1	; () banked
  4927  005F6A  CFDE F147          	movff	postinc2,?___ftsub+1
  4928  005F6E  0101               	movlb	1	; () banked
  4929  005F70  CFDD F148          	movff	postdec2,?___ftsub+2
  4930  005F74  C14E  F149         	movff	___asftsub@f2,?___ftsub+3
  4931  005F78  C14F  F14A         	movff	___asftsub@f2+1,?___ftsub+4
  4932  005F7C  C150  F14B         	movff	___asftsub@f2+2,?___ftsub+5
  4933  005F80  ECCE  F02F         	call	___ftsub	;wreg free
  4934  005F84  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  4935  005F88  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  4936  005F8C  C146  FFDE         	movff	?___ftsub,postinc2
  4937  005F90  C147  FFDE         	movff	?___ftsub+1,postinc2
  4938  005F94  C148  FFDD         	movff	?___ftsub+2,postdec2
  4939  005F98  52DD               	movf	postdec2,f,c
  4940  005F9A  0012               	return	
  4941  005F9C                     __end_of___asftsub:
  4942                           	opt stack 0
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           postinc0	equ	0xFEE
  4950                           wreg	equ	0xFE8
  4951                           indf2	equ	0xFDF
  4952                           postinc2	equ	0xFDE
  4953                           postdec2	equ	0xFDD
  4954                           fsr2h	equ	0xFDA
  4955                           fsr2l	equ	0xFD9
  4956                           status	equ	0xFD8
  4957                           
  4958 ;; *************** function ___ftsub *****************
  4959 ;; Defined at:
  4960 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  f1              3   70[BANK1 ] float 
  4963 ;;  f2              3   73[BANK1 ] float 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  3   70[BANK1 ] float 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, status,0, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4975 ;;      Params:         0       0       6       0       0       0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4978 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4979 ;;Total ram usage:        6 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:   12
  4982 ;; This function calls:
  4983 ;;		___ftadd
  4984 ;; This function is called by:
  4985 ;;		___asftsub
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text10
  4990  005F9C                     __ptext10:
  4991                           	opt stack 0
  4992  005F9C                     ___ftsub:
  4993                           	opt stack 15
  4994                           
  4995                           ;incstack = 0
  4996                           ;incstack = 0
  4997  005F9C  0E00               	movlw	0
  4998  005F9E  0101               	movlb	1	; () banked
  4999  005FA0  0101               	movlb	1	; () banked
  5000  005FA2  1B49               	xorwf	___ftsub@f2& (0+255),f,b
  5001  005FA4  0E00               	movlw	0
  5002  005FA6  0101               	movlb	1	; () banked
  5003  005FA8  0101               	movlb	1	; () banked
  5004  005FAA  1B4A               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  5005  005FAC  0E80               	movlw	128
  5006  005FAE  0101               	movlb	1	; () banked
  5007  005FB0  0101               	movlb	1	; () banked
  5008  005FB2  1B4B               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  5009                           
  5010                           ; BSR set to: 1
  5011  005FB4  C146  F138         	movff	___ftsub@f1,?___ftadd
  5012  005FB8  C147  F139         	movff	___ftsub@f1+1,?___ftadd+1
  5013  005FBC  C148  F13A         	movff	___ftsub@f1+2,?___ftadd+2
  5014  005FC0  C149  F13B         	movff	___ftsub@f2,?___ftadd+3
  5015  005FC4  C14A  F13C         	movff	___ftsub@f2+1,?___ftadd+4
  5016  005FC8  C14B  F13D         	movff	___ftsub@f2+2,?___ftadd+5
  5017  005FCC  ECF3  F018         	call	___ftadd	;wreg free
  5018  005FD0  C13A  F148         	movff	?___ftadd+2,?___ftsub+2
  5019  005FD4  C139  F147         	movff	?___ftadd+1,?___ftsub+1
  5020  005FD8  C138  F146         	movff	?___ftadd,?___ftsub
  5021  005FDC  0012               	return	
  5022  005FDE                     __end_of___ftsub:
  5023                           	opt stack 0
  5024                           tblptru	equ	0xFF8
  5025                           tblptrh	equ	0xFF7
  5026                           tblptrl	equ	0xFF6
  5027                           tablat	equ	0xFF5
  5028                           prodh	equ	0xFF4
  5029                           prodl	equ	0xFF3
  5030                           postinc0	equ	0xFEE
  5031                           wreg	equ	0xFE8
  5032                           indf2	equ	0xFDF
  5033                           postinc2	equ	0xFDE
  5034                           postdec2	equ	0xFDD
  5035                           fsr2h	equ	0xFDA
  5036                           fsr2l	equ	0xFD9
  5037                           status	equ	0xFD8
  5038                           
  5039 ;; *************** function ___asftmul *****************
  5040 ;; Defined at:
  5041 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  f1p             2   39[BANK1 ] PTR float 
  5044 ;;		 -> sprintf@integ(3), 
  5045 ;;  f2              3   41[BANK1 ] float 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  3   39[BANK1 ] float 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5057 ;;      Params:         0       0       5       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5060 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5061 ;;Total ram usage:        5 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:   12
  5064 ;; This function calls:
  5065 ;;		___ftmul
  5066 ;; This function is called by:
  5067 ;;		_sprintf
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text11
  5072  005FDE                     __ptext11:
  5073                           	opt stack 0
  5074  005FDE                     ___asftmul:
  5075                           	opt stack 16
  5076                           
  5077                           ;	Return value of ___asftmul is never used
  5078                           
  5079                           ;incstack = 0
  5080                           ;incstack = 0
  5081  005FDE  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  5082  005FE2  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5083  005FE6  0101               	movlb	1	; () banked
  5084  005FE8  CFDE F116          	movff	postinc2,?___ftmul
  5085  005FEC  0101               	movlb	1	; () banked
  5086  005FEE  CFDE F117          	movff	postinc2,?___ftmul+1
  5087  005FF2  0101               	movlb	1	; () banked
  5088  005FF4  CFDD F118          	movff	postdec2,?___ftmul+2
  5089  005FF8  C129  F119         	movff	___asftmul@f2,?___ftmul+3
  5090  005FFC  C12A  F11A         	movff	___asftmul@f2+1,?___ftmul+4
  5091  006000  C12B  F11B         	movff	___asftmul@f2+2,?___ftmul+5
  5092  006004  ECE1  F01C         	call	___ftmul	;wreg free
  5093  006008  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  5094  00600C  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5095  006010  C116  FFDE         	movff	?___ftmul,postinc2
  5096  006014  C117  FFDE         	movff	?___ftmul+1,postinc2
  5097  006018  C118  FFDD         	movff	?___ftmul+2,postdec2
  5098  00601C  52DD               	movf	postdec2,f,c
  5099  00601E  0012               	return	
  5100  006020                     __end_of___asftmul:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           prodh	equ	0xFF4
  5107                           prodl	equ	0xFF3
  5108                           postinc0	equ	0xFEE
  5109                           wreg	equ	0xFE8
  5110                           indf2	equ	0xFDF
  5111                           postinc2	equ	0xFDE
  5112                           postdec2	equ	0xFDD
  5113                           fsr2h	equ	0xFDA
  5114                           fsr2l	equ	0xFD9
  5115                           status	equ	0xFD8
  5116                           
  5117 ;; *************** function ___asftadd *****************
  5118 ;; Defined at:
  5119 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  f1p             2   70[BANK1 ] PTR float 
  5122 ;;		 -> sprintf@fval(3), 
  5123 ;;  f2              3   72[BANK1 ] float 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;		None
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  3   70[BANK1 ] float 
  5128 ;; Registers used:
  5129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5135 ;;      Params:         0       0       5       0       0       0       0       0       0
  5136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5138 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5139 ;;Total ram usage:        5 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:   12
  5142 ;; This function calls:
  5143 ;;		___ftadd
  5144 ;; This function is called by:
  5145 ;;		_sprintf
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text12
  5150  006020                     __ptext12:
  5151                           	opt stack 0
  5152  006020                     ___asftadd:
  5153                           	opt stack 16
  5154                           
  5155                           ;	Return value of ___asftadd is never used
  5156                           
  5157                           ;incstack = 0
  5158                           ;incstack = 0
  5159  006020  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  5160  006024  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5161  006028  0101               	movlb	1	; () banked
  5162  00602A  CFDE F138          	movff	postinc2,?___ftadd
  5163  00602E  0101               	movlb	1	; () banked
  5164  006030  CFDE F139          	movff	postinc2,?___ftadd+1
  5165  006034  0101               	movlb	1	; () banked
  5166  006036  CFDD F13A          	movff	postdec2,?___ftadd+2
  5167  00603A  C148  F13B         	movff	___asftadd@f2,?___ftadd+3
  5168  00603E  C149  F13C         	movff	___asftadd@f2+1,?___ftadd+4
  5169  006042  C14A  F13D         	movff	___asftadd@f2+2,?___ftadd+5
  5170  006046  ECF3  F018         	call	___ftadd	;wreg free
  5171  00604A  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  5172  00604E  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5173  006052  C138  FFDE         	movff	?___ftadd,postinc2
  5174  006056  C139  FFDE         	movff	?___ftadd+1,postinc2
  5175  00605A  C13A  FFDD         	movff	?___ftadd+2,postdec2
  5176  00605E  52DD               	movf	postdec2,f,c
  5177  006060  0012               	return	
  5178  006062                     __end_of___asftadd:
  5179                           	opt stack 0
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodh	equ	0xFF4
  5185                           prodl	equ	0xFF3
  5186                           postinc0	equ	0xFEE
  5187                           wreg	equ	0xFE8
  5188                           indf2	equ	0xFDF
  5189                           postinc2	equ	0xFDE
  5190                           postdec2	equ	0xFDD
  5191                           fsr2h	equ	0xFDA
  5192                           fsr2l	equ	0xFD9
  5193                           status	equ	0xFD8
  5194                           
  5195 ;; *************** function __div_to_l_ *****************
  5196 ;; Defined at:
  5197 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  f1              3    0[BANK1 ] float 
  5200 ;;  f2              3    3[BANK1 ] float 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;  quot            4    7[BANK1 ] unsigned long 
  5203 ;;  exp1            1   12[BANK1 ] unsigned char 
  5204 ;;  cntr            1   11[BANK1 ] unsigned char 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  4    0[BANK1 ] unsigned long 
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5214 ;;      Params:         0       0       6       0       0       0       0       0       0
  5215 ;;      Locals:         0       0       6       0       0       0       0       0       0
  5216 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5217 ;;      Totals:         0       0      13       0       0       0       0       0       0
  5218 ;;Total ram usage:       13 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:   10
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_sprintf
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text13
  5229  003BB0                     __ptext13:
  5230                           	opt stack 0
  5231  003BB0                     __div_to_l_:
  5232                           	opt stack 18
  5233                           
  5234                           ;incstack = 0
  5235                           ;incstack = 0
  5236  003BB0  0101               	movlb	1	; () banked
  5237  003BB2  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  5238  003BB4  0101               	movlb	1	; () banked
  5239  003BB6  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  5240  003BB8  0101               	movlb	1	; () banked
  5241  003BBA  0101               	movlb	1	; () banked
  5242  003BBC  6F0C               	movwf	__div_to_l_@exp1& (0+255),b
  5243  003BBE  0101               	movlb	1	; () banked
  5244  003BC0  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  5245  003BC2  D001               	goto	l10630
  5246  003BC4  D0B7               	goto	u9690
  5247  003BC6                     l10630:
  5248                           
  5249                           ; BSR set to: 1
  5250  003BC6  0101               	movlb	1	; () banked
  5251  003BC8  3505               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  5252  003BCA  0101               	movlb	1	; () banked
  5253  003BCC  3506               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  5254  003BCE  0101               	movlb	1	; () banked
  5255  003BD0  0101               	movlb	1	; () banked
  5256  003BD2  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  5257  003BD4  0101               	movlb	1	; () banked
  5258  003BD6  670B               	tstfsz	__div_to_l_@cntr& (0+255),b
  5259  003BD8  D001               	goto	l10636
  5260  003BDA  D0AC               	goto	u9690
  5261  003BDC                     l10636:
  5262                           
  5263                           ; BSR set to: 1
  5264  003BDC  0101               	movlb	1	; () banked
  5265  003BDE  0101               	movlb	1	; () banked
  5266  003BE0  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  5267                           
  5268                           ; BSR set to: 1
  5269  003BE2  0EFF               	movlw	255
  5270  003BE4  0101               	movlb	1	; () banked
  5271  003BE6  0101               	movlb	1	; () banked
  5272  003BE8  1700               	andwf	__div_to_l_@f1& (0+255),f,b
  5273  003BEA  0EFF               	movlw	255
  5274  003BEC  0101               	movlb	1	; () banked
  5275  003BEE  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  5276  003BF0  0EFF               	movlw	255
  5277  003BF2  0101               	movlb	1	; () banked
  5278  003BF4  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  5279  003BF6  0E00               	movlw	0
  5280  003BF8  0101               	movlb	1	; () banked
  5281  003BFA  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  5282                           
  5283                           ; BSR set to: 1
  5284  003BFC  0101               	movlb	1	; () banked
  5285  003BFE  0101               	movlb	1	; () banked
  5286  003C00  8F05               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  5287  003C02  0EFF               	movlw	255
  5288  003C04  0101               	movlb	1	; () banked
  5289  003C06  0101               	movlb	1	; () banked
  5290  003C08  1703               	andwf	__div_to_l_@f2& (0+255),f,b
  5291  003C0A  0EFF               	movlw	255
  5292  003C0C  0101               	movlb	1	; () banked
  5293  003C0E  1704               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  5294  003C10  0EFF               	movlw	255
  5295  003C12  0101               	movlb	1	; () banked
  5296  003C14  1705               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  5297  003C16  0E00               	movlw	0
  5298  003C18  0101               	movlb	1	; () banked
  5299  003C1A  1706               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  5300                           
  5301                           ; BSR set to: 1
  5302  003C1C  0E00               	movlw	0
  5303  003C1E  0101               	movlb	1	; () banked
  5304  003C20  0101               	movlb	1	; () banked
  5305  003C22  6F07               	movwf	__div_to_l_@quot& (0+255),b
  5306  003C24  0E00               	movlw	0
  5307  003C26  0101               	movlb	1	; () banked
  5308  003C28  6F08               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5309  003C2A  0E00               	movlw	0
  5310  003C2C  0101               	movlb	1	; () banked
  5311  003C2E  6F09               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5312  003C30  0E00               	movlw	0
  5313  003C32  0101               	movlb	1	; () banked
  5314  003C34  6F0A               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5315                           
  5316                           ; BSR set to: 1
  5317  003C36  0E7F               	movlw	127
  5318  003C38  0101               	movlb	1	; () banked
  5319  003C3A  0101               	movlb	1	; () banked
  5320  003C3C  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  5321                           
  5322                           ; BSR set to: 1
  5323  003C3E  0101               	movlb	1	; () banked
  5324  003C40  0101               	movlb	1	; () banked
  5325  003C42  510B               	movf	__div_to_l_@cntr& (0+255),w,b
  5326  003C44  0FA0               	addlw	160
  5327  003C46  0101               	movlb	1	; () banked
  5328  003C48  0101               	movlb	1	; () banked
  5329  003C4A  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  5330                           
  5331                           ; BSR set to: 1
  5332  003C4C  0101               	movlb	1	; () banked
  5333  003C4E  6F06               	movwf	??__div_to_l_& (0+255),b
  5334  003C50  0E20               	movlw	32
  5335  003C52  0101               	movlb	1	; () banked
  5336  003C54  0101               	movlb	1	; () banked
  5337  003C56  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  5338  003C58  0101               	movlb	1	; () banked
  5339  003C5A  5106               	movf	??__div_to_l_& (0+255),w,b
  5340  003C5C                     l639:
  5341                           
  5342                           ; BSR set to: 1
  5343  003C5C  0101               	movlb	1	; () banked
  5344  003C5E  90D8               	bcf	status,0,c
  5345  003C60  0101               	movlb	1	; () banked
  5346  003C62  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  5347  003C64  0101               	movlb	1	; () banked
  5348  003C66  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5349  003C68  0101               	movlb	1	; () banked
  5350  003C6A  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5351  003C6C  0101               	movlb	1	; () banked
  5352  003C6E  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5353                           
  5354                           ; BSR set to: 1
  5355  003C70  0101               	movlb	1	; () banked
  5356  003C72  0101               	movlb	1	; () banked
  5357  003C74  5103               	movf	__div_to_l_@f2& (0+255),w,b
  5358  003C76  0101               	movlb	1	; () banked
  5359  003C78  0101               	movlb	1	; () banked
  5360  003C7A  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
  5361  003C7C  0101               	movlb	1	; () banked
  5362  003C7E  0101               	movlb	1	; () banked
  5363  003C80  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5364  003C82  0101               	movlb	1	; () banked
  5365  003C84  0101               	movlb	1	; () banked
  5366  003C86  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  5367  003C88  0101               	movlb	1	; () banked
  5368  003C8A  0101               	movlb	1	; () banked
  5369  003C8C  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5370  003C8E  0101               	movlb	1	; () banked
  5371  003C90  0101               	movlb	1	; () banked
  5372  003C92  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  5373  003C94  0101               	movlb	1	; () banked
  5374  003C96  0101               	movlb	1	; () banked
  5375  003C98  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5376  003C9A  0101               	movlb	1	; () banked
  5377  003C9C  0101               	movlb	1	; () banked
  5378  003C9E  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  5379  003CA0  A0D8               	btfss	status,0,c
  5380  003CA2  D01B               	goto	l10656
  5381                           
  5382                           ; BSR set to: 1
  5383  003CA4  0101               	movlb	1	; () banked
  5384  003CA6  0101               	movlb	1	; () banked
  5385  003CA8  5103               	movf	__div_to_l_@f2& (0+255),w,b
  5386  003CAA  0101               	movlb	1	; () banked
  5387  003CAC  0101               	movlb	1	; () banked
  5388  003CAE  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
  5389  003CB0  0101               	movlb	1	; () banked
  5390  003CB2  0101               	movlb	1	; () banked
  5391  003CB4  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5392  003CB6  0101               	movlb	1	; () banked
  5393  003CB8  0101               	movlb	1	; () banked
  5394  003CBA  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  5395  003CBC  0101               	movlb	1	; () banked
  5396  003CBE  0101               	movlb	1	; () banked
  5397  003CC0  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5398  003CC2  0101               	movlb	1	; () banked
  5399  003CC4  0101               	movlb	1	; () banked
  5400  003CC6  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  5401  003CC8  0101               	movlb	1	; () banked
  5402  003CCA  0101               	movlb	1	; () banked
  5403  003CCC  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5404  003CCE  0101               	movlb	1	; () banked
  5405  003CD0  0101               	movlb	1	; () banked
  5406  003CD2  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  5407                           
  5408                           ; BSR set to: 1
  5409  003CD4  0101               	movlb	1	; () banked
  5410  003CD6  0101               	movlb	1	; () banked
  5411  003CD8  8107               	bsf	__div_to_l_@quot& (0+255),0,b
  5412  003CDA                     l10656:
  5413                           
  5414                           ; BSR set to: 1
  5415  003CDA  0101               	movlb	1	; () banked
  5416  003CDC  90D8               	bcf	status,0,c
  5417  003CDE  0101               	movlb	1	; () banked
  5418  003CE0  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
  5419  003CE2  0101               	movlb	1	; () banked
  5420  003CE4  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  5421  003CE6  0101               	movlb	1	; () banked
  5422  003CE8  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  5423  003CEA  0101               	movlb	1	; () banked
  5424  003CEC  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  5425                           
  5426                           ; BSR set to: 1
  5427  003CEE  0101               	movlb	1	; () banked
  5428  003CF0  0101               	movlb	1	; () banked
  5429  003CF2  2F0B               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5430  003CF4  D7B3               	goto	l639
  5431                           
  5432                           ; BSR set to: 1
  5433  003CF6  0101               	movlb	1	; () banked
  5434  003CF8  0101               	movlb	1	; () banked
  5435  003CFA  AF0C               	btfss	__div_to_l_@exp1& (0+255),7,b
  5436  003CFC  D016               	goto	l10670
  5437                           
  5438                           ; BSR set to: 1
  5439  003CFE  0101               	movlb	1	; () banked
  5440  003D00  0101               	movlb	1	; () banked
  5441  003D02  510C               	movf	__div_to_l_@exp1& (0+255),w,b
  5442  003D04  0A80               	xorlw	128
  5443  003D06  0F9F               	addlw	159
  5444  003D08  A0D8               	btfss	status,0,c
  5445  003D0A  D014               	goto	u9690
  5446  003D0C                     l10666:
  5447                           
  5448                           ; BSR set to: 1
  5449  003D0C  0101               	movlb	1	; () banked
  5450  003D0E  90D8               	bcf	status,0,c
  5451  003D10  0101               	movlb	1	; () banked
  5452  003D12  330A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5453  003D14  0101               	movlb	1	; () banked
  5454  003D16  3309               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5455  003D18  0101               	movlb	1	; () banked
  5456  003D1A  3308               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5457  003D1C  0101               	movlb	1	; () banked
  5458  003D1E  3307               	rrcf	__div_to_l_@quot& (0+255),f,b
  5459                           
  5460                           ; BSR set to: 1
  5461  003D20  0101               	movlb	1	; () banked
  5462  003D22  0101               	movlb	1	; () banked
  5463  003D24  3F0C               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5464  003D26  D7F2               	goto	l10666
  5465  003D28  D024               	goto	l646
  5466  003D2A                     l10670:
  5467                           
  5468                           ; BSR set to: 1
  5469  003D2A  0E1F               	movlw	31
  5470  003D2C  0101               	movlb	1	; () banked
  5471  003D2E  0101               	movlb	1	; () banked
  5472  003D30  650C               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5473  003D32  D01B               	goto	l10678
  5474  003D34                     u9690:
  5475                           
  5476                           ; BSR set to: 1
  5477  003D34  0E00               	movlw	0
  5478  003D36  0101               	movlb	1	; () banked
  5479  003D38  0101               	movlb	1	; () banked
  5480  003D3A  6F00               	movwf	?__div_to_l_& (0+255),b
  5481  003D3C  0E00               	movlw	0
  5482  003D3E  0101               	movlb	1	; () banked
  5483  003D40  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
  5484  003D42  0E00               	movlw	0
  5485  003D44  0101               	movlb	1	; () banked
  5486  003D46  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
  5487  003D48  0E00               	movlw	0
  5488  003D4A  0101               	movlb	1	; () banked
  5489  003D4C  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
  5490  003D4E  D019               	goto	l637
  5491  003D50                     l10676:
  5492                           
  5493                           ; BSR set to: 1
  5494  003D50  0101               	movlb	1	; () banked
  5495  003D52  90D8               	bcf	status,0,c
  5496  003D54  0101               	movlb	1	; () banked
  5497  003D56  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  5498  003D58  0101               	movlb	1	; () banked
  5499  003D5A  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5500  003D5C  0101               	movlb	1	; () banked
  5501  003D5E  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5502  003D60  0101               	movlb	1	; () banked
  5503  003D62  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5504  003D64  0101               	movlb	1	; () banked
  5505  003D66  0101               	movlb	1	; () banked
  5506  003D68  070C               	decf	__div_to_l_@exp1& (0+255),f,b
  5507  003D6A                     l10678:
  5508                           
  5509                           ; BSR set to: 1
  5510  003D6A  0101               	movlb	1	; () banked
  5511  003D6C  0101               	movlb	1	; () banked
  5512  003D6E  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  5513  003D70  D7EF               	goto	l10676
  5514  003D72                     l646:
  5515                           
  5516                           ; BSR set to: 1
  5517  003D72  C107  F100         	movff	__div_to_l_@quot,?__div_to_l_
  5518  003D76  C108  F101         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5519  003D7A  C109  F102         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5520  003D7E  C10A  F103         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5521  003D82                     l637:
  5522                           
  5523                           ; BSR set to: 1
  5524  003D82  0012               	return	
  5525  003D84                     __end_of__div_to_l_:
  5526                           	opt stack 0
  5527                           tblptru	equ	0xFF8
  5528                           tblptrh	equ	0xFF7
  5529                           tblptrl	equ	0xFF6
  5530                           tablat	equ	0xFF5
  5531                           prodh	equ	0xFF4
  5532                           prodl	equ	0xFF3
  5533                           postinc0	equ	0xFEE
  5534                           wreg	equ	0xFE8
  5535                           indf2	equ	0xFDF
  5536                           postinc2	equ	0xFDE
  5537                           postdec2	equ	0xFDD
  5538                           fsr2h	equ	0xFDA
  5539                           fsr2l	equ	0xFD9
  5540                           status	equ	0xFD8
  5541                           
  5542 ;; *************** function __tdiv_to_l_ *****************
  5543 ;; Defined at:
  5544 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  f1              3    0[BANK1 ] float 
  5547 ;;  f2              3    3[BANK1 ] float 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  quot            4   11[BANK1 ] unsigned long 
  5550 ;;  exp1            1   16[BANK1 ] unsigned char 
  5551 ;;  cntr            1   15[BANK1 ] unsigned char 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  4    0[BANK1 ] unsigned long 
  5554 ;; Registers used:
  5555 ;;		wreg, status,2, status,0
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5561 ;;      Params:         0       0       6       0       0       0       0       0       0
  5562 ;;      Locals:         0       0       6       0       0       0       0       0       0
  5563 ;;      Temps:          0       0       5       0       0       0       0       0       0
  5564 ;;      Totals:         0       0      17       0       0       0       0       0       0
  5565 ;;Total ram usage:       17 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:   10
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_sprintf
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text14
  5576  0037B2                     __ptext14:
  5577                           	opt stack 0
  5578  0037B2                     __tdiv_to_l_:
  5579                           	opt stack 18
  5580                           
  5581                           ; BSR set to: 1
  5582                           ;incstack = 0
  5583                           ;incstack = 0
  5584  0037B2  0E0F               	movlw	15
  5585  0037B4  0101               	movlb	1	; () banked
  5586  0037B6  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5587  0037B8  0101               	movlb	1	; () banked
  5588  0037BA  C100  F107         	movff	__tdiv_to_l_@f1,??__tdiv_to_l_+1
  5589  0037BE  0101               	movlb	1	; () banked
  5590  0037C0  C101  F108         	movff	__tdiv_to_l_@f1+1,??__tdiv_to_l_+2
  5591  0037C4  0101               	movlb	1	; () banked
  5592  0037C6  C102  F109         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_+3
  5593  0037CA  0101               	movlb	1	; () banked
  5594  0037CC  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  5595  0037CE  0101               	movlb	1	; () banked
  5596  0037D0  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  5597  0037D2  D005               	goto	u9550
  5598  0037D4                     u9555:
  5599  0037D4  0101               	movlb	1	; () banked
  5600  0037D6  90D8               	bcf	status,0,c
  5601  0037D8  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  5602  0037DA  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  5603  0037DC  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  5604  0037DE                     u9550:
  5605  0037DE  0101               	movlb	1	; () banked
  5606  0037E0  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  5607  0037E2  D7F8               	goto	u9555
  5608  0037E4  0101               	movlb	1	; () banked
  5609  0037E6  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  5610  0037E8  0101               	movlb	1	; () banked
  5611  0037EA  0101               	movlb	1	; () banked
  5612  0037EC  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5613  0037EE  0101               	movlb	1	; () banked
  5614  0037F0  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5615  0037F2  D001               	goto	l10574
  5616  0037F4  D0BE               	goto	u9620
  5617  0037F6                     l10574:
  5618                           
  5619                           ; BSR set to: 1
  5620  0037F6  0E0F               	movlw	15
  5621  0037F8  0101               	movlb	1	; () banked
  5622  0037FA  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5623  0037FC  0101               	movlb	1	; () banked
  5624  0037FE  C103  F107         	movff	__tdiv_to_l_@f2,??__tdiv_to_l_+1
  5625  003802  0101               	movlb	1	; () banked
  5626  003804  C104  F108         	movff	__tdiv_to_l_@f2+1,??__tdiv_to_l_+2
  5627  003808  0101               	movlb	1	; () banked
  5628  00380A  C105  F109         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_+3
  5629  00380E  0101               	movlb	1	; () banked
  5630  003810  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  5631  003812  0101               	movlb	1	; () banked
  5632  003814  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  5633  003816  D005               	goto	u9570
  5634  003818                     u9575:
  5635  003818  0101               	movlb	1	; () banked
  5636  00381A  90D8               	bcf	status,0,c
  5637  00381C  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  5638  00381E  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  5639  003820  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  5640  003822                     u9570:
  5641  003822  0101               	movlb	1	; () banked
  5642  003824  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  5643  003826  D7F8               	goto	u9575
  5644  003828  0101               	movlb	1	; () banked
  5645  00382A  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  5646  00382C  0101               	movlb	1	; () banked
  5647  00382E  0101               	movlb	1	; () banked
  5648  003830  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5649  003832  0101               	movlb	1	; () banked
  5650  003834  670F               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  5651  003836  D001               	goto	l10580
  5652  003838  D09C               	goto	u9620
  5653  00383A                     l10580:
  5654                           
  5655                           ; BSR set to: 1
  5656  00383A  0101               	movlb	1	; () banked
  5657  00383C  0101               	movlb	1	; () banked
  5658  00383E  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  5659                           
  5660                           ; BSR set to: 1
  5661  003840  0EFF               	movlw	255
  5662  003842  0101               	movlb	1	; () banked
  5663  003844  0101               	movlb	1	; () banked
  5664  003846  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  5665  003848  0EFF               	movlw	255
  5666  00384A  0101               	movlb	1	; () banked
  5667  00384C  0101               	movlb	1	; () banked
  5668  00384E  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5669  003850  0E00               	movlw	0
  5670  003852  0101               	movlb	1	; () banked
  5671  003854  0101               	movlb	1	; () banked
  5672  003856  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5673  003858  0101               	movlb	1	; () banked
  5674  00385A  0101               	movlb	1	; () banked
  5675  00385C  8F04               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  5676                           
  5677                           ; BSR set to: 1
  5678  00385E  0EFF               	movlw	255
  5679  003860  0101               	movlb	1	; () banked
  5680  003862  0101               	movlb	1	; () banked
  5681  003864  1703               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  5682  003866  0EFF               	movlw	255
  5683  003868  0101               	movlb	1	; () banked
  5684  00386A  0101               	movlb	1	; () banked
  5685  00386C  1704               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  5686  00386E  0E00               	movlw	0
  5687  003870  0101               	movlb	1	; () banked
  5688  003872  0101               	movlb	1	; () banked
  5689  003874  1705               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  5690                           
  5691                           ; BSR set to: 1
  5692  003876  0E00               	movlw	0
  5693  003878  0101               	movlb	1	; () banked
  5694  00387A  0101               	movlb	1	; () banked
  5695  00387C  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
  5696  00387E  0E00               	movlw	0
  5697  003880  0101               	movlb	1	; () banked
  5698  003882  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5699  003884  0E00               	movlw	0
  5700  003886  0101               	movlb	1	; () banked
  5701  003888  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5702  00388A  0E00               	movlw	0
  5703  00388C  0101               	movlb	1	; () banked
  5704  00388E  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5705                           
  5706                           ; BSR set to: 1
  5707  003890  0E7F               	movlw	127
  5708  003892  0101               	movlb	1	; () banked
  5709  003894  0101               	movlb	1	; () banked
  5710  003896  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5711                           
  5712                           ; BSR set to: 1
  5713  003898  0101               	movlb	1	; () banked
  5714  00389A  0101               	movlb	1	; () banked
  5715  00389C  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5716  00389E  0F98               	addlw	152
  5717  0038A0  0101               	movlb	1	; () banked
  5718  0038A2  0101               	movlb	1	; () banked
  5719  0038A4  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5720                           
  5721                           ; BSR set to: 1
  5722  0038A6  0101               	movlb	1	; () banked
  5723  0038A8  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5724  0038AA  0E18               	movlw	24
  5725  0038AC  0101               	movlb	1	; () banked
  5726  0038AE  0101               	movlb	1	; () banked
  5727  0038B0  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5728  0038B2  0101               	movlb	1	; () banked
  5729  0038B4  5106               	movf	??__tdiv_to_l_& (0+255),w,b
  5730  0038B6                     l10594:
  5731                           
  5732                           ; BSR set to: 1
  5733  0038B6  0101               	movlb	1	; () banked
  5734  0038B8  90D8               	bcf	status,0,c
  5735  0038BA  0101               	movlb	1	; () banked
  5736  0038BC  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5737  0038BE  0101               	movlb	1	; () banked
  5738  0038C0  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5739  0038C2  0101               	movlb	1	; () banked
  5740  0038C4  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5741  0038C6  0101               	movlb	1	; () banked
  5742  0038C8  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5743                           
  5744                           ; BSR set to: 1
  5745  0038CA  0101               	movlb	1	; () banked
  5746  0038CC  0101               	movlb	1	; () banked
  5747  0038CE  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5748  0038D0  0101               	movlb	1	; () banked
  5749  0038D2  0101               	movlb	1	; () banked
  5750  0038D4  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  5751  0038D6  0101               	movlb	1	; () banked
  5752  0038D8  0101               	movlb	1	; () banked
  5753  0038DA  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5754  0038DC  0101               	movlb	1	; () banked
  5755  0038DE  0101               	movlb	1	; () banked
  5756  0038E0  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5757  0038E2  0101               	movlb	1	; () banked
  5758  0038E4  0101               	movlb	1	; () banked
  5759  0038E6  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5760  0038E8  0101               	movlb	1	; () banked
  5761  0038EA  0101               	movlb	1	; () banked
  5762  0038EC  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  5763  0038EE  A0D8               	btfss	status,0,c
  5764  0038F0  D015               	goto	l758
  5765                           
  5766                           ; BSR set to: 1
  5767  0038F2  0101               	movlb	1	; () banked
  5768  0038F4  0101               	movlb	1	; () banked
  5769  0038F6  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5770  0038F8  0101               	movlb	1	; () banked
  5771  0038FA  0101               	movlb	1	; () banked
  5772  0038FC  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  5773  0038FE  0101               	movlb	1	; () banked
  5774  003900  0101               	movlb	1	; () banked
  5775  003902  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5776  003904  0101               	movlb	1	; () banked
  5777  003906  0101               	movlb	1	; () banked
  5778  003908  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5779  00390A  0101               	movlb	1	; () banked
  5780  00390C  0101               	movlb	1	; () banked
  5781  00390E  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5782  003910  0101               	movlb	1	; () banked
  5783  003912  0101               	movlb	1	; () banked
  5784  003914  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5785                           
  5786                           ; BSR set to: 1
  5787  003916  0101               	movlb	1	; () banked
  5788  003918  0101               	movlb	1	; () banked
  5789  00391A  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5790  00391C                     l758:
  5791                           
  5792                           ; BSR set to: 1
  5793  00391C  0101               	movlb	1	; () banked
  5794  00391E  90D8               	bcf	status,0,c
  5795  003920  0101               	movlb	1	; () banked
  5796  003922  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  5797  003924  0101               	movlb	1	; () banked
  5798  003926  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5799  003928  0101               	movlb	1	; () banked
  5800  00392A  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5801                           
  5802                           ; BSR set to: 1
  5803  00392C  0101               	movlb	1	; () banked
  5804  00392E  0101               	movlb	1	; () banked
  5805  003930  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5806  003932  D7C1               	goto	l10594
  5807                           
  5808                           ; BSR set to: 1
  5809  003934  0101               	movlb	1	; () banked
  5810  003936  0101               	movlb	1	; () banked
  5811  003938  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5812  00393A  D016               	goto	l10614
  5813                           
  5814                           ; BSR set to: 1
  5815  00393C  0101               	movlb	1	; () banked
  5816  00393E  0101               	movlb	1	; () banked
  5817  003940  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5818  003942  0A80               	xorlw	128
  5819  003944  0F97               	addlw	151
  5820  003946  A0D8               	btfss	status,0,c
  5821  003948  D014               	goto	u9620
  5822  00394A                     l10610:
  5823                           
  5824                           ; BSR set to: 1
  5825  00394A  0101               	movlb	1	; () banked
  5826  00394C  90D8               	bcf	status,0,c
  5827  00394E  0101               	movlb	1	; () banked
  5828  003950  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5829  003952  0101               	movlb	1	; () banked
  5830  003954  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5831  003956  0101               	movlb	1	; () banked
  5832  003958  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5833  00395A  0101               	movlb	1	; () banked
  5834  00395C  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5835                           
  5836                           ; BSR set to: 1
  5837  00395E  0101               	movlb	1	; () banked
  5838  003960  0101               	movlb	1	; () banked
  5839  003962  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5840  003964  D7F2               	goto	l10610
  5841  003966  D024               	goto	l764
  5842  003968                     l10614:
  5843                           
  5844                           ; BSR set to: 1
  5845  003968  0E17               	movlw	23
  5846  00396A  0101               	movlb	1	; () banked
  5847  00396C  0101               	movlb	1	; () banked
  5848  00396E  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5849  003970  D01B               	goto	l10622
  5850  003972                     u9620:
  5851                           
  5852                           ; BSR set to: 1
  5853  003972  0E00               	movlw	0
  5854  003974  0101               	movlb	1	; () banked
  5855  003976  0101               	movlb	1	; () banked
  5856  003978  6F00               	movwf	?__tdiv_to_l_& (0+255),b
  5857  00397A  0E00               	movlw	0
  5858  00397C  0101               	movlb	1	; () banked
  5859  00397E  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5860  003980  0E00               	movlw	0
  5861  003982  0101               	movlb	1	; () banked
  5862  003984  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5863  003986  0E00               	movlw	0
  5864  003988  0101               	movlb	1	; () banked
  5865  00398A  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5866  00398C  D019               	goto	l755
  5867  00398E                     l10620:
  5868                           
  5869                           ; BSR set to: 1
  5870  00398E  0101               	movlb	1	; () banked
  5871  003990  90D8               	bcf	status,0,c
  5872  003992  0101               	movlb	1	; () banked
  5873  003994  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5874  003996  0101               	movlb	1	; () banked
  5875  003998  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5876  00399A  0101               	movlb	1	; () banked
  5877  00399C  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5878  00399E  0101               	movlb	1	; () banked
  5879  0039A0  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5880  0039A2  0101               	movlb	1	; () banked
  5881  0039A4  0101               	movlb	1	; () banked
  5882  0039A6  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5883  0039A8                     l10622:
  5884                           
  5885                           ; BSR set to: 1
  5886  0039A8  0101               	movlb	1	; () banked
  5887  0039AA  0101               	movlb	1	; () banked
  5888  0039AC  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5889  0039AE  D7EF               	goto	l10620
  5890  0039B0                     l764:
  5891                           
  5892                           ; BSR set to: 1
  5893  0039B0  C10B  F100         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5894  0039B4  C10C  F101         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5895  0039B8  C10D  F102         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5896  0039BC  C10E  F103         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5897  0039C0                     l755:
  5898                           
  5899                           ; BSR set to: 1
  5900  0039C0  0012               	return	
  5901  0039C2                     __end_of__tdiv_to_l_:
  5902                           	opt stack 0
  5903                           tblptru	equ	0xFF8
  5904                           tblptrh	equ	0xFF7
  5905                           tblptrl	equ	0xFF6
  5906                           tablat	equ	0xFF5
  5907                           prodh	equ	0xFF4
  5908                           prodl	equ	0xFF3
  5909                           postinc0	equ	0xFEE
  5910                           wreg	equ	0xFE8
  5911                           indf2	equ	0xFDF
  5912                           postinc2	equ	0xFDE
  5913                           postdec2	equ	0xFDD
  5914                           fsr2h	equ	0xFDA
  5915                           fsr2l	equ	0xFD9
  5916                           status	equ	0xFD8
  5917                           
  5918 ;; *************** function _isdigit *****************
  5919 ;; Defined at:
  5920 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  c               1    0[BANK1 ] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;		None               void
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5934 ;;      Params:         0       0       1       0       0       0       0       0       0
  5935 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5936 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5937 ;;      Totals:         0       0       3       0       0       0       0       0       0
  5938 ;;Total ram usage:        3 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:   10
  5941 ;; This function calls:
  5942 ;;		Nothing
  5943 ;; This function is called by:
  5944 ;;		_sprintf
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text15
  5949  006062                     __ptext15:
  5950                           	opt stack 0
  5951  006062                     _isdigit:
  5952                           	opt stack 18
  5953                           
  5954                           ; BSR set to: 1
  5955                           ;incstack = 0
  5956                           ;incstack = 0
  5957  006062  0101               	movlb	1	; () banked
  5958  006064  6F01               	movwf	??_isdigit& (0+255),b
  5959  006066  0E00               	movlw	0
  5960  006068  0101               	movlb	1	; () banked
  5961  00606A  0101               	movlb	1	; () banked
  5962  00606C  6F02               	movwf	_isdigit$841& (0+255),b
  5963  00606E  0101               	movlb	1	; () banked
  5964  006070  5101               	movf	??_isdigit& (0+255),w,b
  5965                           
  5966                           ; BSR set to: 1
  5967  006072  0E3A               	movlw	58
  5968  006074  0101               	movlb	1	; () banked
  5969  006076  0101               	movlb	1	; () banked
  5970  006078  6100               	cpfslt	isdigit@c& (0+255),b
  5971  00607A  D00D               	goto	l10564
  5972                           
  5973                           ; BSR set to: 1
  5974  00607C  0E2F               	movlw	47
  5975  00607E  0101               	movlb	1	; () banked
  5976  006080  0101               	movlb	1	; () banked
  5977  006082  6500               	cpfsgt	isdigit@c& (0+255),b
  5978  006084  D008               	goto	l10564
  5979                           
  5980                           ; BSR set to: 1
  5981  006086  0101               	movlb	1	; () banked
  5982  006088  6F01               	movwf	??_isdigit& (0+255),b
  5983  00608A  0E01               	movlw	1
  5984  00608C  0101               	movlb	1	; () banked
  5985  00608E  0101               	movlb	1	; () banked
  5986  006090  6F02               	movwf	_isdigit$841& (0+255),b
  5987  006092  0101               	movlb	1	; () banked
  5988  006094  5101               	movf	??_isdigit& (0+255),w,b
  5989  006096                     l10564:
  5990                           
  5991                           ; BSR set to: 1
  5992  006096  C102  F101         	movff	_isdigit$841,??_isdigit
  5993  00609A  0101               	movlb	1	; () banked
  5994  00609C  3101               	rrcf	??_isdigit& (0+255),w,b
  5995                           
  5996                           ; BSR set to: 1
  5997                           
  5998                           ; BSR set to: 1
  5999  00609E  0012               	return	
  6000  0060A0                     __end_of_isdigit:
  6001                           	opt stack 0
  6002                           tblptru	equ	0xFF8
  6003                           tblptrh	equ	0xFF7
  6004                           tblptrl	equ	0xFF6
  6005                           tablat	equ	0xFF5
  6006                           prodh	equ	0xFF4
  6007                           prodl	equ	0xFF3
  6008                           postinc0	equ	0xFEE
  6009                           wreg	equ	0xFE8
  6010                           indf2	equ	0xFDF
  6011                           postinc2	equ	0xFDE
  6012                           postdec2	equ	0xFDD
  6013                           fsr2h	equ	0xFDA
  6014                           fsr2l	equ	0xFD9
  6015                           status	equ	0xFD8
  6016                           
  6017 ;; *************** function _scale *****************
  6018 ;; Defined at:
  6019 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  scl             1   39[BANK1 ] char 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  3   39[BANK1 ] char 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6033 ;;      Params:         0       0       3       0       0       0       0       0       0
  6034 ;;      Locals:         0       0       3       0       0       0       0       0       0
  6035 ;;      Temps:          0       0       6       0       0       0       0       0       0
  6036 ;;      Totals:         0       0      12       0       0       0       0       0       0
  6037 ;;Total ram usage:       12 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:   12
  6040 ;; This function calls:
  6041 ;;		___ftmul
  6042 ;;		___awdiv
  6043 ;;		___awmod
  6044 ;;		___wmul
  6045 ;; This function is called by:
  6046 ;;		_sprintf
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text16
  6051  002414                     __ptext16:
  6052                           	opt stack 0
  6053  002414                     _scale:
  6054                           	opt stack 16
  6055                           
  6056                           ;doprnt.c: 428: if(scl < 0) {
  6057                           
  6058                           ; BSR set to: 1
  6059                           ;incstack = 0
  6060                           ;incstack = 0
  6061  002414  0101               	movlb	1	; () banked
  6062  002416  0101               	movlb	1	; () banked
  6063  002418  AF27               	btfss	scale@scl& (0+255),7,b
  6064  00241A  D179               	goto	l10538
  6065                           
  6066                           ; BSR set to: 1
  6067                           ;doprnt.c: 429: scl = -scl;
  6068  00241C  0101               	movlb	1	; () banked
  6069  00241E  0101               	movlb	1	; () banked
  6070  002420  6D27               	negf	scale@scl& (0+255),b
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;doprnt.c: 430: if(scl>=110)
  6074  002422  0101               	movlb	1	; () banked
  6075  002424  0101               	movlb	1	; () banked
  6076  002426  5127               	movf	scale@scl& (0+255),w,b
  6077  002428  0A80               	xorlw	128
  6078  00242A  0F12               	addlw	-238
  6079  00242C  A0D8               	btfss	status,0,c
  6080  00242E  D0DF               	goto	l10528
  6081                           
  6082                           ; BSR set to: 1
  6083                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6084  002430  0E00               	movlw	0
  6085  002432  0101               	movlb	1	; () banked
  6086  002434  0101               	movlb	1	; () banked
  6087  002436  6F13               	movwf	(?___wmul+3)& (0+255),b
  6088  002438  0E03               	movlw	3
  6089  00243A  0101               	movlb	1	; () banked
  6090  00243C  6F12               	movwf	(?___wmul+2)& (0+255),b
  6091  00243E  0E00               	movlw	0
  6092  002440  0101               	movlb	1	; () banked
  6093  002442  0101               	movlb	1	; () banked
  6094  002444  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6095  002446  0E0A               	movlw	10
  6096  002448  0101               	movlb	1	; () banked
  6097  00244A  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6098  00244C  0E00               	movlw	0
  6099  00244E  0101               	movlb	1	; () banked
  6100  002450  0101               	movlb	1	; () banked
  6101  002452  6F03               	movwf	(?___awmod+3)& (0+255),b
  6102  002454  0E64               	movlw	100
  6103  002456  0101               	movlb	1	; () banked
  6104  002458  6F02               	movwf	(?___awmod+2)& (0+255),b
  6105  00245A  0101               	movlb	1	; () banked
  6106  00245C  0101               	movlb	1	; () banked
  6107  00245E  5127               	movf	scale@scl& (0+255),w,b
  6108  002460  0101               	movlb	1	; () banked
  6109  002462  0101               	movlb	1	; () banked
  6110  002464  6F00               	movwf	?___awmod& (0+255),b
  6111  002466  0101               	movlb	1	; () banked
  6112  002468  6B01               	clrf	(?___awmod+1)& (0+255),b
  6113  00246A  0101               	movlb	1	; () banked
  6114  00246C  BF00               	btfsc	?___awmod& (0+255),7,b
  6115  00246E  0701               	decf	(?___awmod+1)& (0+255),f,b
  6116  002470  ECF7  F027         	call	___awmod	;wreg free
  6117  002474  0101               	movlb	1	; () banked
  6118  002476  C100  F107         	movff	?___awmod,?___awdiv
  6119  00247A  0101               	movlb	1	; () banked
  6120  00247C  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6121  002480  EC6E  F023         	call	___awdiv	;wreg free
  6122  002484  0E09               	movlw	9
  6123  002486  0101               	movlb	1	; () banked
  6124  002488  0101               	movlb	1	; () banked
  6125  00248A  2507               	addwf	?___awdiv& (0+255),w,b
  6126  00248C  0101               	movlb	1	; () banked
  6127  00248E  0101               	movlb	1	; () banked
  6128  002490  6F10               	movwf	?___wmul& (0+255),b
  6129  002492  0E00               	movlw	0
  6130  002494  0101               	movlb	1	; () banked
  6131  002496  0101               	movlb	1	; () banked
  6132  002498  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6133  00249A  0101               	movlb	1	; () banked
  6134  00249C  6F11               	movwf	(?___wmul+1)& (0+255),b
  6135  00249E  ECB8  F02E         	call	___wmul	;wreg free
  6136  0024A2  0E28               	movlw	low __npowers_
  6137  0024A4  0101               	movlb	1	; () banked
  6138  0024A6  0101               	movlb	1	; () banked
  6139  0024A8  2510               	addwf	?___wmul& (0+255),w,b
  6140  0024AA  6EF6               	movwf	tblptrl,c
  6141  0024AC  0E08               	movlw	high __npowers_
  6142  0024AE  0101               	movlb	1	; () banked
  6143  0024B0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6144  0024B2  6EF7               	movwf	tblptrh,c
  6145  0024B4  0009               	tblrd		*+
  6146  0024B6  CFF5 F12A          	movff	tablat,??_scale
  6147  0024BA  0009               	tblrd		*+
  6148  0024BC  CFF5 F12B          	movff	tablat,??_scale+1
  6149  0024C0  0009               	tblrd		*+
  6150  0024C2  CFF5 F12C          	movff	tablat,??_scale+2
  6151  0024C6  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6152  0024CA  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6153  0024CE  C12A  F119         	movff	??_scale,?___ftmul+3
  6154  0024D2  0E00               	movlw	0
  6155  0024D4  0101               	movlb	1	; () banked
  6156  0024D6  0101               	movlb	1	; () banked
  6157  0024D8  6F13               	movwf	(?___wmul+3)& (0+255),b
  6158  0024DA  0E03               	movlw	3
  6159  0024DC  0101               	movlb	1	; () banked
  6160  0024DE  6F12               	movwf	(?___wmul+2)& (0+255),b
  6161  0024E0  0E00               	movlw	0
  6162  0024E2  0101               	movlb	1	; () banked
  6163  0024E4  0101               	movlb	1	; () banked
  6164  0024E6  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6165  0024E8  0E64               	movlw	100
  6166  0024EA  0101               	movlb	1	; () banked
  6167  0024EC  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6168  0024EE  0101               	movlb	1	; () banked
  6169  0024F0  0101               	movlb	1	; () banked
  6170  0024F2  5127               	movf	scale@scl& (0+255),w,b
  6171  0024F4  0101               	movlb	1	; () banked
  6172  0024F6  0101               	movlb	1	; () banked
  6173  0024F8  6F07               	movwf	?___awdiv& (0+255),b
  6174  0024FA  0101               	movlb	1	; () banked
  6175  0024FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6176  0024FE  0101               	movlb	1	; () banked
  6177  002500  BF07               	btfsc	?___awdiv& (0+255),7,b
  6178  002502  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6179  002504  EC6E  F023         	call	___awdiv	;wreg free
  6180  002508  0E12               	movlw	18
  6181  00250A  0101               	movlb	1	; () banked
  6182  00250C  0101               	movlb	1	; () banked
  6183  00250E  2507               	addwf	?___awdiv& (0+255),w,b
  6184  002510  0101               	movlb	1	; () banked
  6185  002512  0101               	movlb	1	; () banked
  6186  002514  6F10               	movwf	?___wmul& (0+255),b
  6187  002516  0E00               	movlw	0
  6188  002518  0101               	movlb	1	; () banked
  6189  00251A  0101               	movlb	1	; () banked
  6190  00251C  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6191  00251E  0101               	movlb	1	; () banked
  6192  002520  6F11               	movwf	(?___wmul+1)& (0+255),b
  6193  002522  ECB8  F02E         	call	___wmul	;wreg free
  6194  002526  0E28               	movlw	low __npowers_
  6195  002528  0101               	movlb	1	; () banked
  6196  00252A  0101               	movlb	1	; () banked
  6197  00252C  2510               	addwf	?___wmul& (0+255),w,b
  6198  00252E  6EF6               	movwf	tblptrl,c
  6199  002530  0E08               	movlw	high __npowers_
  6200  002532  0101               	movlb	1	; () banked
  6201  002534  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6202  002536  6EF7               	movwf	tblptrh,c
  6203  002538  0009               	tblrd		*+
  6204  00253A  CFF5 F12D          	movff	tablat,??_scale+3
  6205  00253E  0009               	tblrd		*+
  6206  002540  CFF5 F12E          	movff	tablat,??_scale+4
  6207  002544  0009               	tblrd		*+
  6208  002546  CFF5 F12F          	movff	tablat,??_scale+5
  6209  00254A  C12F  F118         	movff	??_scale+5,?___ftmul+2
  6210  00254E  C12E  F117         	movff	??_scale+4,?___ftmul+1
  6211  002552  C12D  F116         	movff	??_scale+3,?___ftmul
  6212  002556  ECE1  F01C         	call	___ftmul	;wreg free
  6213  00255A  C118  F132         	movff	?___ftmul+2,_scale$1206+2
  6214  00255E  C117  F131         	movff	?___ftmul+1,_scale$1206+1
  6215  002562  C116  F130         	movff	?___ftmul,_scale$1206
  6216                           
  6217                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6218  002566  C130  F116         	movff	_scale$1206,?___ftmul
  6219  00256A  C131  F117         	movff	_scale$1206+1,?___ftmul+1
  6220  00256E  C132  F118         	movff	_scale$1206+2,?___ftmul+2
  6221  002572  0E00               	movlw	0
  6222  002574  0101               	movlb	1	; () banked
  6223  002576  0101               	movlb	1	; () banked
  6224  002578  6F13               	movwf	(?___wmul+3)& (0+255),b
  6225  00257A  0E03               	movlw	3
  6226  00257C  0101               	movlb	1	; () banked
  6227  00257E  6F12               	movwf	(?___wmul+2)& (0+255),b
  6228  002580  0E00               	movlw	0
  6229  002582  0101               	movlb	1	; () banked
  6230  002584  0101               	movlb	1	; () banked
  6231  002586  6F03               	movwf	(?___awmod+3)& (0+255),b
  6232  002588  0E0A               	movlw	10
  6233  00258A  0101               	movlb	1	; () banked
  6234  00258C  6F02               	movwf	(?___awmod+2)& (0+255),b
  6235  00258E  0101               	movlb	1	; () banked
  6236  002590  0101               	movlb	1	; () banked
  6237  002592  5127               	movf	scale@scl& (0+255),w,b
  6238  002594  0101               	movlb	1	; () banked
  6239  002596  0101               	movlb	1	; () banked
  6240  002598  6F00               	movwf	?___awmod& (0+255),b
  6241  00259A  0101               	movlb	1	; () banked
  6242  00259C  6B01               	clrf	(?___awmod+1)& (0+255),b
  6243  00259E  0101               	movlb	1	; () banked
  6244  0025A0  BF00               	btfsc	?___awmod& (0+255),7,b
  6245  0025A2  0701               	decf	(?___awmod+1)& (0+255),f,b
  6246  0025A4  ECF7  F027         	call	___awmod	;wreg free
  6247  0025A8  0101               	movlb	1	; () banked
  6248  0025AA  C100  F110         	movff	?___awmod,?___wmul
  6249  0025AE  0101               	movlb	1	; () banked
  6250  0025B0  C101  F111         	movff	?___awmod+1,?___wmul+1
  6251  0025B4  ECB8  F02E         	call	___wmul	;wreg free
  6252  0025B8  0E28               	movlw	low __npowers_
  6253  0025BA  0101               	movlb	1	; () banked
  6254  0025BC  0101               	movlb	1	; () banked
  6255  0025BE  2510               	addwf	?___wmul& (0+255),w,b
  6256  0025C0  6EF6               	movwf	tblptrl,c
  6257  0025C2  0E08               	movlw	high __npowers_
  6258  0025C4  0101               	movlb	1	; () banked
  6259  0025C6  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6260  0025C8  6EF7               	movwf	tblptrh,c
  6261  0025CA  0009               	tblrd		*+
  6262  0025CC  CFF5 F12A          	movff	tablat,??_scale
  6263  0025D0  0009               	tblrd		*+
  6264  0025D2  CFF5 F12B          	movff	tablat,??_scale+1
  6265  0025D6  0009               	tblrd		*+
  6266  0025D8  CFF5 F12C          	movff	tablat,??_scale+2
  6267  0025DC  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6268  0025E0  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6269  0025E4  C12A  F119         	movff	??_scale,?___ftmul+3
  6270  0025E8  ECE1  F01C         	call	___ftmul	;wreg free
  6271  0025EC  D1FC               	goto	L10
  6272  0025EE                     l10528:
  6273                           
  6274                           ;doprnt.c: 432: else if(scl > 10)
  6275  0025EE  0101               	movlb	1	; () banked
  6276  0025F0  0101               	movlb	1	; () banked
  6277  0025F2  5127               	movf	scale@scl& (0+255),w,b
  6278  0025F4  0A80               	xorlw	128
  6279  0025F6  0F75               	addlw	-139
  6280  0025F8  A0D8               	btfss	status,0,c
  6281  0025FA  D080               	goto	l10534
  6282                           
  6283                           ; BSR set to: 1
  6284                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6285  0025FC  0E00               	movlw	0
  6286  0025FE  0101               	movlb	1	; () banked
  6287  002600  0101               	movlb	1	; () banked
  6288  002602  6F13               	movwf	(?___wmul+3)& (0+255),b
  6289  002604  0E03               	movlw	3
  6290  002606  0101               	movlb	1	; () banked
  6291  002608  6F12               	movwf	(?___wmul+2)& (0+255),b
  6292  00260A  0E00               	movlw	0
  6293  00260C  0101               	movlb	1	; () banked
  6294  00260E  0101               	movlb	1	; () banked
  6295  002610  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6296  002612  0E0A               	movlw	10
  6297  002614  0101               	movlb	1	; () banked
  6298  002616  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6299  002618  0101               	movlb	1	; () banked
  6300  00261A  0101               	movlb	1	; () banked
  6301  00261C  5127               	movf	scale@scl& (0+255),w,b
  6302  00261E  0101               	movlb	1	; () banked
  6303  002620  0101               	movlb	1	; () banked
  6304  002622  6F07               	movwf	?___awdiv& (0+255),b
  6305  002624  0101               	movlb	1	; () banked
  6306  002626  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6307  002628  0101               	movlb	1	; () banked
  6308  00262A  BF07               	btfsc	?___awdiv& (0+255),7,b
  6309  00262C  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6310  00262E  EC6E  F023         	call	___awdiv	;wreg free
  6311  002632  0E09               	movlw	9
  6312  002634  0101               	movlb	1	; () banked
  6313  002636  0101               	movlb	1	; () banked
  6314  002638  2507               	addwf	?___awdiv& (0+255),w,b
  6315  00263A  0101               	movlb	1	; () banked
  6316  00263C  0101               	movlb	1	; () banked
  6317  00263E  6F10               	movwf	?___wmul& (0+255),b
  6318  002640  0E00               	movlw	0
  6319  002642  0101               	movlb	1	; () banked
  6320  002644  0101               	movlb	1	; () banked
  6321  002646  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6322  002648  0101               	movlb	1	; () banked
  6323  00264A  6F11               	movwf	(?___wmul+1)& (0+255),b
  6324  00264C  ECB8  F02E         	call	___wmul	;wreg free
  6325  002650  0E28               	movlw	low __npowers_
  6326  002652  0101               	movlb	1	; () banked
  6327  002654  0101               	movlb	1	; () banked
  6328  002656  2510               	addwf	?___wmul& (0+255),w,b
  6329  002658  6EF6               	movwf	tblptrl,c
  6330  00265A  0E08               	movlw	high __npowers_
  6331  00265C  0101               	movlb	1	; () banked
  6332  00265E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6333  002660  6EF7               	movwf	tblptrh,c
  6334  002662  0009               	tblrd		*+
  6335  002664  CFF5 F12A          	movff	tablat,??_scale
  6336  002668  0009               	tblrd		*+
  6337  00266A  CFF5 F12B          	movff	tablat,??_scale+1
  6338  00266E  0009               	tblrd		*+
  6339  002670  CFF5 F12C          	movff	tablat,??_scale+2
  6340  002674  C12C  F118         	movff	??_scale+2,?___ftmul+2
  6341  002678  C12B  F117         	movff	??_scale+1,?___ftmul+1
  6342  00267C  C12A  F116         	movff	??_scale,?___ftmul
  6343  002680  0E00               	movlw	0
  6344  002682  0101               	movlb	1	; () banked
  6345  002684  0101               	movlb	1	; () banked
  6346  002686  6F13               	movwf	(?___wmul+3)& (0+255),b
  6347  002688  0E03               	movlw	3
  6348  00268A  0101               	movlb	1	; () banked
  6349  00268C  6F12               	movwf	(?___wmul+2)& (0+255),b
  6350  00268E  0E00               	movlw	0
  6351  002690  0101               	movlb	1	; () banked
  6352  002692  0101               	movlb	1	; () banked
  6353  002694  6F03               	movwf	(?___awmod+3)& (0+255),b
  6354  002696  0E0A               	movlw	10
  6355  002698  0101               	movlb	1	; () banked
  6356  00269A  6F02               	movwf	(?___awmod+2)& (0+255),b
  6357  00269C  0101               	movlb	1	; () banked
  6358  00269E  0101               	movlb	1	; () banked
  6359  0026A0  5127               	movf	scale@scl& (0+255),w,b
  6360  0026A2  0101               	movlb	1	; () banked
  6361  0026A4  0101               	movlb	1	; () banked
  6362  0026A6  6F00               	movwf	?___awmod& (0+255),b
  6363  0026A8  0101               	movlb	1	; () banked
  6364  0026AA  6B01               	clrf	(?___awmod+1)& (0+255),b
  6365  0026AC  0101               	movlb	1	; () banked
  6366  0026AE  BF00               	btfsc	?___awmod& (0+255),7,b
  6367  0026B0  0701               	decf	(?___awmod+1)& (0+255),f,b
  6368  0026B2  ECF7  F027         	call	___awmod	;wreg free
  6369  0026B6  0101               	movlb	1	; () banked
  6370  0026B8  C100  F110         	movff	?___awmod,?___wmul
  6371  0026BC  0101               	movlb	1	; () banked
  6372  0026BE  C101  F111         	movff	?___awmod+1,?___wmul+1
  6373  0026C2  ECB8  F02E         	call	___wmul	;wreg free
  6374  0026C6  0E28               	movlw	low __npowers_
  6375  0026C8  0101               	movlb	1	; () banked
  6376  0026CA  0101               	movlb	1	; () banked
  6377  0026CC  2510               	addwf	?___wmul& (0+255),w,b
  6378  0026CE  6EF6               	movwf	tblptrl,c
  6379  0026D0  0E08               	movlw	high __npowers_
  6380  0026D2  0101               	movlb	1	; () banked
  6381  0026D4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6382  0026D6  6EF7               	movwf	tblptrh,c
  6383  0026D8  0009               	tblrd		*+
  6384  0026DA  CFF5 F12D          	movff	tablat,??_scale+3
  6385  0026DE  0009               	tblrd		*+
  6386  0026E0  CFF5 F12E          	movff	tablat,??_scale+4
  6387  0026E4  0009               	tblrd		*+
  6388  0026E6  CFF5 F12F          	movff	tablat,??_scale+5
  6389  0026EA  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  6390  0026EE  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  6391  0026F2  C12D  F119         	movff	??_scale+3,?___ftmul+3
  6392  0026F6  ECE1  F01C         	call	___ftmul	;wreg free
  6393  0026FA  D175               	goto	L10
  6394  0026FC                     l10534:
  6395                           
  6396                           ;doprnt.c: 434: return _npowers_[scl];
  6397  0026FC  0101               	movlb	1	; () banked
  6398  0026FE  0101               	movlb	1	; () banked
  6399  002700  5127               	movf	scale@scl& (0+255),w,b
  6400  002702  0D03               	mullw	3
  6401  002704  0E28               	movlw	low __npowers_
  6402  002706  24F3               	addwf	prodl,w,c
  6403  002708  6EF6               	movwf	tblptrl,c
  6404  00270A  0E08               	movlw	high __npowers_
  6405  00270C  D17B               	goto	L9
  6406  00270E                     l10538:
  6407                           
  6408                           ; BSR set to: 1
  6409                           ;doprnt.c: 435: }
  6410                           ;doprnt.c: 436: if(scl>=110)
  6411  00270E  0101               	movlb	1	; () banked
  6412  002710  0101               	movlb	1	; () banked
  6413  002712  5127               	movf	scale@scl& (0+255),w,b
  6414  002714  0A80               	xorlw	128
  6415  002716  0F12               	addlw	-238
  6416  002718  A0D8               	btfss	status,0,c
  6417  00271A  D0DF               	goto	l10546
  6418                           
  6419                           ; BSR set to: 1
  6420                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6421  00271C  0E00               	movlw	0
  6422  00271E  0101               	movlb	1	; () banked
  6423  002720  0101               	movlb	1	; () banked
  6424  002722  6F13               	movwf	(?___wmul+3)& (0+255),b
  6425  002724  0E03               	movlw	3
  6426  002726  0101               	movlb	1	; () banked
  6427  002728  6F12               	movwf	(?___wmul+2)& (0+255),b
  6428  00272A  0E00               	movlw	0
  6429  00272C  0101               	movlb	1	; () banked
  6430  00272E  0101               	movlb	1	; () banked
  6431  002730  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6432  002732  0E0A               	movlw	10
  6433  002734  0101               	movlb	1	; () banked
  6434  002736  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6435  002738  0E00               	movlw	0
  6436  00273A  0101               	movlb	1	; () banked
  6437  00273C  0101               	movlb	1	; () banked
  6438  00273E  6F03               	movwf	(?___awmod+3)& (0+255),b
  6439  002740  0E64               	movlw	100
  6440  002742  0101               	movlb	1	; () banked
  6441  002744  6F02               	movwf	(?___awmod+2)& (0+255),b
  6442  002746  0101               	movlb	1	; () banked
  6443  002748  0101               	movlb	1	; () banked
  6444  00274A  5127               	movf	scale@scl& (0+255),w,b
  6445  00274C  0101               	movlb	1	; () banked
  6446  00274E  0101               	movlb	1	; () banked
  6447  002750  6F00               	movwf	?___awmod& (0+255),b
  6448  002752  0101               	movlb	1	; () banked
  6449  002754  6B01               	clrf	(?___awmod+1)& (0+255),b
  6450  002756  0101               	movlb	1	; () banked
  6451  002758  BF00               	btfsc	?___awmod& (0+255),7,b
  6452  00275A  0701               	decf	(?___awmod+1)& (0+255),f,b
  6453  00275C  ECF7  F027         	call	___awmod	;wreg free
  6454  002760  0101               	movlb	1	; () banked
  6455  002762  C100  F107         	movff	?___awmod,?___awdiv
  6456  002766  0101               	movlb	1	; () banked
  6457  002768  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6458  00276C  EC6E  F023         	call	___awdiv	;wreg free
  6459  002770  0E09               	movlw	9
  6460  002772  0101               	movlb	1	; () banked
  6461  002774  0101               	movlb	1	; () banked
  6462  002776  2507               	addwf	?___awdiv& (0+255),w,b
  6463  002778  0101               	movlb	1	; () banked
  6464  00277A  0101               	movlb	1	; () banked
  6465  00277C  6F10               	movwf	?___wmul& (0+255),b
  6466  00277E  0E00               	movlw	0
  6467  002780  0101               	movlb	1	; () banked
  6468  002782  0101               	movlb	1	; () banked
  6469  002784  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6470  002786  0101               	movlb	1	; () banked
  6471  002788  6F11               	movwf	(?___wmul+1)& (0+255),b
  6472  00278A  ECB8  F02E         	call	___wmul	;wreg free
  6473  00278E  0E4F               	movlw	low __powers_
  6474  002790  0101               	movlb	1	; () banked
  6475  002792  0101               	movlb	1	; () banked
  6476  002794  2510               	addwf	?___wmul& (0+255),w,b
  6477  002796  6EF6               	movwf	tblptrl,c
  6478  002798  0E08               	movlw	high __powers_
  6479  00279A  0101               	movlb	1	; () banked
  6480  00279C  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6481  00279E  6EF7               	movwf	tblptrh,c
  6482  0027A0  0009               	tblrd		*+
  6483  0027A2  CFF5 F12A          	movff	tablat,??_scale
  6484  0027A6  0009               	tblrd		*+
  6485  0027A8  CFF5 F12B          	movff	tablat,??_scale+1
  6486  0027AC  0009               	tblrd		*+
  6487  0027AE  CFF5 F12C          	movff	tablat,??_scale+2
  6488  0027B2  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6489  0027B6  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6490  0027BA  C12A  F119         	movff	??_scale,?___ftmul+3
  6491  0027BE  0E00               	movlw	0
  6492  0027C0  0101               	movlb	1	; () banked
  6493  0027C2  0101               	movlb	1	; () banked
  6494  0027C4  6F13               	movwf	(?___wmul+3)& (0+255),b
  6495  0027C6  0E03               	movlw	3
  6496  0027C8  0101               	movlb	1	; () banked
  6497  0027CA  6F12               	movwf	(?___wmul+2)& (0+255),b
  6498  0027CC  0E00               	movlw	0
  6499  0027CE  0101               	movlb	1	; () banked
  6500  0027D0  0101               	movlb	1	; () banked
  6501  0027D2  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6502  0027D4  0E64               	movlw	100
  6503  0027D6  0101               	movlb	1	; () banked
  6504  0027D8  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6505  0027DA  0101               	movlb	1	; () banked
  6506  0027DC  0101               	movlb	1	; () banked
  6507  0027DE  5127               	movf	scale@scl& (0+255),w,b
  6508  0027E0  0101               	movlb	1	; () banked
  6509  0027E2  0101               	movlb	1	; () banked
  6510  0027E4  6F07               	movwf	?___awdiv& (0+255),b
  6511  0027E6  0101               	movlb	1	; () banked
  6512  0027E8  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6513  0027EA  0101               	movlb	1	; () banked
  6514  0027EC  BF07               	btfsc	?___awdiv& (0+255),7,b
  6515  0027EE  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6516  0027F0  EC6E  F023         	call	___awdiv	;wreg free
  6517  0027F4  0E12               	movlw	18
  6518  0027F6  0101               	movlb	1	; () banked
  6519  0027F8  0101               	movlb	1	; () banked
  6520  0027FA  2507               	addwf	?___awdiv& (0+255),w,b
  6521  0027FC  0101               	movlb	1	; () banked
  6522  0027FE  0101               	movlb	1	; () banked
  6523  002800  6F10               	movwf	?___wmul& (0+255),b
  6524  002802  0E00               	movlw	0
  6525  002804  0101               	movlb	1	; () banked
  6526  002806  0101               	movlb	1	; () banked
  6527  002808  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6528  00280A  0101               	movlb	1	; () banked
  6529  00280C  6F11               	movwf	(?___wmul+1)& (0+255),b
  6530  00280E  ECB8  F02E         	call	___wmul	;wreg free
  6531  002812  0E4F               	movlw	low __powers_
  6532  002814  0101               	movlb	1	; () banked
  6533  002816  0101               	movlb	1	; () banked
  6534  002818  2510               	addwf	?___wmul& (0+255),w,b
  6535  00281A  6EF6               	movwf	tblptrl,c
  6536  00281C  0E08               	movlw	high __powers_
  6537  00281E  0101               	movlb	1	; () banked
  6538  002820  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6539  002822  6EF7               	movwf	tblptrh,c
  6540  002824  0009               	tblrd		*+
  6541  002826  CFF5 F12D          	movff	tablat,??_scale+3
  6542  00282A  0009               	tblrd		*+
  6543  00282C  CFF5 F12E          	movff	tablat,??_scale+4
  6544  002830  0009               	tblrd		*+
  6545  002832  CFF5 F12F          	movff	tablat,??_scale+5
  6546  002836  C12F  F118         	movff	??_scale+5,?___ftmul+2
  6547  00283A  C12E  F117         	movff	??_scale+4,?___ftmul+1
  6548  00283E  C12D  F116         	movff	??_scale+3,?___ftmul
  6549  002842  ECE1  F01C         	call	___ftmul	;wreg free
  6550  002846  C118  F132         	movff	?___ftmul+2,_scale$1206+2
  6551  00284A  C117  F131         	movff	?___ftmul+1,_scale$1206+1
  6552  00284E  C116  F130         	movff	?___ftmul,_scale$1206
  6553                           
  6554                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6555  002852  C130  F116         	movff	_scale$1206,?___ftmul
  6556  002856  C131  F117         	movff	_scale$1206+1,?___ftmul+1
  6557  00285A  C132  F118         	movff	_scale$1206+2,?___ftmul+2
  6558  00285E  0E00               	movlw	0
  6559  002860  0101               	movlb	1	; () banked
  6560  002862  0101               	movlb	1	; () banked
  6561  002864  6F13               	movwf	(?___wmul+3)& (0+255),b
  6562  002866  0E03               	movlw	3
  6563  002868  0101               	movlb	1	; () banked
  6564  00286A  6F12               	movwf	(?___wmul+2)& (0+255),b
  6565  00286C  0E00               	movlw	0
  6566  00286E  0101               	movlb	1	; () banked
  6567  002870  0101               	movlb	1	; () banked
  6568  002872  6F03               	movwf	(?___awmod+3)& (0+255),b
  6569  002874  0E0A               	movlw	10
  6570  002876  0101               	movlb	1	; () banked
  6571  002878  6F02               	movwf	(?___awmod+2)& (0+255),b
  6572  00287A  0101               	movlb	1	; () banked
  6573  00287C  0101               	movlb	1	; () banked
  6574  00287E  5127               	movf	scale@scl& (0+255),w,b
  6575  002880  0101               	movlb	1	; () banked
  6576  002882  0101               	movlb	1	; () banked
  6577  002884  6F00               	movwf	?___awmod& (0+255),b
  6578  002886  0101               	movlb	1	; () banked
  6579  002888  6B01               	clrf	(?___awmod+1)& (0+255),b
  6580  00288A  0101               	movlb	1	; () banked
  6581  00288C  BF00               	btfsc	?___awmod& (0+255),7,b
  6582  00288E  0701               	decf	(?___awmod+1)& (0+255),f,b
  6583  002890  ECF7  F027         	call	___awmod	;wreg free
  6584  002894  0101               	movlb	1	; () banked
  6585  002896  C100  F110         	movff	?___awmod,?___wmul
  6586  00289A  0101               	movlb	1	; () banked
  6587  00289C  C101  F111         	movff	?___awmod+1,?___wmul+1
  6588  0028A0  ECB8  F02E         	call	___wmul	;wreg free
  6589  0028A4  0E4F               	movlw	low __powers_
  6590  0028A6  0101               	movlb	1	; () banked
  6591  0028A8  0101               	movlb	1	; () banked
  6592  0028AA  2510               	addwf	?___wmul& (0+255),w,b
  6593  0028AC  6EF6               	movwf	tblptrl,c
  6594  0028AE  0E08               	movlw	high __powers_
  6595  0028B0  0101               	movlb	1	; () banked
  6596  0028B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6597  0028B4  6EF7               	movwf	tblptrh,c
  6598  0028B6  0009               	tblrd		*+
  6599  0028B8  CFF5 F12A          	movff	tablat,??_scale
  6600  0028BC  0009               	tblrd		*+
  6601  0028BE  CFF5 F12B          	movff	tablat,??_scale+1
  6602  0028C2  0009               	tblrd		*+
  6603  0028C4  CFF5 F12C          	movff	tablat,??_scale+2
  6604  0028C8  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6605  0028CC  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6606  0028D0  C12A  F119         	movff	??_scale,?___ftmul+3
  6607  0028D4  ECE1  F01C         	call	___ftmul	;wreg free
  6608  0028D8  D086               	goto	L10
  6609  0028DA                     l10546:
  6610                           
  6611                           ;doprnt.c: 438: else if(scl > 10)
  6612  0028DA  0101               	movlb	1	; () banked
  6613  0028DC  0101               	movlb	1	; () banked
  6614  0028DE  5127               	movf	scale@scl& (0+255),w,b
  6615  0028E0  0A80               	xorlw	128
  6616  0028E2  0F75               	addlw	-139
  6617  0028E4  A0D8               	btfss	status,0,c
  6618  0028E6  D086               	goto	l10552
  6619                           
  6620                           ; BSR set to: 1
  6621                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6622  0028E8  0E00               	movlw	0
  6623  0028EA  0101               	movlb	1	; () banked
  6624  0028EC  0101               	movlb	1	; () banked
  6625  0028EE  6F13               	movwf	(?___wmul+3)& (0+255),b
  6626  0028F0  0E03               	movlw	3
  6627  0028F2  0101               	movlb	1	; () banked
  6628  0028F4  6F12               	movwf	(?___wmul+2)& (0+255),b
  6629  0028F6  0E00               	movlw	0
  6630  0028F8  0101               	movlb	1	; () banked
  6631  0028FA  0101               	movlb	1	; () banked
  6632  0028FC  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6633  0028FE  0E0A               	movlw	10
  6634  002900  0101               	movlb	1	; () banked
  6635  002902  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6636  002904  0101               	movlb	1	; () banked
  6637  002906  0101               	movlb	1	; () banked
  6638  002908  5127               	movf	scale@scl& (0+255),w,b
  6639  00290A  0101               	movlb	1	; () banked
  6640  00290C  0101               	movlb	1	; () banked
  6641  00290E  6F07               	movwf	?___awdiv& (0+255),b
  6642  002910  0101               	movlb	1	; () banked
  6643  002912  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6644  002914  0101               	movlb	1	; () banked
  6645  002916  BF07               	btfsc	?___awdiv& (0+255),7,b
  6646  002918  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6647  00291A  EC6E  F023         	call	___awdiv	;wreg free
  6648  00291E  0E09               	movlw	9
  6649  002920  0101               	movlb	1	; () banked
  6650  002922  0101               	movlb	1	; () banked
  6651  002924  2507               	addwf	?___awdiv& (0+255),w,b
  6652  002926  0101               	movlb	1	; () banked
  6653  002928  0101               	movlb	1	; () banked
  6654  00292A  6F10               	movwf	?___wmul& (0+255),b
  6655  00292C  0E00               	movlw	0
  6656  00292E  0101               	movlb	1	; () banked
  6657  002930  0101               	movlb	1	; () banked
  6658  002932  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6659  002934  0101               	movlb	1	; () banked
  6660  002936  6F11               	movwf	(?___wmul+1)& (0+255),b
  6661  002938  ECB8  F02E         	call	___wmul	;wreg free
  6662  00293C  0E4F               	movlw	low __powers_
  6663  00293E  0101               	movlb	1	; () banked
  6664  002940  0101               	movlb	1	; () banked
  6665  002942  2510               	addwf	?___wmul& (0+255),w,b
  6666  002944  6EF6               	movwf	tblptrl,c
  6667  002946  0E08               	movlw	high __powers_
  6668  002948  0101               	movlb	1	; () banked
  6669  00294A  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6670  00294C  6EF7               	movwf	tblptrh,c
  6671  00294E  0009               	tblrd		*+
  6672  002950  CFF5 F12A          	movff	tablat,??_scale
  6673  002954  0009               	tblrd		*+
  6674  002956  CFF5 F12B          	movff	tablat,??_scale+1
  6675  00295A  0009               	tblrd		*+
  6676  00295C  CFF5 F12C          	movff	tablat,??_scale+2
  6677  002960  C12C  F118         	movff	??_scale+2,?___ftmul+2
  6678  002964  C12B  F117         	movff	??_scale+1,?___ftmul+1
  6679  002968  C12A  F116         	movff	??_scale,?___ftmul
  6680  00296C  0E00               	movlw	0
  6681  00296E  0101               	movlb	1	; () banked
  6682  002970  0101               	movlb	1	; () banked
  6683  002972  6F13               	movwf	(?___wmul+3)& (0+255),b
  6684  002974  0E03               	movlw	3
  6685  002976  0101               	movlb	1	; () banked
  6686  002978  6F12               	movwf	(?___wmul+2)& (0+255),b
  6687  00297A  0E00               	movlw	0
  6688  00297C  0101               	movlb	1	; () banked
  6689  00297E  0101               	movlb	1	; () banked
  6690  002980  6F03               	movwf	(?___awmod+3)& (0+255),b
  6691  002982  0E0A               	movlw	10
  6692  002984  0101               	movlb	1	; () banked
  6693  002986  6F02               	movwf	(?___awmod+2)& (0+255),b
  6694  002988  0101               	movlb	1	; () banked
  6695  00298A  0101               	movlb	1	; () banked
  6696  00298C  5127               	movf	scale@scl& (0+255),w,b
  6697  00298E  0101               	movlb	1	; () banked
  6698  002990  0101               	movlb	1	; () banked
  6699  002992  6F00               	movwf	?___awmod& (0+255),b
  6700  002994  0101               	movlb	1	; () banked
  6701  002996  6B01               	clrf	(?___awmod+1)& (0+255),b
  6702  002998  0101               	movlb	1	; () banked
  6703  00299A  BF00               	btfsc	?___awmod& (0+255),7,b
  6704  00299C  0701               	decf	(?___awmod+1)& (0+255),f,b
  6705  00299E  ECF7  F027         	call	___awmod	;wreg free
  6706  0029A2  0101               	movlb	1	; () banked
  6707  0029A4  C100  F110         	movff	?___awmod,?___wmul
  6708  0029A8  0101               	movlb	1	; () banked
  6709  0029AA  C101  F111         	movff	?___awmod+1,?___wmul+1
  6710  0029AE  ECB8  F02E         	call	___wmul	;wreg free
  6711  0029B2  0E4F               	movlw	low __powers_
  6712  0029B4  0101               	movlb	1	; () banked
  6713  0029B6  0101               	movlb	1	; () banked
  6714  0029B8  2510               	addwf	?___wmul& (0+255),w,b
  6715  0029BA  6EF6               	movwf	tblptrl,c
  6716  0029BC  0E08               	movlw	high __powers_
  6717  0029BE  0101               	movlb	1	; () banked
  6718  0029C0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6719  0029C2  6EF7               	movwf	tblptrh,c
  6720  0029C4  0009               	tblrd		*+
  6721  0029C6  CFF5 F12D          	movff	tablat,??_scale+3
  6722  0029CA  0009               	tblrd		*+
  6723  0029CC  CFF5 F12E          	movff	tablat,??_scale+4
  6724  0029D0  0009               	tblrd		*+
  6725  0029D2  CFF5 F12F          	movff	tablat,??_scale+5
  6726  0029D6  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  6727  0029DA  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  6728  0029DE  C12D  F119         	movff	??_scale+3,?___ftmul+3
  6729  0029E2  ECE1  F01C         	call	___ftmul	;wreg free
  6730  0029E6                     L10:
  6731  0029E6  C118  F129         	movff	?___ftmul+2,?_scale+2
  6732  0029EA  C117  F128         	movff	?___ftmul+1,?_scale+1
  6733  0029EE  C116  F127         	movff	?___ftmul,?_scale
  6734  0029F2  D019               	goto	l258
  6735  0029F4                     l10552:
  6736                           
  6737                           ;doprnt.c: 440: return _powers_[scl];
  6738  0029F4  0101               	movlb	1	; () banked
  6739  0029F6  0101               	movlb	1	; () banked
  6740  0029F8  5127               	movf	scale@scl& (0+255),w,b
  6741  0029FA  0D03               	mullw	3
  6742  0029FC  0E4F               	movlw	low __powers_
  6743  0029FE  24F3               	addwf	prodl,w,c
  6744  002A00  6EF6               	movwf	tblptrl,c
  6745  002A02  0E08               	movlw	high __powers_
  6746  002A04                     L9:
  6747  002A04  20F4               	addwfc	prodh,w,c
  6748  002A06  6EF7               	movwf	tblptrh,c
  6749  002A08  0009               	tblrd		*+
  6750  002A0A  CFF5 F12A          	movff	tablat,??_scale
  6751  002A0E  0009               	tblrd		*+
  6752  002A10  CFF5 F12B          	movff	tablat,??_scale+1
  6753  002A14  0009               	tblrd		*+
  6754  002A16  CFF5 F12C          	movff	tablat,??_scale+2
  6755  002A1A  C12C  F129         	movff	??_scale+2,?_scale+2
  6756  002A1E  C12B  F128         	movff	??_scale+1,?_scale+1
  6757  002A22  C12A  F127         	movff	??_scale,?_scale
  6758  002A26                     l258:
  6759  002A26  0012               	return	
  6760  002A28                     __end_of_scale:
  6761                           	opt stack 0
  6762                           tblptru	equ	0xFF8
  6763                           tblptrh	equ	0xFF7
  6764                           tblptrl	equ	0xFF6
  6765                           tablat	equ	0xFF5
  6766                           prodh	equ	0xFF4
  6767                           prodl	equ	0xFF3
  6768                           postinc0	equ	0xFEE
  6769                           wreg	equ	0xFE8
  6770                           indf2	equ	0xFDF
  6771                           postinc2	equ	0xFDE
  6772                           postdec2	equ	0xFDD
  6773                           fsr2h	equ	0xFDA
  6774                           fsr2l	equ	0xFD9
  6775                           status	equ	0xFD8
  6776                           
  6777 ;; *************** function _fround *****************
  6778 ;; Defined at:
  6779 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  prec            1   39[BANK1 ] unsigned char 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;		None
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  3   39[BANK1 ] unsigned char 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6793 ;;      Params:         0       0       3       0       0       0       0       0       0
  6794 ;;      Locals:         0       0       6       0       0       0       0       0       0
  6795 ;;      Temps:          0       0       6       0       0       0       0       0       0
  6796 ;;      Totals:         0       0      15       0       0       0       0       0       0
  6797 ;;Total ram usage:       15 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:   12
  6800 ;; This function calls:
  6801 ;;		___ftmul
  6802 ;;		___awdiv
  6803 ;;		___awmod
  6804 ;;		___wmul
  6805 ;; This function is called by:
  6806 ;;		_sprintf
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text17
  6811  002E78                     __ptext17:
  6812                           	opt stack 0
  6813  002E78                     _fround:
  6814                           	opt stack 16
  6815                           
  6816                           ;doprnt.c: 413: if(prec>=110)
  6817                           
  6818                           ;incstack = 0
  6819                           ;incstack = 0
  6820  002E78  0E6D               	movlw	109
  6821  002E7A  0101               	movlb	1	; () banked
  6822  002E7C  0101               	movlb	1	; () banked
  6823  002E7E  6527               	cpfsgt	fround@prec& (0+255),b
  6824  002E80  D0ED               	goto	l10504
  6825                           
  6826                           ; BSR set to: 1
  6827                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6828  002E82  0E00               	movlw	0
  6829  002E84  0101               	movlb	1	; () banked
  6830  002E86  0101               	movlb	1	; () banked
  6831  002E88  6F13               	movwf	(?___wmul+3)& (0+255),b
  6832  002E8A  0E03               	movlw	3
  6833  002E8C  0101               	movlb	1	; () banked
  6834  002E8E  6F12               	movwf	(?___wmul+2)& (0+255),b
  6835  002E90  0E00               	movlw	0
  6836  002E92  0101               	movlb	1	; () banked
  6837  002E94  0101               	movlb	1	; () banked
  6838  002E96  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6839  002E98  0E0A               	movlw	10
  6840  002E9A  0101               	movlb	1	; () banked
  6841  002E9C  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6842  002E9E  0E00               	movlw	0
  6843  002EA0  0101               	movlb	1	; () banked
  6844  002EA2  0101               	movlb	1	; () banked
  6845  002EA4  6F03               	movwf	(?___awmod+3)& (0+255),b
  6846  002EA6  0E64               	movlw	100
  6847  002EA8  0101               	movlb	1	; () banked
  6848  002EAA  6F02               	movwf	(?___awmod+2)& (0+255),b
  6849  002EAC  0101               	movlb	1	; () banked
  6850  002EAE  0101               	movlb	1	; () banked
  6851  002EB0  C127  F100         	movff	fround@prec,?___awmod
  6852  002EB4  0101               	movlb	1	; () banked
  6853  002EB6  0101               	movlb	1	; () banked
  6854  002EB8  6B01               	clrf	(?___awmod+1)& (0+255),b
  6855  002EBA  ECF7  F027         	call	___awmod	;wreg free
  6856  002EBE  0101               	movlb	1	; () banked
  6857  002EC0  C100  F107         	movff	?___awmod,?___awdiv
  6858  002EC4  0101               	movlb	1	; () banked
  6859  002EC6  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6860  002ECA  EC6E  F023         	call	___awdiv	;wreg free
  6861  002ECE  0E09               	movlw	9
  6862  002ED0  0101               	movlb	1	; () banked
  6863  002ED2  0101               	movlb	1	; () banked
  6864  002ED4  2507               	addwf	?___awdiv& (0+255),w,b
  6865  002ED6  0101               	movlb	1	; () banked
  6866  002ED8  0101               	movlb	1	; () banked
  6867  002EDA  6F10               	movwf	?___wmul& (0+255),b
  6868  002EDC  0E00               	movlw	0
  6869  002EDE  0101               	movlb	1	; () banked
  6870  002EE0  0101               	movlb	1	; () banked
  6871  002EE2  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6872  002EE4  0101               	movlb	1	; () banked
  6873  002EE6  6F11               	movwf	(?___wmul+1)& (0+255),b
  6874  002EE8  ECB8  F02E         	call	___wmul	;wreg free
  6875  002EEC  0E28               	movlw	low __npowers_
  6876  002EEE  0101               	movlb	1	; () banked
  6877  002EF0  0101               	movlb	1	; () banked
  6878  002EF2  2510               	addwf	?___wmul& (0+255),w,b
  6879  002EF4  6EF6               	movwf	tblptrl,c
  6880  002EF6  0E08               	movlw	high __npowers_
  6881  002EF8  0101               	movlb	1	; () banked
  6882  002EFA  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6883  002EFC  6EF7               	movwf	tblptrh,c
  6884  002EFE  0009               	tblrd		*+
  6885  002F00  CFF5 F12A          	movff	tablat,??_fround
  6886  002F04  0009               	tblrd		*+
  6887  002F06  CFF5 F12B          	movff	tablat,??_fround+1
  6888  002F0A  0009               	tblrd		*+
  6889  002F0C  CFF5 F12C          	movff	tablat,??_fround+2
  6890  002F10  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  6891  002F14  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  6892  002F18  C12A  F119         	movff	??_fround,?___ftmul+3
  6893  002F1C  0E00               	movlw	0
  6894  002F1E  0101               	movlb	1	; () banked
  6895  002F20  0101               	movlb	1	; () banked
  6896  002F22  6F13               	movwf	(?___wmul+3)& (0+255),b
  6897  002F24  0E03               	movlw	3
  6898  002F26  0101               	movlb	1	; () banked
  6899  002F28  6F12               	movwf	(?___wmul+2)& (0+255),b
  6900  002F2A  0E00               	movlw	0
  6901  002F2C  0101               	movlb	1	; () banked
  6902  002F2E  0101               	movlb	1	; () banked
  6903  002F30  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6904  002F32  0E64               	movlw	100
  6905  002F34  0101               	movlb	1	; () banked
  6906  002F36  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6907  002F38  0101               	movlb	1	; () banked
  6908  002F3A  0101               	movlb	1	; () banked
  6909  002F3C  C127  F107         	movff	fround@prec,?___awdiv
  6910  002F40  0101               	movlb	1	; () banked
  6911  002F42  0101               	movlb	1	; () banked
  6912  002F44  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6913  002F46  EC6E  F023         	call	___awdiv	;wreg free
  6914  002F4A  0E12               	movlw	18
  6915  002F4C  0101               	movlb	1	; () banked
  6916  002F4E  0101               	movlb	1	; () banked
  6917  002F50  2507               	addwf	?___awdiv& (0+255),w,b
  6918  002F52  0101               	movlb	1	; () banked
  6919  002F54  0101               	movlb	1	; () banked
  6920  002F56  6F10               	movwf	?___wmul& (0+255),b
  6921  002F58  0E00               	movlw	0
  6922  002F5A  0101               	movlb	1	; () banked
  6923  002F5C  0101               	movlb	1	; () banked
  6924  002F5E  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6925  002F60  0101               	movlb	1	; () banked
  6926  002F62  6F11               	movwf	(?___wmul+1)& (0+255),b
  6927  002F64  ECB8  F02E         	call	___wmul	;wreg free
  6928  002F68  0E28               	movlw	low __npowers_
  6929  002F6A  0101               	movlb	1	; () banked
  6930  002F6C  0101               	movlb	1	; () banked
  6931  002F6E  2510               	addwf	?___wmul& (0+255),w,b
  6932  002F70  6EF6               	movwf	tblptrl,c
  6933  002F72  0E08               	movlw	high __npowers_
  6934  002F74  0101               	movlb	1	; () banked
  6935  002F76  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6936  002F78  6EF7               	movwf	tblptrh,c
  6937  002F7A  0009               	tblrd		*+
  6938  002F7C  CFF5 F12D          	movff	tablat,??_fround+3
  6939  002F80  0009               	tblrd		*+
  6940  002F82  CFF5 F12E          	movff	tablat,??_fround+4
  6941  002F86  0009               	tblrd		*+
  6942  002F88  CFF5 F12F          	movff	tablat,??_fround+5
  6943  002F8C  C12F  F118         	movff	??_fround+5,?___ftmul+2
  6944  002F90  C12E  F117         	movff	??_fround+4,?___ftmul+1
  6945  002F94  C12D  F116         	movff	??_fround+3,?___ftmul
  6946  002F98  ECE1  F01C         	call	___ftmul	;wreg free
  6947  002F9C  C118  F135         	movff	?___ftmul+2,_fround$1204+2
  6948  002FA0  C117  F134         	movff	?___ftmul+1,_fround$1204+1
  6949  002FA4  C116  F133         	movff	?___ftmul,_fround$1204
  6950                           
  6951                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6952  002FA8  0E00               	movlw	0
  6953  002FAA  0101               	movlb	1	; () banked
  6954  002FAC  0101               	movlb	1	; () banked
  6955  002FAE  6F13               	movwf	(?___wmul+3)& (0+255),b
  6956  002FB0  0E03               	movlw	3
  6957  002FB2  0101               	movlb	1	; () banked
  6958  002FB4  6F12               	movwf	(?___wmul+2)& (0+255),b
  6959  002FB6  0E00               	movlw	0
  6960  002FB8  0101               	movlb	1	; () banked
  6961  002FBA  0101               	movlb	1	; () banked
  6962  002FBC  6F03               	movwf	(?___awmod+3)& (0+255),b
  6963  002FBE  0E0A               	movlw	10
  6964  002FC0  0101               	movlb	1	; () banked
  6965  002FC2  6F02               	movwf	(?___awmod+2)& (0+255),b
  6966  002FC4  0101               	movlb	1	; () banked
  6967  002FC6  0101               	movlb	1	; () banked
  6968  002FC8  C127  F100         	movff	fround@prec,?___awmod
  6969  002FCC  0101               	movlb	1	; () banked
  6970  002FCE  0101               	movlb	1	; () banked
  6971  002FD0  6B01               	clrf	(?___awmod+1)& (0+255),b
  6972  002FD2  ECF7  F027         	call	___awmod	;wreg free
  6973  002FD6  0101               	movlb	1	; () banked
  6974  002FD8  C100  F110         	movff	?___awmod,?___wmul
  6975  002FDC  0101               	movlb	1	; () banked
  6976  002FDE  C101  F111         	movff	?___awmod+1,?___wmul+1
  6977  002FE2  ECB8  F02E         	call	___wmul	;wreg free
  6978  002FE6  0E28               	movlw	low __npowers_
  6979  002FE8  0101               	movlb	1	; () banked
  6980  002FEA  0101               	movlb	1	; () banked
  6981  002FEC  2510               	addwf	?___wmul& (0+255),w,b
  6982  002FEE  6EF6               	movwf	tblptrl,c
  6983  002FF0  0E08               	movlw	high __npowers_
  6984  002FF2  0101               	movlb	1	; () banked
  6985  002FF4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6986  002FF6  6EF7               	movwf	tblptrh,c
  6987  002FF8  0009               	tblrd		*+
  6988  002FFA  CFF5 F12A          	movff	tablat,??_fround
  6989  002FFE  0009               	tblrd		*+
  6990  003000  CFF5 F12B          	movff	tablat,??_fround+1
  6991  003004  0009               	tblrd		*+
  6992  003006  CFF5 F12C          	movff	tablat,??_fround+2
  6993  00300A  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  6994  00300E  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  6995  003012  C12A  F119         	movff	??_fround,?___ftmul+3
  6996  003016  C133  F116         	movff	_fround$1204,?___ftmul
  6997  00301A  C134  F117         	movff	_fround$1204+1,?___ftmul+1
  6998  00301E  C135  F118         	movff	_fround$1204+2,?___ftmul+2
  6999  003022  ECE1  F01C         	call	___ftmul	;wreg free
  7000  003026  C118  F132         	movff	?___ftmul+2,_fround$1205+2
  7001  00302A  C117  F131         	movff	?___ftmul+1,_fround$1205+1
  7002  00302E  C116  F130         	movff	?___ftmul,_fround$1205
  7003                           
  7004                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7005  003032  C130  F116         	movff	_fround$1205,?___ftmul
  7006  003036  C131  F117         	movff	_fround$1205+1,?___ftmul+1
  7007  00303A  C132  F118         	movff	_fround$1205+2,?___ftmul+2
  7008  00303E  0E00               	movlw	0
  7009  003040  0101               	movlb	1	; () banked
  7010  003042  0101               	movlb	1	; () banked
  7011  003044  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7012  003046  0E00               	movlw	0
  7013  003048  0101               	movlb	1	; () banked
  7014  00304A  0101               	movlb	1	; () banked
  7015  00304C  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7016  00304E  0E3F               	movlw	63
  7017  003050  0101               	movlb	1	; () banked
  7018  003052  0101               	movlb	1	; () banked
  7019  003054  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7020  003056  ECE1  F01C         	call	___ftmul	;wreg free
  7021  00305A  D0BE               	goto	L12
  7022  00305C                     l10504:
  7023                           
  7024                           ;doprnt.c: 415: else if(prec > 10)
  7025  00305C  0E0A               	movlw	10
  7026  00305E  0101               	movlb	1	; () banked
  7027  003060  0101               	movlb	1	; () banked
  7028  003062  6527               	cpfsgt	fround@prec& (0+255),b
  7029  003064  D092               	goto	l10512
  7030                           
  7031                           ; BSR set to: 1
  7032                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7033  003066  0E00               	movlw	0
  7034  003068  0101               	movlb	1	; () banked
  7035  00306A  0101               	movlb	1	; () banked
  7036  00306C  6F13               	movwf	(?___wmul+3)& (0+255),b
  7037  00306E  0E03               	movlw	3
  7038  003070  0101               	movlb	1	; () banked
  7039  003072  6F12               	movwf	(?___wmul+2)& (0+255),b
  7040  003074  0E00               	movlw	0
  7041  003076  0101               	movlb	1	; () banked
  7042  003078  0101               	movlb	1	; () banked
  7043  00307A  6F03               	movwf	(?___awmod+3)& (0+255),b
  7044  00307C  0E0A               	movlw	10
  7045  00307E  0101               	movlb	1	; () banked
  7046  003080  6F02               	movwf	(?___awmod+2)& (0+255),b
  7047  003082  0101               	movlb	1	; () banked
  7048  003084  0101               	movlb	1	; () banked
  7049  003086  C127  F100         	movff	fround@prec,?___awmod
  7050  00308A  0101               	movlb	1	; () banked
  7051  00308C  0101               	movlb	1	; () banked
  7052  00308E  6B01               	clrf	(?___awmod+1)& (0+255),b
  7053  003090  ECF7  F027         	call	___awmod	;wreg free
  7054  003094  0101               	movlb	1	; () banked
  7055  003096  C100  F110         	movff	?___awmod,?___wmul
  7056  00309A  0101               	movlb	1	; () banked
  7057  00309C  C101  F111         	movff	?___awmod+1,?___wmul+1
  7058  0030A0  ECB8  F02E         	call	___wmul	;wreg free
  7059  0030A4  0E28               	movlw	low __npowers_
  7060  0030A6  0101               	movlb	1	; () banked
  7061  0030A8  0101               	movlb	1	; () banked
  7062  0030AA  2510               	addwf	?___wmul& (0+255),w,b
  7063  0030AC  6EF6               	movwf	tblptrl,c
  7064  0030AE  0E08               	movlw	high __npowers_
  7065  0030B0  0101               	movlb	1	; () banked
  7066  0030B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7067  0030B4  6EF7               	movwf	tblptrh,c
  7068  0030B6  0009               	tblrd		*+
  7069  0030B8  CFF5 F12A          	movff	tablat,??_fround
  7070  0030BC  0009               	tblrd		*+
  7071  0030BE  CFF5 F12B          	movff	tablat,??_fround+1
  7072  0030C2  0009               	tblrd		*+
  7073  0030C4  CFF5 F12C          	movff	tablat,??_fround+2
  7074  0030C8  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  7075  0030CC  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  7076  0030D0  C12A  F119         	movff	??_fround,?___ftmul+3
  7077  0030D4  0E00               	movlw	0
  7078  0030D6  0101               	movlb	1	; () banked
  7079  0030D8  0101               	movlb	1	; () banked
  7080  0030DA  6F13               	movwf	(?___wmul+3)& (0+255),b
  7081  0030DC  0E03               	movlw	3
  7082  0030DE  0101               	movlb	1	; () banked
  7083  0030E0  6F12               	movwf	(?___wmul+2)& (0+255),b
  7084  0030E2  0E00               	movlw	0
  7085  0030E4  0101               	movlb	1	; () banked
  7086  0030E6  0101               	movlb	1	; () banked
  7087  0030E8  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7088  0030EA  0E0A               	movlw	10
  7089  0030EC  0101               	movlb	1	; () banked
  7090  0030EE  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7091  0030F0  0101               	movlb	1	; () banked
  7092  0030F2  0101               	movlb	1	; () banked
  7093  0030F4  C127  F107         	movff	fround@prec,?___awdiv
  7094  0030F8  0101               	movlb	1	; () banked
  7095  0030FA  0101               	movlb	1	; () banked
  7096  0030FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  7097  0030FE  EC6E  F023         	call	___awdiv	;wreg free
  7098  003102  0E09               	movlw	9
  7099  003104  0101               	movlb	1	; () banked
  7100  003106  0101               	movlb	1	; () banked
  7101  003108  2507               	addwf	?___awdiv& (0+255),w,b
  7102  00310A  0101               	movlb	1	; () banked
  7103  00310C  0101               	movlb	1	; () banked
  7104  00310E  6F10               	movwf	?___wmul& (0+255),b
  7105  003110  0E00               	movlw	0
  7106  003112  0101               	movlb	1	; () banked
  7107  003114  0101               	movlb	1	; () banked
  7108  003116  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7109  003118  0101               	movlb	1	; () banked
  7110  00311A  6F11               	movwf	(?___wmul+1)& (0+255),b
  7111  00311C  ECB8  F02E         	call	___wmul	;wreg free
  7112  003120  0E28               	movlw	low __npowers_
  7113  003122  0101               	movlb	1	; () banked
  7114  003124  0101               	movlb	1	; () banked
  7115  003126  2510               	addwf	?___wmul& (0+255),w,b
  7116  003128  6EF6               	movwf	tblptrl,c
  7117  00312A  0E08               	movlw	high __npowers_
  7118  00312C  0101               	movlb	1	; () banked
  7119  00312E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7120  003130  6EF7               	movwf	tblptrh,c
  7121  003132  0009               	tblrd		*+
  7122  003134  CFF5 F12D          	movff	tablat,??_fround+3
  7123  003138  0009               	tblrd		*+
  7124  00313A  CFF5 F12E          	movff	tablat,??_fround+4
  7125  00313E  0009               	tblrd		*+
  7126  003140  CFF5 F12F          	movff	tablat,??_fround+5
  7127  003144  C12F  F118         	movff	??_fround+5,?___ftmul+2
  7128  003148  C12E  F117         	movff	??_fround+4,?___ftmul+1
  7129  00314C  C12D  F116         	movff	??_fround+3,?___ftmul
  7130  003150  ECE1  F01C         	call	___ftmul	;wreg free
  7131  003154  C118  F135         	movff	?___ftmul+2,_fround$1204+2
  7132  003158  C117  F134         	movff	?___ftmul+1,_fround$1204+1
  7133  00315C  C116  F133         	movff	?___ftmul,_fround$1204
  7134                           
  7135                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7136  003160  C133  F116         	movff	_fround$1204,?___ftmul
  7137  003164  C134  F117         	movff	_fround$1204+1,?___ftmul+1
  7138  003168  C135  F118         	movff	_fround$1204+2,?___ftmul+2
  7139  00316C  0E00               	movlw	0
  7140  00316E  0101               	movlb	1	; () banked
  7141  003170  0101               	movlb	1	; () banked
  7142  003172  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7143  003174  0E00               	movlw	0
  7144  003176  0101               	movlb	1	; () banked
  7145  003178  0101               	movlb	1	; () banked
  7146  00317A  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7147  00317C  0E3F               	movlw	63
  7148  00317E  0101               	movlb	1	; () banked
  7149  003180  0101               	movlb	1	; () banked
  7150  003182  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7151  003184  ECE1  F01C         	call	___ftmul	;wreg free
  7152  003188  D027               	goto	L12
  7153  00318A                     l10512:
  7154                           
  7155                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7156  00318A  0101               	movlb	1	; () banked
  7157  00318C  0101               	movlb	1	; () banked
  7158  00318E  5127               	movf	fround@prec& (0+255),w,b
  7159  003190  0D03               	mullw	3
  7160  003192  0E28               	movlw	low __npowers_
  7161  003194  24F3               	addwf	prodl,w,c
  7162  003196  6EF6               	movwf	tblptrl,c
  7163  003198  0E08               	movlw	high __npowers_
  7164  00319A  20F4               	addwfc	prodh,w,c
  7165  00319C  6EF7               	movwf	tblptrh,c
  7166  00319E  0009               	tblrd		*+
  7167  0031A0  CFF5 F12A          	movff	tablat,??_fround
  7168  0031A4  0009               	tblrd		*+
  7169  0031A6  CFF5 F12B          	movff	tablat,??_fround+1
  7170  0031AA  0009               	tblrd		*+
  7171  0031AC  CFF5 F12C          	movff	tablat,??_fround+2
  7172  0031B0  C12C  F118         	movff	??_fround+2,?___ftmul+2
  7173  0031B4  C12B  F117         	movff	??_fround+1,?___ftmul+1
  7174  0031B8  C12A  F116         	movff	??_fround,?___ftmul
  7175  0031BC  0E00               	movlw	0
  7176  0031BE  0101               	movlb	1	; () banked
  7177  0031C0  0101               	movlb	1	; () banked
  7178  0031C2  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7179  0031C4  0E00               	movlw	0
  7180  0031C6  0101               	movlb	1	; () banked
  7181  0031C8  0101               	movlb	1	; () banked
  7182  0031CA  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7183  0031CC  0E3F               	movlw	63
  7184  0031CE  0101               	movlb	1	; () banked
  7185  0031D0  0101               	movlb	1	; () banked
  7186  0031D2  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7187  0031D4  ECE1  F01C         	call	___ftmul	;wreg free
  7188  0031D8                     L12:
  7189  0031D8  C118  F129         	movff	?___ftmul+2,?_fround+2
  7190  0031DC  C117  F128         	movff	?___ftmul+1,?_fround+1
  7191  0031E0  C116  F127         	movff	?___ftmul,?_fround
  7192  0031E4  0012               	return	
  7193  0031E6                     __end_of_fround:
  7194                           	opt stack 0
  7195                           tblptru	equ	0xFF8
  7196                           tblptrh	equ	0xFF7
  7197                           tblptrl	equ	0xFF6
  7198                           tablat	equ	0xFF5
  7199                           prodh	equ	0xFF4
  7200                           prodl	equ	0xFF3
  7201                           postinc0	equ	0xFEE
  7202                           wreg	equ	0xFE8
  7203                           indf2	equ	0xFDF
  7204                           postinc2	equ	0xFDE
  7205                           postdec2	equ	0xFDD
  7206                           fsr2h	equ	0xFDA
  7207                           fsr2l	equ	0xFD9
  7208                           status	equ	0xFD8
  7209                           
  7210 ;; *************** function ___wmul *****************
  7211 ;; Defined at:
  7212 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  multiplier      2   16[BANK1 ] unsigned int 
  7215 ;;  multiplicand    2   18[BANK1 ] unsigned int 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  product         2   20[BANK1 ] unsigned int 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  2   16[BANK1 ] unsigned int 
  7220 ;; Registers used:
  7221 ;;		wreg, status,2, status,0, prodl, prodh
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7227 ;;      Params:         0       0       4       0       0       0       0       0       0
  7228 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7230 ;;      Totals:         0       0       6       0       0       0       0       0       0
  7231 ;;Total ram usage:        6 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:   10
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_fround
  7238 ;;		_scale
  7239 ;;		_sprintf
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text18
  7244  005D70                     __ptext18:
  7245                           	opt stack 0
  7246  005D70                     ___wmul:
  7247                           	opt stack 18
  7248                           
  7249                           ;incstack = 0
  7250                           ;incstack = 0
  7251  005D70  0101               	movlb	1	; () banked
  7252  005D72  0101               	movlb	1	; () banked
  7253  005D74  5110               	movf	___wmul@multiplier& (0+255),w,b
  7254  005D76  0101               	movlb	1	; () banked
  7255  005D78  0101               	movlb	1	; () banked
  7256  005D7A  0312               	mulwf	___wmul@multiplicand& (0+255),b
  7257  005D7C  CFF3 F114          	movff	prodl,___wmul@product
  7258  005D80  CFF4 F115          	movff	prodh,___wmul@product+1
  7259  005D84  0101               	movlb	1	; () banked
  7260  005D86  0101               	movlb	1	; () banked
  7261  005D88  5110               	movf	___wmul@multiplier& (0+255),w,b
  7262  005D8A  0101               	movlb	1	; () banked
  7263  005D8C  0101               	movlb	1	; () banked
  7264  005D8E  0313               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7265  005D90  CFF3 FFF4          	movff	prodl,prodh
  7266  005D94  6AF3               	clrf	prodl,c
  7267  005D96  50F3               	movf	prodl,w,c
  7268  005D98  0101               	movlb	1	; () banked
  7269  005D9A  0101               	movlb	1	; () banked
  7270  005D9C  2714               	addwf	___wmul@product& (0+255),f,b
  7271  005D9E  50F4               	movf	prodh,w,c
  7272  005DA0  0101               	movlb	1	; () banked
  7273  005DA2  0101               	movlb	1	; () banked
  7274  005DA4  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  7275  005DA6  0101               	movlb	1	; () banked
  7276  005DA8  0101               	movlb	1	; () banked
  7277  005DAA  5111               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7278  005DAC  0101               	movlb	1	; () banked
  7279  005DAE  0101               	movlb	1	; () banked
  7280  005DB0  0312               	mulwf	___wmul@multiplicand& (0+255),b
  7281  005DB2  CFF3 FFF4          	movff	prodl,prodh
  7282  005DB6  6AF3               	clrf	prodl,c
  7283  005DB8  50F3               	movf	prodl,w,c
  7284  005DBA  0101               	movlb	1	; () banked
  7285  005DBC  0101               	movlb	1	; () banked
  7286  005DBE  2714               	addwf	___wmul@product& (0+255),f,b
  7287  005DC0  50F4               	movf	prodh,w,c
  7288  005DC2  0101               	movlb	1	; () banked
  7289  005DC4  0101               	movlb	1	; () banked
  7290  005DC6  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  7291                           
  7292                           ; BSR set to: 1
  7293  005DC8  C114  F110         	movff	___wmul@product,?___wmul
  7294  005DCC  C115  F111         	movff	___wmul@product+1,?___wmul+1
  7295                           
  7296                           ; BSR set to: 1
  7297                           
  7298                           ; BSR set to: 1
  7299  005DD0  0012               	return	
  7300  005DD2                     __end_of___wmul:
  7301                           	opt stack 0
  7302                           tblptru	equ	0xFF8
  7303                           tblptrh	equ	0xFF7
  7304                           tblptrl	equ	0xFF6
  7305                           tablat	equ	0xFF5
  7306                           prodh	equ	0xFF4
  7307                           prodl	equ	0xFF3
  7308                           postinc0	equ	0xFEE
  7309                           wreg	equ	0xFE8
  7310                           indf2	equ	0xFDF
  7311                           postinc2	equ	0xFDE
  7312                           postdec2	equ	0xFDD
  7313                           fsr2h	equ	0xFDA
  7314                           fsr2l	equ	0xFD9
  7315                           status	equ	0xFD8
  7316                           
  7317 ;; *************** function ___awmod *****************
  7318 ;; Defined at:
  7319 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  dividend        2    0[BANK1 ] int 
  7322 ;;  divisor         2    2[BANK1 ] int 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  sign            1    6[BANK1 ] unsigned char 
  7325 ;;  counter         1    5[BANK1 ] unsigned char 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  2    0[BANK1 ] int 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7335 ;;      Params:         0       0       4       0       0       0       0       0       0
  7336 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7337 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7338 ;;      Totals:         0       0       7       0       0       0       0       0       0
  7339 ;;Total ram usage:        7 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:   10
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_fround
  7346 ;;		_scale
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text19
  7351  004FEE                     __ptext19:
  7352                           	opt stack 0
  7353  004FEE                     ___awmod:
  7354                           	opt stack 17
  7355                           
  7356                           ; BSR set to: 1
  7357                           ;incstack = 0
  7358                           ;incstack = 0
  7359  004FEE  0101               	movlb	1	; () banked
  7360  004FF0  6F04               	movwf	??___awmod& (0+255),b
  7361  004FF2  0E00               	movlw	0
  7362  004FF4  0101               	movlb	1	; () banked
  7363  004FF6  0101               	movlb	1	; () banked
  7364  004FF8  6F06               	movwf	___awmod@sign& (0+255),b
  7365  004FFA  0101               	movlb	1	; () banked
  7366  004FFC  5104               	movf	??___awmod& (0+255),w,b
  7367                           
  7368                           ; BSR set to: 1
  7369  004FFE  0101               	movlb	1	; () banked
  7370  005000  0101               	movlb	1	; () banked
  7371  005002  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7372  005004  D00F               	goto	l10962
  7373                           
  7374                           ; BSR set to: 1
  7375  005006  0101               	movlb	1	; () banked
  7376  005008  0101               	movlb	1	; () banked
  7377  00500A  6D00               	negf	___awmod@dividend& (0+255),b
  7378  00500C  0101               	movlb	1	; () banked
  7379  00500E  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  7380  005010  B0D8               	btfsc	status,0,c
  7381  005012  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  7382                           
  7383                           ; BSR set to: 1
  7384  005014  0101               	movlb	1	; () banked
  7385  005016  6F04               	movwf	??___awmod& (0+255),b
  7386  005018  0E01               	movlw	1
  7387  00501A  0101               	movlb	1	; () banked
  7388  00501C  0101               	movlb	1	; () banked
  7389  00501E  6F06               	movwf	___awmod@sign& (0+255),b
  7390  005020  0101               	movlb	1	; () banked
  7391  005022  5104               	movf	??___awmod& (0+255),w,b
  7392  005024                     l10962:
  7393                           
  7394                           ; BSR set to: 1
  7395  005024  0101               	movlb	1	; () banked
  7396  005026  0101               	movlb	1	; () banked
  7397  005028  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7398  00502A  D007               	goto	l10966
  7399                           
  7400                           ; BSR set to: 1
  7401  00502C  0101               	movlb	1	; () banked
  7402  00502E  0101               	movlb	1	; () banked
  7403  005030  6D02               	negf	___awmod@divisor& (0+255),b
  7404  005032  0101               	movlb	1	; () banked
  7405  005034  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  7406  005036  B0D8               	btfsc	status,0,c
  7407  005038  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  7408  00503A                     l10966:
  7409                           
  7410                           ; BSR set to: 1
  7411  00503A  0101               	movlb	1	; () banked
  7412  00503C  0101               	movlb	1	; () banked
  7413  00503E  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7414  005040  1102               	iorwf	___awmod@divisor& (0+255),w,b
  7415  005042  B4D8               	btfsc	status,2,c
  7416  005044  D03A               	goto	l10982
  7417                           
  7418                           ; BSR set to: 1
  7419  005046  0101               	movlb	1	; () banked
  7420  005048  6F04               	movwf	??___awmod& (0+255),b
  7421  00504A  0E01               	movlw	1
  7422  00504C  0101               	movlb	1	; () banked
  7423  00504E  0101               	movlb	1	; () banked
  7424  005050  6F05               	movwf	___awmod@counter& (0+255),b
  7425  005052  0101               	movlb	1	; () banked
  7426  005054  5104               	movf	??___awmod& (0+255),w,b
  7427  005056  D009               	goto	l10972
  7428  005058                     l10970:
  7429                           
  7430                           ; BSR set to: 1
  7431  005058  0101               	movlb	1	; () banked
  7432  00505A  0101               	movlb	1	; () banked
  7433  00505C  0101               	movlb	1	; () banked
  7434  00505E  90D8               	bcf	status,0,c
  7435  005060  3702               	rlcf	___awmod@divisor& (0+255),f,b
  7436  005062  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7437  005064  0101               	movlb	1	; () banked
  7438  005066  0101               	movlb	1	; () banked
  7439  005068  2B05               	incf	___awmod@counter& (0+255),f,b
  7440  00506A                     l10972:
  7441                           
  7442                           ; BSR set to: 1
  7443  00506A  0101               	movlb	1	; () banked
  7444  00506C  0101               	movlb	1	; () banked
  7445  00506E  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7446  005070  D7F3               	goto	l10970
  7447  005072                     l10974:
  7448                           
  7449                           ; BSR set to: 1
  7450  005072  0101               	movlb	1	; () banked
  7451  005074  0101               	movlb	1	; () banked
  7452  005076  5102               	movf	___awmod@divisor& (0+255),w,b
  7453  005078  0101               	movlb	1	; () banked
  7454  00507A  0101               	movlb	1	; () banked
  7455  00507C  5D00               	subwf	___awmod@dividend& (0+255),w,b
  7456  00507E  0101               	movlb	1	; () banked
  7457  005080  0101               	movlb	1	; () banked
  7458  005082  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7459  005084  0101               	movlb	1	; () banked
  7460  005086  0101               	movlb	1	; () banked
  7461  005088  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7462  00508A  A0D8               	btfss	status,0,c
  7463  00508C  D00C               	goto	l10978
  7464                           
  7465                           ; BSR set to: 1
  7466  00508E  0101               	movlb	1	; () banked
  7467  005090  0101               	movlb	1	; () banked
  7468  005092  5102               	movf	___awmod@divisor& (0+255),w,b
  7469  005094  0101               	movlb	1	; () banked
  7470  005096  0101               	movlb	1	; () banked
  7471  005098  5F00               	subwf	___awmod@dividend& (0+255),f,b
  7472  00509A  0101               	movlb	1	; () banked
  7473  00509C  0101               	movlb	1	; () banked
  7474  00509E  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7475  0050A0  0101               	movlb	1	; () banked
  7476  0050A2  0101               	movlb	1	; () banked
  7477  0050A4  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7478  0050A6                     l10978:
  7479                           
  7480                           ; BSR set to: 1
  7481  0050A6  0101               	movlb	1	; () banked
  7482  0050A8  0101               	movlb	1	; () banked
  7483  0050AA  0101               	movlb	1	; () banked
  7484  0050AC  90D8               	bcf	status,0,c
  7485  0050AE  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7486  0050B0  3302               	rrcf	___awmod@divisor& (0+255),f,b
  7487                           
  7488                           ; BSR set to: 1
  7489  0050B2  0101               	movlb	1	; () banked
  7490  0050B4  0101               	movlb	1	; () banked
  7491  0050B6  2F05               	decfsz	___awmod@counter& (0+255),f,b
  7492  0050B8  D7DC               	goto	l10974
  7493  0050BA                     l10982:
  7494                           
  7495                           ; BSR set to: 1
  7496  0050BA  0101               	movlb	1	; () banked
  7497  0050BC  0101               	movlb	1	; () banked
  7498  0050BE  5106               	movf	___awmod@sign& (0+255),w,b
  7499  0050C0  B4D8               	btfsc	status,2,c
  7500  0050C2  D007               	goto	l10986
  7501                           
  7502                           ; BSR set to: 1
  7503  0050C4  0101               	movlb	1	; () banked
  7504  0050C6  0101               	movlb	1	; () banked
  7505  0050C8  6D00               	negf	___awmod@dividend& (0+255),b
  7506  0050CA  0101               	movlb	1	; () banked
  7507  0050CC  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  7508  0050CE  B0D8               	btfsc	status,0,c
  7509  0050D0  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  7510  0050D2                     l10986:
  7511                           
  7512                           ; BSR set to: 1
  7513  0050D2  C100  F100         	movff	___awmod@dividend,?___awmod
  7514  0050D6  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  7515                           
  7516                           ; BSR set to: 1
  7517                           
  7518                           ; BSR set to: 1
  7519  0050DA  0012               	return	
  7520  0050DC                     __end_of___awmod:
  7521                           	opt stack 0
  7522                           tblptru	equ	0xFF8
  7523                           tblptrh	equ	0xFF7
  7524                           tblptrl	equ	0xFF6
  7525                           tablat	equ	0xFF5
  7526                           prodh	equ	0xFF4
  7527                           prodl	equ	0xFF3
  7528                           postinc0	equ	0xFEE
  7529                           wreg	equ	0xFE8
  7530                           indf2	equ	0xFDF
  7531                           postinc2	equ	0xFDE
  7532                           postdec2	equ	0xFDD
  7533                           fsr2h	equ	0xFDA
  7534                           fsr2l	equ	0xFD9
  7535                           status	equ	0xFD8
  7536                           
  7537 ;; *************** function ___awdiv *****************
  7538 ;; Defined at:
  7539 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  dividend        2    7[BANK1 ] int 
  7542 ;;  divisor         2    9[BANK1 ] int 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  quotient        2   14[BANK1 ] int 
  7545 ;;  sign            1   13[BANK1 ] unsigned char 
  7546 ;;  counter         1   12[BANK1 ] unsigned char 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  2    7[BANK1 ] int 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, status,0
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7556 ;;      Params:         0       0       4       0       0       0       0       0       0
  7557 ;;      Locals:         0       0       4       0       0       0       0       0       0
  7558 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7559 ;;      Totals:         0       0       9       0       0       0       0       0       0
  7560 ;;Total ram usage:        9 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:   10
  7563 ;; This function calls:
  7564 ;;		Nothing
  7565 ;; This function is called by:
  7566 ;;		_fround
  7567 ;;		_scale
  7568 ;;		_sprintf
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text20
  7573  0046DC                     __ptext20:
  7574                           	opt stack 0
  7575  0046DC                     ___awdiv:
  7576                           	opt stack 18
  7577                           
  7578                           ; BSR set to: 1
  7579                           ;incstack = 0
  7580                           ;incstack = 0
  7581  0046DC  0101               	movlb	1	; () banked
  7582  0046DE  6F0B               	movwf	??___awdiv& (0+255),b
  7583  0046E0  0E00               	movlw	0
  7584  0046E2  0101               	movlb	1	; () banked
  7585  0046E4  0101               	movlb	1	; () banked
  7586  0046E6  6F0D               	movwf	___awdiv@sign& (0+255),b
  7587  0046E8  0101               	movlb	1	; () banked
  7588  0046EA  510B               	movf	??___awdiv& (0+255),w,b
  7589                           
  7590                           ; BSR set to: 1
  7591  0046EC  0101               	movlb	1	; () banked
  7592  0046EE  0101               	movlb	1	; () banked
  7593  0046F0  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7594  0046F2  D00F               	goto	l10918
  7595                           
  7596                           ; BSR set to: 1
  7597  0046F4  0101               	movlb	1	; () banked
  7598  0046F6  0101               	movlb	1	; () banked
  7599  0046F8  6D09               	negf	___awdiv@divisor& (0+255),b
  7600  0046FA  0101               	movlb	1	; () banked
  7601  0046FC  1F0A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7602  0046FE  B0D8               	btfsc	status,0,c
  7603  004700  2B0A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7604                           
  7605                           ; BSR set to: 1
  7606  004702  0101               	movlb	1	; () banked
  7607  004704  6F0B               	movwf	??___awdiv& (0+255),b
  7608  004706  0E01               	movlw	1
  7609  004708  0101               	movlb	1	; () banked
  7610  00470A  0101               	movlb	1	; () banked
  7611  00470C  6F0D               	movwf	___awdiv@sign& (0+255),b
  7612  00470E  0101               	movlb	1	; () banked
  7613  004710  510B               	movf	??___awdiv& (0+255),w,b
  7614  004712                     l10918:
  7615                           
  7616                           ; BSR set to: 1
  7617  004712  0101               	movlb	1	; () banked
  7618  004714  0101               	movlb	1	; () banked
  7619  004716  AF08               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7620  004718  D00B               	goto	l10924
  7621                           
  7622                           ; BSR set to: 1
  7623  00471A  0101               	movlb	1	; () banked
  7624  00471C  0101               	movlb	1	; () banked
  7625  00471E  6D07               	negf	___awdiv@dividend& (0+255),b
  7626  004720  0101               	movlb	1	; () banked
  7627  004722  1F08               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7628  004724  B0D8               	btfsc	status,0,c
  7629  004726  2B08               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7630                           
  7631                           ; BSR set to: 1
  7632  004728  0E01               	movlw	1
  7633  00472A  0101               	movlb	1	; () banked
  7634  00472C  0101               	movlb	1	; () banked
  7635  00472E  1B0D               	xorwf	___awdiv@sign& (0+255),f,b
  7636  004730                     l10924:
  7637                           
  7638                           ; BSR set to: 1
  7639  004730  0E00               	movlw	0
  7640  004732  0101               	movlb	1	; () banked
  7641  004734  0101               	movlb	1	; () banked
  7642  004736  6F0F               	movwf	(___awdiv@quotient+1)& (0+255),b
  7643  004738  0E00               	movlw	0
  7644  00473A  0101               	movlb	1	; () banked
  7645  00473C  6F0E               	movwf	___awdiv@quotient& (0+255),b
  7646                           
  7647                           ; BSR set to: 1
  7648  00473E  0101               	movlb	1	; () banked
  7649  004740  0101               	movlb	1	; () banked
  7650  004742  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7651  004744  1109               	iorwf	___awdiv@divisor& (0+255),w,b
  7652  004746  B4D8               	btfsc	status,2,c
  7653  004748  D043               	goto	l10946
  7654                           
  7655                           ; BSR set to: 1
  7656  00474A  0101               	movlb	1	; () banked
  7657  00474C  6F0B               	movwf	??___awdiv& (0+255),b
  7658  00474E  0E01               	movlw	1
  7659  004750  0101               	movlb	1	; () banked
  7660  004752  0101               	movlb	1	; () banked
  7661  004754  6F0C               	movwf	___awdiv@counter& (0+255),b
  7662  004756  0101               	movlb	1	; () banked
  7663  004758  510B               	movf	??___awdiv& (0+255),w,b
  7664  00475A  D009               	goto	l10932
  7665  00475C                     l10930:
  7666                           
  7667                           ; BSR set to: 1
  7668  00475C  0101               	movlb	1	; () banked
  7669  00475E  0101               	movlb	1	; () banked
  7670  004760  0101               	movlb	1	; () banked
  7671  004762  90D8               	bcf	status,0,c
  7672  004764  3709               	rlcf	___awdiv@divisor& (0+255),f,b
  7673  004766  370A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7674  004768  0101               	movlb	1	; () banked
  7675  00476A  0101               	movlb	1	; () banked
  7676  00476C  2B0C               	incf	___awdiv@counter& (0+255),f,b
  7677  00476E                     l10932:
  7678                           
  7679                           ; BSR set to: 1
  7680  00476E  0101               	movlb	1	; () banked
  7681  004770  0101               	movlb	1	; () banked
  7682  004772  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7683  004774  D7F3               	goto	l10930
  7684  004776                     l10934:
  7685                           
  7686                           ; BSR set to: 1
  7687  004776  0101               	movlb	1	; () banked
  7688  004778  0101               	movlb	1	; () banked
  7689  00477A  0101               	movlb	1	; () banked
  7690  00477C  90D8               	bcf	status,0,c
  7691  00477E  370E               	rlcf	___awdiv@quotient& (0+255),f,b
  7692  004780  370F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7693                           
  7694                           ; BSR set to: 1
  7695  004782  0101               	movlb	1	; () banked
  7696  004784  0101               	movlb	1	; () banked
  7697  004786  5109               	movf	___awdiv@divisor& (0+255),w,b
  7698  004788  0101               	movlb	1	; () banked
  7699  00478A  0101               	movlb	1	; () banked
  7700  00478C  5D07               	subwf	___awdiv@dividend& (0+255),w,b
  7701  00478E  0101               	movlb	1	; () banked
  7702  004790  0101               	movlb	1	; () banked
  7703  004792  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7704  004794  0101               	movlb	1	; () banked
  7705  004796  0101               	movlb	1	; () banked
  7706  004798  5908               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7707  00479A  A0D8               	btfss	status,0,c
  7708  00479C  D00F               	goto	l10942
  7709                           
  7710                           ; BSR set to: 1
  7711  00479E  0101               	movlb	1	; () banked
  7712  0047A0  0101               	movlb	1	; () banked
  7713  0047A2  5109               	movf	___awdiv@divisor& (0+255),w,b
  7714  0047A4  0101               	movlb	1	; () banked
  7715  0047A6  0101               	movlb	1	; () banked
  7716  0047A8  5F07               	subwf	___awdiv@dividend& (0+255),f,b
  7717  0047AA  0101               	movlb	1	; () banked
  7718  0047AC  0101               	movlb	1	; () banked
  7719  0047AE  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7720  0047B0  0101               	movlb	1	; () banked
  7721  0047B2  0101               	movlb	1	; () banked
  7722  0047B4  5B08               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7723                           
  7724                           ; BSR set to: 1
  7725  0047B6  0101               	movlb	1	; () banked
  7726  0047B8  0101               	movlb	1	; () banked
  7727  0047BA  810E               	bsf	___awdiv@quotient& (0+255),0,b
  7728  0047BC                     l10942:
  7729                           
  7730                           ; BSR set to: 1
  7731  0047BC  0101               	movlb	1	; () banked
  7732  0047BE  0101               	movlb	1	; () banked
  7733  0047C0  0101               	movlb	1	; () banked
  7734  0047C2  90D8               	bcf	status,0,c
  7735  0047C4  330A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7736  0047C6  3309               	rrcf	___awdiv@divisor& (0+255),f,b
  7737                           
  7738                           ; BSR set to: 1
  7739  0047C8  0101               	movlb	1	; () banked
  7740  0047CA  0101               	movlb	1	; () banked
  7741  0047CC  2F0C               	decfsz	___awdiv@counter& (0+255),f,b
  7742  0047CE  D7D3               	goto	l10934
  7743  0047D0                     l10946:
  7744                           
  7745                           ; BSR set to: 1
  7746  0047D0  0101               	movlb	1	; () banked
  7747  0047D2  0101               	movlb	1	; () banked
  7748  0047D4  510D               	movf	___awdiv@sign& (0+255),w,b
  7749  0047D6  B4D8               	btfsc	status,2,c
  7750  0047D8  D007               	goto	l10950
  7751                           
  7752                           ; BSR set to: 1
  7753  0047DA  0101               	movlb	1	; () banked
  7754  0047DC  0101               	movlb	1	; () banked
  7755  0047DE  6D0E               	negf	___awdiv@quotient& (0+255),b
  7756  0047E0  0101               	movlb	1	; () banked
  7757  0047E2  1F0F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7758  0047E4  B0D8               	btfsc	status,0,c
  7759  0047E6  2B0F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7760  0047E8                     l10950:
  7761                           
  7762                           ; BSR set to: 1
  7763  0047E8  C10E  F107         	movff	___awdiv@quotient,?___awdiv
  7764  0047EC  C10F  F108         	movff	___awdiv@quotient+1,?___awdiv+1
  7765                           
  7766                           ; BSR set to: 1
  7767                           
  7768                           ; BSR set to: 1
  7769  0047F0  0012               	return	
  7770  0047F2                     __end_of___awdiv:
  7771                           	opt stack 0
  7772                           tblptru	equ	0xFF8
  7773                           tblptrh	equ	0xFF7
  7774                           tblptrl	equ	0xFF6
  7775                           tablat	equ	0xFF5
  7776                           prodh	equ	0xFF4
  7777                           prodl	equ	0xFF3
  7778                           postinc0	equ	0xFEE
  7779                           wreg	equ	0xFE8
  7780                           indf2	equ	0xFDF
  7781                           postinc2	equ	0xFDE
  7782                           postdec2	equ	0xFDD
  7783                           fsr2h	equ	0xFDA
  7784                           fsr2l	equ	0xFD9
  7785                           status	equ	0xFD8
  7786                           
  7787 ;; *************** function _Read_LDR *****************
  7788 ;; Defined at:
  7789 ;;		line 259 in file "main.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;		None
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  analog_readi    3   63[BANK1 ] float 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  3   56[BANK1 ] float 
  7796 ;; Registers used:
  7797 ;;		wreg, status,2, status,0, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7803 ;;      Params:         0       0       3       0       0       0       0       0       0
  7804 ;;      Locals:         0       0       3       0       0       0       0       0       0
  7805 ;;      Temps:          0       0       4       0       0       0       0       0       0
  7806 ;;      Totals:         0       0      10       0       0       0       0       0       0
  7807 ;;Total ram usage:       10 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:   12
  7810 ;; This function calls:
  7811 ;;		___ftdiv
  7812 ;;		___ftmul
  7813 ;;		___awtoft
  7814 ;; This function is called by:
  7815 ;;		_mainLoop
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text21
  7820  004B22                     __ptext21:
  7821                           	opt stack 0
  7822  004B22                     _Read_LDR:
  7823                           	opt stack 17
  7824                           
  7825                           ;main.c: 260: float analog_reading = 0;
  7826                           
  7827                           ; BSR set to: 1
  7828                           ;incstack = 0
  7829                           ;incstack = 0
  7830  004B22  0E00               	movlw	0
  7831  004B24  0101               	movlb	1	; () banked
  7832  004B26  0101               	movlb	1	; () banked
  7833  004B28  6F3F               	movwf	Read_LDR@analog_reading& (0+255),b
  7834  004B2A  0E00               	movlw	0
  7835  004B2C  0101               	movlb	1	; () banked
  7836  004B2E  0101               	movlb	1	; () banked
  7837  004B30  6F40               	movwf	(Read_LDR@analog_reading+1)& (0+255),b
  7838  004B32  0E00               	movlw	0
  7839  004B34  0101               	movlb	1	; () banked
  7840  004B36  0101               	movlb	1	; () banked
  7841  004B38  6F41               	movwf	(Read_LDR@analog_reading+2)& (0+255),b
  7842                           
  7843                           ; BSR set to: 1
  7844                           ;main.c: 261: ADCON0 |= ((1 << ADON) | (1 << GO));
  7845  004B3A  0E00               	movlw	0
  7846  004B3C  B2C2               	btfsc	4034,1,c	;volatile
  7847  004B3E  0E01               	movlw	1
  7848  004B40  0101               	movlb	1	; () banked
  7849  004B42  6F3B               	movwf	??_Read_LDR& (0+255),b
  7850  004B44  0E01               	movlw	1
  7851  004B46  0101               	movlb	1	; () banked
  7852  004B48  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  7853  004B4A  0101               	movlb	1	; () banked
  7854  004B4C  2B3B               	incf	??_Read_LDR& (0+255),f,b
  7855  004B4E  D003               	goto	u8874
  7856  004B50                     u8875:
  7857  004B50  0101               	movlb	1	; () banked
  7858  004B52  90D8               	bcf	status,0,c
  7859  004B54  373C               	rlcf	(??_Read_LDR+1)& (0+255),f,b
  7860  004B56                     u8874:
  7861  004B56  0101               	movlb	1	; () banked
  7862  004B58  2F3B               	decfsz	??_Read_LDR& (0+255),f,b
  7863  004B5A  D7FA               	goto	u8875
  7864  004B5C  0E00               	movlw	0
  7865  004B5E  B0C2               	btfsc	4034,0,c	;volatile
  7866  004B60  0E01               	movlw	1
  7867  004B62  0101               	movlb	1	; () banked
  7868  004B64  6F3D               	movwf	(??_Read_LDR+2)& (0+255),b
  7869  004B66  0E01               	movlw	1
  7870  004B68  0101               	movlb	1	; () banked
  7871  004B6A  6F3E               	movwf	(??_Read_LDR+3)& (0+255),b
  7872  004B6C  0101               	movlb	1	; () banked
  7873  004B6E  2B3D               	incf	(??_Read_LDR+2)& (0+255),f,b
  7874  004B70  D003               	goto	u8884
  7875  004B72                     u8885:
  7876  004B72  0101               	movlb	1	; () banked
  7877  004B74  90D8               	bcf	status,0,c
  7878  004B76  373E               	rlcf	(??_Read_LDR+3)& (0+255),f,b
  7879  004B78                     u8884:
  7880  004B78  0101               	movlb	1	; () banked
  7881  004B7A  2F3D               	decfsz	(??_Read_LDR+2)& (0+255),f,b
  7882  004B7C  D7FA               	goto	u8885
  7883  004B7E  0101               	movlb	1	; () banked
  7884  004B80  513E               	movf	(??_Read_LDR+3)& (0+255),w,b
  7885  004B82  0101               	movlb	1	; () banked
  7886  004B84  113C               	iorwf	(??_Read_LDR+1)& (0+255),w,b
  7887  004B86  12C2               	iorwf	4034,f,c	;volatile
  7888  004B88                     l228:
  7889  004B88  B2C2               	btfsc	4034,1,c	;volatile
  7890  004B8A  D7FE               	goto	l228
  7891                           
  7892                           ;main.c: 263: analog_reading = (ADRESH * 256) + (ADRESL);
  7893  004B8C  50C4               	movf	4036,w,c	;volatile
  7894  004B8E  0101               	movlb	1	; () banked
  7895  004B90  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  7896  004B92  6B3B               	clrf	??_Read_LDR& (0+255),b
  7897  004B94  50C3               	movf	4035,w,c	;volatile
  7898  004B96  0101               	movlb	1	; () banked
  7899  004B98  253B               	addwf	??_Read_LDR& (0+255),w,b
  7900  004B9A  0101               	movlb	1	; () banked
  7901  004B9C  0101               	movlb	1	; () banked
  7902  004B9E  6F08               	movwf	?___awtoft& (0+255),b
  7903  004BA0  0E00               	movlw	0
  7904  004BA2  0101               	movlb	1	; () banked
  7905  004BA4  213C               	addwfc	(??_Read_LDR+1)& (0+255),w,b
  7906  004BA6  0101               	movlb	1	; () banked
  7907  004BA8  6F09               	movwf	(?___awtoft+1)& (0+255),b
  7908  004BAA  ECE6  F02D         	call	___awtoft	;wreg free
  7909  004BAE  C10A  F141         	movff	?___awtoft+2,Read_LDR@analog_reading+2
  7910  004BB2  C109  F140         	movff	?___awtoft+1,Read_LDR@analog_reading+1
  7911  004BB6  C108  F13F         	movff	?___awtoft,Read_LDR@analog_reading
  7912                           
  7913                           ;main.c: 264: analog_reading = analog_reading*5/1023;
  7914  004BBA  0E00               	movlw	0
  7915  004BBC  0101               	movlb	1	; () banked
  7916  004BBE  0101               	movlb	1	; () banked
  7917  004BC0  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7918  004BC2  0EA0               	movlw	160
  7919  004BC4  0101               	movlb	1	; () banked
  7920  004BC6  0101               	movlb	1	; () banked
  7921  004BC8  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7922  004BCA  0E40               	movlw	64
  7923  004BCC  0101               	movlb	1	; () banked
  7924  004BCE  0101               	movlb	1	; () banked
  7925  004BD0  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7926  004BD2  C13F  F116         	movff	Read_LDR@analog_reading,?___ftmul
  7927  004BD6  C140  F117         	movff	Read_LDR@analog_reading+1,?___ftmul+1
  7928  004BDA  C141  F118         	movff	Read_LDR@analog_reading+2,?___ftmul+2
  7929  004BDE  ECE1  F01C         	call	___ftmul	;wreg free
  7930  004BE2  C118  F129         	movff	?___ftmul+2,?___ftdiv+2
  7931  004BE6  C117  F128         	movff	?___ftmul+1,?___ftdiv+1
  7932  004BEA  C116  F127         	movff	?___ftmul,?___ftdiv
  7933  004BEE  0EC0               	movlw	192
  7934  004BF0  0101               	movlb	1	; () banked
  7935  004BF2  0101               	movlb	1	; () banked
  7936  004BF4  6F2A               	movwf	(?___ftdiv+3)& (0+255),b
  7937  004BF6  0E7F               	movlw	127
  7938  004BF8  0101               	movlb	1	; () banked
  7939  004BFA  0101               	movlb	1	; () banked
  7940  004BFC  6F2B               	movwf	(?___ftdiv+4)& (0+255),b
  7941  004BFE  0E44               	movlw	68
  7942  004C00  0101               	movlb	1	; () banked
  7943  004C02  0101               	movlb	1	; () banked
  7944  004C04  6F2C               	movwf	(?___ftdiv+5)& (0+255),b
  7945  004C06  ECA8  F01F         	call	___ftdiv	;wreg free
  7946  004C0A  C129  F141         	movff	?___ftdiv+2,Read_LDR@analog_reading+2
  7947  004C0E  C128  F140         	movff	?___ftdiv+1,Read_LDR@analog_reading+1
  7948  004C12  C127  F13F         	movff	?___ftdiv,Read_LDR@analog_reading
  7949                           
  7950                           ;main.c: 265: return analog_reading;
  7951  004C16  C13F  F138         	movff	Read_LDR@analog_reading,?_Read_LDR
  7952  004C1A  C140  F139         	movff	Read_LDR@analog_reading+1,?_Read_LDR+1
  7953  004C1E  C141  F13A         	movff	Read_LDR@analog_reading+2,?_Read_LDR+2
  7954  004C22  0012               	return	
  7955  004C24                     __end_of_Read_LDR:
  7956                           	opt stack 0
  7957                           tblptru	equ	0xFF8
  7958                           tblptrh	equ	0xFF7
  7959                           tblptrl	equ	0xFF6
  7960                           tablat	equ	0xFF5
  7961                           prodh	equ	0xFF4
  7962                           prodl	equ	0xFF3
  7963                           postinc0	equ	0xFEE
  7964                           wreg	equ	0xFE8
  7965                           indf2	equ	0xFDF
  7966                           postinc2	equ	0xFDE
  7967                           postdec2	equ	0xFDD
  7968                           fsr2h	equ	0xFDA
  7969                           fsr2l	equ	0xFD9
  7970                           status	equ	0xFD8
  7971                           
  7972 ;; *************** function ___awtoft *****************
  7973 ;; Defined at:
  7974 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  c               2    8[BANK1 ] int 
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;  sign            1   12[BANK1 ] unsigned char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  3    8[BANK1 ] float 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2, status,0, cstack
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7988 ;;      Params:         0       0       3       0       0       0       0       0       0
  7989 ;;      Locals:         0       0       1       0       0       0       0       0       0
  7990 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7991 ;;      Totals:         0       0       5       0       0       0       0       0       0
  7992 ;;Total ram usage:        5 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:   11
  7995 ;; This function calls:
  7996 ;;		___ftpack
  7997 ;; This function is called by:
  7998 ;;		_Read_LDR
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           	psect	text22
  8003  005BCC                     __ptext22:
  8004                           	opt stack 0
  8005  005BCC                     ___awtoft:
  8006                           	opt stack 17
  8007                           
  8008                           ;incstack = 0
  8009                           ;incstack = 0
  8010  005BCC  0101               	movlb	1	; () banked
  8011  005BCE  6F0B               	movwf	??___awtoft& (0+255),b
  8012  005BD0  0E00               	movlw	0
  8013  005BD2  0101               	movlb	1	; () banked
  8014  005BD4  0101               	movlb	1	; () banked
  8015  005BD6  6F0C               	movwf	___awtoft@sign& (0+255),b
  8016  005BD8  0101               	movlb	1	; () banked
  8017  005BDA  510B               	movf	??___awtoft& (0+255),w,b
  8018                           
  8019                           ; BSR set to: 1
  8020  005BDC  0101               	movlb	1	; () banked
  8021  005BDE  0101               	movlb	1	; () banked
  8022  005BE0  AF09               	btfss	(___awtoft@c+1)& (0+255),7,b
  8023  005BE2  D00F               	goto	l10998
  8024                           
  8025                           ; BSR set to: 1
  8026  005BE4  0101               	movlb	1	; () banked
  8027  005BE6  0101               	movlb	1	; () banked
  8028  005BE8  6D08               	negf	___awtoft@c& (0+255),b
  8029  005BEA  0101               	movlb	1	; () banked
  8030  005BEC  1F09               	comf	(___awtoft@c+1)& (0+255),f,b
  8031  005BEE  B0D8               	btfsc	status,0,c
  8032  005BF0  2B09               	incf	(___awtoft@c+1)& (0+255),f,b
  8033                           
  8034                           ; BSR set to: 1
  8035  005BF2  0101               	movlb	1	; () banked
  8036  005BF4  6F0B               	movwf	??___awtoft& (0+255),b
  8037  005BF6  0E01               	movlw	1
  8038  005BF8  0101               	movlb	1	; () banked
  8039  005BFA  0101               	movlb	1	; () banked
  8040  005BFC  6F0C               	movwf	___awtoft@sign& (0+255),b
  8041  005BFE  0101               	movlb	1	; () banked
  8042  005C00  510B               	movf	??___awtoft& (0+255),w,b
  8043  005C02                     l10998:
  8044                           
  8045                           ; BSR set to: 1
  8046  005C02  0101               	movlb	1	; () banked
  8047  005C04  0101               	movlb	1	; () banked
  8048  005C06  C108  F100         	movff	___awtoft@c,?___ftpack
  8049  005C0A  0101               	movlb	1	; () banked
  8050  005C0C  0101               	movlb	1	; () banked
  8051  005C0E  C109  F101         	movff	___awtoft@c+1,?___ftpack+1
  8052  005C12  0101               	movlb	1	; () banked
  8053  005C14  0101               	movlb	1	; () banked
  8054  005C16  6B02               	clrf	(?___ftpack+2)& (0+255),b
  8055  005C18  0101               	movlb	1	; () banked
  8056  005C1A  6F0B               	movwf	??___awtoft& (0+255),b
  8057  005C1C  0E8E               	movlw	142
  8058  005C1E  0101               	movlb	1	; () banked
  8059  005C20  0101               	movlb	1	; () banked
  8060  005C22  6F03               	movwf	(?___ftpack+3)& (0+255),b
  8061  005C24  0101               	movlb	1	; () banked
  8062  005C26  510B               	movf	??___awtoft& (0+255),w,b
  8063  005C28  C10C  F104         	movff	___awtoft@sign,?___ftpack+4
  8064  005C2C  EC30  F022         	call	___ftpack	;wreg free
  8065  005C30  C102  F10A         	movff	?___ftpack+2,?___awtoft+2
  8066  005C34  C101  F109         	movff	?___ftpack+1,?___awtoft+1
  8067  005C38  C100  F108         	movff	?___ftpack,?___awtoft
  8068  005C3C  0012               	return	
  8069  005C3E                     __end_of___awtoft:
  8070                           	opt stack 0
  8071                           tblptru	equ	0xFF8
  8072                           tblptrh	equ	0xFF7
  8073                           tblptrl	equ	0xFF6
  8074                           tablat	equ	0xFF5
  8075                           prodh	equ	0xFF4
  8076                           prodl	equ	0xFF3
  8077                           postinc0	equ	0xFEE
  8078                           wreg	equ	0xFE8
  8079                           indf2	equ	0xFDF
  8080                           postinc2	equ	0xFDE
  8081                           postdec2	equ	0xFDD
  8082                           fsr2h	equ	0xFDA
  8083                           fsr2l	equ	0xFD9
  8084                           status	equ	0xFD8
  8085                           
  8086 ;; *************** function ___ftmul *****************
  8087 ;; Defined at:
  8088 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  f1              3   22[BANK1 ] float 
  8091 ;;  f2              3   25[BANK1 ] float 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  f3_as_produc    3   34[BANK1 ] unsigned um
  8094 ;;  sign            1   38[BANK1 ] unsigned char 
  8095 ;;  cntr            1   37[BANK1 ] unsigned char 
  8096 ;;  exp             1   33[BANK1 ] unsigned char 
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  3   22[BANK1 ] float 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8106 ;;      Params:         0       0       6       0       0       0       0       0       0
  8107 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8108 ;;      Temps:          0       0       5       0       0       0       0       0       0
  8109 ;;      Totals:         0       0      17       0       0       0       0       0       0
  8110 ;;Total ram usage:       17 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:   11
  8113 ;; This function calls:
  8114 ;;		___ftpack
  8115 ;; This function is called by:
  8116 ;;		_Read_LDR
  8117 ;;		_fround
  8118 ;;		_scale
  8119 ;;		_sprintf
  8120 ;;		___asftmul
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text23
  8125  0039C2                     __ptext23:
  8126                           	opt stack 0
  8127  0039C2                     ___ftmul:
  8128                           	opt stack 17
  8129                           
  8130                           ;incstack = 0
  8131                           ;incstack = 0
  8132  0039C2  0E0F               	movlw	15
  8133  0039C4  0101               	movlb	1	; () banked
  8134  0039C6  6F1C               	movwf	??___ftmul& (0+255),b
  8135  0039C8  0101               	movlb	1	; () banked
  8136  0039CA  C116  F11D         	movff	___ftmul@f1,??___ftmul+1
  8137  0039CE  0101               	movlb	1	; () banked
  8138  0039D0  C117  F11E         	movff	___ftmul@f1+1,??___ftmul+2
  8139  0039D4  0101               	movlb	1	; () banked
  8140  0039D6  C118  F11F         	movff	___ftmul@f1+2,??___ftmul+3
  8141  0039DA  0101               	movlb	1	; () banked
  8142  0039DC  291C               	incf	??___ftmul& (0+255),w,b
  8143  0039DE  0101               	movlb	1	; () banked
  8144  0039E0  6F20               	movwf	(??___ftmul+4)& (0+255),b
  8145  0039E2  D005               	goto	u10060
  8146  0039E4                     u10065:
  8147  0039E4  0101               	movlb	1	; () banked
  8148  0039E6  90D8               	bcf	status,0,c
  8149  0039E8  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  8150  0039EA  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  8151  0039EC  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  8152  0039EE                     u10060:
  8153  0039EE  0101               	movlb	1	; () banked
  8154  0039F0  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  8155  0039F2  D7F8               	goto	u10065
  8156  0039F4  0101               	movlb	1	; () banked
  8157  0039F6  511D               	movf	(??___ftmul+1)& (0+255),w,b
  8158  0039F8  0101               	movlb	1	; () banked
  8159  0039FA  0101               	movlb	1	; () banked
  8160  0039FC  6F21               	movwf	___ftmul@exp& (0+255),b
  8161  0039FE  0101               	movlb	1	; () banked
  8162  003A00  6721               	tstfsz	___ftmul@exp& (0+255),b
  8163  003A02  D001               	goto	l10858
  8164  003A04  D021               	goto	u10090
  8165  003A06                     l10858:
  8166                           
  8167                           ; BSR set to: 1
  8168  003A06  0E0F               	movlw	15
  8169  003A08  0101               	movlb	1	; () banked
  8170  003A0A  6F1C               	movwf	??___ftmul& (0+255),b
  8171  003A0C  0101               	movlb	1	; () banked
  8172  003A0E  C119  F11D         	movff	___ftmul@f2,??___ftmul+1
  8173  003A12  0101               	movlb	1	; () banked
  8174  003A14  C11A  F11E         	movff	___ftmul@f2+1,??___ftmul+2
  8175  003A18  0101               	movlb	1	; () banked
  8176  003A1A  C11B  F11F         	movff	___ftmul@f2+2,??___ftmul+3
  8177  003A1E  0101               	movlb	1	; () banked
  8178  003A20  291C               	incf	??___ftmul& (0+255),w,b
  8179  003A22  0101               	movlb	1	; () banked
  8180  003A24  6F20               	movwf	(??___ftmul+4)& (0+255),b
  8181  003A26  D005               	goto	u10080
  8182  003A28                     u10085:
  8183  003A28  0101               	movlb	1	; () banked
  8184  003A2A  90D8               	bcf	status,0,c
  8185  003A2C  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  8186  003A2E  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  8187  003A30  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  8188  003A32                     u10080:
  8189  003A32  0101               	movlb	1	; () banked
  8190  003A34  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  8191  003A36  D7F8               	goto	u10085
  8192  003A38  0101               	movlb	1	; () banked
  8193  003A3A  511D               	movf	(??___ftmul+1)& (0+255),w,b
  8194  003A3C  0101               	movlb	1	; () banked
  8195  003A3E  0101               	movlb	1	; () banked
  8196  003A40  6F26               	movwf	___ftmul@sign& (0+255),b
  8197  003A42  0101               	movlb	1	; () banked
  8198  003A44  6726               	tstfsz	___ftmul@sign& (0+255),b
  8199  003A46  D00D               	goto	l10864
  8200  003A48                     u10090:
  8201                           
  8202                           ; BSR set to: 1
  8203  003A48  0E00               	movlw	0
  8204  003A4A  0101               	movlb	1	; () banked
  8205  003A4C  0101               	movlb	1	; () banked
  8206  003A4E  6F16               	movwf	?___ftmul& (0+255),b
  8207  003A50  0E00               	movlw	0
  8208  003A52  0101               	movlb	1	; () banked
  8209  003A54  0101               	movlb	1	; () banked
  8210  003A56  6F17               	movwf	(?___ftmul+1)& (0+255),b
  8211  003A58  0E00               	movlw	0
  8212  003A5A  0101               	movlb	1	; () banked
  8213  003A5C  0101               	movlb	1	; () banked
  8214  003A5E  6F18               	movwf	(?___ftmul+2)& (0+255),b
  8215  003A60  D0A6               	goto	l779
  8216  003A62                     l10864:
  8217                           
  8218                           ; BSR set to: 1
  8219  003A62  0101               	movlb	1	; () banked
  8220  003A64  0101               	movlb	1	; () banked
  8221  003A66  5126               	movf	___ftmul@sign& (0+255),w,b
  8222  003A68  0F7B               	addlw	123
  8223  003A6A  0101               	movlb	1	; () banked
  8224  003A6C  0101               	movlb	1	; () banked
  8225  003A6E  2721               	addwf	___ftmul@exp& (0+255),f,b
  8226                           
  8227                           ; BSR set to: 1
  8228  003A70  C118  F126         	movff	___ftmul@f1+2,___ftmul@sign
  8229  003A74  0101               	movlb	1	; () banked
  8230  003A76  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8231  003A78  0101               	movlb	1	; () banked
  8232  003A7A  0101               	movlb	1	; () banked
  8233  003A7C  1B26               	xorwf	___ftmul@sign& (0+255),f,b
  8234  003A7E  0E80               	movlw	128
  8235  003A80  0101               	movlb	1	; () banked
  8236  003A82  0101               	movlb	1	; () banked
  8237  003A84  1726               	andwf	___ftmul@sign& (0+255),f,b
  8238                           
  8239                           ; BSR set to: 1
  8240  003A86  0101               	movlb	1	; () banked
  8241  003A88  0101               	movlb	1	; () banked
  8242  003A8A  8F17               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8243                           
  8244                           ; BSR set to: 1
  8245  003A8C  0101               	movlb	1	; () banked
  8246  003A8E  0101               	movlb	1	; () banked
  8247  003A90  8F1A               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8248                           
  8249                           ; BSR set to: 1
  8250  003A92  0EFF               	movlw	255
  8251  003A94  0101               	movlb	1	; () banked
  8252  003A96  0101               	movlb	1	; () banked
  8253  003A98  1719               	andwf	___ftmul@f2& (0+255),f,b
  8254  003A9A  0EFF               	movlw	255
  8255  003A9C  0101               	movlb	1	; () banked
  8256  003A9E  0101               	movlb	1	; () banked
  8257  003AA0  171A               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8258  003AA2  0E00               	movlw	0
  8259  003AA4  0101               	movlb	1	; () banked
  8260  003AA6  0101               	movlb	1	; () banked
  8261  003AA8  171B               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8262                           
  8263                           ; BSR set to: 1
  8264  003AAA  0E00               	movlw	0
  8265  003AAC  0101               	movlb	1	; () banked
  8266  003AAE  0101               	movlb	1	; () banked
  8267  003AB0  6F22               	movwf	___ftmul@f3_as_product& (0+255),b
  8268  003AB2  0E00               	movlw	0
  8269  003AB4  0101               	movlb	1	; () banked
  8270  003AB6  0101               	movlb	1	; () banked
  8271  003AB8  6F23               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8272  003ABA  0E00               	movlw	0
  8273  003ABC  0101               	movlb	1	; () banked
  8274  003ABE  0101               	movlb	1	; () banked
  8275  003AC0  6F24               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8276                           
  8277                           ; BSR set to: 1
  8278  003AC2  0101               	movlb	1	; () banked
  8279  003AC4  6F1C               	movwf	??___ftmul& (0+255),b
  8280  003AC6  0E07               	movlw	7
  8281  003AC8  0101               	movlb	1	; () banked
  8282  003ACA  0101               	movlb	1	; () banked
  8283  003ACC  6F25               	movwf	___ftmul@cntr& (0+255),b
  8284  003ACE  0101               	movlb	1	; () banked
  8285  003AD0  511C               	movf	??___ftmul& (0+255),w,b
  8286  003AD2                     l10878:
  8287                           
  8288                           ; BSR set to: 1
  8289  003AD2  0101               	movlb	1	; () banked
  8290  003AD4  0101               	movlb	1	; () banked
  8291  003AD6  A116               	btfss	___ftmul@f1& (0+255),0,b
  8292  003AD8  D012               	goto	l10882
  8293                           
  8294                           ; BSR set to: 1
  8295  003ADA  0101               	movlb	1	; () banked
  8296  003ADC  0101               	movlb	1	; () banked
  8297  003ADE  5119               	movf	___ftmul@f2& (0+255),w,b
  8298  003AE0  0101               	movlb	1	; () banked
  8299  003AE2  0101               	movlb	1	; () banked
  8300  003AE4  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8301  003AE6  0101               	movlb	1	; () banked
  8302  003AE8  0101               	movlb	1	; () banked
  8303  003AEA  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8304  003AEC  0101               	movlb	1	; () banked
  8305  003AEE  0101               	movlb	1	; () banked
  8306  003AF0  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8307  003AF2  0101               	movlb	1	; () banked
  8308  003AF4  0101               	movlb	1	; () banked
  8309  003AF6  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8310  003AF8  0101               	movlb	1	; () banked
  8311  003AFA  0101               	movlb	1	; () banked
  8312  003AFC  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8313  003AFE                     l10882:
  8314                           
  8315                           ; BSR set to: 1
  8316  003AFE  0101               	movlb	1	; () banked
  8317  003B00  90D8               	bcf	status,0,c
  8318  003B02  0101               	movlb	1	; () banked
  8319  003B04  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8320  003B06  0101               	movlb	1	; () banked
  8321  003B08  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8322  003B0A  0101               	movlb	1	; () banked
  8323  003B0C  3316               	rrcf	___ftmul@f1& (0+255),f,b
  8324  003B0E  0101               	movlb	1	; () banked
  8325  003B10  90D8               	bcf	status,0,c
  8326  003B12  0101               	movlb	1	; () banked
  8327  003B14  3719               	rlcf	___ftmul@f2& (0+255),f,b
  8328  003B16  0101               	movlb	1	; () banked
  8329  003B18  371A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8330  003B1A  0101               	movlb	1	; () banked
  8331  003B1C  371B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8332                           
  8333                           ; BSR set to: 1
  8334  003B1E  0101               	movlb	1	; () banked
  8335  003B20  0101               	movlb	1	; () banked
  8336  003B22  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  8337  003B24  D7D6               	goto	l10878
  8338                           
  8339                           ; BSR set to: 1
  8340                           
  8341                           ; BSR set to: 1
  8342  003B26  0101               	movlb	1	; () banked
  8343  003B28  6F1C               	movwf	??___ftmul& (0+255),b
  8344  003B2A  0E09               	movlw	9
  8345  003B2C  0101               	movlb	1	; () banked
  8346  003B2E  0101               	movlb	1	; () banked
  8347  003B30  6F25               	movwf	___ftmul@cntr& (0+255),b
  8348  003B32  0101               	movlb	1	; () banked
  8349  003B34  511C               	movf	??___ftmul& (0+255),w,b
  8350  003B36                     l10888:
  8351                           
  8352                           ; BSR set to: 1
  8353  003B36  0101               	movlb	1	; () banked
  8354  003B38  0101               	movlb	1	; () banked
  8355  003B3A  A116               	btfss	___ftmul@f1& (0+255),0,b
  8356  003B3C  D012               	goto	l10892
  8357                           
  8358                           ; BSR set to: 1
  8359  003B3E  0101               	movlb	1	; () banked
  8360  003B40  0101               	movlb	1	; () banked
  8361  003B42  5119               	movf	___ftmul@f2& (0+255),w,b
  8362  003B44  0101               	movlb	1	; () banked
  8363  003B46  0101               	movlb	1	; () banked
  8364  003B48  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8365  003B4A  0101               	movlb	1	; () banked
  8366  003B4C  0101               	movlb	1	; () banked
  8367  003B4E  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8368  003B50  0101               	movlb	1	; () banked
  8369  003B52  0101               	movlb	1	; () banked
  8370  003B54  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8371  003B56  0101               	movlb	1	; () banked
  8372  003B58  0101               	movlb	1	; () banked
  8373  003B5A  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8374  003B5C  0101               	movlb	1	; () banked
  8375  003B5E  0101               	movlb	1	; () banked
  8376  003B60  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8377  003B62                     l10892:
  8378                           
  8379                           ; BSR set to: 1
  8380  003B62  0101               	movlb	1	; () banked
  8381  003B64  90D8               	bcf	status,0,c
  8382  003B66  0101               	movlb	1	; () banked
  8383  003B68  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8384  003B6A  0101               	movlb	1	; () banked
  8385  003B6C  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8386  003B6E  0101               	movlb	1	; () banked
  8387  003B70  3316               	rrcf	___ftmul@f1& (0+255),f,b
  8388  003B72  0101               	movlb	1	; () banked
  8389  003B74  90D8               	bcf	status,0,c
  8390  003B76  0101               	movlb	1	; () banked
  8391  003B78  3324               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8392  003B7A  0101               	movlb	1	; () banked
  8393  003B7C  3323               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8394  003B7E  0101               	movlb	1	; () banked
  8395  003B80  3322               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8396                           
  8397                           ; BSR set to: 1
  8398  003B82  0101               	movlb	1	; () banked
  8399  003B84  0101               	movlb	1	; () banked
  8400  003B86  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  8401  003B88  D7D6               	goto	l10888
  8402                           
  8403                           ; BSR set to: 1
  8404                           
  8405                           ; BSR set to: 1
  8406  003B8A  C122  F100         	movff	___ftmul@f3_as_product,?___ftpack
  8407  003B8E  C123  F101         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  8408  003B92  C124  F102         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  8409  003B96  C121  F103         	movff	___ftmul@exp,?___ftpack+3
  8410  003B9A  C126  F104         	movff	___ftmul@sign,?___ftpack+4
  8411  003B9E  EC30  F022         	call	___ftpack	;wreg free
  8412  003BA2  C102  F118         	movff	?___ftpack+2,?___ftmul+2
  8413  003BA6  C101  F117         	movff	?___ftpack+1,?___ftmul+1
  8414  003BAA  C100  F116         	movff	?___ftpack,?___ftmul
  8415  003BAE                     l779:
  8416  003BAE  0012               	return	
  8417  003BB0                     __end_of___ftmul:
  8418                           	opt stack 0
  8419                           tblptru	equ	0xFF8
  8420                           tblptrh	equ	0xFF7
  8421                           tblptrl	equ	0xFF6
  8422                           tablat	equ	0xFF5
  8423                           prodh	equ	0xFF4
  8424                           prodl	equ	0xFF3
  8425                           postinc0	equ	0xFEE
  8426                           wreg	equ	0xFE8
  8427                           indf2	equ	0xFDF
  8428                           postinc2	equ	0xFDE
  8429                           postdec2	equ	0xFDD
  8430                           fsr2h	equ	0xFDA
  8431                           fsr2l	equ	0xFD9
  8432                           status	equ	0xFD8
  8433                           
  8434 ;; *************** function _Obtener_Distancia *****************
  8435 ;; Defined at:
  8436 ;;		line 219 in file "main.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;		None
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  Duracion        2   14[BANK1 ] unsigned int 
  8441 ;;  Distancia       2   12[BANK1 ] unsigned int 
  8442 ;;  Timer_1         2   10[BANK1 ] unsigned int 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  2    8[BANK1 ] unsigned int 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0, cstack
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8452 ;;      Params:         0       0       2       0       0       0       0       0       0
  8453 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8455 ;;      Totals:         0       0       8       0       0       0       0       0       0
  8456 ;;Total ram usage:        8 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:   11
  8459 ;; This function calls:
  8460 ;;		___lwdiv
  8461 ;; This function is called by:
  8462 ;;		_mainLoop
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text24
  8467  0054F4                     __ptext24:
  8468                           	opt stack 0
  8469  0054F4                     _Obtener_Distancia:
  8470                           	opt stack 18
  8471                           
  8472                           ;main.c: 220: uint16_t Duracion;
  8473                           ;main.c: 221: uint16_t Distancia;
  8474                           ;main.c: 222: uint16_t Timer_1;
  8475                           ;main.c: 224: LATAbits.LATA1=1;
  8476                           
  8477                           ;incstack = 0
  8478                           ;incstack = 0
  8479  0054F4  8289               	bsf	3977,1,c	;volatile
  8480                           
  8481                           ;main.c: 225: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8482  0054F6  0E06               	movlw	6
  8483  0054F8                     u11107:
  8484  0054F8  2EE8               	decfsz	wreg,f,c
  8485  0054FA  D7FE               	goto	u11107
  8486  0054FC  D000               	nop2		;nop
  8487                           
  8488                           ;main.c: 226: LATAbits.LATA1=0;
  8489  0054FE  9289               	bcf	3977,1,c	;volatile
  8490  005500                     l212:
  8491  005500  A480               	btfss	3968,2,c	;volatile
  8492  005502  D7FE               	goto	l212
  8493                           
  8494                           ;main.c: 228: T1CONbits.TMR1ON=1;
  8495  005504  80CD               	bsf	4045,0,c	;volatile
  8496  005506                     l215:
  8497  005506  B480               	btfsc	3968,2,c	;volatile
  8498  005508  D7FE               	goto	l215
  8499                           
  8500                           ;main.c: 230: T1CONbits.TMR1ON=0;
  8501  00550A  90CD               	bcf	4045,0,c	;volatile
  8502                           
  8503                           ;main.c: 231: Timer_1=TMR1;
  8504  00550C  CFCE F10A          	movff	4046,Obtener_Distancia@Timer_1	;volatile
  8505  005510  CFCF F10B          	movff	4047,Obtener_Distancia@Timer_1+1	;volatile
  8506                           
  8507                           ;main.c: 232: Duracion=Timer_1/2;
  8508  005514  90D8               	bcf	status,0,c
  8509  005516  0101               	movlb	1	; () banked
  8510  005518  0101               	movlb	1	; () banked
  8511  00551A  310B               	rrcf	(Obtener_Distancia@Timer_1+1)& (0+255),w,b
  8512  00551C  0101               	movlb	1	; () banked
  8513  00551E  0101               	movlb	1	; () banked
  8514  005520  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  8515  005522  0101               	movlb	1	; () banked
  8516  005524  0101               	movlb	1	; () banked
  8517  005526  310A               	rrcf	Obtener_Distancia@Timer_1& (0+255),w,b
  8518  005528  0101               	movlb	1	; () banked
  8519  00552A  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  8520                           
  8521                           ;main.c: 233: if(Duracion<=23200)
  8522  00552C  0EA1               	movlw	161
  8523  00552E  0101               	movlb	1	; () banked
  8524  005530  0101               	movlb	1	; () banked
  8525  005532  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  8526  005534  0E5A               	movlw	90
  8527  005536  0101               	movlb	1	; () banked
  8528  005538  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  8529  00553A  B0D8               	btfsc	status,0,c
  8530  00553C  D014               	goto	l10140
  8531                           
  8532                           ; BSR set to: 1
  8533                           ;main.c: 234: {
  8534                           ;main.c: 235: Distancia=Duracion/58;
  8535  00553E  C10E  F100         	movff	Obtener_Distancia@Duracion,?___lwdiv
  8536  005542  C10F  F101         	movff	Obtener_Distancia@Duracion+1,?___lwdiv+1
  8537  005546  0E00               	movlw	0
  8538  005548  0101               	movlb	1	; () banked
  8539  00554A  0101               	movlb	1	; () banked
  8540  00554C  6F03               	movwf	(?___lwdiv+3)& (0+255),b
  8541  00554E  0E3A               	movlw	58
  8542  005550  0101               	movlb	1	; () banked
  8543  005552  6F02               	movwf	(?___lwdiv+2)& (0+255),b
  8544  005554  EC27  F02B         	call	___lwdiv	;wreg free
  8545  005558  0101               	movlb	1	; () banked
  8546  00555A  C100  F10C         	movff	?___lwdiv,Obtener_Distancia@Distancia
  8547  00555E  0101               	movlb	1	; () banked
  8548  005560  C101  F10D         	movff	?___lwdiv+1,Obtener_Distancia@Distancia+1
  8549                           
  8550                           ;main.c: 236: }
  8551  005564  D00E               	goto	l219
  8552  005566                     l10140:
  8553                           
  8554                           ; BSR set to: 1
  8555                           ;main.c: 237: else if(Duracion<116)
  8556  005566  0E74               	movlw	116
  8557  005568  0101               	movlb	1	; () banked
  8558  00556A  0101               	movlb	1	; () banked
  8559  00556C  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  8560  00556E  0E00               	movlw	0
  8561  005570  0101               	movlb	1	; () banked
  8562  005572  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  8563                           
  8564                           ; BSR set to: 1
  8565                           ;main.c: 241: else
  8566                           ;main.c: 242: {
  8567                           ;main.c: 243: Distancia=0;
  8568                           
  8569                           ; BSR set to: 1
  8570                           
  8571                           ;main.c: 240: }
  8572                           
  8573                           ; BSR set to: 1
  8574                           ;main.c: 238: {
  8575                           ;main.c: 239: Distancia=0;
  8576  005574  0E00               	movlw	0
  8577  005576  0101               	movlb	1	; () banked
  8578  005578  0101               	movlb	1	; () banked
  8579  00557A  6F0D               	movwf	(Obtener_Distancia@Distancia+1)& (0+255),b
  8580  00557C  0E00               	movlw	0
  8581  00557E  0101               	movlb	1	; () banked
  8582  005580  6F0C               	movwf	Obtener_Distancia@Distancia& (0+255),b
  8583  005582                     l219:
  8584                           
  8585                           ; BSR set to: 1
  8586                           ;main.c: 244: }
  8587                           ;main.c: 245: Duracion=0;
  8588  005582  0E00               	movlw	0
  8589  005584  0101               	movlb	1	; () banked
  8590  005586  0101               	movlb	1	; () banked
  8591  005588  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  8592  00558A  0E00               	movlw	0
  8593  00558C  0101               	movlb	1	; () banked
  8594  00558E  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  8595                           
  8596                           ;main.c: 246: TMR1=0;
  8597  005590  0E00               	movlw	0
  8598  005592  6ECF               	movwf	4047,c	;volatile
  8599  005594  0E00               	movlw	0
  8600  005596  6ECE               	movwf	4046,c	;volatile
  8601                           
  8602                           ; BSR set to: 1
  8603                           ;main.c: 248: return Distancia;
  8604  005598  C10C  F108         	movff	Obtener_Distancia@Distancia,?_Obtener_Distancia
  8605  00559C  C10D  F109         	movff	Obtener_Distancia@Distancia+1,?_Obtener_Distancia+1
  8606                           
  8607                           ; BSR set to: 1
  8608                           
  8609                           ; BSR set to: 1
  8610  0055A0  0012               	return	
  8611  0055A2                     __end_of_Obtener_Distancia:
  8612                           	opt stack 0
  8613                           tblptru	equ	0xFF8
  8614                           tblptrh	equ	0xFF7
  8615                           tblptrl	equ	0xFF6
  8616                           tablat	equ	0xFF5
  8617                           prodh	equ	0xFF4
  8618                           prodl	equ	0xFF3
  8619                           postinc0	equ	0xFEE
  8620                           wreg	equ	0xFE8
  8621                           indf2	equ	0xFDF
  8622                           postinc2	equ	0xFDE
  8623                           postdec2	equ	0xFDD
  8624                           fsr2h	equ	0xFDA
  8625                           fsr2l	equ	0xFD9
  8626                           status	equ	0xFD8
  8627                           
  8628 ;; *************** function ___lwdiv *****************
  8629 ;; Defined at:
  8630 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  dividend        2    0[BANK1 ] unsigned int 
  8633 ;;  divisor         2    2[BANK1 ] unsigned int 
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;  quotient        2    6[BANK1 ] unsigned int 
  8636 ;;  counter         1    5[BANK1 ] unsigned char 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  2    0[BANK1 ] unsigned int 
  8639 ;; Registers used:
  8640 ;;		wreg, status,2, status,0
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8646 ;;      Params:         0       0       4       0       0       0       0       0       0
  8647 ;;      Locals:         0       0       3       0       0       0       0       0       0
  8648 ;;      Temps:          0       0       1       0       0       0       0       0       0
  8649 ;;      Totals:         0       0       8       0       0       0       0       0       0
  8650 ;;Total ram usage:        8 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; Hardware stack levels required when called:   10
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_Obtener_Distancia
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text25
  8661  00564E                     __ptext25:
  8662                           	opt stack 0
  8663  00564E                     ___lwdiv:
  8664                           	opt stack 18
  8665                           
  8666                           ; BSR set to: 1
  8667                           ;incstack = 0
  8668                           ;incstack = 0
  8669  00564E  0E00               	movlw	0
  8670  005650  0101               	movlb	1	; () banked
  8671  005652  0101               	movlb	1	; () banked
  8672  005654  6F07               	movwf	(___lwdiv@quotient+1)& (0+255),b
  8673  005656  0E00               	movlw	0
  8674  005658  0101               	movlb	1	; () banked
  8675  00565A  6F06               	movwf	___lwdiv@quotient& (0+255),b
  8676                           
  8677                           ; BSR set to: 1
  8678  00565C  0101               	movlb	1	; () banked
  8679  00565E  0101               	movlb	1	; () banked
  8680  005660  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8681  005662  1102               	iorwf	___lwdiv@divisor& (0+255),w,b
  8682  005664  B4D8               	btfsc	status,2,c
  8683  005666  D043               	goto	l912
  8684                           
  8685                           ; BSR set to: 1
  8686  005668  0101               	movlb	1	; () banked
  8687  00566A  6F04               	movwf	??___lwdiv& (0+255),b
  8688  00566C  0E01               	movlw	1
  8689  00566E  0101               	movlb	1	; () banked
  8690  005670  0101               	movlb	1	; () banked
  8691  005672  6F05               	movwf	___lwdiv@counter& (0+255),b
  8692  005674  0101               	movlb	1	; () banked
  8693  005676  5104               	movf	??___lwdiv& (0+255),w,b
  8694  005678  D009               	goto	l11064
  8695  00567A                     l11062:
  8696                           
  8697                           ; BSR set to: 1
  8698  00567A  0101               	movlb	1	; () banked
  8699  00567C  0101               	movlb	1	; () banked
  8700  00567E  0101               	movlb	1	; () banked
  8701  005680  90D8               	bcf	status,0,c
  8702  005682  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
  8703  005684  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8704  005686  0101               	movlb	1	; () banked
  8705  005688  0101               	movlb	1	; () banked
  8706  00568A  2B05               	incf	___lwdiv@counter& (0+255),f,b
  8707  00568C                     l11064:
  8708                           
  8709                           ; BSR set to: 1
  8710  00568C  0101               	movlb	1	; () banked
  8711  00568E  0101               	movlb	1	; () banked
  8712  005690  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  8713  005692  D7F3               	goto	l11062
  8714  005694                     l11066:
  8715                           
  8716                           ; BSR set to: 1
  8717  005694  0101               	movlb	1	; () banked
  8718  005696  0101               	movlb	1	; () banked
  8719  005698  0101               	movlb	1	; () banked
  8720  00569A  90D8               	bcf	status,0,c
  8721  00569C  3706               	rlcf	___lwdiv@quotient& (0+255),f,b
  8722  00569E  3707               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8723                           
  8724                           ; BSR set to: 1
  8725  0056A0  0101               	movlb	1	; () banked
  8726  0056A2  0101               	movlb	1	; () banked
  8727  0056A4  5102               	movf	___lwdiv@divisor& (0+255),w,b
  8728  0056A6  0101               	movlb	1	; () banked
  8729  0056A8  0101               	movlb	1	; () banked
  8730  0056AA  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
  8731  0056AC  0101               	movlb	1	; () banked
  8732  0056AE  0101               	movlb	1	; () banked
  8733  0056B0  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8734  0056B2  0101               	movlb	1	; () banked
  8735  0056B4  0101               	movlb	1	; () banked
  8736  0056B6  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8737  0056B8  A0D8               	btfss	status,0,c
  8738  0056BA  D00F               	goto	l11074
  8739                           
  8740                           ; BSR set to: 1
  8741  0056BC  0101               	movlb	1	; () banked
  8742  0056BE  0101               	movlb	1	; () banked
  8743  0056C0  5102               	movf	___lwdiv@divisor& (0+255),w,b
  8744  0056C2  0101               	movlb	1	; () banked
  8745  0056C4  0101               	movlb	1	; () banked
  8746  0056C6  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
  8747  0056C8  0101               	movlb	1	; () banked
  8748  0056CA  0101               	movlb	1	; () banked
  8749  0056CC  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8750  0056CE  0101               	movlb	1	; () banked
  8751  0056D0  0101               	movlb	1	; () banked
  8752  0056D2  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8753                           
  8754                           ; BSR set to: 1
  8755  0056D4  0101               	movlb	1	; () banked
  8756  0056D6  0101               	movlb	1	; () banked
  8757  0056D8  8106               	bsf	___lwdiv@quotient& (0+255),0,b
  8758  0056DA                     l11074:
  8759                           
  8760                           ; BSR set to: 1
  8761  0056DA  0101               	movlb	1	; () banked
  8762  0056DC  0101               	movlb	1	; () banked
  8763  0056DE  0101               	movlb	1	; () banked
  8764  0056E0  90D8               	bcf	status,0,c
  8765  0056E2  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8766  0056E4  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
  8767                           
  8768                           ; BSR set to: 1
  8769  0056E6  0101               	movlb	1	; () banked
  8770  0056E8  0101               	movlb	1	; () banked
  8771  0056EA  2F05               	decfsz	___lwdiv@counter& (0+255),f,b
  8772  0056EC  D7D3               	goto	l11066
  8773  0056EE                     l912:
  8774                           
  8775                           ; BSR set to: 1
  8776  0056EE  C106  F100         	movff	___lwdiv@quotient,?___lwdiv
  8777  0056F2  C107  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8778                           
  8779                           ; BSR set to: 1
  8780  0056F6  0012               	return	
  8781  0056F8                     __end_of___lwdiv:
  8782                           	opt stack 0
  8783                           tblptru	equ	0xFF8
  8784                           tblptrh	equ	0xFF7
  8785                           tblptrl	equ	0xFF6
  8786                           tablat	equ	0xFF5
  8787                           prodh	equ	0xFF4
  8788                           prodl	equ	0xFF3
  8789                           postinc0	equ	0xFEE
  8790                           wreg	equ	0xFE8
  8791                           indf2	equ	0xFDF
  8792                           postinc2	equ	0xFDE
  8793                           postdec2	equ	0xFDD
  8794                           fsr2h	equ	0xFDA
  8795                           fsr2l	equ	0xFD9
  8796                           status	equ	0xFD8
  8797                           
  8798 ;; *************** function _lcd_putc *****************
  8799 ;; Defined at:
  8800 ;;		line 135 in file "lcd.h"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  a               2    4[BANK1 ] PTR unsigned char 
  8803 ;;		 -> LCD_Buffer(32), 
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  i               2    6[BANK1 ] int 
  8806 ;; Return value:  Size  Location     Type
  8807 ;;		None               void
  8808 ;; Registers used:
  8809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8815 ;;      Params:         0       0       2       0       0       0       0       0       0
  8816 ;;      Locals:         0       0       2       0       0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8818 ;;      Totals:         0       0       4       0       0       0       0       0       0
  8819 ;;Total ram usage:        4 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:   12
  8822 ;; This function calls:
  8823 ;;		_lcd_write_char
  8824 ;; This function is called by:
  8825 ;;		_mainLoop
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text26
  8830  005CA8                     __ptext26:
  8831                           	opt stack 0
  8832  005CA8                     _lcd_putc:
  8833                           	opt stack 17
  8834                           
  8835                           ;lcd.h: 136: int i;
  8836                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
  8837                           
  8838                           ; BSR set to: 1
  8839                           ;incstack = 0
  8840                           ;incstack = 0
  8841  005CA8  0E00               	movlw	0
  8842  005CAA  0101               	movlb	1	; () banked
  8843  005CAC  0101               	movlb	1	; () banked
  8844  005CAE  6F07               	movwf	(lcd_putc@i+1)& (0+255),b
  8845  005CB0  0E00               	movlw	0
  8846  005CB2  0101               	movlb	1	; () banked
  8847  005CB4  6F06               	movwf	lcd_putc@i& (0+255),b
  8848  005CB6  D018               	goto	l10070
  8849  005CB8                     l10066:
  8850                           
  8851                           ; BSR set to: 1
  8852                           ;lcd.h: 138: lcd_write_char(a[i]);
  8853  005CB8  0101               	movlb	1	; () banked
  8854  005CBA  0101               	movlb	1	; () banked
  8855  005CBC  5106               	movf	lcd_putc@i& (0+255),w,b
  8856  005CBE  0101               	movlb	1	; () banked
  8857  005CC0  0101               	movlb	1	; () banked
  8858  005CC2  2504               	addwf	lcd_putc@a& (0+255),w,b
  8859  005CC4  6ED9               	movwf	fsr2l,c
  8860  005CC6  0101               	movlb	1	; () banked
  8861  005CC8  0101               	movlb	1	; () banked
  8862  005CCA  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
  8863  005CCC  0101               	movlb	1	; () banked
  8864  005CCE  0101               	movlb	1	; () banked
  8865  005CD0  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
  8866  005CD2  6EDA               	movwf	fsr2h,c
  8867  005CD4  50DF               	movf	indf2,w,c
  8868  005CD6  0101               	movlb	1	; () banked
  8869  005CD8  0101               	movlb	1	; () banked
  8870  005CDA  6F01               	movwf	?_lcd_write_char& (0+255),b
  8871  005CDC  EC3F  F02F         	call	_lcd_write_char	;wreg free
  8872  005CE0  0101               	movlb	1	; () banked
  8873  005CE2  0101               	movlb	1	; () banked
  8874  005CE4  4B06               	infsnz	lcd_putc@i& (0+255),f,b
  8875  005CE6  2B07               	incf	(lcd_putc@i+1)& (0+255),f,b
  8876  005CE8                     l10070:
  8877                           
  8878                           ; BSR set to: 1
  8879  005CE8  0101               	movlb	1	; () banked
  8880  005CEA  0101               	movlb	1	; () banked
  8881  005CEC  5106               	movf	lcd_putc@i& (0+255),w,b
  8882  005CEE  0101               	movlb	1	; () banked
  8883  005CF0  0101               	movlb	1	; () banked
  8884  005CF2  2504               	addwf	lcd_putc@a& (0+255),w,b
  8885  005CF4  6ED9               	movwf	fsr2l,c
  8886  005CF6  0101               	movlb	1	; () banked
  8887  005CF8  0101               	movlb	1	; () banked
  8888  005CFA  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
  8889  005CFC  0101               	movlb	1	; () banked
  8890  005CFE  0101               	movlb	1	; () banked
  8891  005D00  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
  8892  005D02  6EDA               	movwf	fsr2h,c
  8893  005D04  50DF               	movf	indf2,w,c
  8894  005D06  B4D8               	btfsc	status,2,c
  8895                           
  8896                           ; BSR set to: 1
  8897                           
  8898                           ; BSR set to: 1
  8899  005D08  0012               	return	
  8900  005D0A  D7D6               	goto	l10066
  8901  005D0C                     __end_of_lcd_putc:
  8902                           	opt stack 0
  8903                           tblptru	equ	0xFF8
  8904                           tblptrh	equ	0xFF7
  8905                           tblptrl	equ	0xFF6
  8906                           tablat	equ	0xFF5
  8907                           prodh	equ	0xFF4
  8908                           prodl	equ	0xFF3
  8909                           postinc0	equ	0xFEE
  8910                           wreg	equ	0xFE8
  8911                           indf2	equ	0xFDF
  8912                           postinc2	equ	0xFDE
  8913                           postdec2	equ	0xFDD
  8914                           fsr2h	equ	0xFDA
  8915                           fsr2l	equ	0xFD9
  8916                           status	equ	0xFD8
  8917                           
  8918 ;; *************** function _lcd_write_char *****************
  8919 ;; Defined at:
  8920 ;;		line 117 in file "lcd.h"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  a               1    1[BANK1 ] unsigned char 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  y               1    3[BANK1 ] unsigned char 
  8925 ;;  temp            1    2[BANK1 ] unsigned char 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;		None               void
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, status,0, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8935 ;;      Params:         0       0       1       0       0       0       0       0       0
  8936 ;;      Locals:         0       0       2       0       0       0       0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8938 ;;      Totals:         0       0       3       0       0       0       0       0       0
  8939 ;;Total ram usage:        3 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:   11
  8942 ;; This function calls:
  8943 ;;		_Lcd_Port
  8944 ;; This function is called by:
  8945 ;;		_lcd_putc
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           	psect	text27
  8950  005E7E                     __ptext27:
  8951                           	opt stack 0
  8952  005E7E                     _lcd_write_char:
  8953                           	opt stack 17
  8954                           
  8955                           ;lcd.h: 118: char temp,y;
  8956                           ;lcd.h: 119: temp = a&0x0F;
  8957                           
  8958                           ; BSR set to: 1
  8959                           ;incstack = 0
  8960                           ;incstack = 0
  8961  005E7E  0101               	movlb	1	; () banked
  8962  005E80  0101               	movlb	1	; () banked
  8963  005E82  5101               	movf	lcd_write_char@a& (0+255),w,b
  8964  005E84  0B0F               	andlw	15
  8965  005E86  0101               	movlb	1	; () banked
  8966  005E88  0101               	movlb	1	; () banked
  8967  005E8A  6F02               	movwf	lcd_write_char@temp& (0+255),b
  8968                           
  8969                           ;lcd.h: 120: y = a&0xF0;
  8970  005E8C  0101               	movlb	1	; () banked
  8971  005E8E  0101               	movlb	1	; () banked
  8972  005E90  5101               	movf	lcd_write_char@a& (0+255),w,b
  8973  005E92  0BF0               	andlw	240
  8974  005E94  0101               	movlb	1	; () banked
  8975  005E96  0101               	movlb	1	; () banked
  8976  005E98  6F03               	movwf	lcd_write_char@y& (0+255),b
  8977                           
  8978                           ; BSR set to: 1
  8979                           ;lcd.h: 121: RD2 = 1;
  8980  005E9A  8483               	bsf	3971,2,c	;volatile
  8981                           
  8982                           ; BSR set to: 1
  8983                           ;lcd.h: 122: Lcd_Port(y>>4);
  8984  005E9C  0101               	movlb	1	; () banked
  8985  005E9E  0101               	movlb	1	; () banked
  8986  005EA0  3903               	swapf	lcd_write_char@y& (0+255),w,b
  8987  005EA2  0B0F               	andlw	15
  8988  005EA4  0101               	movlb	1	; () banked
  8989  005EA6  0101               	movlb	1	; () banked
  8990  005EA8  6F00               	movwf	?_Lcd_Port& (0+255),b
  8991  005EAA  ECC7  F030         	call	_Lcd_Port	;wreg free
  8992                           
  8993                           ;lcd.h: 123: RD3 = 1;
  8994  005EAE  8683               	bsf	3971,3,c	;volatile
  8995                           
  8996                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
  8997  005EB0  0E1A               	movlw	26
  8998  005EB2                     u11117:
  8999  005EB2  2EE8               	decfsz	wreg,f,c
  9000  005EB4  D7FE               	goto	u11117
  9001  005EB6  D000               	nop2		;nop
  9002                           
  9003                           ;lcd.h: 125: RD3 = 0;
  9004  005EB8  9683               	bcf	3971,3,c	;volatile
  9005                           
  9006                           ;lcd.h: 126: Lcd_Port(temp);
  9007  005EBA  C102  F100         	movff	lcd_write_char@temp,?_Lcd_Port
  9008  005EBE  ECC7  F030         	call	_Lcd_Port	;wreg free
  9009                           
  9010                           ;lcd.h: 127: RD3 = 1;
  9011  005EC2  8683               	bsf	3971,3,c	;volatile
  9012                           
  9013                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
  9014  005EC4  0E1A               	movlw	26
  9015  005EC6                     u11127:
  9016  005EC6  2EE8               	decfsz	wreg,f,c
  9017  005EC8  D7FE               	goto	u11127
  9018  005ECA  D000               	nop2		;nop
  9019                           
  9020                           ;lcd.h: 129: RD3 = 0;
  9021  005ECC  9683               	bcf	3971,3,c	;volatile
  9022  005ECE  0012               	return	
  9023  005ED0                     __end_of_lcd_write_char:
  9024                           	opt stack 0
  9025                           tblptru	equ	0xFF8
  9026                           tblptrh	equ	0xFF7
  9027                           tblptrl	equ	0xFF6
  9028                           tablat	equ	0xFF5
  9029                           prodh	equ	0xFF4
  9030                           prodl	equ	0xFF3
  9031                           postinc0	equ	0xFEE
  9032                           wreg	equ	0xFE8
  9033                           indf2	equ	0xFDF
  9034                           postinc2	equ	0xFDE
  9035                           postdec2	equ	0xFDD
  9036                           fsr2h	equ	0xFDA
  9037                           fsr2l	equ	0xFD9
  9038                           status	equ	0xFD8
  9039                           
  9040 ;; *************** function _lcd_gotoxy *****************
  9041 ;; Defined at:
  9042 ;;		line 72 in file "lcd.h"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  a               1    3[BANK1 ] unsigned char 
  9045 ;;  b               1    4[BANK1 ] unsigned char 
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  temp            1    7[BANK1 ] unsigned char 
  9048 ;;  y               1    6[BANK1 ] unsigned char 
  9049 ;;  z               1    5[BANK1 ] unsigned char 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;		None               void
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9059 ;;      Params:         0       0       2       0       0       0       0       0       0
  9060 ;;      Locals:         0       0       3       0       0       0       0       0       0
  9061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9062 ;;      Totals:         0       0       5       0       0       0       0       0       0
  9063 ;;Total ram usage:        5 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:   12
  9066 ;; This function calls:
  9067 ;;		_Lcd_Cmd
  9068 ;; This function is called by:
  9069 ;;		_mainLoop
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text28
  9074  0058B4                     __ptext28:
  9075                           	opt stack 0
  9076  0058B4                     _lcd_gotoxy:
  9077                           	opt stack 17
  9078                           
  9079                           ;lcd.h: 73: char temp,z,y;
  9080                           ;lcd.h: 74: if(a == 1)
  9081                           
  9082                           ;incstack = 0
  9083                           ;incstack = 0
  9084  0058B4  0101               	movlb	1	; () banked
  9085  0058B6  0101               	movlb	1	; () banked
  9086  0058B8  0503               	decf	lcd_gotoxy@a& (0+255),w,b
  9087  0058BA  A4D8               	btfss	status,2,c
  9088  0058BC  D01E               	goto	l10008
  9089                           
  9090                           ; BSR set to: 1
  9091                           ;lcd.h: 75: {
  9092                           ;lcd.h: 76: temp = 0x80 + b - 1;
  9093  0058BE  0101               	movlb	1	; () banked
  9094  0058C0  0101               	movlb	1	; () banked
  9095  0058C2  5104               	movf	lcd_gotoxy@b& (0+255),w,b
  9096  0058C4  0F7F               	addlw	127
  9097  0058C6  0101               	movlb	1	; () banked
  9098  0058C8  0101               	movlb	1	; () banked
  9099  0058CA  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
  9100                           
  9101                           ;lcd.h: 77: z = temp>>4;
  9102  0058CC  0101               	movlb	1	; () banked
  9103  0058CE  0101               	movlb	1	; () banked
  9104  0058D0  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
  9105  0058D2  0B0F               	andlw	15
  9106  0058D4  0101               	movlb	1	; () banked
  9107  0058D6  0101               	movlb	1	; () banked
  9108  0058D8  6F05               	movwf	lcd_gotoxy@z& (0+255),b
  9109                           
  9110                           ;lcd.h: 78: y = temp & 0x0F;
  9111  0058DA  0101               	movlb	1	; () banked
  9112  0058DC  0101               	movlb	1	; () banked
  9113  0058DE  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
  9114  0058E0  0B0F               	andlw	15
  9115  0058E2  0101               	movlb	1	; () banked
  9116  0058E4  0101               	movlb	1	; () banked
  9117  0058E6  6F06               	movwf	lcd_gotoxy@y& (0+255),b
  9118                           
  9119                           ; BSR set to: 1
  9120                           ;lcd.h: 79: Lcd_Cmd(z);
  9121  0058E8  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
  9122  0058EC  EC9F  F031         	call	_Lcd_Cmd	;wreg free
  9123                           
  9124                           ;lcd.h: 80: Lcd_Cmd(y);
  9125  0058F0  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
  9126  0058F4  EC9F  F031         	call	_Lcd_Cmd	;wreg free
  9127                           
  9128                           ;lcd.h: 81: }
  9129  0058F8  D023               	goto	l123
  9130  0058FA                     l10008:
  9131                           
  9132                           ;lcd.h: 82: else if(a == 2)
  9133  0058FA  0101               	movlb	1	; () banked
  9134  0058FC  0101               	movlb	1	; () banked
  9135  0058FE  5103               	movf	lcd_gotoxy@a& (0+255),w,b
  9136  005900  0A02               	xorlw	2
  9137  005902  A4D8               	btfss	status,2,c
  9138  005904  D01D               	goto	l123
  9139                           
  9140                           ; BSR set to: 1
  9141                           ;lcd.h: 83: {
  9142                           ;lcd.h: 84: temp = 0xC0 + b - 1;
  9143  005906  0101               	movlb	1	; () banked
  9144  005908  0101               	movlb	1	; () banked
  9145  00590A  5104               	movf	lcd_gotoxy@b& (0+255),w,b
  9146  00590C  0FBF               	addlw	191
  9147  00590E  0101               	movlb	1	; () banked
  9148  005910  0101               	movlb	1	; () banked
  9149  005912  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
  9150                           
  9151                           ;lcd.h: 85: z = temp>>4;
  9152  005914  0101               	movlb	1	; () banked
  9153  005916  0101               	movlb	1	; () banked
  9154  005918  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
  9155  00591A  0B0F               	andlw	15
  9156  00591C  0101               	movlb	1	; () banked
  9157  00591E  0101               	movlb	1	; () banked
  9158  005920  6F05               	movwf	lcd_gotoxy@z& (0+255),b
  9159                           
  9160                           ;lcd.h: 86: y = temp & 0x0F;
  9161  005922  0101               	movlb	1	; () banked
  9162  005924  0101               	movlb	1	; () banked
  9163  005926  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
  9164  005928  0B0F               	andlw	15
  9165  00592A  0101               	movlb	1	; () banked
  9166  00592C  0101               	movlb	1	; () banked
  9167  00592E  6F06               	movwf	lcd_gotoxy@y& (0+255),b
  9168                           
  9169                           ; BSR set to: 1
  9170                           ;lcd.h: 87: Lcd_Cmd(z);
  9171  005930  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
  9172  005934  EC9F  F031         	call	_Lcd_Cmd	;wreg free
  9173                           
  9174                           ;lcd.h: 88: Lcd_Cmd(y);
  9175  005938  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
  9176  00593C  EC9F  F031         	call	_Lcd_Cmd	;wreg free
  9177  005940                     l123:
  9178  005940  0012               	return	
  9179  005942                     __end_of_lcd_gotoxy:
  9180                           	opt stack 0
  9181                           tblptru	equ	0xFF8
  9182                           tblptrh	equ	0xFF7
  9183                           tblptrl	equ	0xFF6
  9184                           tablat	equ	0xFF5
  9185                           prodh	equ	0xFF4
  9186                           prodl	equ	0xFF3
  9187                           postinc0	equ	0xFEE
  9188                           wreg	equ	0xFE8
  9189                           indf2	equ	0xFDF
  9190                           postinc2	equ	0xFDE
  9191                           postdec2	equ	0xFDD
  9192                           fsr2h	equ	0xFDA
  9193                           fsr2l	equ	0xFD9
  9194                           status	equ	0xFD8
  9195                           
  9196 ;; *************** function _inicioInterrupcoes *****************
  9197 ;; Defined at:
  9198 ;;		line 166 in file "main.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;		None
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;		None
  9203 ;; Return value:  Size  Location     Type
  9204 ;;		None               void
  9205 ;; Registers used:
  9206 ;;		None
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/0
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9212 ;;      Params:         0       0       0       0       0       0       0       0       0
  9213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9215 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9216 ;;Total ram usage:        0 bytes
  9217 ;; Hardware stack levels used:    1
  9218 ;; Hardware stack levels required when called:   10
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_main
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           	psect	text29
  9227  0063B8                     __ptext29:
  9228                           	opt stack 0
  9229  0063B8                     _inicioInterrupcoes:
  9230                           	opt stack 20
  9231                           
  9232                           ;main.c: 167: IPEN = 1;
  9233                           
  9234                           ;incstack = 0
  9235                           ;incstack = 0
  9236  0063B8  8ED0               	bsf	4048,7,c	;volatile
  9237                           
  9238                           ;main.c: 168: ADIE = 1;
  9239  0063BA  8C9D               	bsf	3997,6,c	;volatile
  9240                           
  9241                           ;main.c: 169: RCIE = 1;
  9242  0063BC  8A9D               	bsf	3997,5,c	;volatile
  9243                           
  9244                           ;main.c: 170: TMR0IE = 1;
  9245  0063BE  8AF2               	bsf	intcon,5,c	;volatile
  9246                           
  9247                           ;main.c: 171: GIEH = 1;
  9248  0063C0  8EF2               	bsf	intcon,7,c	;volatile
  9249                           
  9250                           ;main.c: 172: GIEL = 1;
  9251  0063C2  8CF2               	bsf	intcon,6,c	;volatile
  9252                           
  9253                           ;main.c: 173: ADIP = 0;
  9254  0063C4  9C9F               	bcf	3999,6,c	;volatile
  9255                           
  9256                           ;main.c: 174: TMR0IP = 0;
  9257  0063C6  94F1               	bcf	intcon2,2,c	;volatile
  9258                           
  9259                           ;main.c: 175: RCIP = 1;
  9260  0063C8  8A9F               	bsf	3999,5,c	;volatile
  9261  0063CA  0012               	return	
  9262  0063CC                     __end_of_inicioInterrupcoes:
  9263                           	opt stack 0
  9264                           tblptru	equ	0xFF8
  9265                           tblptrh	equ	0xFF7
  9266                           tblptrl	equ	0xFF6
  9267                           tablat	equ	0xFF5
  9268                           prodh	equ	0xFF4
  9269                           prodl	equ	0xFF3
  9270                           intcon	equ	0xFF2
  9271                           intcon2	equ	0xFF1
  9272                           postinc0	equ	0xFEE
  9273                           wreg	equ	0xFE8
  9274                           indf2	equ	0xFDF
  9275                           postinc2	equ	0xFDE
  9276                           postdec2	equ	0xFDD
  9277                           fsr2h	equ	0xFDA
  9278                           fsr2l	equ	0xFD9
  9279                           status	equ	0xFD8
  9280                           
  9281 ;; *************** function _USART_Init *****************
  9282 ;; Defined at:
  9283 ;;		line 152 in file "main.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;  baud_rate       4   70[BANK1 ] long 
  9288 ;;  temp            3   74[BANK1 ] float 
  9289 ;; Return value:  Size  Location     Type
  9290 ;;		None               void
  9291 ;; Registers used:
  9292 ;;		wreg, status,2, status,0, cstack
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0
  9299 ;;      Locals:         0       0       7       0       0       0       0       0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9301 ;;      Totals:         0       0       7       0       0       0       0       0       0
  9302 ;;Total ram usage:        7 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:   12
  9305 ;; This function calls:
  9306 ;;		___altoft
  9307 ;;		___ftadd
  9308 ;;		___ftdiv
  9309 ;;		___fttol
  9310 ;; This function is called by:
  9311 ;;		_main
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           	psect	text30
  9316  0055A2                     __ptext30:
  9317                           	opt stack 0
  9318  0055A2                     _USART_Init:
  9319                           	opt stack 18
  9320                           
  9321                           ;main.c: 153: long int baud_rate = 115200;
  9322                           
  9323                           ;incstack = 0
  9324                           ;incstack = 0
  9325  0055A2  0E00               	movlw	0
  9326  0055A4  0101               	movlb	1	; () banked
  9327  0055A6  0101               	movlb	1	; () banked
  9328  0055A8  6F46               	movwf	USART_Init@baud_rate& (0+255),b
  9329  0055AA  0EC2               	movlw	194
  9330  0055AC  0101               	movlb	1	; () banked
  9331  0055AE  6F47               	movwf	(USART_Init@baud_rate+1)& (0+255),b
  9332  0055B0  0E01               	movlw	1
  9333  0055B2  0101               	movlb	1	; () banked
  9334  0055B4  6F48               	movwf	(USART_Init@baud_rate+2)& (0+255),b
  9335  0055B6  0E00               	movlw	0
  9336  0055B8  0101               	movlb	1	; () banked
  9337  0055BA  6F49               	movwf	(USART_Init@baud_rate+3)& (0+255),b
  9338                           
  9339                           ; BSR set to: 1
  9340                           ;main.c: 154: float temp;
  9341                           ;main.c: 155: TRISC6=0;
  9342  0055BC  9C94               	bcf	3988,6,c	;volatile
  9343                           
  9344                           ; BSR set to: 1
  9345                           ;main.c: 156: TRISC7=1;
  9346  0055BE  8E94               	bsf	3988,7,c	;volatile
  9347                           
  9348                           ; BSR set to: 1
  9349                           ;main.c: 159: temp= (( (float) (200000/64) / (float) baud_rate ) - 1); ;
  9350  0055C0  C146  F108         	movff	USART_Init@baud_rate,?___altoft
  9351  0055C4  C147  F109         	movff	USART_Init@baud_rate+1,?___altoft+1
  9352  0055C8  C148  F10A         	movff	USART_Init@baud_rate+2,?___altoft+2
  9353  0055CC  C149  F10B         	movff	USART_Init@baud_rate+3,?___altoft+3
  9354  0055D0  ECDE  F028         	call	___altoft	;wreg free
  9355  0055D4  C10A  F12C         	movff	?___altoft+2,?___ftdiv+5
  9356  0055D8  C109  F12B         	movff	?___altoft+1,?___ftdiv+4
  9357  0055DC  C108  F12A         	movff	?___altoft,?___ftdiv+3
  9358  0055E0  0E50               	movlw	80
  9359  0055E2  0101               	movlb	1	; () banked
  9360  0055E4  0101               	movlb	1	; () banked
  9361  0055E6  6F27               	movwf	?___ftdiv& (0+255),b
  9362  0055E8  0E43               	movlw	67
  9363  0055EA  0101               	movlb	1	; () banked
  9364  0055EC  0101               	movlb	1	; () banked
  9365  0055EE  6F28               	movwf	(?___ftdiv+1)& (0+255),b
  9366  0055F0  0E45               	movlw	69
  9367  0055F2  0101               	movlb	1	; () banked
  9368  0055F4  0101               	movlb	1	; () banked
  9369  0055F6  6F29               	movwf	(?___ftdiv+2)& (0+255),b
  9370  0055F8  ECA8  F01F         	call	___ftdiv	;wreg free
  9371  0055FC  C129  F13A         	movff	?___ftdiv+2,?___ftadd+2
  9372  005600  C128  F139         	movff	?___ftdiv+1,?___ftadd+1
  9373  005604  C127  F138         	movff	?___ftdiv,?___ftadd
  9374  005608  0E00               	movlw	0
  9375  00560A  0101               	movlb	1	; () banked
  9376  00560C  0101               	movlb	1	; () banked
  9377  00560E  6F3B               	movwf	(?___ftadd+3)& (0+255),b
  9378  005610  0E80               	movlw	128
  9379  005612  0101               	movlb	1	; () banked
  9380  005614  0101               	movlb	1	; () banked
  9381  005616  6F3C               	movwf	(?___ftadd+4)& (0+255),b
  9382  005618  0EBF               	movlw	191
  9383  00561A  0101               	movlb	1	; () banked
  9384  00561C  0101               	movlb	1	; () banked
  9385  00561E  6F3D               	movwf	(?___ftadd+5)& (0+255),b
  9386  005620  ECF3  F018         	call	___ftadd	;wreg free
  9387  005624  C13A  F14C         	movff	?___ftadd+2,USART_Init@temp+2
  9388  005628  C139  F14B         	movff	?___ftadd+1,USART_Init@temp+1
  9389  00562C  C138  F14A         	movff	?___ftadd,USART_Init@temp
  9390                           
  9391                           ;main.c: 160: SPBRG = (int) temp;
  9392  005630  C14A  F133         	movff	USART_Init@temp,?___fttol
  9393  005634  C14B  F134         	movff	USART_Init@temp+1,?___fttol+1
  9394  005638  C14C  F135         	movff	USART_Init@temp+2,?___fttol+2
  9395  00563C  EC70  F021         	call	___fttol	;wreg free
  9396  005640  0101               	movlb	1	; () banked
  9397  005642  0101               	movlb	1	; () banked
  9398  005644  5133               	movf	?___fttol& (0+255),w,b
  9399  005646  6EAF               	movwf	4015,c	;volatile
  9400                           
  9401                           ;main.c: 162: RCSTA = 0x90;
  9402  005648  0E90               	movlw	144
  9403  00564A  6EAB               	movwf	4011,c	;volatile
  9404                           
  9405                           ; BSR set to: 1
  9406  00564C  0012               	return	
  9407  00564E                     __end_of_USART_Init:
  9408                           	opt stack 0
  9409                           tblptru	equ	0xFF8
  9410                           tblptrh	equ	0xFF7
  9411                           tblptrl	equ	0xFF6
  9412                           tablat	equ	0xFF5
  9413                           prodh	equ	0xFF4
  9414                           prodl	equ	0xFF3
  9415                           intcon	equ	0xFF2
  9416                           intcon2	equ	0xFF1
  9417                           postinc0	equ	0xFEE
  9418                           wreg	equ	0xFE8
  9419                           indf2	equ	0xFDF
  9420                           postinc2	equ	0xFDE
  9421                           postdec2	equ	0xFDD
  9422                           fsr2h	equ	0xFDA
  9423                           fsr2l	equ	0xFD9
  9424                           status	equ	0xFD8
  9425                           
  9426 ;; *************** function ___fttol *****************
  9427 ;; Defined at:
  9428 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  f1              3   51[BANK1 ] float 
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  lval            4   61[BANK1 ] unsigned long 
  9433 ;;  exp1            1   65[BANK1 ] unsigned char 
  9434 ;;  sign1           1   60[BANK1 ] unsigned char 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  4   51[BANK1 ] long 
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9444 ;;      Params:         0       0       4       0       0       0       0       0       0
  9445 ;;      Locals:         0       0       6       0       0       0       0       0       0
  9446 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9447 ;;      Totals:         0       0      15       0       0       0       0       0       0
  9448 ;;Total ram usage:       15 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:   10
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_USART_Init
  9455 ;;		_sprintf
  9456 ;; This function uses a non-reentrant model
  9457 ;;
  9458                           
  9459                           	psect	text31
  9460  0042E0                     __ptext31:
  9461                           	opt stack 0
  9462  0042E0                     ___fttol:
  9463                           	opt stack 18
  9464                           
  9465                           ; BSR set to: 1
  9466                           ;incstack = 0
  9467                           ;incstack = 0
  9468  0042E0  0E0F               	movlw	15
  9469  0042E2  0101               	movlb	1	; () banked
  9470  0042E4  6F37               	movwf	??___fttol& (0+255),b
  9471  0042E6  0101               	movlb	1	; () banked
  9472  0042E8  C133  F138         	movff	___fttol@f1,??___fttol+1
  9473  0042EC  0101               	movlb	1	; () banked
  9474  0042EE  C134  F139         	movff	___fttol@f1+1,??___fttol+2
  9475  0042F2  0101               	movlb	1	; () banked
  9476  0042F4  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
  9477  0042F8  0101               	movlb	1	; () banked
  9478  0042FA  2937               	incf	??___fttol& (0+255),w,b
  9479  0042FC  0101               	movlb	1	; () banked
  9480  0042FE  6F3B               	movwf	(??___fttol+4)& (0+255),b
  9481  004300  D005               	goto	u6830
  9482  004302                     u6835:
  9483  004302  0101               	movlb	1	; () banked
  9484  004304  90D8               	bcf	status,0,c
  9485  004306  333A               	rrcf	(??___fttol+3)& (0+255),f,b
  9486  004308  3339               	rrcf	(??___fttol+2)& (0+255),f,b
  9487  00430A  3338               	rrcf	(??___fttol+1)& (0+255),f,b
  9488  00430C                     u6830:
  9489  00430C  0101               	movlb	1	; () banked
  9490  00430E  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
  9491  004310  D7F8               	goto	u6835
  9492  004312  0101               	movlb	1	; () banked
  9493  004314  5138               	movf	(??___fttol+1)& (0+255),w,b
  9494  004316  0101               	movlb	1	; () banked
  9495  004318  0101               	movlb	1	; () banked
  9496  00431A  6F41               	movwf	___fttol@exp1& (0+255),b
  9497  00431C  0101               	movlb	1	; () banked
  9498  00431E  6741               	tstfsz	___fttol@exp1& (0+255),b
  9499  004320  D001               	goto	l8462
  9500  004322  D061               	goto	u6880
  9501  004324                     l8462:
  9502                           
  9503                           ; BSR set to: 1
  9504  004324  0E17               	movlw	23
  9505  004326  0101               	movlb	1	; () banked
  9506  004328  6F37               	movwf	??___fttol& (0+255),b
  9507  00432A  0101               	movlb	1	; () banked
  9508  00432C  C133  F138         	movff	___fttol@f1,??___fttol+1
  9509  004330  0101               	movlb	1	; () banked
  9510  004332  C134  F139         	movff	___fttol@f1+1,??___fttol+2
  9511  004336  0101               	movlb	1	; () banked
  9512  004338  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
  9513  00433C  0101               	movlb	1	; () banked
  9514  00433E  2937               	incf	??___fttol& (0+255),w,b
  9515  004340  0101               	movlb	1	; () banked
  9516  004342  6F3B               	movwf	(??___fttol+4)& (0+255),b
  9517  004344  D005               	goto	u6850
  9518  004346                     u6855:
  9519  004346  0101               	movlb	1	; () banked
  9520  004348  90D8               	bcf	status,0,c
  9521  00434A  333A               	rrcf	(??___fttol+3)& (0+255),f,b
  9522  00434C  3339               	rrcf	(??___fttol+2)& (0+255),f,b
  9523  00434E  3338               	rrcf	(??___fttol+1)& (0+255),f,b
  9524  004350                     u6850:
  9525  004350  0101               	movlb	1	; () banked
  9526  004352  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
  9527  004354  D7F8               	goto	u6855
  9528  004356  0101               	movlb	1	; () banked
  9529  004358  5138               	movf	(??___fttol+1)& (0+255),w,b
  9530  00435A  0101               	movlb	1	; () banked
  9531  00435C  0101               	movlb	1	; () banked
  9532  00435E  6F3C               	movwf	___fttol@sign1& (0+255),b
  9533                           
  9534                           ; BSR set to: 1
  9535  004360  0101               	movlb	1	; () banked
  9536  004362  0101               	movlb	1	; () banked
  9537  004364  8F34               	bsf	(___fttol@f1+1)& (0+255),7,b
  9538                           
  9539                           ; BSR set to: 1
  9540  004366  0EFF               	movlw	255
  9541  004368  0101               	movlb	1	; () banked
  9542  00436A  0101               	movlb	1	; () banked
  9543  00436C  1733               	andwf	___fttol@f1& (0+255),f,b
  9544  00436E  0EFF               	movlw	255
  9545  004370  0101               	movlb	1	; () banked
  9546  004372  0101               	movlb	1	; () banked
  9547  004374  1734               	andwf	(___fttol@f1+1)& (0+255),f,b
  9548  004376  0E00               	movlw	0
  9549  004378  0101               	movlb	1	; () banked
  9550  00437A  0101               	movlb	1	; () banked
  9551  00437C  1735               	andwf	(___fttol@f1+2)& (0+255),f,b
  9552                           
  9553                           ; BSR set to: 1
  9554  00437E  0101               	movlb	1	; () banked
  9555  004380  0101               	movlb	1	; () banked
  9556  004382  5133               	movf	___fttol@f1& (0+255),w,b
  9557  004384  0101               	movlb	1	; () banked
  9558  004386  0101               	movlb	1	; () banked
  9559  004388  6F3D               	movwf	___fttol@lval& (0+255),b
  9560  00438A  0101               	movlb	1	; () banked
  9561  00438C  0101               	movlb	1	; () banked
  9562  00438E  5134               	movf	(___fttol@f1+1)& (0+255),w,b
  9563  004390  0101               	movlb	1	; () banked
  9564  004392  6F3E               	movwf	(___fttol@lval+1)& (0+255),b
  9565  004394  0101               	movlb	1	; () banked
  9566  004396  5135               	movf	(___fttol@f1+2)& (0+255),w,b
  9567  004398  0101               	movlb	1	; () banked
  9568  00439A  6F3F               	movwf	(___fttol@lval+2)& (0+255),b
  9569  00439C  0101               	movlb	1	; () banked
  9570  00439E  6B40               	clrf	(___fttol@lval+3)& (0+255),b
  9571                           
  9572                           ; BSR set to: 1
  9573  0043A0  0E8E               	movlw	142
  9574  0043A2  0101               	movlb	1	; () banked
  9575  0043A4  0101               	movlb	1	; () banked
  9576  0043A6  5F41               	subwf	___fttol@exp1& (0+255),f,b
  9577                           
  9578                           ; BSR set to: 1
  9579  0043A8  0101               	movlb	1	; () banked
  9580  0043AA  0101               	movlb	1	; () banked
  9581  0043AC  AF41               	btfss	___fttol@exp1& (0+255),7,b
  9582  0043AE  D016               	goto	l8484
  9583                           
  9584                           ; BSR set to: 1
  9585  0043B0  0101               	movlb	1	; () banked
  9586  0043B2  0101               	movlb	1	; () banked
  9587  0043B4  5141               	movf	___fttol@exp1& (0+255),w,b
  9588  0043B6  0A80               	xorlw	128
  9589  0043B8  0F8F               	addlw	143
  9590  0043BA  A0D8               	btfss	status,0,c
  9591  0043BC  D014               	goto	u6880
  9592  0043BE                     l8480:
  9593                           
  9594                           ; BSR set to: 1
  9595  0043BE  0101               	movlb	1	; () banked
  9596  0043C0  90D8               	bcf	status,0,c
  9597  0043C2  0101               	movlb	1	; () banked
  9598  0043C4  3340               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9599  0043C6  0101               	movlb	1	; () banked
  9600  0043C8  333F               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9601  0043CA  0101               	movlb	1	; () banked
  9602  0043CC  333E               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9603  0043CE  0101               	movlb	1	; () banked
  9604  0043D0  333D               	rrcf	___fttol@lval& (0+255),f,b
  9605                           
  9606                           ; BSR set to: 1
  9607  0043D2  0101               	movlb	1	; () banked
  9608  0043D4  0101               	movlb	1	; () banked
  9609  0043D6  3F41               	incfsz	___fttol@exp1& (0+255),f,b
  9610  0043D8  D7F2               	goto	l8480
  9611  0043DA  D024               	goto	l8494
  9612  0043DC                     l8484:
  9613                           
  9614                           ; BSR set to: 1
  9615  0043DC  0E17               	movlw	23
  9616  0043DE  0101               	movlb	1	; () banked
  9617  0043E0  0101               	movlb	1	; () banked
  9618  0043E2  6541               	cpfsgt	___fttol@exp1& (0+255),b
  9619  0043E4  D01B               	goto	l8492
  9620  0043E6                     u6880:
  9621                           
  9622                           ; BSR set to: 1
  9623  0043E6  0E00               	movlw	0
  9624  0043E8  0101               	movlb	1	; () banked
  9625  0043EA  0101               	movlb	1	; () banked
  9626  0043EC  6F33               	movwf	?___fttol& (0+255),b
  9627  0043EE  0E00               	movlw	0
  9628  0043F0  0101               	movlb	1	; () banked
  9629  0043F2  6F34               	movwf	(?___fttol+1)& (0+255),b
  9630  0043F4  0E00               	movlw	0
  9631  0043F6  0101               	movlb	1	; () banked
  9632  0043F8  6F35               	movwf	(?___fttol+2)& (0+255),b
  9633  0043FA  0E00               	movlw	0
  9634  0043FC  0101               	movlb	1	; () banked
  9635  0043FE  6F36               	movwf	(?___fttol+3)& (0+255),b
  9636  004400  D02E               	goto	l799
  9637  004402                     l8490:
  9638                           
  9639                           ; BSR set to: 1
  9640  004402  0101               	movlb	1	; () banked
  9641  004404  90D8               	bcf	status,0,c
  9642  004406  0101               	movlb	1	; () banked
  9643  004408  373D               	rlcf	___fttol@lval& (0+255),f,b
  9644  00440A  0101               	movlb	1	; () banked
  9645  00440C  373E               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9646  00440E  0101               	movlb	1	; () banked
  9647  004410  373F               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9648  004412  0101               	movlb	1	; () banked
  9649  004414  3740               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9650  004416  0101               	movlb	1	; () banked
  9651  004418  0101               	movlb	1	; () banked
  9652  00441A  0741               	decf	___fttol@exp1& (0+255),f,b
  9653  00441C                     l8492:
  9654                           
  9655                           ; BSR set to: 1
  9656  00441C  0101               	movlb	1	; () banked
  9657  00441E  0101               	movlb	1	; () banked
  9658  004420  6741               	tstfsz	___fttol@exp1& (0+255),b
  9659  004422  D7EF               	goto	l8490
  9660  004424                     l8494:
  9661                           
  9662                           ; BSR set to: 1
  9663  004424  0101               	movlb	1	; () banked
  9664  004426  0101               	movlb	1	; () banked
  9665  004428  513C               	movf	___fttol@sign1& (0+255),w,b
  9666  00442A  B4D8               	btfsc	status,2,c
  9667  00442C  D010               	goto	l8498
  9668                           
  9669                           ; BSR set to: 1
  9670  00442E  0101               	movlb	1	; () banked
  9671  004430  0101               	movlb	1	; () banked
  9672  004432  1F40               	comf	(___fttol@lval+3)& (0+255),f,b
  9673  004434  0101               	movlb	1	; () banked
  9674  004436  1F3F               	comf	(___fttol@lval+2)& (0+255),f,b
  9675  004438  0101               	movlb	1	; () banked
  9676  00443A  1F3E               	comf	(___fttol@lval+1)& (0+255),f,b
  9677  00443C  0101               	movlb	1	; () banked
  9678  00443E  6D3D               	negf	___fttol@lval& (0+255),b
  9679  004440  0E00               	movlw	0
  9680  004442  0101               	movlb	1	; () banked
  9681  004444  233E               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9682  004446  0101               	movlb	1	; () banked
  9683  004448  233F               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9684  00444A  0101               	movlb	1	; () banked
  9685  00444C  2340               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9686  00444E                     l8498:
  9687                           
  9688                           ; BSR set to: 1
  9689  00444E  C13D  F133         	movff	___fttol@lval,?___fttol
  9690  004452  C13E  F134         	movff	___fttol@lval+1,?___fttol+1
  9691  004456  C13F  F135         	movff	___fttol@lval+2,?___fttol+2
  9692  00445A  C140  F136         	movff	___fttol@lval+3,?___fttol+3
  9693  00445E                     l799:
  9694                           
  9695                           ; BSR set to: 1
  9696  00445E  0012               	return	
  9697  004460                     __end_of___fttol:
  9698                           	opt stack 0
  9699                           tblptru	equ	0xFF8
  9700                           tblptrh	equ	0xFF7
  9701                           tblptrl	equ	0xFF6
  9702                           tablat	equ	0xFF5
  9703                           prodh	equ	0xFF4
  9704                           prodl	equ	0xFF3
  9705                           intcon	equ	0xFF2
  9706                           intcon2	equ	0xFF1
  9707                           postinc0	equ	0xFEE
  9708                           wreg	equ	0xFE8
  9709                           indf2	equ	0xFDF
  9710                           postinc2	equ	0xFDE
  9711                           postdec2	equ	0xFDD
  9712                           fsr2h	equ	0xFDA
  9713                           fsr2l	equ	0xFD9
  9714                           status	equ	0xFD8
  9715                           
  9716 ;; *************** function ___ftdiv *****************
  9717 ;; Defined at:
  9718 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  f1              3   39[BANK1 ] float 
  9721 ;;  f2              3   42[BANK1 ] float 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;  f3              3   51[BANK1 ] float 
  9724 ;;  sign            1   55[BANK1 ] unsigned char 
  9725 ;;  exp             1   54[BANK1 ] unsigned char 
  9726 ;;  cntr            1   50[BANK1 ] unsigned char 
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  3   39[BANK1 ] float 
  9729 ;; Registers used:
  9730 ;;		wreg, status,2, status,0, cstack
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9736 ;;      Params:         0       0       6       0       0       0       0       0       0
  9737 ;;      Locals:         0       0       6       0       0       0       0       0       0
  9738 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9739 ;;      Totals:         0       0      17       0       0       0       0       0       0
  9740 ;;Total ram usage:       17 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:   11
  9743 ;; This function calls:
  9744 ;;		___ftpack
  9745 ;; This function is called by:
  9746 ;;		_USART_Init
  9747 ;;		_Read_LDR
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           	psect	text32
  9752  003F50                     __ptext32:
  9753                           	opt stack 0
  9754  003F50                     ___ftdiv:
  9755                           	opt stack 17
  9756                           
  9757                           ; BSR set to: 1
  9758                           ;incstack = 0
  9759                           ;incstack = 0
  9760  003F50  0E0F               	movlw	15
  9761  003F52  0101               	movlb	1	; () banked
  9762  003F54  6F2D               	movwf	??___ftdiv& (0+255),b
  9763  003F56  0101               	movlb	1	; () banked
  9764  003F58  C127  F12E         	movff	___ftdiv@f1,??___ftdiv+1
  9765  003F5C  0101               	movlb	1	; () banked
  9766  003F5E  C128  F12F         	movff	___ftdiv@f1+1,??___ftdiv+2
  9767  003F62  0101               	movlb	1	; () banked
  9768  003F64  C129  F130         	movff	___ftdiv@f1+2,??___ftdiv+3
  9769  003F68  0101               	movlb	1	; () banked
  9770  003F6A  292D               	incf	??___ftdiv& (0+255),w,b
  9771  003F6C  0101               	movlb	1	; () banked
  9772  003F6E  6F31               	movwf	(??___ftdiv+4)& (0+255),b
  9773  003F70  D005               	goto	u10010
  9774  003F72                     u10015:
  9775  003F72  0101               	movlb	1	; () banked
  9776  003F74  90D8               	bcf	status,0,c
  9777  003F76  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
  9778  003F78  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
  9779  003F7A  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
  9780  003F7C                     u10010:
  9781  003F7C  0101               	movlb	1	; () banked
  9782  003F7E  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
  9783  003F80  D7F8               	goto	u10015
  9784  003F82  0101               	movlb	1	; () banked
  9785  003F84  512E               	movf	(??___ftdiv+1)& (0+255),w,b
  9786  003F86  0101               	movlb	1	; () banked
  9787  003F88  0101               	movlb	1	; () banked
  9788  003F8A  6F36               	movwf	___ftdiv@exp& (0+255),b
  9789  003F8C  0101               	movlb	1	; () banked
  9790  003F8E  6736               	tstfsz	___ftdiv@exp& (0+255),b
  9791  003F90  D001               	goto	l10810
  9792  003F92  D021               	goto	u10040
  9793  003F94                     l10810:
  9794                           
  9795                           ; BSR set to: 1
  9796  003F94  0E0F               	movlw	15
  9797  003F96  0101               	movlb	1	; () banked
  9798  003F98  6F2D               	movwf	??___ftdiv& (0+255),b
  9799  003F9A  0101               	movlb	1	; () banked
  9800  003F9C  C12A  F12E         	movff	___ftdiv@f2,??___ftdiv+1
  9801  003FA0  0101               	movlb	1	; () banked
  9802  003FA2  C12B  F12F         	movff	___ftdiv@f2+1,??___ftdiv+2
  9803  003FA6  0101               	movlb	1	; () banked
  9804  003FA8  C12C  F130         	movff	___ftdiv@f2+2,??___ftdiv+3
  9805  003FAC  0101               	movlb	1	; () banked
  9806  003FAE  292D               	incf	??___ftdiv& (0+255),w,b
  9807  003FB0  0101               	movlb	1	; () banked
  9808  003FB2  6F31               	movwf	(??___ftdiv+4)& (0+255),b
  9809  003FB4  D005               	goto	u10030
  9810  003FB6                     u10035:
  9811  003FB6  0101               	movlb	1	; () banked
  9812  003FB8  90D8               	bcf	status,0,c
  9813  003FBA  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
  9814  003FBC  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
  9815  003FBE  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
  9816  003FC0                     u10030:
  9817  003FC0  0101               	movlb	1	; () banked
  9818  003FC2  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
  9819  003FC4  D7F8               	goto	u10035
  9820  003FC6  0101               	movlb	1	; () banked
  9821  003FC8  512E               	movf	(??___ftdiv+1)& (0+255),w,b
  9822  003FCA  0101               	movlb	1	; () banked
  9823  003FCC  0101               	movlb	1	; () banked
  9824  003FCE  6F37               	movwf	___ftdiv@sign& (0+255),b
  9825  003FD0  0101               	movlb	1	; () banked
  9826  003FD2  6737               	tstfsz	___ftdiv@sign& (0+255),b
  9827  003FD4  D00D               	goto	l10816
  9828  003FD6                     u10040:
  9829                           
  9830                           ; BSR set to: 1
  9831  003FD6  0E00               	movlw	0
  9832  003FD8  0101               	movlb	1	; () banked
  9833  003FDA  0101               	movlb	1	; () banked
  9834  003FDC  6F27               	movwf	?___ftdiv& (0+255),b
  9835  003FDE  0E00               	movlw	0
  9836  003FE0  0101               	movlb	1	; () banked
  9837  003FE2  0101               	movlb	1	; () banked
  9838  003FE4  6F28               	movwf	(?___ftdiv+1)& (0+255),b
  9839  003FE6  0E00               	movlw	0
  9840  003FE8  0101               	movlb	1	; () banked
  9841  003FEA  0101               	movlb	1	; () banked
  9842  003FEC  6F29               	movwf	(?___ftdiv+2)& (0+255),b
  9843  003FEE  D093               	goto	l747
  9844  003FF0                     l10816:
  9845                           
  9846                           ; BSR set to: 1
  9847  003FF0  0E00               	movlw	0
  9848  003FF2  0101               	movlb	1	; () banked
  9849  003FF4  0101               	movlb	1	; () banked
  9850  003FF6  6F33               	movwf	___ftdiv@f3& (0+255),b
  9851  003FF8  0E00               	movlw	0
  9852  003FFA  0101               	movlb	1	; () banked
  9853  003FFC  0101               	movlb	1	; () banked
  9854  003FFE  6F34               	movwf	(___ftdiv@f3+1)& (0+255),b
  9855  004000  0E00               	movlw	0
  9856  004002  0101               	movlb	1	; () banked
  9857  004004  0101               	movlb	1	; () banked
  9858  004006  6F35               	movwf	(___ftdiv@f3+2)& (0+255),b
  9859                           
  9860                           ; BSR set to: 1
  9861  004008  0101               	movlb	1	; () banked
  9862  00400A  0101               	movlb	1	; () banked
  9863  00400C  5137               	movf	___ftdiv@sign& (0+255),w,b
  9864  00400E  0F89               	addlw	137
  9865  004010  0101               	movlb	1	; () banked
  9866  004012  0101               	movlb	1	; () banked
  9867  004014  5F36               	subwf	___ftdiv@exp& (0+255),f,b
  9868                           
  9869                           ; BSR set to: 1
  9870  004016  C129  F137         	movff	___ftdiv@f1+2,___ftdiv@sign
  9871                           
  9872                           ; BSR set to: 1
  9873  00401A  0101               	movlb	1	; () banked
  9874  00401C  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9875  00401E  0101               	movlb	1	; () banked
  9876  004020  0101               	movlb	1	; () banked
  9877  004022  1B37               	xorwf	___ftdiv@sign& (0+255),f,b
  9878                           
  9879                           ; BSR set to: 1
  9880  004024  0E80               	movlw	128
  9881  004026  0101               	movlb	1	; () banked
  9882  004028  0101               	movlb	1	; () banked
  9883  00402A  1737               	andwf	___ftdiv@sign& (0+255),f,b
  9884                           
  9885                           ; BSR set to: 1
  9886  00402C  0101               	movlb	1	; () banked
  9887  00402E  0101               	movlb	1	; () banked
  9888  004030  8F28               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9889                           
  9890                           ; BSR set to: 1
  9891  004032  0EFF               	movlw	255
  9892  004034  0101               	movlb	1	; () banked
  9893  004036  0101               	movlb	1	; () banked
  9894  004038  1727               	andwf	___ftdiv@f1& (0+255),f,b
  9895  00403A  0EFF               	movlw	255
  9896  00403C  0101               	movlb	1	; () banked
  9897  00403E  0101               	movlb	1	; () banked
  9898  004040  1728               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9899  004042  0E00               	movlw	0
  9900  004044  0101               	movlb	1	; () banked
  9901  004046  0101               	movlb	1	; () banked
  9902  004048  1729               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9903                           
  9904                           ; BSR set to: 1
  9905  00404A  0101               	movlb	1	; () banked
  9906  00404C  0101               	movlb	1	; () banked
  9907  00404E  8F2B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9908                           
  9909                           ; BSR set to: 1
  9910  004050  0EFF               	movlw	255
  9911  004052  0101               	movlb	1	; () banked
  9912  004054  0101               	movlb	1	; () banked
  9913  004056  172A               	andwf	___ftdiv@f2& (0+255),f,b
  9914  004058  0EFF               	movlw	255
  9915  00405A  0101               	movlb	1	; () banked
  9916  00405C  0101               	movlb	1	; () banked
  9917  00405E  172B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9918  004060  0E00               	movlw	0
  9919  004062  0101               	movlb	1	; () banked
  9920  004064  0101               	movlb	1	; () banked
  9921  004066  172C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9922                           
  9923                           ; BSR set to: 1
  9924  004068  0101               	movlb	1	; () banked
  9925  00406A  6F2D               	movwf	??___ftdiv& (0+255),b
  9926  00406C  0E18               	movlw	24
  9927  00406E  0101               	movlb	1	; () banked
  9928  004070  0101               	movlb	1	; () banked
  9929  004072  6F32               	movwf	___ftdiv@cntr& (0+255),b
  9930  004074  0101               	movlb	1	; () banked
  9931  004076  512D               	movf	??___ftdiv& (0+255),w,b
  9932  004078                     l749:
  9933                           
  9934                           ; BSR set to: 1
  9935  004078  0101               	movlb	1	; () banked
  9936  00407A  90D8               	bcf	status,0,c
  9937  00407C  0101               	movlb	1	; () banked
  9938  00407E  3733               	rlcf	___ftdiv@f3& (0+255),f,b
  9939  004080  0101               	movlb	1	; () banked
  9940  004082  3734               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9941  004084  0101               	movlb	1	; () banked
  9942  004086  3735               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9943                           
  9944                           ; BSR set to: 1
  9945  004088  0101               	movlb	1	; () banked
  9946  00408A  0101               	movlb	1	; () banked
  9947  00408C  512A               	movf	___ftdiv@f2& (0+255),w,b
  9948  00408E  0101               	movlb	1	; () banked
  9949  004090  0101               	movlb	1	; () banked
  9950  004092  5D27               	subwf	___ftdiv@f1& (0+255),w,b
  9951  004094  0101               	movlb	1	; () banked
  9952  004096  0101               	movlb	1	; () banked
  9953  004098  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9954  00409A  0101               	movlb	1	; () banked
  9955  00409C  0101               	movlb	1	; () banked
  9956  00409E  5928               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9957  0040A0  0101               	movlb	1	; () banked
  9958  0040A2  0101               	movlb	1	; () banked
  9959  0040A4  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9960  0040A6  0101               	movlb	1	; () banked
  9961  0040A8  0101               	movlb	1	; () banked
  9962  0040AA  5929               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9963  0040AC  A0D8               	btfss	status,0,c
  9964  0040AE  D015               	goto	l750
  9965                           
  9966                           ; BSR set to: 1
  9967  0040B0  0101               	movlb	1	; () banked
  9968  0040B2  0101               	movlb	1	; () banked
  9969  0040B4  512A               	movf	___ftdiv@f2& (0+255),w,b
  9970  0040B6  0101               	movlb	1	; () banked
  9971  0040B8  0101               	movlb	1	; () banked
  9972  0040BA  5F27               	subwf	___ftdiv@f1& (0+255),f,b
  9973  0040BC  0101               	movlb	1	; () banked
  9974  0040BE  0101               	movlb	1	; () banked
  9975  0040C0  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9976  0040C2  0101               	movlb	1	; () banked
  9977  0040C4  0101               	movlb	1	; () banked
  9978  0040C6  5B28               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9979  0040C8  0101               	movlb	1	; () banked
  9980  0040CA  0101               	movlb	1	; () banked
  9981  0040CC  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9982  0040CE  0101               	movlb	1	; () banked
  9983  0040D0  0101               	movlb	1	; () banked
  9984  0040D2  5B29               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9985                           
  9986                           ; BSR set to: 1
  9987  0040D4  0101               	movlb	1	; () banked
  9988  0040D6  0101               	movlb	1	; () banked
  9989  0040D8  8133               	bsf	___ftdiv@f3& (0+255),0,b
  9990  0040DA                     l750:
  9991                           
  9992                           ; BSR set to: 1
  9993  0040DA  0101               	movlb	1	; () banked
  9994  0040DC  90D8               	bcf	status,0,c
  9995  0040DE  0101               	movlb	1	; () banked
  9996  0040E0  3727               	rlcf	___ftdiv@f1& (0+255),f,b
  9997  0040E2  0101               	movlb	1	; () banked
  9998  0040E4  3728               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9999  0040E6  0101               	movlb	1	; () banked
 10000  0040E8  3729               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 10001                           
 10002                           ; BSR set to: 1
 10003  0040EA  0101               	movlb	1	; () banked
 10004  0040EC  0101               	movlb	1	; () banked
 10005  0040EE  2F32               	decfsz	___ftdiv@cntr& (0+255),f,b
 10006  0040F0  D7C3               	goto	l749
 10007                           
 10008                           ; BSR set to: 1
 10009                           
 10010                           ; BSR set to: 1
 10011  0040F2  C133  F100         	movff	___ftdiv@f3,?___ftpack
 10012  0040F6  C134  F101         	movff	___ftdiv@f3+1,?___ftpack+1
 10013  0040FA  C135  F102         	movff	___ftdiv@f3+2,?___ftpack+2
 10014  0040FE  C136  F103         	movff	___ftdiv@exp,?___ftpack+3
 10015  004102  C137  F104         	movff	___ftdiv@sign,?___ftpack+4
 10016  004106  EC30  F022         	call	___ftpack	;wreg free
 10017  00410A  C102  F129         	movff	?___ftpack+2,?___ftdiv+2
 10018  00410E  C101  F128         	movff	?___ftpack+1,?___ftdiv+1
 10019  004112  C100  F127         	movff	?___ftpack,?___ftdiv
 10020  004116                     l747:
 10021  004116  0012               	return	
 10022  004118                     __end_of___ftdiv:
 10023                           	opt stack 0
 10024                           tblptru	equ	0xFF8
 10025                           tblptrh	equ	0xFF7
 10026                           tblptrl	equ	0xFF6
 10027                           tablat	equ	0xFF5
 10028                           prodh	equ	0xFF4
 10029                           prodl	equ	0xFF3
 10030                           intcon	equ	0xFF2
 10031                           intcon2	equ	0xFF1
 10032                           postinc0	equ	0xFEE
 10033                           wreg	equ	0xFE8
 10034                           indf2	equ	0xFDF
 10035                           postinc2	equ	0xFDE
 10036                           postdec2	equ	0xFDD
 10037                           fsr2h	equ	0xFDA
 10038                           fsr2l	equ	0xFD9
 10039                           status	equ	0xFD8
 10040                           
 10041 ;; *************** function ___ftadd *****************
 10042 ;; Defined at:
 10043 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  f1              3   56[BANK1 ] float 
 10046 ;;  f2              3   59[BANK1 ] float 
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;  exp1            1   69[BANK1 ] unsigned char 
 10049 ;;  exp2            1   68[BANK1 ] unsigned char 
 10050 ;;  sign            1   67[BANK1 ] unsigned char 
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  3   56[BANK1 ] float 
 10053 ;; Registers used:
 10054 ;;		wreg, status,2, status,0, cstack
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10060 ;;      Params:         0       0       6       0       0       0       0       0       0
 10061 ;;      Locals:         0       0       3       0       0       0       0       0       0
 10062 ;;      Temps:          0       0       5       0       0       0       0       0       0
 10063 ;;      Totals:         0       0      14       0       0       0       0       0       0
 10064 ;;Total ram usage:       14 bytes
 10065 ;; Hardware stack levels used:    1
 10066 ;; Hardware stack levels required when called:   11
 10067 ;; This function calls:
 10068 ;;		___ftpack
 10069 ;; This function is called by:
 10070 ;;		_USART_Init
 10071 ;;		___asftadd
 10072 ;;		___ftsub
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           	psect	text33
 10077  0031E6                     __ptext33:
 10078                           	opt stack 0
 10079  0031E6                     ___ftadd:
 10080                           	opt stack 15
 10081                           
 10082                           ;incstack = 0
 10083                           ;incstack = 0
 10084  0031E6  0E0F               	movlw	15
 10085  0031E8  0101               	movlb	1	; () banked
 10086  0031EA  6F3E               	movwf	??___ftadd& (0+255),b
 10087  0031EC  0101               	movlb	1	; () banked
 10088  0031EE  C138  F13F         	movff	___ftadd@f1,??___ftadd+1
 10089  0031F2  0101               	movlb	1	; () banked
 10090  0031F4  C139  F140         	movff	___ftadd@f1+1,??___ftadd+2
 10091  0031F8  0101               	movlb	1	; () banked
 10092  0031FA  C13A  F141         	movff	___ftadd@f1+2,??___ftadd+3
 10093  0031FE  0101               	movlb	1	; () banked
 10094  003200  293E               	incf	??___ftadd& (0+255),w,b
 10095  003202  0101               	movlb	1	; () banked
 10096  003204  6F42               	movwf	(??___ftadd+4)& (0+255),b
 10097  003206  D005               	goto	u9800
 10098  003208                     u9805:
 10099  003208  0101               	movlb	1	; () banked
 10100  00320A  90D8               	bcf	status,0,c
 10101  00320C  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
 10102  00320E  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
 10103  003210  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
 10104  003212                     u9800:
 10105  003212  0101               	movlb	1	; () banked
 10106  003214  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
 10107  003216  D7F8               	goto	u9805
 10108  003218  0101               	movlb	1	; () banked
 10109  00321A  513F               	movf	(??___ftadd+1)& (0+255),w,b
 10110  00321C  0101               	movlb	1	; () banked
 10111  00321E  0101               	movlb	1	; () banked
 10112  003220  6F45               	movwf	___ftadd@exp1& (0+255),b
 10113  003222  0E0F               	movlw	15
 10114  003224  0101               	movlb	1	; () banked
 10115  003226  6F3E               	movwf	??___ftadd& (0+255),b
 10116  003228  0101               	movlb	1	; () banked
 10117  00322A  C13B  F13F         	movff	___ftadd@f2,??___ftadd+1
 10118  00322E  0101               	movlb	1	; () banked
 10119  003230  C13C  F140         	movff	___ftadd@f2+1,??___ftadd+2
 10120  003234  0101               	movlb	1	; () banked
 10121  003236  C13D  F141         	movff	___ftadd@f2+2,??___ftadd+3
 10122  00323A  0101               	movlb	1	; () banked
 10123  00323C  293E               	incf	??___ftadd& (0+255),w,b
 10124  00323E  0101               	movlb	1	; () banked
 10125  003240  6F42               	movwf	(??___ftadd+4)& (0+255),b
 10126  003242  D005               	goto	u9810
 10127  003244                     u9815:
 10128  003244  0101               	movlb	1	; () banked
 10129  003246  90D8               	bcf	status,0,c
 10130  003248  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
 10131  00324A  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
 10132  00324C  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
 10133  00324E                     u9810:
 10134  00324E  0101               	movlb	1	; () banked
 10135  003250  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
 10136  003252  D7F8               	goto	u9815
 10137  003254  0101               	movlb	1	; () banked
 10138  003256  513F               	movf	(??___ftadd+1)& (0+255),w,b
 10139  003258  0101               	movlb	1	; () banked
 10140  00325A  0101               	movlb	1	; () banked
 10141  00325C  6F44               	movwf	___ftadd@exp2& (0+255),b
 10142                           
 10143                           ; BSR set to: 1
 10144  00325E  0101               	movlb	1	; () banked
 10145  003260  0101               	movlb	1	; () banked
 10146  003262  5145               	movf	___ftadd@exp1& (0+255),w,b
 10147  003264  B4D8               	btfsc	status,2,c
 10148  003266  D015               	goto	l715
 10149                           
 10150                           ; BSR set to: 1
 10151  003268  0101               	movlb	1	; () banked
 10152  00326A  0101               	movlb	1	; () banked
 10153  00326C  5144               	movf	___ftadd@exp2& (0+255),w,b
 10154  00326E  0101               	movlb	1	; () banked
 10155  003270  0101               	movlb	1	; () banked
 10156  003272  6145               	cpfslt	___ftadd@exp1& (0+255),b
 10157  003274  D015               	goto	l10742
 10158                           
 10159                           ; BSR set to: 1
 10160  003276  0101               	movlb	1	; () banked
 10161  003278  0101               	movlb	1	; () banked
 10162  00327A  5145               	movf	___ftadd@exp1& (0+255),w,b
 10163  00327C  0800               	sublw	0
 10164  00327E  0101               	movlb	1	; () banked
 10165  003280  0101               	movlb	1	; () banked
 10166  003282  2544               	addwf	___ftadd@exp2& (0+255),w,b
 10167  003284  0101               	movlb	1	; () banked
 10168  003286  6F3E               	movwf	??___ftadd& (0+255),b
 10169  003288  0E19               	movlw	25
 10170  00328A  0101               	movlb	1	; () banked
 10171  00328C  5D3E               	subwf	??___ftadd& (0+255),w,b
 10172  00328E  A0D8               	btfss	status,0,c
 10173  003290  D007               	goto	l10742
 10174  003292                     l715:
 10175                           
 10176                           ; BSR set to: 1
 10177  003292  C13B  F138         	movff	___ftadd@f2,?___ftadd
 10178  003296  C13C  F139         	movff	___ftadd@f2+1,?___ftadd+1
 10179  00329A  C13D  F13A         	movff	___ftadd@f2+2,?___ftadd+2
 10180  00329E  D148               	goto	l716
 10181  0032A0                     l10742:
 10182                           
 10183                           ; BSR set to: 1
 10184  0032A0  0101               	movlb	1	; () banked
 10185  0032A2  0101               	movlb	1	; () banked
 10186  0032A4  5144               	movf	___ftadd@exp2& (0+255),w,b
 10187  0032A6  B4D8               	btfsc	status,2,c
 10188  0032A8  D015               	goto	l719
 10189                           
 10190                           ; BSR set to: 1
 10191  0032AA  0101               	movlb	1	; () banked
 10192  0032AC  0101               	movlb	1	; () banked
 10193  0032AE  5145               	movf	___ftadd@exp1& (0+255),w,b
 10194  0032B0  0101               	movlb	1	; () banked
 10195  0032B2  0101               	movlb	1	; () banked
 10196  0032B4  6144               	cpfslt	___ftadd@exp2& (0+255),b
 10197  0032B6  D015               	goto	l10748
 10198                           
 10199                           ; BSR set to: 1
 10200  0032B8  0101               	movlb	1	; () banked
 10201  0032BA  0101               	movlb	1	; () banked
 10202  0032BC  5144               	movf	___ftadd@exp2& (0+255),w,b
 10203  0032BE  0800               	sublw	0
 10204  0032C0  0101               	movlb	1	; () banked
 10205  0032C2  0101               	movlb	1	; () banked
 10206  0032C4  2545               	addwf	___ftadd@exp1& (0+255),w,b
 10207  0032C6  0101               	movlb	1	; () banked
 10208  0032C8  6F3E               	movwf	??___ftadd& (0+255),b
 10209  0032CA  0E19               	movlw	25
 10210  0032CC  0101               	movlb	1	; () banked
 10211  0032CE  5D3E               	subwf	??___ftadd& (0+255),w,b
 10212  0032D0  A0D8               	btfss	status,0,c
 10213  0032D2  D007               	goto	l10748
 10214  0032D4                     l719:
 10215                           
 10216                           ; BSR set to: 1
 10217  0032D4  C138  F138         	movff	___ftadd@f1,?___ftadd
 10218  0032D8  C139  F139         	movff	___ftadd@f1+1,?___ftadd+1
 10219  0032DC  C13A  F13A         	movff	___ftadd@f1+2,?___ftadd+2
 10220  0032E0  D127               	goto	l716
 10221  0032E2                     l10748:
 10222                           
 10223                           ; BSR set to: 1
 10224  0032E2  0101               	movlb	1	; () banked
 10225  0032E4  6F3E               	movwf	??___ftadd& (0+255),b
 10226  0032E6  0E06               	movlw	6
 10227  0032E8  0101               	movlb	1	; () banked
 10228  0032EA  0101               	movlb	1	; () banked
 10229  0032EC  6F43               	movwf	___ftadd@sign& (0+255),b
 10230  0032EE  0101               	movlb	1	; () banked
 10231  0032F0  513E               	movf	??___ftadd& (0+255),w,b
 10232                           
 10233                           ; BSR set to: 1
 10234  0032F2  0101               	movlb	1	; () banked
 10235  0032F4  0101               	movlb	1	; () banked
 10236  0032F6  AF3A               	btfss	(___ftadd@f1+2)& (0+255),7,b
 10237  0032F8  D003               	goto	l10754
 10238                           
 10239                           ; BSR set to: 1
 10240  0032FA  0101               	movlb	1	; () banked
 10241  0032FC  0101               	movlb	1	; () banked
 10242  0032FE  8F43               	bsf	___ftadd@sign& (0+255),7,b
 10243  003300                     l10754:
 10244                           
 10245                           ; BSR set to: 1
 10246  003300  0101               	movlb	1	; () banked
 10247  003302  0101               	movlb	1	; () banked
 10248  003304  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10249  003306  D003               	goto	l721
 10250                           
 10251                           ; BSR set to: 1
 10252  003308  0101               	movlb	1	; () banked
 10253  00330A  0101               	movlb	1	; () banked
 10254  00330C  8D43               	bsf	___ftadd@sign& (0+255),6,b
 10255  00330E                     l721:
 10256                           
 10257                           ; BSR set to: 1
 10258  00330E  0101               	movlb	1	; () banked
 10259  003310  0101               	movlb	1	; () banked
 10260  003312  8F39               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10261                           
 10262                           ; BSR set to: 1
 10263  003314  0EFF               	movlw	255
 10264  003316  0101               	movlb	1	; () banked
 10265  003318  0101               	movlb	1	; () banked
 10266  00331A  1738               	andwf	___ftadd@f1& (0+255),f,b
 10267  00331C  0EFF               	movlw	255
 10268  00331E  0101               	movlb	1	; () banked
 10269  003320  0101               	movlb	1	; () banked
 10270  003322  1739               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10271  003324  0E00               	movlw	0
 10272  003326  0101               	movlb	1	; () banked
 10273  003328  0101               	movlb	1	; () banked
 10274  00332A  173A               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10275  00332C  0101               	movlb	1	; () banked
 10276  00332E  0101               	movlb	1	; () banked
 10277  003330  8F3C               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10278                           
 10279                           ; BSR set to: 1
 10280  003332  0EFF               	movlw	255
 10281  003334  0101               	movlb	1	; () banked
 10282  003336  0101               	movlb	1	; () banked
 10283  003338  173B               	andwf	___ftadd@f2& (0+255),f,b
 10284  00333A  0EFF               	movlw	255
 10285  00333C  0101               	movlb	1	; () banked
 10286  00333E  0101               	movlb	1	; () banked
 10287  003340  173C               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10288  003342  0E00               	movlw	0
 10289  003344  0101               	movlb	1	; () banked
 10290  003346  0101               	movlb	1	; () banked
 10291  003348  173D               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10292                           
 10293                           ; BSR set to: 1
 10294  00334A  0101               	movlb	1	; () banked
 10295  00334C  0101               	movlb	1	; () banked
 10296  00334E  5144               	movf	___ftadd@exp2& (0+255),w,b
 10297  003350  0101               	movlb	1	; () banked
 10298  003352  0101               	movlb	1	; () banked
 10299  003354  6145               	cpfslt	___ftadd@exp1& (0+255),b
 10300  003356  D02F               	goto	l10774
 10301  003358                     l10764:
 10302                           
 10303                           ; BSR set to: 1
 10304  003358  0101               	movlb	1	; () banked
 10305  00335A  90D8               	bcf	status,0,c
 10306  00335C  0101               	movlb	1	; () banked
 10307  00335E  373B               	rlcf	___ftadd@f2& (0+255),f,b
 10308  003360  0101               	movlb	1	; () banked
 10309  003362  373C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10310  003364  0101               	movlb	1	; () banked
 10311  003366  373D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10312  003368  0101               	movlb	1	; () banked
 10313  00336A  0101               	movlb	1	; () banked
 10314  00336C  0744               	decf	___ftadd@exp2& (0+255),f,b
 10315                           
 10316                           ; BSR set to: 1
 10317  00336E  0101               	movlb	1	; () banked
 10318  003370  0101               	movlb	1	; () banked
 10319  003372  5144               	movf	___ftadd@exp2& (0+255),w,b
 10320  003374  0101               	movlb	1	; () banked
 10321  003376  0101               	movlb	1	; () banked
 10322  003378  1945               	xorwf	___ftadd@exp1& (0+255),w,b
 10323  00337A  B4D8               	btfsc	status,2,c
 10324  00337C  D014               	goto	l10772
 10325                           
 10326                           ; BSR set to: 1
 10327  00337E  0101               	movlb	1	; () banked
 10328  003380  0101               	movlb	1	; () banked
 10329  003382  0743               	decf	___ftadd@sign& (0+255),f,b
 10330  003384  0101               	movlb	1	; () banked
 10331  003386  5143               	movf	___ftadd@sign& (0+255),w,b
 10332  003388  0B07               	andlw	7
 10333  00338A  B4D8               	btfsc	status,2,c
 10334  00338C  D00C               	goto	l10772
 10335  00338E  D7E4               	goto	l10764
 10336  003390                     l10770:
 10337                           
 10338                           ; BSR set to: 1
 10339  003390  0101               	movlb	1	; () banked
 10340  003392  90D8               	bcf	status,0,c
 10341  003394  0101               	movlb	1	; () banked
 10342  003396  333A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10343  003398  0101               	movlb	1	; () banked
 10344  00339A  3339               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10345  00339C  0101               	movlb	1	; () banked
 10346  00339E  3338               	rrcf	___ftadd@f1& (0+255),f,b
 10347  0033A0  0101               	movlb	1	; () banked
 10348  0033A2  0101               	movlb	1	; () banked
 10349  0033A4  2B45               	incf	___ftadd@exp1& (0+255),f,b
 10350  0033A6                     l10772:
 10351                           
 10352                           ; BSR set to: 1
 10353  0033A6  0101               	movlb	1	; () banked
 10354  0033A8  0101               	movlb	1	; () banked
 10355  0033AA  5144               	movf	___ftadd@exp2& (0+255),w,b
 10356  0033AC  0101               	movlb	1	; () banked
 10357  0033AE  0101               	movlb	1	; () banked
 10358  0033B0  6345               	cpfseq	___ftadd@exp1& (0+255),b
 10359  0033B2  D7EE               	goto	l10770
 10360  0033B4  D035               	goto	l730
 10361  0033B6                     l10774:
 10362                           
 10363                           ; BSR set to: 1
 10364  0033B6  0101               	movlb	1	; () banked
 10365  0033B8  0101               	movlb	1	; () banked
 10366  0033BA  5145               	movf	___ftadd@exp1& (0+255),w,b
 10367  0033BC  0101               	movlb	1	; () banked
 10368  0033BE  0101               	movlb	1	; () banked
 10369  0033C0  6144               	cpfslt	___ftadd@exp2& (0+255),b
 10370  0033C2  D02E               	goto	l730
 10371  0033C4                     l10776:
 10372                           
 10373                           ; BSR set to: 1
 10374  0033C4  0101               	movlb	1	; () banked
 10375  0033C6  90D8               	bcf	status,0,c
 10376  0033C8  0101               	movlb	1	; () banked
 10377  0033CA  3738               	rlcf	___ftadd@f1& (0+255),f,b
 10378  0033CC  0101               	movlb	1	; () banked
 10379  0033CE  3739               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10380  0033D0  0101               	movlb	1	; () banked
 10381  0033D2  373A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10382  0033D4  0101               	movlb	1	; () banked
 10383  0033D6  0101               	movlb	1	; () banked
 10384  0033D8  0745               	decf	___ftadd@exp1& (0+255),f,b
 10385                           
 10386                           ; BSR set to: 1
 10387  0033DA  0101               	movlb	1	; () banked
 10388  0033DC  0101               	movlb	1	; () banked
 10389  0033DE  5144               	movf	___ftadd@exp2& (0+255),w,b
 10390  0033E0  0101               	movlb	1	; () banked
 10391  0033E2  0101               	movlb	1	; () banked
 10392  0033E4  1945               	xorwf	___ftadd@exp1& (0+255),w,b
 10393  0033E6  B4D8               	btfsc	status,2,c
 10394  0033E8  D014               	goto	l10784
 10395                           
 10396                           ; BSR set to: 1
 10397  0033EA  0101               	movlb	1	; () banked
 10398  0033EC  0101               	movlb	1	; () banked
 10399  0033EE  0743               	decf	___ftadd@sign& (0+255),f,b
 10400  0033F0  0101               	movlb	1	; () banked
 10401  0033F2  5143               	movf	___ftadd@sign& (0+255),w,b
 10402  0033F4  0B07               	andlw	7
 10403  0033F6  B4D8               	btfsc	status,2,c
 10404  0033F8  D00C               	goto	l10784
 10405  0033FA  D7E4               	goto	l10776
 10406  0033FC                     l10782:
 10407                           
 10408                           ; BSR set to: 1
 10409  0033FC  0101               	movlb	1	; () banked
 10410  0033FE  90D8               	bcf	status,0,c
 10411  003400  0101               	movlb	1	; () banked
 10412  003402  333D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10413  003404  0101               	movlb	1	; () banked
 10414  003406  333C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10415  003408  0101               	movlb	1	; () banked
 10416  00340A  333B               	rrcf	___ftadd@f2& (0+255),f,b
 10417  00340C  0101               	movlb	1	; () banked
 10418  00340E  0101               	movlb	1	; () banked
 10419  003410  2B44               	incf	___ftadd@exp2& (0+255),f,b
 10420  003412                     l10784:
 10421                           
 10422                           ; BSR set to: 1
 10423  003412  0101               	movlb	1	; () banked
 10424  003414  0101               	movlb	1	; () banked
 10425  003416  5144               	movf	___ftadd@exp2& (0+255),w,b
 10426  003418  0101               	movlb	1	; () banked
 10427  00341A  0101               	movlb	1	; () banked
 10428  00341C  6345               	cpfseq	___ftadd@exp1& (0+255),b
 10429  00341E  D7EE               	goto	l10782
 10430  003420                     l730:
 10431                           
 10432                           ; BSR set to: 1
 10433  003420  0101               	movlb	1	; () banked
 10434  003422  0101               	movlb	1	; () banked
 10435  003424  AF43               	btfss	___ftadd@sign& (0+255),7,b
 10436  003426  D018               	goto	l739
 10437                           
 10438                           ; BSR set to: 1
 10439  003428  0EFF               	movlw	255
 10440  00342A  0101               	movlb	1	; () banked
 10441  00342C  0101               	movlb	1	; () banked
 10442  00342E  1B38               	xorwf	___ftadd@f1& (0+255),f,b
 10443  003430  0EFF               	movlw	255
 10444  003432  0101               	movlb	1	; () banked
 10445  003434  0101               	movlb	1	; () banked
 10446  003436  1B39               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10447  003438  0EFF               	movlw	255
 10448  00343A  0101               	movlb	1	; () banked
 10449  00343C  0101               	movlb	1	; () banked
 10450  00343E  1B3A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10451  003440  0E01               	movlw	1
 10452  003442  0101               	movlb	1	; () banked
 10453  003444  0101               	movlb	1	; () banked
 10454  003446  2738               	addwf	___ftadd@f1& (0+255),f,b
 10455  003448  0E00               	movlw	0
 10456  00344A  0101               	movlb	1	; () banked
 10457  00344C  0101               	movlb	1	; () banked
 10458  00344E  2339               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10459  003450  0E00               	movlw	0
 10460  003452  0101               	movlb	1	; () banked
 10461  003454  0101               	movlb	1	; () banked
 10462  003456  233A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10463  003458                     l739:
 10464                           
 10465                           ; BSR set to: 1
 10466  003458  0101               	movlb	1	; () banked
 10467  00345A  0101               	movlb	1	; () banked
 10468  00345C  AD43               	btfss	___ftadd@sign& (0+255),6,b
 10469  00345E  D018               	goto	l10790
 10470                           
 10471                           ; BSR set to: 1
 10472  003460  0EFF               	movlw	255
 10473  003462  0101               	movlb	1	; () banked
 10474  003464  0101               	movlb	1	; () banked
 10475  003466  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 10476  003468  0EFF               	movlw	255
 10477  00346A  0101               	movlb	1	; () banked
 10478  00346C  0101               	movlb	1	; () banked
 10479  00346E  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10480  003470  0EFF               	movlw	255
 10481  003472  0101               	movlb	1	; () banked
 10482  003474  0101               	movlb	1	; () banked
 10483  003476  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10484  003478  0E01               	movlw	1
 10485  00347A  0101               	movlb	1	; () banked
 10486  00347C  0101               	movlb	1	; () banked
 10487  00347E  273B               	addwf	___ftadd@f2& (0+255),f,b
 10488  003480  0E00               	movlw	0
 10489  003482  0101               	movlb	1	; () banked
 10490  003484  0101               	movlb	1	; () banked
 10491  003486  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10492  003488  0E00               	movlw	0
 10493  00348A  0101               	movlb	1	; () banked
 10494  00348C  0101               	movlb	1	; () banked
 10495  00348E  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10496  003490                     l10790:
 10497                           
 10498                           ; BSR set to: 1
 10499  003490  0101               	movlb	1	; () banked
 10500  003492  6F3E               	movwf	??___ftadd& (0+255),b
 10501  003494  0E00               	movlw	0
 10502  003496  0101               	movlb	1	; () banked
 10503  003498  0101               	movlb	1	; () banked
 10504  00349A  6F43               	movwf	___ftadd@sign& (0+255),b
 10505  00349C  0101               	movlb	1	; () banked
 10506  00349E  513E               	movf	??___ftadd& (0+255),w,b
 10507                           
 10508                           ; BSR set to: 1
 10509  0034A0  0101               	movlb	1	; () banked
 10510  0034A2  0101               	movlb	1	; () banked
 10511  0034A4  5138               	movf	___ftadd@f1& (0+255),w,b
 10512  0034A6  0101               	movlb	1	; () banked
 10513  0034A8  0101               	movlb	1	; () banked
 10514  0034AA  273B               	addwf	___ftadd@f2& (0+255),f,b
 10515  0034AC  0101               	movlb	1	; () banked
 10516  0034AE  0101               	movlb	1	; () banked
 10517  0034B0  5139               	movf	(___ftadd@f1+1)& (0+255),w,b
 10518  0034B2  0101               	movlb	1	; () banked
 10519  0034B4  0101               	movlb	1	; () banked
 10520  0034B6  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10521  0034B8  0101               	movlb	1	; () banked
 10522  0034BA  0101               	movlb	1	; () banked
 10523  0034BC  513A               	movf	(___ftadd@f1+2)& (0+255),w,b
 10524  0034BE  0101               	movlb	1	; () banked
 10525  0034C0  0101               	movlb	1	; () banked
 10526  0034C2  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10527                           
 10528                           ; BSR set to: 1
 10529  0034C4  0101               	movlb	1	; () banked
 10530  0034C6  0101               	movlb	1	; () banked
 10531  0034C8  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10532  0034CA  D020               	goto	l10800
 10533                           
 10534                           ; BSR set to: 1
 10535  0034CC  0EFF               	movlw	255
 10536  0034CE  0101               	movlb	1	; () banked
 10537  0034D0  0101               	movlb	1	; () banked
 10538  0034D2  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 10539  0034D4  0EFF               	movlw	255
 10540  0034D6  0101               	movlb	1	; () banked
 10541  0034D8  0101               	movlb	1	; () banked
 10542  0034DA  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10543  0034DC  0EFF               	movlw	255
 10544  0034DE  0101               	movlb	1	; () banked
 10545  0034E0  0101               	movlb	1	; () banked
 10546  0034E2  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10547  0034E4  0E01               	movlw	1
 10548  0034E6  0101               	movlb	1	; () banked
 10549  0034E8  0101               	movlb	1	; () banked
 10550  0034EA  273B               	addwf	___ftadd@f2& (0+255),f,b
 10551  0034EC  0E00               	movlw	0
 10552  0034EE  0101               	movlb	1	; () banked
 10553  0034F0  0101               	movlb	1	; () banked
 10554  0034F2  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10555  0034F4  0E00               	movlw	0
 10556  0034F6  0101               	movlb	1	; () banked
 10557  0034F8  0101               	movlb	1	; () banked
 10558  0034FA  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10559                           
 10560                           ; BSR set to: 1
 10561  0034FC  0101               	movlb	1	; () banked
 10562  0034FE  6F3E               	movwf	??___ftadd& (0+255),b
 10563  003500  0E01               	movlw	1
 10564  003502  0101               	movlb	1	; () banked
 10565  003504  0101               	movlb	1	; () banked
 10566  003506  6F43               	movwf	___ftadd@sign& (0+255),b
 10567  003508  0101               	movlb	1	; () banked
 10568  00350A  513E               	movf	??___ftadd& (0+255),w,b
 10569  00350C                     l10800:
 10570                           
 10571                           ; BSR set to: 1
 10572  00350C  C13B  F100         	movff	___ftadd@f2,?___ftpack
 10573  003510  C13C  F101         	movff	___ftadd@f2+1,?___ftpack+1
 10574  003514  C13D  F102         	movff	___ftadd@f2+2,?___ftpack+2
 10575  003518  C145  F103         	movff	___ftadd@exp1,?___ftpack+3
 10576  00351C  C143  F104         	movff	___ftadd@sign,?___ftpack+4
 10577  003520  EC30  F022         	call	___ftpack	;wreg free
 10578  003524  C102  F13A         	movff	?___ftpack+2,?___ftadd+2
 10579  003528  C101  F139         	movff	?___ftpack+1,?___ftadd+1
 10580  00352C  C100  F138         	movff	?___ftpack,?___ftadd
 10581  003530                     l716:
 10582  003530  0012               	return	
 10583  003532                     __end_of___ftadd:
 10584                           	opt stack 0
 10585                           tblptru	equ	0xFF8
 10586                           tblptrh	equ	0xFF7
 10587                           tblptrl	equ	0xFF6
 10588                           tablat	equ	0xFF5
 10589                           prodh	equ	0xFF4
 10590                           prodl	equ	0xFF3
 10591                           intcon	equ	0xFF2
 10592                           intcon2	equ	0xFF1
 10593                           postinc0	equ	0xFEE
 10594                           wreg	equ	0xFE8
 10595                           indf2	equ	0xFDF
 10596                           postinc2	equ	0xFDE
 10597                           postdec2	equ	0xFDD
 10598                           fsr2h	equ	0xFDA
 10599                           fsr2l	equ	0xFD9
 10600                           status	equ	0xFD8
 10601                           
 10602 ;; *************** function ___altoft *****************
 10603 ;; Defined at:
 10604 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\altoft.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  c               4    8[BANK1 ] long 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  sign            1   17[BANK1 ] unsigned char 
 10609 ;;  exp             1   16[BANK1 ] unsigned char 
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  3    8[BANK1 ] float 
 10612 ;; Registers used:
 10613 ;;		wreg, status,2, status,0, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10619 ;;      Params:         0       0       4       0       0       0       0       0       0
 10620 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10621 ;;      Temps:          0       0       4       0       0       0       0       0       0
 10622 ;;      Totals:         0       0      10       0       0       0       0       0       0
 10623 ;;Total ram usage:       10 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:   11
 10626 ;; This function calls:
 10627 ;;		___ftpack
 10628 ;; This function is called by:
 10629 ;;		_USART_Init
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           	psect	text34
 10634  0051BC                     __ptext34:
 10635                           	opt stack 0
 10636  0051BC                     ___altoft:
 10637                           	opt stack 18
 10638                           
 10639                           ;incstack = 0
 10640                           ;incstack = 0
 10641  0051BC  0101               	movlb	1	; () banked
 10642  0051BE  6F0C               	movwf	??___altoft& (0+255),b
 10643  0051C0  0E00               	movlw	0
 10644  0051C2  0101               	movlb	1	; () banked
 10645  0051C4  0101               	movlb	1	; () banked
 10646  0051C6  6F11               	movwf	___altoft@sign& (0+255),b
 10647  0051C8  0101               	movlb	1	; () banked
 10648  0051CA  510C               	movf	??___altoft& (0+255),w,b
 10649  0051CC  0101               	movlb	1	; () banked
 10650  0051CE  6F0C               	movwf	??___altoft& (0+255),b
 10651  0051D0  0E8E               	movlw	142
 10652  0051D2  0101               	movlb	1	; () banked
 10653  0051D4  0101               	movlb	1	; () banked
 10654  0051D6  6F10               	movwf	___altoft@exp& (0+255),b
 10655  0051D8  0101               	movlb	1	; () banked
 10656  0051DA  510C               	movf	??___altoft& (0+255),w,b
 10657                           
 10658                           ; BSR set to: 1
 10659  0051DC  0101               	movlb	1	; () banked
 10660  0051DE  0101               	movlb	1	; () banked
 10661  0051E0  AF0B               	btfss	(___altoft@c+3)& (0+255),7,b
 10662  0051E2  D026               	goto	l10724
 10663                           
 10664                           ; BSR set to: 1
 10665  0051E4  0101               	movlb	1	; () banked
 10666  0051E6  0101               	movlb	1	; () banked
 10667  0051E8  1F0B               	comf	(___altoft@c+3)& (0+255),f,b
 10668  0051EA  0101               	movlb	1	; () banked
 10669  0051EC  1F0A               	comf	(___altoft@c+2)& (0+255),f,b
 10670  0051EE  0101               	movlb	1	; () banked
 10671  0051F0  1F09               	comf	(___altoft@c+1)& (0+255),f,b
 10672  0051F2  0101               	movlb	1	; () banked
 10673  0051F4  6D08               	negf	___altoft@c& (0+255),b
 10674  0051F6  0E00               	movlw	0
 10675  0051F8  0101               	movlb	1	; () banked
 10676  0051FA  2309               	addwfc	(___altoft@c+1)& (0+255),f,b
 10677  0051FC  0101               	movlb	1	; () banked
 10678  0051FE  230A               	addwfc	(___altoft@c+2)& (0+255),f,b
 10679  005200  0101               	movlb	1	; () banked
 10680  005202  230B               	addwfc	(___altoft@c+3)& (0+255),f,b
 10681                           
 10682                           ; BSR set to: 1
 10683  005204  0101               	movlb	1	; () banked
 10684  005206  6F0C               	movwf	??___altoft& (0+255),b
 10685  005208  0E01               	movlw	1
 10686  00520A  0101               	movlb	1	; () banked
 10687  00520C  0101               	movlb	1	; () banked
 10688  00520E  6F11               	movwf	___altoft@sign& (0+255),b
 10689  005210  0101               	movlb	1	; () banked
 10690  005212  510C               	movf	??___altoft& (0+255),w,b
 10691  005214  D00D               	goto	l10724
 10692  005216                     l10722:
 10693                           
 10694                           ; BSR set to: 1
 10695  005216  0101               	movlb	1	; () banked
 10696  005218  90D8               	bcf	status,0,c
 10697  00521A  0101               	movlb	1	; () banked
 10698  00521C  330B               	rrcf	(___altoft@c+3)& (0+255),f,b
 10699  00521E  0101               	movlb	1	; () banked
 10700  005220  330A               	rrcf	(___altoft@c+2)& (0+255),f,b
 10701  005222  0101               	movlb	1	; () banked
 10702  005224  3309               	rrcf	(___altoft@c+1)& (0+255),f,b
 10703  005226  0101               	movlb	1	; () banked
 10704  005228  3308               	rrcf	___altoft@c& (0+255),f,b
 10705  00522A  0101               	movlb	1	; () banked
 10706  00522C  0101               	movlb	1	; () banked
 10707  00522E  2B10               	incf	___altoft@exp& (0+255),f,b
 10708  005230                     l10724:
 10709                           
 10710                           ; BSR set to: 1
 10711  005230  0E00               	movlw	0
 10712  005232  0101               	movlb	1	; () banked
 10713  005234  0101               	movlb	1	; () banked
 10714  005236  1508               	andwf	___altoft@c& (0+255),w,b
 10715  005238  0101               	movlb	1	; () banked
 10716  00523A  6F0C               	movwf	??___altoft& (0+255),b
 10717  00523C  0E00               	movlw	0
 10718  00523E  0101               	movlb	1	; () banked
 10719  005240  0101               	movlb	1	; () banked
 10720  005242  1509               	andwf	(___altoft@c+1)& (0+255),w,b
 10721  005244  0101               	movlb	1	; () banked
 10722  005246  6F0D               	movwf	(??___altoft+1)& (0+255),b
 10723  005248  0E00               	movlw	0
 10724  00524A  0101               	movlb	1	; () banked
 10725  00524C  0101               	movlb	1	; () banked
 10726  00524E  150A               	andwf	(___altoft@c+2)& (0+255),w,b
 10727  005250  0101               	movlb	1	; () banked
 10728  005252  6F0E               	movwf	(??___altoft+2)& (0+255),b
 10729  005254  0EFF               	movlw	255
 10730  005256  0101               	movlb	1	; () banked
 10731  005258  0101               	movlb	1	; () banked
 10732  00525A  150B               	andwf	(___altoft@c+3)& (0+255),w,b
 10733  00525C  0101               	movlb	1	; () banked
 10734  00525E  6F0F               	movwf	(??___altoft+3)& (0+255),b
 10735  005260  0101               	movlb	1	; () banked
 10736  005262  510F               	movf	(??___altoft+3)& (0+255),w,b
 10737  005264  110C               	iorwf	??___altoft& (0+255),w,b
 10738  005266  110D               	iorwf	(??___altoft+1)& (0+255),w,b
 10739  005268  110E               	iorwf	(??___altoft+2)& (0+255),w,b
 10740  00526A  A4D8               	btfss	status,2,c
 10741  00526C  D7D4               	goto	l10722
 10742                           
 10743                           ; BSR set to: 1
 10744                           
 10745                           ; BSR set to: 1
 10746  00526E  C108  F100         	movff	___altoft@c,?___ftpack
 10747  005272  C109  F101         	movff	___altoft@c+1,?___ftpack+1
 10748  005276  C10A  F102         	movff	___altoft@c+2,?___ftpack+2
 10749  00527A  C110  F103         	movff	___altoft@exp,?___ftpack+3
 10750  00527E  C111  F104         	movff	___altoft@sign,?___ftpack+4
 10751  005282  EC30  F022         	call	___ftpack	;wreg free
 10752  005286  C102  F10A         	movff	?___ftpack+2,?___altoft+2
 10753  00528A  C101  F109         	movff	?___ftpack+1,?___altoft+1
 10754  00528E  C100  F108         	movff	?___ftpack,?___altoft
 10755  005292  0012               	return	
 10756  005294                     __end_of___altoft:
 10757                           	opt stack 0
 10758                           tblptru	equ	0xFF8
 10759                           tblptrh	equ	0xFF7
 10760                           tblptrl	equ	0xFF6
 10761                           tablat	equ	0xFF5
 10762                           prodh	equ	0xFF4
 10763                           prodl	equ	0xFF3
 10764                           intcon	equ	0xFF2
 10765                           intcon2	equ	0xFF1
 10766                           postinc0	equ	0xFEE
 10767                           wreg	equ	0xFE8
 10768                           indf2	equ	0xFDF
 10769                           postinc2	equ	0xFDE
 10770                           postdec2	equ	0xFDD
 10771                           fsr2h	equ	0xFDA
 10772                           fsr2l	equ	0xFD9
 10773                           status	equ	0xFD8
 10774                           
 10775 ;; *************** function ___ftpack *****************
 10776 ;; Defined at:
 10777 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  arg             3    0[BANK1 ] unsigned um
 10780 ;;  exp             1    3[BANK1 ] unsigned char 
 10781 ;;  sign            1    4[BANK1 ] unsigned char 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;		None
 10784 ;; Return value:  Size  Location     Type
 10785 ;;                  3    0[BANK1 ] float 
 10786 ;; Registers used:
 10787 ;;		wreg, status,2, status,0
 10788 ;; Tracked objects:
 10789 ;;		On entry : 0/0
 10790 ;;		On exit  : 0/0
 10791 ;;		Unchanged: 0/0
 10792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10793 ;;      Params:         0       0       5       0       0       0       0       0       0
 10794 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10795 ;;      Temps:          0       0       3       0       0       0       0       0       0
 10796 ;;      Totals:         0       0       8       0       0       0       0       0       0
 10797 ;;Total ram usage:        8 bytes
 10798 ;; Hardware stack levels used:    1
 10799 ;; Hardware stack levels required when called:   10
 10800 ;; This function calls:
 10801 ;;		Nothing
 10802 ;; This function is called by:
 10803 ;;		___altoft
 10804 ;;		___awtoft
 10805 ;;		___ftadd
 10806 ;;		___ftdiv
 10807 ;;		___ftmul
 10808 ;;		___lltoft
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text35
 10813  004460                     __ptext35:
 10814                           	opt stack 0
 10815  004460                     ___ftpack:
 10816                           	opt stack 17
 10817                           
 10818                           ;incstack = 0
 10819                           ;incstack = 0
 10820  004460  0101               	movlb	1	; () banked
 10821  004462  0101               	movlb	1	; () banked
 10822  004464  5103               	movf	___ftpack@exp& (0+255),w,b
 10823  004466  B4D8               	btfsc	status,2,c
 10824  004468  D009               	goto	l10684
 10825                           
 10826                           ; BSR set to: 1
 10827  00446A  0101               	movlb	1	; () banked
 10828  00446C  0101               	movlb	1	; () banked
 10829  00446E  5100               	movf	___ftpack@arg& (0+255),w,b
 10830  004470  0101               	movlb	1	; () banked
 10831  004472  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10832  004474  0101               	movlb	1	; () banked
 10833  004476  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10834  004478  A4D8               	btfss	status,2,c
 10835  00447A  D018               	goto	l10690
 10836  00447C                     l10684:
 10837                           
 10838                           ; BSR set to: 1
 10839  00447C  0E00               	movlw	0
 10840  00447E  0101               	movlb	1	; () banked
 10841  004480  0101               	movlb	1	; () banked
 10842  004482  6F00               	movwf	?___ftpack& (0+255),b
 10843  004484  0E00               	movlw	0
 10844  004486  0101               	movlb	1	; () banked
 10845  004488  0101               	movlb	1	; () banked
 10846  00448A  6F01               	movwf	(?___ftpack+1)& (0+255),b
 10847  00448C  0E00               	movlw	0
 10848  00448E  0101               	movlb	1	; () banked
 10849  004490  0101               	movlb	1	; () banked
 10850  004492  6F02               	movwf	(?___ftpack+2)& (0+255),b
 10851  004494  D091               	goto	l678
 10852  004496                     l10688:
 10853                           
 10854                           ; BSR set to: 1
 10855  004496  0101               	movlb	1	; () banked
 10856  004498  0101               	movlb	1	; () banked
 10857  00449A  2B03               	incf	___ftpack@exp& (0+255),f,b
 10858  00449C  0101               	movlb	1	; () banked
 10859  00449E  90D8               	bcf	status,0,c
 10860  0044A0  0101               	movlb	1	; () banked
 10861  0044A2  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10862  0044A4  0101               	movlb	1	; () banked
 10863  0044A6  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10864  0044A8  0101               	movlb	1	; () banked
 10865  0044AA  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10866  0044AC                     l10690:
 10867                           
 10868                           ; BSR set to: 1
 10869  0044AC  0E00               	movlw	0
 10870  0044AE  0101               	movlb	1	; () banked
 10871  0044B0  0101               	movlb	1	; () banked
 10872  0044B2  1500               	andwf	___ftpack@arg& (0+255),w,b
 10873  0044B4  0101               	movlb	1	; () banked
 10874  0044B6  6F05               	movwf	??___ftpack& (0+255),b
 10875  0044B8  0E00               	movlw	0
 10876  0044BA  0101               	movlb	1	; () banked
 10877  0044BC  0101               	movlb	1	; () banked
 10878  0044BE  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10879  0044C0  0101               	movlb	1	; () banked
 10880  0044C2  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10881  0044C4  0EFE               	movlw	254
 10882  0044C6  0101               	movlb	1	; () banked
 10883  0044C8  0101               	movlb	1	; () banked
 10884  0044CA  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10885  0044CC  0101               	movlb	1	; () banked
 10886  0044CE  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10887  0044D0  0101               	movlb	1	; () banked
 10888  0044D2  5105               	movf	??___ftpack& (0+255),w,b
 10889  0044D4  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10890  0044D6  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10891  0044D8  B4D8               	btfsc	status,2,c
 10892  0044DA  D018               	goto	l10696
 10893  0044DC  D7DC               	goto	l10688
 10894  0044DE                     l10692:
 10895                           
 10896                           ; BSR set to: 1
 10897  0044DE  0101               	movlb	1	; () banked
 10898  0044E0  0101               	movlb	1	; () banked
 10899  0044E2  2B03               	incf	___ftpack@exp& (0+255),f,b
 10900                           
 10901                           ; BSR set to: 1
 10902  0044E4  0E01               	movlw	1
 10903  0044E6  0101               	movlb	1	; () banked
 10904  0044E8  0101               	movlb	1	; () banked
 10905  0044EA  2700               	addwf	___ftpack@arg& (0+255),f,b
 10906  0044EC  0E00               	movlw	0
 10907  0044EE  0101               	movlb	1	; () banked
 10908  0044F0  0101               	movlb	1	; () banked
 10909  0044F2  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10910  0044F4  0E00               	movlw	0
 10911  0044F6  0101               	movlb	1	; () banked
 10912  0044F8  0101               	movlb	1	; () banked
 10913  0044FA  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10914  0044FC  0101               	movlb	1	; () banked
 10915  0044FE  90D8               	bcf	status,0,c
 10916  004500  0101               	movlb	1	; () banked
 10917  004502  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10918  004504  0101               	movlb	1	; () banked
 10919  004506  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10920  004508  0101               	movlb	1	; () banked
 10921  00450A  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10922  00450C                     l10696:
 10923                           
 10924                           ; BSR set to: 1
 10925  00450C  0E00               	movlw	0
 10926  00450E  0101               	movlb	1	; () banked
 10927  004510  0101               	movlb	1	; () banked
 10928  004512  1500               	andwf	___ftpack@arg& (0+255),w,b
 10929  004514  0101               	movlb	1	; () banked
 10930  004516  6F05               	movwf	??___ftpack& (0+255),b
 10931  004518  0E00               	movlw	0
 10932  00451A  0101               	movlb	1	; () banked
 10933  00451C  0101               	movlb	1	; () banked
 10934  00451E  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10935  004520  0101               	movlb	1	; () banked
 10936  004522  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10937  004524  0EFF               	movlw	255
 10938  004526  0101               	movlb	1	; () banked
 10939  004528  0101               	movlb	1	; () banked
 10940  00452A  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10941  00452C  0101               	movlb	1	; () banked
 10942  00452E  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10943  004530  0101               	movlb	1	; () banked
 10944  004532  5105               	movf	??___ftpack& (0+255),w,b
 10945  004534  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10946  004536  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10947  004538  B4D8               	btfsc	status,2,c
 10948  00453A  D00C               	goto	l10700
 10949  00453C  D7D0               	goto	l10692
 10950  00453E                     l10698:
 10951                           
 10952                           ; BSR set to: 1
 10953  00453E  0101               	movlb	1	; () banked
 10954  004540  0101               	movlb	1	; () banked
 10955  004542  0703               	decf	___ftpack@exp& (0+255),f,b
 10956  004544  0101               	movlb	1	; () banked
 10957  004546  90D8               	bcf	status,0,c
 10958  004548  0101               	movlb	1	; () banked
 10959  00454A  3700               	rlcf	___ftpack@arg& (0+255),f,b
 10960  00454C  0101               	movlb	1	; () banked
 10961  00454E  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10962  004550  0101               	movlb	1	; () banked
 10963  004552  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10964  004554                     l10700:
 10965                           
 10966                           ; BSR set to: 1
 10967  004554  0101               	movlb	1	; () banked
 10968  004556  0101               	movlb	1	; () banked
 10969  004558  AF01               	btfss	(___ftpack@arg+1)& (0+255),7,b
 10970  00455A  D7F1               	goto	l10698
 10971                           
 10972                           ; BSR set to: 1
 10973  00455C  0101               	movlb	1	; () banked
 10974  00455E  0101               	movlb	1	; () banked
 10975  004560  B103               	btfsc	___ftpack@exp& (0+255),0,b
 10976  004562  D003               	goto	l10704
 10977                           
 10978                           ; BSR set to: 1
 10979  004564  0101               	movlb	1	; () banked
 10980  004566  0101               	movlb	1	; () banked
 10981  004568  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10982  00456A                     l10704:
 10983                           
 10984                           ; BSR set to: 1
 10985  00456A  0101               	movlb	1	; () banked
 10986  00456C  90D8               	bcf	status,0,c
 10987  00456E  3303               	rrcf	___ftpack@exp& (0+255),f,b
 10988  004570  0101               	movlb	1	; () banked
 10989  004572  0101               	movlb	1	; () banked
 10990  004574  5103               	movf	___ftpack@exp& (0+255),w,b
 10991  004576  0101               	movlb	1	; () banked
 10992  004578  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10993  00457A  6B06               	clrf	(??___ftpack+1)& (0+255),b
 10994  00457C  6B05               	clrf	??___ftpack& (0+255),b
 10995  00457E  0101               	movlb	1	; () banked
 10996  004580  5105               	movf	??___ftpack& (0+255),w,b
 10997  004582  0101               	movlb	1	; () banked
 10998  004584  0101               	movlb	1	; () banked
 10999  004586  1300               	iorwf	___ftpack@arg& (0+255),f,b
 11000  004588  0101               	movlb	1	; () banked
 11001  00458A  5106               	movf	(??___ftpack+1)& (0+255),w,b
 11002  00458C  0101               	movlb	1	; () banked
 11003  00458E  0101               	movlb	1	; () banked
 11004  004590  1301               	iorwf	(___ftpack@arg+1)& (0+255),f,b
 11005  004592  0101               	movlb	1	; () banked
 11006  004594  5107               	movf	(??___ftpack+2)& (0+255),w,b
 11007  004596  0101               	movlb	1	; () banked
 11008  004598  0101               	movlb	1	; () banked
 11009  00459A  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11010                           
 11011                           ; BSR set to: 1
 11012  00459C  0101               	movlb	1	; () banked
 11013  00459E  0101               	movlb	1	; () banked
 11014  0045A0  5104               	movf	___ftpack@sign& (0+255),w,b
 11015  0045A2  B4D8               	btfsc	status,2,c
 11016  0045A4  D003               	goto	l10710
 11017                           
 11018                           ; BSR set to: 1
 11019  0045A6  0101               	movlb	1	; () banked
 11020  0045A8  0101               	movlb	1	; () banked
 11021  0045AA  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11022  0045AC                     l10710:
 11023                           
 11024                           ; BSR set to: 1
 11025  0045AC  C100  F100         	movff	___ftpack@arg,?___ftpack
 11026  0045B0  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 11027  0045B4  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 11028  0045B8                     l678:
 11029                           
 11030                           ; BSR set to: 1
 11031  0045B8  0012               	return	
 11032  0045BA                     __end_of___ftpack:
 11033                           	opt stack 0
 11034                           tblptru	equ	0xFF8
 11035                           tblptrh	equ	0xFF7
 11036                           tblptrl	equ	0xFF6
 11037                           tablat	equ	0xFF5
 11038                           prodh	equ	0xFF4
 11039                           prodl	equ	0xFF3
 11040                           intcon	equ	0xFF2
 11041                           intcon2	equ	0xFF1
 11042                           postinc0	equ	0xFEE
 11043                           wreg	equ	0xFE8
 11044                           indf2	equ	0xFDF
 11045                           postinc2	equ	0xFDE
 11046                           postdec2	equ	0xFDD
 11047                           fsr2h	equ	0xFDA
 11048                           fsr2l	equ	0xFD9
 11049                           status	equ	0xFD8
 11050                           
 11051 ;; *************** function _Init_AD *****************
 11052 ;; Defined at:
 11053 ;;		line 251 in file "main.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;		None
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;		None
 11058 ;; Return value:  Size  Location     Type
 11059 ;;		None               void
 11060 ;; Registers used:
 11061 ;;		wreg, status,2
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11067 ;;      Params:         0       0       0       0       0       0       0       0       0
 11068 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11069 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11070 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11071 ;;Total ram usage:        0 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:   10
 11074 ;; This function calls:
 11075 ;;		Nothing
 11076 ;; This function is called by:
 11077 ;;		_main
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           	psect	text36
 11082  0063CC                     __ptext36:
 11083                           	opt stack 0
 11084  0063CC                     _Init_AD:
 11085                           	opt stack 20
 11086                           
 11087                           ;main.c: 252: TRISA0 = 1;
 11088                           
 11089                           ; BSR set to: 1
 11090                           ;incstack = 0
 11091                           ;incstack = 0
 11092  0063CC  8092               	bsf	3986,0,c	;volatile
 11093                           
 11094                           ;main.c: 253: ADCON1 = 0x0e;
 11095  0063CE  0E0E               	movlw	14
 11096  0063D0  6EC1               	movwf	4033,c	;volatile
 11097                           
 11098                           ;main.c: 254: ADCON2 = 0x92;
 11099  0063D2  0E92               	movlw	146
 11100  0063D4  6EC0               	movwf	4032,c	;volatile
 11101                           
 11102                           ;main.c: 255: ADRESH=0;
 11103  0063D6  0E00               	movlw	0
 11104  0063D8  6EC4               	movwf	4036,c	;volatile
 11105                           
 11106                           ;main.c: 256: ADRESL=0;
 11107  0063DA  0E00               	movlw	0
 11108  0063DC  6EC3               	movwf	4035,c	;volatile
 11109  0063DE  0012               	return	
 11110  0063E0                     __end_of_Init_AD:
 11111                           	opt stack 0
 11112                           tblptru	equ	0xFF8
 11113                           tblptrh	equ	0xFF7
 11114                           tblptrl	equ	0xFF6
 11115                           tablat	equ	0xFF5
 11116                           prodh	equ	0xFF4
 11117                           prodl	equ	0xFF3
 11118                           intcon	equ	0xFF2
 11119                           intcon2	equ	0xFF1
 11120                           postinc0	equ	0xFEE
 11121                           wreg	equ	0xFE8
 11122                           indf2	equ	0xFDF
 11123                           postinc2	equ	0xFDE
 11124                           postdec2	equ	0xFDD
 11125                           fsr2h	equ	0xFDA
 11126                           fsr2l	equ	0xFD9
 11127                           status	equ	0xFD8
 11128                           
 11129 ;; *************** function _Timer1_Init *****************
 11130 ;; Defined at:
 11131 ;;		line 208 in file "main.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;		None
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;		None
 11136 ;; Return value:  Size  Location     Type
 11137 ;;		None               void
 11138 ;; Registers used:
 11139 ;;		wreg, status,2
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0
 11146 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11147 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11148 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11149 ;;Total ram usage:        0 bytes
 11150 ;; Hardware stack levels used:    1
 11151 ;; Hardware stack levels required when called:   10
 11152 ;; This function calls:
 11153 ;;		Nothing
 11154 ;; This function is called by:
 11155 ;;		_main
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           	psect	text37
 11160  0063E0                     __ptext37:
 11161                           	opt stack 0
 11162  0063E0                     _Timer1_Init:
 11163                           	opt stack 20
 11164                           
 11165                           ;main.c: 209: T1CONbits.RD16=1;
 11166                           
 11167                           ;incstack = 0
 11168                           ;incstack = 0
 11169  0063E0  8ECD               	bsf	4045,7,c	;volatile
 11170                           
 11171                           ;main.c: 210: T1CONbits.T1CKPS=0b00;
 11172  0063E2  0ECF               	movlw	-49
 11173  0063E4  16CD               	andwf	4045,f,c	;volatile
 11174                           
 11175                           ;main.c: 211: T1CONbits.TMR1CS=0;
 11176  0063E6  92CD               	bcf	4045,1,c	;volatile
 11177                           
 11178                           ;main.c: 212: TMR1=0;
 11179  0063E8  0E00               	movlw	0
 11180  0063EA  6ECF               	movwf	4047,c	;volatile
 11181  0063EC  0E00               	movlw	0
 11182  0063EE  6ECE               	movwf	4046,c	;volatile
 11183                           
 11184                           ;main.c: 213: TMR1ON=0;
 11185  0063F0  90CD               	bcf	4045,0,c	;volatile
 11186  0063F2  0012               	return	
 11187  0063F4                     __end_of_Timer1_Init:
 11188                           	opt stack 0
 11189                           tblptru	equ	0xFF8
 11190                           tblptrh	equ	0xFF7
 11191                           tblptrl	equ	0xFF6
 11192                           tablat	equ	0xFF5
 11193                           prodh	equ	0xFF4
 11194                           prodl	equ	0xFF3
 11195                           intcon	equ	0xFF2
 11196                           intcon2	equ	0xFF1
 11197                           postinc0	equ	0xFEE
 11198                           wreg	equ	0xFE8
 11199                           indf2	equ	0xFDF
 11200                           postinc2	equ	0xFDE
 11201                           postdec2	equ	0xFDD
 11202                           fsr2h	equ	0xFDA
 11203                           fsr2l	equ	0xFD9
 11204                           status	equ	0xFD8
 11205                           
 11206 ;; *************** function _Configuracion_Registros *****************
 11207 ;; Defined at:
 11208 ;;		line 197 in file "main.c"
 11209 ;; Parameters:    Size  Location     Type
 11210 ;;		None
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;		None
 11213 ;; Return value:  Size  Location     Type
 11214 ;;		None               void
 11215 ;; Registers used:
 11216 ;;		wreg, status,2, status,0
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11222 ;;      Params:         0       0       0       0       0       0       0       0       0
 11223 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11224 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11225 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11226 ;;Total ram usage:        0 bytes
 11227 ;; Hardware stack levels used:    1
 11228 ;; Hardware stack levels required when called:   10
 11229 ;; This function calls:
 11230 ;;		Nothing
 11231 ;; This function is called by:
 11232 ;;		_main
 11233 ;; This function uses a non-reentrant model
 11234 ;;
 11235                           
 11236                           	psect	text38
 11237  0063F4                     __ptext38:
 11238                           	opt stack 0
 11239  0063F4                     _Configuracion_Registros:
 11240                           	opt stack 20
 11241                           
 11242                           ;main.c: 198: ADCON1bits.PCFG=0b1111;
 11243                           
 11244                           ;incstack = 0
 11245                           ;incstack = 0
 11246  0063F4  80C1               	bsf	4033,0,c	;volatile
 11247  0063F6  82C1               	bsf	4033,1,c	;volatile
 11248  0063F8  84C1               	bsf	4033,2,c	;volatile
 11249  0063FA  86C1               	bsf	4033,3,c	;volatile
 11250                           
 11251                           ;main.c: 199: TRISA&=~(1<<1);
 11252  0063FC  9292               	bcf	3986,1,c	;volatile
 11253                           
 11254                           ;main.c: 200: TRISA|=(1<<2);
 11255  0063FE  8492               	bsf	3986,2,c	;volatile
 11256                           
 11257                           ;main.c: 202: TRISB = 0;
 11258  006400  0E00               	movlw	0
 11259  006402  6E93               	movwf	3987,c	;volatile
 11260  006404  0012               	return	
 11261  006406                     __end_of_Configuracion_Registros:
 11262                           	opt stack 0
 11263                           tblptru	equ	0xFF8
 11264                           tblptrh	equ	0xFF7
 11265                           tblptrl	equ	0xFF6
 11266                           tablat	equ	0xFF5
 11267                           prodh	equ	0xFF4
 11268                           prodl	equ	0xFF3
 11269                           intcon	equ	0xFF2
 11270                           intcon2	equ	0xFF1
 11271                           postinc0	equ	0xFEE
 11272                           wreg	equ	0xFE8
 11273                           indf2	equ	0xFDF
 11274                           postinc2	equ	0xFDE
 11275                           postdec2	equ	0xFDD
 11276                           fsr2h	equ	0xFDA
 11277                           fsr2l	equ	0xFD9
 11278                           status	equ	0xFD8
 11279                           
 11280 ;; *************** function _lcd_init *****************
 11281 ;; Defined at:
 11282 ;;		line 95 in file "lcd.h"
 11283 ;; Parameters:    Size  Location     Type
 11284 ;;		None
 11285 ;; Auto vars:     Size  Location     Type
 11286 ;;		None
 11287 ;; Return value:  Size  Location     Type
 11288 ;;		None               void
 11289 ;; Registers used:
 11290 ;;		wreg, status,2, cstack
 11291 ;; Tracked objects:
 11292 ;;		On entry : 0/0
 11293 ;;		On exit  : 0/0
 11294 ;;		Unchanged: 0/0
 11295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11296 ;;      Params:         0       0       0       0       0       0       0       0       0
 11297 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11298 ;;      Temps:          0       0       1       0       0       0       0       0       0
 11299 ;;      Totals:         0       0       1       0       0       0       0       0       0
 11300 ;;Total ram usage:        1 bytes
 11301 ;; Hardware stack levels used:    1
 11302 ;; Hardware stack levels required when called:   12
 11303 ;; This function calls:
 11304 ;;		_Lcd_Port
 11305 ;;		_Lcd_Cmd
 11306 ;; This function is called by:
 11307 ;;		_main
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text39
 11312  0047F2                     __ptext39:
 11313                           	opt stack 0
 11314  0047F2                     _lcd_init:
 11315                           	opt stack 18
 11316                           
 11317                           ;lcd.h: 96: TRISD=0x00;
 11318                           
 11319                           ;incstack = 0
 11320                           ;incstack = 0
 11321  0047F2  0E00               	movlw	0
 11322  0047F4  6E95               	movwf	3989,c	;volatile
 11323                           
 11324                           ;lcd.h: 97: Lcd_Port(0x00);
 11325  0047F6  0101               	movlb	1	; () banked
 11326  0047F8  6F03               	movwf	??_lcd_init& (0+255),b
 11327  0047FA  0E00               	movlw	0
 11328  0047FC  0101               	movlb	1	; () banked
 11329  0047FE  0101               	movlb	1	; () banked
 11330  004800  6F00               	movwf	?_Lcd_Port& (0+255),b
 11331  004802  0101               	movlb	1	; () banked
 11332  004804  5103               	movf	??_lcd_init& (0+255),w,b
 11333  004806  ECC7  F030         	call	_Lcd_Port	;wreg free
 11334                           
 11335                           ;lcd.h: 98: _delay((unsigned long)((20)*(8000000/4000.0)));
 11336  00480A  0E34               	movlw	52
 11337  00480C  0101               	movlb	1	; () banked
 11338  00480E  6F03               	movwf	??_lcd_init& (0+255),b
 11339  004810  0EF1               	movlw	241
 11340  004812                     u11137:
 11341  004812  2EE8               	decfsz	wreg,f,c
 11342  004814  D7FE               	goto	u11137
 11343  004816  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11344  004818  D7FC               	goto	u11137
 11345  00481A  D000               	nop2	
 11346                           
 11347                           ;lcd.h: 99: Lcd_Cmd(0x03);
 11348  00481C  0101               	movlb	1	; () banked
 11349  00481E  6F03               	movwf	??_lcd_init& (0+255),b
 11350  004820  0E03               	movlw	3
 11351  004822  0101               	movlb	1	; () banked
 11352  004824  0101               	movlb	1	; () banked
 11353  004826  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11354  004828  0101               	movlb	1	; () banked
 11355  00482A  5103               	movf	??_lcd_init& (0+255),w,b
 11356  00482C  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11357                           
 11358                           ;lcd.h: 100: _delay((unsigned long)((5)*(8000000/4000.0)));
 11359  004830  0E0D               	movlw	13
 11360  004832  0101               	movlb	1	; () banked
 11361  004834  6F03               	movwf	??_lcd_init& (0+255),b
 11362  004836  0EFB               	movlw	251
 11363  004838                     u11147:
 11364  004838  2EE8               	decfsz	wreg,f,c
 11365  00483A  D7FE               	goto	u11147
 11366  00483C  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11367  00483E  D7FC               	goto	u11147
 11368  004840  D000               	nop2	
 11369                           
 11370                           ;lcd.h: 101: Lcd_Cmd(0x03);
 11371  004842  0101               	movlb	1	; () banked
 11372  004844  6F03               	movwf	??_lcd_init& (0+255),b
 11373  004846  0E03               	movlw	3
 11374  004848  0101               	movlb	1	; () banked
 11375  00484A  0101               	movlb	1	; () banked
 11376  00484C  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11377  00484E  0101               	movlb	1	; () banked
 11378  004850  5103               	movf	??_lcd_init& (0+255),w,b
 11379  004852  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11380                           
 11381                           ;lcd.h: 102: _delay((unsigned long)((11)*(8000000/4000.0)));
 11382  004856  0E1D               	movlw	29
 11383  004858  0101               	movlb	1	; () banked
 11384  00485A  6F03               	movwf	??_lcd_init& (0+255),b
 11385  00485C  0E91               	movlw	145
 11386  00485E                     u11157:
 11387  00485E  2EE8               	decfsz	wreg,f,c
 11388  004860  D7FE               	goto	u11157
 11389  004862  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11390  004864  D7FC               	goto	u11157
 11391                           
 11392                           ;lcd.h: 103: Lcd_Cmd(0x03);
 11393  004866  0101               	movlb	1	; () banked
 11394  004868  6F03               	movwf	??_lcd_init& (0+255),b
 11395  00486A  0E03               	movlw	3
 11396  00486C  0101               	movlb	1	; () banked
 11397  00486E  0101               	movlb	1	; () banked
 11398  004870  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11399  004872  0101               	movlb	1	; () banked
 11400  004874  5103               	movf	??_lcd_init& (0+255),w,b
 11401  004876  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11402                           
 11403                           ;lcd.h: 105: Lcd_Cmd(0x02);
 11404  00487A  0101               	movlb	1	; () banked
 11405  00487C  6F03               	movwf	??_lcd_init& (0+255),b
 11406  00487E  0E02               	movlw	2
 11407  004880  0101               	movlb	1	; () banked
 11408  004882  0101               	movlb	1	; () banked
 11409  004884  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11410  004886  0101               	movlb	1	; () banked
 11411  004888  5103               	movf	??_lcd_init& (0+255),w,b
 11412  00488A  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11413                           
 11414                           ;lcd.h: 106: Lcd_Cmd(0x02);
 11415  00488E  0101               	movlb	1	; () banked
 11416  004890  6F03               	movwf	??_lcd_init& (0+255),b
 11417  004892  0E02               	movlw	2
 11418  004894  0101               	movlb	1	; () banked
 11419  004896  0101               	movlb	1	; () banked
 11420  004898  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11421  00489A  0101               	movlb	1	; () banked
 11422  00489C  5103               	movf	??_lcd_init& (0+255),w,b
 11423  00489E  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11424                           
 11425                           ;lcd.h: 107: Lcd_Cmd(0x08);
 11426  0048A2  0101               	movlb	1	; () banked
 11427  0048A4  6F03               	movwf	??_lcd_init& (0+255),b
 11428  0048A6  0E08               	movlw	8
 11429  0048A8  0101               	movlb	1	; () banked
 11430  0048AA  0101               	movlb	1	; () banked
 11431  0048AC  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11432  0048AE  0101               	movlb	1	; () banked
 11433  0048B0  5103               	movf	??_lcd_init& (0+255),w,b
 11434  0048B2  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11435                           
 11436                           ;lcd.h: 108: Lcd_Cmd(0x00);
 11437  0048B6  0101               	movlb	1	; () banked
 11438  0048B8  6F03               	movwf	??_lcd_init& (0+255),b
 11439  0048BA  0E00               	movlw	0
 11440  0048BC  0101               	movlb	1	; () banked
 11441  0048BE  0101               	movlb	1	; () banked
 11442  0048C0  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11443  0048C2  0101               	movlb	1	; () banked
 11444  0048C4  5103               	movf	??_lcd_init& (0+255),w,b
 11445  0048C6  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11446                           
 11447                           ;lcd.h: 109: Lcd_Cmd(0x0C);
 11448  0048CA  0101               	movlb	1	; () banked
 11449  0048CC  6F03               	movwf	??_lcd_init& (0+255),b
 11450  0048CE  0E0C               	movlw	12
 11451  0048D0  0101               	movlb	1	; () banked
 11452  0048D2  0101               	movlb	1	; () banked
 11453  0048D4  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11454  0048D6  0101               	movlb	1	; () banked
 11455  0048D8  5103               	movf	??_lcd_init& (0+255),w,b
 11456  0048DA  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11457                           
 11458                           ;lcd.h: 110: Lcd_Cmd(0x00);
 11459  0048DE  0101               	movlb	1	; () banked
 11460  0048E0  6F03               	movwf	??_lcd_init& (0+255),b
 11461  0048E2  0E00               	movlw	0
 11462  0048E4  0101               	movlb	1	; () banked
 11463  0048E6  0101               	movlb	1	; () banked
 11464  0048E8  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11465  0048EA  0101               	movlb	1	; () banked
 11466  0048EC  5103               	movf	??_lcd_init& (0+255),w,b
 11467  0048EE  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11468                           
 11469                           ;lcd.h: 111: Lcd_Cmd(0x06);
 11470  0048F2  0101               	movlb	1	; () banked
 11471  0048F4  6F03               	movwf	??_lcd_init& (0+255),b
 11472  0048F6  0E06               	movlw	6
 11473  0048F8  0101               	movlb	1	; () banked
 11474  0048FA  0101               	movlb	1	; () banked
 11475  0048FC  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11476  0048FE  0101               	movlb	1	; () banked
 11477  004900  5103               	movf	??_lcd_init& (0+255),w,b
 11478  004902  EC9F  F031         	call	_Lcd_Cmd	;wreg free
 11479  004906  0012               	return	
 11480  004908                     __end_of_lcd_init:
 11481                           	opt stack 0
 11482                           tblptru	equ	0xFF8
 11483                           tblptrh	equ	0xFF7
 11484                           tblptrl	equ	0xFF6
 11485                           tablat	equ	0xFF5
 11486                           prodh	equ	0xFF4
 11487                           prodl	equ	0xFF3
 11488                           intcon	equ	0xFF2
 11489                           intcon2	equ	0xFF1
 11490                           postinc0	equ	0xFEE
 11491                           wreg	equ	0xFE8
 11492                           indf2	equ	0xFDF
 11493                           postinc2	equ	0xFDE
 11494                           postdec2	equ	0xFDD
 11495                           fsr2h	equ	0xFDA
 11496                           fsr2l	equ	0xFD9
 11497                           status	equ	0xFD8
 11498                           
 11499 ;; *************** function _Lcd_Cmd *****************
 11500 ;; Defined at:
 11501 ;;		line 53 in file "lcd.h"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;  a               1    1[BANK1 ] unsigned char 
 11504 ;; Auto vars:     Size  Location     Type
 11505 ;;		None
 11506 ;; Return value:  Size  Location     Type
 11507 ;;		None               void
 11508 ;; Registers used:
 11509 ;;		wreg, cstack
 11510 ;; Tracked objects:
 11511 ;;		On entry : 0/0
 11512 ;;		On exit  : 0/0
 11513 ;;		Unchanged: 0/0
 11514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11515 ;;      Params:         0       0       1       0       0       0       0       0       0
 11516 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11517 ;;      Temps:          0       0       1       0       0       0       0       0       0
 11518 ;;      Totals:         0       0       2       0       0       0       0       0       0
 11519 ;;Total ram usage:        2 bytes
 11520 ;; Hardware stack levels used:    1
 11521 ;; Hardware stack levels required when called:   11
 11522 ;; This function calls:
 11523 ;;		_Lcd_Port
 11524 ;; This function is called by:
 11525 ;;		_lcd_gotoxy
 11526 ;;		_lcd_init
 11527 ;;		_lcd_clear
 11528 ;;		_lcd_shift_right
 11529 ;;		_lcd_shift_left
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text40
 11534  00633E                     __ptext40:
 11535                           	opt stack 0
 11536  00633E                     _Lcd_Cmd:
 11537                           	opt stack 17
 11538                           
 11539                           ;lcd.h: 54: RD2 = 0;
 11540                           
 11541                           ;incstack = 0
 11542                           ;incstack = 0
 11543  00633E  9483               	bcf	3971,2,c	;volatile
 11544                           
 11545                           ;lcd.h: 55: Lcd_Port(a);
 11546  006340  C101  F100         	movff	Lcd_Cmd@a,?_Lcd_Port
 11547  006344  ECC7  F030         	call	_Lcd_Port	;wreg free
 11548                           
 11549                           ;lcd.h: 56: RD3 = 1;
 11550  006348  8683               	bsf	3971,3,c	;volatile
 11551                           
 11552                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 11553  00634A  0E0B               	movlw	11
 11554  00634C  0101               	movlb	1	; () banked
 11555  00634E  6F02               	movwf	??_Lcd_Cmd& (0+255),b
 11556  006350  0E62               	movlw	98
 11557  006352                     u11167:
 11558  006352  2EE8               	decfsz	wreg,f,c
 11559  006354  D7FE               	goto	u11167
 11560  006356  2F02               	decfsz	??_Lcd_Cmd& (0+255),f,b
 11561  006358  D7FC               	goto	u11167
 11562  00635A  F000               	nop	
 11563                           
 11564                           ;lcd.h: 58: RD3 = 0;
 11565  00635C  9683               	bcf	3971,3,c	;volatile
 11566  00635E  0012               	return	
 11567  006360                     __end_of_Lcd_Cmd:
 11568                           	opt stack 0
 11569                           tblptru	equ	0xFF8
 11570                           tblptrh	equ	0xFF7
 11571                           tblptrl	equ	0xFF6
 11572                           tablat	equ	0xFF5
 11573                           prodh	equ	0xFF4
 11574                           prodl	equ	0xFF3
 11575                           intcon	equ	0xFF2
 11576                           intcon2	equ	0xFF1
 11577                           postinc0	equ	0xFEE
 11578                           wreg	equ	0xFE8
 11579                           indf2	equ	0xFDF
 11580                           postinc2	equ	0xFDE
 11581                           postdec2	equ	0xFDD
 11582                           fsr2h	equ	0xFDA
 11583                           fsr2l	equ	0xFD9
 11584                           status	equ	0xFD8
 11585                           
 11586 ;; *************** function _Lcd_Port *****************
 11587 ;; Defined at:
 11588 ;;		line 28 in file "lcd.h"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;  a               1    0[BANK1 ] unsigned char 
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;		None
 11593 ;; Return value:  Size  Location     Type
 11594 ;;		None               void
 11595 ;; Registers used:
 11596 ;;		None
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11602 ;;      Params:         0       0       1       0       0       0       0       0       0
 11603 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11605 ;;      Totals:         0       0       1       0       0       0       0       0       0
 11606 ;;Total ram usage:        1 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; Hardware stack levels required when called:   10
 11609 ;; This function calls:
 11610 ;;		Nothing
 11611 ;; This function is called by:
 11612 ;;		_Lcd_Cmd
 11613 ;;		_lcd_init
 11614 ;;		_lcd_write_char
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           	psect	text41
 11619  00618E                     __ptext41:
 11620                           	opt stack 0
 11621  00618E                     _Lcd_Port:
 11622                           	opt stack 17
 11623                           
 11624                           ;lcd.h: 29: if(a & 1)
 11625                           
 11626                           ;incstack = 0
 11627                           ;incstack = 0
 11628  00618E  0101               	movlb	1	; () banked
 11629  006190  0101               	movlb	1	; () banked
 11630  006192  A100               	btfss	Lcd_Port@a& (0+255),0,b
 11631  006194  D002               	goto	l103
 11632                           
 11633                           ; BSR set to: 1
 11634                           ;lcd.h: 30: RD4 = 1;
 11635  006196  8883               	bsf	3971,4,c	;volatile
 11636  006198  D001               	goto	l104
 11637  00619A                     l103:
 11638                           
 11639                           ; BSR set to: 1
 11640                           ;lcd.h: 31: else
 11641                           ;lcd.h: 32: RD4 = 0;
 11642  00619A  9883               	bcf	3971,4,c	;volatile
 11643  00619C                     l104:
 11644                           
 11645                           ; BSR set to: 1
 11646                           ;lcd.h: 34: if(a & 2)
 11647  00619C  0101               	movlb	1	; () banked
 11648  00619E  0101               	movlb	1	; () banked
 11649  0061A0  A300               	btfss	Lcd_Port@a& (0+255),1,b
 11650  0061A2  D002               	goto	l105
 11651                           
 11652                           ; BSR set to: 1
 11653                           ;lcd.h: 35: RD5 = 1;
 11654  0061A4  8A83               	bsf	3971,5,c	;volatile
 11655  0061A6  D001               	goto	l106
 11656  0061A8                     l105:
 11657                           
 11658                           ; BSR set to: 1
 11659                           ;lcd.h: 36: else
 11660                           ;lcd.h: 37: RD5 = 0;
 11661  0061A8  9A83               	bcf	3971,5,c	;volatile
 11662  0061AA                     l106:
 11663                           
 11664                           ; BSR set to: 1
 11665                           ;lcd.h: 39: if(a & 4)
 11666  0061AA  0101               	movlb	1	; () banked
 11667  0061AC  0101               	movlb	1	; () banked
 11668  0061AE  A500               	btfss	Lcd_Port@a& (0+255),2,b
 11669  0061B0  D002               	goto	l107
 11670                           
 11671                           ; BSR set to: 1
 11672                           ;lcd.h: 40: RD6 = 1;
 11673  0061B2  8C83               	bsf	3971,6,c	;volatile
 11674  0061B4  D001               	goto	l108
 11675  0061B6                     l107:
 11676                           
 11677                           ; BSR set to: 1
 11678                           ;lcd.h: 41: else
 11679                           ;lcd.h: 42: RD6 = 0;
 11680  0061B6  9C83               	bcf	3971,6,c	;volatile
 11681  0061B8                     l108:
 11682                           
 11683                           ; BSR set to: 1
 11684                           ;lcd.h: 44: if(a & 8)
 11685  0061B8  0101               	movlb	1	; () banked
 11686  0061BA  0101               	movlb	1	; () banked
 11687  0061BC  A700               	btfss	Lcd_Port@a& (0+255),3,b
 11688  0061BE  D002               	goto	l109
 11689                           
 11690                           ; BSR set to: 1
 11691                           ;lcd.h: 45: RD7 = 1;
 11692  0061C0  8E83               	bsf	3971,7,c	;volatile
 11693  0061C2  D001               	goto	l111
 11694  0061C4                     l109:
 11695                           
 11696                           ; BSR set to: 1
 11697                           ;lcd.h: 46: else
 11698                           ;lcd.h: 47: RD7 = 0;
 11699  0061C4  9E83               	bcf	3971,7,c	;volatile
 11700  0061C6                     l111:
 11701                           
 11702                           ; BSR set to: 1
 11703  0061C6  0012               	return	
 11704  0061C8                     __end_of_Lcd_Port:
 11705                           	opt stack 0
 11706                           tblptru	equ	0xFF8
 11707                           tblptrh	equ	0xFF7
 11708                           tblptrl	equ	0xFF6
 11709                           tablat	equ	0xFF5
 11710                           prodh	equ	0xFF4
 11711                           prodl	equ	0xFF3
 11712                           intcon	equ	0xFF2
 11713                           intcon2	equ	0xFF1
 11714                           postinc0	equ	0xFEE
 11715                           wreg	equ	0xFE8
 11716                           indf2	equ	0xFDF
 11717                           postinc2	equ	0xFDE
 11718                           postdec2	equ	0xFDD
 11719                           fsr2h	equ	0xFDA
 11720                           fsr2l	equ	0xFD9
 11721                           status	equ	0xFD8
 11722                           
 11723 ;; *************** function _interrupcaoLOW *****************
 11724 ;; Defined at:
 11725 ;;		line 179 in file "main.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;		None
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;		None
 11730 ;; Return value:  Size  Location     Type
 11731 ;;		None               void
 11732 ;; Registers used:
 11733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11739 ;;      Params:         0       0       0       0       0       0       0       0       0
 11740 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11741 ;;      Temps:          0      17       0       0       0       0       0       0       0
 11742 ;;      Totals:         0      17       0       0       0       0       0       0       0
 11743 ;;Total ram usage:       17 bytes
 11744 ;; Hardware stack levels used:    1
 11745 ;; Hardware stack levels required when called:    9
 11746 ;; This function calls:
 11747 ;;		i1_mainLoop
 11748 ;; This function is called by:
 11749 ;;		Interrupt level 1
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	intcodelo
 11754  000018                     __pintcodelo:
 11755                           	opt stack 0
 11756  000018                     _interrupcaoLOW:
 11757                           	opt stack 15
 11758                           
 11759                           ; BSR set to: 1
 11760                           ;incstack = 0
 11761  000018  CFD8 F0A1          	movff	status,??_interrupcaoLOW
 11762  00001C  CFE8 F0A2          	movff	wreg,??_interrupcaoLOW+1
 11763  000020  CFE0 F0A3          	movff	bsr,??_interrupcaoLOW+2
 11764  000024  CFFA F0A4          	movff	pclath,??_interrupcaoLOW+3
 11765  000028  CFFB F0A5          	movff	pclatu,??_interrupcaoLOW+4
 11766  00002C  CFE9 F0A6          	movff	fsr0l,??_interrupcaoLOW+5
 11767  000030  CFEA F0A7          	movff	fsr0h,??_interrupcaoLOW+6
 11768  000034  CFE1 F0A8          	movff	fsr1l,??_interrupcaoLOW+7
 11769  000038  CFE2 F0A9          	movff	fsr1h,??_interrupcaoLOW+8
 11770  00003C  CFD9 F0AA          	movff	fsr2l,??_interrupcaoLOW+9
 11771  000040  CFDA F0AB          	movff	fsr2h,??_interrupcaoLOW+10
 11772  000044  CFF3 F0AC          	movff	prodl,??_interrupcaoLOW+11
 11773  000048  CFF4 F0AD          	movff	prodh,??_interrupcaoLOW+12
 11774  00004C  CFF6 F0AE          	movff	tblptrl,??_interrupcaoLOW+13
 11775  000050  CFF7 F0AF          	movff	tblptrh,??_interrupcaoLOW+14
 11776  000054  CFF8 F0B0          	movff	tblptru,??_interrupcaoLOW+15
 11777  000058  CFF5 F0B1          	movff	tablat,??_interrupcaoLOW+16
 11778  00005C                     
 11779                           ;main.c: 180: mainLoop();
 11780  00005C  ECB5  F029         	call	i1_mainLoop	;wreg free
 11781  000060  C0B1  FFF5         	movff	??_interrupcaoLOW+16,tablat
 11782  000064  C0B0  FFF8         	movff	??_interrupcaoLOW+15,tblptru
 11783  000068  C0AF  FFF7         	movff	??_interrupcaoLOW+14,tblptrh
 11784  00006C  C0AE  FFF6         	movff	??_interrupcaoLOW+13,tblptrl
 11785  000070  C0AD  FFF4         	movff	??_interrupcaoLOW+12,prodh
 11786  000074  C0AC  FFF3         	movff	??_interrupcaoLOW+11,prodl
 11787  000078  C0AB  FFDA         	movff	??_interrupcaoLOW+10,fsr2h
 11788  00007C  C0AA  FFD9         	movff	??_interrupcaoLOW+9,fsr2l
 11789  000080  C0A9  FFE2         	movff	??_interrupcaoLOW+8,fsr1h
 11790  000084  C0A8  FFE1         	movff	??_interrupcaoLOW+7,fsr1l
 11791  000088  C0A7  FFEA         	movff	??_interrupcaoLOW+6,fsr0h
 11792  00008C  C0A6  FFE9         	movff	??_interrupcaoLOW+5,fsr0l
 11793  000090  C0A5  FFFB         	movff	??_interrupcaoLOW+4,pclatu
 11794  000094  C0A4  FFFA         	movff	??_interrupcaoLOW+3,pclath
 11795  000098  C0A3  FFE0         	movff	??_interrupcaoLOW+2,bsr
 11796  00009C  C0A2  FFE8         	movff	??_interrupcaoLOW+1,wreg
 11797  0000A0  C0A1  FFD8         	movff	??_interrupcaoLOW,status
 11798  0000A4  0010               	retfie	
 11799  0000A6                     __end_of_interrupcaoLOW:
 11800                           	opt stack 0
 11801                           pclatu	equ	0xFFB
 11802                           pclath	equ	0xFFA
 11803                           tblptru	equ	0xFF8
 11804                           tblptrh	equ	0xFF7
 11805                           tblptrl	equ	0xFF6
 11806                           tablat	equ	0xFF5
 11807                           prodh	equ	0xFF4
 11808                           prodl	equ	0xFF3
 11809                           intcon	equ	0xFF2
 11810                           intcon2	equ	0xFF1
 11811                           postinc0	equ	0xFEE
 11812                           fsr0h	equ	0xFEA
 11813                           fsr0l	equ	0xFE9
 11814                           wreg	equ	0xFE8
 11815                           fsr1h	equ	0xFE2
 11816                           fsr1l	equ	0xFE1
 11817                           bsr	equ	0xFE0
 11818                           indf2	equ	0xFDF
 11819                           postinc2	equ	0xFDE
 11820                           postdec2	equ	0xFDD
 11821                           fsr2h	equ	0xFDA
 11822                           fsr2l	equ	0xFD9
 11823                           status	equ	0xFD8
 11824                           
 11825 ;; *************** function i1_mainLoop *****************
 11826 ;; Defined at:
 11827 ;;		line 92 in file "main.c"
 11828 ;; Parameters:    Size  Location     Type
 11829 ;;		None
 11830 ;; Auto vars:     Size  Location     Type
 11831 ;;		None
 11832 ;; Return value:  Size  Location     Type
 11833 ;;		None               void
 11834 ;; Registers used:
 11835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11836 ;; Tracked objects:
 11837 ;;		On entry : 0/0
 11838 ;;		On exit  : 0/0
 11839 ;;		Unchanged: 0/0
 11840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11841 ;;      Params:         0       0       0       0       0       0       0       0       0
 11842 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11843 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11844 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11845 ;;Total ram usage:        2 bytes
 11846 ;; Hardware stack levels used:    1
 11847 ;; Hardware stack levels required when called:    8
 11848 ;; This function calls:
 11849 ;;		i1_lcd_gotoxy
 11850 ;;		i1_lcd_putc
 11851 ;;		i1_Obtener_Distancia
 11852 ;;		i1_Read_LDR
 11853 ;;		i1_sprintf
 11854 ;; This function is called by:
 11855 ;;		_interrupcaoLOW
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859                           	psect	text43
 11860  00536A                     __ptext43:
 11861                           	opt stack 0
 11862  00536A                     i1_mainLoop:
 11863                           	opt stack 15
 11864                           
 11865                           ;main.c: 93: Distancia=Obtener_Distancia();
 11866                           
 11867                           ;incstack = 0
 11868                           ;incstack = 0
 11869  00536A  EC69  F02D         	call	i1_Obtener_Distancia	;wreg free
 11870  00536E  C019  F184         	movff	?i1_Obtener_Distancia,_Distancia
 11871  005372  C01A  F185         	movff	?i1_Obtener_Distancia+1,_Distancia+1
 11872                           
 11873                           ;main.c: 94: LDR_value=Read_LDR();
 11874  005376  EC7F  F027         	call	i1_Read_LDR	;wreg free
 11875  00537A  C049  F183         	movff	?i1_Read_LDR+2,_LDR_value+2
 11876  00537E  C048  F182         	movff	?i1_Read_LDR+1,_LDR_value+1
 11877  005382  C047  F181         	movff	?i1_Read_LDR,_LDR_value
 11878                           
 11879                           ;main.c: 95: lcd_gotoxy(1,1);
 11880  005386  0100               	movlb	0	; () banked
 11881  005388  6F9F               	movwf	??i1_mainLoop& (0+255),b
 11882  00538A  0E01               	movlw	1
 11883  00538C  6E14               	movwf	?i1_lcd_gotoxy,c
 11884  00538E  0100               	movlb	0	; () banked
 11885  005390  519F               	movf	??i1_mainLoop& (0+255),w,b
 11886  005392  0100               	movlb	0	; () banked
 11887  005394  6FA0               	movwf	(??i1_mainLoop+1)& (0+255),b
 11888  005396  0E01               	movlw	1
 11889  005398  6E15               	movwf	?i1_lcd_gotoxy+1,c
 11890  00539A  0100               	movlb	0	; () banked
 11891  00539C  51A0               	movf	(??i1_mainLoop+1)& (0+255),w,b
 11892  00539E  EC14  F02F         	call	i1_lcd_gotoxy	;wreg free
 11893                           
 11894                           ;main.c: 96: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
 11895  0053A2  0101               	movlb	1	; () banked
 11896  0053A4  0E01               	movlw	high _LCD_Buffer
 11897  0053A6  0100               	movlb	0	; () banked
 11898  0053A8  0100               	movlb	0	; () banked
 11899  0053AA  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 11900  0053AC  0101               	movlb	1	; () banked
 11901  0053AE  0E86               	movlw	low _LCD_Buffer
 11902  0053B0  0100               	movlb	0	; () banked
 11903  0053B2  6F71               	movwf	?i1_sprintf& (0+255),b
 11904  0053B4  0E08               	movlw	high STR_1
 11905  0053B6  0100               	movlb	0	; () banked
 11906  0053B8  0100               	movlb	0	; () banked
 11907  0053BA  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 11908  0053BC  0E88               	movlw	low STR_1
 11909  0053BE  0100               	movlb	0	; () banked
 11910  0053C0  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 11911  0053C2  C181  F075         	movff	_LDR_value,?i1_sprintf+4
 11912  0053C6  C182  F076         	movff	_LDR_value+1,?i1_sprintf+5
 11913  0053CA  C183  F077         	movff	_LDR_value+2,?i1_sprintf+6
 11914  0053CE  EC55  F00B         	call	i1_sprintf	;wreg free
 11915                           
 11916                           ;main.c: 97: lcd_putc(LCD_Buffer);
 11917  0053D2  0101               	movlb	1	; () banked
 11918  0053D4  0E01               	movlw	high _LCD_Buffer
 11919  0053D6  6E16               	movwf	?i1_lcd_putc+1,c
 11920  0053D8  0101               	movlb	1	; () banked
 11921  0053DA  0E86               	movlw	low _LCD_Buffer
 11922  0053DC  6E15               	movwf	?i1_lcd_putc,c
 11923  0053DE  EC39  F031         	call	i1_lcd_putc	;wreg free
 11924                           
 11925                           ;main.c: 98: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
 11926  0053E2  0101               	movlb	1	; () banked
 11927  0053E4  0E01               	movlw	high _LCD_Buffer
 11928  0053E6  0100               	movlb	0	; () banked
 11929  0053E8  0100               	movlb	0	; () banked
 11930  0053EA  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 11931  0053EC  0101               	movlb	1	; () banked
 11932  0053EE  0E86               	movlw	low _LCD_Buffer
 11933  0053F0  0100               	movlb	0	; () banked
 11934  0053F2  6F71               	movwf	?i1_sprintf& (0+255),b
 11935  0053F4  0E08               	movlw	high STR_2
 11936  0053F6  0100               	movlb	0	; () banked
 11937  0053F8  0100               	movlb	0	; () banked
 11938  0053FA  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 11939  0053FC  0E76               	movlw	low STR_2
 11940  0053FE  0100               	movlb	0	; () banked
 11941  005400  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 11942  005402  C184  F075         	movff	_Distancia,?i1_sprintf+4
 11943  005406  C185  F076         	movff	_Distancia+1,?i1_sprintf+5
 11944  00540A  EC55  F00B         	call	i1_sprintf	;wreg free
 11945                           
 11946                           ;main.c: 99: lcd_gotoxy(2,1);
 11947  00540E  0100               	movlb	0	; () banked
 11948  005410  6F9F               	movwf	??i1_mainLoop& (0+255),b
 11949  005412  0E02               	movlw	2
 11950  005414  6E14               	movwf	?i1_lcd_gotoxy,c
 11951  005416  0100               	movlb	0	; () banked
 11952  005418  519F               	movf	??i1_mainLoop& (0+255),w,b
 11953  00541A  0100               	movlb	0	; () banked
 11954  00541C  6FA0               	movwf	(??i1_mainLoop+1)& (0+255),b
 11955  00541E  0E01               	movlw	1
 11956  005420  6E15               	movwf	?i1_lcd_gotoxy+1,c
 11957  005422  0100               	movlb	0	; () banked
 11958  005424  51A0               	movf	(??i1_mainLoop+1)& (0+255),w,b
 11959  005426  EC14  F02F         	call	i1_lcd_gotoxy	;wreg free
 11960                           
 11961                           ;main.c: 100: lcd_putc(LCD_Buffer);
 11962  00542A  0101               	movlb	1	; () banked
 11963  00542C  0E01               	movlw	high _LCD_Buffer
 11964  00542E  6E16               	movwf	?i1_lcd_putc+1,c
 11965  005430  0101               	movlb	1	; () banked
 11966  005432  0E86               	movlw	low _LCD_Buffer
 11967  005434  6E15               	movwf	?i1_lcd_putc,c
 11968  005436  EC39  F031         	call	i1_lcd_putc	;wreg free
 11969  00543A  0012               	return	
 11970  00543C                     __end_ofi1_mainLoop:
 11971                           	opt stack 0
 11972                           pclatu	equ	0xFFB
 11973                           pclath	equ	0xFFA
 11974                           tblptru	equ	0xFF8
 11975                           tblptrh	equ	0xFF7
 11976                           tblptrl	equ	0xFF6
 11977                           tablat	equ	0xFF5
 11978                           prodh	equ	0xFF4
 11979                           prodl	equ	0xFF3
 11980                           intcon	equ	0xFF2
 11981                           intcon2	equ	0xFF1
 11982                           postinc0	equ	0xFEE
 11983                           fsr0h	equ	0xFEA
 11984                           fsr0l	equ	0xFE9
 11985                           wreg	equ	0xFE8
 11986                           fsr1h	equ	0xFE2
 11987                           fsr1l	equ	0xFE1
 11988                           bsr	equ	0xFE0
 11989                           indf2	equ	0xFDF
 11990                           postinc2	equ	0xFDE
 11991                           postdec2	equ	0xFDD
 11992                           fsr2h	equ	0xFDA
 11993                           fsr2l	equ	0xFD9
 11994                           status	equ	0xFD8
 11995                           
 11996 ;; *************** function i1_sprintf *****************
 11997 ;; Defined at:
 11998 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;  sprintf         2   17[BANK0 ] PTR unsigned char 
 12001 ;;		 -> LCD_Buffer(32), 
 12002 ;;  sprintf         2   19[BANK0 ] PTR const unsigned char 
 12003 ;;		 -> STR_2(18), STR_1(10), 
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;  sprintf         5   46[BANK0 ] struct .
 12006 ;;  sprintf         4   33[BANK0 ] unsigned long 
 12007 ;;  sprintf         3   57[BANK0 ] unsigned long 
 12008 ;;  sprintf         3   43[BANK0 ] unsigned long 
 12009 ;;  sprintf         3    0        unsigned long 
 12010 ;;  sprintf         3    0        unsigned long 
 12011 ;;  sprintf         2   60[BANK0 ] int 
 12012 ;;  sprintf         2   55[BANK0 ] int 
 12013 ;;  sprintf         2   53[BANK0 ] int 
 12014 ;;  sprintf         2   51[BANK0 ] unsigned short 
 12015 ;;  sprintf         2   41[BANK0 ] PTR void [1]
 12016 ;;		 -> ?_sprintf(2), 
 12017 ;;  sprintf         2   39[BANK0 ] unsigned int 
 12018 ;;  sprintf         2   37[BANK0 ] unsigned int 
 12019 ;;  sprintf         1   62[BANK0 ] char 
 12020 ;;  sprintf         1    0        unsigned char 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  2   17[BANK0 ] int 
 12023 ;; Registers used:
 12024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12030 ;;      Params:         0       7       0       0       0       0       0       0       0
 12031 ;;      Locals:         0      33       0       0       0       0       0       0       0
 12032 ;;      Temps:          0       6       0       0       0       0       0       0       0
 12033 ;;      Totals:         0      46       0       0       0       0       0       0       0
 12034 ;;Total ram usage:       46 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    7
 12037 ;; This function calls:
 12038 ;;		i1_fround
 12039 ;;		i1_scale
 12040 ;;		i1___asftadd
 12041 ;;		i1___asftmul
 12042 ;;		i1___asftsub
 12043 ;;		i1___awdiv
 12044 ;;		i1__div_to_l_
 12045 ;;		i1__tdiv_to_l_
 12046 ;;		i1___ftge
 12047 ;;		i1___ftmul
 12048 ;;		i1___ftneg
 12049 ;;		i1___fttol
 12050 ;;		i1_isdigit
 12051 ;;		i1___lldiv
 12052 ;;		i1___llmod
 12053 ;;		i1___lltoft
 12054 ;;		i1___lwmod
 12055 ;;		i1___wmul
 12056 ;; This function is called by:
 12057 ;;		i1_mainLoop
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           	psect	text44
 12062  0016AA                     __ptext44:
 12063                           	opt stack 0
 12064  0016AA                     i1_sprintf:
 12065                           	opt stack 15
 12066                           
 12067                           ;doprnt.c: 494: va_list ap;
 12068                           ;doprnt.c: 499: signed char c;
 12069                           ;doprnt.c: 501: int width;
 12070                           ;doprnt.c: 504: int prec;
 12071                           ;doprnt.c: 508: unsigned short flag;
 12072                           ;doprnt.c: 515: char d;
 12073                           ;doprnt.c: 516: double fval, integ;
 12074                           ;doprnt.c: 517: int exp;
 12075                           ;doprnt.c: 518: double ival;
 12076                           ;doprnt.c: 519: union {
 12077                           ;doprnt.c: 520: unsigned long _val;
 12078                           ;doprnt.c: 521: struct {
 12079                           ;doprnt.c: 522: const char * _cp;
 12080                           ;doprnt.c: 523: unsigned _len;
 12081                           ;doprnt.c: 524: } _str;
 12082                           ;doprnt.c: 525: } _val;
 12083                           ;doprnt.c: 542: *ap = __va_start();
 12084                           
 12085                           ;incstack = 0
 12086                           ;incstack = 0
 12087  0016AA  0100               	movlb	0	; () banked
 12088  0016AC  0E00               	movlw	high (?i1_sprintf+4)
 12089  0016AE  0100               	movlb	0	; () banked
 12090  0016B0  0100               	movlb	0	; () banked
 12091  0016B2  6F8A               	movwf	(i1sprintf@ap+1)& (0+255),b
 12092  0016B4  0100               	movlb	0	; () banked
 12093  0016B6  0E75               	movlw	low (?i1_sprintf+4)
 12094  0016B8  0100               	movlb	0	; () banked
 12095  0016BA  6F89               	movwf	i1sprintf@ap& (0+255),b
 12096                           
 12097                           ;doprnt.c: 545: while(c = *f++) {
 12098  0016BC  EFF1  F011         	goto	i1l11508
 12099  0016C0                     i1l11184:
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;doprnt.c: 547: if(c != '%')
 12103  0016C0  0100               	movlb	0	; () banked
 12104  0016C2  0100               	movlb	0	; () banked
 12105  0016C4  519E               	movf	i1sprintf@c& (0+255),w,b
 12106  0016C6  0A25               	xorlw	37
 12107  0016C8  B4D8               	btfsc	status,2,c
 12108  0016CA  D00D               	goto	i1l11190
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;doprnt.c: 549: {
 12112                           ;doprnt.c: 550: ((*sp++ = (c)));
 12113  0016CC  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 12114  0016D0  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 12115  0016D4  0100               	movlb	0	; () banked
 12116  0016D6  C09E  FFDF         	movff	i1sprintf@c,indf2
 12117                           
 12118                           ; BSR set to: 0
 12119  0016DA  0100               	movlb	0	; () banked
 12120  0016DC  0100               	movlb	0	; () banked
 12121  0016DE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12122  0016E0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12123                           
 12124                           ;doprnt.c: 551: continue;
 12125  0016E2  EFF1  F011         	goto	i1l11508
 12126  0016E6                     i1l11190:
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;doprnt.c: 552: }
 12130                           ;doprnt.c: 555: width = 0;
 12131  0016E6  0E00               	movlw	0
 12132  0016E8  0100               	movlb	0	; () banked
 12133  0016EA  0100               	movlb	0	; () banked
 12134  0016EC  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 12135  0016EE  0E00               	movlw	0
 12136  0016F0  0100               	movlb	0	; () banked
 12137  0016F2  6F97               	movwf	i1sprintf@width& (0+255),b
 12138                           
 12139                           ;doprnt.c: 557: flag = 0;
 12140  0016F4  0E00               	movlw	0
 12141  0016F6  0100               	movlb	0	; () banked
 12142  0016F8  0100               	movlb	0	; () banked
 12143  0016FA  6F94               	movwf	(i1sprintf@flag+1)& (0+255),b
 12144  0016FC  0E00               	movlw	0
 12145  0016FE  0100               	movlb	0	; () banked
 12146  001700  6F93               	movwf	i1sprintf@flag& (0+255),b
 12147  001702  D007               	goto	i1l11196
 12148  001704                     i1l11192:
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;doprnt.c: 589: flag |= 0x04;
 12152  001704  0100               	movlb	0	; () banked
 12153  001706  0100               	movlb	0	; () banked
 12154  001708  8593               	bsf	i1sprintf@flag& (0+255),2,b
 12155                           
 12156                           ;doprnt.c: 590: f++;
 12157  00170A  0100               	movlb	0	; () banked
 12158  00170C  0100               	movlb	0	; () banked
 12159  00170E  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12160  001710  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12161  001712                     i1l11196:
 12162                           
 12163                           ; BSR set to: 0
 12164  001712  0100               	movlb	0	; () banked
 12165  001714  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12166  001718  0100               	movlb	0	; () banked
 12167  00171A  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12168  00171E  0008               	tblrd		*
 12169  001720  50F5               	movf	tablat,w,c
 12170                           
 12171                           ; Switch size 1, requested type "space"
 12172                           ; Number of cases is 1, Range of values is 48 to 48
 12173                           ; switch strategies available:
 12174                           ; Name         Instructions Cycles
 12175                           ; simple_byte            4     3 (average)
 12176                           ;	Chosen strategy is simple_byte
 12177  001722  0A30               	xorlw	48	; case 48
 12178  001724  B4D8               	btfsc	status,2,c
 12179  001726  D7EE               	goto	i1l11192
 12180                           
 12181                           ; BSR set to: 0
 12182                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 12183                           
 12184                           ; BSR set to: 0
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;doprnt.c: 595: }
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;doprnt.c: 594: break;
 12191  001728  0100               	movlb	0	; () banked
 12192  00172A  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12193  00172E  0100               	movlb	0	; () banked
 12194  001730  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12195  001734  0008               	tblrd		*
 12196  001736  CFF5 F011          	movff	tablat,?i1_isdigit
 12197  00173A  EC7C  F031         	call	i1_isdigit	;wreg free
 12198  00173E  A0D8               	btfss	status,0,c
 12199  001740  D043               	goto	i1l11210
 12200                           
 12201                           ;doprnt.c: 607: width = 0;
 12202  001742  0E00               	movlw	0
 12203  001744  0100               	movlb	0	; () banked
 12204  001746  0100               	movlb	0	; () banked
 12205  001748  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 12206  00174A  0E00               	movlw	0
 12207  00174C  0100               	movlb	0	; () banked
 12208  00174E  6F97               	movwf	i1sprintf@width& (0+255),b
 12209  001750                     i1l11202:
 12210                           
 12211                           ;doprnt.c: 609: width *= 10;
 12212  001750  C097  F021         	movff	i1sprintf@width,?i1___wmul
 12213  001754  C098  F022         	movff	i1sprintf@width+1,?i1___wmul+1
 12214  001758  0E00               	movlw	0
 12215  00175A  6E24               	movwf	?i1___wmul+3,c
 12216  00175C  0E0A               	movlw	10
 12217  00175E  6E23               	movwf	?i1___wmul+2,c
 12218  001760  ECE4  F030         	call	i1___wmul	;wreg free
 12219  001764  C021  F097         	movff	?i1___wmul,i1sprintf@width
 12220  001768  C022  F098         	movff	?i1___wmul+1,i1sprintf@width+1
 12221                           
 12222                           ;doprnt.c: 610: width += *f++ - '0';
 12223  00176C  0100               	movlb	0	; () banked
 12224  00176E  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12225  001772  0100               	movlb	0	; () banked
 12226  001774  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12227  001778  0008               	tblrd		*
 12228  00177A  CFF5 F078          	movff	tablat,??i1_sprintf
 12229  00177E  0ED0               	movlw	208
 12230  001780  0100               	movlb	0	; () banked
 12231  001782  2578               	addwf	??i1_sprintf& (0+255),w,b
 12232  001784  0100               	movlb	0	; () banked
 12233  001786  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12234  001788  0100               	movlb	0	; () banked
 12235  00178A  0100               	movlb	0	; () banked
 12236  00178C  6B7A               	clrf	(??i1_sprintf+2)& (0+255),b
 12237  00178E  0EFF               	movlw	255
 12238  001790  237A               	addwfc	(??i1_sprintf+2)& (0+255),f,b
 12239  001792  0100               	movlb	0	; () banked
 12240  001794  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12241  001796  0100               	movlb	0	; () banked
 12242  001798  0100               	movlb	0	; () banked
 12243  00179A  2797               	addwf	i1sprintf@width& (0+255),f,b
 12244  00179C  0100               	movlb	0	; () banked
 12245  00179E  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 12246  0017A0  0100               	movlb	0	; () banked
 12247  0017A2  0100               	movlb	0	; () banked
 12248  0017A4  2398               	addwfc	(i1sprintf@width+1)& (0+255),f,b
 12249                           
 12250                           ; BSR set to: 0
 12251  0017A6  0100               	movlb	0	; () banked
 12252  0017A8  0100               	movlb	0	; () banked
 12253  0017AA  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12254  0017AC  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 12258  0017AE  0100               	movlb	0	; () banked
 12259  0017B0  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12260  0017B4  0100               	movlb	0	; () banked
 12261  0017B6  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12262  0017BA  0008               	tblrd		*
 12263  0017BC  CFF5 F011          	movff	tablat,?i1_isdigit
 12264  0017C0  EC7C  F031         	call	i1_isdigit	;wreg free
 12265  0017C4  B0D8               	btfsc	status,0,c
 12266  0017C6  D7C4               	goto	i1l11202
 12267  0017C8                     i1l11210:
 12268                           
 12269                           ;doprnt.c: 617: }
 12270                           ;doprnt.c: 620: if(*f == '.') {
 12271  0017C8  0100               	movlb	0	; () banked
 12272  0017CA  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12273  0017CE  0100               	movlb	0	; () banked
 12274  0017D0  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12275  0017D4  0008               	tblrd		*
 12276  0017D6  50F5               	movf	tablat,w,c
 12277  0017D8  0A2E               	xorlw	46
 12278  0017DA  A4D8               	btfss	status,2,c
 12279  0017DC  D03F               	goto	i1l11222
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;doprnt.c: 621: flag |= 0x4000;
 12283  0017DE  0100               	movlb	0	; () banked
 12284  0017E0  0100               	movlb	0	; () banked
 12285  0017E2  8D94               	bsf	(i1sprintf@flag+1)& (0+255),6,b
 12286                           
 12287                           ;doprnt.c: 622: f++;
 12288  0017E4  0100               	movlb	0	; () banked
 12289  0017E6  0100               	movlb	0	; () banked
 12290  0017E8  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12291  0017EA  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;doprnt.c: 629: {
 12295                           ;doprnt.c: 630: prec = 0;
 12296  0017EC  0E00               	movlw	0
 12297  0017EE  0100               	movlb	0	; () banked
 12298  0017F0  0100               	movlb	0	; () banked
 12299  0017F2  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12300  0017F4  0E00               	movlw	0
 12301  0017F6  0100               	movlb	0	; () banked
 12302  0017F8  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12303                           
 12304                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 12305  0017FA  D022               	goto	i1l11220
 12306  0017FC                     i1l11216:
 12307                           
 12308                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 12309  0017FC  C09C  F021         	movff	i1sprintf@prec,?i1___wmul
 12310  001800  C09D  F022         	movff	i1sprintf@prec+1,?i1___wmul+1
 12311  001804  0E00               	movlw	0
 12312  001806  6E24               	movwf	?i1___wmul+3,c
 12313  001808  0E0A               	movlw	10
 12314  00180A  6E23               	movwf	?i1___wmul+2,c
 12315  00180C  ECE4  F030         	call	i1___wmul	;wreg free
 12316  001810  0100               	movlb	0	; () banked
 12317  001812  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12318  001816  0100               	movlb	0	; () banked
 12319  001818  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12320  00181C  0008               	tblrd		*
 12321  00181E  50F5               	movf	tablat,w,c
 12322  001820  2621               	addwf	?i1___wmul,f,c
 12323  001822  0E00               	movlw	0
 12324  001824  2222               	addwfc	?i1___wmul+1,f,c
 12325  001826  0ED0               	movlw	208
 12326  001828  2421               	addwf	?i1___wmul,w,c
 12327  00182A  0100               	movlb	0	; () banked
 12328  00182C  0100               	movlb	0	; () banked
 12329  00182E  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12330  001830  0EFF               	movlw	255
 12331  001832  2022               	addwfc	?i1___wmul+1,w,c
 12332  001834  0100               	movlb	0	; () banked
 12333  001836  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12334                           
 12335                           ; BSR set to: 0
 12336  001838  0100               	movlb	0	; () banked
 12337  00183A  0100               	movlb	0	; () banked
 12338  00183C  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12339  00183E  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12340  001840                     i1l11220:
 12341                           
 12342                           ; BSR set to: 0
 12343  001840  0100               	movlb	0	; () banked
 12344  001842  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12345  001846  0100               	movlb	0	; () banked
 12346  001848  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12347  00184C  0008               	tblrd		*
 12348  00184E  CFF5 F011          	movff	tablat,?i1_isdigit
 12349  001852  EC7C  F031         	call	i1_isdigit	;wreg free
 12350  001856  A0D8               	btfss	status,0,c
 12351  001858  D010               	goto	i1l11230
 12352  00185A  D7D0               	goto	i1l11216
 12353  00185C                     i1l11222:
 12354                           
 12355                           ;doprnt.c: 635: prec = 0;
 12356  00185C  0E00               	movlw	0
 12357  00185E  0100               	movlb	0	; () banked
 12358  001860  0100               	movlb	0	; () banked
 12359  001862  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12360  001864  0E00               	movlw	0
 12361  001866  0100               	movlb	0	; () banked
 12362  001868  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;doprnt.c: 637: flag |= 0x1000;
 12366  00186A  0100               	movlb	0	; () banked
 12367  00186C  0100               	movlb	0	; () banked
 12368  00186E  8994               	bsf	(i1sprintf@flag+1)& (0+255),4,b
 12369  001870  D004               	goto	i1l11230
 12370  001872                     i1l11226:
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;doprnt.c: 672: flag |= 0x400;
 12374  001872  0100               	movlb	0	; () banked
 12375  001874  0100               	movlb	0	; () banked
 12376  001876  8594               	bsf	(i1sprintf@flag+1)& (0+255),2,b
 12377                           
 12378                           ;doprnt.c: 673: break;
 12379  001878  D01E               	goto	i1l11232
 12380  00187A                     i1l11230:
 12381  00187A  0100               	movlb	0	; () banked
 12382  00187C  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12383  001880  0100               	movlb	0	; () banked
 12384  001882  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12385  001886  0100               	movlb	0	; () banked
 12386  001888  0100               	movlb	0	; () banked
 12387  00188A  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12388  00188C  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12389  00188E  0008               	tblrd		*
 12390  001890  0100               	movlb	0	; () banked
 12391  001892  CFF5 F09E          	movff	tablat,i1sprintf@c
 12392  001896  0100               	movlb	0	; () banked
 12393  001898  519E               	movf	i1sprintf@c& (0+255),w,b
 12394                           
 12395                           ; Switch size 1, requested type "space"
 12396                           ; Number of cases is 4, Range of values is 0 to 105
 12397                           ; switch strategies available:
 12398                           ; Name         Instructions Cycles
 12399                           ; simple_byte           13     7 (average)
 12400                           ;	Chosen strategy is simple_byte
 12401  00189A  0A00               	xorlw	0	; case 0
 12402  00189C  B4D8               	btfsc	status,2,c
 12403  00189E  EF03  F012         	goto	i1l11510
 12404  0018A2  0A64               	xorlw	100	; case 100
 12405  0018A4  B4D8               	btfsc	status,2,c
 12406  0018A6  D007               	goto	i1l11232
 12407  0018A8  0A02               	xorlw	2	; case 102
 12408  0018AA  B4D8               	btfsc	status,2,c
 12409  0018AC  D7E2               	goto	i1l11226
 12410  0018AE  0A0F               	xorlw	15	; case 105
 12411  0018B0  A4D8               	btfss	status,2,c
 12412  0018B2  EFF1  F011         	goto	i1l11508
 12413  0018B6                     i1l11232:
 12414                           
 12415                           ; BSR set to: 0
 12416                           ;doprnt.c: 834: if(flag & (0x700)) {
 12417  0018B6  0E07               	movlw	7
 12418  0018B8  0100               	movlb	0	; () banked
 12419  0018BA  0100               	movlb	0	; () banked
 12420  0018BC  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 12421  0018BE  B4D8               	btfsc	status,2,c
 12422  0018C0  D3B6               	goto	i1l11412
 12423                           
 12424                           ; BSR set to: 0
 12425                           ;doprnt.c: 836: if(flag & 0x1000)
 12426  0018C2  0100               	movlb	0	; () banked
 12427  0018C4  0100               	movlb	0	; () banked
 12428  0018C6  A994               	btfss	(i1sprintf@flag+1)& (0+255),4,b
 12429  0018C8  D007               	goto	i1l11238
 12430                           
 12431                           ; BSR set to: 0
 12432                           ;doprnt.c: 838: prec = 6;
 12433  0018CA  0E00               	movlw	0
 12434  0018CC  0100               	movlb	0	; () banked
 12435  0018CE  0100               	movlb	0	; () banked
 12436  0018D0  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12437  0018D2  0E06               	movlw	6
 12438  0018D4  0100               	movlb	0	; () banked
 12439  0018D6  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12440  0018D8                     i1l11238:
 12441                           
 12442                           ; BSR set to: 0
 12443                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12444  0018D8  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 12445  0018DC  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 12446  0018E0  0100               	movlb	0	; () banked
 12447  0018E2  CFDE F099          	movff	postinc2,i1sprintf@fval
 12448  0018E6  0100               	movlb	0	; () banked
 12449  0018E8  CFDE F09A          	movff	postinc2,i1sprintf@fval+1
 12450  0018EC  0100               	movlb	0	; () banked
 12451  0018EE  CFDD F09B          	movff	postdec2,i1sprintf@fval+2
 12452                           
 12453                           ; BSR set to: 0
 12454  0018F2  0E03               	movlw	3
 12455  0018F4  0100               	movlb	0	; () banked
 12456  0018F6  0100               	movlb	0	; () banked
 12457  0018F8  2789               	addwf	i1sprintf@ap& (0+255),f,b
 12458  0018FA  0E00               	movlw	0
 12459  0018FC  0100               	movlb	0	; () banked
 12460  0018FE  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 12461                           
 12462                           ; BSR set to: 0
 12463                           ;doprnt.c: 840: if(fval < 0.0) {
 12464  001900  0100               	movlb	0	; () banked
 12465  001902  0100               	movlb	0	; () banked
 12466  001904  519B               	movf	(i1sprintf@fval+2)& (0+255),w,b
 12467  001906  0A80               	xorlw	128
 12468  001908  0F80               	addlw	128
 12469  00190A  E107               	bnz	i1u1056_25
 12470  00190C  0E00               	movlw	0
 12471  00190E  0100               	movlb	0	; () banked
 12472  001910  5D9A               	subwf	(i1sprintf@fval+1)& (0+255),w,b
 12473  001912  E103               	bnz	i1u1056_25
 12474  001914  0E00               	movlw	0
 12475  001916  0100               	movlb	0	; () banked
 12476  001918  5D99               	subwf	i1sprintf@fval& (0+255),w,b
 12477  00191A                     i1u1056_25:
 12478  00191A  B0D8               	btfsc	status,0,c
 12479  00191C  D012               	goto	i1l11248
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;doprnt.c: 841: fval = -fval;
 12483  00191E  C099  F011         	movff	i1sprintf@fval,?i1___ftneg
 12484  001922  C09A  F012         	movff	i1sprintf@fval+1,?i1___ftneg+1
 12485  001926  C09B  F013         	movff	i1sprintf@fval+2,?i1___ftneg+2
 12486  00192A  EC69  F031         	call	i1___ftneg	;wreg free
 12487  00192E  C013  F09B         	movff	?i1___ftneg+2,i1sprintf@fval+2
 12488  001932  C012  F09A         	movff	?i1___ftneg+1,i1sprintf@fval+1
 12489  001936  C011  F099         	movff	?i1___ftneg,i1sprintf@fval
 12490                           
 12491                           ;doprnt.c: 842: flag |= 0x03;
 12492  00193A  0E03               	movlw	3
 12493  00193C  0100               	movlb	0	; () banked
 12494  00193E  0100               	movlb	0	; () banked
 12495  001940  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 12496  001942                     i1l11248:
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;doprnt.c: 843: }
 12500                           ;doprnt.c: 844: exp = 0;
 12501  001942  0E00               	movlw	0
 12502  001944  0100               	movlb	0	; () banked
 12503  001946  0100               	movlb	0	; () banked
 12504  001948  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12505  00194A  0E00               	movlw	0
 12506  00194C  0100               	movlb	0	; () banked
 12507  00194E  6F95               	movwf	i1sprintf@exp& (0+255),b
 12508                           
 12509                           ; BSR set to: 0
 12510                           ;doprnt.c: 845: if( fval!=0) {
 12511  001950  0E7F               	movlw	127
 12512  001952  0100               	movlb	0	; () banked
 12513  001954  0100               	movlb	0	; () banked
 12514  001956  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 12515  001958  0100               	movlb	0	; () banked
 12516  00195A  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 12517  00195C  0100               	movlb	0	; () banked
 12518  00195E  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 12519  001960  B4D8               	btfsc	status,2,c
 12520  001962  D099               	goto	i1l11276
 12521                           
 12522                           ; BSR set to: 0
 12523                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12524  001964  0E82               	movlw	130
 12525  001966  0100               	movlb	0	; () banked
 12526  001968  6F78               	movwf	??i1_sprintf& (0+255),b
 12527  00196A  0EFF               	movlw	255
 12528  00196C  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12529  00196E  0100               	movlb	0	; () banked
 12530  001970  C099  F07A         	movff	i1sprintf@fval,??i1_sprintf+2
 12531  001974  0100               	movlb	0	; () banked
 12532  001976  C09A  F07B         	movff	i1sprintf@fval+1,??i1_sprintf+3
 12533  00197A  0100               	movlb	0	; () banked
 12534  00197C  C09B  F07C         	movff	i1sprintf@fval+2,??i1_sprintf+4
 12535  001980  0100               	movlb	0	; () banked
 12536  001982  C09C  F07D         	movff	i1sprintf@fval+3,??i1_sprintf+5
 12537  001986  0E10               	movlw	16
 12538  001988  D006               	goto	i1u1058_20
 12539  00198A                     i1u1058_25:
 12540  00198A  0100               	movlb	0	; () banked
 12541  00198C  90D8               	bcf	status,0,c
 12542  00198E  337D               	rrcf	(??i1_sprintf+5)& (0+255),f,b
 12543  001990  337C               	rrcf	(??i1_sprintf+4)& (0+255),f,b
 12544  001992  337B               	rrcf	(??i1_sprintf+3)& (0+255),f,b
 12545  001994  337A               	rrcf	(??i1_sprintf+2)& (0+255),f,b
 12546  001996                     i1u1058_20:
 12547  001996  2EE8               	decfsz	wreg,f,c
 12548  001998  D7F8               	goto	i1u1058_25
 12549  00199A  0100               	movlb	0	; () banked
 12550  00199C  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 12551  00199E  0100               	movlb	0	; () banked
 12552  0019A0  2578               	addwf	??i1_sprintf& (0+255),w,b
 12553  0019A2  0100               	movlb	0	; () banked
 12554  0019A4  0100               	movlb	0	; () banked
 12555  0019A6  6F95               	movwf	i1sprintf@exp& (0+255),b
 12556  0019A8  0100               	movlb	0	; () banked
 12557  0019AA  0100               	movlb	0	; () banked
 12558  0019AC  0E00               	movlw	0
 12559  0019AE  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 12560  0019B0  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;doprnt.c: 847: exp--;
 12564  0019B2  0100               	movlb	0	; () banked
 12565  0019B4  0100               	movlb	0	; () banked
 12566  0019B6  0795               	decf	i1sprintf@exp& (0+255),f,b
 12567  0019B8  A0D8               	btfss	status,0,c
 12568  0019BA  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;doprnt.c: 848: exp *= 3;
 12572  0019BC  C095  F021         	movff	i1sprintf@exp,?i1___wmul
 12573  0019C0  C096  F022         	movff	i1sprintf@exp+1,?i1___wmul+1
 12574  0019C4  0E00               	movlw	0
 12575  0019C6  6E24               	movwf	?i1___wmul+3,c
 12576  0019C8  0E03               	movlw	3
 12577  0019CA  6E23               	movwf	?i1___wmul+2,c
 12578  0019CC  ECE4  F030         	call	i1___wmul	;wreg free
 12579  0019D0  C021  F095         	movff	?i1___wmul,i1sprintf@exp
 12580  0019D4  C022  F096         	movff	?i1___wmul+1,i1sprintf@exp+1
 12581                           
 12582                           ;doprnt.c: 849: exp /= 10;
 12583  0019D8  C095  F018         	movff	i1sprintf@exp,?i1___awdiv
 12584  0019DC  C096  F019         	movff	i1sprintf@exp+1,?i1___awdiv+1
 12585  0019E0  0E00               	movlw	0
 12586  0019E2  6E1B               	movwf	?i1___awdiv+3,c
 12587  0019E4  0E0A               	movlw	10
 12588  0019E6  6E1A               	movwf	?i1___awdiv+2,c
 12589  0019E8  EC12  F02C         	call	i1___awdiv	;wreg free
 12590  0019EC  C018  F095         	movff	?i1___awdiv,i1sprintf@exp
 12591  0019F0  C019  F096         	movff	?i1___awdiv+1,i1sprintf@exp+1
 12592                           
 12593                           ;doprnt.c: 850: if(exp < 0)
 12594  0019F4  0100               	movlb	0	; () banked
 12595  0019F6  0100               	movlb	0	; () banked
 12596  0019F8  AF96               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 12597  0019FA  D005               	goto	i1l11264
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;doprnt.c: 851: exp--;
 12601  0019FC  0100               	movlb	0	; () banked
 12602  0019FE  0100               	movlb	0	; () banked
 12603  001A00  0795               	decf	i1sprintf@exp& (0+255),f,b
 12604  001A02  A0D8               	btfss	status,0,c
 12605  001A04  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12606  001A06                     i1l11264:
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;doprnt.c: 855: integ = scale(-exp);
 12610  001A06  0100               	movlb	0	; () banked
 12611  001A08  0100               	movlb	0	; () banked
 12612  001A0A  5195               	movf	i1sprintf@exp& (0+255),w,b
 12613  001A0C  0800               	sublw	0
 12614  001A0E  6E47               	movwf	?i1_scale,c
 12615  001A10  EC14  F015         	call	i1_scale	;wreg free
 12616  001A14  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 12617  001A18  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 12618  001A1C  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 12619                           
 12620                           ;doprnt.c: 856: integ *= fval;
 12621  001A20  0100               	movlb	0	; () banked
 12622  001A22  0E00               	movlw	high i1sprintf@integ
 12623  001A24  0100               	movlb	0	; () banked
 12624  001A26  0100               	movlb	0	; () banked
 12625  001A28  6F61               	movwf	(?i1___asftmul+1)& (0+255),b
 12626  001A2A  0100               	movlb	0	; () banked
 12627  001A2C  0E8B               	movlw	low i1sprintf@integ
 12628  001A2E  0100               	movlb	0	; () banked
 12629  001A30  6F60               	movwf	?i1___asftmul& (0+255),b
 12630  001A32  C099  F062         	movff	i1sprintf@fval,?i1___asftmul+2
 12631  001A36  C09A  F063         	movff	i1sprintf@fval+1,?i1___asftmul+3
 12632  001A3A  C09B  F064         	movff	i1sprintf@fval+2,?i1___asftmul+4
 12633  001A3E  EC6E  F030         	call	i1___asftmul	;wreg free
 12634                           
 12635                           ;doprnt.c: 857: if(integ < 1.0)
 12636  001A42  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12637  001A46  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12638  001A4A  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12639  001A4E  0E00               	movlw	0
 12640  001A50  6E14               	movwf	?i1___ftge+3,c
 12641  001A52  0E80               	movlw	128
 12642  001A54  6E15               	movwf	?i1___ftge+4,c
 12643  001A56  0E3F               	movlw	63
 12644  001A58  6E16               	movwf	?i1___ftge+5,c
 12645  001A5A  ECCA  F02B         	call	i1___ftge	;wreg free
 12646  001A5E  B0D8               	btfsc	status,0,c
 12647  001A60  D006               	goto	i1l11272
 12648                           
 12649                           ;doprnt.c: 858: exp--;
 12650  001A62  0100               	movlb	0	; () banked
 12651  001A64  0100               	movlb	0	; () banked
 12652  001A66  0795               	decf	i1sprintf@exp& (0+255),f,b
 12653  001A68  A0D8               	btfss	status,0,c
 12654  001A6A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12655  001A6C  D014               	goto	i1l11276
 12656  001A6E                     i1l11272:
 12657                           
 12658                           ;doprnt.c: 859: else if(integ >= 10.0)
 12659  001A6E  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12660  001A72  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12661  001A76  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12662  001A7A  0E00               	movlw	0
 12663  001A7C  6E14               	movwf	?i1___ftge+3,c
 12664  001A7E  0E20               	movlw	32
 12665  001A80  6E15               	movwf	?i1___ftge+4,c
 12666  001A82  0E41               	movlw	65
 12667  001A84  6E16               	movwf	?i1___ftge+5,c
 12668  001A86  ECCA  F02B         	call	i1___ftge	;wreg free
 12669  001A8A  A0D8               	btfss	status,0,c
 12670  001A8C  D004               	goto	i1l11276
 12671                           
 12672                           ;doprnt.c: 860: exp++;
 12673  001A8E  0100               	movlb	0	; () banked
 12674  001A90  0100               	movlb	0	; () banked
 12675  001A92  4B95               	infsnz	i1sprintf@exp& (0+255),f,b
 12676  001A94  2B96               	incf	(i1sprintf@exp+1)& (0+255),f,b
 12677  001A96                     i1l11276:
 12678                           
 12679                           ;doprnt.c: 861: }
 12680                           ;doprnt.c: 1121: if(prec <= 12)
 12681  001A96  0100               	movlb	0	; () banked
 12682  001A98  0100               	movlb	0	; () banked
 12683  001A9A  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12684  001A9C  0A80               	xorlw	128
 12685  001A9E  0F80               	addlw	-128
 12686  001AA0  0E0D               	movlw	13
 12687  001AA2  B4D8               	btfsc	status,2,c
 12688  001AA4  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 12689  001AA6  B0D8               	btfsc	status,0,c
 12690  001AA8  D015               	goto	i1l11280
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;doprnt.c: 1122: fval += fround(prec);
 12694  001AAA  0100               	movlb	0	; () banked
 12695  001AAC  0E00               	movlw	high i1sprintf@fval
 12696  001AAE  0100               	movlb	0	; () banked
 12697  001AB0  0100               	movlb	0	; () banked
 12698  001AB2  6F6D               	movwf	(?i1___asftadd+1)& (0+255),b
 12699  001AB4  0100               	movlb	0	; () banked
 12700  001AB6  0E99               	movlw	low i1sprintf@fval
 12701  001AB8  0100               	movlb	0	; () banked
 12702  001ABA  6F6C               	movwf	?i1___asftadd& (0+255),b
 12703  001ABC  C09C  F047         	movff	i1sprintf@prec,?i1_fround
 12704  001AC0  EC99  F01A         	call	i1_fround	;wreg free
 12705  001AC4  C049  F070         	movff	?i1_fround+2,?i1___asftadd+4
 12706  001AC8  C048  F06F         	movff	?i1_fround+1,?i1___asftadd+3
 12707  001ACC  C047  F06E         	movff	?i1_fround,?i1___asftadd+2
 12708  001AD0  EC8C  F030         	call	i1___asftadd	;wreg free
 12709  001AD4                     i1l11280:
 12710                           
 12711                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12712  001AD4  0100               	movlb	0	; () banked
 12713  001AD6  0100               	movlb	0	; () banked
 12714  001AD8  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12715  001ADA  0A80               	xorlw	128
 12716  001ADC  0F80               	addlw	-128
 12717  001ADE  0E0A               	movlw	10
 12718  001AE0  B4D8               	btfsc	status,2,c
 12719  001AE2  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 12720  001AE4  B0D8               	btfsc	status,0,c
 12721  001AE6  D022               	goto	i1l11288
 12722                           
 12723                           ; BSR set to: 0
 12724  001AE8  0E7F               	movlw	127
 12725  001AEA  0100               	movlb	0	; () banked
 12726  001AEC  0100               	movlb	0	; () banked
 12727  001AEE  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 12728  001AF0  0100               	movlb	0	; () banked
 12729  001AF2  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 12730  001AF4  0100               	movlb	0	; () banked
 12731  001AF6  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 12732  001AF8  B4D8               	btfsc	status,2,c
 12733  001AFA  D067               	goto	i1l11304
 12734                           
 12735                           ; BSR set to: 0
 12736  001AFC  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 12737  001B00  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 12738  001B04  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 12739  001B08  EC6E  F028         	call	i1___fttol	;wreg free
 12740  001B0C  502A               	movf	?i1___fttol+3,w,c
 12741  001B0E  1027               	iorwf	?i1___fttol,w,c
 12742  001B10  1028               	iorwf	?i1___fttol+1,w,c
 12743  001B12  1029               	iorwf	?i1___fttol+2,w,c
 12744  001B14  A4D8               	btfss	status,2,c
 12745  001B16  D059               	goto	i1l11304
 12746  001B18  0100               	movlb	0	; () banked
 12747  001B1A  0100               	movlb	0	; () banked
 12748  001B1C  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12749  001B1E  0A80               	xorlw	128
 12750  001B20  0F80               	addlw	-128
 12751  001B22  0E02               	movlw	2
 12752  001B24  B4D8               	btfsc	status,2,c
 12753  001B26  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 12754  001B28  A0D8               	btfss	status,0,c
 12755  001B2A  D04F               	goto	i1l11304
 12756  001B2C                     i1l11288:
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;doprnt.c: 1129: if(integ < 4.294967296){
 12760  001B2C  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12761  001B30  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12762  001B34  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12763  001B38  0E70               	movlw	112
 12764  001B3A  6E14               	movwf	?i1___ftge+3,c
 12765  001B3C  0E89               	movlw	137
 12766  001B3E  6E15               	movwf	?i1___ftge+4,c
 12767  001B40  0E40               	movlw	64
 12768  001B42  6E16               	movwf	?i1___ftge+5,c
 12769  001B44  ECCA  F02B         	call	i1___ftge	;wreg free
 12770  001B48  B0D8               	btfsc	status,0,c
 12771  001B4A  D003               	goto	i1l11292
 12772                           
 12773                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12774  001B4C  0100               	movlb	0	; () banked
 12775  001B4E  0EF7               	movlw	247
 12776  001B50  D002               	goto	L14
 12777  001B52                     i1l11292:
 12778                           
 12779                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12780  001B52  0100               	movlb	0	; () banked
 12781  001B54  0EF8               	movlw	248
 12782  001B56                     L14:
 12783  001B56  0100               	movlb	0	; () banked
 12784  001B58  2795               	addwf	i1sprintf@exp& (0+255),f,b
 12785  001B5A  0EFF               	movlw	255
 12786  001B5C  0100               	movlb	0	; () banked
 12787  001B5E  2396               	addwfc	(i1sprintf@exp+1)& (0+255),f,b
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;doprnt.c: 1133: }
 12791                           ;doprnt.c: 1134: integ = scale(exp);
 12792                           
 12793                           ; BSR set to: 0
 12794  001B60  C095  F047         	movff	i1sprintf@exp,?i1_scale
 12795  001B64  EC14  F015         	call	i1_scale	;wreg free
 12796  001B68  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 12797  001B6C  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 12798  001B70  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 12799                           
 12800                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 12801  001B74  C099  F011         	movff	i1sprintf@fval,?i1__tdiv_to_l_
 12802  001B78  C09A  F012         	movff	i1sprintf@fval+1,?i1__tdiv_to_l_+1
 12803  001B7C  C09B  F013         	movff	i1sprintf@fval+2,?i1__tdiv_to_l_+2
 12804  001B80  C08B  F014         	movff	i1sprintf@integ,?i1__tdiv_to_l_+3
 12805  001B84  C08C  F015         	movff	i1sprintf@integ+1,?i1__tdiv_to_l_+4
 12806  001B88  C08D  F016         	movff	i1sprintf@integ+2,?i1__tdiv_to_l_+5
 12807  001B8C  ECDD  F022         	call	i1__tdiv_to_l_	;wreg free
 12808  001B90  C014  F084         	movff	?i1__tdiv_to_l_+3,i1_sprintf$566+3
 12809  001B94  C013  F083         	movff	?i1__tdiv_to_l_+2,i1_sprintf$566+2
 12810  001B98  C012  F082         	movff	?i1__tdiv_to_l_+1,i1_sprintf$566+1
 12811  001B9C  C011  F081         	movff	?i1__tdiv_to_l_,i1_sprintf$566
 12812  001BA0  C081  F08E         	movff	i1_sprintf$566,i1sprintf@_val
 12813  001BA4  C082  F08F         	movff	i1_sprintf$566+1,i1sprintf@_val+1
 12814  001BA8  C083  F090         	movff	i1_sprintf$566+2,i1sprintf@_val+2
 12815  001BAC  C084  F091         	movff	i1_sprintf$566+3,i1sprintf@_val+3
 12816                           
 12817                           ;doprnt.c: 1138: fval = 0.0;
 12818  001BB0  0E00               	movlw	0
 12819  001BB2  0100               	movlb	0	; () banked
 12820  001BB4  0100               	movlb	0	; () banked
 12821  001BB6  6F99               	movwf	i1sprintf@fval& (0+255),b
 12822  001BB8  0E00               	movlw	0
 12823  001BBA  0100               	movlb	0	; () banked
 12824  001BBC  0100               	movlb	0	; () banked
 12825  001BBE  6F9A               	movwf	(i1sprintf@fval+1)& (0+255),b
 12826  001BC0  0E00               	movlw	0
 12827  001BC2  0100               	movlb	0	; () banked
 12828  001BC4  0100               	movlb	0	; () banked
 12829  001BC6  6F9B               	movwf	(i1sprintf@fval+2)& (0+255),b
 12830                           
 12831                           ;doprnt.c: 1139: } else {
 12832  001BC8  D02F               	goto	i1l11310
 12833  001BCA                     i1l11304:
 12834                           
 12835                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 12836  001BCA  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 12837  001BCE  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 12838  001BD2  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 12839  001BD6  EC6E  F028         	call	i1___fttol	;wreg free
 12840  001BDA  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 12841  001BDE  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 12842  001BE2  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 12843  001BE6  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 12844                           
 12845                           ;doprnt.c: 1141: fval -= (double)_val._val;
 12846  001BEA  0100               	movlb	0	; () banked
 12847  001BEC  0E00               	movlw	high i1sprintf@fval
 12848  001BEE  6E2E               	movwf	?i1___asftsub+1,c
 12849  001BF0  0100               	movlb	0	; () banked
 12850  001BF2  0E99               	movlw	low i1sprintf@fval
 12851  001BF4  6E2D               	movwf	?i1___asftsub,c
 12852  001BF6  C08E  F019         	movff	i1sprintf@_val,?i1___lltoft
 12853  001BFA  C08F  F01A         	movff	i1sprintf@_val+1,?i1___lltoft+1
 12854  001BFE  C090  F01B         	movff	i1sprintf@_val+2,?i1___lltoft+2
 12855  001C02  C091  F01C         	movff	i1sprintf@_val+3,?i1___lltoft+3
 12856  001C06  EC86  F02E         	call	i1___lltoft	;wreg free
 12857  001C0A  C01B  F031         	movff	?i1___lltoft+2,?i1___asftsub+4
 12858  001C0E  C01A  F030         	movff	?i1___lltoft+1,?i1___asftsub+3
 12859  001C12  C019  F02F         	movff	?i1___lltoft,?i1___asftsub+2
 12860  001C16  EC50  F030         	call	i1___asftsub	;wreg free
 12861                           
 12862                           ;doprnt.c: 1142: exp = 0;
 12863  001C1A  0E00               	movlw	0
 12864  001C1C  0100               	movlb	0	; () banked
 12865  001C1E  0100               	movlb	0	; () banked
 12866  001C20  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12867  001C22  0E00               	movlw	0
 12868  001C24  0100               	movlb	0	; () banked
 12869  001C26  6F95               	movwf	i1sprintf@exp& (0+255),b
 12870  001C28                     i1l11310:
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;doprnt.c: 1143: }
 12874                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12875  001C28  0100               	movlb	0	; () banked
 12876  001C2A  6F78               	movwf	??i1_sprintf& (0+255),b
 12877  001C2C  0E01               	movlw	1
 12878  001C2E  0100               	movlb	0	; () banked
 12879  001C30  0100               	movlb	0	; () banked
 12880  001C32  6F9E               	movwf	i1sprintf@c& (0+255),b
 12881  001C34  0100               	movlb	0	; () banked
 12882  001C36  5178               	movf	??i1_sprintf& (0+255),w,b
 12883  001C38                     
 12884                           ; BSR set to: 0
 12885  001C38  0100               	movlb	0	; () banked
 12886  001C3A  0100               	movlb	0	; () banked
 12887  001C3C  519E               	movf	i1sprintf@c& (0+255),w,b
 12888  001C3E  0A0A               	xorlw	10
 12889  001C40  B4D8               	btfsc	status,2,c
 12890  001C42  D021               	goto	i1l11324
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 12894                           
 12895                           ; BSR set to: 0
 12896                           
 12897                           ; BSR set to: 0
 12898  001C44  0100               	movlb	0	; () banked
 12899  001C46  0100               	movlb	0	; () banked
 12900  001C48  519E               	movf	i1sprintf@c& (0+255),w,b
 12901  001C4A  0D04               	mullw	4
 12902  001C4C  0E00               	movlw	low _dpowers
 12903  001C4E  24F3               	addwf	prodl,w,c
 12904  001C50  6EF6               	movwf	tblptrl,c
 12905  001C52  0E08               	movlw	high _dpowers
 12906  001C54  20F4               	addwfc	prodh,w,c
 12907  001C56  6EF7               	movwf	tblptrh,c
 12908  001C58  0009               	tblrd		*+
 12909  001C5A  50F5               	movf	tablat,w,c
 12910  001C5C  0100               	movlb	0	; () banked
 12911  001C5E  0100               	movlb	0	; () banked
 12912  001C60  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 12913  001C62  0009               	tblrd		*+
 12914  001C64  50F5               	movf	tablat,w,c
 12915  001C66  0100               	movlb	0	; () banked
 12916  001C68  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 12917  001C6A  0009               	tblrd		*+
 12918  001C6C  50F5               	movf	tablat,w,c
 12919  001C6E  0100               	movlb	0	; () banked
 12920  001C70  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 12921  001C72  0009               	tblrd		*+
 12922  001C74  50F5               	movf	tablat,w,c
 12923  001C76  0100               	movlb	0	; () banked
 12924  001C78  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 12925  001C7A  A0D8               	btfss	status,0,c
 12926  001C7C  D004               	goto	i1l11324
 12927                           
 12928                           ; BSR set to: 0
 12929                           
 12930                           ; BSR set to: 0
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;doprnt.c: 1147: break;
 12934  001C7E  0100               	movlb	0	; () banked
 12935  001C80  0100               	movlb	0	; () banked
 12936  001C82  2B9E               	incf	i1sprintf@c& (0+255),f,b
 12937  001C84  D7D9               	goto	L15
 12938  001C86                     i1l11324:
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;doprnt.c: 1151: width -= prec + c + exp;
 12942  001C86  0100               	movlb	0	; () banked
 12943  001C88  C09E  F078         	movff	i1sprintf@c,??i1_sprintf
 12944  001C8C  0100               	movlb	0	; () banked
 12945  001C8E  6B79               	clrf	(??i1_sprintf+1)& (0+255),b
 12946  001C90  BF78               	btfsc	??i1_sprintf& (0+255),7,b
 12947  001C92  0779               	decf	(??i1_sprintf+1)& (0+255),f,b
 12948  001C94  0100               	movlb	0	; () banked
 12949  001C96  0100               	movlb	0	; () banked
 12950  001C98  519C               	movf	i1sprintf@prec& (0+255),w,b
 12951  001C9A  0100               	movlb	0	; () banked
 12952  001C9C  2778               	addwf	??i1_sprintf& (0+255),f,b
 12953  001C9E  0100               	movlb	0	; () banked
 12954  001CA0  0100               	movlb	0	; () banked
 12955  001CA2  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12956  001CA4  0100               	movlb	0	; () banked
 12957  001CA6  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 12958  001CA8  0100               	movlb	0	; () banked
 12959  001CAA  0100               	movlb	0	; () banked
 12960  001CAC  5195               	movf	i1sprintf@exp& (0+255),w,b
 12961  001CAE  0100               	movlb	0	; () banked
 12962  001CB0  2778               	addwf	??i1_sprintf& (0+255),f,b
 12963  001CB2  0100               	movlb	0	; () banked
 12964  001CB4  0100               	movlb	0	; () banked
 12965  001CB6  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12966  001CB8  0100               	movlb	0	; () banked
 12967  001CBA  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 12968  001CBC  0100               	movlb	0	; () banked
 12969  001CBE  5178               	movf	??i1_sprintf& (0+255),w,b
 12970  001CC0  0100               	movlb	0	; () banked
 12971  001CC2  0100               	movlb	0	; () banked
 12972  001CC4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 12973  001CC6  0100               	movlb	0	; () banked
 12974  001CC8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12975  001CCA  0100               	movlb	0	; () banked
 12976  001CCC  0100               	movlb	0	; () banked
 12977  001CCE  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 12978                           
 12979                           ;doprnt.c: 1152: if(
 12980                           ;doprnt.c: 1156: prec)
 12981  001CD0  0100               	movlb	0	; () banked
 12982  001CD2  0100               	movlb	0	; () banked
 12983  001CD4  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12984  001CD6  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 12985  001CD8  B4D8               	btfsc	status,2,c
 12986  001CDA  D005               	goto	i1l11328
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;doprnt.c: 1157: width--;
 12990  001CDC  0100               	movlb	0	; () banked
 12991  001CDE  0100               	movlb	0	; () banked
 12992  001CE0  0797               	decf	i1sprintf@width& (0+255),f,b
 12993  001CE2  A0D8               	btfss	status,0,c
 12994  001CE4  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12995  001CE6                     i1l11328:
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;doprnt.c: 1158: if(flag & 0x03)
 12999  001CE6  0E03               	movlw	3
 13000  001CE8  0100               	movlb	0	; () banked
 13001  001CEA  0100               	movlb	0	; () banked
 13002  001CEC  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13003  001CEE  0100               	movlb	0	; () banked
 13004  001CF0  6F78               	movwf	??i1_sprintf& (0+255),b
 13005  001CF2  0E00               	movlw	0
 13006  001CF4  0100               	movlb	0	; () banked
 13007  001CF6  0100               	movlb	0	; () banked
 13008  001CF8  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13009  001CFA  0100               	movlb	0	; () banked
 13010  001CFC  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13011  001CFE  0100               	movlb	0	; () banked
 13012  001D00  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13013  001D02  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13014  001D04  B4D8               	btfsc	status,2,c
 13015  001D06  D005               	goto	i1l11332
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;doprnt.c: 1159: width--;
 13019  001D08  0100               	movlb	0	; () banked
 13020  001D0A  0100               	movlb	0	; () banked
 13021  001D0C  0797               	decf	i1sprintf@width& (0+255),f,b
 13022  001D0E  A0D8               	btfss	status,0,c
 13023  001D10  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13024  001D12                     i1l11332:
 13025                           
 13026                           ; BSR set to: 0
 13027                           ;doprnt.c: 1162: if(flag & 0x04) {
 13028  001D12  0100               	movlb	0	; () banked
 13029  001D14  0100               	movlb	0	; () banked
 13030  001D16  B593               	btfsc	i1sprintf@flag& (0+255),2,b
 13031  001D18  D010               	goto	i1l11342
 13032  001D1A  D029               	goto	i1l11350
 13033  001D1C                     i1l11336:
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;doprnt.c: 1176: ((*sp++ = ('0')));
 13037  001D1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13038  001D20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13039  001D24  0E30               	movlw	48
 13040  001D26  6EDF               	movwf	indf2,c
 13041                           
 13042                           ; BSR set to: 0
 13043  001D28  0100               	movlb	0	; () banked
 13044  001D2A  0100               	movlb	0	; () banked
 13045  001D2C  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13046  001D2E  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;doprnt.c: 1177: width--;
 13050  001D30  0100               	movlb	0	; () banked
 13051  001D32  0100               	movlb	0	; () banked
 13052  001D34  0797               	decf	i1sprintf@width& (0+255),f,b
 13053  001D36  A0D8               	btfss	status,0,c
 13054  001D38  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13055  001D3A                     i1l11342:
 13056                           
 13057                           ; BSR set to: 0
 13058  001D3A  0100               	movlb	0	; () banked
 13059  001D3C  0100               	movlb	0	; () banked
 13060  001D3E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13061  001D40  0A80               	xorlw	128
 13062  001D42  0F80               	addlw	-128
 13063  001D44  0E01               	movlw	1
 13064  001D46  B4D8               	btfsc	status,2,c
 13065  001D48  5D97               	subwf	i1sprintf@width& (0+255),w,b
 13066  001D4A  A0D8               	btfss	status,0,c
 13067  001D4C  D070               	goto	i1l11366
 13068  001D4E  D7E6               	goto	i1l11336
 13069  001D50                     i1l11344:
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;doprnt.c: 1188: ((*sp++ = (' ')));
 13073  001D50  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13074  001D54  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13075  001D58  0E20               	movlw	32
 13076  001D5A  6EDF               	movwf	indf2,c
 13077                           
 13078                           ; BSR set to: 0
 13079  001D5C  0100               	movlb	0	; () banked
 13080  001D5E  0100               	movlb	0	; () banked
 13081  001D60  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13082  001D62  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;doprnt.c: 1189: width--;
 13086  001D64  0100               	movlb	0	; () banked
 13087  001D66  0100               	movlb	0	; () banked
 13088  001D68  0797               	decf	i1sprintf@width& (0+255),f,b
 13089  001D6A  A0D8               	btfss	status,0,c
 13090  001D6C  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13091  001D6E                     i1l11350:
 13092                           
 13093                           ; BSR set to: 0
 13094  001D6E  0100               	movlb	0	; () banked
 13095  001D70  0100               	movlb	0	; () banked
 13096  001D72  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13097  001D74  0A80               	xorlw	128
 13098  001D76  0F80               	addlw	-128
 13099  001D78  0E01               	movlw	1
 13100  001D7A  B4D8               	btfsc	status,2,c
 13101  001D7C  5D97               	subwf	i1sprintf@width& (0+255),w,b
 13102  001D7E  B0D8               	btfsc	status,0,c
 13103  001D80  D7E7               	goto	i1l11344
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;doprnt.c: 1190: }
 13107                           ;doprnt.c: 1195: if(flag & 0x03)
 13108                           
 13109                           ; BSR set to: 0
 13110  001D82  0E03               	movlw	3
 13111  001D84  0100               	movlb	0	; () banked
 13112  001D86  0100               	movlb	0	; () banked
 13113  001D88  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13114  001D8A  0100               	movlb	0	; () banked
 13115  001D8C  6F78               	movwf	??i1_sprintf& (0+255),b
 13116  001D8E  0E00               	movlw	0
 13117  001D90  0100               	movlb	0	; () banked
 13118  001D92  0100               	movlb	0	; () banked
 13119  001D94  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13120  001D96  0100               	movlb	0	; () banked
 13121  001D98  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13122  001D9A  0100               	movlb	0	; () banked
 13123  001D9C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13124  001D9E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13125  001DA0  B4D8               	btfsc	status,2,c
 13126  001DA2  D045               	goto	i1l11366
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;doprnt.c: 1197: ((*sp++ = ('-')));
 13130  001DA4  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13131  001DA8  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13132  001DAC  0E2D               	movlw	45
 13133  001DAE  D03A               	goto	L16
 13134  001DB0                     i1l11358:
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;doprnt.c: 1207: {
 13138                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
 13139  001DB0  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13140  001DB4  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13141  001DB8  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13142  001DBC  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13143  001DC0  0100               	movlb	0	; () banked
 13144  001DC2  0100               	movlb	0	; () banked
 13145  001DC4  519E               	movf	i1sprintf@c& (0+255),w,b
 13146  001DC6  0D04               	mullw	4
 13147  001DC8  0E00               	movlw	low _dpowers
 13148  001DCA  24F3               	addwf	prodl,w,c
 13149  001DCC  6EF6               	movwf	tblptrl,c
 13150  001DCE  0E08               	movlw	high _dpowers
 13151  001DD0  20F4               	addwfc	prodh,w,c
 13152  001DD2  6EF7               	movwf	tblptrh,c
 13153  001DD4  0009               	tblrd		*+
 13154  001DD6  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13155  001DDA  0009               	tblrd		*+
 13156  001DDC  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13157  001DE0  0009               	tblrd		*+
 13158  001DE2  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13159  001DE6  000A               	tblrd		*-
 13160  001DE8  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13161  001DEC  ECE6  F02C         	call	i1___lldiv	;wreg free
 13162  001DF0  C011  F085         	movff	?i1___lldiv,i1sprintf@vd
 13163  001DF4  C012  F086         	movff	?i1___lldiv+1,i1sprintf@vd+1
 13164                           
 13165                           ;doprnt.c: 1209: vd %= 10;
 13166  001DF8  C085  F011         	movff	i1sprintf@vd,?i1___lwmod
 13167  001DFC  C086  F012         	movff	i1sprintf@vd+1,?i1___lwmod+1
 13168  001E00  0E00               	movlw	0
 13169  001E02  6E14               	movwf	?i1___lwmod+3,c
 13170  001E04  0E0A               	movlw	10
 13171  001E06  6E13               	movwf	?i1___lwmod+2,c
 13172  001E08  EC68  F02F         	call	i1___lwmod	;wreg free
 13173  001E0C  C011  F085         	movff	?i1___lwmod,i1sprintf@vd
 13174  001E10  C012  F086         	movff	?i1___lwmod+1,i1sprintf@vd+1
 13175                           
 13176                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
 13177  001E14  0100               	movlb	0	; () banked
 13178  001E16  0100               	movlb	0	; () banked
 13179  001E18  5185               	movf	i1sprintf@vd& (0+255),w,b
 13180  001E1A  0F30               	addlw	48
 13181  001E1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13182  001E20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13183  001E24                     L16:
 13184  001E24  6EDF               	movwf	indf2,c
 13185                           
 13186                           ; BSR set to: 0
 13187  001E26  0100               	movlb	0	; () banked
 13188  001E28  0100               	movlb	0	; () banked
 13189  001E2A  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13190  001E2C  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13191  001E2E                     i1l11366:
 13192                           
 13193                           ; BSR set to: 0
 13194  001E2E  0100               	movlb	0	; () banked
 13195  001E30  0100               	movlb	0	; () banked
 13196  001E32  079E               	decf	i1sprintf@c& (0+255),f,b
 13197  001E34  0100               	movlb	0	; () banked
 13198  001E36  299E               	incf	i1sprintf@c& (0+255),w,b
 13199  001E38  B4D8               	btfsc	status,2,c
 13200  001E3A  D010               	goto	i1l11374
 13201  001E3C  D7B9               	goto	i1l11358
 13202  001E3E                     i1l11368:
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;doprnt.c: 1215: ((*sp++ = ('0')));
 13206  001E3E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13207  001E42  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13208  001E46  0E30               	movlw	48
 13209  001E48  6EDF               	movwf	indf2,c
 13210                           
 13211                           ; BSR set to: 0
 13212  001E4A  0100               	movlb	0	; () banked
 13213  001E4C  0100               	movlb	0	; () banked
 13214  001E4E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13215  001E50  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13216                           
 13217                           ; BSR set to: 0
 13218                           ;doprnt.c: 1216: exp--;
 13219  001E52  0100               	movlb	0	; () banked
 13220  001E54  0100               	movlb	0	; () banked
 13221  001E56  0795               	decf	i1sprintf@exp& (0+255),f,b
 13222  001E58  A0D8               	btfss	status,0,c
 13223  001E5A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 13224  001E5C                     i1l11374:
 13225                           
 13226                           ; BSR set to: 0
 13227  001E5C  0100               	movlb	0	; () banked
 13228  001E5E  0100               	movlb	0	; () banked
 13229  001E60  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 13230  001E62  0A80               	xorlw	128
 13231  001E64  0F80               	addlw	-128
 13232  001E66  0E01               	movlw	1
 13233  001E68  B4D8               	btfsc	status,2,c
 13234  001E6A  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 13235  001E6C  B0D8               	btfsc	status,0,c
 13236  001E6E  D7E7               	goto	i1l11368
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;doprnt.c: 1217: }
 13240                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13241                           
 13242                           ; BSR set to: 0
 13243  001E70  0100               	movlb	0	; () banked
 13244  001E72  0100               	movlb	0	; () banked
 13245  001E74  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13246  001E76  0A80               	xorlw	128
 13247  001E78  0F80               	addlw	-128
 13248  001E7A  0E09               	movlw	9
 13249  001E7C  B4D8               	btfsc	status,2,c
 13250  001E7E  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13251  001E80  A0D8               	btfss	status,0,c
 13252  001E82  D009               	goto	i1l330
 13253                           
 13254                           ; BSR set to: 0
 13255                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13256  001E84  0100               	movlb	0	; () banked
 13257  001E86  6F78               	movwf	??i1_sprintf& (0+255),b
 13258  001E88  0E08               	movlw	8
 13259  001E8A  0100               	movlb	0	; () banked
 13260  001E8C  0100               	movlb	0	; () banked
 13261  001E8E  6F9E               	movwf	i1sprintf@c& (0+255),b
 13262  001E90  0100               	movlb	0	; () banked
 13263  001E92  5178               	movf	??i1_sprintf& (0+255),w,b
 13264  001E94  D002               	goto	i1l11380
 13265  001E96                     i1l330:
 13266                           
 13267                           ; BSR set to: 0
 13268                           ;doprnt.c: 1220: else
 13269                           ;doprnt.c: 1221: c = prec;
 13270  001E96  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 13271  001E9A                     i1l11380:
 13272                           
 13273                           ; BSR set to: 0
 13274                           ;doprnt.c: 1222: prec -= c;
 13275  001E9A  0100               	movlb	0	; () banked
 13276  001E9C  0100               	movlb	0	; () banked
 13277  001E9E  519E               	movf	i1sprintf@c& (0+255),w,b
 13278  001EA0  0100               	movlb	0	; () banked
 13279  001EA2  0100               	movlb	0	; () banked
 13280  001EA4  5F9C               	subwf	i1sprintf@prec& (0+255),f,b
 13281  001EA6  0E00               	movlw	0
 13282  001EA8  0100               	movlb	0	; () banked
 13283  001EAA  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13284  001EAC  0EFF               	movlw	255
 13285  001EAE  0100               	movlb	0	; () banked
 13286  001EB0  0100               	movlb	0	; () banked
 13287  001EB2  5B9D               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;doprnt.c: 1226: if(c)
 13291  001EB4  0100               	movlb	0	; () banked
 13292  001EB6  0100               	movlb	0	; () banked
 13293  001EB8  519E               	movf	i1sprintf@c& (0+255),w,b
 13294  001EBA  B4D8               	btfsc	status,2,c
 13295  001EBC  D00A               	goto	i1l11388
 13296                           
 13297                           ; BSR set to: 0
 13298                           ;doprnt.c: 1228: ((*sp++ = ('.')));
 13299  001EBE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13300  001EC2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13301  001EC6  0E2E               	movlw	46
 13302  001EC8  6EDF               	movwf	indf2,c
 13303                           
 13304                           ; BSR set to: 0
 13305  001ECA  0100               	movlb	0	; () banked
 13306  001ECC  0100               	movlb	0	; () banked
 13307  001ECE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13308  001ED0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13309  001ED2                     i1l11388:
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 13313  001ED2  C09E  F047         	movff	i1sprintf@c,?i1_scale
 13314  001ED6  EC14  F015         	call	i1_scale	;wreg free
 13315  001EDA  C049  F080         	movff	?i1_scale+2,i1_sprintf$1836+2
 13316  001EDE  C048  F07F         	movff	?i1_scale+1,i1_sprintf$1836+1
 13317  001EE2  C047  F07E         	movff	?i1_scale,i1_sprintf$1836
 13318                           
 13319                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 13320  001EE6  C099  F039         	movff	i1sprintf@fval,?i1___ftmul+3
 13321  001EEA  C09A  F03A         	movff	i1sprintf@fval+1,?i1___ftmul+4
 13322  001EEE  C09B  F03B         	movff	i1sprintf@fval+2,?i1___ftmul+5
 13323  001EF2  C07E  F036         	movff	i1_sprintf$1836,?i1___ftmul
 13324  001EF6  C07F  F037         	movff	i1_sprintf$1836+1,?i1___ftmul+1
 13325  001EFA  C080  F038         	movff	i1_sprintf$1836+2,?i1___ftmul+2
 13326  001EFE  EC84  F024         	call	i1___ftmul	;wreg free
 13327  001F02  C038  F029         	movff	?i1___ftmul+2,?i1___fttol+2
 13328  001F06  C037  F028         	movff	?i1___ftmul+1,?i1___fttol+1
 13329  001F0A  C036  F027         	movff	?i1___ftmul,?i1___fttol
 13330  001F0E  EC6E  F028         	call	i1___fttol	;wreg free
 13331  001F12  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 13332  001F16  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 13333  001F1A  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 13334  001F1E  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 13335                           
 13336                           ;doprnt.c: 1235: while(c--) {
 13337  001F22  D067               	goto	i1l11402
 13338  001F24                     i1l11392:
 13339                           
 13340                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
 13341  001F24  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13342  001F28  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13343  001F2C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13344  001F30  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13345  001F34  0100               	movlb	0	; () banked
 13346  001F36  0100               	movlb	0	; () banked
 13347  001F38  519E               	movf	i1sprintf@c& (0+255),w,b
 13348  001F3A  0D04               	mullw	4
 13349  001F3C  0E00               	movlw	low _dpowers
 13350  001F3E  24F3               	addwf	prodl,w,c
 13351  001F40  6EF6               	movwf	tblptrl,c
 13352  001F42  0E08               	movlw	high _dpowers
 13353  001F44  20F4               	addwfc	prodh,w,c
 13354  001F46  6EF7               	movwf	tblptrh,c
 13355  001F48  0009               	tblrd		*+
 13356  001F4A  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13357  001F4E  0009               	tblrd		*+
 13358  001F50  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13359  001F54  0009               	tblrd		*+
 13360  001F56  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13361  001F5A  000A               	tblrd		*-
 13362  001F5C  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13363  001F60  ECE6  F02C         	call	i1___lldiv	;wreg free
 13364  001F64  C011  F087         	movff	?i1___lldiv,i1sprintf@vd_568
 13365  001F68  C012  F088         	movff	?i1___lldiv+1,i1sprintf@vd_568+1
 13366                           
 13367                           ;doprnt.c: 1237: vd %= 10;
 13368  001F6C  C087  F011         	movff	i1sprintf@vd_568,?i1___lwmod
 13369  001F70  C088  F012         	movff	i1sprintf@vd_568+1,?i1___lwmod+1
 13370  001F74  0E00               	movlw	0
 13371  001F76  6E14               	movwf	?i1___lwmod+3,c
 13372  001F78  0E0A               	movlw	10
 13373  001F7A  6E13               	movwf	?i1___lwmod+2,c
 13374  001F7C  EC68  F02F         	call	i1___lwmod	;wreg free
 13375  001F80  C011  F087         	movff	?i1___lwmod,i1sprintf@vd_568
 13376  001F84  C012  F088         	movff	?i1___lwmod+1,i1sprintf@vd_568+1
 13377                           
 13378                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
 13379  001F88  0100               	movlb	0	; () banked
 13380  001F8A  0100               	movlb	0	; () banked
 13381  001F8C  5187               	movf	i1sprintf@vd_568& (0+255),w,b
 13382  001F8E  0F30               	addlw	48
 13383  001F90  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13384  001F94  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13385  001F98  6EDF               	movwf	indf2,c
 13386                           
 13387                           ; BSR set to: 0
 13388  001F9A  0100               	movlb	0	; () banked
 13389  001F9C  0100               	movlb	0	; () banked
 13390  001F9E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13391  001FA0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;doprnt.c: 1239: _val._val %= dpowers[c];
 13395  001FA2  C08E  F01F         	movff	i1sprintf@_val,?i1___llmod
 13396  001FA6  C08F  F020         	movff	i1sprintf@_val+1,?i1___llmod+1
 13397  001FAA  C090  F021         	movff	i1sprintf@_val+2,?i1___llmod+2
 13398  001FAE  C091  F022         	movff	i1sprintf@_val+3,?i1___llmod+3
 13399  001FB2  0100               	movlb	0	; () banked
 13400  001FB4  0100               	movlb	0	; () banked
 13401  001FB6  519E               	movf	i1sprintf@c& (0+255),w,b
 13402  001FB8  0D04               	mullw	4
 13403  001FBA  0E00               	movlw	low _dpowers
 13404  001FBC  24F3               	addwf	prodl,w,c
 13405  001FBE  6EF6               	movwf	tblptrl,c
 13406  001FC0  0E08               	movlw	high _dpowers
 13407  001FC2  20F4               	addwfc	prodh,w,c
 13408  001FC4  6EF7               	movwf	tblptrh,c
 13409  001FC6  0009               	tblrd		*+
 13410  001FC8  CFF5 F023          	movff	tablat,?i1___llmod+4
 13411  001FCC  0009               	tblrd		*+
 13412  001FCE  CFF5 F024          	movff	tablat,?i1___llmod+5
 13413  001FD2  0009               	tblrd		*+
 13414  001FD4  CFF5 F025          	movff	tablat,?i1___llmod+6
 13415  001FD8  000A               	tblrd		*-
 13416  001FDA  CFF5 F026          	movff	tablat,?i1___llmod+7
 13417  001FDE  EC1F  F02E         	call	i1___llmod	;wreg free
 13418  001FE2  C022  F091         	movff	?i1___llmod+3,i1sprintf@_val+3
 13419  001FE6  C021  F090         	movff	?i1___llmod+2,i1sprintf@_val+2
 13420  001FEA  C020  F08F         	movff	?i1___llmod+1,i1sprintf@_val+1
 13421  001FEE  C01F  F08E         	movff	?i1___llmod,i1sprintf@_val
 13422  001FF2                     i1l11402:
 13423  001FF2  0100               	movlb	0	; () banked
 13424  001FF4  0100               	movlb	0	; () banked
 13425  001FF6  079E               	decf	i1sprintf@c& (0+255),f,b
 13426  001FF8  0100               	movlb	0	; () banked
 13427  001FFA  299E               	incf	i1sprintf@c& (0+255),w,b
 13428  001FFC  B4D8               	btfsc	status,2,c
 13429  001FFE  D010               	goto	i1l11410
 13430  002000  D791               	goto	i1l11392
 13431  002002                     i1l11404:
 13432                           
 13433                           ; BSR set to: 0
 13434                           ;doprnt.c: 1243: ((*sp++ = ('0')));
 13435  002002  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13436  002006  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13437  00200A  0E30               	movlw	48
 13438  00200C  6EDF               	movwf	indf2,c
 13439                           
 13440                           ; BSR set to: 0
 13441  00200E  0100               	movlb	0	; () banked
 13442  002010  0100               	movlb	0	; () banked
 13443  002012  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13444  002014  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;doprnt.c: 1244: prec--;
 13448  002016  0100               	movlb	0	; () banked
 13449  002018  0100               	movlb	0	; () banked
 13450  00201A  079C               	decf	i1sprintf@prec& (0+255),f,b
 13451  00201C  A0D8               	btfss	status,0,c
 13452  00201E  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13453  002020                     i1l11410:
 13454                           
 13455                           ; BSR set to: 0
 13456  002020  0100               	movlb	0	; () banked
 13457  002022  0100               	movlb	0	; () banked
 13458  002024  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13459  002026  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 13460  002028  B4D8               	btfsc	status,2,c
 13461  00202A  D1DB               	goto	i1l11508
 13462  00202C  D7EA               	goto	i1l11404
 13463  00202E                     i1l11412:
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;doprnt.c: 1253: }
 13467                           ;doprnt.c: 1260: {
 13468                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13469  00202E  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 13470  002032  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 13471  002036  0100               	movlb	0	; () banked
 13472  002038  CFDE F08E          	movff	postinc2,i1sprintf@_val
 13473  00203C  0100               	movlb	0	; () banked
 13474  00203E  CFDD F08F          	movff	postdec2,i1sprintf@_val+1
 13475  002042  0100               	movlb	0	; () banked
 13476  002044  0E00               	movlw	0
 13477  002046  0100               	movlb	0	; () banked
 13478  002048  BF8F               	btfsc	(i1sprintf@_val+1)& (0+255),7,b
 13479  00204A  0EFF               	movlw	-1
 13480  00204C  0100               	movlb	0	; () banked
 13481  00204E  6F90               	movwf	(i1sprintf@_val+2)& (0+255),b
 13482  002050  0100               	movlb	0	; () banked
 13483  002052  6F91               	movwf	(i1sprintf@_val+3)& (0+255),b
 13484                           
 13485                           ; BSR set to: 0
 13486  002054  0E02               	movlw	2
 13487  002056  0100               	movlb	0	; () banked
 13488  002058  0100               	movlb	0	; () banked
 13489  00205A  2789               	addwf	i1sprintf@ap& (0+255),f,b
 13490  00205C  0E00               	movlw	0
 13491  00205E  0100               	movlb	0	; () banked
 13492  002060  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;doprnt.c: 1268: if((long)_val._val < 0) {
 13496  002062  0100               	movlb	0	; () banked
 13497  002064  0100               	movlb	0	; () banked
 13498  002066  AF91               	btfss	(i1sprintf@_val+3)& (0+255),7,b
 13499  002068  D014               	goto	i1l11422
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;doprnt.c: 1269: flag |= 0x03;
 13503  00206A  0E03               	movlw	3
 13504  00206C  0100               	movlb	0	; () banked
 13505  00206E  0100               	movlb	0	; () banked
 13506  002070  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;doprnt.c: 1270: _val._val = -_val._val;
 13510  002072  0100               	movlb	0	; () banked
 13511  002074  0100               	movlb	0	; () banked
 13512  002076  1F91               	comf	(i1sprintf@_val+3)& (0+255),f,b
 13513  002078  0100               	movlb	0	; () banked
 13514  00207A  1F90               	comf	(i1sprintf@_val+2)& (0+255),f,b
 13515  00207C  0100               	movlb	0	; () banked
 13516  00207E  1F8F               	comf	(i1sprintf@_val+1)& (0+255),f,b
 13517  002080  0100               	movlb	0	; () banked
 13518  002082  6D8E               	negf	i1sprintf@_val& (0+255),b
 13519  002084  0E00               	movlw	0
 13520  002086  0100               	movlb	0	; () banked
 13521  002088  238F               	addwfc	(i1sprintf@_val+1)& (0+255),f,b
 13522  00208A  0100               	movlb	0	; () banked
 13523  00208C  2390               	addwfc	(i1sprintf@_val+2)& (0+255),f,b
 13524  00208E  0100               	movlb	0	; () banked
 13525  002090  2391               	addwfc	(i1sprintf@_val+3)& (0+255),f,b
 13526  002092                     i1l11422:
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;doprnt.c: 1271: }
 13530                           ;doprnt.c: 1273: }
 13531                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
 13532  002092  0100               	movlb	0	; () banked
 13533  002094  0100               	movlb	0	; () banked
 13534  002096  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13535  002098  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 13536  00209A  A4D8               	btfss	status,2,c
 13537  00209C  D00C               	goto	i1l11428
 13538                           
 13539                           ; BSR set to: 0
 13540  00209E  0100               	movlb	0	; () banked
 13541  0020A0  0100               	movlb	0	; () banked
 13542  0020A2  5191               	movf	(i1sprintf@_val+3)& (0+255),w,b
 13543  0020A4  118E               	iorwf	i1sprintf@_val& (0+255),w,b
 13544  0020A6  118F               	iorwf	(i1sprintf@_val+1)& (0+255),w,b
 13545  0020A8  1190               	iorwf	(i1sprintf@_val+2)& (0+255),w,b
 13546  0020AA  A4D8               	btfss	status,2,c
 13547  0020AC  D004               	goto	i1l11428
 13548                           
 13549                           ; BSR set to: 0
 13550                           ;doprnt.c: 1298: prec++;
 13551  0020AE  0100               	movlb	0	; () banked
 13552  0020B0  0100               	movlb	0	; () banked
 13553  0020B2  4B9C               	infsnz	i1sprintf@prec& (0+255),f,b
 13554  0020B4  2B9D               	incf	(i1sprintf@prec+1)& (0+255),f,b
 13555  0020B6                     i1l11428:
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13559  0020B6  0100               	movlb	0	; () banked
 13560  0020B8  6F78               	movwf	??i1_sprintf& (0+255),b
 13561  0020BA  0E01               	movlw	1
 13562  0020BC  0100               	movlb	0	; () banked
 13563  0020BE  0100               	movlb	0	; () banked
 13564  0020C0  6F9E               	movwf	i1sprintf@c& (0+255),b
 13565  0020C2  0100               	movlb	0	; () banked
 13566  0020C4  5178               	movf	??i1_sprintf& (0+255),w,b
 13567  0020C6                     
 13568                           ; BSR set to: 0
 13569  0020C6  0100               	movlb	0	; () banked
 13570  0020C8  0100               	movlb	0	; () banked
 13571  0020CA  519E               	movf	i1sprintf@c& (0+255),w,b
 13572  0020CC  0A0A               	xorlw	10
 13573  0020CE  B4D8               	btfsc	status,2,c
 13574  0020D0  D021               	goto	i1l11442
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 13578                           
 13579                           ; BSR set to: 0
 13580                           
 13581                           ; BSR set to: 0
 13582  0020D2  0100               	movlb	0	; () banked
 13583  0020D4  0100               	movlb	0	; () banked
 13584  0020D6  519E               	movf	i1sprintf@c& (0+255),w,b
 13585  0020D8  0D04               	mullw	4
 13586  0020DA  0E00               	movlw	low _dpowers
 13587  0020DC  24F3               	addwf	prodl,w,c
 13588  0020DE  6EF6               	movwf	tblptrl,c
 13589  0020E0  0E08               	movlw	high _dpowers
 13590  0020E2  20F4               	addwfc	prodh,w,c
 13591  0020E4  6EF7               	movwf	tblptrh,c
 13592  0020E6  0009               	tblrd		*+
 13593  0020E8  50F5               	movf	tablat,w,c
 13594  0020EA  0100               	movlb	0	; () banked
 13595  0020EC  0100               	movlb	0	; () banked
 13596  0020EE  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 13597  0020F0  0009               	tblrd		*+
 13598  0020F2  50F5               	movf	tablat,w,c
 13599  0020F4  0100               	movlb	0	; () banked
 13600  0020F6  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 13601  0020F8  0009               	tblrd		*+
 13602  0020FA  50F5               	movf	tablat,w,c
 13603  0020FC  0100               	movlb	0	; () banked
 13604  0020FE  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 13605  002100  0009               	tblrd		*+
 13606  002102  50F5               	movf	tablat,w,c
 13607  002104  0100               	movlb	0	; () banked
 13608  002106  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 13609  002108  A0D8               	btfss	status,0,c
 13610  00210A  D004               	goto	i1l11442
 13611                           
 13612                           ; BSR set to: 0
 13613                           
 13614                           ; BSR set to: 0
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;doprnt.c: 1314: break;
 13618  00210C  0100               	movlb	0	; () banked
 13619  00210E  0100               	movlb	0	; () banked
 13620  002110  2B9E               	incf	i1sprintf@c& (0+255),f,b
 13621  002112  D7D9               	goto	L17
 13622  002114                     i1l11442:
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;doprnt.c: 1346: if(c < prec)
 13626  002114  0E80               	movlw	128
 13627  002116  0100               	movlb	0	; () banked
 13628  002118  0100               	movlb	0	; () banked
 13629  00211A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13630  00211C  0E7F               	movlw	127
 13631  00211E  6F78               	movwf	??i1_sprintf& (0+255),b
 13632  002120  0100               	movlb	0	; () banked
 13633  002122  0100               	movlb	0	; () banked
 13634  002124  519C               	movf	i1sprintf@prec& (0+255),w,b
 13635  002126  0100               	movlb	0	; () banked
 13636  002128  0100               	movlb	0	; () banked
 13637  00212A  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 13638  00212C  0100               	movlb	0	; () banked
 13639  00212E  0100               	movlb	0	; () banked
 13640  002130  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13641  002132  0A80               	xorlw	128
 13642  002134  0100               	movlb	0	; () banked
 13643  002136  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13644  002138  B0D8               	btfsc	status,0,c
 13645  00213A  D003               	goto	i1l11446
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;doprnt.c: 1347: c = prec;
 13649  00213C  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 13650  002140  D020               	goto	i1l11450
 13651  002142                     i1l11446:
 13652                           
 13653                           ; BSR set to: 0
 13654                           ;doprnt.c: 1348: else if(prec < c)
 13655  002142  0100               	movlb	0	; () banked
 13656  002144  0100               	movlb	0	; () banked
 13657  002146  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13658  002148  0A80               	xorlw	128
 13659  00214A  0100               	movlb	0	; () banked
 13660  00214C  6F78               	movwf	??i1_sprintf& (0+255),b
 13661  00214E  0100               	movlb	0	; () banked
 13662  002150  0100               	movlb	0	; () banked
 13663  002152  519E               	movf	i1sprintf@c& (0+255),w,b
 13664  002154  0100               	movlb	0	; () banked
 13665  002156  0100               	movlb	0	; () banked
 13666  002158  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13667  00215A  0E80               	movlw	128
 13668  00215C  0100               	movlb	0	; () banked
 13669  00215E  0100               	movlb	0	; () banked
 13670  002160  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13671  002162  0E7F               	movlw	127
 13672  002164  0100               	movlb	0	; () banked
 13673  002166  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13674  002168  B0D8               	btfsc	status,0,c
 13675  00216A  D00B               	goto	i1l11450
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;doprnt.c: 1349: prec = c;
 13679  00216C  0100               	movlb	0	; () banked
 13680  00216E  0100               	movlb	0	; () banked
 13681  002170  519E               	movf	i1sprintf@c& (0+255),w,b
 13682  002172  0100               	movlb	0	; () banked
 13683  002174  0100               	movlb	0	; () banked
 13684  002176  6F9C               	movwf	i1sprintf@prec& (0+255),b
 13685  002178  0100               	movlb	0	; () banked
 13686  00217A  6B9D               	clrf	(i1sprintf@prec+1)& (0+255),b
 13687  00217C  0100               	movlb	0	; () banked
 13688  00217E  BF9C               	btfsc	i1sprintf@prec& (0+255),7,b
 13689  002180  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13690  002182                     i1l11450:
 13691                           
 13692                           ; BSR set to: 0
 13693                           ;doprnt.c: 1352: if(width && flag & 0x03)
 13694  002182  0100               	movlb	0	; () banked
 13695  002184  0100               	movlb	0	; () banked
 13696  002186  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13697  002188  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13698  00218A  B4D8               	btfsc	status,2,c
 13699  00218C  D016               	goto	i1l11456
 13700                           
 13701                           ; BSR set to: 0
 13702  00218E  0E03               	movlw	3
 13703  002190  0100               	movlb	0	; () banked
 13704  002192  0100               	movlb	0	; () banked
 13705  002194  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13706  002196  0100               	movlb	0	; () banked
 13707  002198  6F78               	movwf	??i1_sprintf& (0+255),b
 13708  00219A  0E00               	movlw	0
 13709  00219C  0100               	movlb	0	; () banked
 13710  00219E  0100               	movlb	0	; () banked
 13711  0021A0  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13712  0021A2  0100               	movlb	0	; () banked
 13713  0021A4  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13714  0021A6  0100               	movlb	0	; () banked
 13715  0021A8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13716  0021AA  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13717  0021AC  B4D8               	btfsc	status,2,c
 13718  0021AE  D005               	goto	i1l11456
 13719                           
 13720                           ; BSR set to: 0
 13721                           ;doprnt.c: 1353: width--;
 13722  0021B0  0100               	movlb	0	; () banked
 13723  0021B2  0100               	movlb	0	; () banked
 13724  0021B4  0797               	decf	i1sprintf@width& (0+255),f,b
 13725  0021B6  A0D8               	btfss	status,0,c
 13726  0021B8  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13727  0021BA                     i1l11456:
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;doprnt.c: 1355: if(flag & 0x4000) {
 13731  0021BA  0100               	movlb	0	; () banked
 13732  0021BC  0100               	movlb	0	; () banked
 13733  0021BE  AD94               	btfss	(i1sprintf@flag+1)& (0+255),6,b
 13734  0021C0  D028               	goto	i1l11464
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;doprnt.c: 1356: if(width > prec)
 13738  0021C2  0100               	movlb	0	; () banked
 13739  0021C4  0100               	movlb	0	; () banked
 13740  0021C6  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13741  0021C8  0A80               	xorlw	128
 13742  0021CA  0100               	movlb	0	; () banked
 13743  0021CC  6F78               	movwf	??i1_sprintf& (0+255),b
 13744  0021CE  0100               	movlb	0	; () banked
 13745  0021D0  0100               	movlb	0	; () banked
 13746  0021D2  5197               	movf	i1sprintf@width& (0+255),w,b
 13747  0021D4  0100               	movlb	0	; () banked
 13748  0021D6  0100               	movlb	0	; () banked
 13749  0021D8  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13750  0021DA  0100               	movlb	0	; () banked
 13751  0021DC  0100               	movlb	0	; () banked
 13752  0021DE  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13753  0021E0  0A80               	xorlw	128
 13754  0021E2  0100               	movlb	0	; () banked
 13755  0021E4  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13756  0021E6  B0D8               	btfsc	status,0,c
 13757  0021E8  D00D               	goto	i1l11462
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;doprnt.c: 1357: width -= prec;
 13761  0021EA  0100               	movlb	0	; () banked
 13762  0021EC  0100               	movlb	0	; () banked
 13763  0021EE  519C               	movf	i1sprintf@prec& (0+255),w,b
 13764  0021F0  0100               	movlb	0	; () banked
 13765  0021F2  0100               	movlb	0	; () banked
 13766  0021F4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 13767  0021F6  0100               	movlb	0	; () banked
 13768  0021F8  0100               	movlb	0	; () banked
 13769  0021FA  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13770  0021FC  0100               	movlb	0	; () banked
 13771  0021FE  0100               	movlb	0	; () banked
 13772  002200  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 13773  002202  D007               	goto	i1l11464
 13774  002204                     i1l11462:
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;doprnt.c: 1358: else
 13778                           ;doprnt.c: 1359: width = 0;
 13779  002204  0E00               	movlw	0
 13780  002206  0100               	movlb	0	; () banked
 13781  002208  0100               	movlb	0	; () banked
 13782  00220A  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13783  00220C  0E00               	movlw	0
 13784  00220E  0100               	movlb	0	; () banked
 13785  002210  6F97               	movwf	i1sprintf@width& (0+255),b
 13786  002212                     i1l11464:
 13787                           
 13788                           ; BSR set to: 0
 13789                           ;doprnt.c: 1360: }
 13790                           ;doprnt.c: 1388: if(width > c)
 13791  002212  0E80               	movlw	128
 13792  002214  0100               	movlb	0	; () banked
 13793  002216  0100               	movlb	0	; () banked
 13794  002218  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13795  00221A  0E7F               	movlw	127
 13796  00221C  6F78               	movwf	??i1_sprintf& (0+255),b
 13797  00221E  0100               	movlb	0	; () banked
 13798  002220  0100               	movlb	0	; () banked
 13799  002222  5197               	movf	i1sprintf@width& (0+255),w,b
 13800  002224  0100               	movlb	0	; () banked
 13801  002226  0100               	movlb	0	; () banked
 13802  002228  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 13803  00222A  0100               	movlb	0	; () banked
 13804  00222C  0100               	movlb	0	; () banked
 13805  00222E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13806  002230  0A80               	xorlw	128
 13807  002232  0100               	movlb	0	; () banked
 13808  002234  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13809  002236  B0D8               	btfsc	status,0,c
 13810  002238  D00E               	goto	i1l11468
 13811                           
 13812                           ; BSR set to: 0
 13813                           ;doprnt.c: 1389: width -= c;
 13814  00223A  0100               	movlb	0	; () banked
 13815  00223C  0100               	movlb	0	; () banked
 13816  00223E  519E               	movf	i1sprintf@c& (0+255),w,b
 13817  002240  0100               	movlb	0	; () banked
 13818  002242  0100               	movlb	0	; () banked
 13819  002244  5F97               	subwf	i1sprintf@width& (0+255),f,b
 13820  002246  0E00               	movlw	0
 13821  002248  0100               	movlb	0	; () banked
 13822  00224A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13823  00224C  0EFF               	movlw	255
 13824  00224E  0100               	movlb	0	; () banked
 13825  002250  0100               	movlb	0	; () banked
 13826  002252  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 13827  002254  D007               	goto	i1l11470
 13828  002256                     i1l11468:
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;doprnt.c: 1390: else
 13832                           ;doprnt.c: 1391: width = 0;
 13833  002256  0E00               	movlw	0
 13834  002258  0100               	movlb	0	; () banked
 13835  00225A  0100               	movlb	0	; () banked
 13836  00225C  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13837  00225E  0E00               	movlw	0
 13838  002260  0100               	movlb	0	; () banked
 13839  002262  6F97               	movwf	i1sprintf@width& (0+255),b
 13840  002264                     i1l11470:
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;doprnt.c: 1394: if(flag & 0x04) {
 13844  002264  0100               	movlb	0	; () banked
 13845  002266  0100               	movlb	0	; () banked
 13846  002268  A593               	btfss	i1sprintf@flag& (0+255),2,b
 13847  00226A  D031               	goto	i1l11486
 13848                           
 13849                           ; BSR set to: 0
 13850                           ;doprnt.c: 1399: if(flag & 0x03)
 13851  00226C  0E03               	movlw	3
 13852  00226E  0100               	movlb	0	; () banked
 13853  002270  0100               	movlb	0	; () banked
 13854  002272  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13855  002274  0100               	movlb	0	; () banked
 13856  002276  6F78               	movwf	??i1_sprintf& (0+255),b
 13857  002278  0E00               	movlw	0
 13858  00227A  0100               	movlb	0	; () banked
 13859  00227C  0100               	movlb	0	; () banked
 13860  00227E  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13861  002280  0100               	movlb	0	; () banked
 13862  002282  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13863  002284  0100               	movlb	0	; () banked
 13864  002286  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13865  002288  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13866  00228A  B4D8               	btfsc	status,2,c
 13867  00228C  D00A               	goto	i1l11478
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;doprnt.c: 1400: ((*sp++ = ('-')));
 13871  00228E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13872  002292  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13873  002296  0E2D               	movlw	45
 13874  002298  6EDF               	movwf	indf2,c
 13875                           
 13876                           ; BSR set to: 0
 13877  00229A  0100               	movlb	0	; () banked
 13878  00229C  0100               	movlb	0	; () banked
 13879  00229E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13880  0022A0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13881  0022A2                     i1l11478:
 13882                           
 13883                           ; BSR set to: 0
 13884                           ;doprnt.c: 1422: if(width)
 13885  0022A2  0100               	movlb	0	; () banked
 13886  0022A4  0100               	movlb	0	; () banked
 13887  0022A6  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13888  0022A8  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13889  0022AA  B4D8               	btfsc	status,2,c
 13890  0022AC  D08F               	goto	i1l11506
 13891                           
 13892                           ; BSR set to: 0
 13893                           ;doprnt.c: 1424: ((*sp++ = ('0')));
 13894                           
 13895                           ; BSR set to: 0
 13896                           
 13897                           ;doprnt.c: 1423: do
 13898  0022AE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13899  0022B2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13900  0022B6  0E30               	movlw	48
 13901  0022B8  6EDF               	movwf	indf2,c
 13902                           
 13903                           ; BSR set to: 0
 13904  0022BA  0100               	movlb	0	; () banked
 13905  0022BC  0100               	movlb	0	; () banked
 13906  0022BE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13907  0022C0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;doprnt.c: 1425: while(--width);
 13911  0022C2  0100               	movlb	0	; () banked
 13912  0022C4  0100               	movlb	0	; () banked
 13913  0022C6  0797               	decf	i1sprintf@width& (0+255),f,b
 13914  0022C8  A0D8               	btfss	status,0,c
 13915  0022CA  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13916  0022CC  D7EB               	goto	L19
 13917  0022CE                     i1l11486:
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;doprnt.c: 1429: {
 13921                           ;doprnt.c: 1431: if(width
 13922                           ;doprnt.c: 1435: )
 13923  0022CE  0100               	movlb	0	; () banked
 13924  0022D0  0100               	movlb	0	; () banked
 13925  0022D2  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13926  0022D4  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13927  0022D6  B4D8               	btfsc	status,2,c
 13928  0022D8  D014               	goto	i1l11494
 13929  0022DA                     i1l11488:
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;doprnt.c: 1437: ((*sp++ = (' ')));
 13933  0022DA  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13934  0022DE  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13935  0022E2  0E20               	movlw	32
 13936  0022E4  6EDF               	movwf	indf2,c
 13937                           
 13938                           ; BSR set to: 0
 13939  0022E6  0100               	movlb	0	; () banked
 13940  0022E8  0100               	movlb	0	; () banked
 13941  0022EA  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13942  0022EC  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13943                           
 13944                           ; BSR set to: 0
 13945                           ;doprnt.c: 1438: while(--width);
 13946  0022EE  0100               	movlb	0	; () banked
 13947  0022F0  0100               	movlb	0	; () banked
 13948  0022F2  0797               	decf	i1sprintf@width& (0+255),f,b
 13949  0022F4  A0D8               	btfss	status,0,c
 13950  0022F6  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13951  0022F8  0100               	movlb	0	; () banked
 13952  0022FA  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13953  0022FC  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13954  0022FE  A4D8               	btfss	status,2,c
 13955  002300  D7EC               	goto	i1l11488
 13956  002302                     i1l11494:
 13957                           
 13958                           ; BSR set to: 0
 13959                           ;doprnt.c: 1445: if(flag & 0x03)
 13960  002302  0E03               	movlw	3
 13961  002304  0100               	movlb	0	; () banked
 13962  002306  0100               	movlb	0	; () banked
 13963  002308  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13964  00230A  0100               	movlb	0	; () banked
 13965  00230C  6F78               	movwf	??i1_sprintf& (0+255),b
 13966  00230E  0E00               	movlw	0
 13967  002310  0100               	movlb	0	; () banked
 13968  002312  0100               	movlb	0	; () banked
 13969  002314  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13970  002316  0100               	movlb	0	; () banked
 13971  002318  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13972  00231A  0100               	movlb	0	; () banked
 13973  00231C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13974  00231E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13975  002320  B4D8               	btfsc	status,2,c
 13976  002322  D054               	goto	i1l11506
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 13980  002324  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13981  002328  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13982  00232C  0E2D               	movlw	45
 13983  00232E  6EDF               	movwf	indf2,c
 13984  002330  D049               	goto	L18
 13985  002332                     i1l11500:
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;doprnt.c: 1485: {
 13989                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 13990  002332  0100               	movlb	0	; () banked
 13991  002334  C09C  F078         	movff	i1sprintf@prec,??i1_sprintf
 13992  002338  0100               	movlb	0	; () banked
 13993  00233A  C09D  F079         	movff	i1sprintf@prec+1,??i1_sprintf+1
 13994  00233E  0100               	movlb	0	; () banked
 13995  002340  90D8               	bcf	status,0,c
 13996  002342  3778               	rlcf	??i1_sprintf& (0+255),f,b
 13997  002344  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 13998  002346  0100               	movlb	0	; () banked
 13999  002348  90D8               	bcf	status,0,c
 14000  00234A  3778               	rlcf	??i1_sprintf& (0+255),f,b
 14001  00234C  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 14002  00234E  0E00               	movlw	low _dpowers
 14003  002350  0100               	movlb	0	; () banked
 14004  002352  2578               	addwf	??i1_sprintf& (0+255),w,b
 14005  002354  6EF6               	movwf	tblptrl,c
 14006  002356  0E08               	movlw	high _dpowers
 14007  002358  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 14008  00235A  6EF7               	movwf	tblptrh,c
 14009  00235C  0009               	tblrd		*+
 14010  00235E  CFF5 F015          	movff	tablat,?i1___lldiv+4
 14011  002362  0009               	tblrd		*+
 14012  002364  CFF5 F016          	movff	tablat,?i1___lldiv+5
 14013  002368  0009               	tblrd		*+
 14014  00236A  CFF5 F017          	movff	tablat,?i1___lldiv+6
 14015  00236E  000A               	tblrd		*-
 14016  002370  CFF5 F018          	movff	tablat,?i1___lldiv+7
 14017  002374  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 14018  002378  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 14019  00237C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 14020  002380  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 14021  002384  ECE6  F02C         	call	i1___lldiv	;wreg free
 14022  002388  C014  F022         	movff	?i1___lldiv+3,?i1___llmod+3
 14023  00238C  C013  F021         	movff	?i1___lldiv+2,?i1___llmod+2
 14024  002390  C012  F020         	movff	?i1___lldiv+1,?i1___llmod+1
 14025  002394  C011  F01F         	movff	?i1___lldiv,?i1___llmod
 14026  002398  0E0A               	movlw	10
 14027  00239A  6E23               	movwf	?i1___llmod+4,c
 14028  00239C  0E00               	movlw	0
 14029  00239E  6E24               	movwf	?i1___llmod+5,c
 14030  0023A0  0E00               	movlw	0
 14031  0023A2  6E25               	movwf	?i1___llmod+6,c
 14032  0023A4  0E00               	movlw	0
 14033  0023A6  6E26               	movwf	?i1___llmod+7,c
 14034  0023A8  EC1F  F02E         	call	i1___llmod	;wreg free
 14035  0023AC  501F               	movf	?i1___llmod,w,c
 14036  0023AE  0F30               	addlw	48
 14037  0023B0  0100               	movlb	0	; () banked
 14038  0023B2  0100               	movlb	0	; () banked
 14039  0023B4  6F9E               	movwf	i1sprintf@c& (0+255),b
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;doprnt.c: 1530: }
 14043                           ;doprnt.c: 1531: ((*sp++ = (c)));
 14044  0023B6  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 14045  0023BA  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 14046  0023BE  0100               	movlb	0	; () banked
 14047  0023C0  C09E  FFDF         	movff	i1sprintf@c,indf2
 14048  0023C4                     L18:
 14049                           
 14050                           ; BSR set to: 0
 14051  0023C4  0100               	movlb	0	; () banked
 14052  0023C6  0100               	movlb	0	; () banked
 14053  0023C8  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 14054  0023CA  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 14055  0023CC                     i1l11506:
 14056                           
 14057                           ; BSR set to: 0
 14058  0023CC  0100               	movlb	0	; () banked
 14059  0023CE  0100               	movlb	0	; () banked
 14060  0023D0  079C               	decf	i1sprintf@prec& (0+255),f,b
 14061  0023D2  A0D8               	btfss	status,0,c
 14062  0023D4  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 14063  0023D6  0100               	movlb	0	; () banked
 14064  0023D8  299C               	incf	i1sprintf@prec& (0+255),w,b
 14065  0023DA  B4D8               	btfsc	status,2,c
 14066  0023DC  299D               	incf	(i1sprintf@prec+1)& (0+255),w,b
 14067  0023DE  A4D8               	btfss	status,2,c
 14068  0023E0  D7A8               	goto	i1l11500
 14069  0023E2                     i1l11508:
 14070                           
 14071                           ; BSR set to: 0
 14072  0023E2  0100               	movlb	0	; () banked
 14073  0023E4  C073  FFF6         	movff	i1sprintf@f,tblptrl
 14074  0023E8  0100               	movlb	0	; () banked
 14075  0023EA  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 14076  0023EE  0100               	movlb	0	; () banked
 14077  0023F0  0100               	movlb	0	; () banked
 14078  0023F2  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 14079  0023F4  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 14080  0023F6  0008               	tblrd		*
 14081  0023F8  0100               	movlb	0	; () banked
 14082  0023FA  CFF5 F09E          	movff	tablat,i1sprintf@c
 14083  0023FE  0100               	movlb	0	; () banked
 14084  002400  679E               	tstfsz	i1sprintf@c& (0+255),b
 14085  002402  EF60  F00B         	goto	i1l11184
 14086  002406                     i1l11510:
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;doprnt.c: 1545: *sp = 0;
 14090  002406  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 14091  00240A  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 14092  00240E  0E00               	movlw	0
 14093  002410  6EDF               	movwf	indf2,c
 14094                           
 14095                           ; BSR set to: 0
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;doprnt.c: 1547: return 0;
 14099                           ;	Return value of i1_sprintf is never used
 14100  002412  0012               	return	
 14101  002414                     __end_ofi1_sprintf:
 14102                           	opt stack 0
 14103                           pclatu	equ	0xFFB
 14104                           pclath	equ	0xFFA
 14105                           tblptru	equ	0xFF8
 14106                           tblptrh	equ	0xFF7
 14107                           tblptrl	equ	0xFF6
 14108                           tablat	equ	0xFF5
 14109                           prodh	equ	0xFF4
 14110                           prodl	equ	0xFF3
 14111                           intcon	equ	0xFF2
 14112                           intcon2	equ	0xFF1
 14113                           postinc0	equ	0xFEE
 14114                           fsr0h	equ	0xFEA
 14115                           fsr0l	equ	0xFE9
 14116                           wreg	equ	0xFE8
 14117                           fsr1h	equ	0xFE2
 14118                           fsr1l	equ	0xFE1
 14119                           bsr	equ	0xFE0
 14120                           indf2	equ	0xFDF
 14121                           postinc2	equ	0xFDE
 14122                           postdec2	equ	0xFDD
 14123                           fsr2h	equ	0xFDA
 14124                           fsr2l	equ	0xFD9
 14125                           status	equ	0xFD8
 14126                           
 14127 ;; *************** function i1___lwmod *****************
 14128 ;; Defined at:
 14129 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;  __lwmod         2   16[COMRAM] unsigned int 
 14132 ;;  __lwmod         2   18[COMRAM] unsigned int 
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;  __lwmod         1   21[COMRAM] unsigned char 
 14135 ;; Return value:  Size  Location     Type
 14136 ;;                  2   16[COMRAM] unsigned int 
 14137 ;; Registers used:
 14138 ;;		wreg, status,2, status,0
 14139 ;; Tracked objects:
 14140 ;;		On entry : 0/0
 14141 ;;		On exit  : 0/0
 14142 ;;		Unchanged: 0/0
 14143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14144 ;;      Params:         4       0       0       0       0       0       0       0       0
 14145 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14146 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14147 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14148 ;;Total ram usage:        6 bytes
 14149 ;; Hardware stack levels used:    1
 14150 ;; Hardware stack levels required when called:    3
 14151 ;; This function calls:
 14152 ;;		Nothing
 14153 ;; This function is called by:
 14154 ;;		i1_sprintf
 14155 ;; This function uses a non-reentrant model
 14156 ;;
 14157                           
 14158                           	psect	text45
 14159  005ED0                     __ptext45:
 14160                           	opt stack 0
 14161  005ED0                     i1___lwmod:
 14162                           	opt stack 18
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;incstack = 0
 14166                           ;incstack = 0
 14167  005ED0  5014               	movf	i1___lwmod@divisor+1,w,c
 14168  005ED2  1013               	iorwf	i1___lwmod@divisor,w,c
 14169  005ED4  B4D8               	btfsc	status,2,c
 14170  005ED6  D01A               	goto	i1l922
 14171  005ED8  6E15               	movwf	??i1___lwmod& (0+255),c
 14172  005EDA  0E01               	movlw	1
 14173  005EDC  6E16               	movwf	i1___lwmod@counter,c
 14174  005EDE  5015               	movf	??i1___lwmod& (0+255),w,c
 14175  005EE0  D004               	goto	i1l9664
 14176  005EE2                     i1l9662:
 14177  005EE2  90D8               	bcf	status,0,c
 14178  005EE4  3613               	rlcf	i1___lwmod@divisor,f,c
 14179  005EE6  3614               	rlcf	i1___lwmod@divisor+1,f,c
 14180  005EE8  2A16               	incf	i1___lwmod@counter,f,c
 14181  005EEA                     i1l9664:
 14182  005EEA  AE14               	btfss	i1___lwmod@divisor+1,7,c
 14183  005EEC  D7FA               	goto	i1l9662
 14184  005EEE                     i1l9666:
 14185  005EEE  5013               	movf	i1___lwmod@divisor,w,c
 14186  005EF0  5C11               	subwf	i1___lwmod@dividend,w,c
 14187  005EF2  5014               	movf	i1___lwmod@divisor+1,w,c
 14188  005EF4  5812               	subwfb	i1___lwmod@dividend+1,w,c
 14189  005EF6  A0D8               	btfss	status,0,c
 14190  005EF8  D004               	goto	i1l9670
 14191  005EFA  5013               	movf	i1___lwmod@divisor,w,c
 14192  005EFC  5E11               	subwf	i1___lwmod@dividend,f,c
 14193  005EFE  5014               	movf	i1___lwmod@divisor+1,w,c
 14194  005F00  5A12               	subwfb	i1___lwmod@dividend+1,f,c
 14195  005F02                     i1l9670:
 14196  005F02  90D8               	bcf	status,0,c
 14197  005F04  3214               	rrcf	i1___lwmod@divisor+1,f,c
 14198  005F06  3213               	rrcf	i1___lwmod@divisor,f,c
 14199  005F08  2E16               	decfsz	i1___lwmod@counter,f,c
 14200  005F0A  D7F1               	goto	i1l9666
 14201  005F0C                     i1l922:
 14202  005F0C  C011  F011         	movff	i1___lwmod@dividend,?i1___lwmod
 14203  005F10  C012  F012         	movff	i1___lwmod@dividend+1,?i1___lwmod+1
 14204  005F14  0012               	return	
 14205  005F16                     __end_ofi1___lwmod:
 14206                           	opt stack 0
 14207                           pclatu	equ	0xFFB
 14208                           pclath	equ	0xFFA
 14209                           tblptru	equ	0xFF8
 14210                           tblptrh	equ	0xFF7
 14211                           tblptrl	equ	0xFF6
 14212                           tablat	equ	0xFF5
 14213                           prodh	equ	0xFF4
 14214                           prodl	equ	0xFF3
 14215                           intcon	equ	0xFF2
 14216                           intcon2	equ	0xFF1
 14217                           postinc0	equ	0xFEE
 14218                           fsr0h	equ	0xFEA
 14219                           fsr0l	equ	0xFE9
 14220                           wreg	equ	0xFE8
 14221                           fsr1h	equ	0xFE2
 14222                           fsr1l	equ	0xFE1
 14223                           bsr	equ	0xFE0
 14224                           indf2	equ	0xFDF
 14225                           postinc2	equ	0xFDE
 14226                           postdec2	equ	0xFDD
 14227                           fsr2h	equ	0xFDA
 14228                           fsr2l	equ	0xFD9
 14229                           status	equ	0xFD8
 14230                           
 14231 ;; *************** function i1___lltoft *****************
 14232 ;; Defined at:
 14233 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
 14234 ;; Parameters:    Size  Location     Type
 14235 ;;  __lltoft        4   24[COMRAM] unsigned long 
 14236 ;; Auto vars:     Size  Location     Type
 14237 ;;  __lltoft        1   32[COMRAM] unsigned char 
 14238 ;; Return value:  Size  Location     Type
 14239 ;;                  3   24[COMRAM] float 
 14240 ;; Registers used:
 14241 ;;		wreg, status,2, status,0, cstack
 14242 ;; Tracked objects:
 14243 ;;		On entry : 0/0
 14244 ;;		On exit  : 0/0
 14245 ;;		Unchanged: 0/0
 14246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14247 ;;      Params:         4       0       0       0       0       0       0       0       0
 14248 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14249 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14250 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14251 ;;Total ram usage:        9 bytes
 14252 ;; Hardware stack levels used:    1
 14253 ;; Hardware stack levels required when called:    4
 14254 ;; This function calls:
 14255 ;;		i1___ftpack
 14256 ;; This function is called by:
 14257 ;;		i1_sprintf
 14258 ;; This function uses a non-reentrant model
 14259 ;;
 14260                           
 14261                           	psect	text46
 14262  005D0C                     __ptext46:
 14263                           	opt stack 0
 14264  005D0C                     i1___lltoft:
 14265                           	opt stack 17
 14266                           
 14267                           ;incstack = 0
 14268                           ;incstack = 0
 14269  005D0C  6E1D               	movwf	??i1___lltoft& (0+255),c
 14270  005D0E  0E8E               	movlw	142
 14271  005D10  6E21               	movwf	i1___lltoft@exp,c
 14272  005D12  501D               	movf	??i1___lltoft& (0+255),w,c
 14273  005D14  D006               	goto	i1l9630
 14274  005D16                     i1l9628:
 14275  005D16  90D8               	bcf	status,0,c
 14276  005D18  321C               	rrcf	i1___lltoft@c+3,f,c
 14277  005D1A  321B               	rrcf	i1___lltoft@c+2,f,c
 14278  005D1C  321A               	rrcf	i1___lltoft@c+1,f,c
 14279  005D1E  3219               	rrcf	i1___lltoft@c,f,c
 14280  005D20  2A21               	incf	i1___lltoft@exp,f,c
 14281  005D22                     i1l9630:
 14282  005D22  0E00               	movlw	0
 14283  005D24  1419               	andwf	i1___lltoft@c,w,c
 14284  005D26  6E1D               	movwf	??i1___lltoft& (0+255),c
 14285  005D28  0E00               	movlw	0
 14286  005D2A  141A               	andwf	i1___lltoft@c+1,w,c
 14287  005D2C  6E1E               	movwf	(??i1___lltoft+1)& (0+255),c
 14288  005D2E  0E00               	movlw	0
 14289  005D30  141B               	andwf	i1___lltoft@c+2,w,c
 14290  005D32  6E1F               	movwf	(??i1___lltoft+2)& (0+255),c
 14291  005D34  0EFF               	movlw	255
 14292  005D36  141C               	andwf	i1___lltoft@c+3,w,c
 14293  005D38  6E20               	movwf	(??i1___lltoft+3)& (0+255),c
 14294  005D3A  5020               	movf	??i1___lltoft+3,w,c
 14295  005D3C  101D               	iorwf	??i1___lltoft,w,c
 14296  005D3E  101E               	iorwf	??i1___lltoft+1,w,c
 14297  005D40  101F               	iorwf	??i1___lltoft+2,w,c
 14298  005D42  A4D8               	btfss	status,2,c
 14299  005D44  D7E8               	goto	i1l9628
 14300  005D46  C019  F011         	movff	i1___lltoft@c,?i1___ftpack
 14301  005D4A  C01A  F012         	movff	i1___lltoft@c+1,?i1___ftpack+1
 14302  005D4E  C01B  F013         	movff	i1___lltoft@c+2,?i1___ftpack+2
 14303  005D52  C021  F014         	movff	i1___lltoft@exp,?i1___ftpack+3
 14304  005D56  6E1D               	movwf	??i1___lltoft& (0+255),c
 14305  005D58  0E00               	movlw	0
 14306  005D5A  6E15               	movwf	?i1___ftpack+4,c
 14307  005D5C  501D               	movf	??i1___lltoft& (0+255),w,c
 14308  005D5E  EC1E  F02A         	call	i1___ftpack	;wreg free
 14309  005D62  C013  F01B         	movff	?i1___ftpack+2,?i1___lltoft+2
 14310  005D66  C012  F01A         	movff	?i1___ftpack+1,?i1___lltoft+1
 14311  005D6A  C011  F019         	movff	?i1___ftpack,?i1___lltoft
 14312  005D6E  0012               	return	
 14313  005D70                     __end_ofi1___lltoft:
 14314                           	opt stack 0
 14315                           pclatu	equ	0xFFB
 14316                           pclath	equ	0xFFA
 14317                           tblptru	equ	0xFF8
 14318                           tblptrh	equ	0xFF7
 14319                           tblptrl	equ	0xFF6
 14320                           tablat	equ	0xFF5
 14321                           prodh	equ	0xFF4
 14322                           prodl	equ	0xFF3
 14323                           intcon	equ	0xFF2
 14324                           intcon2	equ	0xFF1
 14325                           postinc0	equ	0xFEE
 14326                           fsr0h	equ	0xFEA
 14327                           fsr0l	equ	0xFE9
 14328                           wreg	equ	0xFE8
 14329                           fsr1h	equ	0xFE2
 14330                           fsr1l	equ	0xFE1
 14331                           bsr	equ	0xFE0
 14332                           indf2	equ	0xFDF
 14333                           postinc2	equ	0xFDE
 14334                           postdec2	equ	0xFDD
 14335                           fsr2h	equ	0xFDA
 14336                           fsr2l	equ	0xFD9
 14337                           status	equ	0xFD8
 14338                           
 14339 ;; *************** function i1___llmod *****************
 14340 ;; Defined at:
 14341 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
 14342 ;; Parameters:    Size  Location     Type
 14343 ;;  __llmod         4   30[COMRAM] unsigned long 
 14344 ;;  __llmod         4   34[COMRAM] unsigned long 
 14345 ;; Auto vars:     Size  Location     Type
 14346 ;;  __llmod         1   39[COMRAM] unsigned char 
 14347 ;; Return value:  Size  Location     Type
 14348 ;;                  4   30[COMRAM] unsigned long 
 14349 ;; Registers used:
 14350 ;;		wreg, status,2, status,0
 14351 ;; Tracked objects:
 14352 ;;		On entry : 0/0
 14353 ;;		On exit  : 0/0
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14356 ;;      Params:         8       0       0       0       0       0       0       0       0
 14357 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14358 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14359 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14360 ;;Total ram usage:       10 bytes
 14361 ;; Hardware stack levels used:    1
 14362 ;; Hardware stack levels required when called:    3
 14363 ;; This function calls:
 14364 ;;		Nothing
 14365 ;; This function is called by:
 14366 ;;		i1_sprintf
 14367 ;; This function uses a non-reentrant model
 14368 ;;
 14369                           
 14370                           	psect	text47
 14371  005C3E                     __ptext47:
 14372                           	opt stack 0
 14373  005C3E                     i1___llmod:
 14374                           	opt stack 18
 14375                           
 14376                           ;incstack = 0
 14377                           ;incstack = 0
 14378  005C3E  5026               	movf	i1___llmod@divisor+3,w,c
 14379  005C40  1023               	iorwf	i1___llmod@divisor,w,c
 14380  005C42  1024               	iorwf	i1___llmod@divisor+1,w,c
 14381  005C44  1025               	iorwf	i1___llmod@divisor+2,w,c
 14382  005C46  B4D8               	btfsc	status,2,c
 14383  005C48  D026               	goto	i1l853
 14384  005C4A  6E27               	movwf	??i1___llmod& (0+255),c
 14385  005C4C  0E01               	movlw	1
 14386  005C4E  6E28               	movwf	i1___llmod@counter,c
 14387  005C50  5027               	movf	??i1___llmod& (0+255),w,c
 14388  005C52  D006               	goto	i1l9616
 14389  005C54                     i1l9614:
 14390  005C54  90D8               	bcf	status,0,c
 14391  005C56  3623               	rlcf	i1___llmod@divisor,f,c
 14392  005C58  3624               	rlcf	i1___llmod@divisor+1,f,c
 14393  005C5A  3625               	rlcf	i1___llmod@divisor+2,f,c
 14394  005C5C  3626               	rlcf	i1___llmod@divisor+3,f,c
 14395  005C5E  2A28               	incf	i1___llmod@counter,f,c
 14396  005C60                     i1l9616:
 14397  005C60  AE26               	btfss	i1___llmod@divisor+3,7,c
 14398  005C62  D7F8               	goto	i1l9614
 14399  005C64                     i1l9618:
 14400  005C64  5023               	movf	i1___llmod@divisor,w,c
 14401  005C66  5C1F               	subwf	i1___llmod@dividend,w,c
 14402  005C68  5024               	movf	i1___llmod@divisor+1,w,c
 14403  005C6A  5820               	subwfb	i1___llmod@dividend+1,w,c
 14404  005C6C  5025               	movf	i1___llmod@divisor+2,w,c
 14405  005C6E  5821               	subwfb	i1___llmod@dividend+2,w,c
 14406  005C70  5026               	movf	i1___llmod@divisor+3,w,c
 14407  005C72  5822               	subwfb	i1___llmod@dividend+3,w,c
 14408  005C74  A0D8               	btfss	status,0,c
 14409  005C76  D008               	goto	i1l9622
 14410  005C78  5023               	movf	i1___llmod@divisor,w,c
 14411  005C7A  5E1F               	subwf	i1___llmod@dividend,f,c
 14412  005C7C  5024               	movf	i1___llmod@divisor+1,w,c
 14413  005C7E  5A20               	subwfb	i1___llmod@dividend+1,f,c
 14414  005C80  5025               	movf	i1___llmod@divisor+2,w,c
 14415  005C82  5A21               	subwfb	i1___llmod@dividend+2,f,c
 14416  005C84  5026               	movf	i1___llmod@divisor+3,w,c
 14417  005C86  5A22               	subwfb	i1___llmod@dividend+3,f,c
 14418  005C88                     i1l9622:
 14419  005C88  90D8               	bcf	status,0,c
 14420  005C8A  3226               	rrcf	i1___llmod@divisor+3,f,c
 14421  005C8C  3225               	rrcf	i1___llmod@divisor+2,f,c
 14422  005C8E  3224               	rrcf	i1___llmod@divisor+1,f,c
 14423  005C90  3223               	rrcf	i1___llmod@divisor,f,c
 14424  005C92  2E28               	decfsz	i1___llmod@counter,f,c
 14425  005C94  D7E7               	goto	i1l9618
 14426  005C96                     i1l853:
 14427  005C96  C01F  F01F         	movff	i1___llmod@dividend,?i1___llmod
 14428  005C9A  C020  F020         	movff	i1___llmod@dividend+1,?i1___llmod+1
 14429  005C9E  C021  F021         	movff	i1___llmod@dividend+2,?i1___llmod+2
 14430  005CA2  C022  F022         	movff	i1___llmod@dividend+3,?i1___llmod+3
 14431  005CA6  0012               	return	
 14432  005CA8                     __end_ofi1___llmod:
 14433                           	opt stack 0
 14434                           pclatu	equ	0xFFB
 14435                           pclath	equ	0xFFA
 14436                           tblptru	equ	0xFF8
 14437                           tblptrh	equ	0xFF7
 14438                           tblptrl	equ	0xFF6
 14439                           tablat	equ	0xFF5
 14440                           prodh	equ	0xFF4
 14441                           prodl	equ	0xFF3
 14442                           intcon	equ	0xFF2
 14443                           intcon2	equ	0xFF1
 14444                           postinc0	equ	0xFEE
 14445                           fsr0h	equ	0xFEA
 14446                           fsr0l	equ	0xFE9
 14447                           wreg	equ	0xFE8
 14448                           fsr1h	equ	0xFE2
 14449                           fsr1l	equ	0xFE1
 14450                           bsr	equ	0xFE0
 14451                           indf2	equ	0xFDF
 14452                           postinc2	equ	0xFDE
 14453                           postdec2	equ	0xFDD
 14454                           fsr2h	equ	0xFDA
 14455                           fsr2l	equ	0xFD9
 14456                           status	equ	0xFD8
 14457                           
 14458 ;; *************** function i1___lldiv *****************
 14459 ;; Defined at:
 14460 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
 14461 ;; Parameters:    Size  Location     Type
 14462 ;;  __lldiv         4   16[COMRAM] unsigned long 
 14463 ;;  __lldiv         4   20[COMRAM] unsigned long 
 14464 ;; Auto vars:     Size  Location     Type
 14465 ;;  __lldiv         4   25[COMRAM] unsigned long 
 14466 ;;  __lldiv         1   29[COMRAM] unsigned char 
 14467 ;; Return value:  Size  Location     Type
 14468 ;;                  4   16[COMRAM] unsigned long 
 14469 ;; Registers used:
 14470 ;;		wreg, status,2, status,0
 14471 ;; Tracked objects:
 14472 ;;		On entry : 0/0
 14473 ;;		On exit  : 0/0
 14474 ;;		Unchanged: 0/0
 14475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14476 ;;      Params:         8       0       0       0       0       0       0       0       0
 14477 ;;      Locals:         5       0       0       0       0       0       0       0       0
 14478 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14479 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14480 ;;Total ram usage:       14 bytes
 14481 ;; Hardware stack levels used:    1
 14482 ;; Hardware stack levels required when called:    3
 14483 ;; This function calls:
 14484 ;;		Nothing
 14485 ;; This function is called by:
 14486 ;;		i1_sprintf
 14487 ;; This function uses a non-reentrant model
 14488 ;;
 14489                           
 14490                           	psect	text48
 14491  0059CC                     __ptext48:
 14492                           	opt stack 0
 14493  0059CC                     i1___lldiv:
 14494                           	opt stack 18
 14495                           
 14496                           ;incstack = 0
 14497                           ;incstack = 0
 14498  0059CC  0E00               	movlw	0
 14499  0059CE  6E1A               	movwf	i1___lldiv@quotient,c
 14500  0059D0  0E00               	movlw	0
 14501  0059D2  6E1B               	movwf	i1___lldiv@quotient+1,c
 14502  0059D4  0E00               	movlw	0
 14503  0059D6  6E1C               	movwf	i1___lldiv@quotient+2,c
 14504  0059D8  0E00               	movlw	0
 14505  0059DA  6E1D               	movwf	i1___lldiv@quotient+3,c
 14506  0059DC  5018               	movf	i1___lldiv@divisor+3,w,c
 14507  0059DE  1015               	iorwf	i1___lldiv@divisor,w,c
 14508  0059E0  1016               	iorwf	i1___lldiv@divisor+1,w,c
 14509  0059E2  1017               	iorwf	i1___lldiv@divisor+2,w,c
 14510  0059E4  B4D8               	btfsc	status,2,c
 14511  0059E6  D02C               	goto	i1l843
 14512  0059E8  6E19               	movwf	??i1___lldiv& (0+255),c
 14513  0059EA  0E01               	movlw	1
 14514  0059EC  6E1E               	movwf	i1___lldiv@counter,c
 14515  0059EE  5019               	movf	??i1___lldiv& (0+255),w,c
 14516  0059F0  D006               	goto	i1l9596
 14517  0059F2                     i1l9594:
 14518  0059F2  90D8               	bcf	status,0,c
 14519  0059F4  3615               	rlcf	i1___lldiv@divisor,f,c
 14520  0059F6  3616               	rlcf	i1___lldiv@divisor+1,f,c
 14521  0059F8  3617               	rlcf	i1___lldiv@divisor+2,f,c
 14522  0059FA  3618               	rlcf	i1___lldiv@divisor+3,f,c
 14523  0059FC  2A1E               	incf	i1___lldiv@counter,f,c
 14524  0059FE                     i1l9596:
 14525  0059FE  AE18               	btfss	i1___lldiv@divisor+3,7,c
 14526  005A00  D7F8               	goto	i1l9594
 14527  005A02                     i1l9598:
 14528  005A02  90D8               	bcf	status,0,c
 14529  005A04  361A               	rlcf	i1___lldiv@quotient,f,c
 14530  005A06  361B               	rlcf	i1___lldiv@quotient+1,f,c
 14531  005A08  361C               	rlcf	i1___lldiv@quotient+2,f,c
 14532  005A0A  361D               	rlcf	i1___lldiv@quotient+3,f,c
 14533  005A0C  5015               	movf	i1___lldiv@divisor,w,c
 14534  005A0E  5C11               	subwf	i1___lldiv@dividend,w,c
 14535  005A10  5016               	movf	i1___lldiv@divisor+1,w,c
 14536  005A12  5812               	subwfb	i1___lldiv@dividend+1,w,c
 14537  005A14  5017               	movf	i1___lldiv@divisor+2,w,c
 14538  005A16  5813               	subwfb	i1___lldiv@dividend+2,w,c
 14539  005A18  5018               	movf	i1___lldiv@divisor+3,w,c
 14540  005A1A  5814               	subwfb	i1___lldiv@dividend+3,w,c
 14541  005A1C  A0D8               	btfss	status,0,c
 14542  005A1E  D009               	goto	i1l9606
 14543  005A20  5015               	movf	i1___lldiv@divisor,w,c
 14544  005A22  5E11               	subwf	i1___lldiv@dividend,f,c
 14545  005A24  5016               	movf	i1___lldiv@divisor+1,w,c
 14546  005A26  5A12               	subwfb	i1___lldiv@dividend+1,f,c
 14547  005A28  5017               	movf	i1___lldiv@divisor+2,w,c
 14548  005A2A  5A13               	subwfb	i1___lldiv@dividend+2,f,c
 14549  005A2C  5018               	movf	i1___lldiv@divisor+3,w,c
 14550  005A2E  5A14               	subwfb	i1___lldiv@dividend+3,f,c
 14551  005A30  801A               	bsf	i1___lldiv@quotient,0,c
 14552  005A32                     i1l9606:
 14553  005A32  90D8               	bcf	status,0,c
 14554  005A34  3218               	rrcf	i1___lldiv@divisor+3,f,c
 14555  005A36  3217               	rrcf	i1___lldiv@divisor+2,f,c
 14556  005A38  3216               	rrcf	i1___lldiv@divisor+1,f,c
 14557  005A3A  3215               	rrcf	i1___lldiv@divisor,f,c
 14558  005A3C  2E1E               	decfsz	i1___lldiv@counter,f,c
 14559  005A3E  D7E1               	goto	i1l9598
 14560  005A40                     i1l843:
 14561  005A40  C01A  F011         	movff	i1___lldiv@quotient,?i1___lldiv
 14562  005A44  C01B  F012         	movff	i1___lldiv@quotient+1,?i1___lldiv+1
 14563  005A48  C01C  F013         	movff	i1___lldiv@quotient+2,?i1___lldiv+2
 14564  005A4C  C01D  F014         	movff	i1___lldiv@quotient+3,?i1___lldiv+3
 14565  005A50  0012               	return	
 14566  005A52                     __end_ofi1___lldiv:
 14567                           	opt stack 0
 14568                           pclatu	equ	0xFFB
 14569                           pclath	equ	0xFFA
 14570                           tblptru	equ	0xFF8
 14571                           tblptrh	equ	0xFF7
 14572                           tblptrl	equ	0xFF6
 14573                           tablat	equ	0xFF5
 14574                           prodh	equ	0xFF4
 14575                           prodl	equ	0xFF3
 14576                           intcon	equ	0xFF2
 14577                           intcon2	equ	0xFF1
 14578                           postinc0	equ	0xFEE
 14579                           fsr0h	equ	0xFEA
 14580                           fsr0l	equ	0xFE9
 14581                           wreg	equ	0xFE8
 14582                           fsr1h	equ	0xFE2
 14583                           fsr1l	equ	0xFE1
 14584                           bsr	equ	0xFE0
 14585                           indf2	equ	0xFDF
 14586                           postinc2	equ	0xFDE
 14587                           postdec2	equ	0xFDD
 14588                           fsr2h	equ	0xFDA
 14589                           fsr2l	equ	0xFD9
 14590                           status	equ	0xFD8
 14591                           
 14592 ;; *************** function i1_isdigit *****************
 14593 ;; Defined at:
 14594 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;  isdigit         1   16[COMRAM] unsigned char 
 14597 ;; Auto vars:     Size  Location     Type
 14598 ;;  isdigit         1   18[COMRAM] unsigned char 
 14599 ;; Return value:  Size  Location     Type
 14600 ;;		None               void
 14601 ;; Registers used:
 14602 ;;		wreg, status,2, status,0
 14603 ;; Tracked objects:
 14604 ;;		On entry : 0/0
 14605 ;;		On exit  : 0/0
 14606 ;;		Unchanged: 0/0
 14607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14608 ;;      Params:         1       0       0       0       0       0       0       0       0
 14609 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14610 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14611 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14612 ;;Total ram usage:        3 bytes
 14613 ;; Hardware stack levels used:    1
 14614 ;; Hardware stack levels required when called:    3
 14615 ;; This function calls:
 14616 ;;		Nothing
 14617 ;; This function is called by:
 14618 ;;		i1_sprintf
 14619 ;; This function uses a non-reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text49
 14623  0062F8                     __ptext49:
 14624                           	opt stack 0
 14625  0062F8                     i1_isdigit:
 14626                           	opt stack 18
 14627                           
 14628                           ;incstack = 0
 14629                           ;incstack = 0
 14630  0062F8  6E12               	movwf	??i1_isdigit& (0+255),c
 14631  0062FA  0E00               	movlw	0
 14632  0062FC  6E13               	movwf	i1_isdigit$841,c
 14633  0062FE  5012               	movf	??i1_isdigit& (0+255),w,c
 14634  006300  0E3A               	movlw	58
 14635  006302  6011               	cpfslt	i1isdigit@c,c
 14636  006304  D007               	goto	i1l9584
 14637  006306  0E2F               	movlw	47
 14638  006308  6411               	cpfsgt	i1isdigit@c,c
 14639  00630A  D004               	goto	i1l9584
 14640  00630C  6E12               	movwf	??i1_isdigit& (0+255),c
 14641  00630E  0E01               	movlw	1
 14642  006310  6E13               	movwf	i1_isdigit$841,c
 14643  006312  5012               	movf	??i1_isdigit& (0+255),w,c
 14644  006314                     i1l9584:
 14645  006314  C013  F012         	movff	i1_isdigit$841,??i1_isdigit
 14646  006318  3012               	rrcf	??i1_isdigit,w,c
 14647  00631A  0012               	return	
 14648  00631C                     __end_ofi1_isdigit:
 14649                           	opt stack 0
 14650                           pclatu	equ	0xFFB
 14651                           pclath	equ	0xFFA
 14652                           tblptru	equ	0xFF8
 14653                           tblptrh	equ	0xFF7
 14654                           tblptrl	equ	0xFF6
 14655                           tablat	equ	0xFF5
 14656                           prodh	equ	0xFF4
 14657                           prodl	equ	0xFF3
 14658                           intcon	equ	0xFF2
 14659                           intcon2	equ	0xFF1
 14660                           postinc0	equ	0xFEE
 14661                           fsr0h	equ	0xFEA
 14662                           fsr0l	equ	0xFE9
 14663                           wreg	equ	0xFE8
 14664                           fsr1h	equ	0xFE2
 14665                           fsr1l	equ	0xFE1
 14666                           bsr	equ	0xFE0
 14667                           indf2	equ	0xFDF
 14668                           postinc2	equ	0xFDE
 14669                           postdec2	equ	0xFDD
 14670                           fsr2h	equ	0xFDA
 14671                           fsr2l	equ	0xFD9
 14672                           status	equ	0xFD8
 14673                           
 14674 ;; *************** function i1___fttol *****************
 14675 ;; Defined at:
 14676 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
 14677 ;; Parameters:    Size  Location     Type
 14678 ;;  __fttol         3   38[COMRAM] float 
 14679 ;; Auto vars:     Size  Location     Type
 14680 ;;  __fttol         4   48[COMRAM] unsigned long 
 14681 ;;  __fttol         1   52[COMRAM] unsigned char 
 14682 ;;  __fttol         1   47[COMRAM] unsigned char 
 14683 ;; Return value:  Size  Location     Type
 14684 ;;                  4   38[COMRAM] long 
 14685 ;; Registers used:
 14686 ;;		wreg, status,2, status,0
 14687 ;; Tracked objects:
 14688 ;;		On entry : 0/0
 14689 ;;		On exit  : 0/0
 14690 ;;		Unchanged: 0/0
 14691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14692 ;;      Params:         4       0       0       0       0       0       0       0       0
 14693 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14694 ;;      Temps:          5       0       0       0       0       0       0       0       0
 14695 ;;      Totals:        15       0       0       0       0       0       0       0       0
 14696 ;;Total ram usage:       15 bytes
 14697 ;; Hardware stack levels used:    1
 14698 ;; Hardware stack levels required when called:    3
 14699 ;; This function calls:
 14700 ;;		Nothing
 14701 ;; This function is called by:
 14702 ;;		i1_sprintf
 14703 ;; This function uses a non-reentrant model
 14704 ;;
 14705                           
 14706                           	psect	text50
 14707  0050DC                     __ptext50:
 14708                           	opt stack 0
 14709  0050DC                     i1___fttol:
 14710                           	opt stack 18
 14711                           
 14712                           ;incstack = 0
 14713                           ;incstack = 0
 14714  0050DC  0E0F               	movlw	15
 14715  0050DE  6E2B               	movwf	??i1___fttol& (0+255),c
 14716  0050E0  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 14717  0050E4  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 14718  0050E8  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 14719  0050EC  282B               	incf	??i1___fttol,w,c
 14720  0050EE  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 14721  0050F0  D004               	goto	i1u853_20
 14722  0050F2                     i1u853_25:
 14723  0050F2  90D8               	bcf	status,0,c
 14724  0050F4  322E               	rrcf	??i1___fttol+3,f,c
 14725  0050F6  322D               	rrcf	??i1___fttol+2,f,c
 14726  0050F8  322C               	rrcf	??i1___fttol+1,f,c
 14727  0050FA                     i1u853_20:
 14728  0050FA  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 14729  0050FC  D7FA               	goto	i1u853_25
 14730  0050FE  502C               	movf	??i1___fttol+1,w,c
 14731  005100  6E35               	movwf	i1___fttol@exp1,c
 14732  005102  6635               	tstfsz	i1___fttol@exp1& (0+255),c
 14733  005104  D001               	goto	i1l9536
 14734  005106  D035               	goto	i1u858_20
 14735  005108                     i1l9536:
 14736  005108  0E17               	movlw	23
 14737  00510A  6E2B               	movwf	??i1___fttol& (0+255),c
 14738  00510C  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 14739  005110  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 14740  005114  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 14741  005118  282B               	incf	??i1___fttol,w,c
 14742  00511A  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 14743  00511C  D004               	goto	i1u855_20
 14744  00511E                     i1u855_25:
 14745  00511E  90D8               	bcf	status,0,c
 14746  005120  322E               	rrcf	??i1___fttol+3,f,c
 14747  005122  322D               	rrcf	??i1___fttol+2,f,c
 14748  005124  322C               	rrcf	??i1___fttol+1,f,c
 14749  005126                     i1u855_20:
 14750  005126  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 14751  005128  D7FA               	goto	i1u855_25
 14752  00512A  502C               	movf	??i1___fttol+1,w,c
 14753  00512C  6E30               	movwf	i1___fttol@sign1,c
 14754  00512E  8E28               	bsf	i1___fttol@f1+1,7,c
 14755  005130  0EFF               	movlw	255
 14756  005132  1627               	andwf	i1___fttol@f1,f,c
 14757  005134  0EFF               	movlw	255
 14758  005136  1628               	andwf	i1___fttol@f1+1,f,c
 14759  005138  0E00               	movlw	0
 14760  00513A  1629               	andwf	i1___fttol@f1+2,f,c
 14761  00513C  5027               	movf	i1___fttol@f1,w,c
 14762  00513E  6E31               	movwf	i1___fttol@lval,c
 14763  005140  5028               	movf	i1___fttol@f1+1,w,c
 14764  005142  6E32               	movwf	i1___fttol@lval+1,c
 14765  005144  5029               	movf	i1___fttol@f1+2,w,c
 14766  005146  6E33               	movwf	i1___fttol@lval+2,c
 14767  005148  6A34               	clrf	i1___fttol@lval+3,c
 14768  00514A  0E8E               	movlw	142
 14769  00514C  5E35               	subwf	i1___fttol@exp1,f,c
 14770  00514E  AE35               	btfss	i1___fttol@exp1,7,c
 14771  005150  D00D               	goto	i1l9558
 14772  005152  5035               	movf	i1___fttol@exp1,w,c
 14773  005154  0A80               	xorlw	128
 14774  005156  0F8F               	addlw	143
 14775  005158  A0D8               	btfss	status,0,c
 14776  00515A  D00B               	goto	i1u858_20
 14777  00515C                     i1l9554:
 14778  00515C  90D8               	bcf	status,0,c
 14779  00515E  3234               	rrcf	i1___fttol@lval+3,f,c
 14780  005160  3233               	rrcf	i1___fttol@lval+2,f,c
 14781  005162  3232               	rrcf	i1___fttol@lval+1,f,c
 14782  005164  3231               	rrcf	i1___fttol@lval,f,c
 14783  005166  3E35               	incfsz	i1___fttol@exp1,f,c
 14784  005168  D7F9               	goto	i1l9554
 14785  00516A  D014               	goto	i1l9568
 14786  00516C                     i1l9558:
 14787  00516C  0E17               	movlw	23
 14788  00516E  6435               	cpfsgt	i1___fttol@exp1,c
 14789  005170  D00F               	goto	i1l9566
 14790  005172                     i1u858_20:
 14791  005172  0E00               	movlw	0
 14792  005174  6E27               	movwf	?i1___fttol,c
 14793  005176  0E00               	movlw	0
 14794  005178  6E28               	movwf	?i1___fttol+1,c
 14795  00517A  0E00               	movlw	0
 14796  00517C  6E29               	movwf	?i1___fttol+2,c
 14797  00517E  0E00               	movlw	0
 14798  005180  6E2A               	movwf	?i1___fttol+3,c
 14799  005182  D01B               	goto	i1l799
 14800  005184                     i1l9564:
 14801  005184  90D8               	bcf	status,0,c
 14802  005186  3631               	rlcf	i1___fttol@lval,f,c
 14803  005188  3632               	rlcf	i1___fttol@lval+1,f,c
 14804  00518A  3633               	rlcf	i1___fttol@lval+2,f,c
 14805  00518C  3634               	rlcf	i1___fttol@lval+3,f,c
 14806  00518E  0635               	decf	i1___fttol@exp1,f,c
 14807  005190                     i1l9566:
 14808  005190  6635               	tstfsz	i1___fttol@exp1,c
 14809  005192  D7F8               	goto	i1l9564
 14810  005194                     i1l9568:
 14811  005194  5030               	movf	i1___fttol@sign1,w,c
 14812  005196  B4D8               	btfsc	status,2,c
 14813  005198  D008               	goto	i1l9572
 14814  00519A  1E34               	comf	i1___fttol@lval+3,f,c
 14815  00519C  1E33               	comf	i1___fttol@lval+2,f,c
 14816  00519E  1E32               	comf	i1___fttol@lval+1,f,c
 14817  0051A0  6C31               	negf	i1___fttol@lval,c
 14818  0051A2  0E00               	movlw	0
 14819  0051A4  2232               	addwfc	i1___fttol@lval+1,f,c
 14820  0051A6  2233               	addwfc	i1___fttol@lval+2,f,c
 14821  0051A8  2234               	addwfc	i1___fttol@lval+3,f,c
 14822  0051AA                     i1l9572:
 14823  0051AA  C031  F027         	movff	i1___fttol@lval,?i1___fttol
 14824  0051AE  C032  F028         	movff	i1___fttol@lval+1,?i1___fttol+1
 14825  0051B2  C033  F029         	movff	i1___fttol@lval+2,?i1___fttol+2
 14826  0051B6  C034  F02A         	movff	i1___fttol@lval+3,?i1___fttol+3
 14827  0051BA                     i1l799:
 14828  0051BA  0012               	return	
 14829  0051BC                     __end_ofi1___fttol:
 14830                           	opt stack 0
 14831                           pclatu	equ	0xFFB
 14832                           pclath	equ	0xFFA
 14833                           tblptru	equ	0xFF8
 14834                           tblptrh	equ	0xFF7
 14835                           tblptrl	equ	0xFF6
 14836                           tablat	equ	0xFF5
 14837                           prodh	equ	0xFF4
 14838                           prodl	equ	0xFF3
 14839                           intcon	equ	0xFF2
 14840                           intcon2	equ	0xFF1
 14841                           postinc0	equ	0xFEE
 14842                           fsr0h	equ	0xFEA
 14843                           fsr0l	equ	0xFE9
 14844                           wreg	equ	0xFE8
 14845                           fsr1h	equ	0xFE2
 14846                           fsr1l	equ	0xFE1
 14847                           bsr	equ	0xFE0
 14848                           indf2	equ	0xFDF
 14849                           postinc2	equ	0xFDE
 14850                           postdec2	equ	0xFDD
 14851                           fsr2h	equ	0xFDA
 14852                           fsr2l	equ	0xFD9
 14853                           status	equ	0xFD8
 14854                           
 14855 ;; *************** function i1___ftneg *****************
 14856 ;; Defined at:
 14857 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
 14858 ;; Parameters:    Size  Location     Type
 14859 ;;  __ftneg         3   16[COMRAM] float 
 14860 ;; Auto vars:     Size  Location     Type
 14861 ;;		None
 14862 ;; Return value:  Size  Location     Type
 14863 ;;                  3   16[COMRAM] float 
 14864 ;; Registers used:
 14865 ;;		wreg, status,2, status,0
 14866 ;; Tracked objects:
 14867 ;;		On entry : 0/0
 14868 ;;		On exit  : 0/0
 14869 ;;		Unchanged: 0/0
 14870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14871 ;;      Params:         3       0       0       0       0       0       0       0       0
 14872 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14873 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14874 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14875 ;;Total ram usage:        3 bytes
 14876 ;; Hardware stack levels used:    1
 14877 ;; Hardware stack levels required when called:    3
 14878 ;; This function calls:
 14879 ;;		Nothing
 14880 ;; This function is called by:
 14881 ;;		i1_sprintf
 14882 ;; This function uses a non-reentrant model
 14883 ;;
 14884                           
 14885                           	psect	text51
 14886  0062D2                     __ptext51:
 14887                           	opt stack 0
 14888  0062D2                     i1___ftneg:
 14889                           	opt stack 18
 14890                           
 14891                           ;incstack = 0
 14892                           ;incstack = 0
 14893  0062D2  0E7F               	movlw	127
 14894  0062D4  1413               	andwf	i1___ftneg@f1+2,w,c
 14895  0062D6  1012               	iorwf	i1___ftneg@f1+1,w,c
 14896  0062D8  1011               	iorwf	i1___ftneg@f1,w,c
 14897  0062DA  B4D8               	btfsc	status,2,c
 14898  0062DC  D006               	goto	i1l789
 14899  0062DE  0E00               	movlw	0
 14900  0062E0  1A11               	xorwf	i1___ftneg@f1,f,c
 14901  0062E2  0E00               	movlw	0
 14902  0062E4  1A12               	xorwf	i1___ftneg@f1+1,f,c
 14903  0062E6  0E80               	movlw	128
 14904  0062E8  1A13               	xorwf	i1___ftneg@f1+2,f,c
 14905  0062EA                     i1l789:
 14906  0062EA  C011  F011         	movff	i1___ftneg@f1,?i1___ftneg
 14907  0062EE  C012  F012         	movff	i1___ftneg@f1+1,?i1___ftneg+1
 14908  0062F2  C013  F013         	movff	i1___ftneg@f1+2,?i1___ftneg+2
 14909  0062F6  0012               	return	
 14910  0062F8                     __end_ofi1___ftneg:
 14911                           	opt stack 0
 14912                           pclatu	equ	0xFFB
 14913                           pclath	equ	0xFFA
 14914                           tblptru	equ	0xFF8
 14915                           tblptrh	equ	0xFF7
 14916                           tblptrl	equ	0xFF6
 14917                           tablat	equ	0xFF5
 14918                           prodh	equ	0xFF4
 14919                           prodl	equ	0xFF3
 14920                           intcon	equ	0xFF2
 14921                           intcon2	equ	0xFF1
 14922                           postinc0	equ	0xFEE
 14923                           fsr0h	equ	0xFEA
 14924                           fsr0l	equ	0xFE9
 14925                           wreg	equ	0xFE8
 14926                           fsr1h	equ	0xFE2
 14927                           fsr1l	equ	0xFE1
 14928                           bsr	equ	0xFE0
 14929                           indf2	equ	0xFDF
 14930                           postinc2	equ	0xFDE
 14931                           postdec2	equ	0xFDD
 14932                           fsr2h	equ	0xFDA
 14933                           fsr2l	equ	0xFD9
 14934                           status	equ	0xFD8
 14935                           
 14936 ;; *************** function i1___ftge *****************
 14937 ;; Defined at:
 14938 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
 14939 ;; Parameters:    Size  Location     Type
 14940 ;;  __ftge          3   16[COMRAM] float 
 14941 ;;  __ftge          3   19[COMRAM] float 
 14942 ;; Auto vars:     Size  Location     Type
 14943 ;;		None
 14944 ;; Return value:  Size  Location     Type
 14945 ;;		None               void
 14946 ;; Registers used:
 14947 ;;		wreg, status,2, status,0
 14948 ;; Tracked objects:
 14949 ;;		On entry : 0/0
 14950 ;;		On exit  : 0/0
 14951 ;;		Unchanged: 0/0
 14952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14953 ;;      Params:         6       0       0       0       0       0       0       0       0
 14954 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14955 ;;      Temps:          3       0       0       0       0       0       0       0       0
 14956 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14957 ;;Total ram usage:        9 bytes
 14958 ;; Hardware stack levels used:    1
 14959 ;; Hardware stack levels required when called:    3
 14960 ;; This function calls:
 14961 ;;		Nothing
 14962 ;; This function is called by:
 14963 ;;		i1_sprintf
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           	psect	text52
 14968  005794                     __ptext52:
 14969                           	opt stack 0
 14970  005794                     i1___ftge:
 14971                           	opt stack 18
 14972                           
 14973                           ;incstack = 0
 14974                           ;incstack = 0
 14975  005794  AE13               	btfss	i1___ftge@ff1+2,7,c
 14976  005796  D016               	goto	i1l9458
 14977  005798  C011  F017         	movff	i1___ftge@ff1,??i1___ftge
 14978  00579C  C012  F018         	movff	i1___ftge@ff1+1,??i1___ftge+1
 14979  0057A0  C013  F019         	movff	i1___ftge@ff1+2,??i1___ftge+2
 14980  0057A4  1E17               	comf	??i1___ftge,f,c
 14981  0057A6  1E18               	comf	??i1___ftge+1,f,c
 14982  0057A8  1E19               	comf	??i1___ftge+2,f,c
 14983  0057AA  2A17               	incf	??i1___ftge,f,c
 14984  0057AC  0E00               	movlw	0
 14985  0057AE  2218               	addwfc	??i1___ftge+1,f,c
 14986  0057B0  2219               	addwfc	??i1___ftge+2,f,c
 14987  0057B2  0E00               	movlw	0
 14988  0057B4  2417               	addwf	??i1___ftge,w,c
 14989  0057B6  6E11               	movwf	i1___ftge@ff1,c
 14990  0057B8  0E00               	movlw	0
 14991  0057BA  2018               	addwfc	??i1___ftge+1,w,c
 14992  0057BC  6E12               	movwf	i1___ftge@ff1+1,c
 14993  0057BE  0E80               	movlw	128
 14994  0057C0  2019               	addwfc	??i1___ftge+2,w,c
 14995  0057C2  6E13               	movwf	i1___ftge@ff1+2,c
 14996  0057C4                     i1l9458:
 14997  0057C4  AE16               	btfss	i1___ftge@ff2+2,7,c
 14998  0057C6  D016               	goto	i1l9462
 14999  0057C8  C014  F017         	movff	i1___ftge@ff2,??i1___ftge
 15000  0057CC  C015  F018         	movff	i1___ftge@ff2+1,??i1___ftge+1
 15001  0057D0  C016  F019         	movff	i1___ftge@ff2+2,??i1___ftge+2
 15002  0057D4  1E17               	comf	??i1___ftge,f,c
 15003  0057D6  1E18               	comf	??i1___ftge+1,f,c
 15004  0057D8  1E19               	comf	??i1___ftge+2,f,c
 15005  0057DA  2A17               	incf	??i1___ftge,f,c
 15006  0057DC  0E00               	movlw	0
 15007  0057DE  2218               	addwfc	??i1___ftge+1,f,c
 15008  0057E0  2219               	addwfc	??i1___ftge+2,f,c
 15009  0057E2  0E00               	movlw	0
 15010  0057E4  2417               	addwf	??i1___ftge,w,c
 15011  0057E6  6E14               	movwf	i1___ftge@ff2,c
 15012  0057E8  0E00               	movlw	0
 15013  0057EA  2018               	addwfc	??i1___ftge+1,w,c
 15014  0057EC  6E15               	movwf	i1___ftge@ff2+1,c
 15015  0057EE  0E80               	movlw	128
 15016  0057F0  2019               	addwfc	??i1___ftge+2,w,c
 15017  0057F2  6E16               	movwf	i1___ftge@ff2+2,c
 15018  0057F4                     i1l9462:
 15019  0057F4  0E00               	movlw	0
 15020  0057F6  1A11               	xorwf	i1___ftge@ff1,f,c
 15021  0057F8  0E00               	movlw	0
 15022  0057FA  1A12               	xorwf	i1___ftge@ff1+1,f,c
 15023  0057FC  0E80               	movlw	128
 15024  0057FE  1A13               	xorwf	i1___ftge@ff1+2,f,c
 15025  005800  0E00               	movlw	0
 15026  005802  1A14               	xorwf	i1___ftge@ff2,f,c
 15027  005804  0E00               	movlw	0
 15028  005806  1A15               	xorwf	i1___ftge@ff2+1,f,c
 15029  005808  0E80               	movlw	128
 15030  00580A  1A16               	xorwf	i1___ftge@ff2+2,f,c
 15031  00580C  5014               	movf	i1___ftge@ff2,w,c
 15032  00580E  5C11               	subwf	i1___ftge@ff1,w,c
 15033  005810  5015               	movf	i1___ftge@ff2+1,w,c
 15034  005812  5812               	subwfb	i1___ftge@ff1+1,w,c
 15035  005814  5016               	movf	i1___ftge@ff2+2,w,c
 15036  005816  5813               	subwfb	i1___ftge@ff1+2,w,c
 15037  005818  B0D8               	btfsc	status,0,c
 15038  00581A  D002               	goto	i1l9468
 15039  00581C  90D8               	bcf	status,0,c
 15040  00581E  D001               	goto	i1l773
 15041  005820                     i1l9468:
 15042  005820  80D8               	bsf	status,0,c
 15043  005822                     i1l773:
 15044  005822  0012               	return	
 15045  005824                     __end_ofi1___ftge:
 15046                           	opt stack 0
 15047                           pclatu	equ	0xFFB
 15048                           pclath	equ	0xFFA
 15049                           tblptru	equ	0xFF8
 15050                           tblptrh	equ	0xFF7
 15051                           tblptrl	equ	0xFF6
 15052                           tablat	equ	0xFF5
 15053                           prodh	equ	0xFF4
 15054                           prodl	equ	0xFF3
 15055                           intcon	equ	0xFF2
 15056                           intcon2	equ	0xFF1
 15057                           postinc0	equ	0xFEE
 15058                           fsr0h	equ	0xFEA
 15059                           fsr0l	equ	0xFE9
 15060                           wreg	equ	0xFE8
 15061                           fsr1h	equ	0xFE2
 15062                           fsr1l	equ	0xFE1
 15063                           bsr	equ	0xFE0
 15064                           indf2	equ	0xFDF
 15065                           postinc2	equ	0xFDE
 15066                           postdec2	equ	0xFDD
 15067                           fsr2h	equ	0xFDA
 15068                           fsr2l	equ	0xFD9
 15069                           status	equ	0xFD8
 15070                           
 15071 ;; *************** function i1__tdiv_to_l_ *****************
 15072 ;; Defined at:
 15073 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
 15074 ;; Parameters:    Size  Location     Type
 15075 ;;  _tdiv_to_l_     3   16[COMRAM] float 
 15076 ;;  _tdiv_to_l_     3   19[COMRAM] float 
 15077 ;; Auto vars:     Size  Location     Type
 15078 ;;  _tdiv_to_l_     4   27[COMRAM] unsigned long 
 15079 ;;  _tdiv_to_l_     1   32[COMRAM] unsigned char 
 15080 ;;  _tdiv_to_l_     1   31[COMRAM] unsigned char 
 15081 ;; Return value:  Size  Location     Type
 15082 ;;                  4   16[COMRAM] unsigned long 
 15083 ;; Registers used:
 15084 ;;		wreg, status,2, status,0
 15085 ;; Tracked objects:
 15086 ;;		On entry : 0/0
 15087 ;;		On exit  : 0/0
 15088 ;;		Unchanged: 0/0
 15089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15090 ;;      Params:         6       0       0       0       0       0       0       0       0
 15091 ;;      Locals:         6       0       0       0       0       0       0       0       0
 15092 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15093 ;;      Totals:        17       0       0       0       0       0       0       0       0
 15094 ;;Total ram usage:       17 bytes
 15095 ;; Hardware stack levels used:    1
 15096 ;; Hardware stack levels required when called:    3
 15097 ;; This function calls:
 15098 ;;		Nothing
 15099 ;; This function is called by:
 15100 ;;		i1_sprintf
 15101 ;; This function uses a non-reentrant model
 15102 ;;
 15103                           
 15104                           	psect	text53
 15105  0045BA                     __ptext53:
 15106                           	opt stack 0
 15107  0045BA                     i1__tdiv_to_l_:
 15108                           	opt stack 18
 15109                           
 15110                           ;incstack = 0
 15111                           ;incstack = 0
 15112  0045BA  0E0F               	movlw	15
 15113  0045BC  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15114  0045BE  C011  F018         	movff	i1__tdiv_to_l_@f1,??i1__tdiv_to_l_+1
 15115  0045C2  C012  F019         	movff	i1__tdiv_to_l_@f1+1,??i1__tdiv_to_l_+2
 15116  0045C6  C013  F01A         	movff	i1__tdiv_to_l_@f1+2,??i1__tdiv_to_l_+3
 15117  0045CA  2817               	incf	??i1__tdiv_to_l_,w,c
 15118  0045CC  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 15119  0045CE  D004               	goto	i1u834_20
 15120  0045D0                     i1u834_25:
 15121  0045D0  90D8               	bcf	status,0,c
 15122  0045D2  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 15123  0045D4  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 15124  0045D6  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 15125  0045D8                     i1u834_20:
 15126  0045D8  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 15127  0045DA  D7FA               	goto	i1u834_25
 15128  0045DC  5018               	movf	??i1__tdiv_to_l_+1,w,c
 15129  0045DE  6E21               	movwf	i1__tdiv_to_l_@exp1,c
 15130  0045E0  6621               	tstfsz	i1__tdiv_to_l_@exp1& (0+255),c
 15131  0045E2  D001               	goto	i1l9404
 15132  0045E4  D061               	goto	i1u841_20
 15133  0045E6                     i1l9404:
 15134  0045E6  0E0F               	movlw	15
 15135  0045E8  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15136  0045EA  C014  F018         	movff	i1__tdiv_to_l_@f2,??i1__tdiv_to_l_+1
 15137  0045EE  C015  F019         	movff	i1__tdiv_to_l_@f2+1,??i1__tdiv_to_l_+2
 15138  0045F2  C016  F01A         	movff	i1__tdiv_to_l_@f2+2,??i1__tdiv_to_l_+3
 15139  0045F6  2817               	incf	??i1__tdiv_to_l_,w,c
 15140  0045F8  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 15141  0045FA  D004               	goto	i1u836_20
 15142  0045FC                     i1u836_25:
 15143  0045FC  90D8               	bcf	status,0,c
 15144  0045FE  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 15145  004600  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 15146  004602  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 15147  004604                     i1u836_20:
 15148  004604  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 15149  004606  D7FA               	goto	i1u836_25
 15150  004608  5018               	movf	??i1__tdiv_to_l_+1,w,c
 15151  00460A  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 15152  00460C  6620               	tstfsz	i1__tdiv_to_l_@cntr& (0+255),c
 15153  00460E  D001               	goto	i1l9410
 15154  004610  D04B               	goto	i1u841_20
 15155  004612                     i1l9410:
 15156  004612  8E12               	bsf	i1__tdiv_to_l_@f1+1,7,c
 15157  004614  0EFF               	movlw	255
 15158  004616  1611               	andwf	i1__tdiv_to_l_@f1,f,c
 15159  004618  0EFF               	movlw	255
 15160  00461A  1612               	andwf	i1__tdiv_to_l_@f1+1,f,c
 15161  00461C  0E00               	movlw	0
 15162  00461E  1613               	andwf	i1__tdiv_to_l_@f1+2,f,c
 15163  004620  8E15               	bsf	i1__tdiv_to_l_@f2+1,7,c
 15164  004622  0EFF               	movlw	255
 15165  004624  1614               	andwf	i1__tdiv_to_l_@f2,f,c
 15166  004626  0EFF               	movlw	255
 15167  004628  1615               	andwf	i1__tdiv_to_l_@f2+1,f,c
 15168  00462A  0E00               	movlw	0
 15169  00462C  1616               	andwf	i1__tdiv_to_l_@f2+2,f,c
 15170  00462E  0E00               	movlw	0
 15171  004630  6E1C               	movwf	i1__tdiv_to_l_@quot,c
 15172  004632  0E00               	movlw	0
 15173  004634  6E1D               	movwf	i1__tdiv_to_l_@quot+1,c
 15174  004636  0E00               	movlw	0
 15175  004638  6E1E               	movwf	i1__tdiv_to_l_@quot+2,c
 15176  00463A  0E00               	movlw	0
 15177  00463C  6E1F               	movwf	i1__tdiv_to_l_@quot+3,c
 15178  00463E  0E7F               	movlw	127
 15179  004640  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 15180  004642  5020               	movf	i1__tdiv_to_l_@cntr,w,c
 15181  004644  0F98               	addlw	152
 15182  004646  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 15183  004648  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15184  00464A  0E18               	movlw	24
 15185  00464C  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 15186  00464E  5017               	movf	??i1__tdiv_to_l_& (0+255),w,c
 15187  004650                     i1l9424:
 15188  004650  90D8               	bcf	status,0,c
 15189  004652  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 15190  004654  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 15191  004656  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 15192  004658  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 15193  00465A  5014               	movf	i1__tdiv_to_l_@f2,w,c
 15194  00465C  5C11               	subwf	i1__tdiv_to_l_@f1,w,c
 15195  00465E  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 15196  004660  5812               	subwfb	i1__tdiv_to_l_@f1+1,w,c
 15197  004662  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 15198  004664  5813               	subwfb	i1__tdiv_to_l_@f1+2,w,c
 15199  004666  A0D8               	btfss	status,0,c
 15200  004668  D007               	goto	i1l758
 15201  00466A  5014               	movf	i1__tdiv_to_l_@f2,w,c
 15202  00466C  5E11               	subwf	i1__tdiv_to_l_@f1,f,c
 15203  00466E  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 15204  004670  5A12               	subwfb	i1__tdiv_to_l_@f1+1,f,c
 15205  004672  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 15206  004674  5A13               	subwfb	i1__tdiv_to_l_@f1+2,f,c
 15207  004676  801C               	bsf	i1__tdiv_to_l_@quot,0,c
 15208  004678                     i1l758:
 15209  004678  90D8               	bcf	status,0,c
 15210  00467A  3611               	rlcf	i1__tdiv_to_l_@f1,f,c
 15211  00467C  3612               	rlcf	i1__tdiv_to_l_@f1+1,f,c
 15212  00467E  3613               	rlcf	i1__tdiv_to_l_@f1+2,f,c
 15213  004680  2E20               	decfsz	i1__tdiv_to_l_@cntr,f,c
 15214  004682  D7E6               	goto	i1l9424
 15215  004684  AE21               	btfss	i1__tdiv_to_l_@exp1,7,c
 15216  004686  D00D               	goto	i1l9444
 15217  004688  5021               	movf	i1__tdiv_to_l_@exp1,w,c
 15218  00468A  0A80               	xorlw	128
 15219  00468C  0F97               	addlw	151
 15220  00468E  A0D8               	btfss	status,0,c
 15221  004690  D00B               	goto	i1u841_20
 15222  004692                     i1l9440:
 15223  004692  90D8               	bcf	status,0,c
 15224  004694  321F               	rrcf	i1__tdiv_to_l_@quot+3,f,c
 15225  004696  321E               	rrcf	i1__tdiv_to_l_@quot+2,f,c
 15226  004698  321D               	rrcf	i1__tdiv_to_l_@quot+1,f,c
 15227  00469A  321C               	rrcf	i1__tdiv_to_l_@quot,f,c
 15228  00469C  3E21               	incfsz	i1__tdiv_to_l_@exp1,f,c
 15229  00469E  D7F9               	goto	i1l9440
 15230  0046A0  D014               	goto	i1l764
 15231  0046A2                     i1l9444:
 15232  0046A2  0E17               	movlw	23
 15233  0046A4  6421               	cpfsgt	i1__tdiv_to_l_@exp1,c
 15234  0046A6  D00F               	goto	i1l9452
 15235  0046A8                     i1u841_20:
 15236  0046A8  0E00               	movlw	0
 15237  0046AA  6E11               	movwf	?i1__tdiv_to_l_,c
 15238  0046AC  0E00               	movlw	0
 15239  0046AE  6E12               	movwf	?i1__tdiv_to_l_+1,c
 15240  0046B0  0E00               	movlw	0
 15241  0046B2  6E13               	movwf	?i1__tdiv_to_l_+2,c
 15242  0046B4  0E00               	movlw	0
 15243  0046B6  6E14               	movwf	?i1__tdiv_to_l_+3,c
 15244  0046B8  D010               	goto	i1l755
 15245  0046BA                     i1l9450:
 15246  0046BA  90D8               	bcf	status,0,c
 15247  0046BC  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 15248  0046BE  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 15249  0046C0  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 15250  0046C2  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 15251  0046C4  0621               	decf	i1__tdiv_to_l_@exp1,f,c
 15252  0046C6                     i1l9452:
 15253  0046C6  6621               	tstfsz	i1__tdiv_to_l_@exp1,c
 15254  0046C8  D7F8               	goto	i1l9450
 15255  0046CA                     i1l764:
 15256  0046CA  C01C  F011         	movff	i1__tdiv_to_l_@quot,?i1__tdiv_to_l_
 15257  0046CE  C01D  F012         	movff	i1__tdiv_to_l_@quot+1,?i1__tdiv_to_l_+1
 15258  0046D2  C01E  F013         	movff	i1__tdiv_to_l_@quot+2,?i1__tdiv_to_l_+2
 15259  0046D6  C01F  F014         	movff	i1__tdiv_to_l_@quot+3,?i1__tdiv_to_l_+3
 15260  0046DA                     i1l755:
 15261  0046DA  0012               	return	
 15262  0046DC                     __end_ofi1__tdiv_to_l_:
 15263                           	opt stack 0
 15264                           pclatu	equ	0xFFB
 15265                           pclath	equ	0xFFA
 15266                           tblptru	equ	0xFF8
 15267                           tblptrh	equ	0xFF7
 15268                           tblptrl	equ	0xFF6
 15269                           tablat	equ	0xFF5
 15270                           prodh	equ	0xFF4
 15271                           prodl	equ	0xFF3
 15272                           intcon	equ	0xFF2
 15273                           intcon2	equ	0xFF1
 15274                           postinc0	equ	0xFEE
 15275                           fsr0h	equ	0xFEA
 15276                           fsr0l	equ	0xFE9
 15277                           wreg	equ	0xFE8
 15278                           fsr1h	equ	0xFE2
 15279                           fsr1l	equ	0xFE1
 15280                           bsr	equ	0xFE0
 15281                           indf2	equ	0xFDF
 15282                           postinc2	equ	0xFDE
 15283                           postdec2	equ	0xFDD
 15284                           fsr2h	equ	0xFDA
 15285                           fsr2l	equ	0xFD9
 15286                           status	equ	0xFD8
 15287                           
 15288 ;; *************** function i1__div_to_l_ *****************
 15289 ;; Defined at:
 15290 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
 15291 ;; Parameters:    Size  Location     Type
 15292 ;;  _div_to_l_      3   16[COMRAM] unsigned long 
 15293 ;;  _div_to_l_      3   19[COMRAM] unsigned long 
 15294 ;; Auto vars:     Size  Location     Type
 15295 ;;  _div_to_l_      4   23[COMRAM] unsigned long 
 15296 ;;  _div_to_l_      1   28[COMRAM] unsigned char 
 15297 ;;  _div_to_l_      1   27[COMRAM] unsigned char 
 15298 ;; Return value:  Size  Location     Type
 15299 ;;                  4   16[COMRAM] unsigned long 
 15300 ;; Registers used:
 15301 ;;		wreg, status,2, status,0
 15302 ;; Tracked objects:
 15303 ;;		On entry : 0/0
 15304 ;;		On exit  : 0/0
 15305 ;;		Unchanged: 0/0
 15306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15307 ;;      Params:         6       0       0       0       0       0       0       0       0
 15308 ;;      Locals:         6       0       0       0       0       0       0       0       0
 15309 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15310 ;;      Totals:        13       0       0       0       0       0       0       0       0
 15311 ;;Total ram usage:       13 bytes
 15312 ;; Hardware stack levels used:    1
 15313 ;; Hardware stack levels required when called:    3
 15314 ;; This function calls:
 15315 ;;		Nothing
 15316 ;; This function is called by:
 15317 ;;		i1_sprintf
 15318 ;; This function uses a non-reentrant model
 15319 ;;
 15320                           
 15321                           	psect	text54
 15322  004D18                     __ptext54:
 15323                           	opt stack 0
 15324  004D18                     i1__div_to_l_:
 15325                           	opt stack 18
 15326                           
 15327                           ;incstack = 0
 15328                           ;incstack = 0
 15329  004D18  3413               	rlcf	(i1__div_to_l_@f1+2)& (0+255),w,c
 15330  004D1A  3414               	rlcf	(i1__div_to_l_@f1+3)& (0+255),w,c
 15331  004D1C  6E1D               	movwf	i1__div_to_l_@exp1,c
 15332  004D1E  661D               	tstfsz	i1__div_to_l_@exp1& (0+255),c
 15333  004D20  D001               	goto	i1l9200
 15334  004D22  D05A               	goto	i1u799_20
 15335  004D24                     i1l9200:
 15336  004D24  3416               	rlcf	(i1__div_to_l_@f2+2)& (0+255),w,c
 15337  004D26  3417               	rlcf	(i1__div_to_l_@f2+3)& (0+255),w,c
 15338  004D28  6E1C               	movwf	i1__div_to_l_@cntr,c
 15339  004D2A  661C               	tstfsz	i1__div_to_l_@cntr& (0+255),c
 15340  004D2C  D001               	goto	i1l9206
 15341  004D2E  D054               	goto	i1u799_20
 15342  004D30                     i1l9206:
 15343  004D30  8E13               	bsf	i1__div_to_l_@f1+2,7,c
 15344  004D32  0EFF               	movlw	255
 15345  004D34  1611               	andwf	i1__div_to_l_@f1,f,c
 15346  004D36  0EFF               	movlw	255
 15347  004D38  1612               	andwf	i1__div_to_l_@f1+1,f,c
 15348  004D3A  0EFF               	movlw	255
 15349  004D3C  1613               	andwf	i1__div_to_l_@f1+2,f,c
 15350  004D3E  0E00               	movlw	0
 15351  004D40  1614               	andwf	i1__div_to_l_@f1+3,f,c
 15352  004D42  8E16               	bsf	i1__div_to_l_@f2+2,7,c
 15353  004D44  0EFF               	movlw	255
 15354  004D46  1614               	andwf	i1__div_to_l_@f2,f,c
 15355  004D48  0EFF               	movlw	255
 15356  004D4A  1615               	andwf	i1__div_to_l_@f2+1,f,c
 15357  004D4C  0EFF               	movlw	255
 15358  004D4E  1616               	andwf	i1__div_to_l_@f2+2,f,c
 15359  004D50  0E00               	movlw	0
 15360  004D52  1617               	andwf	i1__div_to_l_@f2+3,f,c
 15361  004D54  0E00               	movlw	0
 15362  004D56  6E18               	movwf	i1__div_to_l_@quot,c
 15363  004D58  0E00               	movlw	0
 15364  004D5A  6E19               	movwf	i1__div_to_l_@quot+1,c
 15365  004D5C  0E00               	movlw	0
 15366  004D5E  6E1A               	movwf	i1__div_to_l_@quot+2,c
 15367  004D60  0E00               	movlw	0
 15368  004D62  6E1B               	movwf	i1__div_to_l_@quot+3,c
 15369  004D64  0E7F               	movlw	127
 15370  004D66  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 15371  004D68  501C               	movf	i1__div_to_l_@cntr,w,c
 15372  004D6A  0FA0               	addlw	160
 15373  004D6C  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 15374  004D6E  6E17               	movwf	??i1__div_to_l_& (0+255),c
 15375  004D70  0E20               	movlw	32
 15376  004D72  6E1C               	movwf	i1__div_to_l_@cntr,c
 15377  004D74  5017               	movf	??i1__div_to_l_& (0+255),w,c
 15378  004D76                     i1l639:
 15379  004D76  90D8               	bcf	status,0,c
 15380  004D78  3618               	rlcf	i1__div_to_l_@quot,f,c
 15381  004D7A  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 15382  004D7C  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 15383  004D7E  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 15384  004D80  5014               	movf	i1__div_to_l_@f2,w,c
 15385  004D82  5C11               	subwf	i1__div_to_l_@f1,w,c
 15386  004D84  5015               	movf	i1__div_to_l_@f2+1,w,c
 15387  004D86  5812               	subwfb	i1__div_to_l_@f1+1,w,c
 15388  004D88  5016               	movf	i1__div_to_l_@f2+2,w,c
 15389  004D8A  5813               	subwfb	i1__div_to_l_@f1+2,w,c
 15390  004D8C  5017               	movf	i1__div_to_l_@f2+3,w,c
 15391  004D8E  5814               	subwfb	i1__div_to_l_@f1+3,w,c
 15392  004D90  A0D8               	btfss	status,0,c
 15393  004D92  D009               	goto	i1l9226
 15394  004D94  5014               	movf	i1__div_to_l_@f2,w,c
 15395  004D96  5E11               	subwf	i1__div_to_l_@f1,f,c
 15396  004D98  5015               	movf	i1__div_to_l_@f2+1,w,c
 15397  004D9A  5A12               	subwfb	i1__div_to_l_@f1+1,f,c
 15398  004D9C  5016               	movf	i1__div_to_l_@f2+2,w,c
 15399  004D9E  5A13               	subwfb	i1__div_to_l_@f1+2,f,c
 15400  004DA0  5017               	movf	i1__div_to_l_@f2+3,w,c
 15401  004DA2  5A14               	subwfb	i1__div_to_l_@f1+3,f,c
 15402  004DA4  8018               	bsf	i1__div_to_l_@quot,0,c
 15403  004DA6                     i1l9226:
 15404  004DA6  90D8               	bcf	status,0,c
 15405  004DA8  3611               	rlcf	i1__div_to_l_@f1,f,c
 15406  004DAA  3612               	rlcf	i1__div_to_l_@f1+1,f,c
 15407  004DAC  3613               	rlcf	i1__div_to_l_@f1+2,f,c
 15408  004DAE  3614               	rlcf	i1__div_to_l_@f1+3,f,c
 15409  004DB0  2E1C               	decfsz	i1__div_to_l_@cntr,f,c
 15410  004DB2  D7E1               	goto	i1l639
 15411  004DB4  AE1D               	btfss	i1__div_to_l_@exp1,7,c
 15412  004DB6  D00D               	goto	i1l9240
 15413  004DB8  501D               	movf	i1__div_to_l_@exp1,w,c
 15414  004DBA  0A80               	xorlw	128
 15415  004DBC  0F9F               	addlw	159
 15416  004DBE  A0D8               	btfss	status,0,c
 15417  004DC0  D00B               	goto	i1u799_20
 15418  004DC2                     i1l9236:
 15419  004DC2  90D8               	bcf	status,0,c
 15420  004DC4  321B               	rrcf	i1__div_to_l_@quot+3,f,c
 15421  004DC6  321A               	rrcf	i1__div_to_l_@quot+2,f,c
 15422  004DC8  3219               	rrcf	i1__div_to_l_@quot+1,f,c
 15423  004DCA  3218               	rrcf	i1__div_to_l_@quot,f,c
 15424  004DCC  3E1D               	incfsz	i1__div_to_l_@exp1,f,c
 15425  004DCE  D7F9               	goto	i1l9236
 15426  004DD0  D014               	goto	i1l646
 15427  004DD2                     i1l9240:
 15428  004DD2  0E1F               	movlw	31
 15429  004DD4  641D               	cpfsgt	i1__div_to_l_@exp1,c
 15430  004DD6  D00F               	goto	i1l9248
 15431  004DD8                     i1u799_20:
 15432  004DD8  0E00               	movlw	0
 15433  004DDA  6E11               	movwf	?i1__div_to_l_,c
 15434  004DDC  0E00               	movlw	0
 15435  004DDE  6E12               	movwf	?i1__div_to_l_+1,c
 15436  004DE0  0E00               	movlw	0
 15437  004DE2  6E13               	movwf	?i1__div_to_l_+2,c
 15438  004DE4  0E00               	movlw	0
 15439  004DE6  6E14               	movwf	?i1__div_to_l_+3,c
 15440  004DE8  D010               	goto	i1l637
 15441  004DEA                     i1l9246:
 15442  004DEA  90D8               	bcf	status,0,c
 15443  004DEC  3618               	rlcf	i1__div_to_l_@quot,f,c
 15444  004DEE  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 15445  004DF0  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 15446  004DF2  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 15447  004DF4  061D               	decf	i1__div_to_l_@exp1,f,c
 15448  004DF6                     i1l9248:
 15449  004DF6  661D               	tstfsz	i1__div_to_l_@exp1,c
 15450  004DF8  D7F8               	goto	i1l9246
 15451  004DFA                     i1l646:
 15452  004DFA  C018  F011         	movff	i1__div_to_l_@quot,?i1__div_to_l_
 15453  004DFE  C019  F012         	movff	i1__div_to_l_@quot+1,?i1__div_to_l_+1
 15454  004E02  C01A  F013         	movff	i1__div_to_l_@quot+2,?i1__div_to_l_+2
 15455  004E06  C01B  F014         	movff	i1__div_to_l_@quot+3,?i1__div_to_l_+3
 15456  004E0A                     i1l637:
 15457  004E0A  0012               	return	
 15458  004E0C                     __end_ofi1__div_to_l_:
 15459                           	opt stack 0
 15460                           pclatu	equ	0xFFB
 15461                           pclath	equ	0xFFA
 15462                           tblptru	equ	0xFF8
 15463                           tblptrh	equ	0xFF7
 15464                           tblptrl	equ	0xFF6
 15465                           tablat	equ	0xFF5
 15466                           prodh	equ	0xFF4
 15467                           prodl	equ	0xFF3
 15468                           intcon	equ	0xFF2
 15469                           intcon2	equ	0xFF1
 15470                           postinc0	equ	0xFEE
 15471                           fsr0h	equ	0xFEA
 15472                           fsr0l	equ	0xFE9
 15473                           wreg	equ	0xFE8
 15474                           fsr1h	equ	0xFE2
 15475                           fsr1l	equ	0xFE1
 15476                           bsr	equ	0xFE0
 15477                           indf2	equ	0xFDF
 15478                           postinc2	equ	0xFDE
 15479                           postdec2	equ	0xFDD
 15480                           fsr2h	equ	0xFDA
 15481                           fsr2l	equ	0xFD9
 15482                           status	equ	0xFD8
 15483                           
 15484 ;; *************** function i1___asftsub *****************
 15485 ;; Defined at:
 15486 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;  __asftsub       2   44[COMRAM] PTR float 
 15489 ;;		 -> sprintf@fval(3), 
 15490 ;;  __asftsub       3   46[COMRAM] float 
 15491 ;; Auto vars:     Size  Location     Type
 15492 ;;		None
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  3   44[COMRAM] float 
 15495 ;; Registers used:
 15496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 0/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15502 ;;      Params:         5       0       0       0       0       0       0       0       0
 15503 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15504 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15505 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15506 ;;Total ram usage:        5 bytes
 15507 ;; Hardware stack levels used:    1
 15508 ;; Hardware stack levels required when called:    6
 15509 ;; This function calls:
 15510 ;;		i1___ftsub
 15511 ;; This function is called by:
 15512 ;;		i1_sprintf
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           
 15516                           	psect	text55
 15517  0060A0                     __ptext55:
 15518                           	opt stack 0
 15519  0060A0                     i1___asftsub:
 15520                           	opt stack 15
 15521                           
 15522                           ;	Return value of i1___asftsub is never used
 15523                           
 15524                           ;incstack = 0
 15525                           ;incstack = 0
 15526  0060A0  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 15527  0060A4  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 15528  0060A8  CFDE F027          	movff	postinc2,?i1___ftsub
 15529  0060AC  CFDE F028          	movff	postinc2,?i1___ftsub+1
 15530  0060B0  CFDD F029          	movff	postdec2,?i1___ftsub+2
 15531  0060B4  C02F  F02A         	movff	i1___asftsub@f2,?i1___ftsub+3
 15532  0060B8  C030  F02B         	movff	i1___asftsub@f2+1,?i1___ftsub+4
 15533  0060BC  C031  F02C         	movff	i1___asftsub@f2+2,?i1___ftsub+5
 15534  0060C0  EC1E  F031         	call	i1___ftsub	;wreg free
 15535  0060C4  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 15536  0060C8  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 15537  0060CC  C027  FFDE         	movff	?i1___ftsub,postinc2
 15538  0060D0  C028  FFDE         	movff	?i1___ftsub+1,postinc2
 15539  0060D4  C029  FFDD         	movff	?i1___ftsub+2,postdec2
 15540  0060D8  52DD               	movf	postdec2,f,c
 15541  0060DA  0012               	return	
 15542  0060DC                     __end_ofi1___asftsub:
 15543                           	opt stack 0
 15544                           pclatu	equ	0xFFB
 15545                           pclath	equ	0xFFA
 15546                           tblptru	equ	0xFF8
 15547                           tblptrh	equ	0xFF7
 15548                           tblptrl	equ	0xFF6
 15549                           tablat	equ	0xFF5
 15550                           prodh	equ	0xFF4
 15551                           prodl	equ	0xFF3
 15552                           intcon	equ	0xFF2
 15553                           intcon2	equ	0xFF1
 15554                           postinc0	equ	0xFEE
 15555                           fsr0h	equ	0xFEA
 15556                           fsr0l	equ	0xFE9
 15557                           wreg	equ	0xFE8
 15558                           fsr1h	equ	0xFE2
 15559                           fsr1l	equ	0xFE1
 15560                           bsr	equ	0xFE0
 15561                           indf2	equ	0xFDF
 15562                           postinc2	equ	0xFDE
 15563                           postdec2	equ	0xFDD
 15564                           fsr2h	equ	0xFDA
 15565                           fsr2l	equ	0xFD9
 15566                           status	equ	0xFD8
 15567                           
 15568 ;; *************** function i1___ftsub *****************
 15569 ;; Defined at:
 15570 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
 15571 ;; Parameters:    Size  Location     Type
 15572 ;;  __ftsub         3   38[COMRAM] float 
 15573 ;;  __ftsub         3   41[COMRAM] float 
 15574 ;; Auto vars:     Size  Location     Type
 15575 ;;		None
 15576 ;; Return value:  Size  Location     Type
 15577 ;;                  3   38[COMRAM] float 
 15578 ;; Registers used:
 15579 ;;		wreg, status,2, status,0, cstack
 15580 ;; Tracked objects:
 15581 ;;		On entry : 0/0
 15582 ;;		On exit  : 0/0
 15583 ;;		Unchanged: 0/0
 15584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15585 ;;      Params:         6       0       0       0       0       0       0       0       0
 15586 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15587 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15588 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15589 ;;Total ram usage:        6 bytes
 15590 ;; Hardware stack levels used:    1
 15591 ;; Hardware stack levels required when called:    5
 15592 ;; This function calls:
 15593 ;;		i1___ftadd
 15594 ;; This function is called by:
 15595 ;;		i1___asftsub
 15596 ;; This function uses a non-reentrant model
 15597 ;;
 15598                           
 15599                           	psect	text56
 15600  00623C                     __ptext56:
 15601                           	opt stack 0
 15602  00623C                     i1___ftsub:
 15603                           	opt stack 15
 15604                           
 15605                           ;incstack = 0
 15606                           ;incstack = 0
 15607  00623C  0E00               	movlw	0
 15608  00623E  1A2A               	xorwf	i1___ftsub@f2,f,c
 15609  006240  0E00               	movlw	0
 15610  006242  1A2B               	xorwf	i1___ftsub@f2+1,f,c
 15611  006244  0E80               	movlw	128
 15612  006246  1A2C               	xorwf	i1___ftsub@f2+2,f,c
 15613  006248  C027  F019         	movff	i1___ftsub@f1,?i1___ftadd
 15614  00624C  C028  F01A         	movff	i1___ftsub@f1+1,?i1___ftadd+1
 15615  006250  C029  F01B         	movff	i1___ftsub@f1+2,?i1___ftadd+2
 15616  006254  C02A  F01C         	movff	i1___ftsub@f2,?i1___ftadd+3
 15617  006258  C02B  F01D         	movff	i1___ftsub@f2+1,?i1___ftadd+4
 15618  00625C  C02C  F01E         	movff	i1___ftsub@f2+2,?i1___ftadd+5
 15619  006260  ECC2  F01E         	call	i1___ftadd	;wreg free
 15620  006264  C01B  F029         	movff	?i1___ftadd+2,?i1___ftsub+2
 15621  006268  C01A  F028         	movff	?i1___ftadd+1,?i1___ftsub+1
 15622  00626C  C019  F027         	movff	?i1___ftadd,?i1___ftsub
 15623  006270  0012               	return	
 15624  006272                     __end_ofi1___ftsub:
 15625                           	opt stack 0
 15626                           pclatu	equ	0xFFB
 15627                           pclath	equ	0xFFA
 15628                           tblptru	equ	0xFF8
 15629                           tblptrh	equ	0xFF7
 15630                           tblptrl	equ	0xFF6
 15631                           tablat	equ	0xFF5
 15632                           prodh	equ	0xFF4
 15633                           prodl	equ	0xFF3
 15634                           intcon	equ	0xFF2
 15635                           intcon2	equ	0xFF1
 15636                           postinc0	equ	0xFEE
 15637                           fsr0h	equ	0xFEA
 15638                           fsr0l	equ	0xFE9
 15639                           wreg	equ	0xFE8
 15640                           fsr1h	equ	0xFE2
 15641                           fsr1l	equ	0xFE1
 15642                           bsr	equ	0xFE0
 15643                           indf2	equ	0xFDF
 15644                           postinc2	equ	0xFDE
 15645                           postdec2	equ	0xFDD
 15646                           fsr2h	equ	0xFDA
 15647                           fsr2l	equ	0xFD9
 15648                           status	equ	0xFD8
 15649                           
 15650 ;; *************** function i1___asftmul *****************
 15651 ;; Defined at:
 15652 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
 15653 ;; Parameters:    Size  Location     Type
 15654 ;;  __asftmul       2    0[BANK0 ] PTR float 
 15655 ;;		 -> sprintf@integ(3), 
 15656 ;;  __asftmul       3    2[BANK0 ] float 
 15657 ;; Auto vars:     Size  Location     Type
 15658 ;;		None
 15659 ;; Return value:  Size  Location     Type
 15660 ;;                  3    0[BANK0 ] float 
 15661 ;; Registers used:
 15662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15663 ;; Tracked objects:
 15664 ;;		On entry : 0/0
 15665 ;;		On exit  : 0/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15668 ;;      Params:         0       5       0       0       0       0       0       0       0
 15669 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15671 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15672 ;;Total ram usage:        5 bytes
 15673 ;; Hardware stack levels used:    1
 15674 ;; Hardware stack levels required when called:    5
 15675 ;; This function calls:
 15676 ;;		i1___ftmul
 15677 ;; This function is called by:
 15678 ;;		i1_sprintf
 15679 ;; This function uses a non-reentrant model
 15680 ;;
 15681                           
 15682                           	psect	text57
 15683  0060DC                     __ptext57:
 15684                           	opt stack 0
 15685  0060DC                     i1___asftmul:
 15686                           	opt stack 16
 15687                           
 15688                           ;	Return value of i1___asftmul is never used
 15689                           
 15690                           ;incstack = 0
 15691                           ;incstack = 0
 15692  0060DC  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 15693  0060E0  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 15694  0060E4  CFDE F036          	movff	postinc2,?i1___ftmul
 15695  0060E8  CFDE F037          	movff	postinc2,?i1___ftmul+1
 15696  0060EC  CFDD F038          	movff	postdec2,?i1___ftmul+2
 15697  0060F0  C062  F039         	movff	i1___asftmul@f2,?i1___ftmul+3
 15698  0060F4  C063  F03A         	movff	i1___asftmul@f2+1,?i1___ftmul+4
 15699  0060F8  C064  F03B         	movff	i1___asftmul@f2+2,?i1___ftmul+5
 15700  0060FC  EC84  F024         	call	i1___ftmul	;wreg free
 15701  006100  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 15702  006104  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 15703  006108  C036  FFDE         	movff	?i1___ftmul,postinc2
 15704  00610C  C037  FFDE         	movff	?i1___ftmul+1,postinc2
 15705  006110  C038  FFDD         	movff	?i1___ftmul+2,postdec2
 15706  006114  52DD               	movf	postdec2,f,c
 15707  006116  0012               	return	
 15708  006118                     __end_ofi1___asftmul:
 15709                           	opt stack 0
 15710                           pclatu	equ	0xFFB
 15711                           pclath	equ	0xFFA
 15712                           tblptru	equ	0xFF8
 15713                           tblptrh	equ	0xFF7
 15714                           tblptrl	equ	0xFF6
 15715                           tablat	equ	0xFF5
 15716                           prodh	equ	0xFF4
 15717                           prodl	equ	0xFF3
 15718                           intcon	equ	0xFF2
 15719                           intcon2	equ	0xFF1
 15720                           postinc0	equ	0xFEE
 15721                           fsr0h	equ	0xFEA
 15722                           fsr0l	equ	0xFE9
 15723                           wreg	equ	0xFE8
 15724                           fsr1h	equ	0xFE2
 15725                           fsr1l	equ	0xFE1
 15726                           bsr	equ	0xFE0
 15727                           indf2	equ	0xFDF
 15728                           postinc2	equ	0xFDE
 15729                           postdec2	equ	0xFDD
 15730                           fsr2h	equ	0xFDA
 15731                           fsr2l	equ	0xFD9
 15732                           status	equ	0xFD8
 15733                           
 15734 ;; *************** function i1___asftadd *****************
 15735 ;; Defined at:
 15736 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;  __asftadd       2   12[BANK0 ] PTR float 
 15739 ;;		 -> sprintf@fval(3), 
 15740 ;;  __asftadd       3   14[BANK0 ] float 
 15741 ;; Auto vars:     Size  Location     Type
 15742 ;;		None
 15743 ;; Return value:  Size  Location     Type
 15744 ;;                  3   12[BANK0 ] float 
 15745 ;; Registers used:
 15746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15747 ;; Tracked objects:
 15748 ;;		On entry : 0/0
 15749 ;;		On exit  : 0/0
 15750 ;;		Unchanged: 0/0
 15751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15752 ;;      Params:         0       5       0       0       0       0       0       0       0
 15753 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15755 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15756 ;;Total ram usage:        5 bytes
 15757 ;; Hardware stack levels used:    1
 15758 ;; Hardware stack levels required when called:    5
 15759 ;; This function calls:
 15760 ;;		i1___ftadd
 15761 ;; This function is called by:
 15762 ;;		i1_sprintf
 15763 ;; This function uses a non-reentrant model
 15764 ;;
 15765                           
 15766                           	psect	text58
 15767  006118                     __ptext58:
 15768                           	opt stack 0
 15769  006118                     i1___asftadd:
 15770                           	opt stack 16
 15771                           
 15772                           ;	Return value of i1___asftadd is never used
 15773                           
 15774                           ;incstack = 0
 15775                           ;incstack = 0
 15776  006118  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 15777  00611C  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 15778  006120  CFDE F019          	movff	postinc2,?i1___ftadd
 15779  006124  CFDE F01A          	movff	postinc2,?i1___ftadd+1
 15780  006128  CFDD F01B          	movff	postdec2,?i1___ftadd+2
 15781  00612C  C06E  F01C         	movff	i1___asftadd@f2,?i1___ftadd+3
 15782  006130  C06F  F01D         	movff	i1___asftadd@f2+1,?i1___ftadd+4
 15783  006134  C070  F01E         	movff	i1___asftadd@f2+2,?i1___ftadd+5
 15784  006138  ECC2  F01E         	call	i1___ftadd	;wreg free
 15785  00613C  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 15786  006140  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 15787  006144  C019  FFDE         	movff	?i1___ftadd,postinc2
 15788  006148  C01A  FFDE         	movff	?i1___ftadd+1,postinc2
 15789  00614C  C01B  FFDD         	movff	?i1___ftadd+2,postdec2
 15790  006150  52DD               	movf	postdec2,f,c
 15791  006152  0012               	return	
 15792  006154                     __end_ofi1___asftadd:
 15793                           	opt stack 0
 15794                           pclatu	equ	0xFFB
 15795                           pclath	equ	0xFFA
 15796                           tblptru	equ	0xFF8
 15797                           tblptrh	equ	0xFF7
 15798                           tblptrl	equ	0xFF6
 15799                           tablat	equ	0xFF5
 15800                           prodh	equ	0xFF4
 15801                           prodl	equ	0xFF3
 15802                           intcon	equ	0xFF2
 15803                           intcon2	equ	0xFF1
 15804                           postinc0	equ	0xFEE
 15805                           fsr0h	equ	0xFEA
 15806                           fsr0l	equ	0xFE9
 15807                           wreg	equ	0xFE8
 15808                           fsr1h	equ	0xFE2
 15809                           fsr1l	equ	0xFE1
 15810                           bsr	equ	0xFE0
 15811                           indf2	equ	0xFDF
 15812                           postinc2	equ	0xFDE
 15813                           postdec2	equ	0xFDD
 15814                           fsr2h	equ	0xFDA
 15815                           fsr2l	equ	0xFD9
 15816                           status	equ	0xFD8
 15817                           
 15818 ;; *************** function i1___ftadd *****************
 15819 ;; Defined at:
 15820 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
 15821 ;; Parameters:    Size  Location     Type
 15822 ;;  __ftadd         3   24[COMRAM] float 
 15823 ;;  __ftadd         3   27[COMRAM] float 
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;  __ftadd         1   37[COMRAM] unsigned char 
 15826 ;;  __ftadd         1   36[COMRAM] unsigned char 
 15827 ;;  __ftadd         1   35[COMRAM] unsigned char 
 15828 ;; Return value:  Size  Location     Type
 15829 ;;                  3   24[COMRAM] float 
 15830 ;; Registers used:
 15831 ;;		wreg, status,2, status,0, cstack
 15832 ;; Tracked objects:
 15833 ;;		On entry : 0/0
 15834 ;;		On exit  : 0/0
 15835 ;;		Unchanged: 0/0
 15836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15837 ;;      Params:         6       0       0       0       0       0       0       0       0
 15838 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15839 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15840 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15841 ;;Total ram usage:       14 bytes
 15842 ;; Hardware stack levels used:    1
 15843 ;; Hardware stack levels required when called:    4
 15844 ;; This function calls:
 15845 ;;		i1___ftpack
 15846 ;; This function is called by:
 15847 ;;		i1___asftadd
 15848 ;;		i1___ftsub
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           	psect	text59
 15853  003D84                     __ptext59:
 15854                           	opt stack 0
 15855  003D84                     i1___ftadd:
 15856                           	opt stack 15
 15857                           
 15858                           ;incstack = 0
 15859                           ;incstack = 0
 15860  003D84  0E0F               	movlw	15
 15861  003D86  6E1F               	movwf	??i1___ftadd& (0+255),c
 15862  003D88  C019  F020         	movff	i1___ftadd@f1,??i1___ftadd+1
 15863  003D8C  C01A  F021         	movff	i1___ftadd@f1+1,??i1___ftadd+2
 15864  003D90  C01B  F022         	movff	i1___ftadd@f1+2,??i1___ftadd+3
 15865  003D94  281F               	incf	??i1___ftadd,w,c
 15866  003D96  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 15867  003D98  D004               	goto	i1u808_20
 15868  003D9A                     i1u808_25:
 15869  003D9A  90D8               	bcf	status,0,c
 15870  003D9C  3222               	rrcf	??i1___ftadd+3,f,c
 15871  003D9E  3221               	rrcf	??i1___ftadd+2,f,c
 15872  003DA0  3220               	rrcf	??i1___ftadd+1,f,c
 15873  003DA2                     i1u808_20:
 15874  003DA2  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 15875  003DA4  D7FA               	goto	i1u808_25
 15876  003DA6  5020               	movf	??i1___ftadd+1,w,c
 15877  003DA8  6E26               	movwf	i1___ftadd@exp1,c
 15878  003DAA  0E0F               	movlw	15
 15879  003DAC  6E1F               	movwf	??i1___ftadd& (0+255),c
 15880  003DAE  C01C  F020         	movff	i1___ftadd@f2,??i1___ftadd+1
 15881  003DB2  C01D  F021         	movff	i1___ftadd@f2+1,??i1___ftadd+2
 15882  003DB6  C01E  F022         	movff	i1___ftadd@f2+2,??i1___ftadd+3
 15883  003DBA  281F               	incf	??i1___ftadd,w,c
 15884  003DBC  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 15885  003DBE  D004               	goto	i1u809_20
 15886  003DC0                     i1u809_25:
 15887  003DC0  90D8               	bcf	status,0,c
 15888  003DC2  3222               	rrcf	??i1___ftadd+3,f,c
 15889  003DC4  3221               	rrcf	??i1___ftadd+2,f,c
 15890  003DC6  3220               	rrcf	??i1___ftadd+1,f,c
 15891  003DC8                     i1u809_20:
 15892  003DC8  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 15893  003DCA  D7FA               	goto	i1u809_25
 15894  003DCC  5020               	movf	??i1___ftadd+1,w,c
 15895  003DCE  6E25               	movwf	i1___ftadd@exp2,c
 15896  003DD0  5026               	movf	i1___ftadd@exp1,w,c
 15897  003DD2  B4D8               	btfsc	status,2,c
 15898  003DD4  D00B               	goto	i1l715
 15899  003DD6  5025               	movf	i1___ftadd@exp2,w,c
 15900  003DD8  6026               	cpfslt	i1___ftadd@exp1,c
 15901  003DDA  D00F               	goto	i1l9292
 15902  003DDC  5026               	movf	i1___ftadd@exp1,w,c
 15903  003DDE  0800               	sublw	0
 15904  003DE0  2425               	addwf	i1___ftadd@exp2,w,c
 15905  003DE2  6E1F               	movwf	??i1___ftadd& (0+255),c
 15906  003DE4  0E19               	movlw	25
 15907  003DE6  5C1F               	subwf	??i1___ftadd,w,c
 15908  003DE8  A0D8               	btfss	status,0,c
 15909  003DEA  D007               	goto	i1l9292
 15910  003DEC                     i1l715:
 15911  003DEC  C01C  F019         	movff	i1___ftadd@f2,?i1___ftadd
 15912  003DF0  C01D  F01A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 15913  003DF4  C01E  F01B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 15914  003DF8  D0AA               	goto	i1l716
 15915  003DFA                     i1l9292:
 15916  003DFA  5025               	movf	i1___ftadd@exp2,w,c
 15917  003DFC  B4D8               	btfsc	status,2,c
 15918  003DFE  D00B               	goto	i1l719
 15919  003E00  5026               	movf	i1___ftadd@exp1,w,c
 15920  003E02  6025               	cpfslt	i1___ftadd@exp2,c
 15921  003E04  D00F               	goto	i1l9298
 15922  003E06  5025               	movf	i1___ftadd@exp2,w,c
 15923  003E08  0800               	sublw	0
 15924  003E0A  2426               	addwf	i1___ftadd@exp1,w,c
 15925  003E0C  6E1F               	movwf	??i1___ftadd& (0+255),c
 15926  003E0E  0E19               	movlw	25
 15927  003E10  5C1F               	subwf	??i1___ftadd,w,c
 15928  003E12  A0D8               	btfss	status,0,c
 15929  003E14  D007               	goto	i1l9298
 15930  003E16                     i1l719:
 15931  003E16  C019  F019         	movff	i1___ftadd@f1,?i1___ftadd
 15932  003E1A  C01A  F01A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 15933  003E1E  C01B  F01B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 15934  003E22  D095               	goto	i1l716
 15935  003E24                     i1l9298:
 15936  003E24  6E1F               	movwf	??i1___ftadd& (0+255),c
 15937  003E26  0E06               	movlw	6
 15938  003E28  6E24               	movwf	i1___ftadd@sign,c
 15939  003E2A  501F               	movf	??i1___ftadd& (0+255),w,c
 15940  003E2C  BE1B               	btfsc	i1___ftadd@f1+2,7,c
 15941  003E2E  8E24               	bsf	i1___ftadd@sign,7,c
 15942  003E30  BE1E               	btfsc	i1___ftadd@f2+2,7,c
 15943  003E32  8C24               	bsf	i1___ftadd@sign,6,c
 15944  003E34  8E1A               	bsf	i1___ftadd@f1+1,7,c
 15945  003E36  0EFF               	movlw	255
 15946  003E38  1619               	andwf	i1___ftadd@f1,f,c
 15947  003E3A  0EFF               	movlw	255
 15948  003E3C  161A               	andwf	i1___ftadd@f1+1,f,c
 15949  003E3E  0E00               	movlw	0
 15950  003E40  161B               	andwf	i1___ftadd@f1+2,f,c
 15951  003E42  8E1D               	bsf	i1___ftadd@f2+1,7,c
 15952  003E44  0EFF               	movlw	255
 15953  003E46  161C               	andwf	i1___ftadd@f2,f,c
 15954  003E48  0EFF               	movlw	255
 15955  003E4A  161D               	andwf	i1___ftadd@f2+1,f,c
 15956  003E4C  0E00               	movlw	0
 15957  003E4E  161E               	andwf	i1___ftadd@f2+2,f,c
 15958  003E50  5025               	movf	i1___ftadd@exp2,w,c
 15959  003E52  6026               	cpfslt	i1___ftadd@exp1,c
 15960  003E54  D018               	goto	i1l9324
 15961  003E56                     i1l9314:
 15962  003E56  90D8               	bcf	status,0,c
 15963  003E58  361C               	rlcf	i1___ftadd@f2,f,c
 15964  003E5A  361D               	rlcf	i1___ftadd@f2+1,f,c
 15965  003E5C  361E               	rlcf	i1___ftadd@f2+2,f,c
 15966  003E5E  0625               	decf	i1___ftadd@exp2,f,c
 15967  003E60  5025               	movf	i1___ftadd@exp2,w,c
 15968  003E62  1826               	xorwf	i1___ftadd@exp1,w,c
 15969  003E64  B4D8               	btfsc	status,2,c
 15970  003E66  D00B               	goto	i1l9322
 15971  003E68  0624               	decf	i1___ftadd@sign,f,c
 15972  003E6A  5024               	movf	i1___ftadd@sign& (0+255),w,c
 15973  003E6C  0B07               	andlw	7
 15974  003E6E  B4D8               	btfsc	status,2,c
 15975  003E70  D006               	goto	i1l9322
 15976  003E72  D7F1               	goto	i1l9314
 15977  003E74                     i1l9320:
 15978  003E74  90D8               	bcf	status,0,c
 15979  003E76  321B               	rrcf	i1___ftadd@f1+2,f,c
 15980  003E78  321A               	rrcf	i1___ftadd@f1+1,f,c
 15981  003E7A  3219               	rrcf	i1___ftadd@f1,f,c
 15982  003E7C  2A26               	incf	i1___ftadd@exp1,f,c
 15983  003E7E                     i1l9322:
 15984  003E7E  5025               	movf	i1___ftadd@exp2,w,c
 15985  003E80  6226               	cpfseq	i1___ftadd@exp1,c
 15986  003E82  D7F8               	goto	i1l9320
 15987  003E84  D01A               	goto	i1l730
 15988  003E86                     i1l9324:
 15989  003E86  5026               	movf	i1___ftadd@exp1,w,c
 15990  003E88  6025               	cpfslt	i1___ftadd@exp2,c
 15991  003E8A  D017               	goto	i1l730
 15992  003E8C                     i1l9326:
 15993  003E8C  90D8               	bcf	status,0,c
 15994  003E8E  3619               	rlcf	i1___ftadd@f1,f,c
 15995  003E90  361A               	rlcf	i1___ftadd@f1+1,f,c
 15996  003E92  361B               	rlcf	i1___ftadd@f1+2,f,c
 15997  003E94  0626               	decf	i1___ftadd@exp1,f,c
 15998  003E96  5025               	movf	i1___ftadd@exp2,w,c
 15999  003E98  1826               	xorwf	i1___ftadd@exp1,w,c
 16000  003E9A  B4D8               	btfsc	status,2,c
 16001  003E9C  D00B               	goto	i1l9334
 16002  003E9E  0624               	decf	i1___ftadd@sign,f,c
 16003  003EA0  5024               	movf	i1___ftadd@sign& (0+255),w,c
 16004  003EA2  0B07               	andlw	7
 16005  003EA4  B4D8               	btfsc	status,2,c
 16006  003EA6  D006               	goto	i1l9334
 16007  003EA8  D7F1               	goto	i1l9326
 16008  003EAA                     i1l9332:
 16009  003EAA  90D8               	bcf	status,0,c
 16010  003EAC  321E               	rrcf	i1___ftadd@f2+2,f,c
 16011  003EAE  321D               	rrcf	i1___ftadd@f2+1,f,c
 16012  003EB0  321C               	rrcf	i1___ftadd@f2,f,c
 16013  003EB2  2A25               	incf	i1___ftadd@exp2,f,c
 16014  003EB4                     i1l9334:
 16015  003EB4  5025               	movf	i1___ftadd@exp2,w,c
 16016  003EB6  6226               	cpfseq	i1___ftadd@exp1,c
 16017  003EB8  D7F8               	goto	i1l9332
 16018  003EBA                     i1l730:
 16019  003EBA  AE24               	btfss	i1___ftadd@sign,7,c
 16020  003EBC  D00C               	goto	i1l739
 16021  003EBE  0EFF               	movlw	255
 16022  003EC0  1A19               	xorwf	i1___ftadd@f1,f,c
 16023  003EC2  0EFF               	movlw	255
 16024  003EC4  1A1A               	xorwf	i1___ftadd@f1+1,f,c
 16025  003EC6  0EFF               	movlw	255
 16026  003EC8  1A1B               	xorwf	i1___ftadd@f1+2,f,c
 16027  003ECA  0E01               	movlw	1
 16028  003ECC  2619               	addwf	i1___ftadd@f1,f,c
 16029  003ECE  0E00               	movlw	0
 16030  003ED0  221A               	addwfc	i1___ftadd@f1+1,f,c
 16031  003ED2  0E00               	movlw	0
 16032  003ED4  221B               	addwfc	i1___ftadd@f1+2,f,c
 16033  003ED6                     i1l739:
 16034  003ED6  AC24               	btfss	i1___ftadd@sign,6,c
 16035  003ED8  D00C               	goto	i1l9340
 16036  003EDA  0EFF               	movlw	255
 16037  003EDC  1A1C               	xorwf	i1___ftadd@f2,f,c
 16038  003EDE  0EFF               	movlw	255
 16039  003EE0  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 16040  003EE2  0EFF               	movlw	255
 16041  003EE4  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 16042  003EE6  0E01               	movlw	1
 16043  003EE8  261C               	addwf	i1___ftadd@f2,f,c
 16044  003EEA  0E00               	movlw	0
 16045  003EEC  221D               	addwfc	i1___ftadd@f2+1,f,c
 16046  003EEE  0E00               	movlw	0
 16047  003EF0  221E               	addwfc	i1___ftadd@f2+2,f,c
 16048  003EF2                     i1l9340:
 16049  003EF2  6E1F               	movwf	??i1___ftadd& (0+255),c
 16050  003EF4  0E00               	movlw	0
 16051  003EF6  6E24               	movwf	i1___ftadd@sign,c
 16052  003EF8  501F               	movf	??i1___ftadd& (0+255),w,c
 16053  003EFA  5019               	movf	i1___ftadd@f1,w,c
 16054  003EFC  261C               	addwf	i1___ftadd@f2,f,c
 16055  003EFE  501A               	movf	i1___ftadd@f1+1,w,c
 16056  003F00  221D               	addwfc	i1___ftadd@f2+1,f,c
 16057  003F02  501B               	movf	i1___ftadd@f1+2,w,c
 16058  003F04  221E               	addwfc	i1___ftadd@f2+2,f,c
 16059  003F06  AE1E               	btfss	i1___ftadd@f2+2,7,c
 16060  003F08  D010               	goto	i1l9350
 16061  003F0A  0EFF               	movlw	255
 16062  003F0C  1A1C               	xorwf	i1___ftadd@f2,f,c
 16063  003F0E  0EFF               	movlw	255
 16064  003F10  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 16065  003F12  0EFF               	movlw	255
 16066  003F14  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 16067  003F16  0E01               	movlw	1
 16068  003F18  261C               	addwf	i1___ftadd@f2,f,c
 16069  003F1A  0E00               	movlw	0
 16070  003F1C  221D               	addwfc	i1___ftadd@f2+1,f,c
 16071  003F1E  0E00               	movlw	0
 16072  003F20  221E               	addwfc	i1___ftadd@f2+2,f,c
 16073  003F22  6E1F               	movwf	??i1___ftadd& (0+255),c
 16074  003F24  0E01               	movlw	1
 16075  003F26  6E24               	movwf	i1___ftadd@sign,c
 16076  003F28  501F               	movf	??i1___ftadd& (0+255),w,c
 16077  003F2A                     i1l9350:
 16078  003F2A  C01C  F011         	movff	i1___ftadd@f2,?i1___ftpack
 16079  003F2E  C01D  F012         	movff	i1___ftadd@f2+1,?i1___ftpack+1
 16080  003F32  C01E  F013         	movff	i1___ftadd@f2+2,?i1___ftpack+2
 16081  003F36  C026  F014         	movff	i1___ftadd@exp1,?i1___ftpack+3
 16082  003F3A  C024  F015         	movff	i1___ftadd@sign,?i1___ftpack+4
 16083  003F3E  EC1E  F02A         	call	i1___ftpack	;wreg free
 16084  003F42  C013  F01B         	movff	?i1___ftpack+2,?i1___ftadd+2
 16085  003F46  C012  F01A         	movff	?i1___ftpack+1,?i1___ftadd+1
 16086  003F4A  C011  F019         	movff	?i1___ftpack,?i1___ftadd
 16087  003F4E                     i1l716:
 16088  003F4E  0012               	return	
 16089  003F50                     __end_ofi1___ftadd:
 16090                           	opt stack 0
 16091                           pclatu	equ	0xFFB
 16092                           pclath	equ	0xFFA
 16093                           tblptru	equ	0xFF8
 16094                           tblptrh	equ	0xFF7
 16095                           tblptrl	equ	0xFF6
 16096                           tablat	equ	0xFF5
 16097                           prodh	equ	0xFF4
 16098                           prodl	equ	0xFF3
 16099                           intcon	equ	0xFF2
 16100                           intcon2	equ	0xFF1
 16101                           postinc0	equ	0xFEE
 16102                           fsr0h	equ	0xFEA
 16103                           fsr0l	equ	0xFE9
 16104                           wreg	equ	0xFE8
 16105                           fsr1h	equ	0xFE2
 16106                           fsr1l	equ	0xFE1
 16107                           bsr	equ	0xFE0
 16108                           indf2	equ	0xFDF
 16109                           postinc2	equ	0xFDE
 16110                           postdec2	equ	0xFDD
 16111                           fsr2h	equ	0xFDA
 16112                           fsr2l	equ	0xFD9
 16113                           status	equ	0xFD8
 16114                           
 16115 ;; *************** function i1_scale *****************
 16116 ;; Defined at:
 16117 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 16118 ;; Parameters:    Size  Location     Type
 16119 ;;  scale           1   70[COMRAM] char 
 16120 ;; Auto vars:     Size  Location     Type
 16121 ;;  scale           3    0        float 
 16122 ;;  scale           3    0        float 
 16123 ;; Return value:  Size  Location     Type
 16124 ;;                  3   70[COMRAM] float 
 16125 ;; Registers used:
 16126 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16127 ;; Tracked objects:
 16128 ;;		On entry : 0/0
 16129 ;;		On exit  : 0/0
 16130 ;;		Unchanged: 0/0
 16131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16132 ;;      Params:         3       0       0       0       0       0       0       0       0
 16133 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16134 ;;      Temps:          0       6       0       0       0       0       0       0       0
 16135 ;;      Totals:         3       9       0       0       0       0       0       0       0
 16136 ;;Total ram usage:       12 bytes
 16137 ;; Hardware stack levels used:    1
 16138 ;; Hardware stack levels required when called:    5
 16139 ;; This function calls:
 16140 ;;		i1___awdiv
 16141 ;;		i1___awmod
 16142 ;;		i1___ftmul
 16143 ;;		i1___wmul
 16144 ;; This function is called by:
 16145 ;;		i1_sprintf
 16146 ;; This function uses a non-reentrant model
 16147 ;;
 16148                           
 16149                           	psect	text60
 16150  002A28                     __ptext60:
 16151                           	opt stack 0
 16152  002A28                     i1_scale:
 16153                           	opt stack 16
 16154                           
 16155                           ;doprnt.c: 428: if(scl < 0) {
 16156                           
 16157                           ;incstack = 0
 16158                           ;incstack = 0
 16159  002A28  AE47               	btfss	i1scale@scl,7,c
 16160  002A2A  D108               	goto	i1l11164
 16161                           
 16162                           ;doprnt.c: 429: scl = -scl;
 16163  002A2C  6C47               	negf	i1scale@scl,c
 16164                           
 16165                           ;doprnt.c: 430: if(scl>=110)
 16166  002A2E  5047               	movf	i1scale@scl,w,c
 16167  002A30  0A80               	xorlw	128
 16168  002A32  0F12               	addlw	-238
 16169  002A34  A0D8               	btfss	status,0,c
 16170  002A36  D09D               	goto	i1l11154
 16171                           
 16172                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16173  002A38  0E00               	movlw	0
 16174  002A3A  6E24               	movwf	?i1___wmul+3,c
 16175  002A3C  0E03               	movlw	3
 16176  002A3E  6E23               	movwf	?i1___wmul+2,c
 16177  002A40  0E00               	movlw	0
 16178  002A42  6E1B               	movwf	?i1___awdiv+3,c
 16179  002A44  0E0A               	movlw	10
 16180  002A46  6E1A               	movwf	?i1___awdiv+2,c
 16181  002A48  0E00               	movlw	0
 16182  002A4A  6E14               	movwf	?i1___awmod+3,c
 16183  002A4C  0E64               	movlw	100
 16184  002A4E  6E13               	movwf	?i1___awmod+2,c
 16185  002A50  5047               	movf	i1scale@scl,w,c
 16186  002A52  6E11               	movwf	?i1___awmod,c
 16187  002A54  6A12               	clrf	?i1___awmod+1,c
 16188  002A56  BE11               	btfsc	?i1___awmod,7,c
 16189  002A58  0612               	decf	?i1___awmod+1,f,c
 16190  002A5A  ECA8  F02D         	call	i1___awmod	;wreg free
 16191  002A5E  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16192  002A62  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16193  002A66  EC12  F02C         	call	i1___awdiv	;wreg free
 16194  002A6A  0E09               	movlw	9
 16195  002A6C  2418               	addwf	?i1___awdiv,w,c
 16196  002A6E  6E21               	movwf	?i1___wmul,c
 16197  002A70  0E00               	movlw	0
 16198  002A72  2019               	addwfc	?i1___awdiv+1,w,c
 16199  002A74  6E22               	movwf	?i1___wmul+1,c
 16200  002A76  ECE4  F030         	call	i1___wmul	;wreg free
 16201  002A7A  0E28               	movlw	low __npowers_
 16202  002A7C  2421               	addwf	?i1___wmul,w,c
 16203  002A7E  6EF6               	movwf	tblptrl,c
 16204  002A80  0E08               	movlw	high __npowers_
 16205  002A82  2022               	addwfc	?i1___wmul+1,w,c
 16206  002A84  6EF7               	movwf	tblptrh,c
 16207  002A86  0009               	tblrd		*+
 16208  002A88  CFF5 F060          	movff	tablat,??i1_scale
 16209  002A8C  0009               	tblrd		*+
 16210  002A8E  CFF5 F061          	movff	tablat,??i1_scale+1
 16211  002A92  0009               	tblrd		*+
 16212  002A94  CFF5 F062          	movff	tablat,??i1_scale+2
 16213  002A98  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16214  002A9C  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16215  002AA0  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16216  002AA4  0E00               	movlw	0
 16217  002AA6  6E24               	movwf	?i1___wmul+3,c
 16218  002AA8  0E03               	movlw	3
 16219  002AAA  6E23               	movwf	?i1___wmul+2,c
 16220  002AAC  0E00               	movlw	0
 16221  002AAE  6E1B               	movwf	?i1___awdiv+3,c
 16222  002AB0  0E64               	movlw	100
 16223  002AB2  6E1A               	movwf	?i1___awdiv+2,c
 16224  002AB4  5047               	movf	i1scale@scl,w,c
 16225  002AB6  6E18               	movwf	?i1___awdiv,c
 16226  002AB8  6A19               	clrf	?i1___awdiv+1,c
 16227  002ABA  BE18               	btfsc	?i1___awdiv,7,c
 16228  002ABC  0619               	decf	?i1___awdiv+1,f,c
 16229  002ABE  EC12  F02C         	call	i1___awdiv	;wreg free
 16230  002AC2  0E12               	movlw	18
 16231  002AC4  2418               	addwf	?i1___awdiv,w,c
 16232  002AC6  6E21               	movwf	?i1___wmul,c
 16233  002AC8  0E00               	movlw	0
 16234  002ACA  2019               	addwfc	?i1___awdiv+1,w,c
 16235  002ACC  6E22               	movwf	?i1___wmul+1,c
 16236  002ACE  ECE4  F030         	call	i1___wmul	;wreg free
 16237  002AD2  0E28               	movlw	low __npowers_
 16238  002AD4  2421               	addwf	?i1___wmul,w,c
 16239  002AD6  6EF6               	movwf	tblptrl,c
 16240  002AD8  0E08               	movlw	high __npowers_
 16241  002ADA  2022               	addwfc	?i1___wmul+1,w,c
 16242  002ADC  6EF7               	movwf	tblptrh,c
 16243  002ADE  0009               	tblrd		*+
 16244  002AE0  CFF5 F063          	movff	tablat,??i1_scale+3
 16245  002AE4  0009               	tblrd		*+
 16246  002AE6  CFF5 F064          	movff	tablat,??i1_scale+4
 16247  002AEA  0009               	tblrd		*+
 16248  002AEC  CFF5 F065          	movff	tablat,??i1_scale+5
 16249  002AF0  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 16250  002AF4  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 16251  002AF8  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 16252  002AFC  EC84  F024         	call	i1___ftmul	;wreg free
 16253  002B00  C038  F068         	movff	?i1___ftmul+2,i1_scale$1835+2
 16254  002B04  C037  F067         	movff	?i1___ftmul+1,i1_scale$1835+1
 16255  002B08  C036  F066         	movff	?i1___ftmul,i1_scale$1835
 16256                           
 16257                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16258  002B0C  C066  F036         	movff	i1_scale$1835,?i1___ftmul
 16259  002B10  C067  F037         	movff	i1_scale$1835+1,?i1___ftmul+1
 16260  002B14  C068  F038         	movff	i1_scale$1835+2,?i1___ftmul+2
 16261  002B18  0E00               	movlw	0
 16262  002B1A  6E24               	movwf	?i1___wmul+3,c
 16263  002B1C  0E03               	movlw	3
 16264  002B1E  6E23               	movwf	?i1___wmul+2,c
 16265  002B20  0E00               	movlw	0
 16266  002B22  6E14               	movwf	?i1___awmod+3,c
 16267  002B24  0E0A               	movlw	10
 16268  002B26  6E13               	movwf	?i1___awmod+2,c
 16269  002B28  5047               	movf	i1scale@scl,w,c
 16270  002B2A  6E11               	movwf	?i1___awmod,c
 16271  002B2C  6A12               	clrf	?i1___awmod+1,c
 16272  002B2E  BE11               	btfsc	?i1___awmod,7,c
 16273  002B30  0612               	decf	?i1___awmod+1,f,c
 16274  002B32  ECA8  F02D         	call	i1___awmod	;wreg free
 16275  002B36  C011  F021         	movff	?i1___awmod,?i1___wmul
 16276  002B3A  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16277  002B3E  ECE4  F030         	call	i1___wmul	;wreg free
 16278  002B42  0E28               	movlw	low __npowers_
 16279  002B44  2421               	addwf	?i1___wmul,w,c
 16280  002B46  6EF6               	movwf	tblptrl,c
 16281  002B48  0E08               	movlw	high __npowers_
 16282  002B4A  2022               	addwfc	?i1___wmul+1,w,c
 16283  002B4C  6EF7               	movwf	tblptrh,c
 16284  002B4E  0009               	tblrd		*+
 16285  002B50  CFF5 F060          	movff	tablat,??i1_scale
 16286  002B54  0009               	tblrd		*+
 16287  002B56  CFF5 F061          	movff	tablat,??i1_scale+1
 16288  002B5A  0009               	tblrd		*+
 16289  002B5C  CFF5 F062          	movff	tablat,??i1_scale+2
 16290  002B60  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16291  002B64  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16292  002B68  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16293  002B6C  EC84  F024         	call	i1___ftmul	;wreg free
 16294  002B70  D164               	goto	L24
 16295  002B72                     i1l11154:
 16296                           
 16297                           ;doprnt.c: 432: else if(scl > 10)
 16298  002B72  5047               	movf	i1scale@scl,w,c
 16299  002B74  0A80               	xorlw	128
 16300  002B76  0F75               	addlw	-139
 16301  002B78  A0D8               	btfss	status,0,c
 16302  002B7A  D059               	goto	i1l11160
 16303                           
 16304                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 16305  002B7C  0E00               	movlw	0
 16306  002B7E  6E24               	movwf	?i1___wmul+3,c
 16307  002B80  0E03               	movlw	3
 16308  002B82  6E23               	movwf	?i1___wmul+2,c
 16309  002B84  0E00               	movlw	0
 16310  002B86  6E1B               	movwf	?i1___awdiv+3,c
 16311  002B88  0E0A               	movlw	10
 16312  002B8A  6E1A               	movwf	?i1___awdiv+2,c
 16313  002B8C  5047               	movf	i1scale@scl,w,c
 16314  002B8E  6E18               	movwf	?i1___awdiv,c
 16315  002B90  6A19               	clrf	?i1___awdiv+1,c
 16316  002B92  BE18               	btfsc	?i1___awdiv,7,c
 16317  002B94  0619               	decf	?i1___awdiv+1,f,c
 16318  002B96  EC12  F02C         	call	i1___awdiv	;wreg free
 16319  002B9A  0E09               	movlw	9
 16320  002B9C  2418               	addwf	?i1___awdiv,w,c
 16321  002B9E  6E21               	movwf	?i1___wmul,c
 16322  002BA0  0E00               	movlw	0
 16323  002BA2  2019               	addwfc	?i1___awdiv+1,w,c
 16324  002BA4  6E22               	movwf	?i1___wmul+1,c
 16325  002BA6  ECE4  F030         	call	i1___wmul	;wreg free
 16326  002BAA  0E28               	movlw	low __npowers_
 16327  002BAC  2421               	addwf	?i1___wmul,w,c
 16328  002BAE  6EF6               	movwf	tblptrl,c
 16329  002BB0  0E08               	movlw	high __npowers_
 16330  002BB2  2022               	addwfc	?i1___wmul+1,w,c
 16331  002BB4  6EF7               	movwf	tblptrh,c
 16332  002BB6  0009               	tblrd		*+
 16333  002BB8  CFF5 F060          	movff	tablat,??i1_scale
 16334  002BBC  0009               	tblrd		*+
 16335  002BBE  CFF5 F061          	movff	tablat,??i1_scale+1
 16336  002BC2  0009               	tblrd		*+
 16337  002BC4  CFF5 F062          	movff	tablat,??i1_scale+2
 16338  002BC8  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 16339  002BCC  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 16340  002BD0  C060  F036         	movff	??i1_scale,?i1___ftmul
 16341  002BD4  0E00               	movlw	0
 16342  002BD6  6E24               	movwf	?i1___wmul+3,c
 16343  002BD8  0E03               	movlw	3
 16344  002BDA  6E23               	movwf	?i1___wmul+2,c
 16345  002BDC  0E00               	movlw	0
 16346  002BDE  6E14               	movwf	?i1___awmod+3,c
 16347  002BE0  0E0A               	movlw	10
 16348  002BE2  6E13               	movwf	?i1___awmod+2,c
 16349  002BE4  5047               	movf	i1scale@scl,w,c
 16350  002BE6  6E11               	movwf	?i1___awmod,c
 16351  002BE8  6A12               	clrf	?i1___awmod+1,c
 16352  002BEA  BE11               	btfsc	?i1___awmod,7,c
 16353  002BEC  0612               	decf	?i1___awmod+1,f,c
 16354  002BEE  ECA8  F02D         	call	i1___awmod	;wreg free
 16355  002BF2  C011  F021         	movff	?i1___awmod,?i1___wmul
 16356  002BF6  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16357  002BFA  ECE4  F030         	call	i1___wmul	;wreg free
 16358  002BFE  0E28               	movlw	low __npowers_
 16359  002C00  2421               	addwf	?i1___wmul,w,c
 16360  002C02  6EF6               	movwf	tblptrl,c
 16361  002C04  0E08               	movlw	high __npowers_
 16362  002C06  2022               	addwfc	?i1___wmul+1,w,c
 16363  002C08  6EF7               	movwf	tblptrh,c
 16364  002C0A  0009               	tblrd		*+
 16365  002C0C  CFF5 F063          	movff	tablat,??i1_scale+3
 16366  002C10  0009               	tblrd		*+
 16367  002C12  CFF5 F064          	movff	tablat,??i1_scale+4
 16368  002C16  0009               	tblrd		*+
 16369  002C18  CFF5 F065          	movff	tablat,??i1_scale+5
 16370  002C1C  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 16371  002C20  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 16372  002C24  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 16373  002C28  EC84  F024         	call	i1___ftmul	;wreg free
 16374  002C2C  D106               	goto	L24
 16375  002C2E                     i1l11160:
 16376                           
 16377                           ;doprnt.c: 434: return _npowers_[scl];
 16378  002C2E  5047               	movf	i1scale@scl,w,c
 16379  002C30  0D03               	mullw	3
 16380  002C32  0E28               	movlw	low __npowers_
 16381  002C34  24F3               	addwf	prodl,w,c
 16382  002C36  6EF6               	movwf	tblptrl,c
 16383  002C38  0E08               	movlw	high __npowers_
 16384  002C3A  D10C               	goto	L23
 16385  002C3C                     i1l11164:
 16386                           
 16387                           ;doprnt.c: 435: }
 16388                           ;doprnt.c: 436: if(scl>=110)
 16389  002C3C  5047               	movf	i1scale@scl,w,c
 16390  002C3E  0A80               	xorlw	128
 16391  002C40  0F12               	addlw	-238
 16392  002C42  A0D8               	btfss	status,0,c
 16393  002C44  D09D               	goto	i1l11172
 16394                           
 16395                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16396  002C46  0E00               	movlw	0
 16397  002C48  6E24               	movwf	?i1___wmul+3,c
 16398  002C4A  0E03               	movlw	3
 16399  002C4C  6E23               	movwf	?i1___wmul+2,c
 16400  002C4E  0E00               	movlw	0
 16401  002C50  6E1B               	movwf	?i1___awdiv+3,c
 16402  002C52  0E0A               	movlw	10
 16403  002C54  6E1A               	movwf	?i1___awdiv+2,c
 16404  002C56  0E00               	movlw	0
 16405  002C58  6E14               	movwf	?i1___awmod+3,c
 16406  002C5A  0E64               	movlw	100
 16407  002C5C  6E13               	movwf	?i1___awmod+2,c
 16408  002C5E  5047               	movf	i1scale@scl,w,c
 16409  002C60  6E11               	movwf	?i1___awmod,c
 16410  002C62  6A12               	clrf	?i1___awmod+1,c
 16411  002C64  BE11               	btfsc	?i1___awmod,7,c
 16412  002C66  0612               	decf	?i1___awmod+1,f,c
 16413  002C68  ECA8  F02D         	call	i1___awmod	;wreg free
 16414  002C6C  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16415  002C70  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16416  002C74  EC12  F02C         	call	i1___awdiv	;wreg free
 16417  002C78  0E09               	movlw	9
 16418  002C7A  2418               	addwf	?i1___awdiv,w,c
 16419  002C7C  6E21               	movwf	?i1___wmul,c
 16420  002C7E  0E00               	movlw	0
 16421  002C80  2019               	addwfc	?i1___awdiv+1,w,c
 16422  002C82  6E22               	movwf	?i1___wmul+1,c
 16423  002C84  ECE4  F030         	call	i1___wmul	;wreg free
 16424  002C88  0E4F               	movlw	low __powers_
 16425  002C8A  2421               	addwf	?i1___wmul,w,c
 16426  002C8C  6EF6               	movwf	tblptrl,c
 16427  002C8E  0E08               	movlw	high __powers_
 16428  002C90  2022               	addwfc	?i1___wmul+1,w,c
 16429  002C92  6EF7               	movwf	tblptrh,c
 16430  002C94  0009               	tblrd		*+
 16431  002C96  CFF5 F060          	movff	tablat,??i1_scale
 16432  002C9A  0009               	tblrd		*+
 16433  002C9C  CFF5 F061          	movff	tablat,??i1_scale+1
 16434  002CA0  0009               	tblrd		*+
 16435  002CA2  CFF5 F062          	movff	tablat,??i1_scale+2
 16436  002CA6  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16437  002CAA  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16438  002CAE  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16439  002CB2  0E00               	movlw	0
 16440  002CB4  6E24               	movwf	?i1___wmul+3,c
 16441  002CB6  0E03               	movlw	3
 16442  002CB8  6E23               	movwf	?i1___wmul+2,c
 16443  002CBA  0E00               	movlw	0
 16444  002CBC  6E1B               	movwf	?i1___awdiv+3,c
 16445  002CBE  0E64               	movlw	100
 16446  002CC0  6E1A               	movwf	?i1___awdiv+2,c
 16447  002CC2  5047               	movf	i1scale@scl,w,c
 16448  002CC4  6E18               	movwf	?i1___awdiv,c
 16449  002CC6  6A19               	clrf	?i1___awdiv+1,c
 16450  002CC8  BE18               	btfsc	?i1___awdiv,7,c
 16451  002CCA  0619               	decf	?i1___awdiv+1,f,c
 16452  002CCC  EC12  F02C         	call	i1___awdiv	;wreg free
 16453  002CD0  0E12               	movlw	18
 16454  002CD2  2418               	addwf	?i1___awdiv,w,c
 16455  002CD4  6E21               	movwf	?i1___wmul,c
 16456  002CD6  0E00               	movlw	0
 16457  002CD8  2019               	addwfc	?i1___awdiv+1,w,c
 16458  002CDA  6E22               	movwf	?i1___wmul+1,c
 16459  002CDC  ECE4  F030         	call	i1___wmul	;wreg free
 16460  002CE0  0E4F               	movlw	low __powers_
 16461  002CE2  2421               	addwf	?i1___wmul,w,c
 16462  002CE4  6EF6               	movwf	tblptrl,c
 16463  002CE6  0E08               	movlw	high __powers_
 16464  002CE8  2022               	addwfc	?i1___wmul+1,w,c
 16465  002CEA  6EF7               	movwf	tblptrh,c
 16466  002CEC  0009               	tblrd		*+
 16467  002CEE  CFF5 F063          	movff	tablat,??i1_scale+3
 16468  002CF2  0009               	tblrd		*+
 16469  002CF4  CFF5 F064          	movff	tablat,??i1_scale+4
 16470  002CF8  0009               	tblrd		*+
 16471  002CFA  CFF5 F065          	movff	tablat,??i1_scale+5
 16472  002CFE  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 16473  002D02  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 16474  002D06  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 16475  002D0A  EC84  F024         	call	i1___ftmul	;wreg free
 16476  002D0E  C038  F068         	movff	?i1___ftmul+2,i1_scale$1835+2
 16477  002D12  C037  F067         	movff	?i1___ftmul+1,i1_scale$1835+1
 16478  002D16  C036  F066         	movff	?i1___ftmul,i1_scale$1835
 16479                           
 16480                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16481  002D1A  C066  F036         	movff	i1_scale$1835,?i1___ftmul
 16482  002D1E  C067  F037         	movff	i1_scale$1835+1,?i1___ftmul+1
 16483  002D22  C068  F038         	movff	i1_scale$1835+2,?i1___ftmul+2
 16484  002D26  0E00               	movlw	0
 16485  002D28  6E24               	movwf	?i1___wmul+3,c
 16486  002D2A  0E03               	movlw	3
 16487  002D2C  6E23               	movwf	?i1___wmul+2,c
 16488  002D2E  0E00               	movlw	0
 16489  002D30  6E14               	movwf	?i1___awmod+3,c
 16490  002D32  0E0A               	movlw	10
 16491  002D34  6E13               	movwf	?i1___awmod+2,c
 16492  002D36  5047               	movf	i1scale@scl,w,c
 16493  002D38  6E11               	movwf	?i1___awmod,c
 16494  002D3A  6A12               	clrf	?i1___awmod+1,c
 16495  002D3C  BE11               	btfsc	?i1___awmod,7,c
 16496  002D3E  0612               	decf	?i1___awmod+1,f,c
 16497  002D40  ECA8  F02D         	call	i1___awmod	;wreg free
 16498  002D44  C011  F021         	movff	?i1___awmod,?i1___wmul
 16499  002D48  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16500  002D4C  ECE4  F030         	call	i1___wmul	;wreg free
 16501  002D50  0E4F               	movlw	low __powers_
 16502  002D52  2421               	addwf	?i1___wmul,w,c
 16503  002D54  6EF6               	movwf	tblptrl,c
 16504  002D56  0E08               	movlw	high __powers_
 16505  002D58  2022               	addwfc	?i1___wmul+1,w,c
 16506  002D5A  6EF7               	movwf	tblptrh,c
 16507  002D5C  0009               	tblrd		*+
 16508  002D5E  CFF5 F060          	movff	tablat,??i1_scale
 16509  002D62  0009               	tblrd		*+
 16510  002D64  CFF5 F061          	movff	tablat,??i1_scale+1
 16511  002D68  0009               	tblrd		*+
 16512  002D6A  CFF5 F062          	movff	tablat,??i1_scale+2
 16513  002D6E  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16514  002D72  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16515  002D76  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16516  002D7A  EC84  F024         	call	i1___ftmul	;wreg free
 16517  002D7E  D05D               	goto	L24
 16518  002D80                     i1l11172:
 16519                           
 16520                           ;doprnt.c: 438: else if(scl > 10)
 16521  002D80  5047               	movf	i1scale@scl,w,c
 16522  002D82  0A80               	xorlw	128
 16523  002D84  0F75               	addlw	-139
 16524  002D86  A0D8               	btfss	status,0,c
 16525  002D88  D05F               	goto	i1l11178
 16526                           
 16527                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 16528  002D8A  0E00               	movlw	0
 16529  002D8C  6E24               	movwf	?i1___wmul+3,c
 16530  002D8E  0E03               	movlw	3
 16531  002D90  6E23               	movwf	?i1___wmul+2,c
 16532  002D92  0E00               	movlw	0
 16533  002D94  6E1B               	movwf	?i1___awdiv+3,c
 16534  002D96  0E0A               	movlw	10
 16535  002D98  6E1A               	movwf	?i1___awdiv+2,c
 16536  002D9A  5047               	movf	i1scale@scl,w,c
 16537  002D9C  6E18               	movwf	?i1___awdiv,c
 16538  002D9E  6A19               	clrf	?i1___awdiv+1,c
 16539  002DA0  BE18               	btfsc	?i1___awdiv,7,c
 16540  002DA2  0619               	decf	?i1___awdiv+1,f,c
 16541  002DA4  EC12  F02C         	call	i1___awdiv	;wreg free
 16542  002DA8  0E09               	movlw	9
 16543  002DAA  2418               	addwf	?i1___awdiv,w,c
 16544  002DAC  6E21               	movwf	?i1___wmul,c
 16545  002DAE  0E00               	movlw	0
 16546  002DB0  2019               	addwfc	?i1___awdiv+1,w,c
 16547  002DB2  6E22               	movwf	?i1___wmul+1,c
 16548  002DB4  ECE4  F030         	call	i1___wmul	;wreg free
 16549  002DB8  0E4F               	movlw	low __powers_
 16550  002DBA  2421               	addwf	?i1___wmul,w,c
 16551  002DBC  6EF6               	movwf	tblptrl,c
 16552  002DBE  0E08               	movlw	high __powers_
 16553  002DC0  2022               	addwfc	?i1___wmul+1,w,c
 16554  002DC2  6EF7               	movwf	tblptrh,c
 16555  002DC4  0009               	tblrd		*+
 16556  002DC6  CFF5 F060          	movff	tablat,??i1_scale
 16557  002DCA  0009               	tblrd		*+
 16558  002DCC  CFF5 F061          	movff	tablat,??i1_scale+1
 16559  002DD0  0009               	tblrd		*+
 16560  002DD2  CFF5 F062          	movff	tablat,??i1_scale+2
 16561  002DD6  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 16562  002DDA  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 16563  002DDE  C060  F036         	movff	??i1_scale,?i1___ftmul
 16564  002DE2  0E00               	movlw	0
 16565  002DE4  6E24               	movwf	?i1___wmul+3,c
 16566  002DE6  0E03               	movlw	3
 16567  002DE8  6E23               	movwf	?i1___wmul+2,c
 16568  002DEA  0E00               	movlw	0
 16569  002DEC  6E14               	movwf	?i1___awmod+3,c
 16570  002DEE  0E0A               	movlw	10
 16571  002DF0  6E13               	movwf	?i1___awmod+2,c
 16572  002DF2  5047               	movf	i1scale@scl,w,c
 16573  002DF4  6E11               	movwf	?i1___awmod,c
 16574  002DF6  6A12               	clrf	?i1___awmod+1,c
 16575  002DF8  BE11               	btfsc	?i1___awmod,7,c
 16576  002DFA  0612               	decf	?i1___awmod+1,f,c
 16577  002DFC  ECA8  F02D         	call	i1___awmod	;wreg free
 16578  002E00  C011  F021         	movff	?i1___awmod,?i1___wmul
 16579  002E04  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16580  002E08  ECE4  F030         	call	i1___wmul	;wreg free
 16581  002E0C  0E4F               	movlw	low __powers_
 16582  002E0E  2421               	addwf	?i1___wmul,w,c
 16583  002E10  6EF6               	movwf	tblptrl,c
 16584  002E12  0E08               	movlw	high __powers_
 16585  002E14  2022               	addwfc	?i1___wmul+1,w,c
 16586  002E16  6EF7               	movwf	tblptrh,c
 16587  002E18  0009               	tblrd		*+
 16588  002E1A  CFF5 F063          	movff	tablat,??i1_scale+3
 16589  002E1E  0009               	tblrd		*+
 16590  002E20  CFF5 F064          	movff	tablat,??i1_scale+4
 16591  002E24  0009               	tblrd		*+
 16592  002E26  CFF5 F065          	movff	tablat,??i1_scale+5
 16593  002E2A  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 16594  002E2E  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 16595  002E32  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 16596  002E36  EC84  F024         	call	i1___ftmul	;wreg free
 16597  002E3A                     L24:
 16598  002E3A  C038  F049         	movff	?i1___ftmul+2,?i1_scale+2
 16599  002E3E  C037  F048         	movff	?i1___ftmul+1,?i1_scale+1
 16600  002E42  C036  F047         	movff	?i1___ftmul,?i1_scale
 16601  002E46  D017               	goto	i1l258
 16602  002E48                     i1l11178:
 16603                           
 16604                           ;doprnt.c: 440: return _powers_[scl];
 16605  002E48  5047               	movf	i1scale@scl,w,c
 16606  002E4A  0D03               	mullw	3
 16607  002E4C  0E4F               	movlw	low __powers_
 16608  002E4E  24F3               	addwf	prodl,w,c
 16609  002E50  6EF6               	movwf	tblptrl,c
 16610  002E52  0E08               	movlw	high __powers_
 16611  002E54                     L23:
 16612  002E54  20F4               	addwfc	prodh,w,c
 16613  002E56  6EF7               	movwf	tblptrh,c
 16614  002E58  0009               	tblrd		*+
 16615  002E5A  CFF5 F060          	movff	tablat,??i1_scale
 16616  002E5E  0009               	tblrd		*+
 16617  002E60  CFF5 F061          	movff	tablat,??i1_scale+1
 16618  002E64  0009               	tblrd		*+
 16619  002E66  CFF5 F062          	movff	tablat,??i1_scale+2
 16620  002E6A  C062  F049         	movff	??i1_scale+2,?i1_scale+2
 16621  002E6E  C061  F048         	movff	??i1_scale+1,?i1_scale+1
 16622  002E72  C060  F047         	movff	??i1_scale,?i1_scale
 16623  002E76                     i1l258:
 16624  002E76  0012               	return	
 16625  002E78                     __end_ofi1_scale:
 16626                           	opt stack 0
 16627                           pclatu	equ	0xFFB
 16628                           pclath	equ	0xFFA
 16629                           tblptru	equ	0xFF8
 16630                           tblptrh	equ	0xFF7
 16631                           tblptrl	equ	0xFF6
 16632                           tablat	equ	0xFF5
 16633                           prodh	equ	0xFF4
 16634                           prodl	equ	0xFF3
 16635                           intcon	equ	0xFF2
 16636                           intcon2	equ	0xFF1
 16637                           postinc0	equ	0xFEE
 16638                           fsr0h	equ	0xFEA
 16639                           fsr0l	equ	0xFE9
 16640                           wreg	equ	0xFE8
 16641                           fsr1h	equ	0xFE2
 16642                           fsr1l	equ	0xFE1
 16643                           bsr	equ	0xFE0
 16644                           indf2	equ	0xFDF
 16645                           postinc2	equ	0xFDE
 16646                           postdec2	equ	0xFDD
 16647                           fsr2h	equ	0xFDA
 16648                           fsr2l	equ	0xFD9
 16649                           status	equ	0xFD8
 16650                           
 16651 ;; *************** function i1___wmul *****************
 16652 ;; Defined at:
 16653 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;  __wmul          2   32[COMRAM] unsigned int 
 16656 ;;  __wmul          2   34[COMRAM] unsigned int 
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;  __wmul          2   36[COMRAM] unsigned int 
 16659 ;; Return value:  Size  Location     Type
 16660 ;;                  2   32[COMRAM] unsigned int 
 16661 ;; Registers used:
 16662 ;;		wreg, status,2, status,0, prodl, prodh
 16663 ;; Tracked objects:
 16664 ;;		On entry : 0/0
 16665 ;;		On exit  : 0/0
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16668 ;;      Params:         4       0       0       0       0       0       0       0       0
 16669 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16671 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16672 ;;Total ram usage:        6 bytes
 16673 ;; Hardware stack levels used:    1
 16674 ;; Hardware stack levels required when called:    3
 16675 ;; This function calls:
 16676 ;;		Nothing
 16677 ;; This function is called by:
 16678 ;;		i1_fround
 16679 ;;		i1_scale
 16680 ;;		i1_sprintf
 16681 ;; This function uses a non-reentrant model
 16682 ;;
 16683                           
 16684                           	psect	text61
 16685  0061C8                     __ptext61:
 16686                           	opt stack 0
 16687  0061C8                     i1___wmul:
 16688                           	opt stack 18
 16689                           
 16690                           ;incstack = 0
 16691                           ;incstack = 0
 16692  0061C8  5021               	movf	i1___wmul@multiplier,w,c
 16693  0061CA  0223               	mulwf	i1___wmul@multiplicand,c
 16694  0061CC  CFF3 F025          	movff	prodl,i1___wmul@product
 16695  0061D0  CFF4 F026          	movff	prodh,i1___wmul@product+1
 16696  0061D4  5021               	movf	i1___wmul@multiplier,w,c
 16697  0061D6  0224               	mulwf	i1___wmul@multiplicand+1,c
 16698  0061D8  CFF3 FFF4          	movff	prodl,prodh
 16699  0061DC  6AF3               	clrf	prodl,c
 16700  0061DE  50F3               	movf	prodl,w,c
 16701  0061E0  2625               	addwf	i1___wmul@product,f,c
 16702  0061E2  50F4               	movf	prodh,w,c
 16703  0061E4  2226               	addwfc	i1___wmul@product+1,f,c
 16704  0061E6  5022               	movf	i1___wmul@multiplier+1,w,c
 16705  0061E8  0223               	mulwf	i1___wmul@multiplicand,c
 16706  0061EA  CFF3 FFF4          	movff	prodl,prodh
 16707  0061EE  6AF3               	clrf	prodl,c
 16708  0061F0  50F3               	movf	prodl,w,c
 16709  0061F2  2625               	addwf	i1___wmul@product,f,c
 16710  0061F4  50F4               	movf	prodh,w,c
 16711  0061F6  2226               	addwfc	i1___wmul@product+1,f,c
 16712  0061F8  C025  F021         	movff	i1___wmul@product,?i1___wmul
 16713  0061FC  C026  F022         	movff	i1___wmul@product+1,?i1___wmul+1
 16714  006200  0012               	return	
 16715  006202                     __end_ofi1___wmul:
 16716                           	opt stack 0
 16717                           pclatu	equ	0xFFB
 16718                           pclath	equ	0xFFA
 16719                           tblptru	equ	0xFF8
 16720                           tblptrh	equ	0xFF7
 16721                           tblptrl	equ	0xFF6
 16722                           tablat	equ	0xFF5
 16723                           prodh	equ	0xFF4
 16724                           prodl	equ	0xFF3
 16725                           intcon	equ	0xFF2
 16726                           intcon2	equ	0xFF1
 16727                           postinc0	equ	0xFEE
 16728                           fsr0h	equ	0xFEA
 16729                           fsr0l	equ	0xFE9
 16730                           wreg	equ	0xFE8
 16731                           fsr1h	equ	0xFE2
 16732                           fsr1l	equ	0xFE1
 16733                           bsr	equ	0xFE0
 16734                           indf2	equ	0xFDF
 16735                           postinc2	equ	0xFDE
 16736                           postdec2	equ	0xFDD
 16737                           fsr2h	equ	0xFDA
 16738                           fsr2l	equ	0xFD9
 16739                           status	equ	0xFD8
 16740                           
 16741 ;; *************** function i1___awmod *****************
 16742 ;; Defined at:
 16743 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
 16744 ;; Parameters:    Size  Location     Type
 16745 ;;  __awmod         2   16[COMRAM] int 
 16746 ;;  __awmod         2   18[COMRAM] int 
 16747 ;; Auto vars:     Size  Location     Type
 16748 ;;  __awmod         1   22[COMRAM] unsigned char 
 16749 ;;  __awmod         1   21[COMRAM] unsigned char 
 16750 ;; Return value:  Size  Location     Type
 16751 ;;                  2   16[COMRAM] int 
 16752 ;; Registers used:
 16753 ;;		wreg, status,2, status,0
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16759 ;;      Params:         4       0       0       0       0       0       0       0       0
 16760 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16761 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16762 ;;      Totals:         7       0       0       0       0       0       0       0       0
 16763 ;;Total ram usage:        7 bytes
 16764 ;; Hardware stack levels used:    1
 16765 ;; Hardware stack levels required when called:    3
 16766 ;; This function calls:
 16767 ;;		Nothing
 16768 ;; This function is called by:
 16769 ;;		i1_fround
 16770 ;;		i1_scale
 16771 ;; This function uses a non-reentrant model
 16772 ;;
 16773                           
 16774                           	psect	text62
 16775  005B50                     __ptext62:
 16776                           	opt stack 0
 16777  005B50                     i1___awmod:
 16778                           	opt stack 17
 16779                           
 16780                           ;incstack = 0
 16781                           ;incstack = 0
 16782  005B50  6E15               	movwf	??i1___awmod& (0+255),c
 16783  005B52  0E00               	movlw	0
 16784  005B54  6E17               	movwf	i1___awmod@sign,c
 16785  005B56  5015               	movf	??i1___awmod& (0+255),w,c
 16786  005B58  AE12               	btfss	i1___awmod@dividend+1,7,c
 16787  005B5A  D008               	goto	i1l9154
 16788  005B5C  6C11               	negf	i1___awmod@dividend,c
 16789  005B5E  1E12               	comf	i1___awmod@dividend+1,f,c
 16790  005B60  B0D8               	btfsc	status,0,c
 16791  005B62  2A12               	incf	i1___awmod@dividend+1,f,c
 16792  005B64  6E15               	movwf	??i1___awmod& (0+255),c
 16793  005B66  0E01               	movlw	1
 16794  005B68  6E17               	movwf	i1___awmod@sign,c
 16795  005B6A  5015               	movf	??i1___awmod& (0+255),w,c
 16796  005B6C                     i1l9154:
 16797  005B6C  AE14               	btfss	i1___awmod@divisor+1,7,c
 16798  005B6E  D004               	goto	i1l9158
 16799  005B70  6C13               	negf	i1___awmod@divisor,c
 16800  005B72  1E14               	comf	i1___awmod@divisor+1,f,c
 16801  005B74  B0D8               	btfsc	status,0,c
 16802  005B76  2A14               	incf	i1___awmod@divisor+1,f,c
 16803  005B78                     i1l9158:
 16804  005B78  5014               	movf	i1___awmod@divisor+1,w,c
 16805  005B7A  1013               	iorwf	i1___awmod@divisor,w,c
 16806  005B7C  B4D8               	btfsc	status,2,c
 16807  005B7E  D01A               	goto	i1l9174
 16808  005B80  6E15               	movwf	??i1___awmod& (0+255),c
 16809  005B82  0E01               	movlw	1
 16810  005B84  6E16               	movwf	i1___awmod@counter,c
 16811  005B86  5015               	movf	??i1___awmod& (0+255),w,c
 16812  005B88  D004               	goto	i1l9164
 16813  005B8A                     i1l9162:
 16814  005B8A  90D8               	bcf	status,0,c
 16815  005B8C  3613               	rlcf	i1___awmod@divisor,f,c
 16816  005B8E  3614               	rlcf	i1___awmod@divisor+1,f,c
 16817  005B90  2A16               	incf	i1___awmod@counter,f,c
 16818  005B92                     i1l9164:
 16819  005B92  AE14               	btfss	i1___awmod@divisor+1,7,c
 16820  005B94  D7FA               	goto	i1l9162
 16821  005B96                     i1l9166:
 16822  005B96  5013               	movf	i1___awmod@divisor,w,c
 16823  005B98  5C11               	subwf	i1___awmod@dividend,w,c
 16824  005B9A  5014               	movf	i1___awmod@divisor+1,w,c
 16825  005B9C  5812               	subwfb	i1___awmod@dividend+1,w,c
 16826  005B9E  A0D8               	btfss	status,0,c
 16827  005BA0  D004               	goto	i1l9170
 16828  005BA2  5013               	movf	i1___awmod@divisor,w,c
 16829  005BA4  5E11               	subwf	i1___awmod@dividend,f,c
 16830  005BA6  5014               	movf	i1___awmod@divisor+1,w,c
 16831  005BA8  5A12               	subwfb	i1___awmod@dividend+1,f,c
 16832  005BAA                     i1l9170:
 16833  005BAA  90D8               	bcf	status,0,c
 16834  005BAC  3214               	rrcf	i1___awmod@divisor+1,f,c
 16835  005BAE  3213               	rrcf	i1___awmod@divisor,f,c
 16836  005BB0  2E16               	decfsz	i1___awmod@counter,f,c
 16837  005BB2  D7F1               	goto	i1l9166
 16838  005BB4                     i1l9174:
 16839  005BB4  5017               	movf	i1___awmod@sign,w,c
 16840  005BB6  B4D8               	btfsc	status,2,c
 16841  005BB8  D004               	goto	i1l9178
 16842  005BBA  6C11               	negf	i1___awmod@dividend,c
 16843  005BBC  1E12               	comf	i1___awmod@dividend+1,f,c
 16844  005BBE  B0D8               	btfsc	status,0,c
 16845  005BC0  2A12               	incf	i1___awmod@dividend+1,f,c
 16846  005BC2                     i1l9178:
 16847  005BC2  C011  F011         	movff	i1___awmod@dividend,?i1___awmod
 16848  005BC6  C012  F012         	movff	i1___awmod@dividend+1,?i1___awmod+1
 16849  005BCA  0012               	return	
 16850  005BCC                     __end_ofi1___awmod:
 16851                           	opt stack 0
 16852                           pclatu	equ	0xFFB
 16853                           pclath	equ	0xFFA
 16854                           tblptru	equ	0xFF8
 16855                           tblptrh	equ	0xFF7
 16856                           tblptrl	equ	0xFF6
 16857                           tablat	equ	0xFF5
 16858                           prodh	equ	0xFF4
 16859                           prodl	equ	0xFF3
 16860                           intcon	equ	0xFF2
 16861                           intcon2	equ	0xFF1
 16862                           postinc0	equ	0xFEE
 16863                           fsr0h	equ	0xFEA
 16864                           fsr0l	equ	0xFE9
 16865                           wreg	equ	0xFE8
 16866                           fsr1h	equ	0xFE2
 16867                           fsr1l	equ	0xFE1
 16868                           bsr	equ	0xFE0
 16869                           indf2	equ	0xFDF
 16870                           postinc2	equ	0xFDE
 16871                           postdec2	equ	0xFDD
 16872                           fsr2h	equ	0xFDA
 16873                           fsr2l	equ	0xFD9
 16874                           status	equ	0xFD8
 16875                           
 16876 ;; *************** function i1___awdiv *****************
 16877 ;; Defined at:
 16878 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
 16879 ;; Parameters:    Size  Location     Type
 16880 ;;  __awdiv         2   23[COMRAM] int 
 16881 ;;  __awdiv         2   25[COMRAM] int 
 16882 ;; Auto vars:     Size  Location     Type
 16883 ;;  __awdiv         2   30[COMRAM] int 
 16884 ;;  __awdiv         1   29[COMRAM] unsigned char 
 16885 ;;  __awdiv         1   28[COMRAM] unsigned char 
 16886 ;; Return value:  Size  Location     Type
 16887 ;;                  2   23[COMRAM] int 
 16888 ;; Registers used:
 16889 ;;		wreg, status,2, status,0
 16890 ;; Tracked objects:
 16891 ;;		On entry : 0/0
 16892 ;;		On exit  : 0/0
 16893 ;;		Unchanged: 0/0
 16894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16895 ;;      Params:         4       0       0       0       0       0       0       0       0
 16896 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16897 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16898 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16899 ;;Total ram usage:        9 bytes
 16900 ;; Hardware stack levels used:    1
 16901 ;; Hardware stack levels required when called:    3
 16902 ;; This function calls:
 16903 ;;		Nothing
 16904 ;; This function is called by:
 16905 ;;		i1_fround
 16906 ;;		i1_scale
 16907 ;;		i1_sprintf
 16908 ;; This function uses a non-reentrant model
 16909 ;;
 16910                           
 16911                           	psect	text63
 16912  005824                     __ptext63:
 16913                           	opt stack 0
 16914  005824                     i1___awdiv:
 16915                           	opt stack 18
 16916                           
 16917                           ;incstack = 0
 16918                           ;incstack = 0
 16919  005824  6E1C               	movwf	??i1___awdiv& (0+255),c
 16920  005826  0E00               	movlw	0
 16921  005828  6E1E               	movwf	i1___awdiv@sign,c
 16922  00582A  501C               	movf	??i1___awdiv& (0+255),w,c
 16923  00582C  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 16924  00582E  D008               	goto	i1l9110
 16925  005830  6C1A               	negf	i1___awdiv@divisor,c
 16926  005832  1E1B               	comf	i1___awdiv@divisor+1,f,c
 16927  005834  B0D8               	btfsc	status,0,c
 16928  005836  2A1B               	incf	i1___awdiv@divisor+1,f,c
 16929  005838  6E1C               	movwf	??i1___awdiv& (0+255),c
 16930  00583A  0E01               	movlw	1
 16931  00583C  6E1E               	movwf	i1___awdiv@sign,c
 16932  00583E  501C               	movf	??i1___awdiv& (0+255),w,c
 16933  005840                     i1l9110:
 16934  005840  AE19               	btfss	i1___awdiv@dividend+1,7,c
 16935  005842  D006               	goto	i1l9116
 16936  005844  6C18               	negf	i1___awdiv@dividend,c
 16937  005846  1E19               	comf	i1___awdiv@dividend+1,f,c
 16938  005848  B0D8               	btfsc	status,0,c
 16939  00584A  2A19               	incf	i1___awdiv@dividend+1,f,c
 16940  00584C  0E01               	movlw	1
 16941  00584E  1A1E               	xorwf	i1___awdiv@sign,f,c
 16942  005850                     i1l9116:
 16943  005850  0E00               	movlw	0
 16944  005852  6E20               	movwf	i1___awdiv@quotient+1,c
 16945  005854  0E00               	movlw	0
 16946  005856  6E1F               	movwf	i1___awdiv@quotient,c
 16947  005858  501B               	movf	i1___awdiv@divisor+1,w,c
 16948  00585A  101A               	iorwf	i1___awdiv@divisor,w,c
 16949  00585C  B4D8               	btfsc	status,2,c
 16950  00585E  D01E               	goto	i1l9138
 16951  005860  6E1C               	movwf	??i1___awdiv& (0+255),c
 16952  005862  0E01               	movlw	1
 16953  005864  6E1D               	movwf	i1___awdiv@counter,c
 16954  005866  501C               	movf	??i1___awdiv& (0+255),w,c
 16955  005868  D004               	goto	i1l9124
 16956  00586A                     i1l9122:
 16957  00586A  90D8               	bcf	status,0,c
 16958  00586C  361A               	rlcf	i1___awdiv@divisor,f,c
 16959  00586E  361B               	rlcf	i1___awdiv@divisor+1,f,c
 16960  005870  2A1D               	incf	i1___awdiv@counter,f,c
 16961  005872                     i1l9124:
 16962  005872  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 16963  005874  D7FA               	goto	i1l9122
 16964  005876                     i1l9126:
 16965  005876  90D8               	bcf	status,0,c
 16966  005878  361F               	rlcf	i1___awdiv@quotient,f,c
 16967  00587A  3620               	rlcf	i1___awdiv@quotient+1,f,c
 16968  00587C  501A               	movf	i1___awdiv@divisor,w,c
 16969  00587E  5C18               	subwf	i1___awdiv@dividend,w,c
 16970  005880  501B               	movf	i1___awdiv@divisor+1,w,c
 16971  005882  5819               	subwfb	i1___awdiv@dividend+1,w,c
 16972  005884  A0D8               	btfss	status,0,c
 16973  005886  D005               	goto	i1l9134
 16974  005888  501A               	movf	i1___awdiv@divisor,w,c
 16975  00588A  5E18               	subwf	i1___awdiv@dividend,f,c
 16976  00588C  501B               	movf	i1___awdiv@divisor+1,w,c
 16977  00588E  5A19               	subwfb	i1___awdiv@dividend+1,f,c
 16978  005890  801F               	bsf	i1___awdiv@quotient,0,c
 16979  005892                     i1l9134:
 16980  005892  90D8               	bcf	status,0,c
 16981  005894  321B               	rrcf	i1___awdiv@divisor+1,f,c
 16982  005896  321A               	rrcf	i1___awdiv@divisor,f,c
 16983  005898  2E1D               	decfsz	i1___awdiv@counter,f,c
 16984  00589A  D7ED               	goto	i1l9126
 16985  00589C                     i1l9138:
 16986  00589C  501E               	movf	i1___awdiv@sign,w,c
 16987  00589E  B4D8               	btfsc	status,2,c
 16988  0058A0  D004               	goto	i1l9142
 16989  0058A2  6C1F               	negf	i1___awdiv@quotient,c
 16990  0058A4  1E20               	comf	i1___awdiv@quotient+1,f,c
 16991  0058A6  B0D8               	btfsc	status,0,c
 16992  0058A8  2A20               	incf	i1___awdiv@quotient+1,f,c
 16993  0058AA                     i1l9142:
 16994  0058AA  C01F  F018         	movff	i1___awdiv@quotient,?i1___awdiv
 16995  0058AE  C020  F019         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
 16996  0058B2  0012               	return	
 16997  0058B4                     __end_ofi1___awdiv:
 16998                           	opt stack 0
 16999                           pclatu	equ	0xFFB
 17000                           pclath	equ	0xFFA
 17001                           tblptru	equ	0xFF8
 17002                           tblptrh	equ	0xFF7
 17003                           tblptrl	equ	0xFF6
 17004                           tablat	equ	0xFF5
 17005                           prodh	equ	0xFF4
 17006                           prodl	equ	0xFF3
 17007                           intcon	equ	0xFF2
 17008                           intcon2	equ	0xFF1
 17009                           postinc0	equ	0xFEE
 17010                           fsr0h	equ	0xFEA
 17011                           fsr0l	equ	0xFE9
 17012                           wreg	equ	0xFE8
 17013                           fsr1h	equ	0xFE2
 17014                           fsr1l	equ	0xFE1
 17015                           bsr	equ	0xFE0
 17016                           indf2	equ	0xFDF
 17017                           postinc2	equ	0xFDE
 17018                           postdec2	equ	0xFDD
 17019                           fsr2h	equ	0xFDA
 17020                           fsr2l	equ	0xFD9
 17021                           status	equ	0xFD8
 17022                           
 17023 ;; *************** function i1_fround *****************
 17024 ;; Defined at:
 17025 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 17026 ;; Parameters:    Size  Location     Type
 17027 ;;  fround          1   70[COMRAM] unsigned char 
 17028 ;; Auto vars:     Size  Location     Type
 17029 ;;  fround          3    0        float 
 17030 ;;  fround          3    0        float 
 17031 ;;  fround          3    0        float 
 17032 ;; Return value:  Size  Location     Type
 17033 ;;                  3   70[COMRAM] float 
 17034 ;; Registers used:
 17035 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17036 ;; Tracked objects:
 17037 ;;		On entry : 0/0
 17038 ;;		On exit  : 0/0
 17039 ;;		Unchanged: 0/0
 17040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17041 ;;      Params:         3       0       0       0       0       0       0       0       0
 17042 ;;      Locals:         0       6       0       0       0       0       0       0       0
 17043 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17044 ;;      Totals:         3      12       0       0       0       0       0       0       0
 17045 ;;Total ram usage:       15 bytes
 17046 ;; Hardware stack levels used:    1
 17047 ;; Hardware stack levels required when called:    5
 17048 ;; This function calls:
 17049 ;;		i1___awdiv
 17050 ;;		i1___awmod
 17051 ;;		i1___ftmul
 17052 ;;		i1___wmul
 17053 ;; This function is called by:
 17054 ;;		i1_sprintf
 17055 ;; This function uses a non-reentrant model
 17056 ;;
 17057                           
 17058                           	psect	text64
 17059  003532                     __ptext64:
 17060                           	opt stack 0
 17061  003532                     i1_fround:
 17062                           	opt stack 16
 17063                           
 17064                           ;doprnt.c: 413: if(prec>=110)
 17065                           
 17066                           ;incstack = 0
 17067                           ;incstack = 0
 17068  003532  0E6D               	movlw	109
 17069  003534  6447               	cpfsgt	i1fround@prec,c
 17070  003536  D0AB               	goto	i1l11130
 17071                           
 17072                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17073  003538  0E00               	movlw	0
 17074  00353A  6E24               	movwf	?i1___wmul+3,c
 17075  00353C  0E03               	movlw	3
 17076  00353E  6E23               	movwf	?i1___wmul+2,c
 17077  003540  0E00               	movlw	0
 17078  003542  6E1B               	movwf	?i1___awdiv+3,c
 17079  003544  0E0A               	movlw	10
 17080  003546  6E1A               	movwf	?i1___awdiv+2,c
 17081  003548  0E00               	movlw	0
 17082  00354A  6E14               	movwf	?i1___awmod+3,c
 17083  00354C  0E64               	movlw	100
 17084  00354E  6E13               	movwf	?i1___awmod+2,c
 17085  003550  C047  F011         	movff	i1fround@prec,?i1___awmod
 17086  003554  6A12               	clrf	?i1___awmod+1,c
 17087  003556  ECA8  F02D         	call	i1___awmod	;wreg free
 17088  00355A  C011  F018         	movff	?i1___awmod,?i1___awdiv
 17089  00355E  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 17090  003562  EC12  F02C         	call	i1___awdiv	;wreg free
 17091  003566  0E09               	movlw	9
 17092  003568  2418               	addwf	?i1___awdiv,w,c
 17093  00356A  6E21               	movwf	?i1___wmul,c
 17094  00356C  0E00               	movlw	0
 17095  00356E  2019               	addwfc	?i1___awdiv+1,w,c
 17096  003570  6E22               	movwf	?i1___wmul+1,c
 17097  003572  ECE4  F030         	call	i1___wmul	;wreg free
 17098  003576  0E28               	movlw	low __npowers_
 17099  003578  2421               	addwf	?i1___wmul,w,c
 17100  00357A  6EF6               	movwf	tblptrl,c
 17101  00357C  0E08               	movlw	high __npowers_
 17102  00357E  2022               	addwfc	?i1___wmul+1,w,c
 17103  003580  6EF7               	movwf	tblptrh,c
 17104  003582  0009               	tblrd		*+
 17105  003584  CFF5 F060          	movff	tablat,??i1_fround
 17106  003588  0009               	tblrd		*+
 17107  00358A  CFF5 F061          	movff	tablat,??i1_fround+1
 17108  00358E  0009               	tblrd		*+
 17109  003590  CFF5 F062          	movff	tablat,??i1_fround+2
 17110  003594  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17111  003598  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17112  00359C  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17113  0035A0  0E00               	movlw	0
 17114  0035A2  6E24               	movwf	?i1___wmul+3,c
 17115  0035A4  0E03               	movlw	3
 17116  0035A6  6E23               	movwf	?i1___wmul+2,c
 17117  0035A8  0E00               	movlw	0
 17118  0035AA  6E1B               	movwf	?i1___awdiv+3,c
 17119  0035AC  0E64               	movlw	100
 17120  0035AE  6E1A               	movwf	?i1___awdiv+2,c
 17121  0035B0  C047  F018         	movff	i1fround@prec,?i1___awdiv
 17122  0035B4  6A19               	clrf	?i1___awdiv+1,c
 17123  0035B6  EC12  F02C         	call	i1___awdiv	;wreg free
 17124  0035BA  0E12               	movlw	18
 17125  0035BC  2418               	addwf	?i1___awdiv,w,c
 17126  0035BE  6E21               	movwf	?i1___wmul,c
 17127  0035C0  0E00               	movlw	0
 17128  0035C2  2019               	addwfc	?i1___awdiv+1,w,c
 17129  0035C4  6E22               	movwf	?i1___wmul+1,c
 17130  0035C6  ECE4  F030         	call	i1___wmul	;wreg free
 17131  0035CA  0E28               	movlw	low __npowers_
 17132  0035CC  2421               	addwf	?i1___wmul,w,c
 17133  0035CE  6EF6               	movwf	tblptrl,c
 17134  0035D0  0E08               	movlw	high __npowers_
 17135  0035D2  2022               	addwfc	?i1___wmul+1,w,c
 17136  0035D4  6EF7               	movwf	tblptrh,c
 17137  0035D6  0009               	tblrd		*+
 17138  0035D8  CFF5 F063          	movff	tablat,??i1_fround+3
 17139  0035DC  0009               	tblrd		*+
 17140  0035DE  CFF5 F064          	movff	tablat,??i1_fround+4
 17141  0035E2  0009               	tblrd		*+
 17142  0035E4  CFF5 F065          	movff	tablat,??i1_fround+5
 17143  0035E8  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 17144  0035EC  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 17145  0035F0  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 17146  0035F4  EC84  F024         	call	i1___ftmul	;wreg free
 17147  0035F8  C038  F06B         	movff	?i1___ftmul+2,i1_fround$1833+2
 17148  0035FC  C037  F06A         	movff	?i1___ftmul+1,i1_fround$1833+1
 17149  003600  C036  F069         	movff	?i1___ftmul,i1_fround$1833
 17150                           
 17151                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17152  003604  0E00               	movlw	0
 17153  003606  6E24               	movwf	?i1___wmul+3,c
 17154  003608  0E03               	movlw	3
 17155  00360A  6E23               	movwf	?i1___wmul+2,c
 17156  00360C  0E00               	movlw	0
 17157  00360E  6E14               	movwf	?i1___awmod+3,c
 17158  003610  0E0A               	movlw	10
 17159  003612  6E13               	movwf	?i1___awmod+2,c
 17160  003614  C047  F011         	movff	i1fround@prec,?i1___awmod
 17161  003618  6A12               	clrf	?i1___awmod+1,c
 17162  00361A  ECA8  F02D         	call	i1___awmod	;wreg free
 17163  00361E  C011  F021         	movff	?i1___awmod,?i1___wmul
 17164  003622  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17165  003626  ECE4  F030         	call	i1___wmul	;wreg free
 17166  00362A  0E28               	movlw	low __npowers_
 17167  00362C  2421               	addwf	?i1___wmul,w,c
 17168  00362E  6EF6               	movwf	tblptrl,c
 17169  003630  0E08               	movlw	high __npowers_
 17170  003632  2022               	addwfc	?i1___wmul+1,w,c
 17171  003634  6EF7               	movwf	tblptrh,c
 17172  003636  0009               	tblrd		*+
 17173  003638  CFF5 F060          	movff	tablat,??i1_fround
 17174  00363C  0009               	tblrd		*+
 17175  00363E  CFF5 F061          	movff	tablat,??i1_fround+1
 17176  003642  0009               	tblrd		*+
 17177  003644  CFF5 F062          	movff	tablat,??i1_fround+2
 17178  003648  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17179  00364C  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17180  003650  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17181  003654  C069  F036         	movff	i1_fround$1833,?i1___ftmul
 17182  003658  C06A  F037         	movff	i1_fround$1833+1,?i1___ftmul+1
 17183  00365C  C06B  F038         	movff	i1_fround$1833+2,?i1___ftmul+2
 17184  003660  EC84  F024         	call	i1___ftmul	;wreg free
 17185  003664  C038  F068         	movff	?i1___ftmul+2,i1_fround$1834+2
 17186  003668  C037  F067         	movff	?i1___ftmul+1,i1_fround$1834+1
 17187  00366C  C036  F066         	movff	?i1___ftmul,i1_fround$1834
 17188                           
 17189                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17190  003670  C066  F036         	movff	i1_fround$1834,?i1___ftmul
 17191  003674  C067  F037         	movff	i1_fround$1834+1,?i1___ftmul+1
 17192  003678  C068  F038         	movff	i1_fround$1834+2,?i1___ftmul+2
 17193  00367C  0E00               	movlw	0
 17194  00367E  6E39               	movwf	?i1___ftmul+3,c
 17195  003680  0E00               	movlw	0
 17196  003682  6E3A               	movwf	?i1___ftmul+4,c
 17197  003684  0E3F               	movlw	63
 17198  003686  6E3B               	movwf	?i1___ftmul+5,c
 17199  003688  EC84  F024         	call	i1___ftmul	;wreg free
 17200  00368C  D08B               	goto	L26
 17201  00368E                     i1l11130:
 17202                           
 17203                           ;doprnt.c: 415: else if(prec > 10)
 17204  00368E  0E0A               	movlw	10
 17205  003690  6447               	cpfsgt	i1fround@prec,c
 17206  003692  D069               	goto	i1l11138
 17207                           
 17208                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17209  003694  0E00               	movlw	0
 17210  003696  6E24               	movwf	?i1___wmul+3,c
 17211  003698  0E03               	movlw	3
 17212  00369A  6E23               	movwf	?i1___wmul+2,c
 17213  00369C  0E00               	movlw	0
 17214  00369E  6E14               	movwf	?i1___awmod+3,c
 17215  0036A0  0E0A               	movlw	10
 17216  0036A2  6E13               	movwf	?i1___awmod+2,c
 17217  0036A4  C047  F011         	movff	i1fround@prec,?i1___awmod
 17218  0036A8  6A12               	clrf	?i1___awmod+1,c
 17219  0036AA  ECA8  F02D         	call	i1___awmod	;wreg free
 17220  0036AE  C011  F021         	movff	?i1___awmod,?i1___wmul
 17221  0036B2  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17222  0036B6  ECE4  F030         	call	i1___wmul	;wreg free
 17223  0036BA  0E28               	movlw	low __npowers_
 17224  0036BC  2421               	addwf	?i1___wmul,w,c
 17225  0036BE  6EF6               	movwf	tblptrl,c
 17226  0036C0  0E08               	movlw	high __npowers_
 17227  0036C2  2022               	addwfc	?i1___wmul+1,w,c
 17228  0036C4  6EF7               	movwf	tblptrh,c
 17229  0036C6  0009               	tblrd		*+
 17230  0036C8  CFF5 F060          	movff	tablat,??i1_fround
 17231  0036CC  0009               	tblrd		*+
 17232  0036CE  CFF5 F061          	movff	tablat,??i1_fround+1
 17233  0036D2  0009               	tblrd		*+
 17234  0036D4  CFF5 F062          	movff	tablat,??i1_fround+2
 17235  0036D8  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17236  0036DC  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17237  0036E0  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17238  0036E4  0E00               	movlw	0
 17239  0036E6  6E24               	movwf	?i1___wmul+3,c
 17240  0036E8  0E03               	movlw	3
 17241  0036EA  6E23               	movwf	?i1___wmul+2,c
 17242  0036EC  0E00               	movlw	0
 17243  0036EE  6E1B               	movwf	?i1___awdiv+3,c
 17244  0036F0  0E0A               	movlw	10
 17245  0036F2  6E1A               	movwf	?i1___awdiv+2,c
 17246  0036F4  C047  F018         	movff	i1fround@prec,?i1___awdiv
 17247  0036F8  6A19               	clrf	?i1___awdiv+1,c
 17248  0036FA  EC12  F02C         	call	i1___awdiv	;wreg free
 17249  0036FE  0E09               	movlw	9
 17250  003700  2418               	addwf	?i1___awdiv,w,c
 17251  003702  6E21               	movwf	?i1___wmul,c
 17252  003704  0E00               	movlw	0
 17253  003706  2019               	addwfc	?i1___awdiv+1,w,c
 17254  003708  6E22               	movwf	?i1___wmul+1,c
 17255  00370A  ECE4  F030         	call	i1___wmul	;wreg free
 17256  00370E  0E28               	movlw	low __npowers_
 17257  003710  2421               	addwf	?i1___wmul,w,c
 17258  003712  6EF6               	movwf	tblptrl,c
 17259  003714  0E08               	movlw	high __npowers_
 17260  003716  2022               	addwfc	?i1___wmul+1,w,c
 17261  003718  6EF7               	movwf	tblptrh,c
 17262  00371A  0009               	tblrd		*+
 17263  00371C  CFF5 F063          	movff	tablat,??i1_fround+3
 17264  003720  0009               	tblrd		*+
 17265  003722  CFF5 F064          	movff	tablat,??i1_fround+4
 17266  003726  0009               	tblrd		*+
 17267  003728  CFF5 F065          	movff	tablat,??i1_fround+5
 17268  00372C  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 17269  003730  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 17270  003734  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 17271  003738  EC84  F024         	call	i1___ftmul	;wreg free
 17272  00373C  C038  F06B         	movff	?i1___ftmul+2,i1_fround$1833+2
 17273  003740  C037  F06A         	movff	?i1___ftmul+1,i1_fround$1833+1
 17274  003744  C036  F069         	movff	?i1___ftmul,i1_fround$1833
 17275                           
 17276                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17277  003748  C069  F036         	movff	i1_fround$1833,?i1___ftmul
 17278  00374C  C06A  F037         	movff	i1_fround$1833+1,?i1___ftmul+1
 17279  003750  C06B  F038         	movff	i1_fround$1833+2,?i1___ftmul+2
 17280  003754  0E00               	movlw	0
 17281  003756  6E39               	movwf	?i1___ftmul+3,c
 17282  003758  0E00               	movlw	0
 17283  00375A  6E3A               	movwf	?i1___ftmul+4,c
 17284  00375C  0E3F               	movlw	63
 17285  00375E  6E3B               	movwf	?i1___ftmul+5,c
 17286  003760  EC84  F024         	call	i1___ftmul	;wreg free
 17287  003764  D01F               	goto	L26
 17288  003766                     i1l11138:
 17289                           
 17290                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17291  003766  5047               	movf	i1fround@prec,w,c
 17292  003768  0D03               	mullw	3
 17293  00376A  0E28               	movlw	low __npowers_
 17294  00376C  24F3               	addwf	prodl,w,c
 17295  00376E  6EF6               	movwf	tblptrl,c
 17296  003770  0E08               	movlw	high __npowers_
 17297  003772  20F4               	addwfc	prodh,w,c
 17298  003774  6EF7               	movwf	tblptrh,c
 17299  003776  0009               	tblrd		*+
 17300  003778  CFF5 F060          	movff	tablat,??i1_fround
 17301  00377C  0009               	tblrd		*+
 17302  00377E  CFF5 F061          	movff	tablat,??i1_fround+1
 17303  003782  0009               	tblrd		*+
 17304  003784  CFF5 F062          	movff	tablat,??i1_fround+2
 17305  003788  C062  F038         	movff	??i1_fround+2,?i1___ftmul+2
 17306  00378C  C061  F037         	movff	??i1_fround+1,?i1___ftmul+1
 17307  003790  C060  F036         	movff	??i1_fround,?i1___ftmul
 17308  003794  0E00               	movlw	0
 17309  003796  6E39               	movwf	?i1___ftmul+3,c
 17310  003798  0E00               	movlw	0
 17311  00379A  6E3A               	movwf	?i1___ftmul+4,c
 17312  00379C  0E3F               	movlw	63
 17313  00379E  6E3B               	movwf	?i1___ftmul+5,c
 17314  0037A0  EC84  F024         	call	i1___ftmul	;wreg free
 17315  0037A4                     L26:
 17316  0037A4  C038  F049         	movff	?i1___ftmul+2,?i1_fround+2
 17317  0037A8  C037  F048         	movff	?i1___ftmul+1,?i1_fround+1
 17318  0037AC  C036  F047         	movff	?i1___ftmul,?i1_fround
 17319  0037B0  0012               	return	
 17320  0037B2                     __end_ofi1_fround:
 17321                           	opt stack 0
 17322                           pclatu	equ	0xFFB
 17323                           pclath	equ	0xFFA
 17324                           tblptru	equ	0xFF8
 17325                           tblptrh	equ	0xFF7
 17326                           tblptrl	equ	0xFF6
 17327                           tablat	equ	0xFF5
 17328                           prodh	equ	0xFF4
 17329                           prodl	equ	0xFF3
 17330                           intcon	equ	0xFF2
 17331                           intcon2	equ	0xFF1
 17332                           postinc0	equ	0xFEE
 17333                           fsr0h	equ	0xFEA
 17334                           fsr0l	equ	0xFE9
 17335                           wreg	equ	0xFE8
 17336                           fsr1h	equ	0xFE2
 17337                           fsr1l	equ	0xFE1
 17338                           bsr	equ	0xFE0
 17339                           indf2	equ	0xFDF
 17340                           postinc2	equ	0xFDE
 17341                           postdec2	equ	0xFDD
 17342                           fsr2h	equ	0xFDA
 17343                           fsr2l	equ	0xFD9
 17344                           status	equ	0xFD8
 17345                           
 17346 ;; *************** function i1_Read_LDR *****************
 17347 ;; Defined at:
 17348 ;;		line 259 in file "main.c"
 17349 ;; Parameters:    Size  Location     Type
 17350 ;;		None
 17351 ;; Auto vars:     Size  Location     Type
 17352 ;;  Read_LDR        3   21[BANK0 ] float 
 17353 ;; Return value:  Size  Location     Type
 17354 ;;                  3   70[COMRAM] float 
 17355 ;; Registers used:
 17356 ;;		wreg, status,2, status,0, cstack
 17357 ;; Tracked objects:
 17358 ;;		On entry : 0/0
 17359 ;;		On exit  : 0/0
 17360 ;;		Unchanged: 0/0
 17361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17362 ;;      Params:         3       0       0       0       0       0       0       0       0
 17363 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17364 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17365 ;;      Totals:         3       7       0       0       0       0       0       0       0
 17366 ;;Total ram usage:       10 bytes
 17367 ;; Hardware stack levels used:    1
 17368 ;; Hardware stack levels required when called:    5
 17369 ;; This function calls:
 17370 ;;		i1___awtoft
 17371 ;;		i1___ftdiv
 17372 ;;		i1___ftmul
 17373 ;; This function is called by:
 17374 ;;		i1_mainLoop
 17375 ;; This function uses a non-reentrant model
 17376 ;;
 17377                           
 17378                           	psect	text65
 17379  004EFE                     __ptext65:
 17380                           	opt stack 0
 17381  004EFE                     i1_Read_LDR:
 17382                           	opt stack 17
 17383                           
 17384                           ;main.c: 260: float analog_reading = 0;
 17385                           
 17386                           ;incstack = 0
 17387                           ;incstack = 0
 17388  004EFE  0E00               	movlw	0
 17389  004F00  0100               	movlb	0	; () banked
 17390  004F02  0100               	movlb	0	; () banked
 17391  004F04  6F75               	movwf	i1Read_LDR@analog_reading& (0+255),b
 17392  004F06  0E00               	movlw	0
 17393  004F08  0100               	movlb	0	; () banked
 17394  004F0A  0100               	movlb	0	; () banked
 17395  004F0C  6F76               	movwf	(i1Read_LDR@analog_reading+1)& (0+255),b
 17396  004F0E  0E00               	movlw	0
 17397  004F10  0100               	movlb	0	; () banked
 17398  004F12  0100               	movlb	0	; () banked
 17399  004F14  6F77               	movwf	(i1Read_LDR@analog_reading+2)& (0+255),b
 17400                           
 17401                           ; BSR set to: 0
 17402                           ;main.c: 261: ADCON0 |= ((1 << ADON) | (1 << GO));
 17403  004F16  0E00               	movlw	0
 17404  004F18  B2C2               	btfsc	4034,1,c	;volatile
 17405  004F1A  0E01               	movlw	1
 17406  004F1C  0100               	movlb	0	; () banked
 17407  004F1E  6F71               	movwf	??i1_Read_LDR& (0+255),b
 17408  004F20  0E01               	movlw	1
 17409  004F22  0100               	movlb	0	; () banked
 17410  004F24  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 17411  004F26  0100               	movlb	0	; () banked
 17412  004F28  2B71               	incf	??i1_Read_LDR& (0+255),f,b
 17413  004F2A  D003               	goto	i1u1039_24
 17414  004F2C                     i1u1039_25:
 17415  004F2C  0100               	movlb	0	; () banked
 17416  004F2E  90D8               	bcf	status,0,c
 17417  004F30  3772               	rlcf	(??i1_Read_LDR+1)& (0+255),f,b
 17418  004F32                     i1u1039_24:
 17419  004F32  0100               	movlb	0	; () banked
 17420  004F34  2F71               	decfsz	??i1_Read_LDR& (0+255),f,b
 17421  004F36  D7FA               	goto	i1u1039_25
 17422  004F38  0E00               	movlw	0
 17423  004F3A  B0C2               	btfsc	4034,0,c	;volatile
 17424  004F3C  0E01               	movlw	1
 17425  004F3E  0100               	movlb	0	; () banked
 17426  004F40  6F73               	movwf	(??i1_Read_LDR+2)& (0+255),b
 17427  004F42  0E01               	movlw	1
 17428  004F44  0100               	movlb	0	; () banked
 17429  004F46  6F74               	movwf	(??i1_Read_LDR+3)& (0+255),b
 17430  004F48  0100               	movlb	0	; () banked
 17431  004F4A  2B73               	incf	(??i1_Read_LDR+2)& (0+255),f,b
 17432  004F4C  D003               	goto	i1u1040_24
 17433  004F4E                     i1u1040_25:
 17434  004F4E  0100               	movlb	0	; () banked
 17435  004F50  90D8               	bcf	status,0,c
 17436  004F52  3774               	rlcf	(??i1_Read_LDR+3)& (0+255),f,b
 17437  004F54                     i1u1040_24:
 17438  004F54  0100               	movlb	0	; () banked
 17439  004F56  2F73               	decfsz	(??i1_Read_LDR+2)& (0+255),f,b
 17440  004F58  D7FA               	goto	i1u1040_25
 17441  004F5A  0100               	movlb	0	; () banked
 17442  004F5C  5174               	movf	(??i1_Read_LDR+3)& (0+255),w,b
 17443  004F5E  0100               	movlb	0	; () banked
 17444  004F60  1172               	iorwf	(??i1_Read_LDR+1)& (0+255),w,b
 17445  004F62  12C2               	iorwf	4034,f,c	;volatile
 17446  004F64                     i1l228:
 17447  004F64  B2C2               	btfsc	4034,1,c	;volatile
 17448  004F66  D7FE               	goto	i1l228
 17449                           
 17450                           ;main.c: 263: analog_reading = (ADRESH * 256) + (ADRESL);
 17451  004F68  50C4               	movf	4036,w,c	;volatile
 17452  004F6A  0100               	movlb	0	; () banked
 17453  004F6C  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 17454  004F6E  6B71               	clrf	??i1_Read_LDR& (0+255),b
 17455  004F70  50C3               	movf	4035,w,c	;volatile
 17456  004F72  0100               	movlb	0	; () banked
 17457  004F74  2571               	addwf	??i1_Read_LDR& (0+255),w,b
 17458  004F76  6E19               	movwf	?i1___awtoft,c
 17459  004F78  0E00               	movlw	0
 17460  004F7A  0100               	movlb	0	; () banked
 17461  004F7C  2172               	addwfc	(??i1_Read_LDR+1)& (0+255),w,b
 17462  004F7E  6E1A               	movwf	?i1___awtoft+1,c
 17463  004F80  EC8B  F02F         	call	i1___awtoft	;wreg free
 17464  004F84  C01B  F077         	movff	?i1___awtoft+2,i1Read_LDR@analog_reading+2
 17465  004F88  C01A  F076         	movff	?i1___awtoft+1,i1Read_LDR@analog_reading+1
 17466  004F8C  C019  F075         	movff	?i1___awtoft,i1Read_LDR@analog_reading
 17467                           
 17468                           ;main.c: 264: analog_reading = analog_reading*5/1023;
 17469  004F90  0E00               	movlw	0
 17470  004F92  6E39               	movwf	?i1___ftmul+3,c
 17471  004F94  0EA0               	movlw	160
 17472  004F96  6E3A               	movwf	?i1___ftmul+4,c
 17473  004F98  0E40               	movlw	64
 17474  004F9A  6E3B               	movwf	?i1___ftmul+5,c
 17475  004F9C  C075  F036         	movff	i1Read_LDR@analog_reading,?i1___ftmul
 17476  004FA0  C076  F037         	movff	i1Read_LDR@analog_reading+1,?i1___ftmul+1
 17477  004FA4  C077  F038         	movff	i1Read_LDR@analog_reading+2,?i1___ftmul+2
 17478  004FA8  EC84  F024         	call	i1___ftmul	;wreg free
 17479  004FAC  C038  F062         	movff	?i1___ftmul+2,?i1___ftdiv+2
 17480  004FB0  C037  F061         	movff	?i1___ftmul+1,?i1___ftdiv+1
 17481  004FB4  C036  F060         	movff	?i1___ftmul,?i1___ftdiv
 17482  004FB8  0EC0               	movlw	192
 17483  004FBA  0100               	movlb	0	; () banked
 17484  004FBC  0100               	movlb	0	; () banked
 17485  004FBE  6F63               	movwf	(?i1___ftdiv+3)& (0+255),b
 17486  004FC0  0E7F               	movlw	127
 17487  004FC2  0100               	movlb	0	; () banked
 17488  004FC4  0100               	movlb	0	; () banked
 17489  004FC6  6F64               	movwf	(?i1___ftdiv+4)& (0+255),b
 17490  004FC8  0E44               	movlw	68
 17491  004FCA  0100               	movlb	0	; () banked
 17492  004FCC  0100               	movlb	0	; () banked
 17493  004FCE  6F65               	movwf	(?i1___ftdiv+5)& (0+255),b
 17494  004FD0  EC8C  F020         	call	i1___ftdiv	;wreg free
 17495  004FD4  C062  F077         	movff	?i1___ftdiv+2,i1Read_LDR@analog_reading+2
 17496  004FD8  C061  F076         	movff	?i1___ftdiv+1,i1Read_LDR@analog_reading+1
 17497  004FDC  C060  F075         	movff	?i1___ftdiv,i1Read_LDR@analog_reading
 17498                           
 17499                           ;main.c: 265: return analog_reading;
 17500  004FE0  C075  F047         	movff	i1Read_LDR@analog_reading,?i1_Read_LDR
 17501  004FE4  C076  F048         	movff	i1Read_LDR@analog_reading+1,?i1_Read_LDR+1
 17502  004FE8  C077  F049         	movff	i1Read_LDR@analog_reading+2,?i1_Read_LDR+2
 17503  004FEC  0012               	return	
 17504  004FEE                     __end_ofi1_Read_LDR:
 17505                           	opt stack 0
 17506                           pclatu	equ	0xFFB
 17507                           pclath	equ	0xFFA
 17508                           tblptru	equ	0xFF8
 17509                           tblptrh	equ	0xFF7
 17510                           tblptrl	equ	0xFF6
 17511                           tablat	equ	0xFF5
 17512                           prodh	equ	0xFF4
 17513                           prodl	equ	0xFF3
 17514                           intcon	equ	0xFF2
 17515                           intcon2	equ	0xFF1
 17516                           postinc0	equ	0xFEE
 17517                           fsr0h	equ	0xFEA
 17518                           fsr0l	equ	0xFE9
 17519                           wreg	equ	0xFE8
 17520                           fsr1h	equ	0xFE2
 17521                           fsr1l	equ	0xFE1
 17522                           bsr	equ	0xFE0
 17523                           indf2	equ	0xFDF
 17524                           postinc2	equ	0xFDE
 17525                           postdec2	equ	0xFDD
 17526                           fsr2h	equ	0xFDA
 17527                           fsr2l	equ	0xFD9
 17528                           status	equ	0xFD8
 17529                           
 17530 ;; *************** function i1___ftmul *****************
 17531 ;; Defined at:
 17532 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
 17533 ;; Parameters:    Size  Location     Type
 17534 ;;  __ftmul         3   53[COMRAM] float 
 17535 ;;  __ftmul         3   56[COMRAM] float 
 17536 ;; Auto vars:     Size  Location     Type
 17537 ;;  __ftmul         3   65[COMRAM] unsigned um
 17538 ;;  __ftmul         1   69[COMRAM] unsigned char 
 17539 ;;  __ftmul         1   68[COMRAM] unsigned char 
 17540 ;;  __ftmul         1   64[COMRAM] unsigned char 
 17541 ;; Return value:  Size  Location     Type
 17542 ;;                  3   53[COMRAM] float 
 17543 ;; Registers used:
 17544 ;;		wreg, status,2, status,0, cstack
 17545 ;; Tracked objects:
 17546 ;;		On entry : 0/0
 17547 ;;		On exit  : 0/0
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17550 ;;      Params:         6       0       0       0       0       0       0       0       0
 17551 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17552 ;;      Temps:          5       0       0       0       0       0       0       0       0
 17553 ;;      Totals:        17       0       0       0       0       0       0       0       0
 17554 ;;Total ram usage:       17 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; Hardware stack levels required when called:    4
 17557 ;; This function calls:
 17558 ;;		i1___ftpack
 17559 ;; This function is called by:
 17560 ;;		i1_Read_LDR
 17561 ;;		i1_fround
 17562 ;;		i1_scale
 17563 ;;		i1_sprintf
 17564 ;;		i1___asftmul
 17565 ;; This function uses a non-reentrant model
 17566 ;;
 17567                           
 17568                           	psect	text66
 17569  004908                     __ptext66:
 17570                           	opt stack 0
 17571  004908                     i1___ftmul:
 17572                           	opt stack 17
 17573                           
 17574                           ;incstack = 0
 17575                           ;incstack = 0
 17576  004908  0E0F               	movlw	15
 17577  00490A  6E3C               	movwf	??i1___ftmul& (0+255),c
 17578  00490C  C036  F03D         	movff	i1___ftmul@f1,??i1___ftmul+1
 17579  004910  C037  F03E         	movff	i1___ftmul@f1+1,??i1___ftmul+2
 17580  004914  C038  F03F         	movff	i1___ftmul@f1+2,??i1___ftmul+3
 17581  004918  283C               	incf	??i1___ftmul,w,c
 17582  00491A  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 17583  00491C  D004               	goto	i1u846_20
 17584  00491E                     i1u846_25:
 17585  00491E  90D8               	bcf	status,0,c
 17586  004920  323F               	rrcf	??i1___ftmul+3,f,c
 17587  004922  323E               	rrcf	??i1___ftmul+2,f,c
 17588  004924  323D               	rrcf	??i1___ftmul+1,f,c
 17589  004926                     i1u846_20:
 17590  004926  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 17591  004928  D7FA               	goto	i1u846_25
 17592  00492A  503D               	movf	??i1___ftmul+1,w,c
 17593  00492C  6E41               	movwf	i1___ftmul@exp,c
 17594  00492E  6641               	tstfsz	i1___ftmul@exp& (0+255),c
 17595  004930  D001               	goto	i1l9478
 17596  004932  D015               	goto	i1u849_20
 17597  004934                     i1l9478:
 17598  004934  0E0F               	movlw	15
 17599  004936  6E3C               	movwf	??i1___ftmul& (0+255),c
 17600  004938  C039  F03D         	movff	i1___ftmul@f2,??i1___ftmul+1
 17601  00493C  C03A  F03E         	movff	i1___ftmul@f2+1,??i1___ftmul+2
 17602  004940  C03B  F03F         	movff	i1___ftmul@f2+2,??i1___ftmul+3
 17603  004944  283C               	incf	??i1___ftmul,w,c
 17604  004946  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 17605  004948  D004               	goto	i1u848_20
 17606  00494A                     i1u848_25:
 17607  00494A  90D8               	bcf	status,0,c
 17608  00494C  323F               	rrcf	??i1___ftmul+3,f,c
 17609  00494E  323E               	rrcf	??i1___ftmul+2,f,c
 17610  004950  323D               	rrcf	??i1___ftmul+1,f,c
 17611  004952                     i1u848_20:
 17612  004952  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 17613  004954  D7FA               	goto	i1u848_25
 17614  004956  503D               	movf	??i1___ftmul+1,w,c
 17615  004958  6E46               	movwf	i1___ftmul@sign,c
 17616  00495A  6646               	tstfsz	i1___ftmul@sign& (0+255),c
 17617  00495C  D007               	goto	i1l9484
 17618  00495E                     i1u849_20:
 17619  00495E  0E00               	movlw	0
 17620  004960  6E36               	movwf	?i1___ftmul,c
 17621  004962  0E00               	movlw	0
 17622  004964  6E37               	movwf	?i1___ftmul+1,c
 17623  004966  0E00               	movlw	0
 17624  004968  6E38               	movwf	?i1___ftmul+2,c
 17625  00496A  D055               	goto	i1l779
 17626  00496C                     i1l9484:
 17627  00496C  5046               	movf	i1___ftmul@sign,w,c
 17628  00496E  0F7B               	addlw	123
 17629  004970  2641               	addwf	i1___ftmul@exp,f,c
 17630  004972  C038  F046         	movff	i1___ftmul@f1+2,i1___ftmul@sign
 17631  004976  503B               	movf	(i1___ftmul@f2+2)& (0+255),w,c
 17632  004978  1A46               	xorwf	i1___ftmul@sign,f,c
 17633  00497A  0E80               	movlw	128
 17634  00497C  1646               	andwf	i1___ftmul@sign,f,c
 17635  00497E  8E37               	bsf	i1___ftmul@f1+1,7,c
 17636  004980  8E3A               	bsf	i1___ftmul@f2+1,7,c
 17637  004982  0EFF               	movlw	255
 17638  004984  1639               	andwf	i1___ftmul@f2,f,c
 17639  004986  0EFF               	movlw	255
 17640  004988  163A               	andwf	i1___ftmul@f2+1,f,c
 17641  00498A  0E00               	movlw	0
 17642  00498C  163B               	andwf	i1___ftmul@f2+2,f,c
 17643  00498E  0E00               	movlw	0
 17644  004990  6E42               	movwf	i1___ftmul@f3_as_product,c
 17645  004992  0E00               	movlw	0
 17646  004994  6E43               	movwf	i1___ftmul@f3_as_product+1,c
 17647  004996  0E00               	movlw	0
 17648  004998  6E44               	movwf	i1___ftmul@f3_as_product+2,c
 17649  00499A  6E3C               	movwf	??i1___ftmul& (0+255),c
 17650  00499C  0E07               	movlw	7
 17651  00499E  6E45               	movwf	i1___ftmul@cntr,c
 17652  0049A0  503C               	movf	??i1___ftmul& (0+255),w,c
 17653  0049A2                     i1l9498:
 17654  0049A2  A036               	btfss	i1___ftmul@f1,0,c
 17655  0049A4  D006               	goto	i1l9502
 17656  0049A6  5039               	movf	i1___ftmul@f2,w,c
 17657  0049A8  2642               	addwf	i1___ftmul@f3_as_product,f,c
 17658  0049AA  503A               	movf	i1___ftmul@f2+1,w,c
 17659  0049AC  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 17660  0049AE  503B               	movf	i1___ftmul@f2+2,w,c
 17661  0049B0  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 17662  0049B2                     i1l9502:
 17663  0049B2  90D8               	bcf	status,0,c
 17664  0049B4  3238               	rrcf	i1___ftmul@f1+2,f,c
 17665  0049B6  3237               	rrcf	i1___ftmul@f1+1,f,c
 17666  0049B8  3236               	rrcf	i1___ftmul@f1,f,c
 17667  0049BA  90D8               	bcf	status,0,c
 17668  0049BC  3639               	rlcf	i1___ftmul@f2,f,c
 17669  0049BE  363A               	rlcf	i1___ftmul@f2+1,f,c
 17670  0049C0  363B               	rlcf	i1___ftmul@f2+2,f,c
 17671  0049C2  2E45               	decfsz	i1___ftmul@cntr,f,c
 17672  0049C4  D7EE               	goto	i1l9498
 17673  0049C6  6E3C               	movwf	??i1___ftmul& (0+255),c
 17674  0049C8  0E09               	movlw	9
 17675  0049CA  6E45               	movwf	i1___ftmul@cntr,c
 17676  0049CC  503C               	movf	??i1___ftmul& (0+255),w,c
 17677  0049CE                     i1l9508:
 17678  0049CE  A036               	btfss	i1___ftmul@f1,0,c
 17679  0049D0  D006               	goto	i1l9512
 17680  0049D2  5039               	movf	i1___ftmul@f2,w,c
 17681  0049D4  2642               	addwf	i1___ftmul@f3_as_product,f,c
 17682  0049D6  503A               	movf	i1___ftmul@f2+1,w,c
 17683  0049D8  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 17684  0049DA  503B               	movf	i1___ftmul@f2+2,w,c
 17685  0049DC  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 17686  0049DE                     i1l9512:
 17687  0049DE  90D8               	bcf	status,0,c
 17688  0049E0  3238               	rrcf	i1___ftmul@f1+2,f,c
 17689  0049E2  3237               	rrcf	i1___ftmul@f1+1,f,c
 17690  0049E4  3236               	rrcf	i1___ftmul@f1,f,c
 17691  0049E6  90D8               	bcf	status,0,c
 17692  0049E8  3244               	rrcf	i1___ftmul@f3_as_product+2,f,c
 17693  0049EA  3243               	rrcf	i1___ftmul@f3_as_product+1,f,c
 17694  0049EC  3242               	rrcf	i1___ftmul@f3_as_product,f,c
 17695  0049EE  2E45               	decfsz	i1___ftmul@cntr,f,c
 17696  0049F0  D7EE               	goto	i1l9508
 17697  0049F2  C042  F011         	movff	i1___ftmul@f3_as_product,?i1___ftpack
 17698  0049F6  C043  F012         	movff	i1___ftmul@f3_as_product+1,?i1___ftpack+1
 17699  0049FA  C044  F013         	movff	i1___ftmul@f3_as_product+2,?i1___ftpack+2
 17700  0049FE  C041  F014         	movff	i1___ftmul@exp,?i1___ftpack+3
 17701  004A02  C046  F015         	movff	i1___ftmul@sign,?i1___ftpack+4
 17702  004A06  EC1E  F02A         	call	i1___ftpack	;wreg free
 17703  004A0A  C013  F038         	movff	?i1___ftpack+2,?i1___ftmul+2
 17704  004A0E  C012  F037         	movff	?i1___ftpack+1,?i1___ftmul+1
 17705  004A12  C011  F036         	movff	?i1___ftpack,?i1___ftmul
 17706  004A16                     i1l779:
 17707  004A16  0012               	return	
 17708  004A18                     __end_ofi1___ftmul:
 17709                           	opt stack 0
 17710                           pclatu	equ	0xFFB
 17711                           pclath	equ	0xFFA
 17712                           tblptru	equ	0xFF8
 17713                           tblptrh	equ	0xFF7
 17714                           tblptrl	equ	0xFF6
 17715                           tablat	equ	0xFF5
 17716                           prodh	equ	0xFF4
 17717                           prodl	equ	0xFF3
 17718                           intcon	equ	0xFF2
 17719                           intcon2	equ	0xFF1
 17720                           postinc0	equ	0xFEE
 17721                           fsr0h	equ	0xFEA
 17722                           fsr0l	equ	0xFE9
 17723                           wreg	equ	0xFE8
 17724                           fsr1h	equ	0xFE2
 17725                           fsr1l	equ	0xFE1
 17726                           bsr	equ	0xFE0
 17727                           indf2	equ	0xFDF
 17728                           postinc2	equ	0xFDE
 17729                           postdec2	equ	0xFDD
 17730                           fsr2h	equ	0xFDA
 17731                           fsr2l	equ	0xFD9
 17732                           status	equ	0xFD8
 17733                           
 17734 ;; *************** function i1___ftdiv *****************
 17735 ;; Defined at:
 17736 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
 17737 ;; Parameters:    Size  Location     Type
 17738 ;;  __ftdiv         3    0[BANK0 ] float 
 17739 ;;  __ftdiv         3    3[BANK0 ] float 
 17740 ;; Auto vars:     Size  Location     Type
 17741 ;;  __ftdiv         3   13[BANK0 ] float 
 17742 ;;  __ftdiv         1   16[BANK0 ] unsigned char 
 17743 ;;  __ftdiv         1   12[BANK0 ] unsigned char 
 17744 ;;  __ftdiv         1   11[BANK0 ] unsigned char 
 17745 ;; Return value:  Size  Location     Type
 17746 ;;                  3    0[BANK0 ] float 
 17747 ;; Registers used:
 17748 ;;		wreg, status,2, status,0, cstack
 17749 ;; Tracked objects:
 17750 ;;		On entry : 0/0
 17751 ;;		On exit  : 0/0
 17752 ;;		Unchanged: 0/0
 17753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17754 ;;      Params:         0       6       0       0       0       0       0       0       0
 17755 ;;      Locals:         0       6       0       0       0       0       0       0       0
 17756 ;;      Temps:          0       5       0       0       0       0       0       0       0
 17757 ;;      Totals:         0      17       0       0       0       0       0       0       0
 17758 ;;Total ram usage:       17 bytes
 17759 ;; Hardware stack levels used:    1
 17760 ;; Hardware stack levels required when called:    4
 17761 ;; This function calls:
 17762 ;;		i1___ftpack
 17763 ;; This function is called by:
 17764 ;;		i1_Read_LDR
 17765 ;; This function uses a non-reentrant model
 17766 ;;
 17767                           
 17768                           	psect	text67
 17769  004118                     __ptext67:
 17770                           	opt stack 0
 17771  004118                     i1___ftdiv:
 17772                           	opt stack 17
 17773                           
 17774                           ;incstack = 0
 17775                           ;incstack = 0
 17776  004118  0E0F               	movlw	15
 17777  00411A  0100               	movlb	0	; () banked
 17778  00411C  6F66               	movwf	??i1___ftdiv& (0+255),b
 17779  00411E  0100               	movlb	0	; () banked
 17780  004120  C060  F067         	movff	i1___ftdiv@f1,??i1___ftdiv+1
 17781  004124  0100               	movlb	0	; () banked
 17782  004126  C061  F068         	movff	i1___ftdiv@f1+1,??i1___ftdiv+2
 17783  00412A  0100               	movlb	0	; () banked
 17784  00412C  C062  F069         	movff	i1___ftdiv@f1+2,??i1___ftdiv+3
 17785  004130  0100               	movlb	0	; () banked
 17786  004132  2966               	incf	??i1___ftdiv& (0+255),w,b
 17787  004134  0100               	movlb	0	; () banked
 17788  004136  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 17789  004138  D005               	goto	i1u1105_20
 17790  00413A                     i1u1105_25:
 17791  00413A  0100               	movlb	0	; () banked
 17792  00413C  90D8               	bcf	status,0,c
 17793  00413E  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 17794  004140  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 17795  004142  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 17796  004144                     i1u1105_20:
 17797  004144  0100               	movlb	0	; () banked
 17798  004146  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 17799  004148  D7F8               	goto	i1u1105_25
 17800  00414A  0100               	movlb	0	; () banked
 17801  00414C  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 17802  00414E  0100               	movlb	0	; () banked
 17803  004150  0100               	movlb	0	; () banked
 17804  004152  6F6C               	movwf	i1___ftdiv@exp& (0+255),b
 17805  004154  0100               	movlb	0	; () banked
 17806  004156  676C               	tstfsz	i1___ftdiv@exp& (0+255),b
 17807  004158  D001               	goto	i1l11524
 17808  00415A  D021               	goto	i1u1108_20
 17809  00415C                     i1l11524:
 17810                           
 17811                           ; BSR set to: 0
 17812  00415C  0E0F               	movlw	15
 17813  00415E  0100               	movlb	0	; () banked
 17814  004160  6F66               	movwf	??i1___ftdiv& (0+255),b
 17815  004162  0100               	movlb	0	; () banked
 17816  004164  C063  F067         	movff	i1___ftdiv@f2,??i1___ftdiv+1
 17817  004168  0100               	movlb	0	; () banked
 17818  00416A  C064  F068         	movff	i1___ftdiv@f2+1,??i1___ftdiv+2
 17819  00416E  0100               	movlb	0	; () banked
 17820  004170  C065  F069         	movff	i1___ftdiv@f2+2,??i1___ftdiv+3
 17821  004174  0100               	movlb	0	; () banked
 17822  004176  2966               	incf	??i1___ftdiv& (0+255),w,b
 17823  004178  0100               	movlb	0	; () banked
 17824  00417A  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 17825  00417C  D005               	goto	i1u1107_20
 17826  00417E                     i1u1107_25:
 17827  00417E  0100               	movlb	0	; () banked
 17828  004180  90D8               	bcf	status,0,c
 17829  004182  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 17830  004184  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 17831  004186  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 17832  004188                     i1u1107_20:
 17833  004188  0100               	movlb	0	; () banked
 17834  00418A  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 17835  00418C  D7F8               	goto	i1u1107_25
 17836  00418E  0100               	movlb	0	; () banked
 17837  004190  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 17838  004192  0100               	movlb	0	; () banked
 17839  004194  0100               	movlb	0	; () banked
 17840  004196  6F70               	movwf	i1___ftdiv@sign& (0+255),b
 17841  004198  0100               	movlb	0	; () banked
 17842  00419A  6770               	tstfsz	i1___ftdiv@sign& (0+255),b
 17843  00419C  D00D               	goto	i1l11530
 17844  00419E                     i1u1108_20:
 17845                           
 17846                           ; BSR set to: 0
 17847  00419E  0E00               	movlw	0
 17848  0041A0  0100               	movlb	0	; () banked
 17849  0041A2  0100               	movlb	0	; () banked
 17850  0041A4  6F60               	movwf	?i1___ftdiv& (0+255),b
 17851  0041A6  0E00               	movlw	0
 17852  0041A8  0100               	movlb	0	; () banked
 17853  0041AA  0100               	movlb	0	; () banked
 17854  0041AC  6F61               	movwf	(?i1___ftdiv+1)& (0+255),b
 17855  0041AE  0E00               	movlw	0
 17856  0041B0  0100               	movlb	0	; () banked
 17857  0041B2  0100               	movlb	0	; () banked
 17858  0041B4  6F62               	movwf	(?i1___ftdiv+2)& (0+255),b
 17859  0041B6  D093               	goto	i1l747
 17860  0041B8                     i1l11530:
 17861                           
 17862                           ; BSR set to: 0
 17863  0041B8  0E00               	movlw	0
 17864  0041BA  0100               	movlb	0	; () banked
 17865  0041BC  0100               	movlb	0	; () banked
 17866  0041BE  6F6D               	movwf	i1___ftdiv@f3& (0+255),b
 17867  0041C0  0E00               	movlw	0
 17868  0041C2  0100               	movlb	0	; () banked
 17869  0041C4  0100               	movlb	0	; () banked
 17870  0041C6  6F6E               	movwf	(i1___ftdiv@f3+1)& (0+255),b
 17871  0041C8  0E00               	movlw	0
 17872  0041CA  0100               	movlb	0	; () banked
 17873  0041CC  0100               	movlb	0	; () banked
 17874  0041CE  6F6F               	movwf	(i1___ftdiv@f3+2)& (0+255),b
 17875                           
 17876                           ; BSR set to: 0
 17877  0041D0  0100               	movlb	0	; () banked
 17878  0041D2  0100               	movlb	0	; () banked
 17879  0041D4  5170               	movf	i1___ftdiv@sign& (0+255),w,b
 17880  0041D6  0F89               	addlw	137
 17881  0041D8  0100               	movlb	0	; () banked
 17882  0041DA  0100               	movlb	0	; () banked
 17883  0041DC  5F6C               	subwf	i1___ftdiv@exp& (0+255),f,b
 17884                           
 17885                           ; BSR set to: 0
 17886  0041DE  C062  F070         	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
 17887                           
 17888                           ; BSR set to: 0
 17889  0041E2  0100               	movlb	0	; () banked
 17890  0041E4  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17891  0041E6  0100               	movlb	0	; () banked
 17892  0041E8  0100               	movlb	0	; () banked
 17893  0041EA  1B70               	xorwf	i1___ftdiv@sign& (0+255),f,b
 17894                           
 17895                           ; BSR set to: 0
 17896  0041EC  0E80               	movlw	128
 17897  0041EE  0100               	movlb	0	; () banked
 17898  0041F0  0100               	movlb	0	; () banked
 17899  0041F2  1770               	andwf	i1___ftdiv@sign& (0+255),f,b
 17900                           
 17901                           ; BSR set to: 0
 17902  0041F4  0100               	movlb	0	; () banked
 17903  0041F6  0100               	movlb	0	; () banked
 17904  0041F8  8F61               	bsf	(i1___ftdiv@f1+1)& (0+255),7,b
 17905                           
 17906                           ; BSR set to: 0
 17907  0041FA  0EFF               	movlw	255
 17908  0041FC  0100               	movlb	0	; () banked
 17909  0041FE  0100               	movlb	0	; () banked
 17910  004200  1760               	andwf	i1___ftdiv@f1& (0+255),f,b
 17911  004202  0EFF               	movlw	255
 17912  004204  0100               	movlb	0	; () banked
 17913  004206  0100               	movlb	0	; () banked
 17914  004208  1761               	andwf	(i1___ftdiv@f1+1)& (0+255),f,b
 17915  00420A  0E00               	movlw	0
 17916  00420C  0100               	movlb	0	; () banked
 17917  00420E  0100               	movlb	0	; () banked
 17918  004210  1762               	andwf	(i1___ftdiv@f1+2)& (0+255),f,b
 17919                           
 17920                           ; BSR set to: 0
 17921  004212  0100               	movlb	0	; () banked
 17922  004214  0100               	movlb	0	; () banked
 17923  004216  8F64               	bsf	(i1___ftdiv@f2+1)& (0+255),7,b
 17924                           
 17925                           ; BSR set to: 0
 17926  004218  0EFF               	movlw	255
 17927  00421A  0100               	movlb	0	; () banked
 17928  00421C  0100               	movlb	0	; () banked
 17929  00421E  1763               	andwf	i1___ftdiv@f2& (0+255),f,b
 17930  004220  0EFF               	movlw	255
 17931  004222  0100               	movlb	0	; () banked
 17932  004224  0100               	movlb	0	; () banked
 17933  004226  1764               	andwf	(i1___ftdiv@f2+1)& (0+255),f,b
 17934  004228  0E00               	movlw	0
 17935  00422A  0100               	movlb	0	; () banked
 17936  00422C  0100               	movlb	0	; () banked
 17937  00422E  1765               	andwf	(i1___ftdiv@f2+2)& (0+255),f,b
 17938                           
 17939                           ; BSR set to: 0
 17940  004230  0100               	movlb	0	; () banked
 17941  004232  6F66               	movwf	??i1___ftdiv& (0+255),b
 17942  004234  0E18               	movlw	24
 17943  004236  0100               	movlb	0	; () banked
 17944  004238  0100               	movlb	0	; () banked
 17945  00423A  6F6B               	movwf	i1___ftdiv@cntr& (0+255),b
 17946  00423C  0100               	movlb	0	; () banked
 17947  00423E  5166               	movf	??i1___ftdiv& (0+255),w,b
 17948  004240                     i1l749:
 17949                           
 17950                           ; BSR set to: 0
 17951  004240  0100               	movlb	0	; () banked
 17952  004242  90D8               	bcf	status,0,c
 17953  004244  0100               	movlb	0	; () banked
 17954  004246  376D               	rlcf	i1___ftdiv@f3& (0+255),f,b
 17955  004248  0100               	movlb	0	; () banked
 17956  00424A  376E               	rlcf	(i1___ftdiv@f3+1)& (0+255),f,b
 17957  00424C  0100               	movlb	0	; () banked
 17958  00424E  376F               	rlcf	(i1___ftdiv@f3+2)& (0+255),f,b
 17959                           
 17960                           ; BSR set to: 0
 17961  004250  0100               	movlb	0	; () banked
 17962  004252  0100               	movlb	0	; () banked
 17963  004254  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 17964  004256  0100               	movlb	0	; () banked
 17965  004258  0100               	movlb	0	; () banked
 17966  00425A  5D60               	subwf	i1___ftdiv@f1& (0+255),w,b
 17967  00425C  0100               	movlb	0	; () banked
 17968  00425E  0100               	movlb	0	; () banked
 17969  004260  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 17970  004262  0100               	movlb	0	; () banked
 17971  004264  0100               	movlb	0	; () banked
 17972  004266  5961               	subwfb	(i1___ftdiv@f1+1)& (0+255),w,b
 17973  004268  0100               	movlb	0	; () banked
 17974  00426A  0100               	movlb	0	; () banked
 17975  00426C  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17976  00426E  0100               	movlb	0	; () banked
 17977  004270  0100               	movlb	0	; () banked
 17978  004272  5962               	subwfb	(i1___ftdiv@f1+2)& (0+255),w,b
 17979  004274  A0D8               	btfss	status,0,c
 17980  004276  D015               	goto	i1l750
 17981                           
 17982                           ; BSR set to: 0
 17983  004278  0100               	movlb	0	; () banked
 17984  00427A  0100               	movlb	0	; () banked
 17985  00427C  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 17986  00427E  0100               	movlb	0	; () banked
 17987  004280  0100               	movlb	0	; () banked
 17988  004282  5F60               	subwf	i1___ftdiv@f1& (0+255),f,b
 17989  004284  0100               	movlb	0	; () banked
 17990  004286  0100               	movlb	0	; () banked
 17991  004288  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 17992  00428A  0100               	movlb	0	; () banked
 17993  00428C  0100               	movlb	0	; () banked
 17994  00428E  5B61               	subwfb	(i1___ftdiv@f1+1)& (0+255),f,b
 17995  004290  0100               	movlb	0	; () banked
 17996  004292  0100               	movlb	0	; () banked
 17997  004294  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17998  004296  0100               	movlb	0	; () banked
 17999  004298  0100               	movlb	0	; () banked
 18000  00429A  5B62               	subwfb	(i1___ftdiv@f1+2)& (0+255),f,b
 18001                           
 18002                           ; BSR set to: 0
 18003  00429C  0100               	movlb	0	; () banked
 18004  00429E  0100               	movlb	0	; () banked
 18005  0042A0  816D               	bsf	i1___ftdiv@f3& (0+255),0,b
 18006  0042A2                     i1l750:
 18007                           
 18008                           ; BSR set to: 0
 18009  0042A2  0100               	movlb	0	; () banked
 18010  0042A4  90D8               	bcf	status,0,c
 18011  0042A6  0100               	movlb	0	; () banked
 18012  0042A8  3760               	rlcf	i1___ftdiv@f1& (0+255),f,b
 18013  0042AA  0100               	movlb	0	; () banked
 18014  0042AC  3761               	rlcf	(i1___ftdiv@f1+1)& (0+255),f,b
 18015  0042AE  0100               	movlb	0	; () banked
 18016  0042B0  3762               	rlcf	(i1___ftdiv@f1+2)& (0+255),f,b
 18017                           
 18018                           ; BSR set to: 0
 18019  0042B2  0100               	movlb	0	; () banked
 18020  0042B4  0100               	movlb	0	; () banked
 18021  0042B6  2F6B               	decfsz	i1___ftdiv@cntr& (0+255),f,b
 18022  0042B8  D7C3               	goto	i1l749
 18023                           
 18024                           ; BSR set to: 0
 18025                           
 18026                           ; BSR set to: 0
 18027  0042BA  C06D  F011         	movff	i1___ftdiv@f3,?i1___ftpack
 18028  0042BE  C06E  F012         	movff	i1___ftdiv@f3+1,?i1___ftpack+1
 18029  0042C2  C06F  F013         	movff	i1___ftdiv@f3+2,?i1___ftpack+2
 18030  0042C6  C06C  F014         	movff	i1___ftdiv@exp,?i1___ftpack+3
 18031  0042CA  C070  F015         	movff	i1___ftdiv@sign,?i1___ftpack+4
 18032  0042CE  EC1E  F02A         	call	i1___ftpack	;wreg free
 18033  0042D2  C013  F062         	movff	?i1___ftpack+2,?i1___ftdiv+2
 18034  0042D6  C012  F061         	movff	?i1___ftpack+1,?i1___ftdiv+1
 18035  0042DA  C011  F060         	movff	?i1___ftpack,?i1___ftdiv
 18036  0042DE                     i1l747:
 18037  0042DE  0012               	return	
 18038  0042E0                     __end_ofi1___ftdiv:
 18039                           	opt stack 0
 18040                           pclatu	equ	0xFFB
 18041                           pclath	equ	0xFFA
 18042                           tblptru	equ	0xFF8
 18043                           tblptrh	equ	0xFF7
 18044                           tblptrl	equ	0xFF6
 18045                           tablat	equ	0xFF5
 18046                           prodh	equ	0xFF4
 18047                           prodl	equ	0xFF3
 18048                           intcon	equ	0xFF2
 18049                           intcon2	equ	0xFF1
 18050                           postinc0	equ	0xFEE
 18051                           fsr0h	equ	0xFEA
 18052                           fsr0l	equ	0xFE9
 18053                           wreg	equ	0xFE8
 18054                           fsr1h	equ	0xFE2
 18055                           fsr1l	equ	0xFE1
 18056                           bsr	equ	0xFE0
 18057                           indf2	equ	0xFDF
 18058                           postinc2	equ	0xFDE
 18059                           postdec2	equ	0xFDD
 18060                           fsr2h	equ	0xFDA
 18061                           fsr2l	equ	0xFD9
 18062                           status	equ	0xFD8
 18063                           
 18064 ;; *************** function i1___ftpack *****************
 18065 ;; Defined at:
 18066 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 18067 ;; Parameters:    Size  Location     Type
 18068 ;;  __ftpack        3   16[COMRAM] unsigned um
 18069 ;;  __ftpack        1   19[COMRAM] unsigned char 
 18070 ;;  __ftpack        1   20[COMRAM] unsigned char 
 18071 ;; Auto vars:     Size  Location     Type
 18072 ;;		None
 18073 ;; Return value:  Size  Location     Type
 18074 ;;                  3   16[COMRAM] float 
 18075 ;; Registers used:
 18076 ;;		wreg, status,2, status,0
 18077 ;; Tracked objects:
 18078 ;;		On entry : 0/0
 18079 ;;		On exit  : 0/0
 18080 ;;		Unchanged: 0/0
 18081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18082 ;;      Params:         5       0       0       0       0       0       0       0       0
 18083 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18084 ;;      Temps:          3       0       0       0       0       0       0       0       0
 18085 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18086 ;;Total ram usage:        8 bytes
 18087 ;; Hardware stack levels used:    1
 18088 ;; Hardware stack levels required when called:    3
 18089 ;; This function calls:
 18090 ;;		Nothing
 18091 ;; This function is called by:
 18092 ;;		i1___awtoft
 18093 ;;		i1___ftadd
 18094 ;;		i1___ftdiv
 18095 ;;		i1___ftmul
 18096 ;;		i1___lltoft
 18097 ;; This function uses a non-reentrant model
 18098 ;;
 18099                           
 18100                           	psect	text68
 18101  00543C                     __ptext68:
 18102                           	opt stack 0
 18103  00543C                     i1___ftpack:
 18104                           	opt stack 17
 18105                           
 18106                           ;incstack = 0
 18107                           ;incstack = 0
 18108  00543C  5014               	movf	i1___ftpack@exp,w,c
 18109  00543E  B4D8               	btfsc	status,2,c
 18110  005440  D005               	goto	i1l9254
 18111  005442  5011               	movf	i1___ftpack@arg,w,c
 18112  005444  1012               	iorwf	i1___ftpack@arg+1,w,c
 18113  005446  1013               	iorwf	i1___ftpack@arg+2,w,c
 18114  005448  A4D8               	btfss	status,2,c
 18115  00544A  D00C               	goto	i1l9260
 18116  00544C                     i1l9254:
 18117  00544C  0E00               	movlw	0
 18118  00544E  6E11               	movwf	?i1___ftpack,c
 18119  005450  0E00               	movlw	0
 18120  005452  6E12               	movwf	?i1___ftpack+1,c
 18121  005454  0E00               	movlw	0
 18122  005456  6E13               	movwf	?i1___ftpack+2,c
 18123  005458  D04C               	goto	i1l678
 18124  00545A                     i1l9258:
 18125  00545A  2A14               	incf	i1___ftpack@exp,f,c
 18126  00545C  90D8               	bcf	status,0,c
 18127  00545E  3213               	rrcf	i1___ftpack@arg+2,f,c
 18128  005460  3212               	rrcf	i1___ftpack@arg+1,f,c
 18129  005462  3211               	rrcf	i1___ftpack@arg,f,c
 18130  005464                     i1l9260:
 18131  005464  0E00               	movlw	0
 18132  005466  1411               	andwf	i1___ftpack@arg,w,c
 18133  005468  6E16               	movwf	??i1___ftpack& (0+255),c
 18134  00546A  0E00               	movlw	0
 18135  00546C  1412               	andwf	i1___ftpack@arg+1,w,c
 18136  00546E  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 18137  005470  0EFE               	movlw	254
 18138  005472  1413               	andwf	i1___ftpack@arg+2,w,c
 18139  005474  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18140  005476  5016               	movf	??i1___ftpack,w,c
 18141  005478  1017               	iorwf	??i1___ftpack+1,w,c
 18142  00547A  1018               	iorwf	??i1___ftpack+2,w,c
 18143  00547C  B4D8               	btfsc	status,2,c
 18144  00547E  D00C               	goto	i1l9266
 18145  005480  D7EC               	goto	i1l9258
 18146  005482                     i1l9262:
 18147  005482  2A14               	incf	i1___ftpack@exp,f,c
 18148  005484  0E01               	movlw	1
 18149  005486  2611               	addwf	i1___ftpack@arg,f,c
 18150  005488  0E00               	movlw	0
 18151  00548A  2212               	addwfc	i1___ftpack@arg+1,f,c
 18152  00548C  0E00               	movlw	0
 18153  00548E  2213               	addwfc	i1___ftpack@arg+2,f,c
 18154  005490  90D8               	bcf	status,0,c
 18155  005492  3213               	rrcf	i1___ftpack@arg+2,f,c
 18156  005494  3212               	rrcf	i1___ftpack@arg+1,f,c
 18157  005496  3211               	rrcf	i1___ftpack@arg,f,c
 18158  005498                     i1l9266:
 18159  005498  0E00               	movlw	0
 18160  00549A  1411               	andwf	i1___ftpack@arg,w,c
 18161  00549C  6E16               	movwf	??i1___ftpack& (0+255),c
 18162  00549E  0E00               	movlw	0
 18163  0054A0  1412               	andwf	i1___ftpack@arg+1,w,c
 18164  0054A2  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 18165  0054A4  0EFF               	movlw	255
 18166  0054A6  1413               	andwf	i1___ftpack@arg+2,w,c
 18167  0054A8  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18168  0054AA  5016               	movf	??i1___ftpack,w,c
 18169  0054AC  1017               	iorwf	??i1___ftpack+1,w,c
 18170  0054AE  1018               	iorwf	??i1___ftpack+2,w,c
 18171  0054B0  B4D8               	btfsc	status,2,c
 18172  0054B2  D006               	goto	i1l9270
 18173  0054B4  D7E6               	goto	i1l9262
 18174  0054B6                     i1l9268:
 18175  0054B6  0614               	decf	i1___ftpack@exp,f,c
 18176  0054B8  90D8               	bcf	status,0,c
 18177  0054BA  3611               	rlcf	i1___ftpack@arg,f,c
 18178  0054BC  3612               	rlcf	i1___ftpack@arg+1,f,c
 18179  0054BE  3613               	rlcf	i1___ftpack@arg+2,f,c
 18180  0054C0                     i1l9270:
 18181  0054C0  AE12               	btfss	i1___ftpack@arg+1,7,c
 18182  0054C2  D7F9               	goto	i1l9268
 18183  0054C4  A014               	btfss	i1___ftpack@exp,0,c
 18184  0054C6  9E12               	bcf	i1___ftpack@arg+1,7,c
 18185  0054C8  90D8               	bcf	status,0,c
 18186  0054CA  3214               	rrcf	i1___ftpack@exp,f,c
 18187  0054CC  5014               	movf	i1___ftpack@exp,w,c
 18188  0054CE  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18189  0054D0  6A17               	clrf	(??i1___ftpack+1)& (0+255),c
 18190  0054D2  6A16               	clrf	??i1___ftpack& (0+255),c
 18191  0054D4  5016               	movf	??i1___ftpack,w,c
 18192  0054D6  1211               	iorwf	i1___ftpack@arg,f,c
 18193  0054D8  5017               	movf	??i1___ftpack+1,w,c
 18194  0054DA  1212               	iorwf	i1___ftpack@arg+1,f,c
 18195  0054DC  5018               	movf	??i1___ftpack+2,w,c
 18196  0054DE  1213               	iorwf	i1___ftpack@arg+2,f,c
 18197  0054E0  5015               	movf	i1___ftpack@sign,w,c
 18198  0054E2  A4D8               	btfss	status,2,c
 18199  0054E4  8E13               	bsf	i1___ftpack@arg+2,7,c
 18200  0054E6  C011  F011         	movff	i1___ftpack@arg,?i1___ftpack
 18201  0054EA  C012  F012         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 18202  0054EE  C013  F013         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 18203  0054F2                     i1l678:
 18204  0054F2  0012               	return	
 18205  0054F4                     __end_ofi1___ftpack:
 18206                           	opt stack 0
 18207                           pclatu	equ	0xFFB
 18208                           pclath	equ	0xFFA
 18209                           tblptru	equ	0xFF8
 18210                           tblptrh	equ	0xFF7
 18211                           tblptrl	equ	0xFF6
 18212                           tablat	equ	0xFF5
 18213                           prodh	equ	0xFF4
 18214                           prodl	equ	0xFF3
 18215                           intcon	equ	0xFF2
 18216                           intcon2	equ	0xFF1
 18217                           postinc0	equ	0xFEE
 18218                           fsr0h	equ	0xFEA
 18219                           fsr0l	equ	0xFE9
 18220                           wreg	equ	0xFE8
 18221                           fsr1h	equ	0xFE2
 18222                           fsr1l	equ	0xFE1
 18223                           bsr	equ	0xFE0
 18224                           indf2	equ	0xFDF
 18225                           postinc2	equ	0xFDE
 18226                           postdec2	equ	0xFDD
 18227                           fsr2h	equ	0xFDA
 18228                           fsr2l	equ	0xFD9
 18229                           status	equ	0xFD8
 18230                           
 18231 ;; *************** function i1___awtoft *****************
 18232 ;; Defined at:
 18233 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
 18234 ;; Parameters:    Size  Location     Type
 18235 ;;  __awtoft        2   24[COMRAM] int 
 18236 ;; Auto vars:     Size  Location     Type
 18237 ;;  __awtoft        1   28[COMRAM] unsigned char 
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  3   24[COMRAM] float 
 18240 ;; Registers used:
 18241 ;;		wreg, status,2, status,0, cstack
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18247 ;;      Params:         3       0       0       0       0       0       0       0       0
 18248 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18249 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18250 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18251 ;;Total ram usage:        5 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:    4
 18254 ;; This function calls:
 18255 ;;		i1___ftpack
 18256 ;; This function is called by:
 18257 ;;		i1_Read_LDR
 18258 ;; This function uses a non-reentrant model
 18259 ;;
 18260                           
 18261                           	psect	text69
 18262  005F16                     __ptext69:
 18263                           	opt stack 0
 18264  005F16                     i1___awtoft:
 18265                           	opt stack 17
 18266                           
 18267                           ;incstack = 0
 18268                           ;incstack = 0
 18269  005F16  6E1C               	movwf	??i1___awtoft& (0+255),c
 18270  005F18  0E00               	movlw	0
 18271  005F1A  6E1D               	movwf	i1___awtoft@sign,c
 18272  005F1C  501C               	movf	??i1___awtoft& (0+255),w,c
 18273  005F1E  AE1A               	btfss	i1___awtoft@c+1,7,c
 18274  005F20  D008               	goto	i1l9190
 18275  005F22  6C19               	negf	i1___awtoft@c,c
 18276  005F24  1E1A               	comf	i1___awtoft@c+1,f,c
 18277  005F26  B0D8               	btfsc	status,0,c
 18278  005F28  2A1A               	incf	i1___awtoft@c+1,f,c
 18279  005F2A  6E1C               	movwf	??i1___awtoft& (0+255),c
 18280  005F2C  0E01               	movlw	1
 18281  005F2E  6E1D               	movwf	i1___awtoft@sign,c
 18282  005F30  501C               	movf	??i1___awtoft& (0+255),w,c
 18283  005F32                     i1l9190:
 18284  005F32  C019  F011         	movff	i1___awtoft@c,?i1___ftpack
 18285  005F36  C01A  F012         	movff	i1___awtoft@c+1,?i1___ftpack+1
 18286  005F3A  6A13               	clrf	?i1___ftpack+2,c
 18287  005F3C  6E1C               	movwf	??i1___awtoft& (0+255),c
 18288  005F3E  0E8E               	movlw	142
 18289  005F40  6E14               	movwf	?i1___ftpack+3,c
 18290  005F42  501C               	movf	??i1___awtoft& (0+255),w,c
 18291  005F44  C01D  F015         	movff	i1___awtoft@sign,?i1___ftpack+4
 18292  005F48  EC1E  F02A         	call	i1___ftpack	;wreg free
 18293  005F4C  C013  F01B         	movff	?i1___ftpack+2,?i1___awtoft+2
 18294  005F50  C012  F01A         	movff	?i1___ftpack+1,?i1___awtoft+1
 18295  005F54  C011  F019         	movff	?i1___ftpack,?i1___awtoft
 18296  005F58  0012               	return	
 18297  005F5A                     __end_ofi1___awtoft:
 18298                           	opt stack 0
 18299                           pclatu	equ	0xFFB
 18300                           pclath	equ	0xFFA
 18301                           tblptru	equ	0xFF8
 18302                           tblptrh	equ	0xFF7
 18303                           tblptrl	equ	0xFF6
 18304                           tablat	equ	0xFF5
 18305                           prodh	equ	0xFF4
 18306                           prodl	equ	0xFF3
 18307                           intcon	equ	0xFF2
 18308                           intcon2	equ	0xFF1
 18309                           postinc0	equ	0xFEE
 18310                           fsr0h	equ	0xFEA
 18311                           fsr0l	equ	0xFE9
 18312                           wreg	equ	0xFE8
 18313                           fsr1h	equ	0xFE2
 18314                           fsr1l	equ	0xFE1
 18315                           bsr	equ	0xFE0
 18316                           indf2	equ	0xFDF
 18317                           postinc2	equ	0xFDE
 18318                           postdec2	equ	0xFDD
 18319                           fsr2h	equ	0xFDA
 18320                           fsr2l	equ	0xFD9
 18321                           status	equ	0xFD8
 18322                           
 18323 ;; *************** function i1_Obtener_Distancia *****************
 18324 ;; Defined at:
 18325 ;;		line 219 in file "main.c"
 18326 ;; Parameters:    Size  Location     Type
 18327 ;;		None
 18328 ;; Auto vars:     Size  Location     Type
 18329 ;;  Obtener_Dist    2   30[COMRAM] unsigned int 
 18330 ;;  Obtener_Dist    2   28[COMRAM] unsigned int 
 18331 ;;  Obtener_Dist    2   26[COMRAM] unsigned int 
 18332 ;; Return value:  Size  Location     Type
 18333 ;;                  2   24[COMRAM] unsigned int 
 18334 ;; Registers used:
 18335 ;;		wreg, status,2, status,0, cstack
 18336 ;; Tracked objects:
 18337 ;;		On entry : 0/0
 18338 ;;		On exit  : 0/0
 18339 ;;		Unchanged: 0/0
 18340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18341 ;;      Params:         2       0       0       0       0       0       0       0       0
 18342 ;;      Locals:         6       0       0       0       0       0       0       0       0
 18343 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18344 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18345 ;;Total ram usage:        8 bytes
 18346 ;; Hardware stack levels used:    1
 18347 ;; Hardware stack levels required when called:    4
 18348 ;; This function calls:
 18349 ;;		i1___lwdiv
 18350 ;; This function is called by:
 18351 ;;		i1_mainLoop
 18352 ;; This function uses a non-reentrant model
 18353 ;;
 18354                           
 18355                           	psect	text70
 18356  005AD2                     __ptext70:
 18357                           	opt stack 0
 18358  005AD2                     i1_Obtener_Distancia:
 18359                           	opt stack 18
 18360                           
 18361                           ;main.c: 220: uint16_t Duracion;
 18362                           ;main.c: 221: uint16_t Distancia;
 18363                           ;main.c: 222: uint16_t Timer_1;
 18364                           ;main.c: 224: LATAbits.LATA1=1;
 18365                           
 18366                           ;incstack = 0
 18367                           ;incstack = 0
 18368  005AD2  8289               	bsf	3977,1,c	;volatile
 18369                           
 18370                           ;main.c: 225: _delay((unsigned long)((10)*(8000000/4000000.0)));
 18371  005AD4  0E06               	movlw	6
 18372  005AD6                     i1u1117_27:
 18373  005AD6  2EE8               	decfsz	wreg,f,c
 18374  005AD8  D7FE               	goto	i1u1117_27
 18375  005ADA  D000               	nop2		;nop
 18376                           
 18377                           ;main.c: 226: LATAbits.LATA1=0;
 18378  005ADC  9289               	bcf	3977,1,c	;volatile
 18379  005ADE                     i1l212:
 18380  005ADE  A480               	btfss	3968,2,c	;volatile
 18381  005AE0  D7FE               	goto	i1l212
 18382                           
 18383                           ;main.c: 228: T1CONbits.TMR1ON=1;
 18384  005AE2  80CD               	bsf	4045,0,c	;volatile
 18385  005AE4                     i1l215:
 18386  005AE4  B480               	btfsc	3968,2,c	;volatile
 18387  005AE6  D7FE               	goto	i1l215
 18388                           
 18389                           ;main.c: 230: T1CONbits.TMR1ON=0;
 18390  005AE8  90CD               	bcf	4045,0,c	;volatile
 18391                           
 18392                           ;main.c: 231: Timer_1=TMR1;
 18393  005AEA  CFCE F01B          	movff	4046,i1Obtener_Distancia@Timer_1	;volatile
 18394  005AEE  CFCF F01C          	movff	4047,i1Obtener_Distancia@Timer_1+1	;volatile
 18395                           
 18396                           ;main.c: 232: Duracion=Timer_1/2;
 18397  005AF2  90D8               	bcf	status,0,c
 18398  005AF4  301C               	rrcf	i1Obtener_Distancia@Timer_1+1,w,c
 18399  005AF6  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 18400  005AF8  301B               	rrcf	i1Obtener_Distancia@Timer_1,w,c
 18401  005AFA  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 18402                           
 18403                           ;main.c: 233: if(Duracion<=23200)
 18404  005AFC  0EA1               	movlw	161
 18405  005AFE  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 18406  005B00  0E5A               	movlw	90
 18407  005B02  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 18408  005B04  B0D8               	btfsc	status,0,c
 18409  005B06  D00F               	goto	i1l8676
 18410                           
 18411                           ;main.c: 234: {
 18412                           ;main.c: 235: Distancia=Duracion/58;
 18413  005B08  C01F  F011         	movff	i1Obtener_Distancia@Duracion,?i1___lwdiv
 18414  005B0C  C020  F012         	movff	i1Obtener_Distancia@Duracion+1,?i1___lwdiv+1
 18415  005B10  0E00               	movlw	0
 18416  005B12  6E14               	movwf	?i1___lwdiv+3,c
 18417  005B14  0E3A               	movlw	58
 18418  005B16  6E13               	movwf	?i1___lwdiv+2,c
 18419  005B18  ECE9  F02E         	call	i1___lwdiv	;wreg free
 18420  005B1C  C011  F01D         	movff	?i1___lwdiv,i1Obtener_Distancia@Distancia
 18421  005B20  C012  F01E         	movff	?i1___lwdiv+1,i1Obtener_Distancia@Distancia+1
 18422                           
 18423                           ;main.c: 236: }
 18424  005B24  D008               	goto	i1l219
 18425  005B26                     i1l8676:
 18426                           
 18427                           ;main.c: 237: else if(Duracion<116)
 18428  005B26  0E74               	movlw	116
 18429  005B28  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 18430  005B2A  0E00               	movlw	0
 18431  005B2C  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 18432                           
 18433                           ;main.c: 241: else
 18434                           ;main.c: 242: {
 18435                           ;main.c: 243: Distancia=0;
 18436                           
 18437                           ;main.c: 240: }
 18438                           
 18439                           ;main.c: 238: {
 18440                           ;main.c: 239: Distancia=0;
 18441  005B2E  0E00               	movlw	0
 18442  005B30  6E1E               	movwf	i1Obtener_Distancia@Distancia+1,c
 18443  005B32  0E00               	movlw	0
 18444  005B34  6E1D               	movwf	i1Obtener_Distancia@Distancia,c
 18445  005B36                     i1l219:
 18446                           
 18447                           ;main.c: 244: }
 18448                           ;main.c: 245: Duracion=0;
 18449  005B36  0E00               	movlw	0
 18450  005B38  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 18451  005B3A  0E00               	movlw	0
 18452  005B3C  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 18453                           
 18454                           ;main.c: 246: TMR1=0;
 18455  005B3E  0E00               	movlw	0
 18456  005B40  6ECF               	movwf	4047,c	;volatile
 18457  005B42  0E00               	movlw	0
 18458  005B44  6ECE               	movwf	4046,c	;volatile
 18459                           
 18460                           ;main.c: 248: return Distancia;
 18461  005B46  C01D  F019         	movff	i1Obtener_Distancia@Distancia,?i1_Obtener_Distancia
 18462  005B4A  C01E  F01A         	movff	i1Obtener_Distancia@Distancia+1,?i1_Obtener_Distancia+1
 18463  005B4E  0012               	return	
 18464  005B50                     __end_ofi1_Obtener_Distancia:
 18465                           	opt stack 0
 18466                           pclatu	equ	0xFFB
 18467                           pclath	equ	0xFFA
 18468                           tblptru	equ	0xFF8
 18469                           tblptrh	equ	0xFF7
 18470                           tblptrl	equ	0xFF6
 18471                           tablat	equ	0xFF5
 18472                           prodh	equ	0xFF4
 18473                           prodl	equ	0xFF3
 18474                           intcon	equ	0xFF2
 18475                           intcon2	equ	0xFF1
 18476                           postinc0	equ	0xFEE
 18477                           fsr0h	equ	0xFEA
 18478                           fsr0l	equ	0xFE9
 18479                           wreg	equ	0xFE8
 18480                           fsr1h	equ	0xFE2
 18481                           fsr1l	equ	0xFE1
 18482                           bsr	equ	0xFE0
 18483                           indf2	equ	0xFDF
 18484                           postinc2	equ	0xFDE
 18485                           postdec2	equ	0xFDD
 18486                           fsr2h	equ	0xFDA
 18487                           fsr2l	equ	0xFD9
 18488                           status	equ	0xFD8
 18489                           
 18490 ;; *************** function i1___lwdiv *****************
 18491 ;; Defined at:
 18492 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
 18493 ;; Parameters:    Size  Location     Type
 18494 ;;  __lwdiv         2   16[COMRAM] unsigned int 
 18495 ;;  __lwdiv         2   18[COMRAM] unsigned int 
 18496 ;; Auto vars:     Size  Location     Type
 18497 ;;  __lwdiv         2   22[COMRAM] unsigned int 
 18498 ;;  __lwdiv         1   21[COMRAM] unsigned char 
 18499 ;; Return value:  Size  Location     Type
 18500 ;;                  2   16[COMRAM] unsigned int 
 18501 ;; Registers used:
 18502 ;;		wreg, status,2, status,0
 18503 ;; Tracked objects:
 18504 ;;		On entry : 0/0
 18505 ;;		On exit  : 0/0
 18506 ;;		Unchanged: 0/0
 18507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18508 ;;      Params:         4       0       0       0       0       0       0       0       0
 18509 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18510 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18511 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18512 ;;Total ram usage:        8 bytes
 18513 ;; Hardware stack levels used:    1
 18514 ;; Hardware stack levels required when called:    3
 18515 ;; This function calls:
 18516 ;;		Nothing
 18517 ;; This function is called by:
 18518 ;;		i1_Obtener_Distancia
 18519 ;; This function uses a non-reentrant model
 18520 ;;
 18521                           
 18522                           	psect	text71
 18523  005DD2                     __ptext71:
 18524                           	opt stack 0
 18525  005DD2                     i1___lwdiv:
 18526                           	opt stack 18
 18527                           
 18528                           ;incstack = 0
 18529                           ;incstack = 0
 18530  005DD2  0E00               	movlw	0
 18531  005DD4  6E18               	movwf	i1___lwdiv@quotient+1,c
 18532  005DD6  0E00               	movlw	0
 18533  005DD8  6E17               	movwf	i1___lwdiv@quotient,c
 18534  005DDA  5014               	movf	i1___lwdiv@divisor+1,w,c
 18535  005DDC  1013               	iorwf	i1___lwdiv@divisor,w,c
 18536  005DDE  B4D8               	btfsc	status,2,c
 18537  005DE0  D01E               	goto	i1l912
 18538  005DE2  6E15               	movwf	??i1___lwdiv& (0+255),c
 18539  005DE4  0E01               	movlw	1
 18540  005DE6  6E16               	movwf	i1___lwdiv@counter,c
 18541  005DE8  5015               	movf	??i1___lwdiv& (0+255),w,c
 18542  005DEA  D004               	goto	i1l9644
 18543  005DEC                     i1l9642:
 18544  005DEC  90D8               	bcf	status,0,c
 18545  005DEE  3613               	rlcf	i1___lwdiv@divisor,f,c
 18546  005DF0  3614               	rlcf	i1___lwdiv@divisor+1,f,c
 18547  005DF2  2A16               	incf	i1___lwdiv@counter,f,c
 18548  005DF4                     i1l9644:
 18549  005DF4  AE14               	btfss	i1___lwdiv@divisor+1,7,c
 18550  005DF6  D7FA               	goto	i1l9642
 18551  005DF8                     i1l9646:
 18552  005DF8  90D8               	bcf	status,0,c
 18553  005DFA  3617               	rlcf	i1___lwdiv@quotient,f,c
 18554  005DFC  3618               	rlcf	i1___lwdiv@quotient+1,f,c
 18555  005DFE  5013               	movf	i1___lwdiv@divisor,w,c
 18556  005E00  5C11               	subwf	i1___lwdiv@dividend,w,c
 18557  005E02  5014               	movf	i1___lwdiv@divisor+1,w,c
 18558  005E04  5812               	subwfb	i1___lwdiv@dividend+1,w,c
 18559  005E06  A0D8               	btfss	status,0,c
 18560  005E08  D005               	goto	i1l9654
 18561  005E0A  5013               	movf	i1___lwdiv@divisor,w,c
 18562  005E0C  5E11               	subwf	i1___lwdiv@dividend,f,c
 18563  005E0E  5014               	movf	i1___lwdiv@divisor+1,w,c
 18564  005E10  5A12               	subwfb	i1___lwdiv@dividend+1,f,c
 18565  005E12  8017               	bsf	i1___lwdiv@quotient,0,c
 18566  005E14                     i1l9654:
 18567  005E14  90D8               	bcf	status,0,c
 18568  005E16  3214               	rrcf	i1___lwdiv@divisor+1,f,c
 18569  005E18  3213               	rrcf	i1___lwdiv@divisor,f,c
 18570  005E1A  2E16               	decfsz	i1___lwdiv@counter,f,c
 18571  005E1C  D7ED               	goto	i1l9646
 18572  005E1E                     i1l912:
 18573  005E1E  C017  F011         	movff	i1___lwdiv@quotient,?i1___lwdiv
 18574  005E22  C018  F012         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
 18575  005E26  0012               	return	
 18576  005E28                     __end_ofi1___lwdiv:
 18577                           	opt stack 0
 18578                           pclatu	equ	0xFFB
 18579                           pclath	equ	0xFFA
 18580                           tblptru	equ	0xFF8
 18581                           tblptrh	equ	0xFF7
 18582                           tblptrl	equ	0xFF6
 18583                           tablat	equ	0xFF5
 18584                           prodh	equ	0xFF4
 18585                           prodl	equ	0xFF3
 18586                           intcon	equ	0xFF2
 18587                           intcon2	equ	0xFF1
 18588                           postinc0	equ	0xFEE
 18589                           fsr0h	equ	0xFEA
 18590                           fsr0l	equ	0xFE9
 18591                           wreg	equ	0xFE8
 18592                           fsr1h	equ	0xFE2
 18593                           fsr1l	equ	0xFE1
 18594                           bsr	equ	0xFE0
 18595                           indf2	equ	0xFDF
 18596                           postinc2	equ	0xFDE
 18597                           postdec2	equ	0xFDD
 18598                           fsr2h	equ	0xFDA
 18599                           fsr2l	equ	0xFD9
 18600                           status	equ	0xFD8
 18601                           
 18602 ;; *************** function i1_lcd_putc *****************
 18603 ;; Defined at:
 18604 ;;		line 135 in file "lcd.h"
 18605 ;; Parameters:    Size  Location     Type
 18606 ;;  lcd_putc        2   20[COMRAM] PTR unsigned char 
 18607 ;;		 -> LCD_Buffer(32), 
 18608 ;; Auto vars:     Size  Location     Type
 18609 ;;  lcd_putc        2   22[COMRAM] int 
 18610 ;; Return value:  Size  Location     Type
 18611 ;;		None               void
 18612 ;; Registers used:
 18613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18614 ;; Tracked objects:
 18615 ;;		On entry : 0/0
 18616 ;;		On exit  : 0/0
 18617 ;;		Unchanged: 0/0
 18618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18619 ;;      Params:         2       0       0       0       0       0       0       0       0
 18620 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18621 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18622 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18623 ;;Total ram usage:        4 bytes
 18624 ;; Hardware stack levels used:    1
 18625 ;; Hardware stack levels required when called:    5
 18626 ;; This function calls:
 18627 ;;		i1_lcd_write_char
 18628 ;; This function is called by:
 18629 ;;		i1_mainLoop
 18630 ;; This function uses a non-reentrant model
 18631 ;;
 18632                           
 18633                           	psect	text72
 18634  006272                     __ptext72:
 18635                           	opt stack 0
 18636  006272                     i1_lcd_putc:
 18637                           	opt stack 17
 18638                           
 18639                           ;lcd.h: 136: int i;
 18640                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
 18641                           
 18642                           ;incstack = 0
 18643                           ;incstack = 0
 18644  006272  0E00               	movlw	0
 18645  006274  6E18               	movwf	i1lcd_putc@i+1,c
 18646  006276  0E00               	movlw	0
 18647  006278  6E17               	movwf	i1lcd_putc@i,c
 18648  00627A  D00C               	goto	i1l8654
 18649  00627C                     i1l8650:
 18650                           
 18651                           ;lcd.h: 138: lcd_write_char(a[i]);
 18652  00627C  5017               	movf	i1lcd_putc@i,w,c
 18653  00627E  2415               	addwf	i1lcd_putc@a,w,c
 18654  006280  6ED9               	movwf	fsr2l,c
 18655  006282  5018               	movf	i1lcd_putc@i+1,w,c
 18656  006284  2016               	addwfc	i1lcd_putc@a+1,w,c
 18657  006286  6EDA               	movwf	fsr2h,c
 18658  006288  50DF               	movf	indf2,w,c
 18659  00628A  6E12               	movwf	?i1_lcd_write_char,c
 18660  00628C  EC01  F031         	call	i1_lcd_write_char	;wreg free
 18661  006290  4A17               	infsnz	i1lcd_putc@i,f,c
 18662  006292  2A18               	incf	i1lcd_putc@i+1,f,c
 18663  006294                     i1l8654:
 18664  006294  5017               	movf	i1lcd_putc@i,w,c
 18665  006296  2415               	addwf	i1lcd_putc@a,w,c
 18666  006298  6ED9               	movwf	fsr2l,c
 18667  00629A  5018               	movf	i1lcd_putc@i+1,w,c
 18668  00629C  2016               	addwfc	i1lcd_putc@a+1,w,c
 18669  00629E  6EDA               	movwf	fsr2h,c
 18670  0062A0  50DF               	movf	indf2,w,c
 18671  0062A2  B4D8               	btfsc	status,2,c
 18672  0062A4  0012               	return	
 18673  0062A6  D7EA               	goto	i1l8650
 18674  0062A8                     __end_ofi1_lcd_putc:
 18675                           	opt stack 0
 18676                           pclatu	equ	0xFFB
 18677                           pclath	equ	0xFFA
 18678                           tblptru	equ	0xFF8
 18679                           tblptrh	equ	0xFF7
 18680                           tblptrl	equ	0xFF6
 18681                           tablat	equ	0xFF5
 18682                           prodh	equ	0xFF4
 18683                           prodl	equ	0xFF3
 18684                           intcon	equ	0xFF2
 18685                           intcon2	equ	0xFF1
 18686                           postinc0	equ	0xFEE
 18687                           fsr0h	equ	0xFEA
 18688                           fsr0l	equ	0xFE9
 18689                           wreg	equ	0xFE8
 18690                           fsr1h	equ	0xFE2
 18691                           fsr1l	equ	0xFE1
 18692                           bsr	equ	0xFE0
 18693                           indf2	equ	0xFDF
 18694                           postinc2	equ	0xFDE
 18695                           postdec2	equ	0xFDD
 18696                           fsr2h	equ	0xFDA
 18697                           fsr2l	equ	0xFD9
 18698                           status	equ	0xFD8
 18699                           
 18700 ;; *************** function i1_lcd_write_char *****************
 18701 ;; Defined at:
 18702 ;;		line 117 in file "lcd.h"
 18703 ;; Parameters:    Size  Location     Type
 18704 ;;  lcd_write_ch    1   17[COMRAM] unsigned char 
 18705 ;; Auto vars:     Size  Location     Type
 18706 ;;  lcd_write_ch    1   19[COMRAM] unsigned char 
 18707 ;;  lcd_write_ch    1   18[COMRAM] unsigned char 
 18708 ;; Return value:  Size  Location     Type
 18709 ;;		None               void
 18710 ;; Registers used:
 18711 ;;		wreg, status,2, status,0, cstack
 18712 ;; Tracked objects:
 18713 ;;		On entry : 0/0
 18714 ;;		On exit  : 0/0
 18715 ;;		Unchanged: 0/0
 18716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18717 ;;      Params:         1       0       0       0       0       0       0       0       0
 18718 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18719 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18720 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18721 ;;Total ram usage:        3 bytes
 18722 ;; Hardware stack levels used:    1
 18723 ;; Hardware stack levels required when called:    4
 18724 ;; This function calls:
 18725 ;;		i1_Lcd_Port
 18726 ;; This function is called by:
 18727 ;;		i1_lcd_putc
 18728 ;; This function uses a non-reentrant model
 18729 ;;
 18730                           
 18731                           	psect	text73
 18732  006202                     __ptext73:
 18733                           	opt stack 0
 18734  006202                     i1_lcd_write_char:
 18735                           	opt stack 17
 18736                           
 18737                           ;lcd.h: 118: char temp,y;
 18738                           ;lcd.h: 119: temp = a&0x0F;
 18739                           
 18740                           ;incstack = 0
 18741                           ;incstack = 0
 18742  006202  5012               	movf	i1lcd_write_char@a,w,c
 18743  006204  0B0F               	andlw	15
 18744  006206  6E13               	movwf	i1lcd_write_char@temp,c
 18745                           
 18746                           ;lcd.h: 120: y = a&0xF0;
 18747  006208  5012               	movf	i1lcd_write_char@a,w,c
 18748  00620A  0BF0               	andlw	240
 18749  00620C  6E14               	movwf	i1lcd_write_char@y,c
 18750                           
 18751                           ;lcd.h: 121: RD2 = 1;
 18752  00620E  8483               	bsf	3971,2,c	;volatile
 18753                           
 18754                           ;lcd.h: 122: Lcd_Port(y>>4);
 18755  006210  3814               	swapf	i1lcd_write_char@y,w,c
 18756  006212  0B0F               	andlw	15
 18757  006214  6E11               	movwf	?i1_Lcd_Port,c
 18758  006216  EC54  F031         	call	i1_Lcd_Port	;wreg free
 18759                           
 18760                           ;lcd.h: 123: RD3 = 1;
 18761  00621A  8683               	bsf	3971,3,c	;volatile
 18762                           
 18763                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
 18764  00621C  0E1A               	movlw	26
 18765  00621E                     i1u1118_27:
 18766  00621E  2EE8               	decfsz	wreg,f,c
 18767  006220  D7FE               	goto	i1u1118_27
 18768  006222  D000               	nop2		;nop
 18769                           
 18770                           ;lcd.h: 125: RD3 = 0;
 18771  006224  9683               	bcf	3971,3,c	;volatile
 18772                           
 18773                           ;lcd.h: 126: Lcd_Port(temp);
 18774  006226  C013  F011         	movff	i1lcd_write_char@temp,?i1_Lcd_Port
 18775  00622A  EC54  F031         	call	i1_Lcd_Port	;wreg free
 18776                           
 18777                           ;lcd.h: 127: RD3 = 1;
 18778  00622E  8683               	bsf	3971,3,c	;volatile
 18779                           
 18780                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
 18781  006230  0E1A               	movlw	26
 18782  006232                     i1u1119_27:
 18783  006232  2EE8               	decfsz	wreg,f,c
 18784  006234  D7FE               	goto	i1u1119_27
 18785  006236  D000               	nop2		;nop
 18786                           
 18787                           ;lcd.h: 129: RD3 = 0;
 18788  006238  9683               	bcf	3971,3,c	;volatile
 18789  00623A  0012               	return	
 18790  00623C                     __end_ofi1_lcd_write_char:
 18791                           	opt stack 0
 18792                           pclatu	equ	0xFFB
 18793                           pclath	equ	0xFFA
 18794                           tblptru	equ	0xFF8
 18795                           tblptrh	equ	0xFF7
 18796                           tblptrl	equ	0xFF6
 18797                           tablat	equ	0xFF5
 18798                           prodh	equ	0xFF4
 18799                           prodl	equ	0xFF3
 18800                           intcon	equ	0xFF2
 18801                           intcon2	equ	0xFF1
 18802                           postinc0	equ	0xFEE
 18803                           fsr0h	equ	0xFEA
 18804                           fsr0l	equ	0xFE9
 18805                           wreg	equ	0xFE8
 18806                           fsr1h	equ	0xFE2
 18807                           fsr1l	equ	0xFE1
 18808                           bsr	equ	0xFE0
 18809                           indf2	equ	0xFDF
 18810                           postinc2	equ	0xFDE
 18811                           postdec2	equ	0xFDD
 18812                           fsr2h	equ	0xFDA
 18813                           fsr2l	equ	0xFD9
 18814                           status	equ	0xFD8
 18815                           
 18816 ;; *************** function i1_lcd_gotoxy *****************
 18817 ;; Defined at:
 18818 ;;		line 72 in file "lcd.h"
 18819 ;; Parameters:    Size  Location     Type
 18820 ;;  lcd_gotoxy      1   19[COMRAM] unsigned char 
 18821 ;;  lcd_gotoxy      1   20[COMRAM] unsigned char 
 18822 ;; Auto vars:     Size  Location     Type
 18823 ;;  lcd_gotoxy      1   23[COMRAM] unsigned char 
 18824 ;;  lcd_gotoxy      1   22[COMRAM] unsigned char 
 18825 ;;  lcd_gotoxy      1   21[COMRAM] unsigned char 
 18826 ;; Return value:  Size  Location     Type
 18827 ;;		None               void
 18828 ;; Registers used:
 18829 ;;		wreg, status,2, status,0, cstack
 18830 ;; Tracked objects:
 18831 ;;		On entry : 0/0
 18832 ;;		On exit  : 0/0
 18833 ;;		Unchanged: 0/0
 18834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18835 ;;      Params:         2       0       0       0       0       0       0       0       0
 18836 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18837 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18838 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18839 ;;Total ram usage:        5 bytes
 18840 ;; Hardware stack levels used:    1
 18841 ;; Hardware stack levels required when called:    5
 18842 ;; This function calls:
 18843 ;;		i1_Lcd_Cmd
 18844 ;; This function is called by:
 18845 ;;		i1_mainLoop
 18846 ;; This function uses a non-reentrant model
 18847 ;;
 18848                           
 18849                           	psect	text74
 18850  005E28                     __ptext74:
 18851                           	opt stack 0
 18852  005E28                     i1_lcd_gotoxy:
 18853                           	opt stack 17
 18854                           
 18855                           ;lcd.h: 73: char temp,z,y;
 18856                           ;lcd.h: 74: if(a == 1)
 18857                           
 18858                           ;incstack = 0
 18859                           ;incstack = 0
 18860  005E28  0414               	decf	i1lcd_gotoxy@a,w,c
 18861  005E2A  A4D8               	btfss	status,2,c
 18862  005E2C  D012               	goto	i1l8622
 18863                           
 18864                           ;lcd.h: 75: {
 18865                           ;lcd.h: 76: temp = 0x80 + b - 1;
 18866  005E2E  5015               	movf	i1lcd_gotoxy@b,w,c
 18867  005E30  0F7F               	addlw	127
 18868  005E32  6E18               	movwf	i1lcd_gotoxy@temp,c
 18869                           
 18870                           ;lcd.h: 77: z = temp>>4;
 18871  005E34  3818               	swapf	i1lcd_gotoxy@temp,w,c
 18872  005E36  0B0F               	andlw	15
 18873  005E38  6E16               	movwf	i1lcd_gotoxy@z,c
 18874                           
 18875                           ;lcd.h: 78: y = temp & 0x0F;
 18876  005E3A  5018               	movf	i1lcd_gotoxy@temp,w,c
 18877  005E3C  0B0F               	andlw	15
 18878  005E3E  6E17               	movwf	i1lcd_gotoxy@y,c
 18879                           
 18880                           ;lcd.h: 79: Lcd_Cmd(z);
 18881  005E40  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 18882  005E44  ECB0  F031         	call	i1_Lcd_Cmd	;wreg free
 18883                           
 18884                           ;lcd.h: 80: Lcd_Cmd(y);
 18885  005E48  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 18886  005E4C  ECB0  F031         	call	i1_Lcd_Cmd	;wreg free
 18887                           
 18888                           ;lcd.h: 81: }
 18889  005E50  D015               	goto	i1l123
 18890  005E52                     i1l8622:
 18891                           
 18892                           ;lcd.h: 82: else if(a == 2)
 18893  005E52  5014               	movf	i1lcd_gotoxy@a,w,c
 18894  005E54  0A02               	xorlw	2
 18895  005E56  A4D8               	btfss	status,2,c
 18896  005E58  D011               	goto	i1l123
 18897                           
 18898                           ;lcd.h: 83: {
 18899                           ;lcd.h: 84: temp = 0xC0 + b - 1;
 18900  005E5A  5015               	movf	i1lcd_gotoxy@b,w,c
 18901  005E5C  0FBF               	addlw	191
 18902  005E5E  6E18               	movwf	i1lcd_gotoxy@temp,c
 18903                           
 18904                           ;lcd.h: 85: z = temp>>4;
 18905  005E60  3818               	swapf	i1lcd_gotoxy@temp,w,c
 18906  005E62  0B0F               	andlw	15
 18907  005E64  6E16               	movwf	i1lcd_gotoxy@z,c
 18908                           
 18909                           ;lcd.h: 86: y = temp & 0x0F;
 18910  005E66  5018               	movf	i1lcd_gotoxy@temp,w,c
 18911  005E68  0B0F               	andlw	15
 18912  005E6A  6E17               	movwf	i1lcd_gotoxy@y,c
 18913                           
 18914                           ;lcd.h: 87: Lcd_Cmd(z);
 18915  005E6C  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 18916  005E70  ECB0  F031         	call	i1_Lcd_Cmd	;wreg free
 18917                           
 18918                           ;lcd.h: 88: Lcd_Cmd(y);
 18919  005E74  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 18920  005E78  ECB0  F031         	call	i1_Lcd_Cmd	;wreg free
 18921  005E7C                     i1l123:
 18922  005E7C  0012               	return	
 18923  005E7E                     __end_ofi1_lcd_gotoxy:
 18924                           	opt stack 0
 18925                           pclatu	equ	0xFFB
 18926                           pclath	equ	0xFFA
 18927                           tblptru	equ	0xFF8
 18928                           tblptrh	equ	0xFF7
 18929                           tblptrl	equ	0xFF6
 18930                           tablat	equ	0xFF5
 18931                           prodh	equ	0xFF4
 18932                           prodl	equ	0xFF3
 18933                           intcon	equ	0xFF2
 18934                           intcon2	equ	0xFF1
 18935                           postinc0	equ	0xFEE
 18936                           fsr0h	equ	0xFEA
 18937                           fsr0l	equ	0xFE9
 18938                           wreg	equ	0xFE8
 18939                           fsr1h	equ	0xFE2
 18940                           fsr1l	equ	0xFE1
 18941                           bsr	equ	0xFE0
 18942                           indf2	equ	0xFDF
 18943                           postinc2	equ	0xFDE
 18944                           postdec2	equ	0xFDD
 18945                           fsr2h	equ	0xFDA
 18946                           fsr2l	equ	0xFD9
 18947                           status	equ	0xFD8
 18948                           
 18949 ;; *************** function i1_Lcd_Cmd *****************
 18950 ;; Defined at:
 18951 ;;		line 53 in file "lcd.h"
 18952 ;; Parameters:    Size  Location     Type
 18953 ;;  Lcd_Cmd         1   17[COMRAM] unsigned char 
 18954 ;; Auto vars:     Size  Location     Type
 18955 ;;		None
 18956 ;; Return value:  Size  Location     Type
 18957 ;;		None               void
 18958 ;; Registers used:
 18959 ;;		wreg, cstack
 18960 ;; Tracked objects:
 18961 ;;		On entry : 0/0
 18962 ;;		On exit  : 0/0
 18963 ;;		Unchanged: 0/0
 18964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18965 ;;      Params:         1       0       0       0       0       0       0       0       0
 18966 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18967 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18968 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18969 ;;Total ram usage:        2 bytes
 18970 ;; Hardware stack levels used:    1
 18971 ;; Hardware stack levels required when called:    4
 18972 ;; This function calls:
 18973 ;;		i1_Lcd_Port
 18974 ;; This function is called by:
 18975 ;;		i1_lcd_gotoxy
 18976 ;; This function uses a non-reentrant model
 18977 ;;
 18978                           
 18979                           	psect	text75
 18980  006360                     __ptext75:
 18981                           	opt stack 0
 18982  006360                     i1_Lcd_Cmd:
 18983                           	opt stack 17
 18984                           
 18985                           ;lcd.h: 54: RD2 = 0;
 18986                           
 18987                           ;incstack = 0
 18988                           ;incstack = 0
 18989  006360  9483               	bcf	3971,2,c	;volatile
 18990                           
 18991                           ;lcd.h: 55: Lcd_Port(a);
 18992  006362  C012  F011         	movff	i1Lcd_Cmd@a,?i1_Lcd_Port
 18993  006366  EC54  F031         	call	i1_Lcd_Port	;wreg free
 18994                           
 18995                           ;lcd.h: 56: RD3 = 1;
 18996  00636A  8683               	bsf	3971,3,c	;volatile
 18997                           
 18998                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 18999  00636C  0E0B               	movlw	11
 19000  00636E  6E13               	movwf	??i1_Lcd_Cmd& (0+255),c
 19001  006370  0E62               	movlw	98
 19002  006372                     i1u1120_27:
 19003  006372  2EE8               	decfsz	wreg,f,c
 19004  006374  D7FE               	goto	i1u1120_27
 19005  006376  2E13               	decfsz	??i1_Lcd_Cmd& (0+255),f,c
 19006  006378  D7FC               	goto	i1u1120_27
 19007  00637A  F000               	nop	
 19008                           
 19009                           ;lcd.h: 58: RD3 = 0;
 19010  00637C  9683               	bcf	3971,3,c	;volatile
 19011  00637E  0012               	return	
 19012  006380                     __end_ofi1_Lcd_Cmd:
 19013                           	opt stack 0
 19014                           pclatu	equ	0xFFB
 19015                           pclath	equ	0xFFA
 19016                           tblptru	equ	0xFF8
 19017                           tblptrh	equ	0xFF7
 19018                           tblptrl	equ	0xFF6
 19019                           tablat	equ	0xFF5
 19020                           prodh	equ	0xFF4
 19021                           prodl	equ	0xFF3
 19022                           intcon	equ	0xFF2
 19023                           intcon2	equ	0xFF1
 19024                           postinc0	equ	0xFEE
 19025                           fsr0h	equ	0xFEA
 19026                           fsr0l	equ	0xFE9
 19027                           wreg	equ	0xFE8
 19028                           fsr1h	equ	0xFE2
 19029                           fsr1l	equ	0xFE1
 19030                           bsr	equ	0xFE0
 19031                           indf2	equ	0xFDF
 19032                           postinc2	equ	0xFDE
 19033                           postdec2	equ	0xFDD
 19034                           fsr2h	equ	0xFDA
 19035                           fsr2l	equ	0xFD9
 19036                           status	equ	0xFD8
 19037                           
 19038 ;; *************** function i1_Lcd_Port *****************
 19039 ;; Defined at:
 19040 ;;		line 28 in file "lcd.h"
 19041 ;; Parameters:    Size  Location     Type
 19042 ;;  Lcd_Port        1   16[COMRAM] unsigned char 
 19043 ;; Auto vars:     Size  Location     Type
 19044 ;;		None
 19045 ;; Return value:  Size  Location     Type
 19046 ;;		None               void
 19047 ;; Registers used:
 19048 ;;		None
 19049 ;; Tracked objects:
 19050 ;;		On entry : 0/0
 19051 ;;		On exit  : 0/0
 19052 ;;		Unchanged: 0/0
 19053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19054 ;;      Params:         1       0       0       0       0       0       0       0       0
 19055 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19056 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19057 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19058 ;;Total ram usage:        1 bytes
 19059 ;; Hardware stack levels used:    1
 19060 ;; Hardware stack levels required when called:    3
 19061 ;; This function calls:
 19062 ;;		Nothing
 19063 ;; This function is called by:
 19064 ;;		i1_Lcd_Cmd
 19065 ;;		i1_lcd_write_char
 19066 ;; This function uses a non-reentrant model
 19067 ;;
 19068                           
 19069                           	psect	text76
 19070  0062A8                     __ptext76:
 19071                           	opt stack 0
 19072  0062A8                     i1_Lcd_Port:
 19073                           	opt stack 17
 19074                           
 19075                           ;lcd.h: 29: if(a & 1)
 19076                           
 19077                           ;incstack = 0
 19078                           ;incstack = 0
 19079  0062A8  A011               	btfss	i1Lcd_Port@a,0,c
 19080  0062AA  D002               	goto	i1l103
 19081                           
 19082                           ;lcd.h: 30: RD4 = 1;
 19083  0062AC  8883               	bsf	3971,4,c	;volatile
 19084  0062AE  D001               	goto	i1l104
 19085  0062B0                     i1l103:
 19086                           
 19087                           ;lcd.h: 31: else
 19088                           ;lcd.h: 32: RD4 = 0;
 19089  0062B0  9883               	bcf	3971,4,c	;volatile
 19090  0062B2                     i1l104:
 19091                           
 19092                           ;lcd.h: 34: if(a & 2)
 19093  0062B2  A211               	btfss	i1Lcd_Port@a,1,c
 19094  0062B4  D002               	goto	i1l105
 19095                           
 19096                           ;lcd.h: 35: RD5 = 1;
 19097  0062B6  8A83               	bsf	3971,5,c	;volatile
 19098  0062B8  D001               	goto	i1l106
 19099  0062BA                     i1l105:
 19100                           
 19101                           ;lcd.h: 36: else
 19102                           ;lcd.h: 37: RD5 = 0;
 19103  0062BA  9A83               	bcf	3971,5,c	;volatile
 19104  0062BC                     i1l106:
 19105                           
 19106                           ;lcd.h: 39: if(a & 4)
 19107  0062BC  A411               	btfss	i1Lcd_Port@a,2,c
 19108  0062BE  D002               	goto	i1l107
 19109                           
 19110                           ;lcd.h: 40: RD6 = 1;
 19111  0062C0  8C83               	bsf	3971,6,c	;volatile
 19112  0062C2  D001               	goto	i1l108
 19113  0062C4                     i1l107:
 19114                           
 19115                           ;lcd.h: 41: else
 19116                           ;lcd.h: 42: RD6 = 0;
 19117  0062C4  9C83               	bcf	3971,6,c	;volatile
 19118  0062C6                     i1l108:
 19119                           
 19120                           ;lcd.h: 44: if(a & 8)
 19121  0062C6  A611               	btfss	i1Lcd_Port@a,3,c
 19122  0062C8  D002               	goto	i1l109
 19123                           
 19124                           ;lcd.h: 45: RD7 = 1;
 19125  0062CA  8E83               	bsf	3971,7,c	;volatile
 19126  0062CC  D001               	goto	i1l111
 19127  0062CE                     i1l109:
 19128                           
 19129                           ;lcd.h: 46: else
 19130                           ;lcd.h: 47: RD7 = 0;
 19131  0062CE  9E83               	bcf	3971,7,c	;volatile
 19132  0062D0                     i1l111:
 19133  0062D0  0012               	return	
 19134  0062D2                     __end_ofi1_Lcd_Port:
 19135                           	opt stack 0
 19136                           pclatu	equ	0xFFB
 19137                           pclath	equ	0xFFA
 19138                           tblptru	equ	0xFF8
 19139                           tblptrh	equ	0xFF7
 19140                           tblptrl	equ	0xFF6
 19141                           tablat	equ	0xFF5
 19142                           prodh	equ	0xFF4
 19143                           prodl	equ	0xFF3
 19144                           intcon	equ	0xFF2
 19145                           intcon2	equ	0xFF1
 19146                           postinc0	equ	0xFEE
 19147                           fsr0h	equ	0xFEA
 19148                           fsr0l	equ	0xFE9
 19149                           wreg	equ	0xFE8
 19150                           fsr1h	equ	0xFE2
 19151                           fsr1l	equ	0xFE1
 19152                           bsr	equ	0xFE0
 19153                           indf2	equ	0xFDF
 19154                           postinc2	equ	0xFDE
 19155                           postdec2	equ	0xFDD
 19156                           fsr2h	equ	0xFDA
 19157                           fsr2l	equ	0xFD9
 19158                           status	equ	0xFD8
 19159                           
 19160 ;; *************** function _interrupcaoHIGH *****************
 19161 ;; Defined at:
 19162 ;;		line 184 in file "main.c"
 19163 ;; Parameters:    Size  Location     Type
 19164 ;;		None
 19165 ;; Auto vars:     Size  Location     Type
 19166 ;;  esp_server_d    1   15[COMRAM] unsigned char 
 19167 ;; Return value:  Size  Location     Type
 19168 ;;		None               void
 19169 ;; Registers used:
 19170 ;;		wreg, status,2, status,0, cstack
 19171 ;; Tracked objects:
 19172 ;;		On entry : 0/0
 19173 ;;		On exit  : 0/0
 19174 ;;		Unchanged: 0/0
 19175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19176 ;;      Params:         0       0       0       0       0       0       0       0       0
 19177 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19178 ;;      Temps:         14       0       0       0       0       0       0       0       0
 19179 ;;      Totals:        15       0       0       0       0       0       0       0       0
 19180 ;;Total ram usage:       15 bytes
 19181 ;; Hardware stack levels used:    1
 19182 ;; Hardware stack levels required when called:    2
 19183 ;; This function calls:
 19184 ;;		_control_LED
 19185 ;; This function is called by:
 19186 ;;		Interrupt level 2
 19187 ;; This function uses a non-reentrant model
 19188 ;;
 19189                           
 19190                           	psect	intcode
 19191  000008                     __pintcode:
 19192                           	opt stack 0
 19193  000008                     _interrupcaoHIGH:
 19194                           	opt stack 15
 19195                           
 19196                           ;incstack = 0
 19197  000008  CFFA F002          	movff	pclath,??_interrupcaoHIGH
 19198  00000C  CFFB F003          	movff	pclatu,??_interrupcaoHIGH+1
 19199  000010  CFE9 F004          	movff	fsr0l,??_interrupcaoHIGH+2
 19200  000014  ED29  F02D         	call	int_func,f	;refresh shadow registers
 19201                           pclatu	equ	0xFFB
 19202                           pclath	equ	0xFFA
 19203                           tblptru	equ	0xFF8
 19204                           tblptrh	equ	0xFF7
 19205                           tblptrl	equ	0xFF6
 19206                           tablat	equ	0xFF5
 19207                           prodh	equ	0xFF4
 19208                           prodl	equ	0xFF3
 19209                           intcon	equ	0xFF2
 19210                           intcon2	equ	0xFF1
 19211                           postinc0	equ	0xFEE
 19212                           fsr0h	equ	0xFEA
 19213                           fsr0l	equ	0xFE9
 19214                           wreg	equ	0xFE8
 19215                           fsr1h	equ	0xFE2
 19216                           fsr1l	equ	0xFE1
 19217                           bsr	equ	0xFE0
 19218                           indf2	equ	0xFDF
 19219                           postinc2	equ	0xFDE
 19220                           postdec2	equ	0xFDD
 19221                           fsr2h	equ	0xFDA
 19222                           fsr2l	equ	0xFD9
 19223                           status	equ	0xFD8
 19224                           
 19225                           	psect	intcode_body
 19226  005A52                     __pintcode_body:
 19227                           	opt stack 15
 19228  005A52                     int_func:
 19229                           	opt stack 15
 19230  005A52  0006               	pop		; remove dummy address from shadow register refresh
 19231  005A54  CFEA F005          	movff	fsr0h,??_interrupcaoHIGH+3
 19232  005A58  CFE1 F006          	movff	fsr1l,??_interrupcaoHIGH+4
 19233  005A5C  CFE2 F007          	movff	fsr1h,??_interrupcaoHIGH+5
 19234  005A60  CFD9 F008          	movff	fsr2l,??_interrupcaoHIGH+6
 19235  005A64  CFDA F009          	movff	fsr2h,??_interrupcaoHIGH+7
 19236  005A68  CFF3 F00A          	movff	prodl,??_interrupcaoHIGH+8
 19237  005A6C  CFF4 F00B          	movff	prodh,??_interrupcaoHIGH+9
 19238  005A70  CFF6 F00C          	movff	tblptrl,??_interrupcaoHIGH+10
 19239  005A74  CFF7 F00D          	movff	tblptrh,??_interrupcaoHIGH+11
 19240  005A78  CFF8 F00E          	movff	tblptru,??_interrupcaoHIGH+12
 19241  005A7C  CFF5 F00F          	movff	tablat,??_interrupcaoHIGH+13
 19242  005A80                     
 19243                           ;main.c: 185: char esp_server_data;
 19244                           ;main.c: 186: if (RCIF == 1)
 19245  005A80  AA9E               	btfss	3998,5,c	;volatile
 19246  005A82  D001               	goto	i2u529_41
 19247  005A84  D001               	goto	i2u529_40
 19248  005A86                     i2u529_41:
 19249  005A86  D008               	goto	i2l203
 19250  005A88                     i2u529_40:
 19251  005A88                     
 19252                           ;main.c: 187: {
 19253                           ;main.c: 188: esp_server_data = RCREG;
 19254  005A88  CFAE F010          	movff	4014,interrupcaoHIGH@esp_server_data	;volatile
 19255  005A8C                     
 19256                           ;main.c: 189: control_LED(esp_server_data);
 19257  005A8C  C010  F001         	movff	interrupcaoHIGH@esp_server_data,?_control_LED
 19258  005A90  ECCF  F031         	call	_control_LED	;wreg free
 19259  005A94                     
 19260                           ;main.c: 190: RCIF =0 ;
 19261  005A94  9A9E               	bcf	3998,5,c	;volatile
 19262  005A96  D000               	goto	i2l203
 19263  005A98                     i2l203:
 19264  005A98  C00F  FFF5         	movff	??_interrupcaoHIGH+13,tablat
 19265  005A9C  C00E  FFF8         	movff	??_interrupcaoHIGH+12,tblptru
 19266  005AA0  C00D  FFF7         	movff	??_interrupcaoHIGH+11,tblptrh
 19267  005AA4  C00C  FFF6         	movff	??_interrupcaoHIGH+10,tblptrl
 19268  005AA8  C00B  FFF4         	movff	??_interrupcaoHIGH+9,prodh
 19269  005AAC  C00A  FFF3         	movff	??_interrupcaoHIGH+8,prodl
 19270  005AB0  C009  FFDA         	movff	??_interrupcaoHIGH+7,fsr2h
 19271  005AB4  C008  FFD9         	movff	??_interrupcaoHIGH+6,fsr2l
 19272  005AB8  C007  FFE2         	movff	??_interrupcaoHIGH+5,fsr1h
 19273  005ABC  C006  FFE1         	movff	??_interrupcaoHIGH+4,fsr1l
 19274  005AC0  C005  FFEA         	movff	??_interrupcaoHIGH+3,fsr0h
 19275  005AC4  C004  FFE9         	movff	??_interrupcaoHIGH+2,fsr0l
 19276  005AC8  C003  FFFB         	movff	??_interrupcaoHIGH+1,pclatu
 19277  005ACC  C002  FFFA         	movff	??_interrupcaoHIGH,pclath
 19278  005AD0  0011               	retfie		f
 19279  005AD2                     __end_of_interrupcaoHIGH:
 19280                           	opt stack 0
 19281                           pclatu	equ	0xFFB
 19282                           pclath	equ	0xFFA
 19283                           tblptru	equ	0xFF8
 19284                           tblptrh	equ	0xFF7
 19285                           tblptrl	equ	0xFF6
 19286                           tablat	equ	0xFF5
 19287                           prodh	equ	0xFF4
 19288                           prodl	equ	0xFF3
 19289                           intcon	equ	0xFF2
 19290                           intcon2	equ	0xFF1
 19291                           postinc0	equ	0xFEE
 19292                           fsr0h	equ	0xFEA
 19293                           fsr0l	equ	0xFE9
 19294                           wreg	equ	0xFE8
 19295                           fsr1h	equ	0xFE2
 19296                           fsr1l	equ	0xFE1
 19297                           bsr	equ	0xFE0
 19298                           indf2	equ	0xFDF
 19299                           postinc2	equ	0xFDE
 19300                           postdec2	equ	0xFDD
 19301                           fsr2h	equ	0xFDA
 19302                           fsr2l	equ	0xFD9
 19303                           status	equ	0xFD8
 19304                           
 19305 ;; *************** function _control_LED *****************
 19306 ;; Defined at:
 19307 ;;		line 139 in file "main.c"
 19308 ;; Parameters:    Size  Location     Type
 19309 ;;  data            1    0[COMRAM] unsigned char 
 19310 ;; Auto vars:     Size  Location     Type
 19311 ;;		None
 19312 ;; Return value:  Size  Location     Type
 19313 ;;		None               void
 19314 ;; Registers used:
 19315 ;;		wreg, status,2, status,0, cstack
 19316 ;; Tracked objects:
 19317 ;;		On entry : 0/0
 19318 ;;		On exit  : 0/0
 19319 ;;		Unchanged: 0/0
 19320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19321 ;;      Params:         1       0       0       0       0       0       0       0       0
 19322 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19323 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19324 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19325 ;;Total ram usage:        1 bytes
 19326 ;; Hardware stack levels used:    1
 19327 ;; Hardware stack levels required when called:    1
 19328 ;; This function calls:
 19329 ;;		_led_off
 19330 ;;		_led_on
 19331 ;; This function is called by:
 19332 ;;		_interrupcaoHIGH
 19333 ;; This function uses a non-reentrant model
 19334 ;;
 19335                           
 19336                           	psect	text78
 19337  00639E                     __ptext78:
 19338                           	opt stack 0
 19339  00639E                     _control_LED:
 19340                           	opt stack 15
 19341                           
 19342                           ;main.c: 140: if(data == 174){
 19343                           
 19344                           ;incstack = 0
 19345                           ;incstack = 0
 19346  00639E  5001               	movf	control_LED@data,w,c
 19347  0063A0  0AAE               	xorlw	174
 19348  0063A2  A4D8               	btfss	status,2,c
 19349  0063A4  D003               	goto	i2l7090
 19350                           
 19351                           ;main.c: 141: led_on();
 19352  0063A6  EC03  F032         	call	_led_on	;wreg free
 19353                           
 19354                           ;main.c: 142: }else if(data == 170){
 19355  0063AA  D005               	goto	i2l190
 19356  0063AC                     i2l7090:
 19357  0063AC  5001               	movf	control_LED@data,w,c
 19358  0063AE  0AAA               	xorlw	170
 19359  0063B0  B4D8               	btfsc	status,2,c
 19360                           
 19361                           ;main.c: 143: led_off();
 19362  0063B2  EC06  F032         	call	_led_off	;wreg free
 19363  0063B6                     i2l190:
 19364  0063B6  0012               	return	
 19365  0063B8                     __end_of_control_LED:
 19366                           	opt stack 0
 19367                           pclatu	equ	0xFFB
 19368                           pclath	equ	0xFFA
 19369                           tblptru	equ	0xFF8
 19370                           tblptrh	equ	0xFF7
 19371                           tblptrl	equ	0xFF6
 19372                           tablat	equ	0xFF5
 19373                           prodh	equ	0xFF4
 19374                           prodl	equ	0xFF3
 19375                           intcon	equ	0xFF2
 19376                           intcon2	equ	0xFF1
 19377                           postinc0	equ	0xFEE
 19378                           fsr0h	equ	0xFEA
 19379                           fsr0l	equ	0xFE9
 19380                           wreg	equ	0xFE8
 19381                           fsr1h	equ	0xFE2
 19382                           fsr1l	equ	0xFE1
 19383                           bsr	equ	0xFE0
 19384                           indf2	equ	0xFDF
 19385                           postinc2	equ	0xFDE
 19386                           postdec2	equ	0xFDD
 19387                           fsr2h	equ	0xFDA
 19388                           fsr2l	equ	0xFD9
 19389                           status	equ	0xFD8
 19390                           
 19391 ;; *************** function _led_on *****************
 19392 ;; Defined at:
 19393 ;;		line 118 in file "main.c"
 19394 ;; Parameters:    Size  Location     Type
 19395 ;;		None
 19396 ;; Auto vars:     Size  Location     Type
 19397 ;;		None
 19398 ;; Return value:  Size  Location     Type
 19399 ;;		None               void
 19400 ;; Registers used:
 19401 ;;		wreg, status,2
 19402 ;; Tracked objects:
 19403 ;;		On entry : 0/0
 19404 ;;		On exit  : 0/0
 19405 ;;		Unchanged: 0/0
 19406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19407 ;;      Params:         0       0       0       0       0       0       0       0       0
 19408 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19409 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19410 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19411 ;;Total ram usage:        0 bytes
 19412 ;; Hardware stack levels used:    1
 19413 ;; This function calls:
 19414 ;;		Nothing
 19415 ;; This function is called by:
 19416 ;;		_control_LED
 19417 ;;		_FSM
 19418 ;; This function uses a non-reentrant model
 19419 ;;
 19420                           
 19421                           	psect	text79
 19422  006406                     __ptext79:
 19423                           	opt stack 0
 19424  006406                     _led_on:
 19425                           	opt stack 15
 19426                           
 19427                           ;main.c: 119: LATB = 0x01;
 19428                           
 19429                           ;incstack = 0
 19430                           ;incstack = 0
 19431  006406  0E01               	movlw	1
 19432  006408  6E8A               	movwf	3978,c	;volatile
 19433  00640A  0012               	return	
 19434  00640C                     __end_of_led_on:
 19435                           	opt stack 0
 19436                           pclatu	equ	0xFFB
 19437                           pclath	equ	0xFFA
 19438                           tblptru	equ	0xFF8
 19439                           tblptrh	equ	0xFF7
 19440                           tblptrl	equ	0xFF6
 19441                           tablat	equ	0xFF5
 19442                           prodh	equ	0xFF4
 19443                           prodl	equ	0xFF3
 19444                           intcon	equ	0xFF2
 19445                           intcon2	equ	0xFF1
 19446                           postinc0	equ	0xFEE
 19447                           fsr0h	equ	0xFEA
 19448                           fsr0l	equ	0xFE9
 19449                           wreg	equ	0xFE8
 19450                           fsr1h	equ	0xFE2
 19451                           fsr1l	equ	0xFE1
 19452                           bsr	equ	0xFE0
 19453                           indf2	equ	0xFDF
 19454                           postinc2	equ	0xFDE
 19455                           postdec2	equ	0xFDD
 19456                           fsr2h	equ	0xFDA
 19457                           fsr2l	equ	0xFD9
 19458                           status	equ	0xFD8
 19459                           
 19460 ;; *************** function _led_off *****************
 19461 ;; Defined at:
 19462 ;;		line 115 in file "main.c"
 19463 ;; Parameters:    Size  Location     Type
 19464 ;;		None
 19465 ;; Auto vars:     Size  Location     Type
 19466 ;;		None
 19467 ;; Return value:  Size  Location     Type
 19468 ;;		None               void
 19469 ;; Registers used:
 19470 ;;		wreg, status,2
 19471 ;; Tracked objects:
 19472 ;;		On entry : 0/0
 19473 ;;		On exit  : 0/0
 19474 ;;		Unchanged: 0/0
 19475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19476 ;;      Params:         0       0       0       0       0       0       0       0       0
 19477 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19478 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19479 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19480 ;;Total ram usage:        0 bytes
 19481 ;; Hardware stack levels used:    1
 19482 ;; This function calls:
 19483 ;;		Nothing
 19484 ;; This function is called by:
 19485 ;;		_control_LED
 19486 ;;		_FSM
 19487 ;; This function uses a non-reentrant model
 19488 ;;
 19489                           
 19490                           	psect	text80
 19491  00640C                     __ptext80:
 19492                           	opt stack 0
 19493  00640C                     _led_off:
 19494                           	opt stack 15
 19495                           
 19496                           ;main.c: 116: LATB = 0x00;
 19497                           
 19498                           ;incstack = 0
 19499                           ;incstack = 0
 19500  00640C  0E00               	movlw	0
 19501  00640E  6E8A               	movwf	3978,c	;volatile
 19502  006410  0012               	return	
 19503  006412                     __end_of_led_off:
 19504                           	opt stack 0
 19505                           pclatu	equ	0xFFB
 19506                           pclath	equ	0xFFA
 19507                           tblptru	equ	0xFF8
 19508                           tblptrh	equ	0xFF7
 19509                           tblptrl	equ	0xFF6
 19510                           tablat	equ	0xFF5
 19511                           prodh	equ	0xFF4
 19512                           prodl	equ	0xFF3
 19513                           intcon	equ	0xFF2
 19514                           intcon2	equ	0xFF1
 19515                           postinc0	equ	0xFEE
 19516                           fsr0h	equ	0xFEA
 19517                           fsr0l	equ	0xFE9
 19518                           wreg	equ	0xFE8
 19519                           fsr1h	equ	0xFE2
 19520                           fsr1l	equ	0xFE1
 19521                           bsr	equ	0xFE0
 19522                           indf2	equ	0xFDF
 19523                           postinc2	equ	0xFDE
 19524                           postdec2	equ	0xFDD
 19525                           fsr2h	equ	0xFDA
 19526                           fsr2l	equ	0xFD9
 19527                           status	equ	0xFD8
 19528                           pclatu	equ	0xFFB
 19529                           pclath	equ	0xFFA
 19530                           tblptru	equ	0xFF8
 19531                           tblptrh	equ	0xFF7
 19532                           tblptrl	equ	0xFF6
 19533                           tablat	equ	0xFF5
 19534                           prodh	equ	0xFF4
 19535                           prodl	equ	0xFF3
 19536                           intcon	equ	0xFF2
 19537                           intcon2	equ	0xFF1
 19538                           postinc0	equ	0xFEE
 19539                           fsr0h	equ	0xFEA
 19540                           fsr0l	equ	0xFE9
 19541                           wreg	equ	0xFE8
 19542                           fsr1h	equ	0xFE2
 19543                           fsr1l	equ	0xFE1
 19544                           bsr	equ	0xFE0
 19545                           indf2	equ	0xFDF
 19546                           postinc2	equ	0xFDE
 19547                           postdec2	equ	0xFDD
 19548                           fsr2h	equ	0xFDA
 19549                           fsr2l	equ	0xFD9
 19550                           status	equ	0xFD8
 19551                           
 19552                           	psect	rparam
 19553  0000                     pclatu	equ	0xFFB
 19554                           pclath	equ	0xFFA
 19555                           tblptru	equ	0xFF8
 19556                           tblptrh	equ	0xFF7
 19557                           tblptrl	equ	0xFF6
 19558                           tablat	equ	0xFF5
 19559                           prodh	equ	0xFF4
 19560                           prodl	equ	0xFF3
 19561                           intcon	equ	0xFF2
 19562                           intcon2	equ	0xFF1
 19563                           postinc0	equ	0xFEE
 19564                           fsr0h	equ	0xFEA
 19565                           fsr0l	equ	0xFE9
 19566                           wreg	equ	0xFE8
 19567                           fsr1h	equ	0xFE2
 19568                           fsr1l	equ	0xFE1
 19569                           bsr	equ	0xFE0
 19570                           indf2	equ	0xFDF
 19571                           postinc2	equ	0xFDE
 19572                           postdec2	equ	0xFDD
 19573                           fsr2h	equ	0xFDA
 19574                           fsr2l	equ	0xFD9
 19575                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    118
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      79
    BANK0           160     82      82
    BANK1           256    129     166
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?___ftsub	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___asftsub	float  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?__tdiv_to_l_	unsigned long  size(2) Largest target is 0

    ?__div_to_l_	unsigned long  size(2) Largest target is 0

    ?___asftadd	float  size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 0

    ?_scale	float  size(2) Largest target is 0

    ?_fround	float  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awmod	int  size(2) Largest target is 0

    ?_Read_LDR	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?_Obtener_Distancia	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 4
		 -> USART_Init@baud_rate(BANK1[4]), 

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___altoft	float  size(2) Largest target is 0

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK1[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S555$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupcaoLOW in COMRAM

    i1_mainLoop->i1_Read_LDR
    i1_sprintf->i1_fround
    i1_sprintf->i1_scale
    i1___lltoft->i1___ftpack
    i1___llmod->i1___lldiv
    i1___fttol->i1___wmul
    i1___asftsub->i1___ftsub
    i1___ftsub->i1___ftadd
    i1___asftmul->i1___ftmul
    i1___asftadd->i1_fround
    i1___ftadd->i1___ftpack
    i1_scale->i1___ftmul
    i1___wmul->i1___awdiv
    i1___awdiv->i1___awmod
    i1_fround->i1___ftmul
    i1_Read_LDR->i1___ftmul
    i1___ftmul->i1___fttol
    i1___ftdiv->i1___ftmul
    i1___awtoft->i1___ftpack
    i1_Obtener_Distancia->i1___lwdiv
    i1_lcd_putc->i1_lcd_write_char
    i1_lcd_write_char->i1_Lcd_Port
    i1_lcd_gotoxy->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _interrupcaoHIGH->_control_LED

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcaoLOW in BANK0

    _interrupcaoLOW->i1_mainLoop
    i1_mainLoop->i1_sprintf
    i1_sprintf->i1___asftadd
    i1___asftadd->i1_fround
    i1_Read_LDR->i1___ftdiv

Critical Paths under _main in BANK1

    _main->_mainLoop
    _mainLoop->_sprintf
    _sprintf->___asftsub
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___asftadd->___ftadd
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    _Read_LDR->___ftdiv
    ___awtoft->___ftpack
    ___ftmul->___wmul
    _Obtener_Distancia->___lwdiv
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_gotoxy->_Lcd_Cmd
    _USART_Init->___ftadd
    ___fttol->_scale
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___altoft->___ftpack
    _lcd_init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcaoLOW in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcaoLOW in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcaoLOW in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcaoLOW in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcaoLOW in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcaoLOW in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcaoLOW in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24656
                           _lcd_init
            _Configuracion_Registros
                        _Timer1_Init
                            _Init_AD
                         _USART_Init
                 _inicioInterrupcoes
                           _mainLoop
 ---------------------------------------------------------------------------------
 (1) _mainLoop                                             2     2      0   21272
                                            127 BANK1      2     2      0
                         _lcd_gotoxy
                           _lcd_putc
                  _Obtener_Distancia
                           _Read_LDR
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             50    43      7   17881
                                             81 BANK1     46    39      7
                             _fround
                              _scale
                            _isdigit
                        __tdiv_to_l_
                         __div_to_l_
                          ___asftadd
                          ___asftmul
                            ___ftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     232
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4     414
                                              8 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     159
                                             14 BANK1     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     241
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      65
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     198
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___asftsub                                            5     0      5    1695
                                             76 BANK1      5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    1602
                                             70 BANK1      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___asftmul                                            5     0      5     893
                                             39 BANK1      5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___asftadd                                            5     0      5    1630
                                             70 BANK1      5     0      5
                             _fround (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          13     7      6     758
                                              0 BANK1     13     7      6
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17    11      6     454
                                              0 BANK1     17    11      6
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     2      1      99
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (3) _scale                                               15    12      3    2617
                                             39 BANK1     12     9      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _fround                                              18    15      3    2338
                                             39 BANK1     15    12      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     242
                                             16 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     433
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     445
                                              7 BANK1      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Read_LDR                                            10     7      3    2048
                                             56 BANK1     10     7      3
                            ___ftdiv
                            ___ftmul
                           ___awtoft
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             5     2      3     445
                                              8 BANK1      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             17    11      6     800
                                             22 BANK1     17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Obtener_Distancia                                    8     6      2     414
                                              8 BANK1      8     6      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     241
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             4     2      2     384
                                              4 BANK1      4     2      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (3) _lcd_write_char                                       3     2      1     254
                                              1 BANK1      3     2      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     3      2     545
                                              3 BANK1      5     3      2
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _inicioInterrupcoes                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     7      0    3105
                                             70 BANK1      7     7      0
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     252
                                             51 BANK1     15    11      4
                              _scale (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             17    11      6     732
                                             39 BANK1     17    11      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             14     8      6    1537
                                             56 BANK1     14     8      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4     516
                                              8 BANK1     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5     312
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_AD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion_Registros                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     279
                                              3 BANK1      1     1      0
                           _Lcd_Port
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     1      1     155
                                              1 BANK1      2     1      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     0      1     124
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupcaoLOW                                      17    17      0   50280
                                             65 BANK0     17    17      0
                         i1_mainLoop
 ---------------------------------------------------------------------------------
 (8) i1_mainLoop                                           2     2      0   50280
                                             63 BANK0      2     2      0
                       i1_lcd_gotoxy
                         i1_lcd_putc
                i1_Obtener_Distancia
                         i1_Read_LDR
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (9) i1_sprintf                                           53    46      7   42519
                                             17 BANK0     46    39      7
                           i1_fround
                            i1_scale
                        i1___asftadd
                        i1___asftmul
                        i1___asftsub
                          i1___awdiv
                       i1__div_to_l_
                      i1__tdiv_to_l_
                           i1___ftge
                          i1___ftmul
                          i1___ftneg
                          i1___fttol
                          i1_isdigit
                          i1___lldiv
                          i1___llmod
                         i1___lltoft
                          i1___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___lwmod                                           6     2      4     521
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i1___lltoft                                          9     5      4     904
                                             24 COMRAM     9     5      4
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (10) i1___llmod                                          10     2      8     521
                                             30 COMRAM    10     2      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i1___lldiv                                          14     6      8     527
                                             16 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (10) i1_isdigit                                           3     2      1     223
                                             16 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (10) i1___fttol                                          15    11      4     823
                                             38 COMRAM    15    11      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i1___ftneg                                           3     0      3     148
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i1___ftge                                            9     3      6     446
                                             16 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (10) i1__tdiv_to_l_                                      17    11      6     983
                                             16 COMRAM    17    11      6
 ---------------------------------------------------------------------------------
 (10) i1__div_to_l_                                       13     7      6    1409
                                             16 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (10) i1___asftsub                                         5     0      5    3799
                                             44 COMRAM     5     0      5
                          i1___ftsub
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___ftsub                                           6     0      6    3580
                                             38 COMRAM     6     0      6
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (10) i1___asftmul                                         5     0      5    2001
                                              0 BANK0      5     0      5
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (10) i1___asftadd                                         5     0      5    3651
                                             12 BANK0      5     0      5
                           i1_fround (ARG)
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (12) i1___ftadd                                          14     8      6    3432
                                             24 COMRAM    14     8      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (10) i1_scale                                            21    18      3    6161
                                             70 COMRAM     3     0      3
                                              0 BANK0      9     9      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                          i1___fttol (ARG)
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     517
                                             32 COMRAM     6     2      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___awmod                                           7     3      4     969
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) i1___awdiv                                           9     5      4     977
                                             23 COMRAM     9     5      4
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i1_fround                                           27    24      3    5369
                                             70 COMRAM     3     0      3
                                              0 BANK0     12    12      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (9) i1_Read_LDR                                          10     7      3    4720
                                             70 COMRAM     3     0      3
                                             17 BANK0      7     7      0
                         i1___awtoft
                          i1___ftdiv
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (10) i1___ftmul                                          17    11      6    1737
                                             53 COMRAM    17    11      6
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack
                          i1___fttol (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i1___ftdiv                                          17    11      6    1815
                                              0 BANK0     17    11      6
                         i1___ftpack
                          i1___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___ftpack                                          8     3      5     679
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (10) i1___awtoft                                          5     2      3     977
                                             24 COMRAM     5     2      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (9) i1_Obtener_Distancia                                  8     6      2     904
                                             24 COMRAM     8     6      2
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (10) i1___lwdiv                                           8     4      4     527
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) i1_lcd_putc                                           4     2      2     884
                                             20 COMRAM     4     2      2
                   i1_lcd_write_char
 ---------------------------------------------------------------------------------
 (10) i1_lcd_write_char                                    3     2      1     588
                                             17 COMRAM     3     2      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (9) i1_lcd_gotoxy                                         5     3      2    1253
                                             19 COMRAM     5     3      2
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Cmd                                           2     1      1     365
                                             17 COMRAM     2     1      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (11) i1_Lcd_Port                                          1     0      1     292
                                             16 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (14) _interrupcaoHIGH                                    15    15      0      45
                                              1 COMRAM    15    15      0
                        _control_LED
 ---------------------------------------------------------------------------------
 (15) _control_LED                                         1     0      1      30
                                              0 COMRAM     1     0      1
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (16) _led_on                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _led_off                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _Lcd_Port
     _Lcd_Cmd
       _Lcd_Port
   _Configuracion_Registros
   _Timer1_Init
   _Init_AD
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fttol
       _scale (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _inicioInterrupcoes
   _mainLoop
     _lcd_gotoxy
       _Lcd_Cmd
         _Lcd_Port
     _lcd_putc
       _lcd_write_char
         _Lcd_Port
     _Obtener_Distancia
       ___lwdiv
     _Read_LDR
       ___ftdiv
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awtoft
         ___ftpack
     _sprintf
       _fround
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       __tdiv_to_l_
       __div_to_l_
       ___asftadd
         _fround (ARG)
           ___ftmul
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftadd (ARG)
           ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___asftmul
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___asftsub
         ___ftsub
           ___ftadd
             ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___awdiv
         ___awmod (ARG)
       ___ftge
       ___ftneg
       ___fttol
         _scale (ARG)
           ___ftmul
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___lwmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _interrupcaoLOW (ROOT)
   i1_mainLoop
     i1_lcd_gotoxy
       i1_Lcd_Cmd
         i1_Lcd_Port
     i1_lcd_putc
       i1_lcd_write_char
         i1_Lcd_Port
     i1_Obtener_Distancia
       i1___lwdiv
     i1_Read_LDR
       i1___awtoft
         i1___ftpack
       i1___ftdiv
         i1___ftpack
         i1___ftmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
     i1_sprintf
       i1_fround
         i1___awdiv
           i1___awmod (ARG)
         i1___awmod
         i1___ftmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1_scale
         i1___awdiv
           i1___awmod (ARG)
         i1___awmod
         i1___ftmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___asftadd
         i1_fround (ARG)
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___ftadd (ARG)
           i1___ftpack
       i1___asftmul
         i1___ftmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
       i1___asftsub
         i1___ftsub
           i1___ftadd
             i1___ftpack
         i1___lltoft (ARG)
           i1___ftpack
       i1___awdiv
         i1___awmod (ARG)
       i1__div_to_l_
       i1__tdiv_to_l_
       i1___ftge
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___ftneg
       i1___fttol
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1_isdigit
       i1___lldiv
       i1___llmod
         i1___lldiv (ARG)
       i1___lltoft
         i1___ftpack
       i1___lwmod
       i1___wmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     81      A6       7       64.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      52       5       51.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      4F       1       83.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      20       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     147      20        0.0%
DATA                 0      0     167       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Jun 10 01:19:15 2022

              _inicioInterrupcoes 63B8                      ___asftadd@f2 0148  
                    ___altoft@exp 0110                        i1___awtoft 5F16  
                      i1___ftpack 543C                     ___asftadd@f1p 0146  
          __end_of_interrupcaoLOW 00A6                       i1___asftadd 6118  
           __size_ofi1__div_to_l_ 00F4                     ___altoft@sign 0111  
                      i1___lltoft 5D0C         __end_of_Obtener_Distancia 55A2  
                              _GO 007E11                       i1___asftmul 60DC  
                     i1___asftsub 60A0                      ___awdiv@sign 010D  
                              bsr 000FE0               ___wmul@multiplicand 0112  
                     __CFG_BORV$3 000000                  i1___wmul@product 0025  
                    ___asftmul@f2 0129           __end_of_interrupcaoHIGH 5AD2  
                    __CFG_CP0$OFF 000000                      ___asftsub@f2 014E  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                      ___ftadd@exp1 0145  
                    ___ftadd@exp2 0144               ?_inicioInterrupcoes 0001  
                    ___ftadd@sign 0143                               l111 61C6  
                             l103 619A                               l104 619C  
                             l105 61A8                               l106 61AA  
                             l107 61B6                               l123 5940  
                             l108 61B8                               l212 5500  
                             l109 61C4                               l215 5506  
                             l330 10FC                               l219 5582  
                             l228 4B88                               l258 2A26  
                             l721 330E                               l730 3420  
                             l715 3292                               l716 3530  
                             l637 3D82                               l750 40DA  
                             l646 3D72                               l719 32D4  
                             l639 3C5C                               l912 56EE  
                             l922 59C2                               l739 3458  
                             l747 4116                               l755 39C0  
                             l843 4B10                               l764 39B0  
                             l749 4078                               l773 4D16  
                             l853 5358                               l678 45B8  
                             l758 391C                      i1___ftadd@f1 0019  
                    i1___ftadd@f2 001C                               l779 3BAE  
                             l789 6180                               l799 445E  
                    __CFG_CPB$OFF 000000                               _RD2 007C1A  
                             _RD3 007C1B                               _RD4 007C1C  
                             _RD5 007C1D                               _RD6 007C1E  
                             _RD7 007C1F                      __CFG_CPD$OFF 000000  
                    i1___ftge@ff1 0011                      i1___ftge@ff2 0014  
                    __CFG_BOR$OFF 000000                      i1___ftdiv@f1 0060  
                    i1___ftdiv@f2 0063                      i1___ftdiv@f3 006D  
                    ___awmod@sign 0106        i1Obtener_Distancia@Timer_1 001B  
                    i1___ftneg@f1 0011                               wreg 000FE8  
                    i1___awtoft@c 0019                      __CFG_FOSC$HS 000000  
                   ___asftmul@f1p 0127                       _sprintf$566 0161  
                    i1___ftmul@f1 0036                      i1___ftmul@f2 0039  
                      i1_lcd_putc 6272                     ___asftsub@f1p 014C  
                     lcd_gotoxy@a 0103                       lcd_gotoxy@b 0104  
                    i1___ftsub@f1 0027                      i1___ftsub@f2 002A  
                    i1___fttol@f1 0027                       lcd_gotoxy@y 0106  
                     lcd_gotoxy@z 0105                        i1_mainLoop 536A  
                    ?_control_LED 0001                      __CFG_LVP$OFF 000000  
                    ___ftdiv@cntr 0132                      ___ftdiv@sign 0137  
                    __CFG_WDT$OFF 000000                      i1___lltoft@c 0019  
                            _ADIE 007CEE                              l8530 52D0  
                            _ADIP 007CFE                              l8532 52D8  
                            l8462 4324                              l8480 43BE  
                            l8536 533C                              l8528 52B6  
                            l8490 4402                              l8492 441C  
                            l8484 43DC                              _ADON 007E10  
                            l8494 4424                              l8498 444E  
                            STR_1 0888                              STR_2 0876  
                            _GIEH 007F97                              _GIEL 007F96  
                            _LATB 000F8A                              _IPEN 007E87  
                            _RCIE 007CED                              _RCIF 007CF5  
                            _RCIP 007CFD                              u6830 430C  
                            u6850 4350                              u6835 4302  
                            u6855 4346                              u6880 43E6  
                            u9620 3972                              u9550 37DE  
                            u9800 3212                              u9810 324E  
                            u9570 3822                              u9555 37D4  
                            u9805 3208                              u9815 3244  
                            u9575 3818                              u8874 4B56  
                            u9690 3D34                              u8875 4B50  
                            u8884 4B78                              u8885 4B72  
                            u8990 0BA4                              u8975 0B28  
                            _TMR1 000FCE                              u8995 0B98  
                 lcd_write_char@a 0101                   lcd_write_char@y 0103  
          __end_of_lcd_write_char 5ED0        Obtener_Distancia@Distancia 010C  
            ??_inicioInterrupcoes 0100                 i1___lldiv@divisor 0015  
                            _main 6380                      ___ftpack@arg 0100  
                    ___ftpack@exp 0103                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
               i1___lldiv@counter 001E                              pclat 000FFA  
                   i1___ftdiv@exp 006C                              prodh 000FF4  
                            prodl 000FF3                              start 00A6  
                    i1__div_to_l_ 4D18                     __CFG_IESO$OFF 000000  
                 __end_ofi1_scale 2E78                      _sprintf$1207 015E  
                 __end_of_Lcd_Cmd 6360                     __CFG_MCLRE$ON 000000  
                    ___ftmul@cntr 0125                      ___ftmul@sign 0126  
                   i1___ftmul@exp 0041                   __end_of_Init_AD 63E0  
                    ___fttol@exp1 0141                      ___fttol@lval 013D  
                 ?_interrupcaoLOW 0001                    i1___asftadd@f2 006E  
                   __CFG_PLLDIV$1 000000           i1___ftmul@f3_as_product 0042  
                  __CFG_CCP2MX$ON 000000                             l10008 58FA  
                           l10200 0A6A                             l11010 4CB8  
                           l10210 0AC4                             l10140 5566  
                           l10204 0A80                             l10070 5CE8  
                           l11006 4C6E                             l11030 4A54  
                           l10310 0F66                             l10302 0EDA  
                           l11016 4D14                             l11032 4A6E  
                           l10400 1312                             l10320 0F8E  
                           l10216 0AE6                             l10208 0A88  
                           l10066 5CB8                             l11042 4AF4  
                           l11034 4A76                             l11050 5724  
                           l10322 0FA4                             l10314 0F70  
                           l10306 0F3A                             l10250 0CA0  
                           l10242 0C28                             l10226 0B50  
                           l10170 08EE                             l10162 08AA  
                           l10420 1394                             l10180 093C  
                           l11062 567A                             l10406 1336  
                           l10270 0DA0                             l10254 0CD4  
                           l10174 08FC                             l11064 568C  
                           l10512 318A                             l10504 305C  
                           l11048 570A                             l10440 1484  
                           l10424 13C2                             l10352 10C2  
                           l10336 1004                             l10344 1094  
                           l10328 0FC2                             l10168 08D0  
                           l10088 6398                             l11074 56DA  
                           l11066 5694                             l10610 394A  
                           l11090 59AE                             l11082 5960  
                           l10442 1492                             l10434 143A  
                           l10370 118A                             l10346 10A4  
                           l10282 0E18                             l10266 0D6E  
                           l10258 0D12                             l10194 09F4  
                           l10700 4554                             l10620 398E  
                           l11084 5972                             l10428 1402  
                           l10380 1272                             l10188 09C0  
                           l10710 45AC                             l10534 26FC  
                           l10622 39A8                             l10614 3968  
                           l10630 3BC6                             l11086 597A  
                           l10446 14D6                             l10382 1282  
                           l10366 1138                             l10358 1100  
                           l10390 12AE                             l10198 0A4C  
                           l10704 456A                             l10800 350C  
                           l10552 29F4                             l10528 25EE  
                           l10472 1582                             l10456 1522  
                           l10464 154E                             l10448 14E4  
                           l10288 0E7C                             l10722 5216  
                           l10810 3F94                             l10546 28DA  
                           l10538 270E                             l10466 155A  
                           l10724 5230                             l10564 6096  
                           l10580 383A                             l10636 3BDC  
                           l10484 1662                             l10388 12A0  
                           l10742 32A0                             l10574 37F6  
                           l10670 3D2A                             l10478 15B2  
                           l10486 1678                             l10816 3FF0  
                           l10656 3CDA                             l10488 169C  
                           l10690 44AC                             l10770 3390  
                           l10754 3300                             l10930 475C  
                           l10594 38B6                             l10666 3D0C  
                           l10692 44DE                             l10684 447C  
                           l10772 33A6                             l10764 3358  
                           l10748 32E2                             l10932 476E  
                           l10924 4730                             l10676 3D50  
                           l10790 3490                             l10782 33FC  
                           l10774 33B6                             l10950 47E8  
                           l10942 47BC                             l10934 4776  
                           l10918 4712                             l10678 3D6A  
                           l10696 450C                             l10688 4496  
                           l10784 3412                             l10776 33C4  
                           l10864 3A62                             l10698 453E  
                           l10882 3AFE                             l10858 3A06  
                           l10946 47D0                             l10970 5058  
                           l10962 5024                             l10892 3B62  
                           l10972 506A                             l10878 3AD2  
                           l10974 5072                             l10982 50BA  
                           l10966 503A                             l10888 3B36  
                           l10986 50D2                             l10978 50A6  
                           l10998 5C02      __size_ofi1_Obtener_Distancia 007E  
                           ?_main 0001                    i1___awdiv@sign 001E  
           __size_ofi1_lcd_gotoxy 0056                   __end_of___awdiv 47F2  
                 __end_of___ftadd 3532                   __end_of___awmod 50DC  
                 __end_of___ftdiv 4118                   __end_of___ftneg 618E  
                           u10010 3F7C                   __end_of___lldiv 4B22  
                           u10030 3FC0                             u10015 3F72  
                           u10040 3FD6         __size_ofi1_lcd_write_char 003A  
                           u10035 3FB6                             u10060 39EE  
                           u10080 3A32                             u10065 39E4  
                           u10090 3A48                             u11107 54F8  
                           u11117 5EB2                             u10085 3A28  
                 __end_of___ftmul 3BB0                             u11127 5EC6  
                           u11137 4812                             u11147 4838  
                 ___awdiv@divisor 0109                             u11157 485E  
                           u11167 6352                   __end_of___llmod 536A  
                 __end_of___ftsub 5FDE                   __end_of___fttol 4460  
                 __end_of___lwdiv 56F8                    i1___asftmul@f2 0062  
                           i1l111 62D0                             i1l103 62B0  
                           i1l104 62B2                             i1l105 62BA  
                           i1l106 62BC                             i1l107 62C4  
                           i1l123 5E7C                             i1l108 62C6  
                           i1l212 5ADE                             i1l109 62CE  
                           i1l215 5AE4                             i1l330 1E96  
                           i1l219 5B36                             i1l228 4F64  
                 __end_of___lwmod 59CC                             i2l202 5A98  
                           i1l258 2E76                             i2l203 5A98  
                           i1l199 0060                             i1l730 3EBA  
                           i1l715 3DEC                             i1l716 3F4E  
                           i1l637 4E0A                             i2l190 63B6  
                           i1l750 42A2                             i1l646 4DFA  
                           i1l719 3E16                             i1l639 4D76  
                           i1l912 5E1E                             i1l922 5F0C  
                           i1l747 42DE                             i1l739 3ED6  
                           i1l755 46DA                             i1l843 5A40  
                           i1l764 46CA                             i1l749 4240  
                           i1l773 5822                             i1l853 5C96  
                           i1l678 54F2                             i1l758 4678  
                           i1l779 4A16                             i1l789 62EA  
                           i1l799 51BA                   ___awdiv@counter 010C  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                  i1___asftsub@f2 002F                             _SPBRG 000FAF  
                   __CFG_USBDIV$1 000000                    i1___ftadd@exp1 0026  
                  i1___ftadd@exp2 0025                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISD 000F95  
                  i1___ftadd@sign 0024                        i1isdigit@c 0011  
                   __CFG_PWRT$OFF 000000                       ?i1_Lcd_Port 0011  
              i1__tdiv_to_l_@exp1 0021                i1__tdiv_to_l_@cntr 0020  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                      i1scale@scl 0047                      ___lltoft@exp 0110  
              i1__tdiv_to_l_@quot 001C                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                __size_ofi1_Lcd_Cmd 0020  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                     __CFG_WRTB$OFF 000000  
              i1___lwmod@dividend 0011                     __CFG_WRTC$OFF 000000  
                 __end_of_led_off 6412                     __CFG_WRTD$OFF 000000  
                  i1___awmod@sign 0017                i1___lldiv@dividend 0011  
                  __CFG_EBTRB$OFF 000000                     ___awtoft@sign 010C  
                 __end_of_dpowers 0828                             _scale 2414  
                 __end_of_isdigit 60A0                       ?i1_Read_LDR 0047  
                   ___ftpack@sign 0104                  __end_ofi1___ftge 5824  
                           tablat 000FF5                  __end_ofi1___wmul 6202  
                  i1___ftdiv@cntr 006B              i1lcd_write_char@temp 0013  
                  i1___ftdiv@sign 0070                   ?_lcd_write_char 0101  
                           status 000FD8               i1___wmul@multiplier 0021  
                 __end_of_sprintf 16AA                __size_ofi1___awdiv 0090  
              __size_ofi1___ftadd 01CC                __size_ofi1___awmod 007C  
                __end_ofi1_fround 37B2                __size_ofi1___ftdiv 01C8  
              __size_ofi1___ftneg 0026                __size_ofi1___lldiv 0086  
                  __CFG_ICPRT$OFF 000000            __size_ofi1__tdiv_to_l_ 0122  
              __size_ofi1___ftmul 0110                __size_ofi1___llmod 006A  
              __size_ofi1___ftsub 0036                __size_ofi1___fttol 00E0  
              __size_ofi1___lwdiv 0056                __size_ofi1___lwmod 0046  
                  __CFG_PBADEN$ON 000000                    i1___ftpack@arg 0011  
                  i1___ftpack@exp 0014                       ?_USART_Init 0001  
                __end_of_Lcd_Port 61C8                   __initialization 631C  
                    i1_lcd_gotoxy 5E28                      __end_of_main 639E  
                  i1_sprintf$1836 007E                       ?i1___awtoft 0019  
                     ?i1___ftpack 0011                    i1___ftmul@cntr 0045  
              __size_ofi1_isdigit 0024                    i1___ftmul@sign 0046  
              i1___lldiv@quotient 001A                  __end_of_Read_LDR 4C24  
                     ?i1___lltoft 0019        __size_of_Obtener_Distancia 00AE  
                     i1lcd_putc@a 0015                       i1lcd_putc@i 0017  
                      i1sprintf@c 009E                        i1sprintf@f 0073  
                  i1___fttol@exp1 0035                    i1___fttol@lval 0031  
                ?_interrupcaoHIGH 0001                            ??_main 0181  
                   ___fttol@sign1 013C                __size_ofi1_sprintf 0D6A  
                   __activetblptr 000002                   i1___asftadd@f1p 006C  
            __size_of__tdiv_to_l_ 0210                      i1_scale$1835 0066  
                     ?i1_lcd_putc 0015                       ?i1_mainLoop 0001  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                    i1___lltoft@exp 0021  
                __end_of___altoft 5294                  ___llmod@dividend 010E  
                          ?_scale 0127                            _ADRESH 000FC4  
                          _ADRESL 000FC3                  ___awdiv@dividend 0107  
                __end_of___awtoft 5C3E                  __end_of___ftpack 45BA  
                __end_of___lltoft 5794                 i1___llmod@divisor 0023  
                 i1___asftmul@f1p 0060                            i1l9110 5840  
                          i1l9200 4D24                            i1l9122 586A  
                          i1l9124 5872                            i1l9116 5850  
                          i1l9142 58AA                            i1l9134 5892  
                          i1l9126 5876                            i1l9206 4D30  
                          i1l9320 3E74                            i1l9240 4DD2  
                          i1l9138 589C                            i1l9170 5BAA  
                          i1l9162 5B8A                            i1l9154 5B6C  
                          i1l9322 3E7E                            i1l9314 3E56  
                          i1l9226 4DA6                            i1l9410 4612  
                          i2l7100 5A94                            i1l9260 5464  
                          i1l9164 5B92                            i1l9340 3EF2  
                          i1l9332 3EAA                            i1l9324 3E86  
                          i1l9236 4DC2                            i1l9404 45E6  
                          i1l8622 5E52                            i1l9190 5F32  
                          i1l9270 54C0                            i1l9262 5482  
                          i1l9254 544C                            i1l9502 49B2  
                          i1l9166 5B96                            i1l9174 5BB4  
                          i1l9158 5B78                            i1l9350 3F2A  
                          i1l9334 3EB4                            i1l9326 3E8C  
                          i1l9246 4DEA                            i1l9512 49DE  
                          i1l9248 4DF6                            i1l9440 4692  
                          i1l9424 4650                            i1l8650 627C  
                          i1l9266 5498                            i1l9258 545A  
                          i1l9178 5BC2                            i1l9450 46BA  
                          i1l9268 54B6                            i1l9508 49CE  
                          i1l9292 3DFA                            i1l9452 46C6  
                          i1l9444 46A2                            i1l8654 6294  
                          i1l9462 57F4                            i1l9606 5A32  
                          i1l9622 5C88                            i1l9614 5C54  
                          i1l9630 5D22                            i1l9536 5108  
                          i1l9616 5C60                            i2l7090 63AC  
                          i1l9642 5DEC                            i1l9298 3E24  
                          i1l9458 57C4                            i1l9554 515C  
                          i1l9618 5C64                            i1l9644 5DF4  
                          i1l8676 5B26                            i1l9484 496C  
                          i1l9468 5820                            i1l9572 51AA  
                          i1l9564 5184                            i1l9628 5D16  
                       ??i1_scale 0060                            i2l7094 5A80  
                          i1l9654 5E14                            i1l9646 5DF8  
                          i1l9478 4934                            i1l9566 5190  
                          i1l9558 516C                            i1l9670 5F02  
                          i1l9662 5EE2                            i2l7096 5A88  
                          i1l9568 5194                            i1l9584 6314  
                          i1l9664 5EEA                            i2l7098 5A8C  
                          i1l9498 49A2                            i1l9594 59F2  
                          i1l9666 5EEE                            i1l9596 59FE  
                          i1l9598 5A02                 i1___llmod@counter 0028  
                 i1___asftsub@f1p 002D                         ??_Lcd_Cmd 0102  
                          _TMR0IE 007F95                            _TMR0IP 007F8A  
                          _TMR1ON 007E68                            _TRISA0 007C90  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
                   i1sprintf@_val 008E                     i1sprintf@flag 0093  
                   i1sprintf@fval 0099                         ??_Init_AD 0100  
                   i1sprintf@prec 009C                     ??_Timer1_Init 0100  
                  __CFG_XINST$OFF 000000                  __end_of__powers_ 0876  
             __size_ofi1_Lcd_Port 002A                 __end_ofi1_Lcd_Cmd 6380  
                __end_of_lcd_init 4908                  __end_of_lcd_putc 5D0C  
                          ___ftge 4C24                  __end_of_mainLoop 4EFE  
                          ___wmul 5D70                         ??___awdiv 010B  
                       ??___ftadd 013E                    __CFG_STVREN$ON 000000  
                       ??___awmod 0104                         ??___ftdiv 012D  
                       ??___ftneg 0103                         ??___lldiv 0108  
                       ??___ftmul 011C                         ??___llmod 0116  
                       ??___ftsub 014C                         ??___fttol 0137  
                       ??___lwdiv 0104                         ??___lwmod 0104  
                          _led_on 6406               __size_ofi1_Read_LDR 00F0  
                          _fround 2E78                            clear_0 6322  
                ___awdiv@quotient 010E                   ___awmod@divisor 0102  
                 ___awmod@counter 0105                         ??_led_off 0001  
                   i1__tdiv_to_l_ 45BA             ___ftmul@f3_as_product 0122  
               __end_ofi1___awdiv 58B4                 __end_ofi1___ftadd 3F50  
               __end_ofi1___awmod 5BCC                 __end_ofi1___ftdiv 42E0  
               __end_ofi1___ftneg 62F8                 __end_ofi1___lldiv 5A52  
               __end_ofi1___ftmul 4A18                 __end_ofi1___llmod 5CA8  
               __end_ofi1___ftsub 6272                 __end_ofi1___fttol 51BC  
               __end_ofi1___lwdiv 5E28                 __end_ofi1___lwmod 5F16  
                       ??_isdigit 0101                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8               __size_of_USART_Init 00AC  
                       ??_sprintf 0158                 __end_ofi1_isdigit 631C  
              __size_of___asftadd 0042               __size_ofi1___awtoft 0044  
             __size_ofi1___ftpack 00B8      i1Obtener_Distancia@Distancia 001D  
              __size_of___asftmul 0042                __size_of___asftsub 0042  
            __size_of_control_LED 001A               __size_ofi1___lltoft 0064  
        ?_Configuracion_Registros 0001                        __accesstop 0060  
         __end_of__initialization 6334                        ___altoft@c 0108  
                 i1___awtoft@sign 001D                        ___ftadd@f1 0138  
                      ___ftadd@f2 013B                        ___ftge@ff1 0100  
                      ___ftge@ff2 0103                   i1___ftpack@sign 0015  
               __end_ofi1_sprintf 2414                        ___ftdiv@f1 0127  
                      ___ftdiv@f2 012A                        ___ftdiv@f3 0133  
                      ___ftneg@f1 0100                        ___awtoft@c 0108  
                      ___ftmul@f1 0116                        ___ftmul@f2 0119  
                      ___ftsub@f1 0146                        ___ftsub@f2 0149  
                      ___fttol@f1 0133                    __pcstackCOMRAM 0001  
  interrupcaoHIGH@esp_server_data 0010               __size_ofi1_lcd_putc 0036  
             __size_ofi1_mainLoop 00D2                        ___lltoft@c 0108  
                    ?i1___asftadd 006C                     __end_of_scale 2A28  
                    ?i1___asftmul 0060                      ?i1___asftsub 002D  
             __end_of_Timer1_Init 63F4            Read_LDR@analog_reading 013F  
                  ?i1__tdiv_to_l_ 0011                         ?i1___ftge 0011  
                       ?i1___wmul 0021                  i1_lcd_write_char 6202  
                  lcd_gotoxy@temp 0107                        __div_to_l_ 3BB0  
                       ?i1_fround 0047                       i1sprintf@ap 0089  
                     i1sprintf@vd 0085                       i1sprintf@sp 0071  
                 i1___fttol@sign1 0030                         ?_Lcd_Port 0100  
                 __div_to_l_@exp1 010C                   __div_to_l_@cntr 010B  
                    sprintf@integ 016B                           ??_scale 012A  
                 __div_to_l_@quot 0107                      sprintf@width 0177  
                      __pbssBANK1 0181                         ?_Read_LDR 0138  
             i1_Obtener_Distancia 5AD2                     __div_to_l_@f1 0100  
                   __div_to_l_@f2 0103                  ??_interrupcaoLOW 00A1  
                         ?___ftge 0100                           ?___wmul 0110  
                         ?_led_on 0001                         ?___altoft 0108  
               __end_of___asftadd 6062                           ?_fround 0127  
               __end_of___asftmul 6020                 __end_of___asftsub 5F9C  
                       ?___awtoft 0108                         ?___ftpack 0100  
            ?i1_Obtener_Distancia 0019                        ??i1___ftge 0017  
                       ?___lltoft 0108                        ??i1___wmul 0025  
                   i1_fround$1833 0069                     i1_fround$1834 0066  
              i1___llmod@dividend 001F                     i1_isdigit$841 0013  
                         i1l11130 368E                           i1l11202 1750  
                         i1l11210 17C8                           i1l11220 1840  
                         i1l11310 1C28                           i1l11230 187A  
                         i1l11222 185C                i1___awdiv@dividend 0018  
                         i1l11160 2C2E                           i1l11304 1BCA  
                         i1l11232 18B6                           i1l11216 17FC  
                         i1l11138 3766                           i1l11154 2B72  
                         i1l11410 2020                           i1l11402 1FF2  
                         i1l11226 1872                           i1l11172 2D80  
                         i1l11164 2C3C                           i1l11500 2332  
                         i1l11404 2002                           i1l11332 1D12  
                         i1l11324 1C86                           i1l11412 202E  
                         i1l11422 2092                           i1l11342 1D3A  
                         i1l11350 1D6E                           i1l11238 18D8  
                         i1l11510 2406                           i1l11190 16E6  
                         i1l11344 1D50                           i1l11336 1D1C  
                         i1l11328 1CE6                           i1l11280 1AD4  
                         i1l11272 1A6E                           i1l11264 1A06  
                         i1l11248 1942                           i1l11192 1704  
                         i1l11184 16C0                           i1l11530 41B8  
                         i1l11178 2E48                           i1l11506 23CC  
                         i1l11450 2182                           i1l11442 2114  
                         i1l11524 415C                           i1l11428 20B6  
                         i1l11380 1E9A                           i1l11292 1B52  
                         i1l11276 1A96                           i1l11196 1712  
                         i1l11508 23E2                           i1l10492 005C  
                         i1l11470 2264                           i1l11462 2204  
                         i1l11446 2142                           i1l11374 1E5C  
                         i1l11358 1DB0                           i1l11366 1E2E  
                         i1l11464 2212                           i1l11456 21BA  
                         i1l11392 1F24                           i1l11368 1E3E  
                         i1l11288 1B2C                           i1l11468 2256  
                         i1l11388 1ED2                           i1l11494 2302  
                         i1l11478 22A2                           i1l11486 22CE  
                         i1l11488 22DA                      ??i1_Lcd_Port 0012  
                      ??i1_fround 0060                        _lcd_gotoxy 58B4  
 __end_of_Configuracion_Registros 6406                  ??_lcd_write_char 0102  
                      ??_Lcd_Port 0101                      ??i1_Read_LDR 0071  
                       ?_lcd_init 0001                         ?_lcd_putc 0104  
                       ?_mainLoop 0001                    i1sprintf@integ 008B  
                         i1_scale 2A28                        ??_Read_LDR 013B  
                  i1sprintf@width 0097                   __CFG_VREGEN$OFF 000000  
              lcd_write_char@temp 0102                           _Lcd_Cmd 633E  
     __size_of_inicioInterrupcoes 0014                           _Init_AD 63CC  
                    i1fround@prec 0047                      ??_USART_Init 0146  
               __end_of__npowers_ 084F                           __Hparam 0000  
                      _scale$1206 0130                       _Timer1_Init 63E0  
                         __Lparam 0000                i1___awdiv@quotient 001F  
              __end_ofi1_Lcd_Port 62D2                   __size_of___ftge 00F4  
                    ??i1___awtoft 001C                      ??i1___ftpack 0016  
                         ___awdiv 46DC                           ___ftadd 31E6  
                         ___awmod 4FEE                           ___ftdiv 3F50  
                         ___ftneg 6154                           ___lldiv 4A18  
                 __size_of___wmul 0062                           ___ftmul 39C2  
                         ___llmod 5294                           ___ftsub 5F9C  
                         ___fttol 42E0                      ??i1___lltoft 001D  
                         ___lwdiv 564E                           ___lwmod 5942  
                 ??i1__tdiv_to_l_ 0017                      __psmallconst 0800  
                      ??___altoft 010C                   __size_of_led_on 0006  
           ??i1_Obtener_Distancia 001B                           __pcinit 631C  
                      ??___awtoft 010B                        ??___ftpack 0105  
              __end_ofi1_Read_LDR 4FEE                   __size_of_fround 036E  
                         __ramtop 0800                        ??___lltoft 010C  
                         __ptext0 6380                           __ptext1 4E0C  
                         __ptext2 0894                           __ptext3 5942  
                         __ptext4 56F8                           __ptext5 5294  
                         __ptext6 4A18                           __ptext7 6154  
                         __ptext8 4C24                           __ptext9 5F5A  
                         _led_off 640C                         _T1CONbits 000FCD  
                     ?__div_to_l_ 0100                    USART_Init@temp 014A  
                         _dpowers 0800                 i1___lwdiv@divisor 0013  
                         _isdigit 6062                 i1___lwdiv@counter 0016  
                ___awmod@dividend 0100                      ??i1_lcd_putc 0017  
                    ??i1_mainLoop 009F                __end_of_USART_Init 564E  
                         _sprintf 0894                        ??_lcd_init 0103  
                  __pintcode_body 5A52                        ??_lcd_putc 0106  
            end_of_initialization 6334                        ??_mainLoop 017F  
              __end_ofi1___awtoft 5F5A                __end_ofi1___ftpack 54F4  
                       i1u1040_24 4F54                         i1u1040_25 4F4E  
                       i1u1120_27 6372                         i1u1105_20 4144  
                       i1u1105_25 413A                         i1u1107_20 4188  
                       i1u1107_25 417E                         i1u1108_20 419E  
                       i1u1117_27 5AD6                __end_ofi1___lltoft 5D70  
                       i1u1118_27 621E                         i1u1039_24 4F32  
                       i1u1039_25 4F2C                         i1u1119_27 6232  
                       i1u1056_25 191A                         i1u1058_20 1996  
                   __Lmediumconst 0000                         i1u1058_25 198A  
                         int_func 5A52                   ___lldiv@divisor 0104  
                 ___lldiv@counter 010D                         _LDR_value 0181  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                   i1__div_to_l_@f1 0011  
                 i1__div_to_l_@f2 0014                         Lcd_Port@a 0100  
              __end_ofi1_lcd_putc 62A8                    __tdiv_to_l_@f1 0100  
                  __tdiv_to_l_@f2 0103                __end_ofi1_mainLoop 543C  
           i1___wmul@multiplicand 0023                         i1_Lcd_Cmd 6360  
                   ??__tdiv_to_l_ 0106                         _PORTAbits 000F80  
            __size_ofi1___asftadd 003C              __size_ofi1___asftmul 003C  
            __size_ofi1___asftsub 003C                       ?_lcd_gotoxy 0103  
                       i1___awdiv 5824                         i1___ftadd 3D84  
                       i1___awmod 5B50                         i1___ftdiv 4118  
                       i1___ftneg 62D2                         i1___lldiv 59CC  
                       i1___ftmul 4908                         i1___llmod 5C3E  
                       i1___ftsub 623C                         i1___fttol 50DC  
        __size_of_interrupcaoHIGH 5ACA                         i1___lwdiv 5DD2  
                       i1___lwmod 5ED0               USART_Init@baud_rate 0146  
                     ___ftdiv@exp 0136          __end_ofi1_lcd_write_char 623C  
                       i1_isdigit 62F8               __size_of__div_to_l_ 01D4  
       Obtener_Distancia@Duracion 010E                       ___ftmul@exp 0121  
                       i1_sprintf 16AA  __size_of_Configuracion_Registros 0012  
                  __end_of___ftge 4D18                    __end_of___wmul 5DD2  
                      ?i1_Lcd_Cmd 0012                         _Distancia 0184  
                  __end_of_led_on 640C                 i1___lwmod@divisor 0013  
                  __end_of_fround 31E6                 i1___lwmod@counter 0016  
               __size_ofi1___ftge 0090               start_initialization 631C  
               __size_ofi1___wmul 003A               __end_of__tdiv_to_l_ 39C2  
                  _theresMovement 004E                        ?i1___awdiv 0018  
                      ?i1___ftadd 0019                     i1_sprintf$566 0081  
                      ?i1___awmod 0011                        ?i1___ftdiv 0060  
                   ??_control_LED 0002                        ?i1___ftneg 0011  
                      ?i1___lldiv 0011                        ?i1___ftmul 0036  
                      ?i1___llmod 001F                        ?i1___ftsub 0027  
                      ?i1___fttol 0027                 __size_ofi1_fround 0280  
                      ?i1___lwdiv 0011                        ?i1___lwmod 0011  
                   i1lcd_gotoxy@a 0014                     i1lcd_gotoxy@b 0015  
                   i1lcd_gotoxy@y 0017                     i1lcd_gotoxy@z 0016  
               __size_of_Lcd_Port 003A                  i1lcd_gotoxy@temp 0018  
                 ___llmod@divisor 0112                        ?i1_isdigit 0011  
                 ___llmod@counter 0117                     ?i1__div_to_l_ 0011  
               __size_of_Read_LDR 0102                      i1sprintf@exp 0095  
                      ?i1_sprintf 0071                          ??___ftge 0106  
             __size_of_lcd_gotoxy 008E                          ??___wmul 0114  
                   sprintf@vd_568 0167                          ??_led_on 0001  
              i1___awmod@dividend 0011                  __CFG_LPT1OSC$OFF 000000  
                        ??_fround 012A                 __size_of___altoft 00D8  
                      fround@prec 0127                 __size_of___awtoft 0072  
               __size_of___ftpack 015A                         ___asftadd 6020  
                       ___asftmul 5FDE                         ___asftsub 5F5A  
               __size_of___lltoft 009C                       __pbssCOMRAM 004A  
     i1Obtener_Distancia@Duracion 001F                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100               __end_of__stringdata 0892  
               i1lcd_write_char@a 0012                 i1lcd_write_char@y 0014  
                        ?i1_scale 0047                          ?_Lcd_Cmd 0101  
               __size_of_lcd_init 0116                       sprintf@_val 016E  
                     sprintf@flag 0173                 __size_of_lcd_putc 0064  
                     sprintf@fval 0179                       sprintf@prec 017C  
               __size_of_mainLoop 00F2                    ??i1__div_to_l_ 0017  
             __end_of_control_LED 63B8                 ??_interrupcaoHIGH 0002  
                        ?_Init_AD 0001                      ?_Timer1_Init 0001  
                ___lwdiv@dividend 0100                     ?i1_lcd_gotoxy 0014  
                       __pintcode 0008                          ?___awdiv 0107  
                        ?___ftadd 0138                          ?___awmod 0100  
                        ?___ftdiv 0127                          ?___ftneg 0100  
                        ?___lldiv 0100                          ?___ftmul 0116  
                        ?___llmod 010E                          ?___ftsub 0146  
                       __npowers_ 0828                          ?___fttol 0133  
                        ?___lwdiv 0100                          ?___lwmod 0100  
                     ??i1_Lcd_Cmd 0013                 i1___awdiv@divisor 001A  
                     __pintcodelo 0018                 i1___awdiv@counter 001D  
                     __tdiv_to_l_ 37B2                          ?_led_off 0001  
                    ??__div_to_l_ 0106                       __smallconst 0800  
                      ?___asftadd 0146                          ?_isdigit 0100  
                      ?___asftmul 0127                        ?___asftsub 014C  
                     ??i1___awdiv 001C                       ??i1___ftadd 001F  
                     ??i1___awmod 0015                       ??i1___ftdiv 0066  
                     ??i1___ftneg 0014                       ??i1___lldiv 0019  
                     ??i1___ftmul 003C                       ??i1___llmod 0027  
                     ??i1___ftsub 002D                       ??i1___fttol 002B  
                ___lwdiv@quotient 0106                       ??i1___lwdiv 0015  
                     ??i1___lwmod 0015                          ?_sprintf 0151  
                  __size_of_scale 0614        __end_of_inicioInterrupcoes 63CC  
                  ___wmul@product 0114                          _LATAbits 000F89  
                     ??i1_isdigit 0012                    ??i1_lcd_gotoxy 0016  
                     _contControl 004A                          Lcd_Cmd@a 0101  
                        i1u808_20 3DA2                          i1u808_25 3D9A  
                        i1u809_20 3DC8                          i1u841_20 46A8  
                        i1u809_25 3DC0                          i1u834_20 45D8  
              __end_of__div_to_l_ 3D84                          i1u834_25 45D0  
                        i1u836_20 4604                          i1u836_25 45FC  
                        i1u853_20 50FA                          i1u853_25 50F2  
                        i1u846_20 4926                          i1u846_25 491E  
                        i1u855_20 5126                          i1u855_25 511E  
                        i1u848_20 4952                          i1u848_25 494A  
                        i1u849_20 495E                          i2u529_40 5A88  
                        i2u529_41 5A86                          i1u858_20 5172  
     __end_ofi1_Obtener_Distancia 5B50                          i1u799_20 4DD8  
                     ??i1_sprintf 0078                  __CFG_WDTPS$32768 000000  
         _Configuracion_Registros 63F4             __end_ofi1__tdiv_to_l_ 46DC  
                        i1___ftge 5794                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                       __stringdata 0876  
         __size_of_interrupcaoLOW 008E                 ___wmul@multiplier 0110  
                        i1___wmul 61C8                   i1sprintf@vd_568 0087  
                        i1_fround 3532                         lcd_putc@a 0104  
                       lcd_putc@i 0106                      ??_lcd_gotoxy 0105  
                        _Lcd_Port 618E                  i1__tdiv_to_l_@f1 0011  
                     _control_LED 639E                  i1__tdiv_to_l_@f2 0014  
                        _Read_LDR 4B22                  __size_ofi1_scale 0450  
                __size_of_Lcd_Cmd 0022                 ?i1_lcd_write_char 0012  
         __size_of_lcd_write_char 0052                  __size_of_Init_AD 0014  
                        __Hrparam 0000                ??i1_lcd_write_char 0013  
                        __Lrparam 0000                 i1___awmod@divisor 0013  
                   ??i1___asftadd 004A                __end_of_lcd_gotoxy 5942  
                 control_LED@data 0001                     ??i1___asftmul 0047  
                   ??i1___asftsub 0032                 i1___awmod@counter 0016  
                __size_of___awdiv 0116                  __size_of___ftadd 034C  
                __size_of___awmod 00EE                  __size_of___ftdiv 01C8  
                __size_of___ftneg 003A                  __size_of___lldiv 010A  
                        ___altoft 51BC                  __size_of___ftmul 01EE  
                __size_of___llmod 00D6                  __size_of___ftsub 0042  
                __size_of___fttol 0180                  __size_of___lwdiv 00AA  
                __size_of___lwmod 008A                          ___awtoft 5BCC  
                        ___ftpack 4460                       _fround$1204 0133  
                     _fround$1205 0130                          ___lltoft 56F8  
                     _isdigit$841 0102              __end_ofi1__div_to_l_ 4E0C  
                     ??___asftadd 014B                  __size_of_led_off 0006  
                      sprintf@exp 0175                       ??___asftmul 012C  
                     ??___asftsub 0151                  __size_of_isdigit 003E  
                 ___lwdiv@divisor 0102                   ___lwdiv@counter 0105  
                        __ptext10 5F9C                          __ptext11 5FDE  
                        __ptext20 46DC                          __ptext12 6020  
                        __ptext21 4B22                          __ptext13 3BB0  
                        __ptext30 55A2                          __ptext22 5BCC  
                        __ptext14 37B2                          __ptext31 42E0  
                        __ptext23 39C2                          __ptext15 6062  
                        __ptext40 633E                          __ptext32 3F50  
                        __ptext24 54F4                          __ptext16 2414  
                        __ptext41 618E                          __ptext33 31E6  
                        __ptext25 564E                          __ptext17 2E78  
                        __ptext50 50DC                          __ptext34 51BC  
                        __ptext26 5CA8                          __ptext18 5D70  
                        __ptext51 62D2                          __ptext43 536A  
                        __ptext35 4460                          __ptext27 5E7E  
                        __ptext19 4FEE                          __ptext60 2A28  
                        __ptext52 5794                          __ptext44 16AA  
                        __ptext36 63CC                          __ptext28 58B4  
                        __ptext61 61C8                          __ptext53 45BA  
                        __ptext45 5ED0                          __ptext37 63E0  
                        __ptext29 63B8                          __ptext70 5AD2  
                        __ptext62 5B50                          __ptext54 4D18  
                        __ptext46 5D0C                          __ptext38 63F4  
                        __ptext71 5DD2                          __ptext63 5824  
                        __ptext55 60A0                          __ptext47 5C3E  
                        __ptext39 47F2                          __ptext80 640C  
                        __ptext72 6272                          __ptext64 3532  
                        __ptext56 623C                          __ptext48 59CC  
                        __ptext73 6202                          __ptext65 4EFE  
                        __ptext57 60DC                          __ptext49 62F8  
                        __ptext74 5E28                          __ptext66 4908  
                        __ptext58 6118                          __ptext75 6360  
                        __ptext67 4118                          __ptext59 3D84  
                        __ptext76 62A8                          __ptext68 543C  
                        __ptext69 5F16                          __ptext78 639E  
                        __ptext79 6406                          _isBright 004C  
                        __powers_ 084F                          _lcd_init 47F2  
                        _lcd_putc 5CA8                          _mainLoop 4E0C  
                __size_of_sprintf 0E16                i1___lwdiv@dividend 0011  
                   __size_of_main 001E                       i1Lcd_Port@a 0011  
       ??_Configuracion_Registros 0100                        _LCD_Buffer 0186  
            __size_of_Timer1_Init 0014             __CFG_CPUDIV$OSC1_PLL2 000000  
              i1___lwdiv@quotient 0017               __end_ofi1___asftadd 6154  
             __end_ofi1___asftmul 6118               __end_ofi1___asftsub 60DC  
               i1__div_to_l_@exp1 001D                 i1__div_to_l_@cntr 001C  
               i1__div_to_l_@quot 0018                   _interrupcaoHIGH 0008  
            __end_ofi1_lcd_gotoxy 5E7E                          isdigit@c 0100  
                        scale@scl 0127                          intlevel1 0000  
                        intlevel2 0000                         sprintf@ap 0169  
                __tdiv_to_l_@exp1 0110                         sprintf@vd 0165  
                       sprintf@sp 0151                  __tdiv_to_l_@cntr 010F  
                __tdiv_to_l_@quot 010B                  ___lwmod@dividend 0100  
                ___lldiv@dividend 0100                        i1Lcd_Cmd@a 0012  
                    ?__tdiv_to_l_ 0100                    _interrupcaoLOW 0018  
               _Obtener_Distancia 54F4                          sprintf@c 017E  
                        sprintf@f 0153                  ___lldiv@quotient 0109  
                 ___lwmod@divisor 0102                ?_Obtener_Distancia 0108  
                 ___lwmod@counter 0105                        i1_Lcd_Port 62A8  
                      i1_Read_LDR 4EFE               ??_Obtener_Distancia 010A  
        Obtener_Distancia@Timer_1 010A                    _lcd_write_char 5E7E  
                      _USART_Init 55A2          i1Read_LDR@analog_reading 0075  
