

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Sat Jun 04 20:36:37 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	smallconst
    46  000800                     __psmallconst:
    47                           	opt stack 0
    48  000800                     _dpowers:
    49                           	opt stack 0
    50  000800  0001               	dw	1
    51  000802  0000               	dw	0
    52  000804  000A               	dw	10
    53  000806  0000               	dw	0
    54  000808  0064               	dw	100
    55  00080A  0000               	dw	0
    56  00080C  03E8               	dw	1000
    57  00080E  0000               	dw	0
    58  000810  2710               	dw	10000
    59  000812  0000               	dw	0
    60  000814  86A0               	dw	34464
    61  000816  0001               	dw	1
    62  000818  4240               	dw	16960
    63  00081A  000F               	dw	15
    64  00081C  9680               	dw	38528
    65  00081E  0098               	dw	152
    66  000820  E100               	dw	57600
    67  000822  05F5               	dw	1525
    68  000824  CA00               	dw	51712
    69  000826  3B9A               	dw	15258
    70  000828                     __end_of_dpowers:
    71                           	opt stack 0
    72  000828                     __npowers_:
    73                           	opt stack 0
    74  000828  00                 	db	0
    75  000829  80                 	db	128
    76  00082A  3F                 	db	63
    77  00082B  CD                 	db	205
    78  00082C  CC                 	db	204
    79  00082D  3D                 	db	61
    80  00082E  D7                 	db	215
    81  00082F  23                 	db	35
    82  000830  3C                 	db	60
    83  000831  12                 	db	18
    84  000832  83                 	db	131
    85  000833  3A                 	db	58
    86  000834  B7                 	db	183
    87  000835  D1                 	db	209
    88  000836  38                 	db	56
    89  000837  C6                 	db	198
    90  000838  27                 	db	39
    91  000839  37                 	db	55
    92  00083A  38                 	db	56
    93  00083B  86                 	db	134
    94  00083C  35                 	db	53
    95  00083D  C0                 	db	192
    96  00083E  D6                 	db	214
    97  00083F  33                 	db	51
    98  000840  CC                 	db	204
    99  000841  2B                 	db	43
   100  000842  32                 	db	50
   101  000843  70                 	db	112
   102  000844  89                 	db	137
   103  000845  30                 	db	48
   104  000846  E7                 	db	231
   105  000847  DB                 	db	219
   106  000848  2E                 	db	46
   107  000849  E5                 	db	229
   108  00084A  3C                 	db	60
   109  00084B  1E                 	db	30
   110  00084C  42                 	db	66
   111  00084D  A2                 	db	162
   112  00084E  0D                 	db	13
   113  00084F                     __end_of__npowers_:
   114                           	opt stack 0
   115  00084F                     __powers_:
   116                           	opt stack 0
   117  00084F  00                 	db	0
   118  000850  80                 	db	128
   119  000851  3F                 	db	63
   120  000852  00                 	db	0
   121  000853  20                 	db	32
   122  000854  41                 	db	65
   123  000855  00                 	db	0
   124  000856  C8                 	db	200
   125  000857  42                 	db	66
   126  000858  00                 	db	0
   127  000859  7A                 	db	122
   128  00085A  44                 	db	68
   129  00085B  40                 	db	64
   130  00085C  1C                 	db	28
   131  00085D  46                 	db	70
   132  00085E  50                 	db	80
   133  00085F  C3                 	db	195
   134  000860  47                 	db	71
   135  000861  24                 	db	36
   136  000862  74                 	db	116
   137  000863  49                 	db	73
   138  000864  97                 	db	151
   139  000865  18                 	db	24
   140  000866  4B                 	db	75
   141  000867  BC                 	db	188
   142  000868  BE                 	db	190
   143  000869  4C                 	db	76
   144  00086A  6B                 	db	107
   145  00086B  6E                 	db	110
   146  00086C  4E                 	db	78
   147  00086D  03                 	db	3
   148  00086E  15                 	db	21
   149  00086F  50                 	db	80
   150  000870  79                 	db	121
   151  000871  AD                 	db	173
   152  000872  60                 	db	96
   153  000873  F3                 	db	243
   154  000874  49                 	db	73
   155  000875  71                 	db	113
   156  000876                     __end_of__powers_:
   157                           	opt stack 0
   158  0000                     _ADCON0	set	4034
   159  0000                     _ADCON0bits	set	4034
   160  0000                     _ADCON1	set	4033
   161  0000                     _ADCON2	set	4032
   162  0000                     _ADRESH	set	4036
   163  0000                     _ADRESL	set	4035
   164  0000                     _LATB	set	3978
   165  0000                     _PORTD	set	3971
   166  0000                     _TRISA	set	3986
   167  0000                     _TRISB	set	3987
   168  0000                     _TRISC	set	3988
   169  0000                     _TRISD	set	3989
   170  0000                     _ADON	set	32272
   171  0000                     _GO	set	32273
   172  0000                     _RC0	set	31760
   173  0000                     _RC1	set	31761
   174  0000                     _RC2	set	31762
   175  0000                     _TRISA0	set	31888
   176  000876                     __stringdata:
   177                           	opt stack 0
   178  000876                     STR_1:
   179                           
   180                           ; BSR set to: 0
   181  000876  25                 	db	37
   182  000877  2E                 	db	46
   183  000878  32                 	db	50	;'2'
   184  000879  66                 	db	102	;'f'
   185  00087A  00                 	db	0
   186  00087B                     __end_of__stringdata:
   187                           	opt stack 0
   188  00087B  00                 	db	0	; dummy byte at the end
   189  0000                     
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193  00278C                     __pcinit:
   194                           	opt stack 0
   195  00278C                     start_initialization:
   196                           	opt stack 0
   197  00278C                     __initialization:
   198                           	opt stack 0
   199                           
   200                           ; Clear objects allocated to BANK0 (3 bytes)
   201  00278C  0100               	movlb	0
   202  00278E  6B8B               	clrf	(__pbssBANK0+2)& (0+255),b
   203  002790  6B8A               	clrf	(__pbssBANK0+1)& (0+255),b
   204  002792  6B89               	clrf	__pbssBANK0& (0+255),b
   205                           
   206                           ; Clear objects allocated to COMRAM (2 bytes)
   207  002794  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   208  002796  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   209  002798                     end_of_initialization:
   210                           	opt stack 0
   211  002798                     __end_of__initialization:
   212                           	opt stack 0
   213  002798  0E00               	movlw	low (__Lmediumconst shr (0+16))
   214  00279A  6EF8               	movwf	tblptru,c
   215  00279C  0100               	movlb	0
   216  00279E  EF78  F00A         	goto	_main	;jump to C main() function
   217                           tblptru	equ	0xFF8
   218                           
   219                           	psect	bssCOMRAM
   220  00005C                     __pbssCOMRAM:
   221                           	opt stack 0
   222  00005C                     _i:
   223                           	opt stack 0
   224  00005C                     	ds	2
   225                           tblptru	equ	0xFF8
   226                           
   227                           	psect	bssBANK0
   228  000089                     __pbssBANK0:
   229                           	opt stack 0
   230  000089                     _analog_reading:
   231                           	opt stack 0
   232  000089                     	ds	3
   233                           tblptru	equ	0xFF8
   234                           
   235                           	psect	cstackBANK0
   236  000060                     __pcstackBANK0:
   237                           	opt stack 0
   238  000060                     _sprintf$809:
   239                           	opt stack 0
   240                           
   241                           ; 3 bytes @ 0x0
   242  000060                     	ds	3
   243  000063                     _sprintf$206:
   244                           	opt stack 0
   245                           
   246                           ; 4 bytes @ 0x3
   247  000063                     	ds	4
   248  000067                     sprintf@ap:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x7
   252  000067                     	ds	2
   253  000069                     sprintf@vd:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0x9
   257  000069                     	ds	2
   258  00006B                     sprintf@vd_208:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0xB
   262  00006B                     	ds	2
   263  00006D                     sprintf@flag:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0xD
   267  00006D                     	ds	2
   268  00006F                     sprintf@_val:
   269                           	opt stack 0
   270                           
   271                           ; 5 bytes @ 0xF
   272  00006F                     	ds	5
   273  000074                     sprintf@integ:
   274                           	opt stack 0
   275                           
   276                           ; 3 bytes @ 0x14
   277  000074                     	ds	3
   278  000077                     sprintf@exp:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x17
   282  000077                     	ds	2
   283  000079                     sprintf@prec:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x19
   287  000079                     	ds	2
   288  00007B                     sprintf@fval:
   289                           	opt stack 0
   290                           
   291                           ; 3 bytes @ 0x1B
   292  00007B                     	ds	3
   293  00007E                     sprintf@c:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x1E
   297  00007E                     	ds	1
   298  00007F                     main@mystr:
   299                           	opt stack 0
   300                           
   301                           ; 10 bytes @ 0x1F
   302  00007F                     	ds	10
   303                           tblptru	equ	0xFF8
   304                           
   305                           	psect	cstackCOMRAM
   306  000001                     __pcstackCOMRAM:
   307                           	opt stack 0
   308  000001                     ?_cmd:
   309                           	opt stack 0
   310  000001                     ?_isdigit:
   311                           	opt stack 0
   312  000001                     ?_dat:
   313                           	opt stack 0
   314  000001                     ?___ftge:
   315                           	opt stack 0
   316  000001                     ?___awmod:
   317                           	opt stack 0
   318  000001                     ?___lwmod:
   319                           	opt stack 0
   320  000001                     ?___ftpack:
   321                           	opt stack 0
   322  000001                     ?___ftneg:
   323                           	opt stack 0
   324  000001                     ?__tdiv_to_l_:
   325                           	opt stack 0
   326  000001                     ?__div_to_l_:
   327                           	opt stack 0
   328  000001                     ?___lldiv:
   329                           	opt stack 0
   330  000001                     ?___llmod:
   331                           	opt stack 0
   332  000001                     cmd@a:
   333                           	opt stack 0
   334  000001                     dat@b:
   335                           	opt stack 0
   336  000001                     isdigit@c:
   337                           	opt stack 0
   338  000001                     ___awmod@dividend:
   339                           	opt stack 0
   340  000001                     ___lwmod@dividend:
   341                           	opt stack 0
   342  000001                     __div_to_l_@f1:
   343                           	opt stack 0
   344  000001                     ___ftpack@arg:
   345                           	opt stack 0
   346  000001                     __tdiv_to_l_@f1:
   347                           	opt stack 0
   348  000001                     ___ftge@ff1:
   349                           	opt stack 0
   350  000001                     ___ftneg@f1:
   351                           	opt stack 0
   352  000001                     ___lldiv@dividend:
   353                           	opt stack 0
   354  000001                     ___llmod@dividend:
   355                           	opt stack 0
   356                           
   357                           ; 4 bytes @ 0x0
   358  000001                     	ds	1
   359  000002                     ??_lcd_int:
   360  000002                     ?_show:
   361                           	opt stack 0
   362  000002                     ??_isdigit:
   363  000002                     show@s:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x1
   367  000002                     	ds	1
   368  000003                     _isdigit$481:
   369                           	opt stack 0
   370  000003                     ___awmod@divisor:
   371                           	opt stack 0
   372  000003                     ___lwmod@divisor:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x2
   376  000003                     	ds	1
   377  000004                     ___ftpack@exp:
   378                           	opt stack 0
   379  000004                     __div_to_l_@f2:
   380                           	opt stack 0
   381  000004                     __tdiv_to_l_@f2:
   382                           	opt stack 0
   383  000004                     ___ftge@ff2:
   384                           	opt stack 0
   385                           
   386                           ; 3 bytes @ 0x3
   387  000004                     	ds	1
   388  000005                     ??___awmod:
   389  000005                     ??___lwmod:
   390  000005                     ___ftpack@sign:
   391                           	opt stack 0
   392  000005                     ___lldiv@divisor:
   393                           	opt stack 0
   394  000005                     ___llmod@divisor:
   395                           	opt stack 0
   396                           
   397                           ; 4 bytes @ 0x4
   398  000005                     	ds	1
   399  000006                     ??___ftpack:
   400  000006                     ___awmod@counter:
   401                           	opt stack 0
   402  000006                     ___lwmod@counter:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x5
   406  000006                     	ds	1
   407  000007                     ??__tdiv_to_l_:
   408  000007                     ??__div_to_l_:
   409  000007                     ??___ftge:
   410  000007                     ___awmod@sign:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x6
   414  000007                     	ds	1
   415  000008                     ?___awdiv:
   416                           	opt stack 0
   417  000008                     ___awdiv@dividend:
   418                           	opt stack 0
   419  000008                     __div_to_l_@quot:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x7
   423  000008                     	ds	1
   424  000009                     ??___lldiv:
   425  000009                     ??___llmod:
   426  000009                     ?___ftadd:
   427                           	opt stack 0
   428  000009                     ?___awtoft:
   429                           	opt stack 0
   430  000009                     ?___lltoft:
   431                           	opt stack 0
   432  000009                     ___awtoft@c:
   433                           	opt stack 0
   434  000009                     ___ftadd@f1:
   435                           	opt stack 0
   436  000009                     ___lltoft@c:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x8
   440  000009                     	ds	1
   441  00000A                     ___llmod@counter:
   442                           	opt stack 0
   443  00000A                     ___awdiv@divisor:
   444                           	opt stack 0
   445  00000A                     ___lldiv@quotient:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x9
   449  00000A                     	ds	2
   450  00000C                     ??___awdiv:
   451  00000C                     ??___awtoft:
   452  00000C                     __div_to_l_@cntr:
   453                           	opt stack 0
   454  00000C                     ___ftadd@f2:
   455                           	opt stack 0
   456  00000C                     __tdiv_to_l_@quot:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0xB
   460  00000C                     	ds	1
   461  00000D                     ??___lltoft:
   462  00000D                     ___awdiv@counter:
   463                           	opt stack 0
   464  00000D                     ___awtoft@sign:
   465                           	opt stack 0
   466  00000D                     __div_to_l_@exp1:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0xC
   470  00000D                     	ds	1
   471  00000E                     ___awdiv@sign:
   472                           	opt stack 0
   473  00000E                     ___lldiv@counter:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0xD
   477  00000E                     	ds	1
   478  00000F                     ??___ftadd:
   479  00000F                     ___awdiv@quotient:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0xE
   483  00000F                     	ds	1
   484  000010                     __tdiv_to_l_@cntr:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0xF
   488  000010                     	ds	1
   489  000011                     ?___wmul:
   490                           	opt stack 0
   491  000011                     __tdiv_to_l_@exp1:
   492                           	opt stack 0
   493  000011                     ___lltoft@exp:
   494                           	opt stack 0
   495  000011                     ___wmul@multiplier:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x10
   499  000011                     	ds	2
   500  000013                     ___wmul@multiplicand:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x12
   504  000013                     	ds	1
   505  000014                     ___ftadd@sign:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x13
   509  000014                     	ds	1
   510  000015                     ___ftadd@exp2:
   511                           	opt stack 0
   512  000015                     ___wmul@product:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x14
   516  000015                     	ds	1
   517  000016                     ___ftadd@exp1:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x15
   521  000016                     	ds	1
   522  000017                     ?___ftsub:
   523                           	opt stack 0
   524  000017                     ?___fttol:
   525                           	opt stack 0
   526  000017                     ___ftsub@f1:
   527                           	opt stack 0
   528  000017                     ___fttol@f1:
   529                           	opt stack 0
   530                           
   531                           ; 3 bytes @ 0x16
   532  000017                     	ds	3
   533  00001A                     ___ftsub@f2:
   534                           	opt stack 0
   535                           
   536                           ; 3 bytes @ 0x19
   537  00001A                     	ds	1
   538  00001B                     ??___fttol:
   539                           
   540                           ; 0 bytes @ 0x1A
   541  00001B                     	ds	2
   542  00001D                     ?___asftsub:
   543                           	opt stack 0
   544  00001D                     ___asftsub@f1p:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x1C
   548  00001D                     	ds	2
   549  00001F                     ___asftsub@f2:
   550                           	opt stack 0
   551                           
   552                           ; 3 bytes @ 0x1E
   553  00001F                     	ds	1
   554  000020                     ___fttol@sign1:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x1F
   558  000020                     	ds	1
   559  000021                     ___fttol@lval:
   560                           	opt stack 0
   561                           
   562                           ; 4 bytes @ 0x20
   563  000021                     	ds	1
   564  000022                     
   565                           ; 0 bytes @ 0x21
   566  000022                     	ds	3
   567  000025                     ___fttol@exp1:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x24
   571  000025                     	ds	1
   572  000026                     ?___ftmul:
   573                           	opt stack 0
   574  000026                     ___ftmul@f1:
   575                           	opt stack 0
   576                           
   577                           ; 3 bytes @ 0x25
   578  000026                     	ds	3
   579  000029                     ___ftmul@f2:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0x28
   583  000029                     	ds	3
   584  00002C                     ??___ftmul:
   585                           
   586                           ; 0 bytes @ 0x2B
   587  00002C                     	ds	5
   588  000031                     ___ftmul@exp:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x30
   592  000031                     	ds	1
   593  000032                     ___ftmul@f3_as_product:
   594                           	opt stack 0
   595                           
   596                           ; 3 bytes @ 0x31
   597  000032                     	ds	3
   598  000035                     ___ftmul@cntr:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0x34
   602  000035                     	ds	1
   603  000036                     ___ftmul@sign:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x35
   607  000036                     	ds	1
   608  000037                     ?___ftdiv:
   609                           	opt stack 0
   610  000037                     ?_fround:
   611                           	opt stack 0
   612  000037                     ?_scale:
   613                           	opt stack 0
   614  000037                     ?___asftmul:
   615                           	opt stack 0
   616  000037                     fround@prec:
   617                           	opt stack 0
   618  000037                     scale@scl:
   619                           	opt stack 0
   620  000037                     ___asftmul@f1p:
   621                           	opt stack 0
   622  000037                     ___ftdiv@f1:
   623                           	opt stack 0
   624                           
   625                           ; 3 bytes @ 0x36
   626  000037                     	ds	2
   627  000039                     ___asftmul@f2:
   628                           	opt stack 0
   629                           
   630                           ; 3 bytes @ 0x38
   631  000039                     	ds	1
   632  00003A                     ??_fround:
   633  00003A                     ??_scale:
   634  00003A                     ___ftdiv@f2:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x39
   638  00003A                     	ds	2
   639  00003C                     
   640                           ; 0 bytes @ 0x3B
   641  00003C                     	ds	1
   642  00003D                     ??___ftdiv:
   643                           
   644                           ; 0 bytes @ 0x3C
   645  00003D                     	ds	3
   646  000040                     _fround$807:
   647                           	opt stack 0
   648  000040                     _scale$808:
   649                           	opt stack 0
   650                           
   651                           ; 3 bytes @ 0x3F
   652  000040                     	ds	2
   653  000042                     ___ftdiv@cntr:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x41
   657  000042                     	ds	1
   658  000043                     ___ftdiv@f3:
   659                           	opt stack 0
   660  000043                     _fround$806:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x42
   664  000043                     	ds	3
   665  000046                     ?___asftadd:
   666                           	opt stack 0
   667  000046                     ___ftdiv@exp:
   668                           	opt stack 0
   669  000046                     ___asftadd@f1p:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x45
   673  000046                     	ds	1
   674  000047                     ___ftdiv@sign:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x46
   678  000047                     	ds	1
   679  000048                     ___asftadd@f2:
   680                           	opt stack 0
   681                           
   682                           ; 3 bytes @ 0x47
   683  000048                     	ds	3
   684  00004B                     ?_sprintf:
   685                           	opt stack 0
   686  00004B                     sprintf@sp:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x4A
   690  00004B                     	ds	2
   691  00004D                     sprintf@f:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x4C
   695  00004D                     	ds	5
   696  000052                     ??_sprintf:
   697                           
   698                           ; 0 bytes @ 0x51
   699  000052                     	ds	6
   700  000058                     ??_main:
   701                           
   702                           ; 0 bytes @ 0x57
   703  000058                     	ds	4
   704                           tblptru	equ	0xFF8
   705                           
   706 ;;
   707 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   708 ;;
   709 ;; *************** function _main *****************
   710 ;; Defined at:
   711 ;;		line 27 in file "main.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  mystr          10   31[BANK0 ] unsigned char [10]
   716 ;; Return value:  Size  Location     Type
   717 ;;		None               void
   718 ;; Registers used:
   719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   725 ;;      Params:         0       0       0       0       0       0       0       0       0
   726 ;;      Locals:         0      10       0       0       0       0       0       0       0
   727 ;;      Temps:          4       0       0       0       0       0       0       0       0
   728 ;;      Totals:         4      10       0       0       0       0       0       0       0
   729 ;;Total ram usage:       14 bytes
   730 ;; Hardware stack levels required when called:    5
   731 ;; This function calls:
   732 ;;		_Init_AD
   733 ;;		_lcd_int
   734 ;;		_cmd
   735 ;;		_sprintf
   736 ;;		_show
   737 ;;		___ftdiv
   738 ;;		___ftmul
   739 ;;		___awtoft
   740 ;;		___ftge
   741 ;; This function is called by:
   742 ;;		Startup code after reset
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text0
   747  0014F0                     __ptext0:
   748                           	opt stack 0
   749  0014F0                     _main:
   750                           	opt stack 26
   751                           
   752                           ;main.c: 28: Init_AD();
   753                           
   754                           ; BSR set to: 0
   755                           ;incstack = 0
   756                           ;incstack = 0
   757  0014F0  ECD1  F013         	call	_Init_AD	;wreg free
   758                           
   759                           ;main.c: 30: TRISD = TRISC = 0;
   760  0014F4  0E00               	movlw	0
   761  0014F6  6E94               	movwf	3988,c	;volatile
   762  0014F8  CF94 FF95          	movff	3988,3989	;volatile
   763                           
   764                           ;main.c: 31: TRISB = 0;
   765  0014FC  0E00               	movlw	0
   766  0014FE  6E93               	movwf	3987,c	;volatile
   767                           
   768                           ;main.c: 32: TRISA0 = 1;
   769  001500  8092               	bsf	3986,0,c	;volatile
   770                           
   771                           ;main.c: 33: lcd_int();
   772  001502  EC49  F013         	call	_lcd_int	;wreg free
   773  001506                     l4155:
   774                           
   775                           ;main.c: 36: cmd(0x80);
   776  001506  6E58               	movwf	??_main& (0+255),c
   777  001508  0E80               	movlw	128
   778  00150A  6E01               	movwf	?_cmd,c
   779  00150C  5058               	movf	??_main& (0+255),w,c
   780  00150E  EC78  F013         	call	_cmd	;wreg free
   781                           
   782                           ;main.c: 37: ADCON0 |= ((1 << ADON) | (1 << GO));
   783  001512  0E00               	movlw	0
   784  001514  B2C2               	btfsc	4034,1,c	;volatile
   785  001516  0E01               	movlw	1
   786  001518  6E58               	movwf	??_main& (0+255),c
   787  00151A  0E01               	movlw	1
   788  00151C  6E59               	movwf	(??_main+1)& (0+255),c
   789  00151E  2A58               	incf	??_main,f,c
   790  001520  D002               	goto	u2934
   791  001522                     u2935:
   792  001522  90D8               	bcf	status,0,c
   793  001524  3659               	rlcf	??_main+1,f,c
   794  001526                     u2934:
   795  001526  2E58               	decfsz	??_main,f,c
   796  001528  D7FC               	goto	u2935
   797  00152A  0E00               	movlw	0
   798  00152C  B0C2               	btfsc	4034,0,c	;volatile
   799  00152E  0E01               	movlw	1
   800  001530  6E5A               	movwf	(??_main+2)& (0+255),c
   801  001532  0E01               	movlw	1
   802  001534  6E5B               	movwf	(??_main+3)& (0+255),c
   803  001536  2A5A               	incf	??_main+2,f,c
   804  001538  D002               	goto	u2944
   805  00153A                     u2945:
   806  00153A  90D8               	bcf	status,0,c
   807  00153C  365B               	rlcf	??_main+3,f,c
   808  00153E                     u2944:
   809  00153E  2E5A               	decfsz	??_main+2,f,c
   810  001540  D7FC               	goto	u2945
   811  001542  505B               	movf	??_main+3,w,c
   812  001544  1059               	iorwf	??_main+1,w,c
   813  001546  12C2               	iorwf	4034,f,c	;volatile
   814  001548                     l55:
   815  001548  B2C2               	btfsc	4034,1,c	;volatile
   816  00154A  D7FE               	goto	l55
   817                           
   818                           ;main.c: 39: analog_reading = (ADRESH * 256) + (ADRESL);
   819  00154C  50C4               	movf	4036,w,c	;volatile
   820  00154E  6E59               	movwf	(??_main+1)& (0+255),c
   821  001550  6A58               	clrf	??_main& (0+255),c
   822  001552  50C3               	movf	4035,w,c	;volatile
   823  001554  2458               	addwf	??_main,w,c
   824  001556  6E09               	movwf	?___awtoft,c
   825  001558  0E00               	movlw	0
   826  00155A  2059               	addwfc	??_main+1,w,c
   827  00155C  6E0A               	movwf	?___awtoft+1,c
   828  00155E  EC95  F012         	call	___awtoft	;wreg free
   829  001562  C00B  F08B         	movff	?___awtoft+2,_analog_reading+2
   830  001566  C00A  F08A         	movff	?___awtoft+1,_analog_reading+1
   831  00156A  C009  F089         	movff	?___awtoft,_analog_reading
   832                           
   833                           ;main.c: 40: analog_reading = analog_reading*5/1023;
   834  00156E  0E00               	movlw	0
   835  001570  6E29               	movwf	?___ftmul+3,c
   836  001572  0EA0               	movlw	160
   837  001574  6E2A               	movwf	?___ftmul+4,c
   838  001576  0E40               	movlw	64
   839  001578  6E2B               	movwf	?___ftmul+5,c
   840  00157A  C089  F026         	movff	_analog_reading,?___ftmul
   841  00157E  C08A  F027         	movff	_analog_reading+1,?___ftmul+1
   842  001582  C08B  F028         	movff	_analog_reading+2,?___ftmul+2
   843  001586  ECAD  F00E         	call	___ftmul	;wreg free
   844  00158A  C028  F039         	movff	?___ftmul+2,?___ftdiv+2
   845  00158E  C027  F038         	movff	?___ftmul+1,?___ftdiv+1
   846  001592  C026  F037         	movff	?___ftmul,?___ftdiv
   847  001596  0EC0               	movlw	192
   848  001598  6E3A               	movwf	?___ftdiv+3,c
   849  00159A  0E7F               	movlw	127
   850  00159C  6E3B               	movwf	?___ftdiv+4,c
   851  00159E  0E44               	movlw	68
   852  0015A0  6E3C               	movwf	?___ftdiv+5,c
   853  0015A2  EC35  F00F         	call	___ftdiv	;wreg free
   854  0015A6  C039  F08B         	movff	?___ftdiv+2,_analog_reading+2
   855  0015AA  C038  F08A         	movff	?___ftdiv+1,_analog_reading+1
   856  0015AE  C037  F089         	movff	?___ftdiv,_analog_reading
   857                           
   858                           ;main.c: 41: char mystr[10];
   859                           ;main.c: 42: sprintf(mystr, "%.2f", analog_reading);
   860  0015B2  0100               	movlb	0	; () banked
   861  0015B4  0E00               	movlw	high main@mystr
   862  0015B6  6E4C               	movwf	?_sprintf+1,c
   863  0015B8  0100               	movlb	0	; () banked
   864  0015BA  0E7F               	movlw	low main@mystr
   865  0015BC  6E4B               	movwf	?_sprintf,c
   866  0015BE  0E08               	movlw	high STR_1
   867  0015C0  6E4E               	movwf	?_sprintf+3,c
   868  0015C2  0E76               	movlw	low STR_1
   869  0015C4  6E4D               	movwf	?_sprintf+2,c
   870  0015C6  C089  F04F         	movff	_analog_reading,?_sprintf+4
   871  0015CA  C08A  F050         	movff	_analog_reading+1,?_sprintf+5
   872  0015CE  C08B  F051         	movff	_analog_reading+2,?_sprintf+6
   873  0015D2  EC3E  F004         	call	_sprintf	;wreg free
   874                           
   875                           ;main.c: 43: show(mystr);
   876  0015D6  0100               	movlb	0	; () banked
   877  0015D8  0E00               	movlw	high main@mystr
   878  0015DA  6E03               	movwf	?_show+1,c
   879  0015DC  0100               	movlb	0	; () banked
   880  0015DE  0E7F               	movlw	low main@mystr
   881  0015E0  6E02               	movwf	?_show,c
   882  0015E2  EC8E  F013         	call	_show	;wreg free
   883                           
   884                           ;main.c: 44: if (analog_reading > 0 && analog_reading < 10) {
   885  0015E6  0E00               	movlw	0
   886  0015E8  6E01               	movwf	?___ftge,c
   887  0015EA  0E00               	movlw	0
   888  0015EC  6E02               	movwf	?___ftge+1,c
   889  0015EE  0E00               	movlw	0
   890  0015F0  6E03               	movwf	?___ftge+2,c
   891  0015F2  C089  F004         	movff	_analog_reading,?___ftge+3
   892  0015F6  C08A  F005         	movff	_analog_reading+1,?___ftge+4
   893  0015FA  C08B  F006         	movff	_analog_reading+2,?___ftge+5
   894  0015FE  ECFA  F010         	call	___ftge	;wreg free
   895  001602  B0D8               	btfsc	status,0,c
   896  001604  D012               	goto	l4171
   897  001606  C089  F001         	movff	_analog_reading,?___ftge
   898  00160A  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   899  00160E  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   900  001612  0E00               	movlw	0
   901  001614  6E04               	movwf	?___ftge+3,c
   902  001616  0E20               	movlw	32
   903  001618  6E05               	movwf	?___ftge+4,c
   904  00161A  0E41               	movlw	65
   905  00161C  6E06               	movwf	?___ftge+5,c
   906  00161E  ECFA  F010         	call	___ftge	;wreg free
   907  001622  B0D8               	btfsc	status,0,c
   908  001624  D002               	goto	l4171
   909                           
   910                           ;main.c: 45: LATB = 0x80;
   911  001626  0E80               	movlw	128
   912  001628  D0DF               	goto	L7
   913  00162A                     l4171:
   914  00162A  C089  F001         	movff	_analog_reading,?___ftge
   915  00162E  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   916  001632  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   917  001636  0E00               	movlw	0
   918  001638  6E04               	movwf	?___ftge+3,c
   919  00163A  0E20               	movlw	32
   920  00163C  6E05               	movwf	?___ftge+4,c
   921  00163E  0E41               	movlw	65
   922  001640  6E06               	movwf	?___ftge+5,c
   923  001642  ECFA  F010         	call	___ftge	;wreg free
   924  001646  A0D8               	btfss	status,0,c
   925  001648  D012               	goto	l4177
   926  00164A  C089  F001         	movff	_analog_reading,?___ftge
   927  00164E  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   928  001652  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   929  001656  0E00               	movlw	0
   930  001658  6E04               	movwf	?___ftge+3,c
   931  00165A  0EA0               	movlw	160
   932  00165C  6E05               	movwf	?___ftge+4,c
   933  00165E  0E41               	movlw	65
   934  001660  6E06               	movwf	?___ftge+5,c
   935  001662  ECFA  F010         	call	___ftge	;wreg free
   936  001666  B0D8               	btfsc	status,0,c
   937  001668  D002               	goto	l4177
   938                           
   939                           ;main.c: 47: LATB = 0xC0;
   940  00166A  0EC0               	movlw	192
   941  00166C  D0BD               	goto	L7
   942  00166E                     l4177:
   943  00166E  C089  F001         	movff	_analog_reading,?___ftge
   944  001672  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   945  001676  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   946  00167A  0E00               	movlw	0
   947  00167C  6E04               	movwf	?___ftge+3,c
   948  00167E  0EA0               	movlw	160
   949  001680  6E05               	movwf	?___ftge+4,c
   950  001682  0E41               	movlw	65
   951  001684  6E06               	movwf	?___ftge+5,c
   952  001686  ECFA  F010         	call	___ftge	;wreg free
   953  00168A  A0D8               	btfss	status,0,c
   954  00168C  D012               	goto	l4183
   955  00168E  C089  F001         	movff	_analog_reading,?___ftge
   956  001692  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   957  001696  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   958  00169A  0E00               	movlw	0
   959  00169C  6E04               	movwf	?___ftge+3,c
   960  00169E  0EF0               	movlw	240
   961  0016A0  6E05               	movwf	?___ftge+4,c
   962  0016A2  0E41               	movlw	65
   963  0016A4  6E06               	movwf	?___ftge+5,c
   964  0016A6  ECFA  F010         	call	___ftge	;wreg free
   965  0016AA  B0D8               	btfsc	status,0,c
   966  0016AC  D002               	goto	l4183
   967                           
   968                           ;main.c: 49: LATB = 0xE0;
   969  0016AE  0EE0               	movlw	224
   970  0016B0  D09B               	goto	L7
   971  0016B2                     l4183:
   972  0016B2  C089  F001         	movff	_analog_reading,?___ftge
   973  0016B6  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   974  0016BA  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   975  0016BE  0E00               	movlw	0
   976  0016C0  6E04               	movwf	?___ftge+3,c
   977  0016C2  0EF0               	movlw	240
   978  0016C4  6E05               	movwf	?___ftge+4,c
   979  0016C6  0E41               	movlw	65
   980  0016C8  6E06               	movwf	?___ftge+5,c
   981  0016CA  ECFA  F010         	call	___ftge	;wreg free
   982  0016CE  A0D8               	btfss	status,0,c
   983  0016D0  D012               	goto	l4189
   984  0016D2  C089  F001         	movff	_analog_reading,?___ftge
   985  0016D6  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   986  0016DA  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   987  0016DE  0E00               	movlw	0
   988  0016E0  6E04               	movwf	?___ftge+3,c
   989  0016E2  0E20               	movlw	32
   990  0016E4  6E05               	movwf	?___ftge+4,c
   991  0016E6  0E42               	movlw	66
   992  0016E8  6E06               	movwf	?___ftge+5,c
   993  0016EA  ECFA  F010         	call	___ftge	;wreg free
   994  0016EE  B0D8               	btfsc	status,0,c
   995  0016F0  D002               	goto	l4189
   996                           
   997                           ;main.c: 51: LATB = 0xF0;
   998  0016F2  0EF0               	movlw	240
   999  0016F4  D079               	goto	L7
  1000  0016F6                     l4189:
  1001  0016F6  C089  F001         	movff	_analog_reading,?___ftge
  1002  0016FA  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1003  0016FE  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1004  001702  0E00               	movlw	0
  1005  001704  6E04               	movwf	?___ftge+3,c
  1006  001706  0E20               	movlw	32
  1007  001708  6E05               	movwf	?___ftge+4,c
  1008  00170A  0E42               	movlw	66
  1009  00170C  6E06               	movwf	?___ftge+5,c
  1010  00170E  ECFA  F010         	call	___ftge	;wreg free
  1011  001712  A0D8               	btfss	status,0,c
  1012  001714  D012               	goto	l4195
  1013  001716  C089  F001         	movff	_analog_reading,?___ftge
  1014  00171A  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1015  00171E  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1016  001722  0E00               	movlw	0
  1017  001724  6E04               	movwf	?___ftge+3,c
  1018  001726  0E48               	movlw	72
  1019  001728  6E05               	movwf	?___ftge+4,c
  1020  00172A  0E42               	movlw	66
  1021  00172C  6E06               	movwf	?___ftge+5,c
  1022  00172E  ECFA  F010         	call	___ftge	;wreg free
  1023  001732  B0D8               	btfsc	status,0,c
  1024  001734  D002               	goto	l4195
  1025                           
  1026                           ;main.c: 53: LATB = 0xF8;
  1027  001736  0EF8               	movlw	248
  1028  001738  D057               	goto	L7
  1029  00173A                     l4195:
  1030  00173A  C089  F001         	movff	_analog_reading,?___ftge
  1031  00173E  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1032  001742  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1033  001746  0E00               	movlw	0
  1034  001748  6E04               	movwf	?___ftge+3,c
  1035  00174A  0E48               	movlw	72
  1036  00174C  6E05               	movwf	?___ftge+4,c
  1037  00174E  0E42               	movlw	66
  1038  001750  6E06               	movwf	?___ftge+5,c
  1039  001752  ECFA  F010         	call	___ftge	;wreg free
  1040  001756  A0D8               	btfss	status,0,c
  1041  001758  D012               	goto	l4201
  1042  00175A  C089  F001         	movff	_analog_reading,?___ftge
  1043  00175E  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1044  001762  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1045  001766  0E00               	movlw	0
  1046  001768  6E04               	movwf	?___ftge+3,c
  1047  00176A  0E70               	movlw	112
  1048  00176C  6E05               	movwf	?___ftge+4,c
  1049  00176E  0E42               	movlw	66
  1050  001770  6E06               	movwf	?___ftge+5,c
  1051  001772  ECFA  F010         	call	___ftge	;wreg free
  1052  001776  B0D8               	btfsc	status,0,c
  1053  001778  D002               	goto	l4201
  1054                           
  1055                           ;main.c: 55: LATB = 0xFC;
  1056  00177A  0EFC               	movlw	252
  1057  00177C  D035               	goto	L7
  1058  00177E                     l4201:
  1059  00177E  C089  F001         	movff	_analog_reading,?___ftge
  1060  001782  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1061  001786  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1062  00178A  0E00               	movlw	0
  1063  00178C  6E04               	movwf	?___ftge+3,c
  1064  00178E  0E70               	movlw	112
  1065  001790  6E05               	movwf	?___ftge+4,c
  1066  001792  0E42               	movlw	66
  1067  001794  6E06               	movwf	?___ftge+5,c
  1068  001796  ECFA  F010         	call	___ftge	;wreg free
  1069  00179A  A0D8               	btfss	status,0,c
  1070  00179C  D012               	goto	l4207
  1071  00179E  C089  F001         	movff	_analog_reading,?___ftge
  1072  0017A2  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1073  0017A6  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1074  0017AA  0E00               	movlw	0
  1075  0017AC  6E04               	movwf	?___ftge+3,c
  1076  0017AE  0E8C               	movlw	140
  1077  0017B0  6E05               	movwf	?___ftge+4,c
  1078  0017B2  0E42               	movlw	66
  1079  0017B4  6E06               	movwf	?___ftge+5,c
  1080  0017B6  ECFA  F010         	call	___ftge	;wreg free
  1081  0017BA  B0D8               	btfsc	status,0,c
  1082  0017BC  D002               	goto	l4207
  1083                           
  1084                           ;main.c: 57: LATB = 0xFE;
  1085  0017BE  0EFE               	movlw	254
  1086  0017C0  D013               	goto	L7
  1087  0017C2                     l4207:
  1088  0017C2  C089  F001         	movff	_analog_reading,?___ftge
  1089  0017C6  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1090  0017CA  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1091  0017CE  0E00               	movlw	0
  1092  0017D0  6E04               	movwf	?___ftge+3,c
  1093  0017D2  0E8C               	movlw	140
  1094  0017D4  6E05               	movwf	?___ftge+4,c
  1095  0017D6  0E42               	movlw	66
  1096  0017D8  6E06               	movwf	?___ftge+5,c
  1097  0017DA  ECFA  F010         	call	___ftge	;wreg free
  1098  0017DE  A0D8               	btfss	status,0,c
  1099  0017E0  D002               	goto	l4211
  1100                           
  1101                           ;main.c: 59: LATB = 0xFF;
  1102  0017E2  688A               	setf	3978,c	;volatile
  1103                           
  1104                           ;main.c: 60: } else {
  1105  0017E4  D690               	goto	l4155
  1106  0017E6                     l4211:
  1107                           
  1108                           ;main.c: 61: LATB = 0x00;
  1109  0017E6  0E00               	movlw	0
  1110  0017E8                     L7:
  1111  0017E8  6E8A               	movwf	3978,c	;volatile
  1112  0017EA  D68D               	goto	l4155
  1113  0017EC                     __end_of_main:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           status	equ	0xFD8
  1117                           
  1118 ;; *************** function ___awtoft *****************
  1119 ;; Defined at:
  1120 ;;		line 33 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\awtoft.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  c               2    8[COMRAM] int 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  sign            1   12[COMRAM] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  3    8[COMRAM] float 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1134 ;;      Params:         3       0       0       0       0       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1136 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1137 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1138 ;;Total ram usage:        5 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    1
  1141 ;; This function calls:
  1142 ;;		___ftpack
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text1
  1149  00252A                     __ptext1:
  1150                           	opt stack 0
  1151  00252A                     ___awtoft:
  1152                           	opt stack 29
  1153                           
  1154                           ;incstack = 0
  1155                           ;incstack = 0
  1156  00252A  6E0C               	movwf	??___awtoft& (0+255),c
  1157  00252C  0E00               	movlw	0
  1158  00252E  6E0D               	movwf	___awtoft@sign,c
  1159  002530  500C               	movf	??___awtoft& (0+255),w,c
  1160  002532  AE0A               	btfss	___awtoft@c+1,7,c
  1161  002534  D008               	goto	l3767
  1162  002536  6C09               	negf	___awtoft@c,c
  1163  002538  1E0A               	comf	___awtoft@c+1,f,c
  1164  00253A  B0D8               	btfsc	status,0,c
  1165  00253C  2A0A               	incf	___awtoft@c+1,f,c
  1166  00253E  6E0C               	movwf	??___awtoft& (0+255),c
  1167  002540  0E01               	movlw	1
  1168  002542  6E0D               	movwf	___awtoft@sign,c
  1169  002544  500C               	movf	??___awtoft& (0+255),w,c
  1170  002546                     l3767:
  1171  002546  C009  F001         	movff	___awtoft@c,?___ftpack
  1172  00254A  C00A  F002         	movff	___awtoft@c+1,?___ftpack+1
  1173  00254E  6A03               	clrf	?___ftpack+2,c
  1174  002550  6E0C               	movwf	??___awtoft& (0+255),c
  1175  002552  0E8E               	movlw	142
  1176  002554  6E04               	movwf	?___ftpack+3,c
  1177  002556  500C               	movf	??___awtoft& (0+255),w,c
  1178  002558  C00D  F005         	movff	___awtoft@sign,?___ftpack+4
  1179  00255C  EC9E  F010         	call	___ftpack	;wreg free
  1180  002560  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1181  002564  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1182  002568  C001  F009         	movff	?___ftpack,?___awtoft
  1183  00256C  0012               	return	
  1184  00256E                     __end_of___awtoft:
  1185                           	opt stack 0
  1186                           tblptru	equ	0xFF8
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function ___ftdiv *****************
  1190 ;; Defined at:
  1191 ;;		line 50 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftdiv.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  f1              3   54[COMRAM] float 
  1194 ;;  f2              3   57[COMRAM] float 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  f3              3   66[COMRAM] float 
  1197 ;;  sign            1   70[COMRAM] unsigned char 
  1198 ;;  exp             1   69[COMRAM] unsigned char 
  1199 ;;  cntr            1   65[COMRAM] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  3   54[COMRAM] float 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1209 ;;      Params:         6       0       0       0       0       0       0       0       0
  1210 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1211 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1212 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1213 ;;Total ram usage:       17 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    1
  1216 ;; This function calls:
  1217 ;;		___ftpack
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text2
  1224  001E6A                     __ptext2:
  1225                           	opt stack 0
  1226  001E6A                     ___ftdiv:
  1227                           	opt stack 29
  1228                           
  1229                           ;incstack = 0
  1230                           ;incstack = 0
  1231  001E6A  0E0F               	movlw	15
  1232  001E6C  6E3D               	movwf	??___ftdiv& (0+255),c
  1233  001E6E  C037  F03E         	movff	___ftdiv@f1,??___ftdiv+1
  1234  001E72  C038  F03F         	movff	___ftdiv@f1+1,??___ftdiv+2
  1235  001E76  C039  F040         	movff	___ftdiv@f1+2,??___ftdiv+3
  1236  001E7A  283D               	incf	??___ftdiv,w,c
  1237  001E7C  6E41               	movwf	(??___ftdiv+4)& (0+255),c
  1238  001E7E  D004               	goto	u2420
  1239  001E80                     u2425:
  1240  001E80  90D8               	bcf	status,0,c
  1241  001E82  3240               	rrcf	??___ftdiv+3,f,c
  1242  001E84  323F               	rrcf	??___ftdiv+2,f,c
  1243  001E86  323E               	rrcf	??___ftdiv+1,f,c
  1244  001E88                     u2420:
  1245  001E88  2E41               	decfsz	(??___ftdiv+4)& (0+255),f,c
  1246  001E8A  D7FA               	goto	u2425
  1247  001E8C  503E               	movf	??___ftdiv+1,w,c
  1248  001E8E  6E46               	movwf	___ftdiv@exp,c
  1249  001E90  6646               	tstfsz	___ftdiv@exp& (0+255),c
  1250  001E92  D001               	goto	l3791
  1251  001E94  D015               	goto	u2450
  1252  001E96                     l3791:
  1253  001E96  0E0F               	movlw	15
  1254  001E98  6E3D               	movwf	??___ftdiv& (0+255),c
  1255  001E9A  C03A  F03E         	movff	___ftdiv@f2,??___ftdiv+1
  1256  001E9E  C03B  F03F         	movff	___ftdiv@f2+1,??___ftdiv+2
  1257  001EA2  C03C  F040         	movff	___ftdiv@f2+2,??___ftdiv+3
  1258  001EA6  283D               	incf	??___ftdiv,w,c
  1259  001EA8  6E41               	movwf	(??___ftdiv+4)& (0+255),c
  1260  001EAA  D004               	goto	u2440
  1261  001EAC                     u2445:
  1262  001EAC  90D8               	bcf	status,0,c
  1263  001EAE  3240               	rrcf	??___ftdiv+3,f,c
  1264  001EB0  323F               	rrcf	??___ftdiv+2,f,c
  1265  001EB2  323E               	rrcf	??___ftdiv+1,f,c
  1266  001EB4                     u2440:
  1267  001EB4  2E41               	decfsz	(??___ftdiv+4)& (0+255),f,c
  1268  001EB6  D7FA               	goto	u2445
  1269  001EB8  503E               	movf	??___ftdiv+1,w,c
  1270  001EBA  6E47               	movwf	___ftdiv@sign,c
  1271  001EBC  6647               	tstfsz	___ftdiv@sign& (0+255),c
  1272  001EBE  D007               	goto	l3797
  1273  001EC0                     u2450:
  1274  001EC0  0E00               	movlw	0
  1275  001EC2  6E37               	movwf	?___ftdiv,c
  1276  001EC4  0E00               	movlw	0
  1277  001EC6  6E38               	movwf	?___ftdiv+1,c
  1278  001EC8  0E00               	movlw	0
  1279  001ECA  6E39               	movwf	?___ftdiv+2,c
  1280  001ECC  D04C               	goto	l568
  1281  001ECE                     l3797:
  1282  001ECE  0E00               	movlw	0
  1283  001ED0  6E43               	movwf	___ftdiv@f3,c
  1284  001ED2  0E00               	movlw	0
  1285  001ED4  6E44               	movwf	___ftdiv@f3+1,c
  1286  001ED6  0E00               	movlw	0
  1287  001ED8  6E45               	movwf	___ftdiv@f3+2,c
  1288  001EDA  5047               	movf	___ftdiv@sign,w,c
  1289  001EDC  0F89               	addlw	137
  1290  001EDE  5E46               	subwf	___ftdiv@exp,f,c
  1291  001EE0  C039  F047         	movff	___ftdiv@f1+2,___ftdiv@sign
  1292  001EE4  503C               	movf	(___ftdiv@f2+2)& (0+255),w,c
  1293  001EE6  1A47               	xorwf	___ftdiv@sign,f,c
  1294  001EE8  0E80               	movlw	128
  1295  001EEA  1647               	andwf	___ftdiv@sign,f,c
  1296  001EEC  8E38               	bsf	___ftdiv@f1+1,7,c
  1297  001EEE  0EFF               	movlw	255
  1298  001EF0  1637               	andwf	___ftdiv@f1,f,c
  1299  001EF2  0EFF               	movlw	255
  1300  001EF4  1638               	andwf	___ftdiv@f1+1,f,c
  1301  001EF6  0E00               	movlw	0
  1302  001EF8  1639               	andwf	___ftdiv@f1+2,f,c
  1303  001EFA  8E3B               	bsf	___ftdiv@f2+1,7,c
  1304  001EFC  0EFF               	movlw	255
  1305  001EFE  163A               	andwf	___ftdiv@f2,f,c
  1306  001F00  0EFF               	movlw	255
  1307  001F02  163B               	andwf	___ftdiv@f2+1,f,c
  1308  001F04  0E00               	movlw	0
  1309  001F06  163C               	andwf	___ftdiv@f2+2,f,c
  1310  001F08  6E3D               	movwf	??___ftdiv& (0+255),c
  1311  001F0A  0E18               	movlw	24
  1312  001F0C  6E42               	movwf	___ftdiv@cntr,c
  1313  001F0E  503D               	movf	??___ftdiv& (0+255),w,c
  1314  001F10                     l570:
  1315  001F10  90D8               	bcf	status,0,c
  1316  001F12  3643               	rlcf	___ftdiv@f3,f,c
  1317  001F14  3644               	rlcf	___ftdiv@f3+1,f,c
  1318  001F16  3645               	rlcf	___ftdiv@f3+2,f,c
  1319  001F18  503A               	movf	___ftdiv@f2,w,c
  1320  001F1A  5C37               	subwf	___ftdiv@f1,w,c
  1321  001F1C  503B               	movf	___ftdiv@f2+1,w,c
  1322  001F1E  5838               	subwfb	___ftdiv@f1+1,w,c
  1323  001F20  503C               	movf	___ftdiv@f2+2,w,c
  1324  001F22  5839               	subwfb	___ftdiv@f1+2,w,c
  1325  001F24  A0D8               	btfss	status,0,c
  1326  001F26  D007               	goto	l571
  1327  001F28  503A               	movf	___ftdiv@f2,w,c
  1328  001F2A  5E37               	subwf	___ftdiv@f1,f,c
  1329  001F2C  503B               	movf	___ftdiv@f2+1,w,c
  1330  001F2E  5A38               	subwfb	___ftdiv@f1+1,f,c
  1331  001F30  503C               	movf	___ftdiv@f2+2,w,c
  1332  001F32  5A39               	subwfb	___ftdiv@f1+2,f,c
  1333  001F34  8043               	bsf	___ftdiv@f3,0,c
  1334  001F36                     l571:
  1335  001F36  90D8               	bcf	status,0,c
  1336  001F38  3637               	rlcf	___ftdiv@f1,f,c
  1337  001F3A  3638               	rlcf	___ftdiv@f1+1,f,c
  1338  001F3C  3639               	rlcf	___ftdiv@f1+2,f,c
  1339  001F3E  2E42               	decfsz	___ftdiv@cntr,f,c
  1340  001F40  D7E7               	goto	l570
  1341  001F42  C043  F001         	movff	___ftdiv@f3,?___ftpack
  1342  001F46  C044  F002         	movff	___ftdiv@f3+1,?___ftpack+1
  1343  001F4A  C045  F003         	movff	___ftdiv@f3+2,?___ftpack+2
  1344  001F4E  C046  F004         	movff	___ftdiv@exp,?___ftpack+3
  1345  001F52  C047  F005         	movff	___ftdiv@sign,?___ftpack+4
  1346  001F56  EC9E  F010         	call	___ftpack	;wreg free
  1347  001F5A  C003  F039         	movff	?___ftpack+2,?___ftdiv+2
  1348  001F5E  C002  F038         	movff	?___ftpack+1,?___ftdiv+1
  1349  001F62  C001  F037         	movff	?___ftpack,?___ftdiv
  1350  001F66                     l568:
  1351  001F66  0012               	return	
  1352  001F68                     __end_of___ftdiv:
  1353                           	opt stack 0
  1354                           tblptru	equ	0xFF8
  1355                           status	equ	0xFD8
  1356                           
  1357 ;; *************** function _show *****************
  1358 ;; Defined at:
  1359 ;;		line 91 in file "main.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  s               2    1[COMRAM] PTR unsigned char 
  1362 ;;		 -> main@mystr(10), 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;		None               void
  1367 ;; Registers used:
  1368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1374 ;;      Params:         2       0       0       0       0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1377 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1378 ;;Total ram usage:        2 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    1
  1381 ;; This function calls:
  1382 ;;		_dat
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text3
  1389  00271C                     __ptext3:
  1390                           	opt stack 0
  1391  00271C                     _show:
  1392                           	opt stack 29
  1393                           
  1394                           ;main.c: 92: while ( * s) {
  1395                           
  1396                           ;incstack = 0
  1397                           ;incstack = 0
  1398  00271C  D00A               	goto	l3573
  1399  00271E                     l3569:
  1400                           
  1401                           ;main.c: 93: dat( * s++);
  1402  00271E  C002  FFD9         	movff	show@s,fsr2l
  1403  002722  C003  FFDA         	movff	show@s+1,fsr2h
  1404  002726  50DF               	movf	indf2,w,c
  1405  002728  6E01               	movwf	?_dat,c
  1406  00272A  EC62  F013         	call	_dat	;wreg free
  1407  00272E  4A02               	infsnz	show@s,f,c
  1408  002730  2A03               	incf	show@s+1,f,c
  1409  002732                     l3573:
  1410  002732  C002  FFD9         	movff	show@s,fsr2l
  1411  002736  C003  FFDA         	movff	show@s+1,fsr2h
  1412  00273A  50DF               	movf	indf2,w,c
  1413  00273C  B4D8               	btfsc	status,2,c
  1414  00273E  0012               	return	
  1415  002740  D7EE               	goto	l3569
  1416  002742                     __end_of_show:
  1417                           	opt stack 0
  1418                           tblptru	equ	0xFF8
  1419                           indf2	equ	0xFDF
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _dat *****************
  1425 ;; Defined at:
  1426 ;;		line 82 in file "main.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  b               1    0[COMRAM] unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1440 ;;      Params:         1       0       0       0       0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1443 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1444 ;;Total ram usage:        1 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_show
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text4
  1454  0026C4                     __ptext4:
  1455                           	opt stack 0
  1456  0026C4                     _dat:
  1457                           	opt stack 29
  1458                           
  1459                           ;main.c: 83: PORTD = b;
  1460                           
  1461                           ;incstack = 0
  1462                           ;incstack = 0
  1463  0026C4  C001  FF83         	movff	dat@b,3971	;volatile
  1464                           
  1465                           ;main.c: 84: RC0 = 1;
  1466  0026C8  8082               	bsf	3970,0,c	;volatile
  1467                           
  1468                           ;main.c: 85: RC1 = 0;
  1469  0026CA  9282               	bcf	3970,1,c	;volatile
  1470                           
  1471                           ;main.c: 86: RC2 = 1;
  1472  0026CC  8482               	bsf	3970,2,c	;volatile
  1473                           
  1474                           ;main.c: 87: for (i = 0; i <= 1000; i++);
  1475  0026CE  0E00               	movlw	0
  1476  0026D0  6E5D               	movwf	_i+1,c
  1477  0026D2  0E00               	movlw	0
  1478  0026D4  6E5C               	movwf	_i,c
  1479  0026D6  505D               	movf	_i+1,w,c
  1480  0026D8  0A80               	xorlw	128
  1481  0026DA  0F7D               	addlw	-131
  1482  0026DC  0EE9               	movlw	233
  1483  0026DE  B4D8               	btfsc	status,2,c
  1484  0026E0  5C5C               	subwf	_i,w,c
  1485  0026E2  B0D8               	btfsc	status,0,c
  1486  0026E4  D003               	goto	l88
  1487  0026E6  4A5C               	infsnz	_i,f,c
  1488  0026E8  2A5D               	incf	_i+1,f,c
  1489  0026EA  D7F5               	goto	L8
  1490  0026EC                     l88:
  1491                           
  1492                           ;main.c: 88: RC2 = 0;
  1493  0026EC  9482               	bcf	3970,2,c	;volatile
  1494  0026EE  0012               	return	
  1495  0026F0                     __end_of_dat:
  1496                           	opt stack 0
  1497                           tblptru	equ	0xFF8
  1498                           indf2	equ	0xFDF
  1499                           fsr2h	equ	0xFDA
  1500                           fsr2l	equ	0xFD9
  1501                           status	equ	0xFD8
  1502                           
  1503 ;; *************** function _sprintf *****************
  1504 ;; Defined at:
  1505 ;;		line 493 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\doprnt.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  sp              2   74[COMRAM] PTR unsigned char 
  1508 ;;		 -> main@mystr(10), 
  1509 ;;  f               2   76[COMRAM] PTR const unsigned char 
  1510 ;;		 -> STR_1(5), 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  vd              2    9[BANK0 ] unsigned int 
  1513 ;;  vd              2   11[BANK0 ] unsigned int 
  1514 ;;  _val            5   15[BANK0 ] struct .
  1515 ;;  fval            3   27[BANK0 ] struct .
  1516 ;;  integ           3   20[BANK0 ] struct .
  1517 ;;  ival            3    0        struct .
  1518 ;;  prec            2   25[BANK0 ] int 
  1519 ;;  exp             2   23[BANK0 ] int 
  1520 ;;  flag            2   13[BANK0 ] unsigned short 
  1521 ;;  ap              2    7[BANK0 ] PTR void [1]
  1522 ;;		 -> ?_sprintf(2), 
  1523 ;;  width           2    0        int 
  1524 ;;  c               1   30[BANK0 ] char 
  1525 ;;  d               1    0        unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  2   74[COMRAM] int 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1535 ;;      Params:         7       0       0       0       0       0       0       0       0
  1536 ;;      Locals:         0      31       0       0       0       0       0       0       0
  1537 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1538 ;;      Totals:        13      31       0       0       0       0       0       0       0
  1539 ;;Total ram usage:       44 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    4
  1542 ;; This function calls:
  1543 ;;		_fround
  1544 ;;		_scale
  1545 ;;		_isdigit
  1546 ;;		__tdiv_to_l_
  1547 ;;		__div_to_l_
  1548 ;;		___asftadd
  1549 ;;		___asftmul
  1550 ;;		___ftmul
  1551 ;;		___asftsub
  1552 ;;		___awdiv
  1553 ;;		___ftge
  1554 ;;		___ftneg
  1555 ;;		___fttol
  1556 ;;		___lldiv
  1557 ;;		___llmod
  1558 ;;		___lltoft
  1559 ;;		___lwmod
  1560 ;;		___wmul
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text5
  1567  00087C                     __ptext5:
  1568                           	opt stack 0
  1569  00087C                     _sprintf:
  1570                           	opt stack 26
  1571                           
  1572                           ;doprnt.c: 494: va_list ap;
  1573                           ;doprnt.c: 499: signed char c;
  1574                           ;doprnt.c: 501: int width;
  1575                           ;doprnt.c: 504: int prec;
  1576                           ;doprnt.c: 508: unsigned short flag;
  1577                           ;doprnt.c: 515: char d;
  1578                           ;doprnt.c: 516: double fval, integ;
  1579                           ;doprnt.c: 517: int exp;
  1580                           ;doprnt.c: 518: double ival;
  1581                           ;doprnt.c: 519: union {
  1582                           ;doprnt.c: 520: unsigned long _val;
  1583                           ;doprnt.c: 521: struct {
  1584                           ;doprnt.c: 522: const char * _cp;
  1585                           ;doprnt.c: 523: unsigned _len;
  1586                           ;doprnt.c: 524: } _str;
  1587                           ;doprnt.c: 525: } _val;
  1588                           ;doprnt.c: 542: *ap = __va_start();
  1589                           
  1590                           ;incstack = 0
  1591                           ;incstack = 0
  1592  00087C  0E00               	movlw	high (?_sprintf+4)
  1593  00087E  0100               	movlb	0	; () banked
  1594  000880  0100               	movlb	0	; () banked
  1595  000882  6F68               	movwf	(sprintf@ap+1)& (0+255),b
  1596  000884  0E4F               	movlw	low (?_sprintf+4)
  1597  000886  0100               	movlb	0	; () banked
  1598  000888  6F67               	movwf	sprintf@ap& (0+255),b
  1599                           
  1600                           ;doprnt.c: 545: while(c = *f++) {
  1601  00088A  D3F5               	goto	l4139
  1602  00088C                     l3937:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;doprnt.c: 547: if(c != '%')
  1606  00088C  0100               	movlb	0	; () banked
  1607  00088E  0100               	movlb	0	; () banked
  1608  000890  517E               	movf	sprintf@c& (0+255),w,b
  1609  000892  0A25               	xorlw	37
  1610  000894  B4D8               	btfsc	status,2,c
  1611  000896  D008               	goto	l3943
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;doprnt.c: 549: {
  1615                           ;doprnt.c: 550: ((*sp++ = (c)));
  1616  000898  C04B  FFD9         	movff	sprintf@sp,fsr2l
  1617  00089C  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  1618  0008A0  0100               	movlb	0	; () banked
  1619  0008A2  C07E  FFDF         	movff	sprintf@c,indf2
  1620  0008A6  D3E5               	goto	L9
  1621  0008A8                     l3943:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;doprnt.c: 552: }
  1625                           ;doprnt.c: 557: flag = 0;
  1626  0008A8  0E00               	movlw	0
  1627  0008AA  0100               	movlb	0	; () banked
  1628  0008AC  0100               	movlb	0	; () banked
  1629  0008AE  6F6E               	movwf	(sprintf@flag+1)& (0+255),b
  1630  0008B0  0E00               	movlw	0
  1631  0008B2  0100               	movlb	0	; () banked
  1632  0008B4  6F6D               	movwf	sprintf@flag& (0+255),b
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;doprnt.c: 620: if(*f == '.') {
  1636  0008B6  C04D  FFF6         	movff	sprintf@f,tblptrl
  1637  0008BA  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  1638  0008BE  0008               	tblrd		*
  1639  0008C0  50F5               	movf	tablat,w,c
  1640  0008C2  0A2E               	xorlw	46
  1641  0008C4  A4D8               	btfss	status,2,c
  1642  0008C6  D037               	goto	l3957
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;doprnt.c: 621: flag |= 0x4000;
  1646  0008C8  0100               	movlb	0	; () banked
  1647  0008CA  0100               	movlb	0	; () banked
  1648  0008CC  8D6E               	bsf	(sprintf@flag+1)& (0+255),6,b
  1649                           
  1650                           ;doprnt.c: 622: f++;
  1651  0008CE  4A4D               	infsnz	sprintf@f,f,c
  1652  0008D0  2A4E               	incf	sprintf@f+1,f,c
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;doprnt.c: 629: {
  1656                           ;doprnt.c: 630: prec = 0;
  1657  0008D2  0E00               	movlw	0
  1658  0008D4  0100               	movlb	0	; () banked
  1659  0008D6  0100               	movlb	0	; () banked
  1660  0008D8  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
  1661  0008DA  0E00               	movlw	0
  1662  0008DC  0100               	movlb	0	; () banked
  1663  0008DE  6F79               	movwf	sprintf@prec& (0+255),b
  1664                           
  1665                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1666  0008E0  D01E               	goto	l3955
  1667  0008E2                     l3951:
  1668                           
  1669                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1670  0008E2  C079  F011         	movff	sprintf@prec,?___wmul
  1671  0008E6  C07A  F012         	movff	sprintf@prec+1,?___wmul+1
  1672  0008EA  0E00               	movlw	0
  1673  0008EC  6E14               	movwf	?___wmul+3,c
  1674  0008EE  0E0A               	movlw	10
  1675  0008F0  6E13               	movwf	?___wmul+2,c
  1676  0008F2  EC11  F013         	call	___wmul	;wreg free
  1677  0008F6  C04D  FFF6         	movff	sprintf@f,tblptrl
  1678  0008FA  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  1679  0008FE  0008               	tblrd		*
  1680  000900  50F5               	movf	tablat,w,c
  1681  000902  2611               	addwf	?___wmul,f,c
  1682  000904  0E00               	movlw	0
  1683  000906  2212               	addwfc	?___wmul+1,f,c
  1684  000908  0ED0               	movlw	208
  1685  00090A  2411               	addwf	?___wmul,w,c
  1686  00090C  0100               	movlb	0	; () banked
  1687  00090E  0100               	movlb	0	; () banked
  1688  000910  6F79               	movwf	sprintf@prec& (0+255),b
  1689  000912  0EFF               	movlw	255
  1690  000914  2012               	addwfc	?___wmul+1,w,c
  1691  000916  0100               	movlb	0	; () banked
  1692  000918  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
  1693                           
  1694                           ; BSR set to: 0
  1695  00091A  4A4D               	infsnz	sprintf@f,f,c
  1696  00091C  2A4E               	incf	sprintf@f+1,f,c
  1697  00091E                     l3955:
  1698                           
  1699                           ; BSR set to: 0
  1700  00091E  C04D  FFF6         	movff	sprintf@f,tblptrl
  1701  000922  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  1702  000926  0008               	tblrd		*
  1703  000928  CFF5 F001          	movff	tablat,?_isdigit
  1704  00092C  ECB4  F013         	call	_isdigit	;wreg free
  1705  000930  A0D8               	btfss	status,0,c
  1706  000932  D010               	goto	l3965
  1707  000934  D7D6               	goto	l3951
  1708  000936                     l3957:
  1709                           
  1710                           ;doprnt.c: 635: prec = 0;
  1711  000936  0E00               	movlw	0
  1712  000938  0100               	movlb	0	; () banked
  1713  00093A  0100               	movlb	0	; () banked
  1714  00093C  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
  1715  00093E  0E00               	movlw	0
  1716  000940  0100               	movlb	0	; () banked
  1717  000942  6F79               	movwf	sprintf@prec& (0+255),b
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;doprnt.c: 637: flag |= 0x1000;
  1721  000944  0100               	movlb	0	; () banked
  1722  000946  0100               	movlb	0	; () banked
  1723  000948  896E               	bsf	(sprintf@flag+1)& (0+255),4,b
  1724  00094A  D004               	goto	l3965
  1725  00094C                     l3961:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;doprnt.c: 672: flag |= 0x400;
  1729  00094C  0100               	movlb	0	; () banked
  1730  00094E  0100               	movlb	0	; () banked
  1731  000950  856E               	bsf	(sprintf@flag+1)& (0+255),2,b
  1732                           
  1733                           ;doprnt.c: 673: break;
  1734  000952  D013               	goto	l3967
  1735  000954                     l3965:
  1736  000954  C04D  FFF6         	movff	sprintf@f,tblptrl
  1737  000958  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  1738  00095C  4A4D               	infsnz	sprintf@f,f,c
  1739  00095E  2A4E               	incf	sprintf@f+1,f,c
  1740  000960  0008               	tblrd		*
  1741  000962  0100               	movlb	0	; () banked
  1742  000964  CFF5 F07E          	movff	tablat,sprintf@c
  1743  000968  0100               	movlb	0	; () banked
  1744  00096A  517E               	movf	sprintf@c& (0+255),w,b
  1745                           
  1746                           ; Switch size 1, requested type "space"
  1747                           ; Number of cases is 2, Range of values is 0 to 102
  1748                           ; switch strategies available:
  1749                           ; Name         Instructions Cycles
  1750                           ; simple_byte            7     4 (average)
  1751                           ;	Chosen strategy is simple_byte
  1752  00096C  0A00               	xorlw	0	; case 0
  1753  00096E  B4D8               	btfsc	status,2,c
  1754  000970  D390               	goto	l4141
  1755  000972  0A66               	xorlw	102	; case 102
  1756  000974  B4D8               	btfsc	status,2,c
  1757  000976  D7EA               	goto	l3961
  1758  000978  D37E               	goto	l4139
  1759  00097A                     l3967:
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;doprnt.c: 834: if(flag & (0x700)) {
  1763  00097A  0E07               	movlw	7
  1764  00097C  0100               	movlb	0	; () banked
  1765  00097E  0100               	movlb	0	; () banked
  1766  000980  156E               	andwf	(sprintf@flag+1)& (0+255),w,b
  1767  000982  B4D8               	btfsc	status,2,c
  1768  000984  D31C               	goto	l4119
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;doprnt.c: 836: if(flag & 0x1000)
  1772  000986  0100               	movlb	0	; () banked
  1773  000988  0100               	movlb	0	; () banked
  1774  00098A  A96E               	btfss	(sprintf@flag+1)& (0+255),4,b
  1775  00098C  D007               	goto	l3973
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;doprnt.c: 838: prec = 6;
  1779  00098E  0E00               	movlw	0
  1780  000990  0100               	movlb	0	; () banked
  1781  000992  0100               	movlb	0	; () banked
  1782  000994  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
  1783  000996  0E06               	movlw	6
  1784  000998  0100               	movlb	0	; () banked
  1785  00099A  6F79               	movwf	sprintf@prec& (0+255),b
  1786  00099C                     l3973:
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1790  00099C  C067  FFD9         	movff	sprintf@ap,fsr2l
  1791  0009A0  C068  FFDA         	movff	sprintf@ap+1,fsr2h
  1792  0009A4  0100               	movlb	0	; () banked
  1793  0009A6  CFDE F07B          	movff	postinc2,sprintf@fval
  1794  0009AA  0100               	movlb	0	; () banked
  1795  0009AC  CFDE F07C          	movff	postinc2,sprintf@fval+1
  1796  0009B0  0100               	movlb	0	; () banked
  1797  0009B2  CFDD F07D          	movff	postdec2,sprintf@fval+2
  1798                           
  1799                           ; BSR set to: 0
  1800  0009B6  0E03               	movlw	3
  1801  0009B8  0100               	movlb	0	; () banked
  1802  0009BA  0100               	movlb	0	; () banked
  1803  0009BC  2767               	addwf	sprintf@ap& (0+255),f,b
  1804  0009BE  0E00               	movlw	0
  1805  0009C0  0100               	movlb	0	; () banked
  1806  0009C2  2368               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;doprnt.c: 840: if(fval < 0.0) {
  1810  0009C4  0100               	movlb	0	; () banked
  1811  0009C6  0100               	movlb	0	; () banked
  1812  0009C8  517D               	movf	(sprintf@fval+2)& (0+255),w,b
  1813  0009CA  0A80               	xorlw	128
  1814  0009CC  0F80               	addlw	128
  1815  0009CE  E107               	bnz	u2655
  1816  0009D0  0E00               	movlw	0
  1817  0009D2  0100               	movlb	0	; () banked
  1818  0009D4  5D7C               	subwf	(sprintf@fval+1)& (0+255),w,b
  1819  0009D6  E103               	bnz	u2655
  1820  0009D8  0E00               	movlw	0
  1821  0009DA  0100               	movlb	0	; () banked
  1822  0009DC  5D7B               	subwf	sprintf@fval& (0+255),w,b
  1823  0009DE                     u2655:
  1824  0009DE  B0D8               	btfsc	status,0,c
  1825  0009E0  D012               	goto	l3983
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;doprnt.c: 841: fval = -fval;
  1829  0009E2  C07B  F001         	movff	sprintf@fval,?___ftneg
  1830  0009E6  C07C  F002         	movff	sprintf@fval+1,?___ftneg+1
  1831  0009EA  C07D  F003         	movff	sprintf@fval+2,?___ftneg+2
  1832  0009EE  ECA1  F013         	call	___ftneg	;wreg free
  1833  0009F2  C003  F07D         	movff	?___ftneg+2,sprintf@fval+2
  1834  0009F6  C002  F07C         	movff	?___ftneg+1,sprintf@fval+1
  1835  0009FA  C001  F07B         	movff	?___ftneg,sprintf@fval
  1836                           
  1837                           ;doprnt.c: 842: flag |= 0x03;
  1838  0009FE  0E03               	movlw	3
  1839  000A00  0100               	movlb	0	; () banked
  1840  000A02  0100               	movlb	0	; () banked
  1841  000A04  136D               	iorwf	sprintf@flag& (0+255),f,b
  1842  000A06                     l3983:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;doprnt.c: 843: }
  1846                           ;doprnt.c: 844: exp = 0;
  1847  000A06  0E00               	movlw	0
  1848  000A08  0100               	movlb	0	; () banked
  1849  000A0A  0100               	movlb	0	; () banked
  1850  000A0C  6F78               	movwf	(sprintf@exp+1)& (0+255),b
  1851  000A0E  0E00               	movlw	0
  1852  000A10  0100               	movlb	0	; () banked
  1853  000A12  6F77               	movwf	sprintf@exp& (0+255),b
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;doprnt.c: 845: if( fval!=0) {
  1857  000A14  0E7F               	movlw	127
  1858  000A16  0100               	movlb	0	; () banked
  1859  000A18  0100               	movlb	0	; () banked
  1860  000A1A  157D               	andwf	(sprintf@fval+2)& (0+255),w,b
  1861  000A1C  0100               	movlb	0	; () banked
  1862  000A1E  117C               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1863  000A20  0100               	movlb	0	; () banked
  1864  000A22  117B               	iorwf	sprintf@fval& (0+255),w,b
  1865  000A24  B4D8               	btfsc	status,2,c
  1866  000A26  D091               	goto	l4011
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1870  000A28  0E82               	movlw	130
  1871  000A2A  6E52               	movwf	??_sprintf& (0+255),c
  1872  000A2C  0EFF               	movlw	255
  1873  000A2E  6E53               	movwf	(??_sprintf+1)& (0+255),c
  1874  000A30  0100               	movlb	0	; () banked
  1875  000A32  C07B  F054         	movff	sprintf@fval,??_sprintf+2
  1876  000A36  0100               	movlb	0	; () banked
  1877  000A38  C07C  F055         	movff	sprintf@fval+1,??_sprintf+3
  1878  000A3C  0100               	movlb	0	; () banked
  1879  000A3E  C07D  F056         	movff	sprintf@fval+2,??_sprintf+4
  1880  000A42  0100               	movlb	0	; () banked
  1881  000A44  C07E  F057         	movff	sprintf@fval+3,??_sprintf+5
  1882  000A48  0E10               	movlw	16
  1883  000A4A  D005               	goto	u2670
  1884  000A4C                     u2675:
  1885  000A4C  90D8               	bcf	status,0,c
  1886  000A4E  3257               	rrcf	??_sprintf+5,f,c
  1887  000A50  3256               	rrcf	??_sprintf+4,f,c
  1888  000A52  3255               	rrcf	??_sprintf+3,f,c
  1889  000A54  3254               	rrcf	??_sprintf+2,f,c
  1890  000A56                     u2670:
  1891  000A56  2EE8               	decfsz	wreg,f,c
  1892  000A58  D7F9               	goto	u2675
  1893  000A5A  5054               	movf	??_sprintf+2,w,c
  1894  000A5C  2452               	addwf	??_sprintf,w,c
  1895  000A5E  0100               	movlb	0	; () banked
  1896  000A60  0100               	movlb	0	; () banked
  1897  000A62  6F77               	movwf	sprintf@exp& (0+255),b
  1898  000A64  0100               	movlb	0	; () banked
  1899  000A66  0E00               	movlw	0
  1900  000A68  2053               	addwfc	??_sprintf+1,w,c
  1901  000A6A  6F78               	movwf	(sprintf@exp+1)& (0+255),b
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;doprnt.c: 847: exp--;
  1905  000A6C  0100               	movlb	0	; () banked
  1906  000A6E  0100               	movlb	0	; () banked
  1907  000A70  0777               	decf	sprintf@exp& (0+255),f,b
  1908  000A72  A0D8               	btfss	status,0,c
  1909  000A74  0778               	decf	(sprintf@exp+1)& (0+255),f,b
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;doprnt.c: 848: exp *= 3;
  1913  000A76  C077  F011         	movff	sprintf@exp,?___wmul
  1914  000A7A  C078  F012         	movff	sprintf@exp+1,?___wmul+1
  1915  000A7E  0E00               	movlw	0
  1916  000A80  6E14               	movwf	?___wmul+3,c
  1917  000A82  0E03               	movlw	3
  1918  000A84  6E13               	movwf	?___wmul+2,c
  1919  000A86  EC11  F013         	call	___wmul	;wreg free
  1920  000A8A  C011  F077         	movff	?___wmul,sprintf@exp
  1921  000A8E  C012  F078         	movff	?___wmul+1,sprintf@exp+1
  1922                           
  1923                           ;doprnt.c: 849: exp /= 10;
  1924  000A92  C077  F008         	movff	sprintf@exp,?___awdiv
  1925  000A96  C078  F009         	movff	sprintf@exp+1,?___awdiv+1
  1926  000A9A  0E00               	movlw	0
  1927  000A9C  6E0B               	movwf	?___awdiv+3,c
  1928  000A9E  0E0A               	movlw	10
  1929  000AA0  6E0A               	movwf	?___awdiv+2,c
  1930  000AA2  EC42  F011         	call	___awdiv	;wreg free
  1931  000AA6  C008  F077         	movff	?___awdiv,sprintf@exp
  1932  000AAA  C009  F078         	movff	?___awdiv+1,sprintf@exp+1
  1933                           
  1934                           ;doprnt.c: 850: if(exp < 0)
  1935  000AAE  0100               	movlb	0	; () banked
  1936  000AB0  0100               	movlb	0	; () banked
  1937  000AB2  AF78               	btfss	(sprintf@exp+1)& (0+255),7,b
  1938  000AB4  D005               	goto	l3999
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;doprnt.c: 851: exp--;
  1942  000AB6  0100               	movlb	0	; () banked
  1943  000AB8  0100               	movlb	0	; () banked
  1944  000ABA  0777               	decf	sprintf@exp& (0+255),f,b
  1945  000ABC  A0D8               	btfss	status,0,c
  1946  000ABE  0778               	decf	(sprintf@exp+1)& (0+255),f,b
  1947  000AC0                     l3999:
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;doprnt.c: 855: integ = scale(-exp);
  1951  000AC0  0100               	movlb	0	; () banked
  1952  000AC2  0100               	movlb	0	; () banked
  1953  000AC4  5177               	movf	sprintf@exp& (0+255),w,b
  1954  000AC6  0800               	sublw	0
  1955  000AC8  6E37               	movwf	?_scale,c
  1956  000ACA  EC50  F008         	call	_scale	;wreg free
  1957  000ACE  C039  F076         	movff	?_scale+2,sprintf@integ+2
  1958  000AD2  C038  F075         	movff	?_scale+1,sprintf@integ+1
  1959  000AD6  C037  F074         	movff	?_scale,sprintf@integ
  1960                           
  1961                           ;doprnt.c: 856: integ *= fval;
  1962  000ADA  0100               	movlb	0	; () banked
  1963  000ADC  0E00               	movlw	high sprintf@integ
  1964  000ADE  6E38               	movwf	?___asftmul+1,c
  1965  000AE0  0100               	movlb	0	; () banked
  1966  000AE2  0E74               	movlw	low sprintf@integ
  1967  000AE4  6E37               	movwf	?___asftmul,c
  1968  000AE6  C07B  F039         	movff	sprintf@fval,?___asftmul+2
  1969  000AEA  C07C  F03A         	movff	sprintf@fval+1,?___asftmul+3
  1970  000AEE  C07D  F03B         	movff	sprintf@fval+2,?___asftmul+4
  1971  000AF2  ECD5  F012         	call	___asftmul	;wreg free
  1972                           
  1973                           ;doprnt.c: 857: if(integ < 1.0)
  1974  000AF6  C074  F001         	movff	sprintf@integ,?___ftge
  1975  000AFA  C075  F002         	movff	sprintf@integ+1,?___ftge+1
  1976  000AFE  C076  F003         	movff	sprintf@integ+2,?___ftge+2
  1977  000B02  0E00               	movlw	0
  1978  000B04  6E04               	movwf	?___ftge+3,c
  1979  000B06  0E80               	movlw	128
  1980  000B08  6E05               	movwf	?___ftge+4,c
  1981  000B0A  0E3F               	movlw	63
  1982  000B0C  6E06               	movwf	?___ftge+5,c
  1983  000B0E  ECFA  F010         	call	___ftge	;wreg free
  1984  000B12  B0D8               	btfsc	status,0,c
  1985  000B14  D006               	goto	l4007
  1986                           
  1987                           ;doprnt.c: 858: exp--;
  1988  000B16  0100               	movlb	0	; () banked
  1989  000B18  0100               	movlb	0	; () banked
  1990  000B1A  0777               	decf	sprintf@exp& (0+255),f,b
  1991  000B1C  A0D8               	btfss	status,0,c
  1992  000B1E  0778               	decf	(sprintf@exp+1)& (0+255),f,b
  1993  000B20  D014               	goto	l4011
  1994  000B22                     l4007:
  1995                           
  1996                           ;doprnt.c: 859: else if(integ >= 10.0)
  1997  000B22  C074  F001         	movff	sprintf@integ,?___ftge
  1998  000B26  C075  F002         	movff	sprintf@integ+1,?___ftge+1
  1999  000B2A  C076  F003         	movff	sprintf@integ+2,?___ftge+2
  2000  000B2E  0E00               	movlw	0
  2001  000B30  6E04               	movwf	?___ftge+3,c
  2002  000B32  0E20               	movlw	32
  2003  000B34  6E05               	movwf	?___ftge+4,c
  2004  000B36  0E41               	movlw	65
  2005  000B38  6E06               	movwf	?___ftge+5,c
  2006  000B3A  ECFA  F010         	call	___ftge	;wreg free
  2007  000B3E  A0D8               	btfss	status,0,c
  2008  000B40  D004               	goto	l4011
  2009                           
  2010                           ;doprnt.c: 860: exp++;
  2011  000B42  0100               	movlb	0	; () banked
  2012  000B44  0100               	movlb	0	; () banked
  2013  000B46  4B77               	infsnz	sprintf@exp& (0+255),f,b
  2014  000B48  2B78               	incf	(sprintf@exp+1)& (0+255),f,b
  2015  000B4A                     l4011:
  2016                           
  2017                           ;doprnt.c: 861: }
  2018                           ;doprnt.c: 1121: if(prec <= 12)
  2019  000B4A  0100               	movlb	0	; () banked
  2020  000B4C  0100               	movlb	0	; () banked
  2021  000B4E  517A               	movf	(sprintf@prec+1)& (0+255),w,b
  2022  000B50  0A80               	xorlw	128
  2023  000B52  0F80               	addlw	-128
  2024  000B54  0E0D               	movlw	13
  2025  000B56  B4D8               	btfsc	status,2,c
  2026  000B58  5D79               	subwf	sprintf@prec& (0+255),w,b
  2027  000B5A  B0D8               	btfsc	status,0,c
  2028  000B5C  D012               	goto	l4015
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;doprnt.c: 1122: fval += fround(prec);
  2032  000B5E  0100               	movlb	0	; () banked
  2033  000B60  0E00               	movlw	high sprintf@fval
  2034  000B62  6E47               	movwf	?___asftadd+1,c
  2035  000B64  0100               	movlb	0	; () banked
  2036  000B66  0E7B               	movlw	low sprintf@fval
  2037  000B68  6E46               	movwf	?___asftadd,c
  2038  000B6A  C079  F037         	movff	sprintf@prec,?_fround
  2039  000B6E  ECF6  F00B         	call	_fround	;wreg free
  2040  000B72  C039  F04A         	movff	?_fround+2,?___asftadd+4
  2041  000B76  C038  F049         	movff	?_fround+1,?___asftadd+3
  2042  000B7A  C037  F048         	movff	?_fround,?___asftadd+2
  2043  000B7E  ECF3  F012         	call	___asftadd	;wreg free
  2044  000B82                     l4015:
  2045                           
  2046                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2047  000B82  0100               	movlb	0	; () banked
  2048  000B84  0100               	movlb	0	; () banked
  2049  000B86  5178               	movf	(sprintf@exp+1)& (0+255),w,b
  2050  000B88  0A80               	xorlw	128
  2051  000B8A  0F80               	addlw	-128
  2052  000B8C  0E0A               	movlw	10
  2053  000B8E  B4D8               	btfsc	status,2,c
  2054  000B90  5D77               	subwf	sprintf@exp& (0+255),w,b
  2055  000B92  B0D8               	btfsc	status,0,c
  2056  000B94  D022               	goto	l4023
  2057                           
  2058                           ; BSR set to: 0
  2059  000B96  0E7F               	movlw	127
  2060  000B98  0100               	movlb	0	; () banked
  2061  000B9A  0100               	movlb	0	; () banked
  2062  000B9C  157D               	andwf	(sprintf@fval+2)& (0+255),w,b
  2063  000B9E  0100               	movlb	0	; () banked
  2064  000BA0  117C               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2065  000BA2  0100               	movlb	0	; () banked
  2066  000BA4  117B               	iorwf	sprintf@fval& (0+255),w,b
  2067  000BA6  B4D8               	btfsc	status,2,c
  2068  000BA8  D067               	goto	l4039
  2069                           
  2070                           ; BSR set to: 0
  2071  000BAA  C07B  F017         	movff	sprintf@fval,?___fttol
  2072  000BAE  C07C  F018         	movff	sprintf@fval+1,?___fttol+1
  2073  000BB2  C07D  F019         	movff	sprintf@fval+2,?___fttol+2
  2074  000BB6  EC2E  F010         	call	___fttol	;wreg free
  2075  000BBA  501A               	movf	?___fttol+3,w,c
  2076  000BBC  1017               	iorwf	?___fttol,w,c
  2077  000BBE  1018               	iorwf	?___fttol+1,w,c
  2078  000BC0  1019               	iorwf	?___fttol+2,w,c
  2079  000BC2  A4D8               	btfss	status,2,c
  2080  000BC4  D059               	goto	l4039
  2081  000BC6  0100               	movlb	0	; () banked
  2082  000BC8  0100               	movlb	0	; () banked
  2083  000BCA  5178               	movf	(sprintf@exp+1)& (0+255),w,b
  2084  000BCC  0A80               	xorlw	128
  2085  000BCE  0F80               	addlw	-128
  2086  000BD0  0E02               	movlw	2
  2087  000BD2  B4D8               	btfsc	status,2,c
  2088  000BD4  5D77               	subwf	sprintf@exp& (0+255),w,b
  2089  000BD6  A0D8               	btfss	status,0,c
  2090  000BD8  D04F               	goto	l4039
  2091  000BDA                     l4023:
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2095  000BDA  C074  F001         	movff	sprintf@integ,?___ftge
  2096  000BDE  C075  F002         	movff	sprintf@integ+1,?___ftge+1
  2097  000BE2  C076  F003         	movff	sprintf@integ+2,?___ftge+2
  2098  000BE6  0E70               	movlw	112
  2099  000BE8  6E04               	movwf	?___ftge+3,c
  2100  000BEA  0E89               	movlw	137
  2101  000BEC  6E05               	movwf	?___ftge+4,c
  2102  000BEE  0E40               	movlw	64
  2103  000BF0  6E06               	movwf	?___ftge+5,c
  2104  000BF2  ECFA  F010         	call	___ftge	;wreg free
  2105  000BF6  B0D8               	btfsc	status,0,c
  2106  000BF8  D003               	goto	l4027
  2107                           
  2108                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2109  000BFA  0100               	movlb	0	; () banked
  2110  000BFC  0EF7               	movlw	247
  2111  000BFE  D002               	goto	L10
  2112  000C00                     l4027:
  2113                           
  2114                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2115  000C00  0100               	movlb	0	; () banked
  2116  000C02  0EF8               	movlw	248
  2117  000C04                     L10:
  2118  000C04  0100               	movlb	0	; () banked
  2119  000C06  2777               	addwf	sprintf@exp& (0+255),f,b
  2120  000C08  0EFF               	movlw	255
  2121  000C0A  0100               	movlb	0	; () banked
  2122  000C0C  2378               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;doprnt.c: 1133: }
  2126                           ;doprnt.c: 1134: integ = scale(exp);
  2127                           
  2128                           ; BSR set to: 0
  2129  000C0E  C077  F037         	movff	sprintf@exp,?_scale
  2130  000C12  EC50  F008         	call	_scale	;wreg free
  2131  000C16  C039  F076         	movff	?_scale+2,sprintf@integ+2
  2132  000C1A  C038  F075         	movff	?_scale+1,sprintf@integ+1
  2133  000C1E  C037  F074         	movff	?_scale,sprintf@integ
  2134                           
  2135                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2136  000C22  C07B  F001         	movff	sprintf@fval,?__tdiv_to_l_
  2137  000C26  C07C  F002         	movff	sprintf@fval+1,?__tdiv_to_l_+1
  2138  000C2A  C07D  F003         	movff	sprintf@fval+2,?__tdiv_to_l_+2
  2139  000C2E  C074  F004         	movff	sprintf@integ,?__tdiv_to_l_+3
  2140  000C32  C075  F005         	movff	sprintf@integ+1,?__tdiv_to_l_+4
  2141  000C36  C076  F006         	movff	sprintf@integ+2,?__tdiv_to_l_+5
  2142  000C3A  EC1C  F00E         	call	__tdiv_to_l_	;wreg free
  2143  000C3E  C004  F066         	movff	?__tdiv_to_l_+3,_sprintf$206+3
  2144  000C42  C003  F065         	movff	?__tdiv_to_l_+2,_sprintf$206+2
  2145  000C46  C002  F064         	movff	?__tdiv_to_l_+1,_sprintf$206+1
  2146  000C4A  C001  F063         	movff	?__tdiv_to_l_,_sprintf$206
  2147  000C4E  C063  F06F         	movff	_sprintf$206,sprintf@_val
  2148  000C52  C064  F070         	movff	_sprintf$206+1,sprintf@_val+1
  2149  000C56  C065  F071         	movff	_sprintf$206+2,sprintf@_val+2
  2150  000C5A  C066  F072         	movff	_sprintf$206+3,sprintf@_val+3
  2151                           
  2152                           ;doprnt.c: 1138: fval = 0.0;
  2153  000C5E  0E00               	movlw	0
  2154  000C60  0100               	movlb	0	; () banked
  2155  000C62  0100               	movlb	0	; () banked
  2156  000C64  6F7B               	movwf	sprintf@fval& (0+255),b
  2157  000C66  0E00               	movlw	0
  2158  000C68  0100               	movlb	0	; () banked
  2159  000C6A  0100               	movlb	0	; () banked
  2160  000C6C  6F7C               	movwf	(sprintf@fval+1)& (0+255),b
  2161  000C6E  0E00               	movlw	0
  2162  000C70  0100               	movlb	0	; () banked
  2163  000C72  0100               	movlb	0	; () banked
  2164  000C74  6F7D               	movwf	(sprintf@fval+2)& (0+255),b
  2165                           
  2166                           ;doprnt.c: 1139: } else {
  2167  000C76  D02F               	goto	l4045
  2168  000C78                     l4039:
  2169                           
  2170                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2171  000C78  C07B  F017         	movff	sprintf@fval,?___fttol
  2172  000C7C  C07C  F018         	movff	sprintf@fval+1,?___fttol+1
  2173  000C80  C07D  F019         	movff	sprintf@fval+2,?___fttol+2
  2174  000C84  EC2E  F010         	call	___fttol	;wreg free
  2175  000C88  C01A  F072         	movff	?___fttol+3,sprintf@_val+3
  2176  000C8C  C019  F071         	movff	?___fttol+2,sprintf@_val+2
  2177  000C90  C018  F070         	movff	?___fttol+1,sprintf@_val+1
  2178  000C94  C017  F06F         	movff	?___fttol,sprintf@_val
  2179                           
  2180                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2181  000C98  0100               	movlb	0	; () banked
  2182  000C9A  0E00               	movlw	high sprintf@fval
  2183  000C9C  6E1E               	movwf	?___asftsub+1,c
  2184  000C9E  0100               	movlb	0	; () banked
  2185  000CA0  0E7B               	movlw	low sprintf@fval
  2186  000CA2  6E1D               	movwf	?___asftsub,c
  2187  000CA4  C06F  F009         	movff	sprintf@_val,?___lltoft
  2188  000CA8  C070  F00A         	movff	sprintf@_val+1,?___lltoft+1
  2189  000CAC  C071  F00B         	movff	sprintf@_val+2,?___lltoft+2
  2190  000CB0  C072  F00C         	movff	sprintf@_val+3,?___lltoft+3
  2191  000CB4  EC40  F012         	call	___lltoft	;wreg free
  2192  000CB8  C00B  F021         	movff	?___lltoft+2,?___asftsub+4
  2193  000CBC  C00A  F020         	movff	?___lltoft+1,?___asftsub+3
  2194  000CC0  C009  F01F         	movff	?___lltoft,?___asftsub+2
  2195  000CC4  ECB7  F012         	call	___asftsub	;wreg free
  2196                           
  2197                           ;doprnt.c: 1142: exp = 0;
  2198  000CC8  0E00               	movlw	0
  2199  000CCA  0100               	movlb	0	; () banked
  2200  000CCC  0100               	movlb	0	; () banked
  2201  000CCE  6F78               	movwf	(sprintf@exp+1)& (0+255),b
  2202  000CD0  0E00               	movlw	0
  2203  000CD2  0100               	movlb	0	; () banked
  2204  000CD4  6F77               	movwf	sprintf@exp& (0+255),b
  2205  000CD6                     l4045:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;doprnt.c: 1143: }
  2209                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2210  000CD6  6E52               	movwf	??_sprintf& (0+255),c
  2211  000CD8  0E01               	movlw	1
  2212  000CDA  0100               	movlb	0	; () banked
  2213  000CDC  0100               	movlb	0	; () banked
  2214  000CDE  6F7E               	movwf	sprintf@c& (0+255),b
  2215  000CE0  5052               	movf	??_sprintf& (0+255),w,c
  2216  000CE2                     
  2217                           ; BSR set to: 0
  2218  000CE2  0100               	movlb	0	; () banked
  2219  000CE4  0100               	movlb	0	; () banked
  2220  000CE6  517E               	movf	sprintf@c& (0+255),w,b
  2221  000CE8  0A0A               	xorlw	10
  2222  000CEA  B4D8               	btfsc	status,2,c
  2223  000CEC  D021               	goto	l4059
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2227                           
  2228                           ; BSR set to: 0
  2229                           
  2230                           ; BSR set to: 0
  2231  000CEE  0100               	movlb	0	; () banked
  2232  000CF0  0100               	movlb	0	; () banked
  2233  000CF2  517E               	movf	sprintf@c& (0+255),w,b
  2234  000CF4  0D04               	mullw	4
  2235  000CF6  0E00               	movlw	low _dpowers
  2236  000CF8  24F3               	addwf	prodl,w,c
  2237  000CFA  6EF6               	movwf	tblptrl,c
  2238  000CFC  0E08               	movlw	high _dpowers
  2239  000CFE  20F4               	addwfc	prodh,w,c
  2240  000D00  6EF7               	movwf	tblptrh,c
  2241  000D02  0009               	tblrd		*+
  2242  000D04  50F5               	movf	tablat,w,c
  2243  000D06  0100               	movlb	0	; () banked
  2244  000D08  0100               	movlb	0	; () banked
  2245  000D0A  5D6F               	subwf	sprintf@_val& (0+255),w,b
  2246  000D0C  0009               	tblrd		*+
  2247  000D0E  50F5               	movf	tablat,w,c
  2248  000D10  0100               	movlb	0	; () banked
  2249  000D12  5970               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2250  000D14  0009               	tblrd		*+
  2251  000D16  50F5               	movf	tablat,w,c
  2252  000D18  0100               	movlb	0	; () banked
  2253  000D1A  5971               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2254  000D1C  0009               	tblrd		*+
  2255  000D1E  50F5               	movf	tablat,w,c
  2256  000D20  0100               	movlb	0	; () banked
  2257  000D22  5972               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2258  000D24  A0D8               	btfss	status,0,c
  2259  000D26  D004               	goto	l4059
  2260                           
  2261                           ; BSR set to: 0
  2262                           
  2263                           ; BSR set to: 0
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;doprnt.c: 1147: break;
  2267  000D28  0100               	movlb	0	; () banked
  2268  000D2A  0100               	movlb	0	; () banked
  2269  000D2C  2B7E               	incf	sprintf@c& (0+255),f,b
  2270  000D2E  D7D9               	goto	L11
  2271  000D30                     l4059:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;doprnt.c: 1182: {
  2275                           ;doprnt.c: 1195: if(flag & 0x03)
  2276  000D30  0E03               	movlw	3
  2277  000D32  0100               	movlb	0	; () banked
  2278  000D34  0100               	movlb	0	; () banked
  2279  000D36  156D               	andwf	sprintf@flag& (0+255),w,b
  2280  000D38  6E52               	movwf	??_sprintf& (0+255),c
  2281  000D3A  0E00               	movlw	0
  2282  000D3C  0100               	movlb	0	; () banked
  2283  000D3E  0100               	movlb	0	; () banked
  2284  000D40  156E               	andwf	(sprintf@flag+1)& (0+255),w,b
  2285  000D42  6E53               	movwf	(??_sprintf+1)& (0+255),c
  2286  000D44  5053               	movf	??_sprintf+1,w,c
  2287  000D46  1052               	iorwf	??_sprintf,w,c
  2288  000D48  B4D8               	btfsc	status,2,c
  2289  000D4A  D043               	goto	l4073
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;doprnt.c: 1197: ((*sp++ = ('-')));
  2293  000D4C  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2294  000D50  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2295  000D54  0E2D               	movlw	45
  2296  000D56  D03A               	goto	L12
  2297  000D58                     l4065:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;doprnt.c: 1207: {
  2301                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
  2302  000D58  C06F  F001         	movff	sprintf@_val,?___lldiv
  2303  000D5C  C070  F002         	movff	sprintf@_val+1,?___lldiv+1
  2304  000D60  C071  F003         	movff	sprintf@_val+2,?___lldiv+2
  2305  000D64  C072  F004         	movff	sprintf@_val+3,?___lldiv+3
  2306  000D68  0100               	movlb	0	; () banked
  2307  000D6A  0100               	movlb	0	; () banked
  2308  000D6C  517E               	movf	sprintf@c& (0+255),w,b
  2309  000D6E  0D04               	mullw	4
  2310  000D70  0E00               	movlw	low _dpowers
  2311  000D72  24F3               	addwf	prodl,w,c
  2312  000D74  6EF6               	movwf	tblptrl,c
  2313  000D76  0E08               	movlw	high _dpowers
  2314  000D78  20F4               	addwfc	prodh,w,c
  2315  000D7A  6EF7               	movwf	tblptrh,c
  2316  000D7C  0009               	tblrd		*+
  2317  000D7E  CFF5 F005          	movff	tablat,?___lldiv+4
  2318  000D82  0009               	tblrd		*+
  2319  000D84  CFF5 F006          	movff	tablat,?___lldiv+5
  2320  000D88  0009               	tblrd		*+
  2321  000D8A  CFF5 F007          	movff	tablat,?___lldiv+6
  2322  000D8E  000A               	tblrd		*-
  2323  000D90  CFF5 F008          	movff	tablat,?___lldiv+7
  2324  000D94  EC8A  F011         	call	___lldiv	;wreg free
  2325  000D98  C001  F069         	movff	?___lldiv,sprintf@vd
  2326  000D9C  C002  F06A         	movff	?___lldiv+1,sprintf@vd+1
  2327                           
  2328                           ;doprnt.c: 1209: vd %= 10;
  2329  000DA0  C069  F001         	movff	sprintf@vd,?___lwmod
  2330  000DA4  C06A  F002         	movff	sprintf@vd+1,?___lwmod+1
  2331  000DA8  0E00               	movlw	0
  2332  000DAA  6E04               	movwf	?___lwmod+3,c
  2333  000DAC  0E0A               	movlw	10
  2334  000DAE  6E03               	movwf	?___lwmod+2,c
  2335  000DB0  EC72  F012         	call	___lwmod	;wreg free
  2336  000DB4  C001  F069         	movff	?___lwmod,sprintf@vd
  2337  000DB8  C002  F06A         	movff	?___lwmod+1,sprintf@vd+1
  2338                           
  2339                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
  2340  000DBC  0100               	movlb	0	; () banked
  2341  000DBE  0100               	movlb	0	; () banked
  2342  000DC0  5169               	movf	sprintf@vd& (0+255),w,b
  2343  000DC2  0F30               	addlw	48
  2344  000DC4  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2345  000DC8  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2346  000DCC                     L12:
  2347  000DCC  6EDF               	movwf	indf2,c
  2348                           
  2349                           ; BSR set to: 0
  2350  000DCE  4A4B               	infsnz	sprintf@sp,f,c
  2351  000DD0  2A4C               	incf	sprintf@sp+1,f,c
  2352  000DD2                     l4073:
  2353                           
  2354                           ; BSR set to: 0
  2355  000DD2  0100               	movlb	0	; () banked
  2356  000DD4  0100               	movlb	0	; () banked
  2357  000DD6  077E               	decf	sprintf@c& (0+255),f,b
  2358  000DD8  0100               	movlb	0	; () banked
  2359  000DDA  297E               	incf	sprintf@c& (0+255),w,b
  2360  000DDC  B4D8               	btfsc	status,2,c
  2361  000DDE  D00E               	goto	l4081
  2362  000DE0  D7BB               	goto	l4065
  2363  000DE2                     l4075:
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;doprnt.c: 1215: ((*sp++ = ('0')));
  2367  000DE2  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2368  000DE6  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2369  000DEA  0E30               	movlw	48
  2370  000DEC  6EDF               	movwf	indf2,c
  2371                           
  2372                           ; BSR set to: 0
  2373  000DEE  4A4B               	infsnz	sprintf@sp,f,c
  2374  000DF0  2A4C               	incf	sprintf@sp+1,f,c
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;doprnt.c: 1216: exp--;
  2378  000DF2  0100               	movlb	0	; () banked
  2379  000DF4  0100               	movlb	0	; () banked
  2380  000DF6  0777               	decf	sprintf@exp& (0+255),f,b
  2381  000DF8  A0D8               	btfss	status,0,c
  2382  000DFA  0778               	decf	(sprintf@exp+1)& (0+255),f,b
  2383  000DFC                     l4081:
  2384                           
  2385                           ; BSR set to: 0
  2386  000DFC  0100               	movlb	0	; () banked
  2387  000DFE  0100               	movlb	0	; () banked
  2388  000E00  5178               	movf	(sprintf@exp+1)& (0+255),w,b
  2389  000E02  0A80               	xorlw	128
  2390  000E04  0F80               	addlw	-128
  2391  000E06  0E01               	movlw	1
  2392  000E08  B4D8               	btfsc	status,2,c
  2393  000E0A  5D77               	subwf	sprintf@exp& (0+255),w,b
  2394  000E0C  B0D8               	btfsc	status,0,c
  2395  000E0E  D7E9               	goto	l4075
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;doprnt.c: 1217: }
  2399                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2400                           
  2401                           ; BSR set to: 0
  2402  000E10  0100               	movlb	0	; () banked
  2403  000E12  0100               	movlb	0	; () banked
  2404  000E14  517A               	movf	(sprintf@prec+1)& (0+255),w,b
  2405  000E16  0A80               	xorlw	128
  2406  000E18  0F80               	addlw	-128
  2407  000E1A  0E09               	movlw	9
  2408  000E1C  B4D8               	btfsc	status,2,c
  2409  000E1E  5D79               	subwf	sprintf@prec& (0+255),w,b
  2410  000E20  A0D8               	btfss	status,0,c
  2411  000E22  D007               	goto	l173
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2415  000E24  6E52               	movwf	??_sprintf& (0+255),c
  2416  000E26  0E08               	movlw	8
  2417  000E28  0100               	movlb	0	; () banked
  2418  000E2A  0100               	movlb	0	; () banked
  2419  000E2C  6F7E               	movwf	sprintf@c& (0+255),b
  2420  000E2E  5052               	movf	??_sprintf& (0+255),w,c
  2421  000E30  D002               	goto	l4087
  2422  000E32                     l173:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;doprnt.c: 1220: else
  2426                           ;doprnt.c: 1221: c = prec;
  2427  000E32  C079  F07E         	movff	sprintf@prec,sprintf@c
  2428  000E36                     l4087:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;doprnt.c: 1222: prec -= c;
  2432  000E36  0100               	movlb	0	; () banked
  2433  000E38  0100               	movlb	0	; () banked
  2434  000E3A  517E               	movf	sprintf@c& (0+255),w,b
  2435  000E3C  0100               	movlb	0	; () banked
  2436  000E3E  0100               	movlb	0	; () banked
  2437  000E40  5F79               	subwf	sprintf@prec& (0+255),f,b
  2438  000E42  0E00               	movlw	0
  2439  000E44  0100               	movlb	0	; () banked
  2440  000E46  BF7E               	btfsc	sprintf@c& (0+255),7,b
  2441  000E48  0EFF               	movlw	255
  2442  000E4A  0100               	movlb	0	; () banked
  2443  000E4C  0100               	movlb	0	; () banked
  2444  000E4E  5B7A               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;doprnt.c: 1226: if(c)
  2448  000E50  0100               	movlb	0	; () banked
  2449  000E52  0100               	movlb	0	; () banked
  2450  000E54  517E               	movf	sprintf@c& (0+255),w,b
  2451  000E56  B4D8               	btfsc	status,2,c
  2452  000E58  D008               	goto	l4095
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;doprnt.c: 1228: ((*sp++ = ('.')));
  2456  000E5A  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2457  000E5E  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2458  000E62  0E2E               	movlw	46
  2459  000E64  6EDF               	movwf	indf2,c
  2460                           
  2461                           ; BSR set to: 0
  2462  000E66  4A4B               	infsnz	sprintf@sp,f,c
  2463  000E68  2A4C               	incf	sprintf@sp+1,f,c
  2464  000E6A                     l4095:
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  2468  000E6A  C07E  F037         	movff	sprintf@c,?_scale
  2469  000E6E  EC50  F008         	call	_scale	;wreg free
  2470  000E72  C039  F062         	movff	?_scale+2,_sprintf$809+2
  2471  000E76  C038  F061         	movff	?_scale+1,_sprintf$809+1
  2472  000E7A  C037  F060         	movff	?_scale,_sprintf$809
  2473                           
  2474                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  2475  000E7E  C07B  F029         	movff	sprintf@fval,?___ftmul+3
  2476  000E82  C07C  F02A         	movff	sprintf@fval+1,?___ftmul+4
  2477  000E86  C07D  F02B         	movff	sprintf@fval+2,?___ftmul+5
  2478  000E8A  C060  F026         	movff	_sprintf$809,?___ftmul
  2479  000E8E  C061  F027         	movff	_sprintf$809+1,?___ftmul+1
  2480  000E92  C062  F028         	movff	_sprintf$809+2,?___ftmul+2
  2481  000E96  ECAD  F00E         	call	___ftmul	;wreg free
  2482  000E9A  C028  F019         	movff	?___ftmul+2,?___fttol+2
  2483  000E9E  C027  F018         	movff	?___ftmul+1,?___fttol+1
  2484  000EA2  C026  F017         	movff	?___ftmul,?___fttol
  2485  000EA6  EC2E  F010         	call	___fttol	;wreg free
  2486  000EAA  C01A  F072         	movff	?___fttol+3,sprintf@_val+3
  2487  000EAE  C019  F071         	movff	?___fttol+2,sprintf@_val+2
  2488  000EB2  C018  F070         	movff	?___fttol+1,sprintf@_val+1
  2489  000EB6  C017  F06F         	movff	?___fttol,sprintf@_val
  2490                           
  2491                           ;doprnt.c: 1235: while(c--) {
  2492  000EBA  D065               	goto	l4109
  2493  000EBC                     l4099:
  2494                           
  2495                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
  2496  000EBC  C06F  F001         	movff	sprintf@_val,?___lldiv
  2497  000EC0  C070  F002         	movff	sprintf@_val+1,?___lldiv+1
  2498  000EC4  C071  F003         	movff	sprintf@_val+2,?___lldiv+2
  2499  000EC8  C072  F004         	movff	sprintf@_val+3,?___lldiv+3
  2500  000ECC  0100               	movlb	0	; () banked
  2501  000ECE  0100               	movlb	0	; () banked
  2502  000ED0  517E               	movf	sprintf@c& (0+255),w,b
  2503  000ED2  0D04               	mullw	4
  2504  000ED4  0E00               	movlw	low _dpowers
  2505  000ED6  24F3               	addwf	prodl,w,c
  2506  000ED8  6EF6               	movwf	tblptrl,c
  2507  000EDA  0E08               	movlw	high _dpowers
  2508  000EDC  20F4               	addwfc	prodh,w,c
  2509  000EDE  6EF7               	movwf	tblptrh,c
  2510  000EE0  0009               	tblrd		*+
  2511  000EE2  CFF5 F005          	movff	tablat,?___lldiv+4
  2512  000EE6  0009               	tblrd		*+
  2513  000EE8  CFF5 F006          	movff	tablat,?___lldiv+5
  2514  000EEC  0009               	tblrd		*+
  2515  000EEE  CFF5 F007          	movff	tablat,?___lldiv+6
  2516  000EF2  000A               	tblrd		*-
  2517  000EF4  CFF5 F008          	movff	tablat,?___lldiv+7
  2518  000EF8  EC8A  F011         	call	___lldiv	;wreg free
  2519  000EFC  C001  F06B         	movff	?___lldiv,sprintf@vd_208
  2520  000F00  C002  F06C         	movff	?___lldiv+1,sprintf@vd_208+1
  2521                           
  2522                           ;doprnt.c: 1237: vd %= 10;
  2523  000F04  C06B  F001         	movff	sprintf@vd_208,?___lwmod
  2524  000F08  C06C  F002         	movff	sprintf@vd_208+1,?___lwmod+1
  2525  000F0C  0E00               	movlw	0
  2526  000F0E  6E04               	movwf	?___lwmod+3,c
  2527  000F10  0E0A               	movlw	10
  2528  000F12  6E03               	movwf	?___lwmod+2,c
  2529  000F14  EC72  F012         	call	___lwmod	;wreg free
  2530  000F18  C001  F06B         	movff	?___lwmod,sprintf@vd_208
  2531  000F1C  C002  F06C         	movff	?___lwmod+1,sprintf@vd_208+1
  2532                           
  2533                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
  2534  000F20  0100               	movlb	0	; () banked
  2535  000F22  0100               	movlb	0	; () banked
  2536  000F24  516B               	movf	sprintf@vd_208& (0+255),w,b
  2537  000F26  0F30               	addlw	48
  2538  000F28  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2539  000F2C  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2540  000F30  6EDF               	movwf	indf2,c
  2541                           
  2542                           ; BSR set to: 0
  2543  000F32  4A4B               	infsnz	sprintf@sp,f,c
  2544  000F34  2A4C               	incf	sprintf@sp+1,f,c
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;doprnt.c: 1239: _val._val %= dpowers[c];
  2548  000F36  C06F  F001         	movff	sprintf@_val,?___llmod
  2549  000F3A  C070  F002         	movff	sprintf@_val+1,?___llmod+1
  2550  000F3E  C071  F003         	movff	sprintf@_val+2,?___llmod+2
  2551  000F42  C072  F004         	movff	sprintf@_val+3,?___llmod+3
  2552  000F46  0100               	movlb	0	; () banked
  2553  000F48  0100               	movlb	0	; () banked
  2554  000F4A  517E               	movf	sprintf@c& (0+255),w,b
  2555  000F4C  0D04               	mullw	4
  2556  000F4E  0E00               	movlw	low _dpowers
  2557  000F50  24F3               	addwf	prodl,w,c
  2558  000F52  6EF6               	movwf	tblptrl,c
  2559  000F54  0E08               	movlw	high _dpowers
  2560  000F56  20F4               	addwfc	prodh,w,c
  2561  000F58  6EF7               	movwf	tblptrh,c
  2562  000F5A  0009               	tblrd		*+
  2563  000F5C  CFF5 F005          	movff	tablat,?___llmod+4
  2564  000F60  0009               	tblrd		*+
  2565  000F62  CFF5 F006          	movff	tablat,?___llmod+5
  2566  000F66  0009               	tblrd		*+
  2567  000F68  CFF5 F007          	movff	tablat,?___llmod+6
  2568  000F6C  000A               	tblrd		*-
  2569  000F6E  CFF5 F008          	movff	tablat,?___llmod+7
  2570  000F72  EC0B  F012         	call	___llmod	;wreg free
  2571  000F76  C004  F072         	movff	?___llmod+3,sprintf@_val+3
  2572  000F7A  C003  F071         	movff	?___llmod+2,sprintf@_val+2
  2573  000F7E  C002  F070         	movff	?___llmod+1,sprintf@_val+1
  2574  000F82  C001  F06F         	movff	?___llmod,sprintf@_val
  2575  000F86                     l4109:
  2576  000F86  0100               	movlb	0	; () banked
  2577  000F88  0100               	movlb	0	; () banked
  2578  000F8A  077E               	decf	sprintf@c& (0+255),f,b
  2579  000F8C  0100               	movlb	0	; () banked
  2580  000F8E  297E               	incf	sprintf@c& (0+255),w,b
  2581  000F90  B4D8               	btfsc	status,2,c
  2582  000F92  D00E               	goto	l4117
  2583  000F94  D793               	goto	l4099
  2584  000F96                     l4111:
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;doprnt.c: 1243: ((*sp++ = ('0')));
  2588  000F96  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2589  000F9A  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2590  000F9E  0E30               	movlw	48
  2591  000FA0  6EDF               	movwf	indf2,c
  2592                           
  2593                           ; BSR set to: 0
  2594  000FA2  4A4B               	infsnz	sprintf@sp,f,c
  2595  000FA4  2A4C               	incf	sprintf@sp+1,f,c
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;doprnt.c: 1244: prec--;
  2599  000FA6  0100               	movlb	0	; () banked
  2600  000FA8  0100               	movlb	0	; () banked
  2601  000FAA  0779               	decf	sprintf@prec& (0+255),f,b
  2602  000FAC  A0D8               	btfss	status,0,c
  2603  000FAE  077A               	decf	(sprintf@prec+1)& (0+255),f,b
  2604  000FB0                     l4117:
  2605                           
  2606                           ; BSR set to: 0
  2607  000FB0  0100               	movlb	0	; () banked
  2608  000FB2  0100               	movlb	0	; () banked
  2609  000FB4  517A               	movf	(sprintf@prec+1)& (0+255),w,b
  2610  000FB6  1179               	iorwf	sprintf@prec& (0+255),w,b
  2611  000FB8  B4D8               	btfsc	status,2,c
  2612  000FBA  D05D               	goto	l4139
  2613  000FBC  D7EC               	goto	l4111
  2614  000FBE                     l4119:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;doprnt.c: 1253: }
  2618                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
  2619  000FBE  0100               	movlb	0	; () banked
  2620  000FC0  0100               	movlb	0	; () banked
  2621  000FC2  517A               	movf	(sprintf@prec+1)& (0+255),w,b
  2622  000FC4  1179               	iorwf	sprintf@prec& (0+255),w,b
  2623  000FC6  A4D8               	btfss	status,2,c
  2624  000FC8  D00C               	goto	l4125
  2625                           
  2626                           ; BSR set to: 0
  2627  000FCA  0100               	movlb	0	; () banked
  2628  000FCC  0100               	movlb	0	; () banked
  2629  000FCE  5172               	movf	(sprintf@_val+3)& (0+255),w,b
  2630  000FD0  116F               	iorwf	sprintf@_val& (0+255),w,b
  2631  000FD2  1170               	iorwf	(sprintf@_val+1)& (0+255),w,b
  2632  000FD4  1171               	iorwf	(sprintf@_val+2)& (0+255),w,b
  2633  000FD6  A4D8               	btfss	status,2,c
  2634  000FD8  D004               	goto	l4125
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;doprnt.c: 1298: prec++;
  2638  000FDA  0100               	movlb	0	; () banked
  2639  000FDC  0100               	movlb	0	; () banked
  2640  000FDE  4B79               	infsnz	sprintf@prec& (0+255),f,b
  2641  000FE0  2B7A               	incf	(sprintf@prec+1)& (0+255),f,b
  2642  000FE2                     l4125:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;doprnt.c: 1346: if(c < prec)
  2646  000FE2  0E80               	movlw	128
  2647  000FE4  0100               	movlb	0	; () banked
  2648  000FE6  0100               	movlb	0	; () banked
  2649  000FE8  BF7E               	btfsc	sprintf@c& (0+255),7,b
  2650  000FEA  0E7F               	movlw	127
  2651  000FEC  6E52               	movwf	??_sprintf& (0+255),c
  2652  000FEE  0100               	movlb	0	; () banked
  2653  000FF0  0100               	movlb	0	; () banked
  2654  000FF2  5179               	movf	sprintf@prec& (0+255),w,b
  2655  000FF4  0100               	movlb	0	; () banked
  2656  000FF6  0100               	movlb	0	; () banked
  2657  000FF8  5D7E               	subwf	sprintf@c& (0+255),w,b
  2658  000FFA  0100               	movlb	0	; () banked
  2659  000FFC  0100               	movlb	0	; () banked
  2660  000FFE  517A               	movf	(sprintf@prec+1)& (0+255),w,b
  2661  001000  0A80               	xorlw	128
  2662  001002  5852               	subwfb	??_sprintf& (0+255),w,c
  2663  001004  B0D8               	btfsc	status,0,c
  2664  001006  D003               	goto	l4129
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;doprnt.c: 1347: c = prec;
  2668  001008  C079  F07E         	movff	sprintf@prec,sprintf@c
  2669  00100C  D01E               	goto	l4133
  2670  00100E                     l4129:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;doprnt.c: 1348: else if(prec < c)
  2674  00100E  0100               	movlb	0	; () banked
  2675  001010  0100               	movlb	0	; () banked
  2676  001012  517A               	movf	(sprintf@prec+1)& (0+255),w,b
  2677  001014  0A80               	xorlw	128
  2678  001016  6E52               	movwf	??_sprintf& (0+255),c
  2679  001018  0100               	movlb	0	; () banked
  2680  00101A  0100               	movlb	0	; () banked
  2681  00101C  517E               	movf	sprintf@c& (0+255),w,b
  2682  00101E  0100               	movlb	0	; () banked
  2683  001020  0100               	movlb	0	; () banked
  2684  001022  5D79               	subwf	sprintf@prec& (0+255),w,b
  2685  001024  0E80               	movlw	128
  2686  001026  0100               	movlb	0	; () banked
  2687  001028  0100               	movlb	0	; () banked
  2688  00102A  BF7E               	btfsc	sprintf@c& (0+255),7,b
  2689  00102C  0E7F               	movlw	127
  2690  00102E  5852               	subwfb	??_sprintf& (0+255),w,c
  2691  001030  B0D8               	btfsc	status,0,c
  2692  001032  D00B               	goto	l4133
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;doprnt.c: 1349: prec = c;
  2696  001034  0100               	movlb	0	; () banked
  2697  001036  0100               	movlb	0	; () banked
  2698  001038  517E               	movf	sprintf@c& (0+255),w,b
  2699  00103A  0100               	movlb	0	; () banked
  2700  00103C  0100               	movlb	0	; () banked
  2701  00103E  6F79               	movwf	sprintf@prec& (0+255),b
  2702  001040  0100               	movlb	0	; () banked
  2703  001042  6B7A               	clrf	(sprintf@prec+1)& (0+255),b
  2704  001044  0100               	movlb	0	; () banked
  2705  001046  BF79               	btfsc	sprintf@prec& (0+255),7,b
  2706  001048  077A               	decf	(sprintf@prec+1)& (0+255),f,b
  2707  00104A                     l4133:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;doprnt.c: 1429: {
  2711                           ;doprnt.c: 1445: if(flag & 0x03)
  2712  00104A  0E03               	movlw	3
  2713  00104C  0100               	movlb	0	; () banked
  2714  00104E  0100               	movlb	0	; () banked
  2715  001050  156D               	andwf	sprintf@flag& (0+255),w,b
  2716  001052  6E52               	movwf	??_sprintf& (0+255),c
  2717  001054  0E00               	movlw	0
  2718  001056  0100               	movlb	0	; () banked
  2719  001058  0100               	movlb	0	; () banked
  2720  00105A  156E               	andwf	(sprintf@flag+1)& (0+255),w,b
  2721  00105C  6E53               	movwf	(??_sprintf+1)& (0+255),c
  2722  00105E  5053               	movf	??_sprintf+1,w,c
  2723  001060  1052               	iorwf	??_sprintf,w,c
  2724  001062  B4D8               	btfsc	status,2,c
  2725  001064  D008               	goto	l4139
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  2729  001066  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2730  00106A  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2731  00106E  0E2D               	movlw	45
  2732  001070  6EDF               	movwf	indf2,c
  2733  001072                     L9:
  2734                           
  2735                           ; BSR set to: 0
  2736  001072  4A4B               	infsnz	sprintf@sp,f,c
  2737  001074  2A4C               	incf	sprintf@sp+1,f,c
  2738  001076                     l4139:
  2739                           
  2740                           ; BSR set to: 0
  2741  001076  C04D  FFF6         	movff	sprintf@f,tblptrl
  2742  00107A  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  2743  00107E  4A4D               	infsnz	sprintf@f,f,c
  2744  001080  2A4E               	incf	sprintf@f+1,f,c
  2745  001082  0008               	tblrd		*
  2746  001084  0100               	movlb	0	; () banked
  2747  001086  CFF5 F07E          	movff	tablat,sprintf@c
  2748  00108A  0100               	movlb	0	; () banked
  2749  00108C  677E               	tstfsz	sprintf@c& (0+255),b
  2750  00108E  EF46  F004         	goto	l3937
  2751  001092                     l4141:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;doprnt.c: 1545: *sp = 0;
  2755  001092  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2756  001096  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2757  00109A  0E00               	movlw	0
  2758  00109C  6EDF               	movwf	indf2,c
  2759                           
  2760                           ; BSR set to: 0
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;doprnt.c: 1547: return 0;
  2764                           ;	Return value of _sprintf is never used
  2765  00109E  0012               	return	
  2766  0010A0                     __end_of_sprintf:
  2767                           	opt stack 0
  2768                           tblptru	equ	0xFF8
  2769                           tblptrh	equ	0xFF7
  2770                           tblptrl	equ	0xFF6
  2771                           tablat	equ	0xFF5
  2772                           prodh	equ	0xFF4
  2773                           prodl	equ	0xFF3
  2774                           wreg	equ	0xFE8
  2775                           indf2	equ	0xFDF
  2776                           postinc2	equ	0xFDE
  2777                           postdec2	equ	0xFDD
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function ___lwmod *****************
  2783 ;; Defined at:
  2784 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\lwmod.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  dividend        2    0[COMRAM] unsigned int 
  2787 ;;  divisor         2    2[COMRAM] unsigned int 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  counter         1    5[COMRAM] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  2    0[COMRAM] unsigned int 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2799 ;;      Params:         4       0       0       0       0       0       0       0       0
  2800 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2801 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2802 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2803 ;;Total ram usage:        6 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_sprintf
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text6
  2813  0024E4                     __ptext6:
  2814                           	opt stack 0
  2815  0024E4                     ___lwmod:
  2816                           	opt stack 29
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;incstack = 0
  2820                           ;incstack = 0
  2821  0024E4  5004               	movf	___lwmod@divisor+1,w,c
  2822  0024E6  1003               	iorwf	___lwmod@divisor,w,c
  2823  0024E8  B4D8               	btfsc	status,2,c
  2824  0024EA  D01A               	goto	l743
  2825  0024EC  6E05               	movwf	??___lwmod& (0+255),c
  2826  0024EE  0E01               	movlw	1
  2827  0024F0  6E06               	movwf	___lwmod@counter,c
  2828  0024F2  5005               	movf	??___lwmod& (0+255),w,c
  2829  0024F4  D004               	goto	l3555
  2830  0024F6                     l3553:
  2831  0024F6  90D8               	bcf	status,0,c
  2832  0024F8  3603               	rlcf	___lwmod@divisor,f,c
  2833  0024FA  3604               	rlcf	___lwmod@divisor+1,f,c
  2834  0024FC  2A06               	incf	___lwmod@counter,f,c
  2835  0024FE                     l3555:
  2836  0024FE  AE04               	btfss	___lwmod@divisor+1,7,c
  2837  002500  D7FA               	goto	l3553
  2838  002502                     l3557:
  2839  002502  5003               	movf	___lwmod@divisor,w,c
  2840  002504  5C01               	subwf	___lwmod@dividend,w,c
  2841  002506  5004               	movf	___lwmod@divisor+1,w,c
  2842  002508  5802               	subwfb	___lwmod@dividend+1,w,c
  2843  00250A  A0D8               	btfss	status,0,c
  2844  00250C  D004               	goto	l3561
  2845  00250E  5003               	movf	___lwmod@divisor,w,c
  2846  002510  5E01               	subwf	___lwmod@dividend,f,c
  2847  002512  5004               	movf	___lwmod@divisor+1,w,c
  2848  002514  5A02               	subwfb	___lwmod@dividend+1,f,c
  2849  002516                     l3561:
  2850  002516  90D8               	bcf	status,0,c
  2851  002518  3204               	rrcf	___lwmod@divisor+1,f,c
  2852  00251A  3203               	rrcf	___lwmod@divisor,f,c
  2853  00251C  2E06               	decfsz	___lwmod@counter,f,c
  2854  00251E  D7F1               	goto	l3557
  2855  002520                     l743:
  2856  002520  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2857  002524  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2858  002528  0012               	return	
  2859  00252A                     __end_of___lwmod:
  2860                           	opt stack 0
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           prodh	equ	0xFF4
  2866                           prodl	equ	0xFF3
  2867                           wreg	equ	0xFE8
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function ___lltoft *****************
  2876 ;; Defined at:
  2877 ;;		line 36 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\lltoft.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  c               4    8[COMRAM] unsigned long 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  exp             1   16[COMRAM] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  3    8[COMRAM] float 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2891 ;;      Params:         4       0       0       0       0       0       0       0       0
  2892 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2893 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2894 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2895 ;;Total ram usage:        9 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    1
  2898 ;; This function calls:
  2899 ;;		___ftpack
  2900 ;; This function is called by:
  2901 ;;		_sprintf
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text7
  2906  002480                     __ptext7:
  2907                           	opt stack 0
  2908  002480                     ___lltoft:
  2909                           	opt stack 28
  2910                           
  2911                           ;incstack = 0
  2912                           ;incstack = 0
  2913  002480  6E0D               	movwf	??___lltoft& (0+255),c
  2914  002482  0E8E               	movlw	142
  2915  002484  6E11               	movwf	___lltoft@exp,c
  2916  002486  500D               	movf	??___lltoft& (0+255),w,c
  2917  002488  D006               	goto	l3775
  2918  00248A                     l3773:
  2919  00248A  90D8               	bcf	status,0,c
  2920  00248C  320C               	rrcf	___lltoft@c+3,f,c
  2921  00248E  320B               	rrcf	___lltoft@c+2,f,c
  2922  002490  320A               	rrcf	___lltoft@c+1,f,c
  2923  002492  3209               	rrcf	___lltoft@c,f,c
  2924  002494  2A11               	incf	___lltoft@exp,f,c
  2925  002496                     l3775:
  2926  002496  0E00               	movlw	0
  2927  002498  1409               	andwf	___lltoft@c,w,c
  2928  00249A  6E0D               	movwf	??___lltoft& (0+255),c
  2929  00249C  0E00               	movlw	0
  2930  00249E  140A               	andwf	___lltoft@c+1,w,c
  2931  0024A0  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  2932  0024A2  0E00               	movlw	0
  2933  0024A4  140B               	andwf	___lltoft@c+2,w,c
  2934  0024A6  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  2935  0024A8  0EFF               	movlw	255
  2936  0024AA  140C               	andwf	___lltoft@c+3,w,c
  2937  0024AC  6E10               	movwf	(??___lltoft+3)& (0+255),c
  2938  0024AE  5010               	movf	??___lltoft+3,w,c
  2939  0024B0  100D               	iorwf	??___lltoft,w,c
  2940  0024B2  100E               	iorwf	??___lltoft+1,w,c
  2941  0024B4  100F               	iorwf	??___lltoft+2,w,c
  2942  0024B6  A4D8               	btfss	status,2,c
  2943  0024B8  D7E8               	goto	l3773
  2944  0024BA  C009  F001         	movff	___lltoft@c,?___ftpack
  2945  0024BE  C00A  F002         	movff	___lltoft@c+1,?___ftpack+1
  2946  0024C2  C00B  F003         	movff	___lltoft@c+2,?___ftpack+2
  2947  0024C6  C011  F004         	movff	___lltoft@exp,?___ftpack+3
  2948  0024CA  6E0D               	movwf	??___lltoft& (0+255),c
  2949  0024CC  0E00               	movlw	0
  2950  0024CE  6E05               	movwf	?___ftpack+4,c
  2951  0024D0  500D               	movf	??___lltoft& (0+255),w,c
  2952  0024D2  EC9E  F010         	call	___ftpack	;wreg free
  2953  0024D6  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  2954  0024DA  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  2955  0024DE  C001  F009         	movff	?___ftpack,?___lltoft
  2956  0024E2  0012               	return	
  2957  0024E4                     __end_of___lltoft:
  2958                           	opt stack 0
  2959                           tblptru	equ	0xFF8
  2960                           tblptrh	equ	0xFF7
  2961                           tblptrl	equ	0xFF6
  2962                           tablat	equ	0xFF5
  2963                           prodh	equ	0xFF4
  2964                           prodl	equ	0xFF3
  2965                           wreg	equ	0xFE8
  2966                           indf2	equ	0xFDF
  2967                           postinc2	equ	0xFDE
  2968                           postdec2	equ	0xFDD
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function ___llmod *****************
  2974 ;; Defined at:
  2975 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\llmod.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  dividend        4    0[COMRAM] unsigned long 
  2978 ;;  divisor         4    4[COMRAM] unsigned long 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  counter         1    9[COMRAM] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  4    0[COMRAM] unsigned long 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2990 ;;      Params:         8       0       0       0       0       0       0       0       0
  2991 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2992 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2993 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2994 ;;Total ram usage:       10 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_sprintf
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text8
  3004  002416                     __ptext8:
  3005                           	opt stack 0
  3006  002416                     ___llmod:
  3007                           	opt stack 29
  3008                           
  3009                           ;incstack = 0
  3010                           ;incstack = 0
  3011  002416  5008               	movf	___llmod@divisor+3,w,c
  3012  002418  1005               	iorwf	___llmod@divisor,w,c
  3013  00241A  1006               	iorwf	___llmod@divisor+1,w,c
  3014  00241C  1007               	iorwf	___llmod@divisor+2,w,c
  3015  00241E  B4D8               	btfsc	status,2,c
  3016  002420  D026               	goto	l674
  3017  002422  6E09               	movwf	??___llmod& (0+255),c
  3018  002424  0E01               	movlw	1
  3019  002426  6E0A               	movwf	___llmod@counter,c
  3020  002428  5009               	movf	??___llmod& (0+255),w,c
  3021  00242A  D006               	goto	l3539
  3022  00242C                     l3537:
  3023  00242C  90D8               	bcf	status,0,c
  3024  00242E  3605               	rlcf	___llmod@divisor,f,c
  3025  002430  3606               	rlcf	___llmod@divisor+1,f,c
  3026  002432  3607               	rlcf	___llmod@divisor+2,f,c
  3027  002434  3608               	rlcf	___llmod@divisor+3,f,c
  3028  002436  2A0A               	incf	___llmod@counter,f,c
  3029  002438                     l3539:
  3030  002438  AE08               	btfss	___llmod@divisor+3,7,c
  3031  00243A  D7F8               	goto	l3537
  3032  00243C                     l3541:
  3033  00243C  5005               	movf	___llmod@divisor,w,c
  3034  00243E  5C01               	subwf	___llmod@dividend,w,c
  3035  002440  5006               	movf	___llmod@divisor+1,w,c
  3036  002442  5802               	subwfb	___llmod@dividend+1,w,c
  3037  002444  5007               	movf	___llmod@divisor+2,w,c
  3038  002446  5803               	subwfb	___llmod@dividend+2,w,c
  3039  002448  5008               	movf	___llmod@divisor+3,w,c
  3040  00244A  5804               	subwfb	___llmod@dividend+3,w,c
  3041  00244C  A0D8               	btfss	status,0,c
  3042  00244E  D008               	goto	l3545
  3043  002450  5005               	movf	___llmod@divisor,w,c
  3044  002452  5E01               	subwf	___llmod@dividend,f,c
  3045  002454  5006               	movf	___llmod@divisor+1,w,c
  3046  002456  5A02               	subwfb	___llmod@dividend+1,f,c
  3047  002458  5007               	movf	___llmod@divisor+2,w,c
  3048  00245A  5A03               	subwfb	___llmod@dividend+2,f,c
  3049  00245C  5008               	movf	___llmod@divisor+3,w,c
  3050  00245E  5A04               	subwfb	___llmod@dividend+3,f,c
  3051  002460                     l3545:
  3052  002460  90D8               	bcf	status,0,c
  3053  002462  3208               	rrcf	___llmod@divisor+3,f,c
  3054  002464  3207               	rrcf	___llmod@divisor+2,f,c
  3055  002466  3206               	rrcf	___llmod@divisor+1,f,c
  3056  002468  3205               	rrcf	___llmod@divisor,f,c
  3057  00246A  2E0A               	decfsz	___llmod@counter,f,c
  3058  00246C  D7E7               	goto	l3541
  3059  00246E                     l674:
  3060  00246E  C001  F001         	movff	___llmod@dividend,?___llmod
  3061  002472  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3062  002476  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3063  00247A  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3064  00247E  0012               	return	
  3065  002480                     __end_of___llmod:
  3066                           	opt stack 0
  3067                           tblptru	equ	0xFF8
  3068                           tblptrh	equ	0xFF7
  3069                           tblptrl	equ	0xFF6
  3070                           tablat	equ	0xFF5
  3071                           prodh	equ	0xFF4
  3072                           prodl	equ	0xFF3
  3073                           wreg	equ	0xFE8
  3074                           indf2	equ	0xFDF
  3075                           postinc2	equ	0xFDE
  3076                           postdec2	equ	0xFDD
  3077                           fsr2h	equ	0xFDA
  3078                           fsr2l	equ	0xFD9
  3079                           status	equ	0xFD8
  3080                           
  3081 ;; *************** function ___lldiv *****************
  3082 ;; Defined at:
  3083 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\lldiv.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  dividend        4    0[COMRAM] unsigned long 
  3086 ;;  divisor         4    4[COMRAM] unsigned long 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  quotient        4    9[COMRAM] unsigned long 
  3089 ;;  counter         1   13[COMRAM] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  4    0[COMRAM] unsigned long 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3099 ;;      Params:         8       0       0       0       0       0       0       0       0
  3100 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3101 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3102 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3103 ;;Total ram usage:       14 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_sprintf
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text9
  3113  002314                     __ptext9:
  3114                           	opt stack 0
  3115  002314                     ___lldiv:
  3116                           	opt stack 29
  3117                           
  3118                           ;incstack = 0
  3119                           ;incstack = 0
  3120  002314  0E00               	movlw	0
  3121  002316  6E0A               	movwf	___lldiv@quotient,c
  3122  002318  0E00               	movlw	0
  3123  00231A  6E0B               	movwf	___lldiv@quotient+1,c
  3124  00231C  0E00               	movlw	0
  3125  00231E  6E0C               	movwf	___lldiv@quotient+2,c
  3126  002320  0E00               	movlw	0
  3127  002322  6E0D               	movwf	___lldiv@quotient+3,c
  3128  002324  5008               	movf	___lldiv@divisor+3,w,c
  3129  002326  1005               	iorwf	___lldiv@divisor,w,c
  3130  002328  1006               	iorwf	___lldiv@divisor+1,w,c
  3131  00232A  1007               	iorwf	___lldiv@divisor+2,w,c
  3132  00232C  B4D8               	btfsc	status,2,c
  3133  00232E  D02C               	goto	l664
  3134  002330  6E09               	movwf	??___lldiv& (0+255),c
  3135  002332  0E01               	movlw	1
  3136  002334  6E0E               	movwf	___lldiv@counter,c
  3137  002336  5009               	movf	??___lldiv& (0+255),w,c
  3138  002338  D006               	goto	l3519
  3139  00233A                     l3517:
  3140  00233A  90D8               	bcf	status,0,c
  3141  00233C  3605               	rlcf	___lldiv@divisor,f,c
  3142  00233E  3606               	rlcf	___lldiv@divisor+1,f,c
  3143  002340  3607               	rlcf	___lldiv@divisor+2,f,c
  3144  002342  3608               	rlcf	___lldiv@divisor+3,f,c
  3145  002344  2A0E               	incf	___lldiv@counter,f,c
  3146  002346                     l3519:
  3147  002346  AE08               	btfss	___lldiv@divisor+3,7,c
  3148  002348  D7F8               	goto	l3517
  3149  00234A                     l3521:
  3150  00234A  90D8               	bcf	status,0,c
  3151  00234C  360A               	rlcf	___lldiv@quotient,f,c
  3152  00234E  360B               	rlcf	___lldiv@quotient+1,f,c
  3153  002350  360C               	rlcf	___lldiv@quotient+2,f,c
  3154  002352  360D               	rlcf	___lldiv@quotient+3,f,c
  3155  002354  5005               	movf	___lldiv@divisor,w,c
  3156  002356  5C01               	subwf	___lldiv@dividend,w,c
  3157  002358  5006               	movf	___lldiv@divisor+1,w,c
  3158  00235A  5802               	subwfb	___lldiv@dividend+1,w,c
  3159  00235C  5007               	movf	___lldiv@divisor+2,w,c
  3160  00235E  5803               	subwfb	___lldiv@dividend+2,w,c
  3161  002360  5008               	movf	___lldiv@divisor+3,w,c
  3162  002362  5804               	subwfb	___lldiv@dividend+3,w,c
  3163  002364  A0D8               	btfss	status,0,c
  3164  002366  D009               	goto	l3529
  3165  002368  5005               	movf	___lldiv@divisor,w,c
  3166  00236A  5E01               	subwf	___lldiv@dividend,f,c
  3167  00236C  5006               	movf	___lldiv@divisor+1,w,c
  3168  00236E  5A02               	subwfb	___lldiv@dividend+1,f,c
  3169  002370  5007               	movf	___lldiv@divisor+2,w,c
  3170  002372  5A03               	subwfb	___lldiv@dividend+2,f,c
  3171  002374  5008               	movf	___lldiv@divisor+3,w,c
  3172  002376  5A04               	subwfb	___lldiv@dividend+3,f,c
  3173  002378  800A               	bsf	___lldiv@quotient,0,c
  3174  00237A                     l3529:
  3175  00237A  90D8               	bcf	status,0,c
  3176  00237C  3208               	rrcf	___lldiv@divisor+3,f,c
  3177  00237E  3207               	rrcf	___lldiv@divisor+2,f,c
  3178  002380  3206               	rrcf	___lldiv@divisor+1,f,c
  3179  002382  3205               	rrcf	___lldiv@divisor,f,c
  3180  002384  2E0E               	decfsz	___lldiv@counter,f,c
  3181  002386  D7E1               	goto	l3521
  3182  002388                     l664:
  3183  002388  C00A  F001         	movff	___lldiv@quotient,?___lldiv
  3184  00238C  C00B  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3185  002390  C00C  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3186  002394  C00D  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3187  002398  0012               	return	
  3188  00239A                     __end_of___lldiv:
  3189                           	opt stack 0
  3190                           tblptru	equ	0xFF8
  3191                           tblptrh	equ	0xFF7
  3192                           tblptrl	equ	0xFF6
  3193                           tablat	equ	0xFF5
  3194                           prodh	equ	0xFF4
  3195                           prodl	equ	0xFF3
  3196                           wreg	equ	0xFE8
  3197                           indf2	equ	0xFDF
  3198                           postinc2	equ	0xFDE
  3199                           postdec2	equ	0xFDD
  3200                           fsr2h	equ	0xFDA
  3201                           fsr2l	equ	0xFD9
  3202                           status	equ	0xFD8
  3203                           
  3204 ;; *************** function ___fttol *****************
  3205 ;; Defined at:
  3206 ;;		line 45 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\fttol.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  f1              3   22[COMRAM] float 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  lval            4   32[COMRAM] unsigned long 
  3211 ;;  exp1            1   36[COMRAM] unsigned char 
  3212 ;;  sign1           1   31[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  4   22[COMRAM] long 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3222 ;;      Params:         4       0       0       0       0       0       0       0       0
  3223 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3224 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3225 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3226 ;;Total ram usage:       15 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_sprintf
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text10
  3236  00205C                     __ptext10:
  3237                           	opt stack 0
  3238  00205C                     ___fttol:
  3239                           	opt stack 29
  3240                           
  3241                           ;incstack = 0
  3242                           ;incstack = 0
  3243  00205C  0E0F               	movlw	15
  3244  00205E  6E1B               	movwf	??___fttol& (0+255),c
  3245  002060  C017  F01C         	movff	___fttol@f1,??___fttol+1
  3246  002064  C018  F01D         	movff	___fttol@f1+1,??___fttol+2
  3247  002068  C019  F01E         	movff	___fttol@f1+2,??___fttol+3
  3248  00206C  281B               	incf	??___fttol,w,c
  3249  00206E  6E1F               	movwf	(??___fttol+4)& (0+255),c
  3250  002070  D004               	goto	u2520
  3251  002072                     u2525:
  3252  002072  90D8               	bcf	status,0,c
  3253  002074  321E               	rrcf	??___fttol+3,f,c
  3254  002076  321D               	rrcf	??___fttol+2,f,c
  3255  002078  321C               	rrcf	??___fttol+1,f,c
  3256  00207A                     u2520:
  3257  00207A  2E1F               	decfsz	(??___fttol+4)& (0+255),f,c
  3258  00207C  D7FA               	goto	u2525
  3259  00207E  501C               	movf	??___fttol+1,w,c
  3260  002080  6E25               	movwf	___fttol@exp1,c
  3261  002082  6625               	tstfsz	___fttol@exp1& (0+255),c
  3262  002084  D001               	goto	l3895
  3263  002086  D035               	goto	u2570
  3264  002088                     l3895:
  3265  002088  0E17               	movlw	23
  3266  00208A  6E1B               	movwf	??___fttol& (0+255),c
  3267  00208C  C017  F01C         	movff	___fttol@f1,??___fttol+1
  3268  002090  C018  F01D         	movff	___fttol@f1+1,??___fttol+2
  3269  002094  C019  F01E         	movff	___fttol@f1+2,??___fttol+3
  3270  002098  281B               	incf	??___fttol,w,c
  3271  00209A  6E1F               	movwf	(??___fttol+4)& (0+255),c
  3272  00209C  D004               	goto	u2540
  3273  00209E                     u2545:
  3274  00209E  90D8               	bcf	status,0,c
  3275  0020A0  321E               	rrcf	??___fttol+3,f,c
  3276  0020A2  321D               	rrcf	??___fttol+2,f,c
  3277  0020A4  321C               	rrcf	??___fttol+1,f,c
  3278  0020A6                     u2540:
  3279  0020A6  2E1F               	decfsz	(??___fttol+4)& (0+255),f,c
  3280  0020A8  D7FA               	goto	u2545
  3281  0020AA  501C               	movf	??___fttol+1,w,c
  3282  0020AC  6E20               	movwf	___fttol@sign1,c
  3283  0020AE  8E18               	bsf	___fttol@f1+1,7,c
  3284  0020B0  0EFF               	movlw	255
  3285  0020B2  1617               	andwf	___fttol@f1,f,c
  3286  0020B4  0EFF               	movlw	255
  3287  0020B6  1618               	andwf	___fttol@f1+1,f,c
  3288  0020B8  0E00               	movlw	0
  3289  0020BA  1619               	andwf	___fttol@f1+2,f,c
  3290  0020BC  5017               	movf	___fttol@f1,w,c
  3291  0020BE  6E21               	movwf	___fttol@lval,c
  3292  0020C0  5018               	movf	___fttol@f1+1,w,c
  3293  0020C2  6E22               	movwf	___fttol@lval+1,c
  3294  0020C4  5019               	movf	___fttol@f1+2,w,c
  3295  0020C6  6E23               	movwf	___fttol@lval+2,c
  3296  0020C8  6A24               	clrf	___fttol@lval+3,c
  3297  0020CA  0E8E               	movlw	142
  3298  0020CC  5E25               	subwf	___fttol@exp1,f,c
  3299  0020CE  AE25               	btfss	___fttol@exp1,7,c
  3300  0020D0  D00D               	goto	l3917
  3301  0020D2  5025               	movf	___fttol@exp1,w,c
  3302  0020D4  0A80               	xorlw	128
  3303  0020D6  0F8F               	addlw	143
  3304  0020D8  A0D8               	btfss	status,0,c
  3305  0020DA  D00B               	goto	u2570
  3306  0020DC                     l3913:
  3307  0020DC  90D8               	bcf	status,0,c
  3308  0020DE  3224               	rrcf	___fttol@lval+3,f,c
  3309  0020E0  3223               	rrcf	___fttol@lval+2,f,c
  3310  0020E2  3222               	rrcf	___fttol@lval+1,f,c
  3311  0020E4  3221               	rrcf	___fttol@lval,f,c
  3312  0020E6  3E25               	incfsz	___fttol@exp1,f,c
  3313  0020E8  D7F9               	goto	l3913
  3314  0020EA  D014               	goto	l3927
  3315  0020EC                     l3917:
  3316  0020EC  0E17               	movlw	23
  3317  0020EE  6425               	cpfsgt	___fttol@exp1,c
  3318  0020F0  D00F               	goto	l3925
  3319  0020F2                     u2570:
  3320  0020F2  0E00               	movlw	0
  3321  0020F4  6E17               	movwf	?___fttol,c
  3322  0020F6  0E00               	movlw	0
  3323  0020F8  6E18               	movwf	?___fttol+1,c
  3324  0020FA  0E00               	movlw	0
  3325  0020FC  6E19               	movwf	?___fttol+2,c
  3326  0020FE  0E00               	movlw	0
  3327  002100  6E1A               	movwf	?___fttol+3,c
  3328  002102  D01B               	goto	l620
  3329  002104                     l3923:
  3330  002104  90D8               	bcf	status,0,c
  3331  002106  3621               	rlcf	___fttol@lval,f,c
  3332  002108  3622               	rlcf	___fttol@lval+1,f,c
  3333  00210A  3623               	rlcf	___fttol@lval+2,f,c
  3334  00210C  3624               	rlcf	___fttol@lval+3,f,c
  3335  00210E  0625               	decf	___fttol@exp1,f,c
  3336  002110                     l3925:
  3337  002110  6625               	tstfsz	___fttol@exp1,c
  3338  002112  D7F8               	goto	l3923
  3339  002114                     l3927:
  3340  002114  5020               	movf	___fttol@sign1,w,c
  3341  002116  B4D8               	btfsc	status,2,c
  3342  002118  D008               	goto	l3931
  3343  00211A  1E24               	comf	___fttol@lval+3,f,c
  3344  00211C  1E23               	comf	___fttol@lval+2,f,c
  3345  00211E  1E22               	comf	___fttol@lval+1,f,c
  3346  002120  6C21               	negf	___fttol@lval,c
  3347  002122  0E00               	movlw	0
  3348  002124  2222               	addwfc	___fttol@lval+1,f,c
  3349  002126  2223               	addwfc	___fttol@lval+2,f,c
  3350  002128  2224               	addwfc	___fttol@lval+3,f,c
  3351  00212A                     l3931:
  3352  00212A  C021  F017         	movff	___fttol@lval,?___fttol
  3353  00212E  C022  F018         	movff	___fttol@lval+1,?___fttol+1
  3354  002132  C023  F019         	movff	___fttol@lval+2,?___fttol+2
  3355  002136  C024  F01A         	movff	___fttol@lval+3,?___fttol+3
  3356  00213A                     l620:
  3357  00213A  0012               	return	
  3358  00213C                     __end_of___fttol:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           prodh	equ	0xFF4
  3365                           prodl	equ	0xFF3
  3366                           wreg	equ	0xFE8
  3367                           indf2	equ	0xFDF
  3368                           postinc2	equ	0xFDE
  3369                           postdec2	equ	0xFDD
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function ___ftneg *****************
  3375 ;; Defined at:
  3376 ;;		line 16 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftneg.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  f1              3    0[COMRAM] float 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  3    0[COMRAM] float 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3390 ;;      Params:         3       0       0       0       0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3393 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3394 ;;Total ram usage:        3 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_sprintf
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text11
  3404  002742                     __ptext11:
  3405                           	opt stack 0
  3406  002742                     ___ftneg:
  3407                           	opt stack 29
  3408                           
  3409                           ;incstack = 0
  3410                           ;incstack = 0
  3411  002742  0E7F               	movlw	127
  3412  002744  1403               	andwf	___ftneg@f1+2,w,c
  3413  002746  1002               	iorwf	___ftneg@f1+1,w,c
  3414  002748  1001               	iorwf	___ftneg@f1,w,c
  3415  00274A  B4D8               	btfsc	status,2,c
  3416  00274C  D006               	goto	l610
  3417  00274E  0E00               	movlw	0
  3418  002750  1A01               	xorwf	___ftneg@f1,f,c
  3419  002752  0E00               	movlw	0
  3420  002754  1A02               	xorwf	___ftneg@f1+1,f,c
  3421  002756  0E80               	movlw	128
  3422  002758  1A03               	xorwf	___ftneg@f1+2,f,c
  3423  00275A                     l610:
  3424  00275A  C001  F001         	movff	___ftneg@f1,?___ftneg
  3425  00275E  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  3426  002762  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  3427  002766  0012               	return	
  3428  002768                     __end_of___ftneg:
  3429                           	opt stack 0
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           prodh	equ	0xFF4
  3435                           prodl	equ	0xFF3
  3436                           wreg	equ	0xFE8
  3437                           indf2	equ	0xFDF
  3438                           postinc2	equ	0xFDE
  3439                           postdec2	equ	0xFDD
  3440                           fsr2h	equ	0xFDA
  3441                           fsr2l	equ	0xFD9
  3442                           status	equ	0xFD8
  3443                           
  3444 ;; *************** function ___ftge *****************
  3445 ;; Defined at:
  3446 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftge.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  ff1             3    0[COMRAM] float 
  3449 ;;  ff2             3    3[COMRAM] float 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;		None               void
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3461 ;;      Params:         6       0       0       0       0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3463 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3464 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3465 ;;Total ram usage:        9 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_main
  3471 ;;		_sprintf
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text12
  3476  0021F4                     __ptext12:
  3477                           	opt stack 0
  3478  0021F4                     ___ftge:
  3479                           	opt stack 30
  3480                           
  3481                           ;incstack = 0
  3482                           ;incstack = 0
  3483  0021F4  AE03               	btfss	___ftge@ff1+2,7,c
  3484  0021F6  D016               	goto	l3493
  3485  0021F8  C001  F007         	movff	___ftge@ff1,??___ftge
  3486  0021FC  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3487  002200  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3488  002204  1E07               	comf	??___ftge,f,c
  3489  002206  1E08               	comf	??___ftge+1,f,c
  3490  002208  1E09               	comf	??___ftge+2,f,c
  3491  00220A  2A07               	incf	??___ftge,f,c
  3492  00220C  0E00               	movlw	0
  3493  00220E  2208               	addwfc	??___ftge+1,f,c
  3494  002210  2209               	addwfc	??___ftge+2,f,c
  3495  002212  0E00               	movlw	0
  3496  002214  2407               	addwf	??___ftge,w,c
  3497  002216  6E01               	movwf	___ftge@ff1,c
  3498  002218  0E00               	movlw	0
  3499  00221A  2008               	addwfc	??___ftge+1,w,c
  3500  00221C  6E02               	movwf	___ftge@ff1+1,c
  3501  00221E  0E80               	movlw	128
  3502  002220  2009               	addwfc	??___ftge+2,w,c
  3503  002222  6E03               	movwf	___ftge@ff1+2,c
  3504  002224                     l3493:
  3505  002224  AE06               	btfss	___ftge@ff2+2,7,c
  3506  002226  D016               	goto	l3497
  3507  002228  C004  F007         	movff	___ftge@ff2,??___ftge
  3508  00222C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3509  002230  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3510  002234  1E07               	comf	??___ftge,f,c
  3511  002236  1E08               	comf	??___ftge+1,f,c
  3512  002238  1E09               	comf	??___ftge+2,f,c
  3513  00223A  2A07               	incf	??___ftge,f,c
  3514  00223C  0E00               	movlw	0
  3515  00223E  2208               	addwfc	??___ftge+1,f,c
  3516  002240  2209               	addwfc	??___ftge+2,f,c
  3517  002242  0E00               	movlw	0
  3518  002244  2407               	addwf	??___ftge,w,c
  3519  002246  6E04               	movwf	___ftge@ff2,c
  3520  002248  0E00               	movlw	0
  3521  00224A  2008               	addwfc	??___ftge+1,w,c
  3522  00224C  6E05               	movwf	___ftge@ff2+1,c
  3523  00224E  0E80               	movlw	128
  3524  002250  2009               	addwfc	??___ftge+2,w,c
  3525  002252  6E06               	movwf	___ftge@ff2+2,c
  3526  002254                     l3497:
  3527  002254  0E00               	movlw	0
  3528  002256  1A01               	xorwf	___ftge@ff1,f,c
  3529  002258  0E00               	movlw	0
  3530  00225A  1A02               	xorwf	___ftge@ff1+1,f,c
  3531  00225C  0E80               	movlw	128
  3532  00225E  1A03               	xorwf	___ftge@ff1+2,f,c
  3533  002260  0E00               	movlw	0
  3534  002262  1A04               	xorwf	___ftge@ff2,f,c
  3535  002264  0E00               	movlw	0
  3536  002266  1A05               	xorwf	___ftge@ff2+1,f,c
  3537  002268  0E80               	movlw	128
  3538  00226A  1A06               	xorwf	___ftge@ff2+2,f,c
  3539  00226C  5004               	movf	___ftge@ff2,w,c
  3540  00226E  5C01               	subwf	___ftge@ff1,w,c
  3541  002270  5005               	movf	___ftge@ff2+1,w,c
  3542  002272  5802               	subwfb	___ftge@ff1+1,w,c
  3543  002274  5006               	movf	___ftge@ff2+2,w,c
  3544  002276  5803               	subwfb	___ftge@ff1+2,w,c
  3545  002278  B0D8               	btfsc	status,0,c
  3546  00227A  D002               	goto	l3503
  3547  00227C  90D8               	bcf	status,0,c
  3548  00227E  D001               	goto	l594
  3549  002280                     l3503:
  3550  002280  80D8               	bsf	status,0,c
  3551  002282                     l594:
  3552  002282  0012               	return	
  3553  002284                     __end_of___ftge:
  3554                           	opt stack 0
  3555                           tblptru	equ	0xFF8
  3556                           tblptrh	equ	0xFF7
  3557                           tblptrl	equ	0xFF6
  3558                           tablat	equ	0xFF5
  3559                           prodh	equ	0xFF4
  3560                           prodl	equ	0xFF3
  3561                           wreg	equ	0xFE8
  3562                           indf2	equ	0xFDF
  3563                           postinc2	equ	0xFDE
  3564                           postdec2	equ	0xFDD
  3565                           fsr2h	equ	0xFDA
  3566                           fsr2l	equ	0xFD9
  3567                           status	equ	0xFD8
  3568                           
  3569 ;; *************** function ___asftsub *****************
  3570 ;; Defined at:
  3571 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  f1p             2   28[COMRAM] PTR float 
  3574 ;;		 -> sprintf@fval(3), 
  3575 ;;  f2              3   30[COMRAM] float 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  3   28[COMRAM] float 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3587 ;;      Params:         5       0       0       0       0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3590 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3591 ;;Total ram usage:        5 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    3
  3594 ;; This function calls:
  3595 ;;		___ftsub
  3596 ;; This function is called by:
  3597 ;;		_sprintf
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text13
  3602  00256E                     __ptext13:
  3603                           	opt stack 0
  3604  00256E                     ___asftsub:
  3605                           	opt stack 26
  3606                           
  3607                           ;	Return value of ___asftsub is never used
  3608                           
  3609                           ;incstack = 0
  3610                           ;incstack = 0
  3611  00256E  C01D  FFD9         	movff	___asftsub@f1p,fsr2l
  3612  002572  C01E  FFDA         	movff	___asftsub@f1p+1,fsr2h
  3613  002576  CFDE F017          	movff	postinc2,?___ftsub
  3614  00257A  CFDE F018          	movff	postinc2,?___ftsub+1
  3615  00257E  CFDD F019          	movff	postdec2,?___ftsub+2
  3616  002582  C01F  F01A         	movff	___asftsub@f2,?___ftsub+3
  3617  002586  C020  F01B         	movff	___asftsub@f2+1,?___ftsub+4
  3618  00258A  C021  F01C         	movff	___asftsub@f2+2,?___ftsub+5
  3619  00258E  EC2E  F013         	call	___ftsub	;wreg free
  3620  002592  C01D  FFD9         	movff	___asftsub@f1p,fsr2l
  3621  002596  C01E  FFDA         	movff	___asftsub@f1p+1,fsr2h
  3622  00259A  C017  FFDE         	movff	?___ftsub,postinc2
  3623  00259E  C018  FFDE         	movff	?___ftsub+1,postinc2
  3624  0025A2  C019  FFDD         	movff	?___ftsub+2,postdec2
  3625  0025A6  52DD               	movf	postdec2,f,c
  3626  0025A8  0012               	return	
  3627  0025AA                     __end_of___asftsub:
  3628                           	opt stack 0
  3629                           tblptru	equ	0xFF8
  3630                           tblptrh	equ	0xFF7
  3631                           tblptrl	equ	0xFF6
  3632                           tablat	equ	0xFF5
  3633                           prodh	equ	0xFF4
  3634                           prodl	equ	0xFF3
  3635                           wreg	equ	0xFE8
  3636                           indf2	equ	0xFDF
  3637                           postinc2	equ	0xFDE
  3638                           postdec2	equ	0xFDD
  3639                           fsr2h	equ	0xFDA
  3640                           fsr2l	equ	0xFD9
  3641                           status	equ	0xFD8
  3642                           
  3643 ;; *************** function ___ftsub *****************
  3644 ;; Defined at:
  3645 ;;		line 22 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftsub.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  f1              3   22[COMRAM] float 
  3648 ;;  f2              3   25[COMRAM] float 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  3   22[COMRAM] float 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3660 ;;      Params:         6       0       0       0       0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3663 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3664 ;;Total ram usage:        6 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    2
  3667 ;; This function calls:
  3668 ;;		___ftadd
  3669 ;; This function is called by:
  3670 ;;		___asftsub
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text14
  3675  00265C                     __ptext14:
  3676                           	opt stack 0
  3677  00265C                     ___ftsub:
  3678                           	opt stack 26
  3679                           
  3680                           ;incstack = 0
  3681                           ;incstack = 0
  3682  00265C  0E00               	movlw	0
  3683  00265E  1A1A               	xorwf	___ftsub@f2,f,c
  3684  002660  0E00               	movlw	0
  3685  002662  1A1B               	xorwf	___ftsub@f2+1,f,c
  3686  002664  0E80               	movlw	128
  3687  002666  1A1C               	xorwf	___ftsub@f2+2,f,c
  3688  002668  C017  F009         	movff	___ftsub@f1,?___ftadd
  3689  00266C  C018  F00A         	movff	___ftsub@f1+1,?___ftadd+1
  3690  002670  C019  F00B         	movff	___ftsub@f1+2,?___ftadd+2
  3691  002674  C01A  F00C         	movff	___ftsub@f2,?___ftadd+3
  3692  002678  C01B  F00D         	movff	___ftsub@f2+1,?___ftadd+4
  3693  00267C  C01C  F00E         	movff	___ftsub@f2+2,?___ftadd+5
  3694  002680  EC36  F00D         	call	___ftadd	;wreg free
  3695  002684  C00B  F019         	movff	?___ftadd+2,?___ftsub+2
  3696  002688  C00A  F018         	movff	?___ftadd+1,?___ftsub+1
  3697  00268C  C009  F017         	movff	?___ftadd,?___ftsub
  3698  002690  0012               	return	
  3699  002692                     __end_of___ftsub:
  3700                           	opt stack 0
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           prodh	equ	0xFF4
  3706                           prodl	equ	0xFF3
  3707                           wreg	equ	0xFE8
  3708                           indf2	equ	0xFDF
  3709                           postinc2	equ	0xFDE
  3710                           postdec2	equ	0xFDD
  3711                           fsr2h	equ	0xFDA
  3712                           fsr2l	equ	0xFD9
  3713                           status	equ	0xFD8
  3714                           
  3715 ;; *************** function ___asftmul *****************
  3716 ;; Defined at:
  3717 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  f1p             2   54[COMRAM] PTR float 
  3720 ;;		 -> sprintf@integ(3), 
  3721 ;;  f2              3   56[COMRAM] float 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  3   54[COMRAM] float 
  3726 ;; Registers used:
  3727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3733 ;;      Params:         5       0       0       0       0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3736 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3737 ;;Total ram usage:        5 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    2
  3740 ;; This function calls:
  3741 ;;		___ftmul
  3742 ;; This function is called by:
  3743 ;;		_sprintf
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text15
  3748  0025AA                     __ptext15:
  3749                           	opt stack 0
  3750  0025AA                     ___asftmul:
  3751                           	opt stack 27
  3752                           
  3753                           ;	Return value of ___asftmul is never used
  3754                           
  3755                           ;incstack = 0
  3756                           ;incstack = 0
  3757  0025AA  C037  FFD9         	movff	___asftmul@f1p,fsr2l
  3758  0025AE  C038  FFDA         	movff	___asftmul@f1p+1,fsr2h
  3759  0025B2  CFDE F026          	movff	postinc2,?___ftmul
  3760  0025B6  CFDE F027          	movff	postinc2,?___ftmul+1
  3761  0025BA  CFDD F028          	movff	postdec2,?___ftmul+2
  3762  0025BE  C039  F029         	movff	___asftmul@f2,?___ftmul+3
  3763  0025C2  C03A  F02A         	movff	___asftmul@f2+1,?___ftmul+4
  3764  0025C6  C03B  F02B         	movff	___asftmul@f2+2,?___ftmul+5
  3765  0025CA  ECAD  F00E         	call	___ftmul	;wreg free
  3766  0025CE  C037  FFD9         	movff	___asftmul@f1p,fsr2l
  3767  0025D2  C038  FFDA         	movff	___asftmul@f1p+1,fsr2h
  3768  0025D6  C026  FFDE         	movff	?___ftmul,postinc2
  3769  0025DA  C027  FFDE         	movff	?___ftmul+1,postinc2
  3770  0025DE  C028  FFDD         	movff	?___ftmul+2,postdec2
  3771  0025E2  52DD               	movf	postdec2,f,c
  3772  0025E4  0012               	return	
  3773  0025E6                     __end_of___asftmul:
  3774                           	opt stack 0
  3775                           tblptru	equ	0xFF8
  3776                           tblptrh	equ	0xFF7
  3777                           tblptrl	equ	0xFF6
  3778                           tablat	equ	0xFF5
  3779                           prodh	equ	0xFF4
  3780                           prodl	equ	0xFF3
  3781                           wreg	equ	0xFE8
  3782                           indf2	equ	0xFDF
  3783                           postinc2	equ	0xFDE
  3784                           postdec2	equ	0xFDD
  3785                           fsr2h	equ	0xFDA
  3786                           fsr2l	equ	0xFD9
  3787                           status	equ	0xFD8
  3788                           
  3789 ;; *************** function ___asftadd *****************
  3790 ;; Defined at:
  3791 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  f1p             2   69[COMRAM] PTR float 
  3794 ;;		 -> sprintf@fval(3), 
  3795 ;;  f2              3   71[COMRAM] float 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  3   69[COMRAM] float 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3807 ;;      Params:         5       0       0       0       0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3810 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3811 ;;Total ram usage:        5 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    2
  3814 ;; This function calls:
  3815 ;;		___ftadd
  3816 ;; This function is called by:
  3817 ;;		_sprintf
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text16
  3822  0025E6                     __ptext16:
  3823                           	opt stack 0
  3824  0025E6                     ___asftadd:
  3825                           	opt stack 27
  3826                           
  3827                           ;	Return value of ___asftadd is never used
  3828                           
  3829                           ;incstack = 0
  3830                           ;incstack = 0
  3831  0025E6  C046  FFD9         	movff	___asftadd@f1p,fsr2l
  3832  0025EA  C047  FFDA         	movff	___asftadd@f1p+1,fsr2h
  3833  0025EE  CFDE F009          	movff	postinc2,?___ftadd
  3834  0025F2  CFDE F00A          	movff	postinc2,?___ftadd+1
  3835  0025F6  CFDD F00B          	movff	postdec2,?___ftadd+2
  3836  0025FA  C048  F00C         	movff	___asftadd@f2,?___ftadd+3
  3837  0025FE  C049  F00D         	movff	___asftadd@f2+1,?___ftadd+4
  3838  002602  C04A  F00E         	movff	___asftadd@f2+2,?___ftadd+5
  3839  002606  EC36  F00D         	call	___ftadd	;wreg free
  3840  00260A  C046  FFD9         	movff	___asftadd@f1p,fsr2l
  3841  00260E  C047  FFDA         	movff	___asftadd@f1p+1,fsr2h
  3842  002612  C009  FFDE         	movff	?___ftadd,postinc2
  3843  002616  C00A  FFDE         	movff	?___ftadd+1,postinc2
  3844  00261A  C00B  FFDD         	movff	?___ftadd+2,postdec2
  3845  00261E  52DD               	movf	postdec2,f,c
  3846  002620  0012               	return	
  3847  002622                     __end_of___asftadd:
  3848                           	opt stack 0
  3849                           tblptru	equ	0xFF8
  3850                           tblptrh	equ	0xFF7
  3851                           tblptrl	equ	0xFF6
  3852                           tablat	equ	0xFF5
  3853                           prodh	equ	0xFF4
  3854                           prodl	equ	0xFF3
  3855                           wreg	equ	0xFE8
  3856                           indf2	equ	0xFDF
  3857                           postinc2	equ	0xFDE
  3858                           postdec2	equ	0xFDD
  3859                           fsr2h	equ	0xFDA
  3860                           fsr2l	equ	0xFD9
  3861                           status	equ	0xFD8
  3862                           
  3863 ;; *************** function ___ftadd *****************
  3864 ;; Defined at:
  3865 ;;		line 87 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftadd.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  f1              3    8[COMRAM] float 
  3868 ;;  f2              3   11[COMRAM] float 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  exp1            1   21[COMRAM] unsigned char 
  3871 ;;  exp2            1   20[COMRAM] unsigned char 
  3872 ;;  sign            1   19[COMRAM] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  3    8[COMRAM] float 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3882 ;;      Params:         6       0       0       0       0       0       0       0       0
  3883 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3884 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3885 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3886 ;;Total ram usage:       14 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    1
  3889 ;; This function calls:
  3890 ;;		___ftpack
  3891 ;; This function is called by:
  3892 ;;		___asftadd
  3893 ;;		___ftsub
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text17
  3898  001A6C                     __ptext17:
  3899                           	opt stack 0
  3900  001A6C                     ___ftadd:
  3901                           	opt stack 26
  3902                           
  3903                           ;incstack = 0
  3904                           ;incstack = 0
  3905  001A6C  0E0F               	movlw	15
  3906  001A6E  6E0F               	movwf	??___ftadd& (0+255),c
  3907  001A70  C009  F010         	movff	___ftadd@f1,??___ftadd+1
  3908  001A74  C00A  F011         	movff	___ftadd@f1+1,??___ftadd+2
  3909  001A78  C00B  F012         	movff	___ftadd@f1+2,??___ftadd+3
  3910  001A7C  280F               	incf	??___ftadd,w,c
  3911  001A7E  6E13               	movwf	(??___ftadd+4)& (0+255),c
  3912  001A80  D004               	goto	u2070
  3913  001A82                     u2075:
  3914  001A82  90D8               	bcf	status,0,c
  3915  001A84  3212               	rrcf	??___ftadd+3,f,c
  3916  001A86  3211               	rrcf	??___ftadd+2,f,c
  3917  001A88  3210               	rrcf	??___ftadd+1,f,c
  3918  001A8A                     u2070:
  3919  001A8A  2E13               	decfsz	(??___ftadd+4)& (0+255),f,c
  3920  001A8C  D7FA               	goto	u2075
  3921  001A8E  5010               	movf	??___ftadd+1,w,c
  3922  001A90  6E16               	movwf	___ftadd@exp1,c
  3923  001A92  0E0F               	movlw	15
  3924  001A94  6E0F               	movwf	??___ftadd& (0+255),c
  3925  001A96  C00C  F010         	movff	___ftadd@f2,??___ftadd+1
  3926  001A9A  C00D  F011         	movff	___ftadd@f2+1,??___ftadd+2
  3927  001A9E  C00E  F012         	movff	___ftadd@f2+2,??___ftadd+3
  3928  001AA2  280F               	incf	??___ftadd,w,c
  3929  001AA4  6E13               	movwf	(??___ftadd+4)& (0+255),c
  3930  001AA6  D004               	goto	u2080
  3931  001AA8                     u2085:
  3932  001AA8  90D8               	bcf	status,0,c
  3933  001AAA  3212               	rrcf	??___ftadd+3,f,c
  3934  001AAC  3211               	rrcf	??___ftadd+2,f,c
  3935  001AAE  3210               	rrcf	??___ftadd+1,f,c
  3936  001AB0                     u2080:
  3937  001AB0  2E13               	decfsz	(??___ftadd+4)& (0+255),f,c
  3938  001AB2  D7FA               	goto	u2085
  3939  001AB4  5010               	movf	??___ftadd+1,w,c
  3940  001AB6  6E15               	movwf	___ftadd@exp2,c
  3941  001AB8  5016               	movf	___ftadd@exp1,w,c
  3942  001ABA  B4D8               	btfsc	status,2,c
  3943  001ABC  D00B               	goto	l536
  3944  001ABE  5015               	movf	___ftadd@exp2,w,c
  3945  001AC0  6016               	cpfslt	___ftadd@exp1,c
  3946  001AC2  D00F               	goto	l3605
  3947  001AC4  5016               	movf	___ftadd@exp1,w,c
  3948  001AC6  0800               	sublw	0
  3949  001AC8  2415               	addwf	___ftadd@exp2,w,c
  3950  001ACA  6E0F               	movwf	??___ftadd& (0+255),c
  3951  001ACC  0E19               	movlw	25
  3952  001ACE  5C0F               	subwf	??___ftadd,w,c
  3953  001AD0  A0D8               	btfss	status,0,c
  3954  001AD2  D007               	goto	l3605
  3955  001AD4                     l536:
  3956  001AD4  C00C  F009         	movff	___ftadd@f2,?___ftadd
  3957  001AD8  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  3958  001ADC  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  3959  001AE0  D0AA               	goto	l537
  3960  001AE2                     l3605:
  3961  001AE2  5015               	movf	___ftadd@exp2,w,c
  3962  001AE4  B4D8               	btfsc	status,2,c
  3963  001AE6  D00B               	goto	l540
  3964  001AE8  5016               	movf	___ftadd@exp1,w,c
  3965  001AEA  6015               	cpfslt	___ftadd@exp2,c
  3966  001AEC  D00F               	goto	l3611
  3967  001AEE  5015               	movf	___ftadd@exp2,w,c
  3968  001AF0  0800               	sublw	0
  3969  001AF2  2416               	addwf	___ftadd@exp1,w,c
  3970  001AF4  6E0F               	movwf	??___ftadd& (0+255),c
  3971  001AF6  0E19               	movlw	25
  3972  001AF8  5C0F               	subwf	??___ftadd,w,c
  3973  001AFA  A0D8               	btfss	status,0,c
  3974  001AFC  D007               	goto	l3611
  3975  001AFE                     l540:
  3976  001AFE  C009  F009         	movff	___ftadd@f1,?___ftadd
  3977  001B02  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  3978  001B06  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  3979  001B0A  D095               	goto	l537
  3980  001B0C                     l3611:
  3981  001B0C  6E0F               	movwf	??___ftadd& (0+255),c
  3982  001B0E  0E06               	movlw	6
  3983  001B10  6E14               	movwf	___ftadd@sign,c
  3984  001B12  500F               	movf	??___ftadd& (0+255),w,c
  3985  001B14  BE0B               	btfsc	___ftadd@f1+2,7,c
  3986  001B16  8E14               	bsf	___ftadd@sign,7,c
  3987  001B18  BE0E               	btfsc	___ftadd@f2+2,7,c
  3988  001B1A  8C14               	bsf	___ftadd@sign,6,c
  3989  001B1C  8E0A               	bsf	___ftadd@f1+1,7,c
  3990  001B1E  0EFF               	movlw	255
  3991  001B20  1609               	andwf	___ftadd@f1,f,c
  3992  001B22  0EFF               	movlw	255
  3993  001B24  160A               	andwf	___ftadd@f1+1,f,c
  3994  001B26  0E00               	movlw	0
  3995  001B28  160B               	andwf	___ftadd@f1+2,f,c
  3996  001B2A  8E0D               	bsf	___ftadd@f2+1,7,c
  3997  001B2C  0EFF               	movlw	255
  3998  001B2E  160C               	andwf	___ftadd@f2,f,c
  3999  001B30  0EFF               	movlw	255
  4000  001B32  160D               	andwf	___ftadd@f2+1,f,c
  4001  001B34  0E00               	movlw	0
  4002  001B36  160E               	andwf	___ftadd@f2+2,f,c
  4003  001B38  5015               	movf	___ftadd@exp2,w,c
  4004  001B3A  6016               	cpfslt	___ftadd@exp1,c
  4005  001B3C  D018               	goto	l3637
  4006  001B3E                     l3627:
  4007  001B3E  90D8               	bcf	status,0,c
  4008  001B40  360C               	rlcf	___ftadd@f2,f,c
  4009  001B42  360D               	rlcf	___ftadd@f2+1,f,c
  4010  001B44  360E               	rlcf	___ftadd@f2+2,f,c
  4011  001B46  0615               	decf	___ftadd@exp2,f,c
  4012  001B48  5015               	movf	___ftadd@exp2,w,c
  4013  001B4A  1816               	xorwf	___ftadd@exp1,w,c
  4014  001B4C  B4D8               	btfsc	status,2,c
  4015  001B4E  D00B               	goto	l3635
  4016  001B50  0614               	decf	___ftadd@sign,f,c
  4017  001B52  5014               	movf	___ftadd@sign& (0+255),w,c
  4018  001B54  0B07               	andlw	7
  4019  001B56  B4D8               	btfsc	status,2,c
  4020  001B58  D006               	goto	l3635
  4021  001B5A  D7F1               	goto	l3627
  4022  001B5C                     l3633:
  4023  001B5C  90D8               	bcf	status,0,c
  4024  001B5E  320B               	rrcf	___ftadd@f1+2,f,c
  4025  001B60  320A               	rrcf	___ftadd@f1+1,f,c
  4026  001B62  3209               	rrcf	___ftadd@f1,f,c
  4027  001B64  2A16               	incf	___ftadd@exp1,f,c
  4028  001B66                     l3635:
  4029  001B66  5015               	movf	___ftadd@exp2,w,c
  4030  001B68  6216               	cpfseq	___ftadd@exp1,c
  4031  001B6A  D7F8               	goto	l3633
  4032  001B6C  D01A               	goto	l551
  4033  001B6E                     l3637:
  4034  001B6E  5016               	movf	___ftadd@exp1,w,c
  4035  001B70  6015               	cpfslt	___ftadd@exp2,c
  4036  001B72  D017               	goto	l551
  4037  001B74                     l3639:
  4038  001B74  90D8               	bcf	status,0,c
  4039  001B76  3609               	rlcf	___ftadd@f1,f,c
  4040  001B78  360A               	rlcf	___ftadd@f1+1,f,c
  4041  001B7A  360B               	rlcf	___ftadd@f1+2,f,c
  4042  001B7C  0616               	decf	___ftadd@exp1,f,c
  4043  001B7E  5015               	movf	___ftadd@exp2,w,c
  4044  001B80  1816               	xorwf	___ftadd@exp1,w,c
  4045  001B82  B4D8               	btfsc	status,2,c
  4046  001B84  D00B               	goto	l3647
  4047  001B86  0614               	decf	___ftadd@sign,f,c
  4048  001B88  5014               	movf	___ftadd@sign& (0+255),w,c
  4049  001B8A  0B07               	andlw	7
  4050  001B8C  B4D8               	btfsc	status,2,c
  4051  001B8E  D006               	goto	l3647
  4052  001B90  D7F1               	goto	l3639
  4053  001B92                     l3645:
  4054  001B92  90D8               	bcf	status,0,c
  4055  001B94  320E               	rrcf	___ftadd@f2+2,f,c
  4056  001B96  320D               	rrcf	___ftadd@f2+1,f,c
  4057  001B98  320C               	rrcf	___ftadd@f2,f,c
  4058  001B9A  2A15               	incf	___ftadd@exp2,f,c
  4059  001B9C                     l3647:
  4060  001B9C  5015               	movf	___ftadd@exp2,w,c
  4061  001B9E  6216               	cpfseq	___ftadd@exp1,c
  4062  001BA0  D7F8               	goto	l3645
  4063  001BA2                     l551:
  4064  001BA2  AE14               	btfss	___ftadd@sign,7,c
  4065  001BA4  D00C               	goto	l560
  4066  001BA6  0EFF               	movlw	255
  4067  001BA8  1A09               	xorwf	___ftadd@f1,f,c
  4068  001BAA  0EFF               	movlw	255
  4069  001BAC  1A0A               	xorwf	___ftadd@f1+1,f,c
  4070  001BAE  0EFF               	movlw	255
  4071  001BB0  1A0B               	xorwf	___ftadd@f1+2,f,c
  4072  001BB2  0E01               	movlw	1
  4073  001BB4  2609               	addwf	___ftadd@f1,f,c
  4074  001BB6  0E00               	movlw	0
  4075  001BB8  220A               	addwfc	___ftadd@f1+1,f,c
  4076  001BBA  0E00               	movlw	0
  4077  001BBC  220B               	addwfc	___ftadd@f1+2,f,c
  4078  001BBE                     l560:
  4079  001BBE  AC14               	btfss	___ftadd@sign,6,c
  4080  001BC0  D00C               	goto	l3653
  4081  001BC2  0EFF               	movlw	255
  4082  001BC4  1A0C               	xorwf	___ftadd@f2,f,c
  4083  001BC6  0EFF               	movlw	255
  4084  001BC8  1A0D               	xorwf	___ftadd@f2+1,f,c
  4085  001BCA  0EFF               	movlw	255
  4086  001BCC  1A0E               	xorwf	___ftadd@f2+2,f,c
  4087  001BCE  0E01               	movlw	1
  4088  001BD0  260C               	addwf	___ftadd@f2,f,c
  4089  001BD2  0E00               	movlw	0
  4090  001BD4  220D               	addwfc	___ftadd@f2+1,f,c
  4091  001BD6  0E00               	movlw	0
  4092  001BD8  220E               	addwfc	___ftadd@f2+2,f,c
  4093  001BDA                     l3653:
  4094  001BDA  6E0F               	movwf	??___ftadd& (0+255),c
  4095  001BDC  0E00               	movlw	0
  4096  001BDE  6E14               	movwf	___ftadd@sign,c
  4097  001BE0  500F               	movf	??___ftadd& (0+255),w,c
  4098  001BE2  5009               	movf	___ftadd@f1,w,c
  4099  001BE4  260C               	addwf	___ftadd@f2,f,c
  4100  001BE6  500A               	movf	___ftadd@f1+1,w,c
  4101  001BE8  220D               	addwfc	___ftadd@f2+1,f,c
  4102  001BEA  500B               	movf	___ftadd@f1+2,w,c
  4103  001BEC  220E               	addwfc	___ftadd@f2+2,f,c
  4104  001BEE  AE0E               	btfss	___ftadd@f2+2,7,c
  4105  001BF0  D010               	goto	l3663
  4106  001BF2  0EFF               	movlw	255
  4107  001BF4  1A0C               	xorwf	___ftadd@f2,f,c
  4108  001BF6  0EFF               	movlw	255
  4109  001BF8  1A0D               	xorwf	___ftadd@f2+1,f,c
  4110  001BFA  0EFF               	movlw	255
  4111  001BFC  1A0E               	xorwf	___ftadd@f2+2,f,c
  4112  001BFE  0E01               	movlw	1
  4113  001C00  260C               	addwf	___ftadd@f2,f,c
  4114  001C02  0E00               	movlw	0
  4115  001C04  220D               	addwfc	___ftadd@f2+1,f,c
  4116  001C06  0E00               	movlw	0
  4117  001C08  220E               	addwfc	___ftadd@f2+2,f,c
  4118  001C0A  6E0F               	movwf	??___ftadd& (0+255),c
  4119  001C0C  0E01               	movlw	1
  4120  001C0E  6E14               	movwf	___ftadd@sign,c
  4121  001C10  500F               	movf	??___ftadd& (0+255),w,c
  4122  001C12                     l3663:
  4123  001C12  C00C  F001         	movff	___ftadd@f2,?___ftpack
  4124  001C16  C00D  F002         	movff	___ftadd@f2+1,?___ftpack+1
  4125  001C1A  C00E  F003         	movff	___ftadd@f2+2,?___ftpack+2
  4126  001C1E  C016  F004         	movff	___ftadd@exp1,?___ftpack+3
  4127  001C22  C014  F005         	movff	___ftadd@sign,?___ftpack+4
  4128  001C26  EC9E  F010         	call	___ftpack	;wreg free
  4129  001C2A  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  4130  001C2E  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  4131  001C32  C001  F009         	movff	?___ftpack,?___ftadd
  4132  001C36                     l537:
  4133  001C36  0012               	return	
  4134  001C38                     __end_of___ftadd:
  4135                           	opt stack 0
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           prodh	equ	0xFF4
  4141                           prodl	equ	0xFF3
  4142                           wreg	equ	0xFE8
  4143                           indf2	equ	0xFDF
  4144                           postinc2	equ	0xFDE
  4145                           postdec2	equ	0xFDD
  4146                           fsr2h	equ	0xFDA
  4147                           fsr2l	equ	0xFD9
  4148                           status	equ	0xFD8
  4149                           
  4150 ;; *************** function ___ftpack *****************
  4151 ;; Defined at:
  4152 ;;		line 63 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\float.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  arg             3    0[COMRAM] unsigned um
  4155 ;;  exp             1    3[COMRAM] unsigned char 
  4156 ;;  sign            1    4[COMRAM] unsigned char 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  3    0[COMRAM] float 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4168 ;;      Params:         5       0       0       0       0       0       0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4170 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4171 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4172 ;;Total ram usage:        8 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		___awtoft
  4178 ;;		___ftadd
  4179 ;;		___ftdiv
  4180 ;;		___ftmul
  4181 ;;		___lltoft
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text18
  4186  00213C                     __ptext18:
  4187                           	opt stack 0
  4188  00213C                     ___ftpack:
  4189                           	opt stack 29
  4190                           
  4191                           ;incstack = 0
  4192                           ;incstack = 0
  4193  00213C  5004               	movf	___ftpack@exp,w,c
  4194  00213E  B4D8               	btfsc	status,2,c
  4195  002140  D005               	goto	l3423
  4196  002142  5001               	movf	___ftpack@arg,w,c
  4197  002144  1002               	iorwf	___ftpack@arg+1,w,c
  4198  002146  1003               	iorwf	___ftpack@arg+2,w,c
  4199  002148  A4D8               	btfss	status,2,c
  4200  00214A  D00C               	goto	l3429
  4201  00214C                     l3423:
  4202  00214C  0E00               	movlw	0
  4203  00214E  6E01               	movwf	?___ftpack,c
  4204  002150  0E00               	movlw	0
  4205  002152  6E02               	movwf	?___ftpack+1,c
  4206  002154  0E00               	movlw	0
  4207  002156  6E03               	movwf	?___ftpack+2,c
  4208  002158  D04C               	goto	l499
  4209  00215A                     l3427:
  4210  00215A  2A04               	incf	___ftpack@exp,f,c
  4211  00215C  90D8               	bcf	status,0,c
  4212  00215E  3203               	rrcf	___ftpack@arg+2,f,c
  4213  002160  3202               	rrcf	___ftpack@arg+1,f,c
  4214  002162  3201               	rrcf	___ftpack@arg,f,c
  4215  002164                     l3429:
  4216  002164  0E00               	movlw	0
  4217  002166  1401               	andwf	___ftpack@arg,w,c
  4218  002168  6E06               	movwf	??___ftpack& (0+255),c
  4219  00216A  0E00               	movlw	0
  4220  00216C  1402               	andwf	___ftpack@arg+1,w,c
  4221  00216E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4222  002170  0EFE               	movlw	254
  4223  002172  1403               	andwf	___ftpack@arg+2,w,c
  4224  002174  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4225  002176  5006               	movf	??___ftpack,w,c
  4226  002178  1007               	iorwf	??___ftpack+1,w,c
  4227  00217A  1008               	iorwf	??___ftpack+2,w,c
  4228  00217C  B4D8               	btfsc	status,2,c
  4229  00217E  D00C               	goto	l3435
  4230  002180  D7EC               	goto	l3427
  4231  002182                     l3431:
  4232  002182  2A04               	incf	___ftpack@exp,f,c
  4233  002184  0E01               	movlw	1
  4234  002186  2601               	addwf	___ftpack@arg,f,c
  4235  002188  0E00               	movlw	0
  4236  00218A  2202               	addwfc	___ftpack@arg+1,f,c
  4237  00218C  0E00               	movlw	0
  4238  00218E  2203               	addwfc	___ftpack@arg+2,f,c
  4239  002190  90D8               	bcf	status,0,c
  4240  002192  3203               	rrcf	___ftpack@arg+2,f,c
  4241  002194  3202               	rrcf	___ftpack@arg+1,f,c
  4242  002196  3201               	rrcf	___ftpack@arg,f,c
  4243  002198                     l3435:
  4244  002198  0E00               	movlw	0
  4245  00219A  1401               	andwf	___ftpack@arg,w,c
  4246  00219C  6E06               	movwf	??___ftpack& (0+255),c
  4247  00219E  0E00               	movlw	0
  4248  0021A0  1402               	andwf	___ftpack@arg+1,w,c
  4249  0021A2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4250  0021A4  0EFF               	movlw	255
  4251  0021A6  1403               	andwf	___ftpack@arg+2,w,c
  4252  0021A8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4253  0021AA  5006               	movf	??___ftpack,w,c
  4254  0021AC  1007               	iorwf	??___ftpack+1,w,c
  4255  0021AE  1008               	iorwf	??___ftpack+2,w,c
  4256  0021B0  B4D8               	btfsc	status,2,c
  4257  0021B2  D006               	goto	l3439
  4258  0021B4  D7E6               	goto	l3431
  4259  0021B6                     l3437:
  4260  0021B6  0604               	decf	___ftpack@exp,f,c
  4261  0021B8  90D8               	bcf	status,0,c
  4262  0021BA  3601               	rlcf	___ftpack@arg,f,c
  4263  0021BC  3602               	rlcf	___ftpack@arg+1,f,c
  4264  0021BE  3603               	rlcf	___ftpack@arg+2,f,c
  4265  0021C0                     l3439:
  4266  0021C0  AE02               	btfss	___ftpack@arg+1,7,c
  4267  0021C2  D7F9               	goto	l3437
  4268  0021C4  A004               	btfss	___ftpack@exp,0,c
  4269  0021C6  9E02               	bcf	___ftpack@arg+1,7,c
  4270  0021C8  90D8               	bcf	status,0,c
  4271  0021CA  3204               	rrcf	___ftpack@exp,f,c
  4272  0021CC  5004               	movf	___ftpack@exp,w,c
  4273  0021CE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4274  0021D0  6A07               	clrf	(??___ftpack+1)& (0+255),c
  4275  0021D2  6A06               	clrf	??___ftpack& (0+255),c
  4276  0021D4  5006               	movf	??___ftpack,w,c
  4277  0021D6  1201               	iorwf	___ftpack@arg,f,c
  4278  0021D8  5007               	movf	??___ftpack+1,w,c
  4279  0021DA  1202               	iorwf	___ftpack@arg+1,f,c
  4280  0021DC  5008               	movf	??___ftpack+2,w,c
  4281  0021DE  1203               	iorwf	___ftpack@arg+2,f,c
  4282  0021E0  5005               	movf	___ftpack@sign,w,c
  4283  0021E2  A4D8               	btfss	status,2,c
  4284  0021E4  8E03               	bsf	___ftpack@arg+2,7,c
  4285  0021E6  C001  F001         	movff	___ftpack@arg,?___ftpack
  4286  0021EA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4287  0021EE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4288  0021F2                     l499:
  4289  0021F2  0012               	return	
  4290  0021F4                     __end_of___ftpack:
  4291                           	opt stack 0
  4292                           tblptru	equ	0xFF8
  4293                           tblptrh	equ	0xFF7
  4294                           tblptrl	equ	0xFF6
  4295                           tablat	equ	0xFF5
  4296                           prodh	equ	0xFF4
  4297                           prodl	equ	0xFF3
  4298                           wreg	equ	0xFE8
  4299                           indf2	equ	0xFDF
  4300                           postinc2	equ	0xFDE
  4301                           postdec2	equ	0xFDD
  4302                           fsr2h	equ	0xFDA
  4303                           fsr2l	equ	0xFD9
  4304                           status	equ	0xFD8
  4305                           
  4306 ;; *************** function __div_to_l_ *****************
  4307 ;; Defined at:
  4308 ;;		line 61 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\fldivl.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  f1              3    0[COMRAM] float 
  4311 ;;  f2              3    3[COMRAM] float 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  quot            4    7[COMRAM] unsigned long 
  4314 ;;  exp1            1   12[COMRAM] unsigned char 
  4315 ;;  cntr            1   11[COMRAM] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  4    0[COMRAM] unsigned long 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4325 ;;      Params:         6       0       0       0       0       0       0       0       0
  4326 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4327 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4328 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4329 ;;Total ram usage:       13 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_sprintf
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text19
  4339  001F68                     __ptext19:
  4340                           	opt stack 0
  4341  001F68                     __div_to_l_:
  4342                           	opt stack 29
  4343                           
  4344                           ;incstack = 0
  4345                           ;incstack = 0
  4346  001F68  3403               	rlcf	(__div_to_l_@f1+2)& (0+255),w,c
  4347  001F6A  3404               	rlcf	(__div_to_l_@f1+3)& (0+255),w,c
  4348  001F6C  6E0D               	movwf	__div_to_l_@exp1,c
  4349  001F6E  660D               	tstfsz	__div_to_l_@exp1& (0+255),c
  4350  001F70  D001               	goto	l3369
  4351  001F72  D05A               	goto	u1760
  4352  001F74                     l3369:
  4353  001F74  3406               	rlcf	(__div_to_l_@f2+2)& (0+255),w,c
  4354  001F76  3407               	rlcf	(__div_to_l_@f2+3)& (0+255),w,c
  4355  001F78  6E0C               	movwf	__div_to_l_@cntr,c
  4356  001F7A  660C               	tstfsz	__div_to_l_@cntr& (0+255),c
  4357  001F7C  D001               	goto	l3375
  4358  001F7E  D054               	goto	u1760
  4359  001F80                     l3375:
  4360  001F80  8E03               	bsf	__div_to_l_@f1+2,7,c
  4361  001F82  0EFF               	movlw	255
  4362  001F84  1601               	andwf	__div_to_l_@f1,f,c
  4363  001F86  0EFF               	movlw	255
  4364  001F88  1602               	andwf	__div_to_l_@f1+1,f,c
  4365  001F8A  0EFF               	movlw	255
  4366  001F8C  1603               	andwf	__div_to_l_@f1+2,f,c
  4367  001F8E  0E00               	movlw	0
  4368  001F90  1604               	andwf	__div_to_l_@f1+3,f,c
  4369  001F92  8E06               	bsf	__div_to_l_@f2+2,7,c
  4370  001F94  0EFF               	movlw	255
  4371  001F96  1604               	andwf	__div_to_l_@f2,f,c
  4372  001F98  0EFF               	movlw	255
  4373  001F9A  1605               	andwf	__div_to_l_@f2+1,f,c
  4374  001F9C  0EFF               	movlw	255
  4375  001F9E  1606               	andwf	__div_to_l_@f2+2,f,c
  4376  001FA0  0E00               	movlw	0
  4377  001FA2  1607               	andwf	__div_to_l_@f2+3,f,c
  4378  001FA4  0E00               	movlw	0
  4379  001FA6  6E08               	movwf	__div_to_l_@quot,c
  4380  001FA8  0E00               	movlw	0
  4381  001FAA  6E09               	movwf	__div_to_l_@quot+1,c
  4382  001FAC  0E00               	movlw	0
  4383  001FAE  6E0A               	movwf	__div_to_l_@quot+2,c
  4384  001FB0  0E00               	movlw	0
  4385  001FB2  6E0B               	movwf	__div_to_l_@quot+3,c
  4386  001FB4  0E7F               	movlw	127
  4387  001FB6  5E0D               	subwf	__div_to_l_@exp1,f,c
  4388  001FB8  500C               	movf	__div_to_l_@cntr,w,c
  4389  001FBA  0FA0               	addlw	160
  4390  001FBC  5E0D               	subwf	__div_to_l_@exp1,f,c
  4391  001FBE  6E07               	movwf	??__div_to_l_& (0+255),c
  4392  001FC0  0E20               	movlw	32
  4393  001FC2  6E0C               	movwf	__div_to_l_@cntr,c
  4394  001FC4  5007               	movf	??__div_to_l_& (0+255),w,c
  4395  001FC6                     l460:
  4396  001FC6  90D8               	bcf	status,0,c
  4397  001FC8  3608               	rlcf	__div_to_l_@quot,f,c
  4398  001FCA  3609               	rlcf	__div_to_l_@quot+1,f,c
  4399  001FCC  360A               	rlcf	__div_to_l_@quot+2,f,c
  4400  001FCE  360B               	rlcf	__div_to_l_@quot+3,f,c
  4401  001FD0  5004               	movf	__div_to_l_@f2,w,c
  4402  001FD2  5C01               	subwf	__div_to_l_@f1,w,c
  4403  001FD4  5005               	movf	__div_to_l_@f2+1,w,c
  4404  001FD6  5802               	subwfb	__div_to_l_@f1+1,w,c
  4405  001FD8  5006               	movf	__div_to_l_@f2+2,w,c
  4406  001FDA  5803               	subwfb	__div_to_l_@f1+2,w,c
  4407  001FDC  5007               	movf	__div_to_l_@f2+3,w,c
  4408  001FDE  5804               	subwfb	__div_to_l_@f1+3,w,c
  4409  001FE0  A0D8               	btfss	status,0,c
  4410  001FE2  D009               	goto	l3395
  4411  001FE4  5004               	movf	__div_to_l_@f2,w,c
  4412  001FE6  5E01               	subwf	__div_to_l_@f1,f,c
  4413  001FE8  5005               	movf	__div_to_l_@f2+1,w,c
  4414  001FEA  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4415  001FEC  5006               	movf	__div_to_l_@f2+2,w,c
  4416  001FEE  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4417  001FF0  5007               	movf	__div_to_l_@f2+3,w,c
  4418  001FF2  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4419  001FF4  8008               	bsf	__div_to_l_@quot,0,c
  4420  001FF6                     l3395:
  4421  001FF6  90D8               	bcf	status,0,c
  4422  001FF8  3601               	rlcf	__div_to_l_@f1,f,c
  4423  001FFA  3602               	rlcf	__div_to_l_@f1+1,f,c
  4424  001FFC  3603               	rlcf	__div_to_l_@f1+2,f,c
  4425  001FFE  3604               	rlcf	__div_to_l_@f1+3,f,c
  4426  002000  2E0C               	decfsz	__div_to_l_@cntr,f,c
  4427  002002  D7E1               	goto	l460
  4428  002004  AE0D               	btfss	__div_to_l_@exp1,7,c
  4429  002006  D00D               	goto	l3409
  4430  002008  500D               	movf	__div_to_l_@exp1,w,c
  4431  00200A  0A80               	xorlw	128
  4432  00200C  0F9F               	addlw	159
  4433  00200E  A0D8               	btfss	status,0,c
  4434  002010  D00B               	goto	u1760
  4435  002012                     l3405:
  4436  002012  90D8               	bcf	status,0,c
  4437  002014  320B               	rrcf	__div_to_l_@quot+3,f,c
  4438  002016  320A               	rrcf	__div_to_l_@quot+2,f,c
  4439  002018  3209               	rrcf	__div_to_l_@quot+1,f,c
  4440  00201A  3208               	rrcf	__div_to_l_@quot,f,c
  4441  00201C  3E0D               	incfsz	__div_to_l_@exp1,f,c
  4442  00201E  D7F9               	goto	l3405
  4443  002020  D014               	goto	l467
  4444  002022                     l3409:
  4445  002022  0E1F               	movlw	31
  4446  002024  640D               	cpfsgt	__div_to_l_@exp1,c
  4447  002026  D00F               	goto	l3417
  4448  002028                     u1760:
  4449  002028  0E00               	movlw	0
  4450  00202A  6E01               	movwf	?__div_to_l_,c
  4451  00202C  0E00               	movlw	0
  4452  00202E  6E02               	movwf	?__div_to_l_+1,c
  4453  002030  0E00               	movlw	0
  4454  002032  6E03               	movwf	?__div_to_l_+2,c
  4455  002034  0E00               	movlw	0
  4456  002036  6E04               	movwf	?__div_to_l_+3,c
  4457  002038  D010               	goto	l458
  4458  00203A                     l3415:
  4459  00203A  90D8               	bcf	status,0,c
  4460  00203C  3608               	rlcf	__div_to_l_@quot,f,c
  4461  00203E  3609               	rlcf	__div_to_l_@quot+1,f,c
  4462  002040  360A               	rlcf	__div_to_l_@quot+2,f,c
  4463  002042  360B               	rlcf	__div_to_l_@quot+3,f,c
  4464  002044  060D               	decf	__div_to_l_@exp1,f,c
  4465  002046                     l3417:
  4466  002046  660D               	tstfsz	__div_to_l_@exp1,c
  4467  002048  D7F8               	goto	l3415
  4468  00204A                     l467:
  4469  00204A  C008  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4470  00204E  C009  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4471  002052  C00A  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4472  002056  C00B  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4473  00205A                     l458:
  4474  00205A  0012               	return	
  4475  00205C                     __end_of__div_to_l_:
  4476                           	opt stack 0
  4477                           tblptru	equ	0xFF8
  4478                           tblptrh	equ	0xFF7
  4479                           tblptrl	equ	0xFF6
  4480                           tablat	equ	0xFF5
  4481                           prodh	equ	0xFF4
  4482                           prodl	equ	0xFF3
  4483                           wreg	equ	0xFE8
  4484                           indf2	equ	0xFDF
  4485                           postinc2	equ	0xFDE
  4486                           postdec2	equ	0xFDD
  4487                           fsr2h	equ	0xFDA
  4488                           fsr2l	equ	0xFD9
  4489                           status	equ	0xFD8
  4490                           
  4491 ;; *************** function __tdiv_to_l_ *****************
  4492 ;; Defined at:
  4493 ;;		line 61 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftdivl.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  f1              3    0[COMRAM] float 
  4496 ;;  f2              3    3[COMRAM] float 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  quot            4   11[COMRAM] unsigned long 
  4499 ;;  exp1            1   16[COMRAM] unsigned char 
  4500 ;;  cntr            1   15[COMRAM] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  4    0[COMRAM] unsigned long 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4510 ;;      Params:         6       0       0       0       0       0       0       0       0
  4511 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4512 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4513 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4514 ;;Total ram usage:       17 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_sprintf
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text20
  4524  001C38                     __ptext20:
  4525                           	opt stack 0
  4526  001C38                     __tdiv_to_l_:
  4527                           	opt stack 29
  4528                           
  4529                           ;incstack = 0
  4530                           ;incstack = 0
  4531  001C38  0E0F               	movlw	15
  4532  001C3A  6E07               	movwf	??__tdiv_to_l_& (0+255),c
  4533  001C3C  C001  F008         	movff	__tdiv_to_l_@f1,??__tdiv_to_l_+1
  4534  001C40  C002  F009         	movff	__tdiv_to_l_@f1+1,??__tdiv_to_l_+2
  4535  001C44  C003  F00A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_+3
  4536  001C48  2807               	incf	??__tdiv_to_l_,w,c
  4537  001C4A  6E0B               	movwf	(??__tdiv_to_l_+4)& (0+255),c
  4538  001C4C  D004               	goto	u1620
  4539  001C4E                     u1625:
  4540  001C4E  90D8               	bcf	status,0,c
  4541  001C50  320A               	rrcf	??__tdiv_to_l_+3,f,c
  4542  001C52  3209               	rrcf	??__tdiv_to_l_+2,f,c
  4543  001C54  3208               	rrcf	??__tdiv_to_l_+1,f,c
  4544  001C56                     u1620:
  4545  001C56  2E0B               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,c
  4546  001C58  D7FA               	goto	u1625
  4547  001C5A  5008               	movf	??__tdiv_to_l_+1,w,c
  4548  001C5C  6E11               	movwf	__tdiv_to_l_@exp1,c
  4549  001C5E  6611               	tstfsz	__tdiv_to_l_@exp1& (0+255),c
  4550  001C60  D001               	goto	l3313
  4551  001C62  D061               	goto	u1690
  4552  001C64                     l3313:
  4553  001C64  0E0F               	movlw	15
  4554  001C66  6E07               	movwf	??__tdiv_to_l_& (0+255),c
  4555  001C68  C004  F008         	movff	__tdiv_to_l_@f2,??__tdiv_to_l_+1
  4556  001C6C  C005  F009         	movff	__tdiv_to_l_@f2+1,??__tdiv_to_l_+2
  4557  001C70  C006  F00A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_+3
  4558  001C74  2807               	incf	??__tdiv_to_l_,w,c
  4559  001C76  6E0B               	movwf	(??__tdiv_to_l_+4)& (0+255),c
  4560  001C78  D004               	goto	u1640
  4561  001C7A                     u1645:
  4562  001C7A  90D8               	bcf	status,0,c
  4563  001C7C  320A               	rrcf	??__tdiv_to_l_+3,f,c
  4564  001C7E  3209               	rrcf	??__tdiv_to_l_+2,f,c
  4565  001C80  3208               	rrcf	??__tdiv_to_l_+1,f,c
  4566  001C82                     u1640:
  4567  001C82  2E0B               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,c
  4568  001C84  D7FA               	goto	u1645
  4569  001C86  5008               	movf	??__tdiv_to_l_+1,w,c
  4570  001C88  6E10               	movwf	__tdiv_to_l_@cntr,c
  4571  001C8A  6610               	tstfsz	__tdiv_to_l_@cntr& (0+255),c
  4572  001C8C  D001               	goto	l3319
  4573  001C8E  D04B               	goto	u1690
  4574  001C90                     l3319:
  4575  001C90  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4576  001C92  0EFF               	movlw	255
  4577  001C94  1601               	andwf	__tdiv_to_l_@f1,f,c
  4578  001C96  0EFF               	movlw	255
  4579  001C98  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4580  001C9A  0E00               	movlw	0
  4581  001C9C  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4582  001C9E  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  4583  001CA0  0EFF               	movlw	255
  4584  001CA2  1604               	andwf	__tdiv_to_l_@f2,f,c
  4585  001CA4  0EFF               	movlw	255
  4586  001CA6  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  4587  001CA8  0E00               	movlw	0
  4588  001CAA  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  4589  001CAC  0E00               	movlw	0
  4590  001CAE  6E0C               	movwf	__tdiv_to_l_@quot,c
  4591  001CB0  0E00               	movlw	0
  4592  001CB2  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  4593  001CB4  0E00               	movlw	0
  4594  001CB6  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  4595  001CB8  0E00               	movlw	0
  4596  001CBA  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  4597  001CBC  0E7F               	movlw	127
  4598  001CBE  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4599  001CC0  5010               	movf	__tdiv_to_l_@cntr,w,c
  4600  001CC2  0F98               	addlw	152
  4601  001CC4  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4602  001CC6  6E07               	movwf	??__tdiv_to_l_& (0+255),c
  4603  001CC8  0E18               	movlw	24
  4604  001CCA  6E10               	movwf	__tdiv_to_l_@cntr,c
  4605  001CCC  5007               	movf	??__tdiv_to_l_& (0+255),w,c
  4606  001CCE                     l3333:
  4607  001CCE  90D8               	bcf	status,0,c
  4608  001CD0  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4609  001CD2  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4610  001CD4  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4611  001CD6  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4612  001CD8  5004               	movf	__tdiv_to_l_@f2,w,c
  4613  001CDA  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4614  001CDC  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4615  001CDE  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4616  001CE0  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4617  001CE2  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4618  001CE4  A0D8               	btfss	status,0,c
  4619  001CE6  D007               	goto	l579
  4620  001CE8  5004               	movf	__tdiv_to_l_@f2,w,c
  4621  001CEA  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4622  001CEC  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4623  001CEE  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4624  001CF0  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4625  001CF2  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4626  001CF4  800C               	bsf	__tdiv_to_l_@quot,0,c
  4627  001CF6                     l579:
  4628  001CF6  90D8               	bcf	status,0,c
  4629  001CF8  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4630  001CFA  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4631  001CFC  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4632  001CFE  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  4633  001D00  D7E6               	goto	l3333
  4634  001D02  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  4635  001D04  D00D               	goto	l3353
  4636  001D06  5011               	movf	__tdiv_to_l_@exp1,w,c
  4637  001D08  0A80               	xorlw	128
  4638  001D0A  0F97               	addlw	151
  4639  001D0C  A0D8               	btfss	status,0,c
  4640  001D0E  D00B               	goto	u1690
  4641  001D10                     l3349:
  4642  001D10  90D8               	bcf	status,0,c
  4643  001D12  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  4644  001D14  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  4645  001D16  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  4646  001D18  320C               	rrcf	__tdiv_to_l_@quot,f,c
  4647  001D1A  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  4648  001D1C  D7F9               	goto	l3349
  4649  001D1E  D014               	goto	l585
  4650  001D20                     l3353:
  4651  001D20  0E17               	movlw	23
  4652  001D22  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  4653  001D24  D00F               	goto	l3361
  4654  001D26                     u1690:
  4655  001D26  0E00               	movlw	0
  4656  001D28  6E01               	movwf	?__tdiv_to_l_,c
  4657  001D2A  0E00               	movlw	0
  4658  001D2C  6E02               	movwf	?__tdiv_to_l_+1,c
  4659  001D2E  0E00               	movlw	0
  4660  001D30  6E03               	movwf	?__tdiv_to_l_+2,c
  4661  001D32  0E00               	movlw	0
  4662  001D34  6E04               	movwf	?__tdiv_to_l_+3,c
  4663  001D36  D010               	goto	l576
  4664  001D38                     l3359:
  4665  001D38  90D8               	bcf	status,0,c
  4666  001D3A  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4667  001D3C  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4668  001D3E  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4669  001D40  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4670  001D42  0611               	decf	__tdiv_to_l_@exp1,f,c
  4671  001D44                     l3361:
  4672  001D44  6611               	tstfsz	__tdiv_to_l_@exp1,c
  4673  001D46  D7F8               	goto	l3359
  4674  001D48                     l585:
  4675  001D48  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4676  001D4C  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4677  001D50  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4678  001D54  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4679  001D58                     l576:
  4680  001D58  0012               	return	
  4681  001D5A                     __end_of__tdiv_to_l_:
  4682                           	opt stack 0
  4683                           tblptru	equ	0xFF8
  4684                           tblptrh	equ	0xFF7
  4685                           tblptrl	equ	0xFF6
  4686                           tablat	equ	0xFF5
  4687                           prodh	equ	0xFF4
  4688                           prodl	equ	0xFF3
  4689                           wreg	equ	0xFE8
  4690                           indf2	equ	0xFDF
  4691                           postinc2	equ	0xFDE
  4692                           postdec2	equ	0xFDD
  4693                           fsr2h	equ	0xFDA
  4694                           fsr2l	equ	0xFD9
  4695                           status	equ	0xFD8
  4696                           
  4697 ;; *************** function _isdigit *****************
  4698 ;; Defined at:
  4699 ;;		line 13 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\isdigit.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  c               1    0[COMRAM] unsigned char 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;		None               void
  4706 ;; Registers used:
  4707 ;;		wreg, status,2, status,0
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4713 ;;      Params:         1       0       0       0       0       0       0       0       0
  4714 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4715 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4716 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4717 ;;Total ram usage:        3 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_sprintf
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text21
  4727  002768                     __ptext21:
  4728                           	opt stack 0
  4729  002768                     _isdigit:
  4730                           	opt stack 29
  4731                           
  4732                           ;incstack = 0
  4733                           ;incstack = 0
  4734  002768  6E02               	movwf	??_isdigit& (0+255),c
  4735  00276A  0E00               	movlw	0
  4736  00276C  6E03               	movwf	_isdigit$481,c
  4737  00276E  5002               	movf	??_isdigit& (0+255),w,c
  4738  002770  0E3A               	movlw	58
  4739  002772  6001               	cpfslt	isdigit@c,c
  4740  002774  D007               	goto	l3303
  4741  002776  0E2F               	movlw	47
  4742  002778  6401               	cpfsgt	isdigit@c,c
  4743  00277A  D004               	goto	l3303
  4744  00277C  6E02               	movwf	??_isdigit& (0+255),c
  4745  00277E  0E01               	movlw	1
  4746  002780  6E03               	movwf	_isdigit$481,c
  4747  002782  5002               	movf	??_isdigit& (0+255),w,c
  4748  002784                     l3303:
  4749  002784  C003  F002         	movff	_isdigit$481,??_isdigit
  4750  002788  3002               	rrcf	??_isdigit,w,c
  4751  00278A  0012               	return	
  4752  00278C                     __end_of_isdigit:
  4753                           	opt stack 0
  4754                           tblptru	equ	0xFF8
  4755                           tblptrh	equ	0xFF7
  4756                           tblptrl	equ	0xFF6
  4757                           tablat	equ	0xFF5
  4758                           prodh	equ	0xFF4
  4759                           prodl	equ	0xFF3
  4760                           wreg	equ	0xFE8
  4761                           indf2	equ	0xFDF
  4762                           postinc2	equ	0xFDE
  4763                           postdec2	equ	0xFDD
  4764                           fsr2h	equ	0xFDA
  4765                           fsr2l	equ	0xFD9
  4766                           status	equ	0xFD8
  4767                           
  4768 ;; *************** function _scale *****************
  4769 ;; Defined at:
  4770 ;;		line 426 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\doprnt.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  scl             1   54[COMRAM] char 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  3   54[COMRAM] char 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4784 ;;      Params:         3       0       0       0       0       0       0       0       0
  4785 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4786 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4787 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4788 ;;Total ram usage:       12 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    2
  4791 ;; This function calls:
  4792 ;;		___ftmul
  4793 ;;		___awdiv
  4794 ;;		___awmod
  4795 ;;		___wmul
  4796 ;; This function is called by:
  4797 ;;		_sprintf
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text22
  4802  0010A0                     __ptext22:
  4803                           	opt stack 0
  4804  0010A0                     _scale:
  4805                           	opt stack 27
  4806                           
  4807                           ;doprnt.c: 428: if(scl < 0) {
  4808                           
  4809                           ;incstack = 0
  4810                           ;incstack = 0
  4811  0010A0  AE37               	btfss	scale@scl,7,c
  4812  0010A2  D108               	goto	l3867
  4813                           
  4814                           ;doprnt.c: 429: scl = -scl;
  4815  0010A4  6C37               	negf	scale@scl,c
  4816                           
  4817                           ;doprnt.c: 430: if(scl>=110)
  4818  0010A6  5037               	movf	scale@scl,w,c
  4819  0010A8  0A80               	xorlw	128
  4820  0010AA  0F12               	addlw	-238
  4821  0010AC  A0D8               	btfss	status,0,c
  4822  0010AE  D09D               	goto	l3857
  4823                           
  4824                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4825  0010B0  0E00               	movlw	0
  4826  0010B2  6E14               	movwf	?___wmul+3,c
  4827  0010B4  0E03               	movlw	3
  4828  0010B6  6E13               	movwf	?___wmul+2,c
  4829  0010B8  0E00               	movlw	0
  4830  0010BA  6E0B               	movwf	?___awdiv+3,c
  4831  0010BC  0E0A               	movlw	10
  4832  0010BE  6E0A               	movwf	?___awdiv+2,c
  4833  0010C0  0E00               	movlw	0
  4834  0010C2  6E04               	movwf	?___awmod+3,c
  4835  0010C4  0E64               	movlw	100
  4836  0010C6  6E03               	movwf	?___awmod+2,c
  4837  0010C8  5037               	movf	scale@scl,w,c
  4838  0010CA  6E01               	movwf	?___awmod,c
  4839  0010CC  6A02               	clrf	?___awmod+1,c
  4840  0010CE  BE01               	btfsc	?___awmod,7,c
  4841  0010D0  0602               	decf	?___awmod+1,f,c
  4842  0010D2  ECCD  F011         	call	___awmod	;wreg free
  4843  0010D6  C001  F008         	movff	?___awmod,?___awdiv
  4844  0010DA  C002  F009         	movff	?___awmod+1,?___awdiv+1
  4845  0010DE  EC42  F011         	call	___awdiv	;wreg free
  4846  0010E2  0E09               	movlw	9
  4847  0010E4  2408               	addwf	?___awdiv,w,c
  4848  0010E6  6E11               	movwf	?___wmul,c
  4849  0010E8  0E00               	movlw	0
  4850  0010EA  2009               	addwfc	?___awdiv+1,w,c
  4851  0010EC  6E12               	movwf	?___wmul+1,c
  4852  0010EE  EC11  F013         	call	___wmul	;wreg free
  4853  0010F2  0E28               	movlw	low __npowers_
  4854  0010F4  2411               	addwf	?___wmul,w,c
  4855  0010F6  6EF6               	movwf	tblptrl,c
  4856  0010F8  0E08               	movlw	high __npowers_
  4857  0010FA  2012               	addwfc	?___wmul+1,w,c
  4858  0010FC  6EF7               	movwf	tblptrh,c
  4859  0010FE  0009               	tblrd		*+
  4860  001100  CFF5 F03A          	movff	tablat,??_scale
  4861  001104  0009               	tblrd		*+
  4862  001106  CFF5 F03B          	movff	tablat,??_scale+1
  4863  00110A  0009               	tblrd		*+
  4864  00110C  CFF5 F03C          	movff	tablat,??_scale+2
  4865  001110  C03C  F02B         	movff	??_scale+2,?___ftmul+5
  4866  001114  C03B  F02A         	movff	??_scale+1,?___ftmul+4
  4867  001118  C03A  F029         	movff	??_scale,?___ftmul+3
  4868  00111C  0E00               	movlw	0
  4869  00111E  6E14               	movwf	?___wmul+3,c
  4870  001120  0E03               	movlw	3
  4871  001122  6E13               	movwf	?___wmul+2,c
  4872  001124  0E00               	movlw	0
  4873  001126  6E0B               	movwf	?___awdiv+3,c
  4874  001128  0E64               	movlw	100
  4875  00112A  6E0A               	movwf	?___awdiv+2,c
  4876  00112C  5037               	movf	scale@scl,w,c
  4877  00112E  6E08               	movwf	?___awdiv,c
  4878  001130  6A09               	clrf	?___awdiv+1,c
  4879  001132  BE08               	btfsc	?___awdiv,7,c
  4880  001134  0609               	decf	?___awdiv+1,f,c
  4881  001136  EC42  F011         	call	___awdiv	;wreg free
  4882  00113A  0E12               	movlw	18
  4883  00113C  2408               	addwf	?___awdiv,w,c
  4884  00113E  6E11               	movwf	?___wmul,c
  4885  001140  0E00               	movlw	0
  4886  001142  2009               	addwfc	?___awdiv+1,w,c
  4887  001144  6E12               	movwf	?___wmul+1,c
  4888  001146  EC11  F013         	call	___wmul	;wreg free
  4889  00114A  0E28               	movlw	low __npowers_
  4890  00114C  2411               	addwf	?___wmul,w,c
  4891  00114E  6EF6               	movwf	tblptrl,c
  4892  001150  0E08               	movlw	high __npowers_
  4893  001152  2012               	addwfc	?___wmul+1,w,c
  4894  001154  6EF7               	movwf	tblptrh,c
  4895  001156  0009               	tblrd		*+
  4896  001158  CFF5 F03D          	movff	tablat,??_scale+3
  4897  00115C  0009               	tblrd		*+
  4898  00115E  CFF5 F03E          	movff	tablat,??_scale+4
  4899  001162  0009               	tblrd		*+
  4900  001164  CFF5 F03F          	movff	tablat,??_scale+5
  4901  001168  C03F  F028         	movff	??_scale+5,?___ftmul+2
  4902  00116C  C03E  F027         	movff	??_scale+4,?___ftmul+1
  4903  001170  C03D  F026         	movff	??_scale+3,?___ftmul
  4904  001174  ECAD  F00E         	call	___ftmul	;wreg free
  4905  001178  C028  F042         	movff	?___ftmul+2,_scale$808+2
  4906  00117C  C027  F041         	movff	?___ftmul+1,_scale$808+1
  4907  001180  C026  F040         	movff	?___ftmul,_scale$808
  4908                           
  4909                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4910  001184  C040  F026         	movff	_scale$808,?___ftmul
  4911  001188  C041  F027         	movff	_scale$808+1,?___ftmul+1
  4912  00118C  C042  F028         	movff	_scale$808+2,?___ftmul+2
  4913  001190  0E00               	movlw	0
  4914  001192  6E14               	movwf	?___wmul+3,c
  4915  001194  0E03               	movlw	3
  4916  001196  6E13               	movwf	?___wmul+2,c
  4917  001198  0E00               	movlw	0
  4918  00119A  6E04               	movwf	?___awmod+3,c
  4919  00119C  0E0A               	movlw	10
  4920  00119E  6E03               	movwf	?___awmod+2,c
  4921  0011A0  5037               	movf	scale@scl,w,c
  4922  0011A2  6E01               	movwf	?___awmod,c
  4923  0011A4  6A02               	clrf	?___awmod+1,c
  4924  0011A6  BE01               	btfsc	?___awmod,7,c
  4925  0011A8  0602               	decf	?___awmod+1,f,c
  4926  0011AA  ECCD  F011         	call	___awmod	;wreg free
  4927  0011AE  C001  F011         	movff	?___awmod,?___wmul
  4928  0011B2  C002  F012         	movff	?___awmod+1,?___wmul+1
  4929  0011B6  EC11  F013         	call	___wmul	;wreg free
  4930  0011BA  0E28               	movlw	low __npowers_
  4931  0011BC  2411               	addwf	?___wmul,w,c
  4932  0011BE  6EF6               	movwf	tblptrl,c
  4933  0011C0  0E08               	movlw	high __npowers_
  4934  0011C2  2012               	addwfc	?___wmul+1,w,c
  4935  0011C4  6EF7               	movwf	tblptrh,c
  4936  0011C6  0009               	tblrd		*+
  4937  0011C8  CFF5 F03A          	movff	tablat,??_scale
  4938  0011CC  0009               	tblrd		*+
  4939  0011CE  CFF5 F03B          	movff	tablat,??_scale+1
  4940  0011D2  0009               	tblrd		*+
  4941  0011D4  CFF5 F03C          	movff	tablat,??_scale+2
  4942  0011D8  C03C  F02B         	movff	??_scale+2,?___ftmul+5
  4943  0011DC  C03B  F02A         	movff	??_scale+1,?___ftmul+4
  4944  0011E0  C03A  F029         	movff	??_scale,?___ftmul+3
  4945  0011E4  ECAD  F00E         	call	___ftmul	;wreg free
  4946  0011E8  D164               	goto	L17
  4947  0011EA                     l3857:
  4948                           
  4949                           ;doprnt.c: 432: else if(scl > 10)
  4950  0011EA  5037               	movf	scale@scl,w,c
  4951  0011EC  0A80               	xorlw	128
  4952  0011EE  0F75               	addlw	-139
  4953  0011F0  A0D8               	btfss	status,0,c
  4954  0011F2  D059               	goto	l3863
  4955                           
  4956                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4957  0011F4  0E00               	movlw	0
  4958  0011F6  6E14               	movwf	?___wmul+3,c
  4959  0011F8  0E03               	movlw	3
  4960  0011FA  6E13               	movwf	?___wmul+2,c
  4961  0011FC  0E00               	movlw	0
  4962  0011FE  6E0B               	movwf	?___awdiv+3,c
  4963  001200  0E0A               	movlw	10
  4964  001202  6E0A               	movwf	?___awdiv+2,c
  4965  001204  5037               	movf	scale@scl,w,c
  4966  001206  6E08               	movwf	?___awdiv,c
  4967  001208  6A09               	clrf	?___awdiv+1,c
  4968  00120A  BE08               	btfsc	?___awdiv,7,c
  4969  00120C  0609               	decf	?___awdiv+1,f,c
  4970  00120E  EC42  F011         	call	___awdiv	;wreg free
  4971  001212  0E09               	movlw	9
  4972  001214  2408               	addwf	?___awdiv,w,c
  4973  001216  6E11               	movwf	?___wmul,c
  4974  001218  0E00               	movlw	0
  4975  00121A  2009               	addwfc	?___awdiv+1,w,c
  4976  00121C  6E12               	movwf	?___wmul+1,c
  4977  00121E  EC11  F013         	call	___wmul	;wreg free
  4978  001222  0E28               	movlw	low __npowers_
  4979  001224  2411               	addwf	?___wmul,w,c
  4980  001226  6EF6               	movwf	tblptrl,c
  4981  001228  0E08               	movlw	high __npowers_
  4982  00122A  2012               	addwfc	?___wmul+1,w,c
  4983  00122C  6EF7               	movwf	tblptrh,c
  4984  00122E  0009               	tblrd		*+
  4985  001230  CFF5 F03A          	movff	tablat,??_scale
  4986  001234  0009               	tblrd		*+
  4987  001236  CFF5 F03B          	movff	tablat,??_scale+1
  4988  00123A  0009               	tblrd		*+
  4989  00123C  CFF5 F03C          	movff	tablat,??_scale+2
  4990  001240  C03C  F028         	movff	??_scale+2,?___ftmul+2
  4991  001244  C03B  F027         	movff	??_scale+1,?___ftmul+1
  4992  001248  C03A  F026         	movff	??_scale,?___ftmul
  4993  00124C  0E00               	movlw	0
  4994  00124E  6E14               	movwf	?___wmul+3,c
  4995  001250  0E03               	movlw	3
  4996  001252  6E13               	movwf	?___wmul+2,c
  4997  001254  0E00               	movlw	0
  4998  001256  6E04               	movwf	?___awmod+3,c
  4999  001258  0E0A               	movlw	10
  5000  00125A  6E03               	movwf	?___awmod+2,c
  5001  00125C  5037               	movf	scale@scl,w,c
  5002  00125E  6E01               	movwf	?___awmod,c
  5003  001260  6A02               	clrf	?___awmod+1,c
  5004  001262  BE01               	btfsc	?___awmod,7,c
  5005  001264  0602               	decf	?___awmod+1,f,c
  5006  001266  ECCD  F011         	call	___awmod	;wreg free
  5007  00126A  C001  F011         	movff	?___awmod,?___wmul
  5008  00126E  C002  F012         	movff	?___awmod+1,?___wmul+1
  5009  001272  EC11  F013         	call	___wmul	;wreg free
  5010  001276  0E28               	movlw	low __npowers_
  5011  001278  2411               	addwf	?___wmul,w,c
  5012  00127A  6EF6               	movwf	tblptrl,c
  5013  00127C  0E08               	movlw	high __npowers_
  5014  00127E  2012               	addwfc	?___wmul+1,w,c
  5015  001280  6EF7               	movwf	tblptrh,c
  5016  001282  0009               	tblrd		*+
  5017  001284  CFF5 F03D          	movff	tablat,??_scale+3
  5018  001288  0009               	tblrd		*+
  5019  00128A  CFF5 F03E          	movff	tablat,??_scale+4
  5020  00128E  0009               	tblrd		*+
  5021  001290  CFF5 F03F          	movff	tablat,??_scale+5
  5022  001294  C03F  F02B         	movff	??_scale+5,?___ftmul+5
  5023  001298  C03E  F02A         	movff	??_scale+4,?___ftmul+4
  5024  00129C  C03D  F029         	movff	??_scale+3,?___ftmul+3
  5025  0012A0  ECAD  F00E         	call	___ftmul	;wreg free
  5026  0012A4  D106               	goto	L17
  5027  0012A6                     l3863:
  5028                           
  5029                           ;doprnt.c: 434: return _npowers_[scl];
  5030  0012A6  5037               	movf	scale@scl,w,c
  5031  0012A8  0D03               	mullw	3
  5032  0012AA  0E28               	movlw	low __npowers_
  5033  0012AC  24F3               	addwf	prodl,w,c
  5034  0012AE  6EF6               	movwf	tblptrl,c
  5035  0012B0  0E08               	movlw	high __npowers_
  5036  0012B2  D10C               	goto	L16
  5037  0012B4                     l3867:
  5038                           
  5039                           ;doprnt.c: 435: }
  5040                           ;doprnt.c: 436: if(scl>=110)
  5041  0012B4  5037               	movf	scale@scl,w,c
  5042  0012B6  0A80               	xorlw	128
  5043  0012B8  0F12               	addlw	-238
  5044  0012BA  A0D8               	btfss	status,0,c
  5045  0012BC  D09D               	goto	l3875
  5046                           
  5047                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5048  0012BE  0E00               	movlw	0
  5049  0012C0  6E14               	movwf	?___wmul+3,c
  5050  0012C2  0E03               	movlw	3
  5051  0012C4  6E13               	movwf	?___wmul+2,c
  5052  0012C6  0E00               	movlw	0
  5053  0012C8  6E0B               	movwf	?___awdiv+3,c
  5054  0012CA  0E0A               	movlw	10
  5055  0012CC  6E0A               	movwf	?___awdiv+2,c
  5056  0012CE  0E00               	movlw	0
  5057  0012D0  6E04               	movwf	?___awmod+3,c
  5058  0012D2  0E64               	movlw	100
  5059  0012D4  6E03               	movwf	?___awmod+2,c
  5060  0012D6  5037               	movf	scale@scl,w,c
  5061  0012D8  6E01               	movwf	?___awmod,c
  5062  0012DA  6A02               	clrf	?___awmod+1,c
  5063  0012DC  BE01               	btfsc	?___awmod,7,c
  5064  0012DE  0602               	decf	?___awmod+1,f,c
  5065  0012E0  ECCD  F011         	call	___awmod	;wreg free
  5066  0012E4  C001  F008         	movff	?___awmod,?___awdiv
  5067  0012E8  C002  F009         	movff	?___awmod+1,?___awdiv+1
  5068  0012EC  EC42  F011         	call	___awdiv	;wreg free
  5069  0012F0  0E09               	movlw	9
  5070  0012F2  2408               	addwf	?___awdiv,w,c
  5071  0012F4  6E11               	movwf	?___wmul,c
  5072  0012F6  0E00               	movlw	0
  5073  0012F8  2009               	addwfc	?___awdiv+1,w,c
  5074  0012FA  6E12               	movwf	?___wmul+1,c
  5075  0012FC  EC11  F013         	call	___wmul	;wreg free
  5076  001300  0E4F               	movlw	low __powers_
  5077  001302  2411               	addwf	?___wmul,w,c
  5078  001304  6EF6               	movwf	tblptrl,c
  5079  001306  0E08               	movlw	high __powers_
  5080  001308  2012               	addwfc	?___wmul+1,w,c
  5081  00130A  6EF7               	movwf	tblptrh,c
  5082  00130C  0009               	tblrd		*+
  5083  00130E  CFF5 F03A          	movff	tablat,??_scale
  5084  001312  0009               	tblrd		*+
  5085  001314  CFF5 F03B          	movff	tablat,??_scale+1
  5086  001318  0009               	tblrd		*+
  5087  00131A  CFF5 F03C          	movff	tablat,??_scale+2
  5088  00131E  C03C  F02B         	movff	??_scale+2,?___ftmul+5
  5089  001322  C03B  F02A         	movff	??_scale+1,?___ftmul+4
  5090  001326  C03A  F029         	movff	??_scale,?___ftmul+3
  5091  00132A  0E00               	movlw	0
  5092  00132C  6E14               	movwf	?___wmul+3,c
  5093  00132E  0E03               	movlw	3
  5094  001330  6E13               	movwf	?___wmul+2,c
  5095  001332  0E00               	movlw	0
  5096  001334  6E0B               	movwf	?___awdiv+3,c
  5097  001336  0E64               	movlw	100
  5098  001338  6E0A               	movwf	?___awdiv+2,c
  5099  00133A  5037               	movf	scale@scl,w,c
  5100  00133C  6E08               	movwf	?___awdiv,c
  5101  00133E  6A09               	clrf	?___awdiv+1,c
  5102  001340  BE08               	btfsc	?___awdiv,7,c
  5103  001342  0609               	decf	?___awdiv+1,f,c
  5104  001344  EC42  F011         	call	___awdiv	;wreg free
  5105  001348  0E12               	movlw	18
  5106  00134A  2408               	addwf	?___awdiv,w,c
  5107  00134C  6E11               	movwf	?___wmul,c
  5108  00134E  0E00               	movlw	0
  5109  001350  2009               	addwfc	?___awdiv+1,w,c
  5110  001352  6E12               	movwf	?___wmul+1,c
  5111  001354  EC11  F013         	call	___wmul	;wreg free
  5112  001358  0E4F               	movlw	low __powers_
  5113  00135A  2411               	addwf	?___wmul,w,c
  5114  00135C  6EF6               	movwf	tblptrl,c
  5115  00135E  0E08               	movlw	high __powers_
  5116  001360  2012               	addwfc	?___wmul+1,w,c
  5117  001362  6EF7               	movwf	tblptrh,c
  5118  001364  0009               	tblrd		*+
  5119  001366  CFF5 F03D          	movff	tablat,??_scale+3
  5120  00136A  0009               	tblrd		*+
  5121  00136C  CFF5 F03E          	movff	tablat,??_scale+4
  5122  001370  0009               	tblrd		*+
  5123  001372  CFF5 F03F          	movff	tablat,??_scale+5
  5124  001376  C03F  F028         	movff	??_scale+5,?___ftmul+2
  5125  00137A  C03E  F027         	movff	??_scale+4,?___ftmul+1
  5126  00137E  C03D  F026         	movff	??_scale+3,?___ftmul
  5127  001382  ECAD  F00E         	call	___ftmul	;wreg free
  5128  001386  C028  F042         	movff	?___ftmul+2,_scale$808+2
  5129  00138A  C027  F041         	movff	?___ftmul+1,_scale$808+1
  5130  00138E  C026  F040         	movff	?___ftmul,_scale$808
  5131                           
  5132                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5133  001392  C040  F026         	movff	_scale$808,?___ftmul
  5134  001396  C041  F027         	movff	_scale$808+1,?___ftmul+1
  5135  00139A  C042  F028         	movff	_scale$808+2,?___ftmul+2
  5136  00139E  0E00               	movlw	0
  5137  0013A0  6E14               	movwf	?___wmul+3,c
  5138  0013A2  0E03               	movlw	3
  5139  0013A4  6E13               	movwf	?___wmul+2,c
  5140  0013A6  0E00               	movlw	0
  5141  0013A8  6E04               	movwf	?___awmod+3,c
  5142  0013AA  0E0A               	movlw	10
  5143  0013AC  6E03               	movwf	?___awmod+2,c
  5144  0013AE  5037               	movf	scale@scl,w,c
  5145  0013B0  6E01               	movwf	?___awmod,c
  5146  0013B2  6A02               	clrf	?___awmod+1,c
  5147  0013B4  BE01               	btfsc	?___awmod,7,c
  5148  0013B6  0602               	decf	?___awmod+1,f,c
  5149  0013B8  ECCD  F011         	call	___awmod	;wreg free
  5150  0013BC  C001  F011         	movff	?___awmod,?___wmul
  5151  0013C0  C002  F012         	movff	?___awmod+1,?___wmul+1
  5152  0013C4  EC11  F013         	call	___wmul	;wreg free
  5153  0013C8  0E4F               	movlw	low __powers_
  5154  0013CA  2411               	addwf	?___wmul,w,c
  5155  0013CC  6EF6               	movwf	tblptrl,c
  5156  0013CE  0E08               	movlw	high __powers_
  5157  0013D0  2012               	addwfc	?___wmul+1,w,c
  5158  0013D2  6EF7               	movwf	tblptrh,c
  5159  0013D4  0009               	tblrd		*+
  5160  0013D6  CFF5 F03A          	movff	tablat,??_scale
  5161  0013DA  0009               	tblrd		*+
  5162  0013DC  CFF5 F03B          	movff	tablat,??_scale+1
  5163  0013E0  0009               	tblrd		*+
  5164  0013E2  CFF5 F03C          	movff	tablat,??_scale+2
  5165  0013E6  C03C  F02B         	movff	??_scale+2,?___ftmul+5
  5166  0013EA  C03B  F02A         	movff	??_scale+1,?___ftmul+4
  5167  0013EE  C03A  F029         	movff	??_scale,?___ftmul+3
  5168  0013F2  ECAD  F00E         	call	___ftmul	;wreg free
  5169  0013F6  D05D               	goto	L17
  5170  0013F8                     l3875:
  5171                           
  5172                           ;doprnt.c: 438: else if(scl > 10)
  5173  0013F8  5037               	movf	scale@scl,w,c
  5174  0013FA  0A80               	xorlw	128
  5175  0013FC  0F75               	addlw	-139
  5176  0013FE  A0D8               	btfss	status,0,c
  5177  001400  D05F               	goto	l3881
  5178                           
  5179                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5180  001402  0E00               	movlw	0
  5181  001404  6E14               	movwf	?___wmul+3,c
  5182  001406  0E03               	movlw	3
  5183  001408  6E13               	movwf	?___wmul+2,c
  5184  00140A  0E00               	movlw	0
  5185  00140C  6E0B               	movwf	?___awdiv+3,c
  5186  00140E  0E0A               	movlw	10
  5187  001410  6E0A               	movwf	?___awdiv+2,c
  5188  001412  5037               	movf	scale@scl,w,c
  5189  001414  6E08               	movwf	?___awdiv,c
  5190  001416  6A09               	clrf	?___awdiv+1,c
  5191  001418  BE08               	btfsc	?___awdiv,7,c
  5192  00141A  0609               	decf	?___awdiv+1,f,c
  5193  00141C  EC42  F011         	call	___awdiv	;wreg free
  5194  001420  0E09               	movlw	9
  5195  001422  2408               	addwf	?___awdiv,w,c
  5196  001424  6E11               	movwf	?___wmul,c
  5197  001426  0E00               	movlw	0
  5198  001428  2009               	addwfc	?___awdiv+1,w,c
  5199  00142A  6E12               	movwf	?___wmul+1,c
  5200  00142C  EC11  F013         	call	___wmul	;wreg free
  5201  001430  0E4F               	movlw	low __powers_
  5202  001432  2411               	addwf	?___wmul,w,c
  5203  001434  6EF6               	movwf	tblptrl,c
  5204  001436  0E08               	movlw	high __powers_
  5205  001438  2012               	addwfc	?___wmul+1,w,c
  5206  00143A  6EF7               	movwf	tblptrh,c
  5207  00143C  0009               	tblrd		*+
  5208  00143E  CFF5 F03A          	movff	tablat,??_scale
  5209  001442  0009               	tblrd		*+
  5210  001444  CFF5 F03B          	movff	tablat,??_scale+1
  5211  001448  0009               	tblrd		*+
  5212  00144A  CFF5 F03C          	movff	tablat,??_scale+2
  5213  00144E  C03C  F028         	movff	??_scale+2,?___ftmul+2
  5214  001452  C03B  F027         	movff	??_scale+1,?___ftmul+1
  5215  001456  C03A  F026         	movff	??_scale,?___ftmul
  5216  00145A  0E00               	movlw	0
  5217  00145C  6E14               	movwf	?___wmul+3,c
  5218  00145E  0E03               	movlw	3
  5219  001460  6E13               	movwf	?___wmul+2,c
  5220  001462  0E00               	movlw	0
  5221  001464  6E04               	movwf	?___awmod+3,c
  5222  001466  0E0A               	movlw	10
  5223  001468  6E03               	movwf	?___awmod+2,c
  5224  00146A  5037               	movf	scale@scl,w,c
  5225  00146C  6E01               	movwf	?___awmod,c
  5226  00146E  6A02               	clrf	?___awmod+1,c
  5227  001470  BE01               	btfsc	?___awmod,7,c
  5228  001472  0602               	decf	?___awmod+1,f,c
  5229  001474  ECCD  F011         	call	___awmod	;wreg free
  5230  001478  C001  F011         	movff	?___awmod,?___wmul
  5231  00147C  C002  F012         	movff	?___awmod+1,?___wmul+1
  5232  001480  EC11  F013         	call	___wmul	;wreg free
  5233  001484  0E4F               	movlw	low __powers_
  5234  001486  2411               	addwf	?___wmul,w,c
  5235  001488  6EF6               	movwf	tblptrl,c
  5236  00148A  0E08               	movlw	high __powers_
  5237  00148C  2012               	addwfc	?___wmul+1,w,c
  5238  00148E  6EF7               	movwf	tblptrh,c
  5239  001490  0009               	tblrd		*+
  5240  001492  CFF5 F03D          	movff	tablat,??_scale+3
  5241  001496  0009               	tblrd		*+
  5242  001498  CFF5 F03E          	movff	tablat,??_scale+4
  5243  00149C  0009               	tblrd		*+
  5244  00149E  CFF5 F03F          	movff	tablat,??_scale+5
  5245  0014A2  C03F  F02B         	movff	??_scale+5,?___ftmul+5
  5246  0014A6  C03E  F02A         	movff	??_scale+4,?___ftmul+4
  5247  0014AA  C03D  F029         	movff	??_scale+3,?___ftmul+3
  5248  0014AE  ECAD  F00E         	call	___ftmul	;wreg free
  5249  0014B2                     L17:
  5250  0014B2  C028  F039         	movff	?___ftmul+2,?_scale+2
  5251  0014B6  C027  F038         	movff	?___ftmul+1,?_scale+1
  5252  0014BA  C026  F037         	movff	?___ftmul,?_scale
  5253  0014BE  D017               	goto	l122
  5254  0014C0                     l3881:
  5255                           
  5256                           ;doprnt.c: 440: return _powers_[scl];
  5257  0014C0  5037               	movf	scale@scl,w,c
  5258  0014C2  0D03               	mullw	3
  5259  0014C4  0E4F               	movlw	low __powers_
  5260  0014C6  24F3               	addwf	prodl,w,c
  5261  0014C8  6EF6               	movwf	tblptrl,c
  5262  0014CA  0E08               	movlw	high __powers_
  5263  0014CC                     L16:
  5264  0014CC  20F4               	addwfc	prodh,w,c
  5265  0014CE  6EF7               	movwf	tblptrh,c
  5266  0014D0  0009               	tblrd		*+
  5267  0014D2  CFF5 F03A          	movff	tablat,??_scale
  5268  0014D6  0009               	tblrd		*+
  5269  0014D8  CFF5 F03B          	movff	tablat,??_scale+1
  5270  0014DC  0009               	tblrd		*+
  5271  0014DE  CFF5 F03C          	movff	tablat,??_scale+2
  5272  0014E2  C03C  F039         	movff	??_scale+2,?_scale+2
  5273  0014E6  C03B  F038         	movff	??_scale+1,?_scale+1
  5274  0014EA  C03A  F037         	movff	??_scale,?_scale
  5275  0014EE                     l122:
  5276  0014EE  0012               	return	
  5277  0014F0                     __end_of_scale:
  5278                           	opt stack 0
  5279                           tblptru	equ	0xFF8
  5280                           tblptrh	equ	0xFF7
  5281                           tblptrl	equ	0xFF6
  5282                           tablat	equ	0xFF5
  5283                           prodh	equ	0xFF4
  5284                           prodl	equ	0xFF3
  5285                           wreg	equ	0xFE8
  5286                           indf2	equ	0xFDF
  5287                           postinc2	equ	0xFDE
  5288                           postdec2	equ	0xFDD
  5289                           fsr2h	equ	0xFDA
  5290                           fsr2l	equ	0xFD9
  5291                           status	equ	0xFD8
  5292                           
  5293 ;; *************** function ___wmul *****************
  5294 ;; Defined at:
  5295 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\wmul.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  multiplier      2   16[COMRAM] unsigned int 
  5298 ;;  multiplicand    2   18[COMRAM] unsigned int 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  product         2   20[COMRAM] unsigned int 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  2   16[COMRAM] unsigned int 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0, prodl, prodh
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5310 ;;      Params:         4       0       0       0       0       0       0       0       0
  5311 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5313 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5314 ;;Total ram usage:        6 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_fround
  5320 ;;		_scale
  5321 ;;		_sprintf
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text23
  5326  002622                     __ptext23:
  5327                           	opt stack 0
  5328  002622                     ___wmul:
  5329                           	opt stack 29
  5330                           
  5331                           ;incstack = 0
  5332                           ;incstack = 0
  5333  002622  5011               	movf	___wmul@multiplier,w,c
  5334  002624  0213               	mulwf	___wmul@multiplicand,c
  5335  002626  CFF3 F015          	movff	prodl,___wmul@product
  5336  00262A  CFF4 F016          	movff	prodh,___wmul@product+1
  5337  00262E  5011               	movf	___wmul@multiplier,w,c
  5338  002630  0214               	mulwf	___wmul@multiplicand+1,c
  5339  002632  CFF3 FFF4          	movff	prodl,prodh
  5340  002636  6AF3               	clrf	prodl,c
  5341  002638  50F3               	movf	prodl,w,c
  5342  00263A  2615               	addwf	___wmul@product,f,c
  5343  00263C  50F4               	movf	prodh,w,c
  5344  00263E  2216               	addwfc	___wmul@product+1,f,c
  5345  002640  5012               	movf	___wmul@multiplier+1,w,c
  5346  002642  0213               	mulwf	___wmul@multiplicand,c
  5347  002644  CFF3 FFF4          	movff	prodl,prodh
  5348  002648  6AF3               	clrf	prodl,c
  5349  00264A  50F3               	movf	prodl,w,c
  5350  00264C  2615               	addwf	___wmul@product,f,c
  5351  00264E  50F4               	movf	prodh,w,c
  5352  002650  2216               	addwfc	___wmul@product+1,f,c
  5353  002652  C015  F011         	movff	___wmul@product,?___wmul
  5354  002656  C016  F012         	movff	___wmul@product+1,?___wmul+1
  5355  00265A  0012               	return	
  5356  00265C                     __end_of___wmul:
  5357                           	opt stack 0
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           wreg	equ	0xFE8
  5365                           indf2	equ	0xFDF
  5366                           postinc2	equ	0xFDE
  5367                           postdec2	equ	0xFDD
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function ___awmod *****************
  5373 ;; Defined at:
  5374 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\awmod.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  dividend        2    0[COMRAM] int 
  5377 ;;  divisor         2    2[COMRAM] int 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  sign            1    6[COMRAM] unsigned char 
  5380 ;;  counter         1    5[COMRAM] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2    0[COMRAM] int 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5390 ;;      Params:         4       0       0       0       0       0       0       0       0
  5391 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5392 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5393 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5394 ;;Total ram usage:        7 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_fround
  5400 ;;		_scale
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text24
  5405  00239A                     __ptext24:
  5406                           	opt stack 0
  5407  00239A                     ___awmod:
  5408                           	opt stack 28
  5409                           
  5410                           ;incstack = 0
  5411                           ;incstack = 0
  5412  00239A  6E05               	movwf	??___awmod& (0+255),c
  5413  00239C  0E00               	movlw	0
  5414  00239E  6E07               	movwf	___awmod@sign,c
  5415  0023A0  5005               	movf	??___awmod& (0+255),w,c
  5416  0023A2  AE02               	btfss	___awmod@dividend+1,7,c
  5417  0023A4  D008               	goto	l3461
  5418  0023A6  6C01               	negf	___awmod@dividend,c
  5419  0023A8  1E02               	comf	___awmod@dividend+1,f,c
  5420  0023AA  B0D8               	btfsc	status,0,c
  5421  0023AC  2A02               	incf	___awmod@dividend+1,f,c
  5422  0023AE  6E05               	movwf	??___awmod& (0+255),c
  5423  0023B0  0E01               	movlw	1
  5424  0023B2  6E07               	movwf	___awmod@sign,c
  5425  0023B4  5005               	movf	??___awmod& (0+255),w,c
  5426  0023B6                     l3461:
  5427  0023B6  AE04               	btfss	___awmod@divisor+1,7,c
  5428  0023B8  D004               	goto	l3465
  5429  0023BA  6C03               	negf	___awmod@divisor,c
  5430  0023BC  1E04               	comf	___awmod@divisor+1,f,c
  5431  0023BE  B0D8               	btfsc	status,0,c
  5432  0023C0  2A04               	incf	___awmod@divisor+1,f,c
  5433  0023C2                     l3465:
  5434  0023C2  5004               	movf	___awmod@divisor+1,w,c
  5435  0023C4  1003               	iorwf	___awmod@divisor,w,c
  5436  0023C6  B4D8               	btfsc	status,2,c
  5437  0023C8  D01A               	goto	l3481
  5438  0023CA  6E05               	movwf	??___awmod& (0+255),c
  5439  0023CC  0E01               	movlw	1
  5440  0023CE  6E06               	movwf	___awmod@counter,c
  5441  0023D0  5005               	movf	??___awmod& (0+255),w,c
  5442  0023D2  D004               	goto	l3471
  5443  0023D4                     l3469:
  5444  0023D4  90D8               	bcf	status,0,c
  5445  0023D6  3603               	rlcf	___awmod@divisor,f,c
  5446  0023D8  3604               	rlcf	___awmod@divisor+1,f,c
  5447  0023DA  2A06               	incf	___awmod@counter,f,c
  5448  0023DC                     l3471:
  5449  0023DC  AE04               	btfss	___awmod@divisor+1,7,c
  5450  0023DE  D7FA               	goto	l3469
  5451  0023E0                     l3473:
  5452  0023E0  5003               	movf	___awmod@divisor,w,c
  5453  0023E2  5C01               	subwf	___awmod@dividend,w,c
  5454  0023E4  5004               	movf	___awmod@divisor+1,w,c
  5455  0023E6  5802               	subwfb	___awmod@dividend+1,w,c
  5456  0023E8  A0D8               	btfss	status,0,c
  5457  0023EA  D004               	goto	l3477
  5458  0023EC  5003               	movf	___awmod@divisor,w,c
  5459  0023EE  5E01               	subwf	___awmod@dividend,f,c
  5460  0023F0  5004               	movf	___awmod@divisor+1,w,c
  5461  0023F2  5A02               	subwfb	___awmod@dividend+1,f,c
  5462  0023F4                     l3477:
  5463  0023F4  90D8               	bcf	status,0,c
  5464  0023F6  3204               	rrcf	___awmod@divisor+1,f,c
  5465  0023F8  3203               	rrcf	___awmod@divisor,f,c
  5466  0023FA  2E06               	decfsz	___awmod@counter,f,c
  5467  0023FC  D7F1               	goto	l3473
  5468  0023FE                     l3481:
  5469  0023FE  5007               	movf	___awmod@sign,w,c
  5470  002400  B4D8               	btfsc	status,2,c
  5471  002402  D004               	goto	l3485
  5472  002404  6C01               	negf	___awmod@dividend,c
  5473  002406  1E02               	comf	___awmod@dividend+1,f,c
  5474  002408  B0D8               	btfsc	status,0,c
  5475  00240A  2A02               	incf	___awmod@dividend+1,f,c
  5476  00240C                     l3485:
  5477  00240C  C001  F001         	movff	___awmod@dividend,?___awmod
  5478  002410  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5479  002414  0012               	return	
  5480  002416                     __end_of___awmod:
  5481                           	opt stack 0
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           prodh	equ	0xFF4
  5487                           prodl	equ	0xFF3
  5488                           wreg	equ	0xFE8
  5489                           indf2	equ	0xFDF
  5490                           postinc2	equ	0xFDE
  5491                           postdec2	equ	0xFDD
  5492                           fsr2h	equ	0xFDA
  5493                           fsr2l	equ	0xFD9
  5494                           status	equ	0xFD8
  5495                           
  5496 ;; *************** function ___awdiv *****************
  5497 ;; Defined at:
  5498 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\awdiv.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  dividend        2    7[COMRAM] int 
  5501 ;;  divisor         2    9[COMRAM] int 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  quotient        2   14[COMRAM] int 
  5504 ;;  sign            1   13[COMRAM] unsigned char 
  5505 ;;  counter         1   12[COMRAM] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  2    7[COMRAM] int 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5515 ;;      Params:         4       0       0       0       0       0       0       0       0
  5516 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5517 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5518 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5519 ;;Total ram usage:        9 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_fround
  5525 ;;		_scale
  5526 ;;		_sprintf
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text25
  5531  002284                     __ptext25:
  5532                           	opt stack 0
  5533  002284                     ___awdiv:
  5534                           	opt stack 29
  5535                           
  5536                           ;incstack = 0
  5537                           ;incstack = 0
  5538  002284  6E0C               	movwf	??___awdiv& (0+255),c
  5539  002286  0E00               	movlw	0
  5540  002288  6E0E               	movwf	___awdiv@sign,c
  5541  00228A  500C               	movf	??___awdiv& (0+255),w,c
  5542  00228C  AE0B               	btfss	___awdiv@divisor+1,7,c
  5543  00228E  D008               	goto	l3723
  5544  002290  6C0A               	negf	___awdiv@divisor,c
  5545  002292  1E0B               	comf	___awdiv@divisor+1,f,c
  5546  002294  B0D8               	btfsc	status,0,c
  5547  002296  2A0B               	incf	___awdiv@divisor+1,f,c
  5548  002298  6E0C               	movwf	??___awdiv& (0+255),c
  5549  00229A  0E01               	movlw	1
  5550  00229C  6E0E               	movwf	___awdiv@sign,c
  5551  00229E  500C               	movf	??___awdiv& (0+255),w,c
  5552  0022A0                     l3723:
  5553  0022A0  AE09               	btfss	___awdiv@dividend+1,7,c
  5554  0022A2  D006               	goto	l3729
  5555  0022A4  6C08               	negf	___awdiv@dividend,c
  5556  0022A6  1E09               	comf	___awdiv@dividend+1,f,c
  5557  0022A8  B0D8               	btfsc	status,0,c
  5558  0022AA  2A09               	incf	___awdiv@dividend+1,f,c
  5559  0022AC  0E01               	movlw	1
  5560  0022AE  1A0E               	xorwf	___awdiv@sign,f,c
  5561  0022B0                     l3729:
  5562  0022B0  0E00               	movlw	0
  5563  0022B2  6E10               	movwf	___awdiv@quotient+1,c
  5564  0022B4  0E00               	movlw	0
  5565  0022B6  6E0F               	movwf	___awdiv@quotient,c
  5566  0022B8  500B               	movf	___awdiv@divisor+1,w,c
  5567  0022BA  100A               	iorwf	___awdiv@divisor,w,c
  5568  0022BC  B4D8               	btfsc	status,2,c
  5569  0022BE  D01E               	goto	l3751
  5570  0022C0  6E0C               	movwf	??___awdiv& (0+255),c
  5571  0022C2  0E01               	movlw	1
  5572  0022C4  6E0D               	movwf	___awdiv@counter,c
  5573  0022C6  500C               	movf	??___awdiv& (0+255),w,c
  5574  0022C8  D004               	goto	l3737
  5575  0022CA                     l3735:
  5576  0022CA  90D8               	bcf	status,0,c
  5577  0022CC  360A               	rlcf	___awdiv@divisor,f,c
  5578  0022CE  360B               	rlcf	___awdiv@divisor+1,f,c
  5579  0022D0  2A0D               	incf	___awdiv@counter,f,c
  5580  0022D2                     l3737:
  5581  0022D2  AE0B               	btfss	___awdiv@divisor+1,7,c
  5582  0022D4  D7FA               	goto	l3735
  5583  0022D6                     l3739:
  5584  0022D6  90D8               	bcf	status,0,c
  5585  0022D8  360F               	rlcf	___awdiv@quotient,f,c
  5586  0022DA  3610               	rlcf	___awdiv@quotient+1,f,c
  5587  0022DC  500A               	movf	___awdiv@divisor,w,c
  5588  0022DE  5C08               	subwf	___awdiv@dividend,w,c
  5589  0022E0  500B               	movf	___awdiv@divisor+1,w,c
  5590  0022E2  5809               	subwfb	___awdiv@dividend+1,w,c
  5591  0022E4  A0D8               	btfss	status,0,c
  5592  0022E6  D005               	goto	l3747
  5593  0022E8  500A               	movf	___awdiv@divisor,w,c
  5594  0022EA  5E08               	subwf	___awdiv@dividend,f,c
  5595  0022EC  500B               	movf	___awdiv@divisor+1,w,c
  5596  0022EE  5A09               	subwfb	___awdiv@dividend+1,f,c
  5597  0022F0  800F               	bsf	___awdiv@quotient,0,c
  5598  0022F2                     l3747:
  5599  0022F2  90D8               	bcf	status,0,c
  5600  0022F4  320B               	rrcf	___awdiv@divisor+1,f,c
  5601  0022F6  320A               	rrcf	___awdiv@divisor,f,c
  5602  0022F8  2E0D               	decfsz	___awdiv@counter,f,c
  5603  0022FA  D7ED               	goto	l3739
  5604  0022FC                     l3751:
  5605  0022FC  500E               	movf	___awdiv@sign,w,c
  5606  0022FE  B4D8               	btfsc	status,2,c
  5607  002300  D004               	goto	l3755
  5608  002302  6C0F               	negf	___awdiv@quotient,c
  5609  002304  1E10               	comf	___awdiv@quotient+1,f,c
  5610  002306  B0D8               	btfsc	status,0,c
  5611  002308  2A10               	incf	___awdiv@quotient+1,f,c
  5612  00230A                     l3755:
  5613  00230A  C00F  F008         	movff	___awdiv@quotient,?___awdiv
  5614  00230E  C010  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  5615  002312  0012               	return	
  5616  002314                     __end_of___awdiv:
  5617                           	opt stack 0
  5618                           tblptru	equ	0xFF8
  5619                           tblptrh	equ	0xFF7
  5620                           tblptrl	equ	0xFF6
  5621                           tablat	equ	0xFF5
  5622                           prodh	equ	0xFF4
  5623                           prodl	equ	0xFF3
  5624                           wreg	equ	0xFE8
  5625                           indf2	equ	0xFDF
  5626                           postinc2	equ	0xFDE
  5627                           postdec2	equ	0xFDD
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function ___ftmul *****************
  5633 ;; Defined at:
  5634 ;;		line 52 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftmul.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  f1              3   37[COMRAM] float 
  5637 ;;  f2              3   40[COMRAM] float 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  f3_as_produc    3   49[COMRAM] unsigned um
  5640 ;;  sign            1   53[COMRAM] unsigned char 
  5641 ;;  cntr            1   52[COMRAM] unsigned char 
  5642 ;;  exp             1   48[COMRAM] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  3   37[COMRAM] float 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5652 ;;      Params:         6       0       0       0       0       0       0       0       0
  5653 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5654 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5655 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5656 ;;Total ram usage:       17 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    1
  5659 ;; This function calls:
  5660 ;;		___ftpack
  5661 ;; This function is called by:
  5662 ;;		_main
  5663 ;;		_fround
  5664 ;;		_scale
  5665 ;;		_sprintf
  5666 ;;		___asftmul
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text26
  5671  001D5A                     __ptext26:
  5672                           	opt stack 0
  5673  001D5A                     ___ftmul:
  5674                           	opt stack 29
  5675                           
  5676                           ;incstack = 0
  5677                           ;incstack = 0
  5678  001D5A  0E0F               	movlw	15
  5679  001D5C  6E2C               	movwf	??___ftmul& (0+255),c
  5680  001D5E  C026  F02D         	movff	___ftmul@f1,??___ftmul+1
  5681  001D62  C027  F02E         	movff	___ftmul@f1+1,??___ftmul+2
  5682  001D66  C028  F02F         	movff	___ftmul@f1+2,??___ftmul+3
  5683  001D6A  282C               	incf	??___ftmul,w,c
  5684  001D6C  6E30               	movwf	(??___ftmul+4)& (0+255),c
  5685  001D6E  D004               	goto	u2280
  5686  001D70                     u2285:
  5687  001D70  90D8               	bcf	status,0,c
  5688  001D72  322F               	rrcf	??___ftmul+3,f,c
  5689  001D74  322E               	rrcf	??___ftmul+2,f,c
  5690  001D76  322D               	rrcf	??___ftmul+1,f,c
  5691  001D78                     u2280:
  5692  001D78  2E30               	decfsz	(??___ftmul+4)& (0+255),f,c
  5693  001D7A  D7FA               	goto	u2285
  5694  001D7C  502D               	movf	??___ftmul+1,w,c
  5695  001D7E  6E31               	movwf	___ftmul@exp,c
  5696  001D80  6631               	tstfsz	___ftmul@exp& (0+255),c
  5697  001D82  D001               	goto	l3673
  5698  001D84  D015               	goto	u2310
  5699  001D86                     l3673:
  5700  001D86  0E0F               	movlw	15
  5701  001D88  6E2C               	movwf	??___ftmul& (0+255),c
  5702  001D8A  C029  F02D         	movff	___ftmul@f2,??___ftmul+1
  5703  001D8E  C02A  F02E         	movff	___ftmul@f2+1,??___ftmul+2
  5704  001D92  C02B  F02F         	movff	___ftmul@f2+2,??___ftmul+3
  5705  001D96  282C               	incf	??___ftmul,w,c
  5706  001D98  6E30               	movwf	(??___ftmul+4)& (0+255),c
  5707  001D9A  D004               	goto	u2300
  5708  001D9C                     u2305:
  5709  001D9C  90D8               	bcf	status,0,c
  5710  001D9E  322F               	rrcf	??___ftmul+3,f,c
  5711  001DA0  322E               	rrcf	??___ftmul+2,f,c
  5712  001DA2  322D               	rrcf	??___ftmul+1,f,c
  5713  001DA4                     u2300:
  5714  001DA4  2E30               	decfsz	(??___ftmul+4)& (0+255),f,c
  5715  001DA6  D7FA               	goto	u2305
  5716  001DA8  502D               	movf	??___ftmul+1,w,c
  5717  001DAA  6E36               	movwf	___ftmul@sign,c
  5718  001DAC  6636               	tstfsz	___ftmul@sign& (0+255),c
  5719  001DAE  D007               	goto	l3679
  5720  001DB0                     u2310:
  5721  001DB0  0E00               	movlw	0
  5722  001DB2  6E26               	movwf	?___ftmul,c
  5723  001DB4  0E00               	movlw	0
  5724  001DB6  6E27               	movwf	?___ftmul+1,c
  5725  001DB8  0E00               	movlw	0
  5726  001DBA  6E28               	movwf	?___ftmul+2,c
  5727  001DBC  D055               	goto	l600
  5728  001DBE                     l3679:
  5729  001DBE  5036               	movf	___ftmul@sign,w,c
  5730  001DC0  0F7B               	addlw	123
  5731  001DC2  2631               	addwf	___ftmul@exp,f,c
  5732  001DC4  C028  F036         	movff	___ftmul@f1+2,___ftmul@sign
  5733  001DC8  502B               	movf	(___ftmul@f2+2)& (0+255),w,c
  5734  001DCA  1A36               	xorwf	___ftmul@sign,f,c
  5735  001DCC  0E80               	movlw	128
  5736  001DCE  1636               	andwf	___ftmul@sign,f,c
  5737  001DD0  8E27               	bsf	___ftmul@f1+1,7,c
  5738  001DD2  8E2A               	bsf	___ftmul@f2+1,7,c
  5739  001DD4  0EFF               	movlw	255
  5740  001DD6  1629               	andwf	___ftmul@f2,f,c
  5741  001DD8  0EFF               	movlw	255
  5742  001DDA  162A               	andwf	___ftmul@f2+1,f,c
  5743  001DDC  0E00               	movlw	0
  5744  001DDE  162B               	andwf	___ftmul@f2+2,f,c
  5745  001DE0  0E00               	movlw	0
  5746  001DE2  6E32               	movwf	___ftmul@f3_as_product,c
  5747  001DE4  0E00               	movlw	0
  5748  001DE6  6E33               	movwf	___ftmul@f3_as_product+1,c
  5749  001DE8  0E00               	movlw	0
  5750  001DEA  6E34               	movwf	___ftmul@f3_as_product+2,c
  5751  001DEC  6E2C               	movwf	??___ftmul& (0+255),c
  5752  001DEE  0E07               	movlw	7
  5753  001DF0  6E35               	movwf	___ftmul@cntr,c
  5754  001DF2  502C               	movf	??___ftmul& (0+255),w,c
  5755  001DF4                     l3693:
  5756  001DF4  A026               	btfss	___ftmul@f1,0,c
  5757  001DF6  D006               	goto	l3697
  5758  001DF8  5029               	movf	___ftmul@f2,w,c
  5759  001DFA  2632               	addwf	___ftmul@f3_as_product,f,c
  5760  001DFC  502A               	movf	___ftmul@f2+1,w,c
  5761  001DFE  2233               	addwfc	___ftmul@f3_as_product+1,f,c
  5762  001E00  502B               	movf	___ftmul@f2+2,w,c
  5763  001E02  2234               	addwfc	___ftmul@f3_as_product+2,f,c
  5764  001E04                     l3697:
  5765  001E04  90D8               	bcf	status,0,c
  5766  001E06  3228               	rrcf	___ftmul@f1+2,f,c
  5767  001E08  3227               	rrcf	___ftmul@f1+1,f,c
  5768  001E0A  3226               	rrcf	___ftmul@f1,f,c
  5769  001E0C  90D8               	bcf	status,0,c
  5770  001E0E  3629               	rlcf	___ftmul@f2,f,c
  5771  001E10  362A               	rlcf	___ftmul@f2+1,f,c
  5772  001E12  362B               	rlcf	___ftmul@f2+2,f,c
  5773  001E14  2E35               	decfsz	___ftmul@cntr,f,c
  5774  001E16  D7EE               	goto	l3693
  5775  001E18  6E2C               	movwf	??___ftmul& (0+255),c
  5776  001E1A  0E09               	movlw	9
  5777  001E1C  6E35               	movwf	___ftmul@cntr,c
  5778  001E1E  502C               	movf	??___ftmul& (0+255),w,c
  5779  001E20                     l3703:
  5780  001E20  A026               	btfss	___ftmul@f1,0,c
  5781  001E22  D006               	goto	l3707
  5782  001E24  5029               	movf	___ftmul@f2,w,c
  5783  001E26  2632               	addwf	___ftmul@f3_as_product,f,c
  5784  001E28  502A               	movf	___ftmul@f2+1,w,c
  5785  001E2A  2233               	addwfc	___ftmul@f3_as_product+1,f,c
  5786  001E2C  502B               	movf	___ftmul@f2+2,w,c
  5787  001E2E  2234               	addwfc	___ftmul@f3_as_product+2,f,c
  5788  001E30                     l3707:
  5789  001E30  90D8               	bcf	status,0,c
  5790  001E32  3228               	rrcf	___ftmul@f1+2,f,c
  5791  001E34  3227               	rrcf	___ftmul@f1+1,f,c
  5792  001E36  3226               	rrcf	___ftmul@f1,f,c
  5793  001E38  90D8               	bcf	status,0,c
  5794  001E3A  3234               	rrcf	___ftmul@f3_as_product+2,f,c
  5795  001E3C  3233               	rrcf	___ftmul@f3_as_product+1,f,c
  5796  001E3E  3232               	rrcf	___ftmul@f3_as_product,f,c
  5797  001E40  2E35               	decfsz	___ftmul@cntr,f,c
  5798  001E42  D7EE               	goto	l3703
  5799  001E44  C032  F001         	movff	___ftmul@f3_as_product,?___ftpack
  5800  001E48  C033  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  5801  001E4C  C034  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  5802  001E50  C031  F004         	movff	___ftmul@exp,?___ftpack+3
  5803  001E54  C036  F005         	movff	___ftmul@sign,?___ftpack+4
  5804  001E58  EC9E  F010         	call	___ftpack	;wreg free
  5805  001E5C  C003  F028         	movff	?___ftpack+2,?___ftmul+2
  5806  001E60  C002  F027         	movff	?___ftpack+1,?___ftmul+1
  5807  001E64  C001  F026         	movff	?___ftpack,?___ftmul
  5808  001E68                     l600:
  5809  001E68  0012               	return	
  5810  001E6A                     __end_of___ftmul:
  5811                           	opt stack 0
  5812                           tblptru	equ	0xFF8
  5813                           tblptrh	equ	0xFF7
  5814                           tblptrl	equ	0xFF6
  5815                           tablat	equ	0xFF5
  5816                           prodh	equ	0xFF4
  5817                           prodl	equ	0xFF3
  5818                           wreg	equ	0xFE8
  5819                           indf2	equ	0xFDF
  5820                           postinc2	equ	0xFDE
  5821                           postdec2	equ	0xFDD
  5822                           fsr2h	equ	0xFDA
  5823                           fsr2l	equ	0xFD9
  5824                           status	equ	0xFD8
  5825                           
  5826 ;; *************** function _fround *****************
  5827 ;; Defined at:
  5828 ;;		line 410 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\doprnt.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  prec            1   54[COMRAM] unsigned char 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  3   54[COMRAM] unsigned char 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5842 ;;      Params:         3       0       0       0       0       0       0       0       0
  5843 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5844 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5845 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5846 ;;Total ram usage:       15 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    2
  5849 ;; This function calls:
  5850 ;;		___ftmul
  5851 ;;		___awdiv
  5852 ;;		___awmod
  5853 ;;		___wmul
  5854 ;; This function is called by:
  5855 ;;		_sprintf
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text27
  5860  0017EC                     __ptext27:
  5861                           	opt stack 0
  5862  0017EC                     _fround:
  5863                           	opt stack 27
  5864                           
  5865                           ;doprnt.c: 413: if(prec>=110)
  5866                           
  5867                           ;incstack = 0
  5868                           ;incstack = 0
  5869  0017EC  0E6D               	movlw	109
  5870  0017EE  6437               	cpfsgt	fround@prec,c
  5871  0017F0  D0AB               	goto	l3585
  5872                           
  5873                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5874  0017F2  0E00               	movlw	0
  5875  0017F4  6E14               	movwf	?___wmul+3,c
  5876  0017F6  0E03               	movlw	3
  5877  0017F8  6E13               	movwf	?___wmul+2,c
  5878  0017FA  0E00               	movlw	0
  5879  0017FC  6E0B               	movwf	?___awdiv+3,c
  5880  0017FE  0E0A               	movlw	10
  5881  001800  6E0A               	movwf	?___awdiv+2,c
  5882  001802  0E00               	movlw	0
  5883  001804  6E04               	movwf	?___awmod+3,c
  5884  001806  0E64               	movlw	100
  5885  001808  6E03               	movwf	?___awmod+2,c
  5886  00180A  C037  F001         	movff	fround@prec,?___awmod
  5887  00180E  6A02               	clrf	?___awmod+1,c
  5888  001810  ECCD  F011         	call	___awmod	;wreg free
  5889  001814  C001  F008         	movff	?___awmod,?___awdiv
  5890  001818  C002  F009         	movff	?___awmod+1,?___awdiv+1
  5891  00181C  EC42  F011         	call	___awdiv	;wreg free
  5892  001820  0E09               	movlw	9
  5893  001822  2408               	addwf	?___awdiv,w,c
  5894  001824  6E11               	movwf	?___wmul,c
  5895  001826  0E00               	movlw	0
  5896  001828  2009               	addwfc	?___awdiv+1,w,c
  5897  00182A  6E12               	movwf	?___wmul+1,c
  5898  00182C  EC11  F013         	call	___wmul	;wreg free
  5899  001830  0E28               	movlw	low __npowers_
  5900  001832  2411               	addwf	?___wmul,w,c
  5901  001834  6EF6               	movwf	tblptrl,c
  5902  001836  0E08               	movlw	high __npowers_
  5903  001838  2012               	addwfc	?___wmul+1,w,c
  5904  00183A  6EF7               	movwf	tblptrh,c
  5905  00183C  0009               	tblrd		*+
  5906  00183E  CFF5 F03A          	movff	tablat,??_fround
  5907  001842  0009               	tblrd		*+
  5908  001844  CFF5 F03B          	movff	tablat,??_fround+1
  5909  001848  0009               	tblrd		*+
  5910  00184A  CFF5 F03C          	movff	tablat,??_fround+2
  5911  00184E  C03C  F02B         	movff	??_fround+2,?___ftmul+5
  5912  001852  C03B  F02A         	movff	??_fround+1,?___ftmul+4
  5913  001856  C03A  F029         	movff	??_fround,?___ftmul+3
  5914  00185A  0E00               	movlw	0
  5915  00185C  6E14               	movwf	?___wmul+3,c
  5916  00185E  0E03               	movlw	3
  5917  001860  6E13               	movwf	?___wmul+2,c
  5918  001862  0E00               	movlw	0
  5919  001864  6E0B               	movwf	?___awdiv+3,c
  5920  001866  0E64               	movlw	100
  5921  001868  6E0A               	movwf	?___awdiv+2,c
  5922  00186A  C037  F008         	movff	fround@prec,?___awdiv
  5923  00186E  6A09               	clrf	?___awdiv+1,c
  5924  001870  EC42  F011         	call	___awdiv	;wreg free
  5925  001874  0E12               	movlw	18
  5926  001876  2408               	addwf	?___awdiv,w,c
  5927  001878  6E11               	movwf	?___wmul,c
  5928  00187A  0E00               	movlw	0
  5929  00187C  2009               	addwfc	?___awdiv+1,w,c
  5930  00187E  6E12               	movwf	?___wmul+1,c
  5931  001880  EC11  F013         	call	___wmul	;wreg free
  5932  001884  0E28               	movlw	low __npowers_
  5933  001886  2411               	addwf	?___wmul,w,c
  5934  001888  6EF6               	movwf	tblptrl,c
  5935  00188A  0E08               	movlw	high __npowers_
  5936  00188C  2012               	addwfc	?___wmul+1,w,c
  5937  00188E  6EF7               	movwf	tblptrh,c
  5938  001890  0009               	tblrd		*+
  5939  001892  CFF5 F03D          	movff	tablat,??_fround+3
  5940  001896  0009               	tblrd		*+
  5941  001898  CFF5 F03E          	movff	tablat,??_fround+4
  5942  00189C  0009               	tblrd		*+
  5943  00189E  CFF5 F03F          	movff	tablat,??_fround+5
  5944  0018A2  C03F  F028         	movff	??_fround+5,?___ftmul+2
  5945  0018A6  C03E  F027         	movff	??_fround+4,?___ftmul+1
  5946  0018AA  C03D  F026         	movff	??_fround+3,?___ftmul
  5947  0018AE  ECAD  F00E         	call	___ftmul	;wreg free
  5948  0018B2  C028  F045         	movff	?___ftmul+2,_fround$806+2
  5949  0018B6  C027  F044         	movff	?___ftmul+1,_fround$806+1
  5950  0018BA  C026  F043         	movff	?___ftmul,_fround$806
  5951                           
  5952                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5953  0018BE  0E00               	movlw	0
  5954  0018C0  6E14               	movwf	?___wmul+3,c
  5955  0018C2  0E03               	movlw	3
  5956  0018C4  6E13               	movwf	?___wmul+2,c
  5957  0018C6  0E00               	movlw	0
  5958  0018C8  6E04               	movwf	?___awmod+3,c
  5959  0018CA  0E0A               	movlw	10
  5960  0018CC  6E03               	movwf	?___awmod+2,c
  5961  0018CE  C037  F001         	movff	fround@prec,?___awmod
  5962  0018D2  6A02               	clrf	?___awmod+1,c
  5963  0018D4  ECCD  F011         	call	___awmod	;wreg free
  5964  0018D8  C001  F011         	movff	?___awmod,?___wmul
  5965  0018DC  C002  F012         	movff	?___awmod+1,?___wmul+1
  5966  0018E0  EC11  F013         	call	___wmul	;wreg free
  5967  0018E4  0E28               	movlw	low __npowers_
  5968  0018E6  2411               	addwf	?___wmul,w,c
  5969  0018E8  6EF6               	movwf	tblptrl,c
  5970  0018EA  0E08               	movlw	high __npowers_
  5971  0018EC  2012               	addwfc	?___wmul+1,w,c
  5972  0018EE  6EF7               	movwf	tblptrh,c
  5973  0018F0  0009               	tblrd		*+
  5974  0018F2  CFF5 F03A          	movff	tablat,??_fround
  5975  0018F6  0009               	tblrd		*+
  5976  0018F8  CFF5 F03B          	movff	tablat,??_fround+1
  5977  0018FC  0009               	tblrd		*+
  5978  0018FE  CFF5 F03C          	movff	tablat,??_fround+2
  5979  001902  C03C  F02B         	movff	??_fround+2,?___ftmul+5
  5980  001906  C03B  F02A         	movff	??_fround+1,?___ftmul+4
  5981  00190A  C03A  F029         	movff	??_fround,?___ftmul+3
  5982  00190E  C043  F026         	movff	_fround$806,?___ftmul
  5983  001912  C044  F027         	movff	_fround$806+1,?___ftmul+1
  5984  001916  C045  F028         	movff	_fround$806+2,?___ftmul+2
  5985  00191A  ECAD  F00E         	call	___ftmul	;wreg free
  5986  00191E  C028  F042         	movff	?___ftmul+2,_fround$807+2
  5987  001922  C027  F041         	movff	?___ftmul+1,_fround$807+1
  5988  001926  C026  F040         	movff	?___ftmul,_fround$807
  5989                           
  5990                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5991  00192A  C040  F026         	movff	_fround$807,?___ftmul
  5992  00192E  C041  F027         	movff	_fround$807+1,?___ftmul+1
  5993  001932  C042  F028         	movff	_fround$807+2,?___ftmul+2
  5994  001936  0E00               	movlw	0
  5995  001938  6E29               	movwf	?___ftmul+3,c
  5996  00193A  0E00               	movlw	0
  5997  00193C  6E2A               	movwf	?___ftmul+4,c
  5998  00193E  0E3F               	movlw	63
  5999  001940  6E2B               	movwf	?___ftmul+5,c
  6000  001942  ECAD  F00E         	call	___ftmul	;wreg free
  6001  001946  D08B               	goto	L19
  6002  001948                     l3585:
  6003                           
  6004                           ;doprnt.c: 415: else if(prec > 10)
  6005  001948  0E0A               	movlw	10
  6006  00194A  6437               	cpfsgt	fround@prec,c
  6007  00194C  D069               	goto	l3593
  6008                           
  6009                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6010  00194E  0E00               	movlw	0
  6011  001950  6E14               	movwf	?___wmul+3,c
  6012  001952  0E03               	movlw	3
  6013  001954  6E13               	movwf	?___wmul+2,c
  6014  001956  0E00               	movlw	0
  6015  001958  6E04               	movwf	?___awmod+3,c
  6016  00195A  0E0A               	movlw	10
  6017  00195C  6E03               	movwf	?___awmod+2,c
  6018  00195E  C037  F001         	movff	fround@prec,?___awmod
  6019  001962  6A02               	clrf	?___awmod+1,c
  6020  001964  ECCD  F011         	call	___awmod	;wreg free
  6021  001968  C001  F011         	movff	?___awmod,?___wmul
  6022  00196C  C002  F012         	movff	?___awmod+1,?___wmul+1
  6023  001970  EC11  F013         	call	___wmul	;wreg free
  6024  001974  0E28               	movlw	low __npowers_
  6025  001976  2411               	addwf	?___wmul,w,c
  6026  001978  6EF6               	movwf	tblptrl,c
  6027  00197A  0E08               	movlw	high __npowers_
  6028  00197C  2012               	addwfc	?___wmul+1,w,c
  6029  00197E  6EF7               	movwf	tblptrh,c
  6030  001980  0009               	tblrd		*+
  6031  001982  CFF5 F03A          	movff	tablat,??_fround
  6032  001986  0009               	tblrd		*+
  6033  001988  CFF5 F03B          	movff	tablat,??_fround+1
  6034  00198C  0009               	tblrd		*+
  6035  00198E  CFF5 F03C          	movff	tablat,??_fround+2
  6036  001992  C03C  F02B         	movff	??_fround+2,?___ftmul+5
  6037  001996  C03B  F02A         	movff	??_fround+1,?___ftmul+4
  6038  00199A  C03A  F029         	movff	??_fround,?___ftmul+3
  6039  00199E  0E00               	movlw	0
  6040  0019A0  6E14               	movwf	?___wmul+3,c
  6041  0019A2  0E03               	movlw	3
  6042  0019A4  6E13               	movwf	?___wmul+2,c
  6043  0019A6  0E00               	movlw	0
  6044  0019A8  6E0B               	movwf	?___awdiv+3,c
  6045  0019AA  0E0A               	movlw	10
  6046  0019AC  6E0A               	movwf	?___awdiv+2,c
  6047  0019AE  C037  F008         	movff	fround@prec,?___awdiv
  6048  0019B2  6A09               	clrf	?___awdiv+1,c
  6049  0019B4  EC42  F011         	call	___awdiv	;wreg free
  6050  0019B8  0E09               	movlw	9
  6051  0019BA  2408               	addwf	?___awdiv,w,c
  6052  0019BC  6E11               	movwf	?___wmul,c
  6053  0019BE  0E00               	movlw	0
  6054  0019C0  2009               	addwfc	?___awdiv+1,w,c
  6055  0019C2  6E12               	movwf	?___wmul+1,c
  6056  0019C4  EC11  F013         	call	___wmul	;wreg free
  6057  0019C8  0E28               	movlw	low __npowers_
  6058  0019CA  2411               	addwf	?___wmul,w,c
  6059  0019CC  6EF6               	movwf	tblptrl,c
  6060  0019CE  0E08               	movlw	high __npowers_
  6061  0019D0  2012               	addwfc	?___wmul+1,w,c
  6062  0019D2  6EF7               	movwf	tblptrh,c
  6063  0019D4  0009               	tblrd		*+
  6064  0019D6  CFF5 F03D          	movff	tablat,??_fround+3
  6065  0019DA  0009               	tblrd		*+
  6066  0019DC  CFF5 F03E          	movff	tablat,??_fround+4
  6067  0019E0  0009               	tblrd		*+
  6068  0019E2  CFF5 F03F          	movff	tablat,??_fround+5
  6069  0019E6  C03F  F028         	movff	??_fround+5,?___ftmul+2
  6070  0019EA  C03E  F027         	movff	??_fround+4,?___ftmul+1
  6071  0019EE  C03D  F026         	movff	??_fround+3,?___ftmul
  6072  0019F2  ECAD  F00E         	call	___ftmul	;wreg free
  6073  0019F6  C028  F045         	movff	?___ftmul+2,_fround$806+2
  6074  0019FA  C027  F044         	movff	?___ftmul+1,_fround$806+1
  6075  0019FE  C026  F043         	movff	?___ftmul,_fround$806
  6076                           
  6077                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6078  001A02  C043  F026         	movff	_fround$806,?___ftmul
  6079  001A06  C044  F027         	movff	_fround$806+1,?___ftmul+1
  6080  001A0A  C045  F028         	movff	_fround$806+2,?___ftmul+2
  6081  001A0E  0E00               	movlw	0
  6082  001A10  6E29               	movwf	?___ftmul+3,c
  6083  001A12  0E00               	movlw	0
  6084  001A14  6E2A               	movwf	?___ftmul+4,c
  6085  001A16  0E3F               	movlw	63
  6086  001A18  6E2B               	movwf	?___ftmul+5,c
  6087  001A1A  ECAD  F00E         	call	___ftmul	;wreg free
  6088  001A1E  D01F               	goto	L19
  6089  001A20                     l3593:
  6090                           
  6091                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6092  001A20  5037               	movf	fround@prec,w,c
  6093  001A22  0D03               	mullw	3
  6094  001A24  0E28               	movlw	low __npowers_
  6095  001A26  24F3               	addwf	prodl,w,c
  6096  001A28  6EF6               	movwf	tblptrl,c
  6097  001A2A  0E08               	movlw	high __npowers_
  6098  001A2C  20F4               	addwfc	prodh,w,c
  6099  001A2E  6EF7               	movwf	tblptrh,c
  6100  001A30  0009               	tblrd		*+
  6101  001A32  CFF5 F03A          	movff	tablat,??_fround
  6102  001A36  0009               	tblrd		*+
  6103  001A38  CFF5 F03B          	movff	tablat,??_fround+1
  6104  001A3C  0009               	tblrd		*+
  6105  001A3E  CFF5 F03C          	movff	tablat,??_fround+2
  6106  001A42  C03C  F028         	movff	??_fround+2,?___ftmul+2
  6107  001A46  C03B  F027         	movff	??_fround+1,?___ftmul+1
  6108  001A4A  C03A  F026         	movff	??_fround,?___ftmul
  6109  001A4E  0E00               	movlw	0
  6110  001A50  6E29               	movwf	?___ftmul+3,c
  6111  001A52  0E00               	movlw	0
  6112  001A54  6E2A               	movwf	?___ftmul+4,c
  6113  001A56  0E3F               	movlw	63
  6114  001A58  6E2B               	movwf	?___ftmul+5,c
  6115  001A5A  ECAD  F00E         	call	___ftmul	;wreg free
  6116  001A5E                     L19:
  6117  001A5E  C028  F039         	movff	?___ftmul+2,?_fround+2
  6118  001A62  C027  F038         	movff	?___ftmul+1,?_fround+1
  6119  001A66  C026  F037         	movff	?___ftmul,?_fround
  6120  001A6A  0012               	return	
  6121  001A6C                     __end_of_fround:
  6122                           	opt stack 0
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           wreg	equ	0xFE8
  6130                           indf2	equ	0xFDF
  6131                           postinc2	equ	0xFDE
  6132                           postdec2	equ	0xFDD
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137 ;; *************** function _lcd_int *****************
  6138 ;; Defined at:
  6139 ;;		line 66 in file "main.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;		None               void
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6153 ;;      Params:         0       0       0       0       0       0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6155 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6156 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6157 ;;Total ram usage:        1 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    1
  6160 ;; This function calls:
  6161 ;;		_cmd
  6162 ;; This function is called by:
  6163 ;;		_main
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text28
  6168  002692                     __ptext28:
  6169                           	opt stack 0
  6170  002692                     _lcd_int:
  6171                           	opt stack 29
  6172                           
  6173                           ;main.c: 67: cmd(0x38);
  6174                           
  6175                           ;incstack = 0
  6176                           ;incstack = 0
  6177  002692  6E02               	movwf	??_lcd_int& (0+255),c
  6178  002694  0E38               	movlw	56
  6179  002696  6E01               	movwf	?_cmd,c
  6180  002698  5002               	movf	??_lcd_int& (0+255),w,c
  6181  00269A  EC78  F013         	call	_cmd	;wreg free
  6182                           
  6183                           ;main.c: 68: cmd(0x0c);
  6184  00269E  6E02               	movwf	??_lcd_int& (0+255),c
  6185  0026A0  0E0C               	movlw	12
  6186  0026A2  6E01               	movwf	?_cmd,c
  6187  0026A4  5002               	movf	??_lcd_int& (0+255),w,c
  6188  0026A6  EC78  F013         	call	_cmd	;wreg free
  6189                           
  6190                           ;main.c: 69: cmd(0x06);
  6191  0026AA  6E02               	movwf	??_lcd_int& (0+255),c
  6192  0026AC  0E06               	movlw	6
  6193  0026AE  6E01               	movwf	?_cmd,c
  6194  0026B0  5002               	movf	??_lcd_int& (0+255),w,c
  6195  0026B2  EC78  F013         	call	_cmd	;wreg free
  6196                           
  6197                           ;main.c: 70: cmd(0x80);
  6198  0026B6  6E02               	movwf	??_lcd_int& (0+255),c
  6199  0026B8  0E80               	movlw	128
  6200  0026BA  6E01               	movwf	?_cmd,c
  6201  0026BC  5002               	movf	??_lcd_int& (0+255),w,c
  6202  0026BE  EC78  F013         	call	_cmd	;wreg free
  6203  0026C2  0012               	return	
  6204  0026C4                     __end_of_lcd_int:
  6205                           	opt stack 0
  6206                           tblptru	equ	0xFF8
  6207                           tblptrh	equ	0xFF7
  6208                           tblptrl	equ	0xFF6
  6209                           tablat	equ	0xFF5
  6210                           prodh	equ	0xFF4
  6211                           prodl	equ	0xFF3
  6212                           wreg	equ	0xFE8
  6213                           indf2	equ	0xFDF
  6214                           postinc2	equ	0xFDE
  6215                           postdec2	equ	0xFDD
  6216                           fsr2h	equ	0xFDA
  6217                           fsr2l	equ	0xFD9
  6218                           status	equ	0xFD8
  6219                           
  6220 ;; *************** function _cmd *****************
  6221 ;; Defined at:
  6222 ;;		line 73 in file "main.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  a               1    0[COMRAM] unsigned char 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;		None               void
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6236 ;;      Params:         1       0       0       0       0       0       0       0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6239 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6240 ;;Total ram usage:        1 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_main
  6246 ;;		_lcd_int
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text29
  6251  0026F0                     __ptext29:
  6252                           	opt stack 0
  6253  0026F0                     _cmd:
  6254                           	opt stack 30
  6255                           
  6256                           ;main.c: 74: PORTD = a;
  6257                           
  6258                           ;incstack = 0
  6259                           ;incstack = 0
  6260  0026F0  C001  FF83         	movff	cmd@a,3971	;volatile
  6261                           
  6262                           ;main.c: 75: RC0 = 0;
  6263  0026F4  9082               	bcf	3970,0,c	;volatile
  6264                           
  6265                           ;main.c: 76: RC1 = 0;
  6266  0026F6  9282               	bcf	3970,1,c	;volatile
  6267                           
  6268                           ;main.c: 77: RC2 = 1;
  6269  0026F8  8482               	bsf	3970,2,c	;volatile
  6270                           
  6271                           ;main.c: 78: for (i = 0; i <= 1000; i++);
  6272  0026FA  0E00               	movlw	0
  6273  0026FC  6E5D               	movwf	_i+1,c
  6274  0026FE  0E00               	movlw	0
  6275  002700  6E5C               	movwf	_i,c
  6276  002702  505D               	movf	_i+1,w,c
  6277  002704  0A80               	xorlw	128
  6278  002706  0F7D               	addlw	-131
  6279  002708  0EE9               	movlw	233
  6280  00270A  B4D8               	btfsc	status,2,c
  6281  00270C  5C5C               	subwf	_i,w,c
  6282  00270E  B0D8               	btfsc	status,0,c
  6283  002710  D003               	goto	l83
  6284  002712  4A5C               	infsnz	_i,f,c
  6285  002714  2A5D               	incf	_i+1,f,c
  6286  002716  D7F5               	goto	L20
  6287  002718                     l83:
  6288                           
  6289                           ;main.c: 79: RC2 = 0;
  6290  002718  9482               	bcf	3970,2,c	;volatile
  6291  00271A  0012               	return	
  6292  00271C                     __end_of_cmd:
  6293                           	opt stack 0
  6294                           tblptru	equ	0xFF8
  6295                           tblptrh	equ	0xFF7
  6296                           tblptrl	equ	0xFF6
  6297                           tablat	equ	0xFF5
  6298                           prodh	equ	0xFF4
  6299                           prodl	equ	0xFF3
  6300                           wreg	equ	0xFE8
  6301                           indf2	equ	0xFDF
  6302                           postinc2	equ	0xFDE
  6303                           postdec2	equ	0xFDD
  6304                           fsr2h	equ	0xFDA
  6305                           fsr2l	equ	0xFD9
  6306                           status	equ	0xFD8
  6307                           
  6308 ;; *************** function _Init_AD *****************
  6309 ;; Defined at:
  6310 ;;		line 12 in file "main.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;		None
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;		None
  6315 ;; Return value:  Size  Location     Type
  6316 ;;		None               void
  6317 ;; Registers used:
  6318 ;;		wreg, status,2
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6324 ;;      Params:         0       0       0       0       0       0       0       0       0
  6325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6327 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6328 ;;Total ram usage:        0 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; This function calls:
  6331 ;;		Nothing
  6332 ;; This function is called by:
  6333 ;;		_main
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text30
  6338  0027A2                     __ptext30:
  6339                           	opt stack 0
  6340  0027A2                     _Init_AD:
  6341                           	opt stack 30
  6342                           
  6343                           ;main.c: 13: TRISA = 0xff;
  6344                           
  6345                           ;incstack = 0
  6346                           ;incstack = 0
  6347  0027A2  6892               	setf	3986,c	;volatile
  6348                           
  6349                           ;main.c: 14: ADCON1 = 0x0e;
  6350  0027A4  0E0E               	movlw	14
  6351  0027A6  6EC1               	movwf	4033,c	;volatile
  6352                           
  6353                           ;main.c: 15: ADCON2 = 0x92;
  6354  0027A8  0E92               	movlw	146
  6355  0027AA  6EC0               	movwf	4032,c	;volatile
  6356                           
  6357                           ;main.c: 16: ADRESH=0;
  6358  0027AC  0E00               	movlw	0
  6359  0027AE  6EC4               	movwf	4036,c	;volatile
  6360                           
  6361                           ;main.c: 17: ADRESL=0;
  6362  0027B0  0E00               	movlw	0
  6363  0027B2  6EC3               	movwf	4035,c	;volatile
  6364  0027B4  0012               	return	
  6365  0027B6                     __end_of_Init_AD:
  6366                           	opt stack 0
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodh	equ	0xFF4
  6372                           prodl	equ	0xFF3
  6373                           wreg	equ	0xFE8
  6374                           indf2	equ	0xFDF
  6375                           postinc2	equ	0xFDE
  6376                           postdec2	equ	0xFDD
  6377                           fsr2h	equ	0xFDA
  6378                           fsr2l	equ	0xFD9
  6379                           status	equ	0xFD8
  6380                           tblptru	equ	0xFF8
  6381                           tblptrh	equ	0xFF7
  6382                           tblptrl	equ	0xFF6
  6383                           tablat	equ	0xFF5
  6384                           prodh	equ	0xFF4
  6385                           prodl	equ	0xFF3
  6386                           wreg	equ	0xFE8
  6387                           indf2	equ	0xFDF
  6388                           postinc2	equ	0xFDE
  6389                           postdec2	equ	0xFDD
  6390                           fsr2h	equ	0xFDA
  6391                           fsr2l	equ	0xFD9
  6392                           status	equ	0xFD8
  6393                           
  6394                           	psect	rparam
  6395  0000                     tblptru	equ	0xFF8
  6396                           tblptrh	equ	0xFF7
  6397                           tblptrl	equ	0xFF6
  6398                           tablat	equ	0xFF5
  6399                           prodh	equ	0xFF4
  6400                           prodl	equ	0xFF3
  6401                           wreg	equ	0xFE8
  6402                           indf2	equ	0xFDF
  6403                           postinc2	equ	0xFDE
  6404                           postdec2	equ	0xFDD
  6405                           fsr2h	equ	0xFDA
  6406                           fsr2l	equ	0xFD9
  6407                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    118
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      93
    BANK0           160     41      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?___ftsub	float  size(2) Largest target is 0

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___asftsub	float  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?__tdiv_to_l_	unsigned long  size(2) Largest target is 0

    ?__div_to_l_	unsigned long  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 0

    ?___asftadd	float  size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 0

    ?_scale	float  size(2) Largest target is 0

    ?_fround	float  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awmod	int  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK0[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> main@mystr(BANK0[10]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S195$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    show@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@mystr(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    ___awtoft->___ftpack
    ___ftdiv->___ftmul
    _show->_dat
    _sprintf->___asftadd
    ___lltoft->___ftpack
    ___fttol->___wmul
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___asftadd->_fround
    ___ftadd->___ftpack
    _scale->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___ftmul->___fttol
    _fround->___ftmul
    _lcd_int->_cmd

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   12582
                                             87 COMRAM     4     4      0
                                             31 BANK0     10    10      0
                            _Init_AD
                            _lcd_int
                                _cmd
                            _sprintf
                               _show
                            ___ftdiv
                            ___ftmul
                           ___awtoft
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             5     2      3     300
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             17    11      6     489
                                             54 COMRAM    17    11      6
                           ___ftpack
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     0      2      67
                                              1 COMRAM     2     0      2
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  1     0      1      22
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    43      7   10947
                                             74 COMRAM    13     6      7
                                              0 BANK0     31    31      0
                             _fround
                              _scale
                            _isdigit
                        __tdiv_to_l_
                         __div_to_l_
                          ___asftadd
                          ___asftmul
                            ___ftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     159
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4     278
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     159
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     162
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     252
                                             22 COMRAM    15    11      4
                           ___ftpack (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      45
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     136
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___asftsub                                            5     0      5    1160
                                             28 COMRAM     5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    1094
                                             22 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5     601
                                             54 COMRAM     5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___asftadd                                            5     0      5    1115
                                             69 COMRAM     5     0      5
                             _fround (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             14     8      6    1049
                                              8 COMRAM    14     8      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5     209
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          13     7      6     446
                                              0 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17    11      6     303
                                              0 COMRAM    17    11      6
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     2      1      68
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _scale                                               15    12      3    1779
                                             54 COMRAM    12     9      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     159
                                             16 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     296
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     300
                                              7 COMRAM     9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             17    11      6     535
                                             37 COMRAM    17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              18    15      3    1372
                                             54 COMRAM    15    12      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_int                                              1     1      0      22
                                              1 COMRAM     1     1      0
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  1     0      1      22
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _Init_AD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_AD
   _lcd_int
     _cmd
   _cmd
   _sprintf
     _fround
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     __tdiv_to_l_
     __div_to_l_
     ___asftadd
       _fround (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
     ___asftmul
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___asftsub
       ___ftsub
         ___ftadd
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___awdiv
       ___awmod (ARG)
     ___ftge
     ___ftneg
     ___fttol
       ___ftpack (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___lwmod
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _show
     _dat
   ___ftdiv
     ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftmul
     ___ftpack
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___awtoft
     ___ftpack
   ___ftge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      2C       5       27.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5D       1       97.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       5       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89      20        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Sat Jun 04 20:36:37 2022

           ___asftadd@f2 0048                        _i 005C            ___asftadd@f1p 0046  
                     l55 1548                       l83 2718                       l88 26EC  
                     _GO 007E11             ___awdiv@sign 000E      ___wmul@multiplicand 0013  
           ___asftmul@f2 0039             ___asftsub@f2 001F             ___ftadd@exp1 0016  
           ___ftadd@exp2 0015             ___ftadd@sign 0014                      l122 14EE  
                    l173 0E32                      l600 1E68                      l610 275A  
                    l460 1FC6                      l540 1AFE                      l620 213A  
                    l551 1BA2                      l560 1BBE                      l536 1AD4  
                    l537 1C36                      l458 205A                      l570 1F10  
                    l467 204A                      l571 1F36                      l743 2520  
                    l576 1D58                      l664 2388                      l568 1F66  
                    l585 1D48                      l594 2282                      l674 246E  
                    l579 1CF6                      l499 21F2                      _RC0 007C10  
                    _RC1 007C11                      _RC2 007C12                      _dat 26C4  
                    _cmd 26F0             ___awmod@sign 0007                      wreg 000FE8  
          ___asftmul@f1p 0037              _sprintf$206 0063              _sprintf$809 0060  
          ___asftsub@f1p 001D             ___ftdiv@cntr 0042             ___ftdiv@sign 0047  
                   ?_dat 0001                     ?_cmd 0001                     l4011 0B4A  
                   l3303 2784                     l4111 0F96                     l4023 0BDA  
                   l4015 0B82                     l4007 0B22                     l3313 1C64  
                   l4201 177E                     l4027 0C00                     l4211 17E6  
                   l3333 1CCE                     l3405 2012                     l4133 104A  
                   l4125 0FE2                     l4117 0FB0                     l4109 0F86  
                   l4045 0CD6                     l4141 1092                     l3319 1C90  
                   l3415 203A                     l3431 2182                     l3423 214C  
                   l3503 2280                     l4039 0C78                     l4119 0FBE  
                   l4207 17C2                     l3361 1D44                     l3353 1D20  
                   l3417 2046                     l3409 2022                     l3521 234A  
                   l4129 100E                     l4081 0DFC                     l4065 0D58  
                   l4073 0DD2                     l3435 2198                     l3427 215A  
                   l3611 1B0C                     l4075 0DE2                     l4059 0D30  
                   l4139 1076                     l4171 162A                     l4155 1506  
                   l3461 23B6                     l3349 1D10                     l3437 21B6  
                   l3429 2164                     l3605 1AE2                     l3517 233A  
                   l3541 243C                     l3703 1E20                     l3471 23DC  
                   l3359 1D38                     l3375 1F80                     l3439 21C0  
                   l3519 2346                     l4095 0E6A                     l4087 0E36  
                   l4183 16B2                     l3473 23E0                     l3481 23FE  
                   l3465 23C2                     l3369 1F74                     l3633 1B5C  
                   l3529 237A                     l3545 2460                     l3537 242C  
                   l3561 2516                     l3553 24F6                     l4177 166E  
                   l3707 1E30                     l3723 22A0                     l3395 1FF6  
                   l3635 1B66                     l3627 1B3E                     l3539 2438  
                   l3555 24FE                     l4099 0EBC                     l4195 173A  
                   l3485 240C                     l3477 23F4                     l3469 23D4  
                   l3653 1BDA                     l3645 1B92                     l3637 1B6E  
                   l3493 2224                     l3557 2502                     l3573 2732  
                   l4189 16F6                     l3735 22CA                     l3751 22FC  
                   l3663 1C12                     l3647 1B9C                     l3639 1B74  
                   l3593 1A20                     l3585 1948                     l3673 1D86  
                   l3737 22D2                     l3729 22B0                     l3497 2254  
                   l3913 20DC                     l3569 271E                     l3755 230A  
                   l3747 22F2                     l3739 22D6                     l3931 212A  
                   l3923 2104                     l3693 1DF4                     l3925 2110  
                   l3917 20EC                     l3773 248A                     l3679 1DBE  
                   l3863 12A6                     l3927 2114                     l3775 2496  
                   l3951 08E2                     l3943 08A8                     l3791 1E96  
                   l3767 2546                     l3697 1E04                     l3881 14C0  
                   l3857 11EA                     l3961 094C                     l3937 088C  
                   l3875 13F8                     l3867 12B4                     l3955 091E  
                   l3973 099C                     l3965 0954                     l3957 0936  
                   l3797 1ECE                     l3895 2088                     l3983 0A06  
                   l3967 097A                     l3999 0AC0                     _ADON 007E10  
                   STR_1 0876                     u2300 1DA4                     u2310 1DB0  
                   u2070 1A8A                     _LATB 000F8A                     u2080 1AB0  
                   u2305 1D9C                     u2075 1A82                     u1620 1C56  
                   u2420 1E88                     u2085 1AA8                     u2280 1D78  
                   u1640 1C82                     u2520 207A                     u2440 1EB4  
                   u1625 1C4E                     u2425 1E80                     u2450 1EC0  
                   u2540 20A6                     u2285 1D70                     u1645 1C7A  
                   u2525 2072                     u2445 1EAC                     u1760 2028  
                   u2545 209E                     u1690 1D26                     u2570 20F2  
                   u2670 0A56                     u2655 09DE                     u2675 0A4C  
                   u2934 1526                     u2935 1522                     u2944 153E  
                   u2945 153A                     dat@b 0001                     cmd@a 0001  
                   _main 14F0             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   _show 271C                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___ftmul@cntr 0035             ___ftmul@sign 0036  
        __end_of_Init_AD 27B6             ___fttol@exp1 0025                    ??_dat 0002  
                  ??_cmd 0002             ___fttol@lval 0021                    ?_main 0001  
        __end_of___awdiv 2314          __end_of___ftadd 1C38          __end_of___awmod 2416  
                  ?_show 0002          __end_of___ftdiv 1F68          __end_of___ftneg 2768  
        __end_of___lldiv 239A          __end_of___ftmul 1E6A          ___awdiv@divisor 000A  
        __end_of___llmod 2480          __end_of___ftsub 2692          __end_of___fttol 213C  
        __end_of___lwmod 252A          ___awdiv@counter 000D                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95             ___lltoft@exp 0011          __end_of_lcd_int 26C4  
          ___awtoft@sign 000D          __end_of_dpowers 0828                    _scale 10A0  
        __end_of_isdigit 278C            ___ftpack@sign 0005                    tablat 000FF5  
                  show@s 0002                    status 000FD8          __end_of_sprintf 10A0  
        __initialization 278C             __end_of_main 17EC             __end_of_show 2742  
                 ??_main 0058            ___fttol@sign1 0020                   ??_show 0004  
          __activetblptr 000002     __size_of__tdiv_to_l_ 0122                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0         ___llmod@dividend 0001  
                 ?_scale 0037                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0008         __end_of___awtoft 256E         __end_of___ftpack 21F4  
       __end_of___lltoft 24E4                   _TRISA0 007C90                ??_Init_AD 0001  
       __end_of__powers_ 0876                   ___ftge 21F4                   ___wmul 2622  
              ??___awdiv 000C                ??___ftadd 000F                ??___awmod 0005  
              ??___ftdiv 003D                ??___ftneg 0004                ??___lldiv 0009  
              ??___ftmul 002C                ??___llmod 0009                ??___ftsub 001D  
              ??___fttol 001B                ??___lwmod 0005                   _fround 17EC  
       ___awdiv@quotient 000F          ___awmod@divisor 0003          ___awmod@counter 0006  
              ??_lcd_int 0002    ___ftmul@f3_as_product 0032                ??_isdigit 0002  
         _analog_reading 0089             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_sprintf 0052  
     __size_of___asftadd 003C       __size_of___asftmul 003C       __size_of___asftsub 003C  
             __accesstop 0060  __end_of__initialization 2798               ___ftadd@f1 0009  
             ___ftadd@f2 000C               ___ftge@ff1 0001               ___ftge@ff2 0004  
             ___ftdiv@f1 0037               ___ftdiv@f2 003A               ___ftdiv@f3 0043  
             ___ftneg@f1 0001               ___awtoft@c 0009               ___ftmul@f1 0026  
             ___ftmul@f2 0029               ___ftsub@f1 0017               ___ftsub@f2 001A  
             ___fttol@f1 0017           __pcstackCOMRAM 0001               ___lltoft@c 0009  
          __end_of_scale 14F0               __div_to_l_ 1F68          __div_to_l_@exp1 000D  
        __div_to_l_@cntr 000C             sprintf@integ 0074                  ??_scale 003A  
        __div_to_l_@quot 0008               __pbssBANK0 0089            __div_to_l_@f1 0001  
          __div_to_l_@f2 0004                  ?___ftge 0001                  ?___wmul 0011  
      __end_of___asftadd 2622                  ?_fround 0037        __end_of___asftmul 25E6  
      __end_of___asftsub 25AA                ?___awtoft 0009                ?___ftpack 0001  
              ?___lltoft 0009                  _Init_AD 27A2        __end_of__npowers_ 084F  
                __Hparam 0000                  __Lparam 0000          __size_of___ftge 0090  
                ___awdiv 2284                  ___ftadd 1A6C                  ___awmod 239A  
                ___ftdiv 1E6A                  ___ftneg 2742                  ___lldiv 2314  
        __size_of___wmul 003A                  ___ftmul 1D5A                  ___llmod 2416  
                ___ftsub 265C                  ___fttol 205C               _fround$806 0043  
             _fround$807 0040                  ___lwmod 24E4             __psmallconst 0800  
                __pcinit 278C               ??___awtoft 000C               ??___ftpack 0006  
        __size_of_fround 0280                  __ramtop 0800               ??___lltoft 000D  
                __ptext0 14F0                  __ptext1 252A                  __ptext2 1E6A  
                __ptext3 271C                  __ptext4 26C4                  __ptext5 087C  
                __ptext6 24E4                  __ptext7 2480                  __ptext8 2416  
                __ptext9 2314                  _lcd_int 2692              ?__div_to_l_ 0001  
                _dpowers 0800             __size_of_dat 002C             __size_of_cmd 002C  
                _isdigit 2768         ___awmod@dividend 0001                  _sprintf 087C  
   end_of_initialization 2798            __Lmediumconst 0000          ___lldiv@divisor 0005  
        ___lldiv@counter 000E                  postdec2 000FDD                  postinc2 000FDE  
         __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0004            ??__tdiv_to_l_ 0007  
            ___ftdiv@exp 0046      __size_of__div_to_l_ 00F4              ___ftmul@exp 0031  
         __end_of___ftge 2284           __end_of___wmul 265C           __end_of_fround 1A6C  
    start_initialization 278C      __end_of__tdiv_to_l_ 1D5A              __end_of_dat 26F0  
            __end_of_cmd 271C          ___llmod@divisor 0005          ___llmod@counter 000A  
               ??___ftge 0007                 ??___wmul 0015            sprintf@vd_208 006B  
               ??_fround 003A               fround@prec 0037        __size_of___awtoft 0044  
      __size_of___ftpack 00B8                ___asftadd 25E6                ___asftmul 25AA  
              ___asftsub 256E        __size_of___lltoft 0064              __pbssCOMRAM 005C  
          __pcstackBANK0 0060      __end_of__stringdata 087B              sprintf@_val 006F  
            sprintf@flag 006D              sprintf@fval 007B              sprintf@prec 0079  
               ?_Init_AD 0001                 ?___awdiv 0008                 ?___ftadd 0009  
               ?___awmod 0001                 ?___ftdiv 0037                 ?___ftneg 0001  
               ?___lldiv 0001                 ?___ftmul 0026                 ?___llmod 0001  
               ?___ftsub 0017                __npowers_ 0828                 ?___fttol 0017  
               ?___lwmod 0001              __tdiv_to_l_ 1C38                 ?_lcd_int 0001  
           ??__div_to_l_ 0007              __smallconst 0800               ?___asftadd 0046  
               ?_isdigit 0001               ?___asftmul 0037               ?___asftsub 001D  
              _scale$808 0040                 ?_sprintf 004B           __size_of_scale 0450  
         ___wmul@product 0015       __end_of__div_to_l_ 205C               _ADCON0bits 000FC2  
            __stringdata 0876        ___wmul@multiplier 0011                main@mystr 007F  
       __size_of_Init_AD 0014                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 0090         __size_of___ftadd 01CC         __size_of___awmod 007C  
       __size_of___ftdiv 00FE         __size_of___ftneg 0026         __size_of___lldiv 0086  
       __size_of___ftmul 0110         __size_of___llmod 006A         __size_of___ftsub 0036  
       __size_of___fttol 00E0         __size_of___lwmod 0046                 ___awtoft 252A  
               ___ftpack 213C                 ___lltoft 2480              _isdigit$481 0003  
            ??___asftadd 004B         __size_of_lcd_int 0032               sprintf@exp 0077  
            ??___asftmul 003C              ??___asftsub 0022         __size_of_isdigit 0024  
               __ptext10 205C                 __ptext11 2742                 __ptext20 1C38  
               __ptext12 21F4                 __ptext21 2768                 __ptext13 256E  
               __ptext30 27A2                 __ptext22 10A0                 __ptext14 265C  
               __ptext23 2622                 __ptext15 25AA                 __ptext24 239A  
               __ptext16 25E6                 __ptext25 2284                 __ptext17 1A6C  
               __ptext26 1D5A                 __ptext18 213C                 __ptext27 17EC  
               __ptext19 1F68                 __ptext28 2692                 __ptext29 26F0  
               __powers_ 084F         __size_of_sprintf 0824            __size_of_main 02FC  
          __size_of_show 0026                 isdigit@c 0001                 scale@scl 0037  
              sprintf@ap 0067         __tdiv_to_l_@exp1 0011                sprintf@vd 0069  
              sprintf@sp 004B         __tdiv_to_l_@cntr 0010         __tdiv_to_l_@quot 000C  
       ___lwmod@dividend 0001         ___lldiv@dividend 0001             ?__tdiv_to_l_ 0001  
               sprintf@c 007E                 sprintf@f 004D         ___lldiv@quotient 000A  
        ___lwmod@divisor 0003          ___lwmod@counter 0006  
