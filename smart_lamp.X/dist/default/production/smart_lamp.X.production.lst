

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Wed Jun 01 22:00:52 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	smallconst
    45  000800                     __psmallconst:
    46                           	opt stack 0
    47  000800                     _dpowers:
    48                           	opt stack 0
    49  000800  0001               	dw	1
    50  000802  0000               	dw	0
    51  000804  000A               	dw	10
    52  000806  0000               	dw	0
    53  000808  0064               	dw	100
    54  00080A  0000               	dw	0
    55  00080C  03E8               	dw	1000
    56  00080E  0000               	dw	0
    57  000810  2710               	dw	10000
    58  000812  0000               	dw	0
    59  000814  86A0               	dw	34464
    60  000816  0001               	dw	1
    61  000818  4240               	dw	16960
    62  00081A  000F               	dw	15
    63  00081C  9680               	dw	38528
    64  00081E  0098               	dw	152
    65  000820  E100               	dw	57600
    66  000822  05F5               	dw	1525
    67  000824  CA00               	dw	51712
    68  000826  3B9A               	dw	15258
    69  000828                     __end_of_dpowers:
    70                           	opt stack 0
    71  000828                     __npowers_:
    72                           	opt stack 0
    73  000828  00                 	db	0
    74  000829  80                 	db	128
    75  00082A  3F                 	db	63
    76  00082B  CD                 	db	205
    77  00082C  CC                 	db	204
    78  00082D  3D                 	db	61
    79  00082E  D7                 	db	215
    80  00082F  23                 	db	35
    81  000830  3C                 	db	60
    82  000831  12                 	db	18
    83  000832  83                 	db	131
    84  000833  3A                 	db	58
    85  000834  B7                 	db	183
    86  000835  D1                 	db	209
    87  000836  38                 	db	56
    88  000837  C6                 	db	198
    89  000838  27                 	db	39
    90  000839  37                 	db	55
    91  00083A  38                 	db	56
    92  00083B  86                 	db	134
    93  00083C  35                 	db	53
    94  00083D  C0                 	db	192
    95  00083E  D6                 	db	214
    96  00083F  33                 	db	51
    97  000840  CC                 	db	204
    98  000841  2B                 	db	43
    99  000842  32                 	db	50
   100  000843  70                 	db	112
   101  000844  89                 	db	137
   102  000845  30                 	db	48
   103  000846  E7                 	db	231
   104  000847  DB                 	db	219
   105  000848  2E                 	db	46
   106  000849  E5                 	db	229
   107  00084A  3C                 	db	60
   108  00084B  1E                 	db	30
   109  00084C  42                 	db	66
   110  00084D  A2                 	db	162
   111  00084E  0D                 	db	13
   112  00084F                     __end_of__npowers_:
   113                           	opt stack 0
   114  00084F                     __powers_:
   115                           	opt stack 0
   116  00084F  00                 	db	0
   117  000850  80                 	db	128
   118  000851  3F                 	db	63
   119  000852  00                 	db	0
   120  000853  20                 	db	32
   121  000854  41                 	db	65
   122  000855  00                 	db	0
   123  000856  C8                 	db	200
   124  000857  42                 	db	66
   125  000858  00                 	db	0
   126  000859  7A                 	db	122
   127  00085A  44                 	db	68
   128  00085B  40                 	db	64
   129  00085C  1C                 	db	28
   130  00085D  46                 	db	70
   131  00085E  50                 	db	80
   132  00085F  C3                 	db	195
   133  000860  47                 	db	71
   134  000861  24                 	db	36
   135  000862  74                 	db	116
   136  000863  49                 	db	73
   137  000864  97                 	db	151
   138  000865  18                 	db	24
   139  000866  4B                 	db	75
   140  000867  BC                 	db	188
   141  000868  BE                 	db	190
   142  000869  4C                 	db	76
   143  00086A  6B                 	db	107
   144  00086B  6E                 	db	110
   145  00086C  4E                 	db	78
   146  00086D  03                 	db	3
   147  00086E  15                 	db	21
   148  00086F  50                 	db	80
   149  000870  79                 	db	121
   150  000871  AD                 	db	173
   151  000872  60                 	db	96
   152  000873  F3                 	db	243
   153  000874  49                 	db	73
   154  000875  71                 	db	113
   155  000876                     __end_of__powers_:
   156                           	opt stack 0
   157  0000                     _ADCON0	set	4034
   158  0000                     _ADCON0bits	set	4034
   159  0000                     _ADCON1	set	4033
   160  0000                     _ADCON2	set	4032
   161  0000                     _ADRESH	set	4036
   162  0000                     _ADRESL	set	4035
   163  0000                     _LATB	set	3978
   164  0000                     _PORTD	set	3971
   165  0000                     _TRISB	set	3987
   166  0000                     _TRISC	set	3988
   167  0000                     _TRISD	set	3989
   168  0000                     _ADON	set	32272
   169  0000                     _GO	set	32273
   170  0000                     _GO_nDONE	set	32273
   171  0000                     _RC0	set	31760
   172  0000                     _RC1	set	31761
   173  0000                     _RC2	set	31762
   174  0000                     _TRISA0	set	31888
   175  000876                     __stringdata:
   176                           	opt stack 0
   177  000876                     STR_1:
   178                           
   179                           ; BSR set to: 0
   180  000876  25                 	db	37
   181  000877  66                 	db	102	;'f'
   182  000878  00                 	db	0
   183  000879                     __end_of__stringdata:
   184                           	opt stack 0
   185  000879  00                 	db	0	; dummy byte at the end
   186  0000                     
   187                           ; #config settings
   188                           
   189                           	psect	cinit
   190  00264C                     __pcinit:
   191                           	opt stack 0
   192  00264C                     start_initialization:
   193                           	opt stack 0
   194  00264C                     __initialization:
   195                           	opt stack 0
   196                           
   197                           ; Clear objects allocated to BANK0 (3 bytes)
   198  00264C  0100               	movlb	0
   199  00264E  6B8B               	clrf	(__pbssBANK0+2)& (0+255),b
   200  002650  6B8A               	clrf	(__pbssBANK0+1)& (0+255),b
   201  002652  6B89               	clrf	__pbssBANK0& (0+255),b
   202                           
   203                           ; Clear objects allocated to COMRAM (2 bytes)
   204  002654  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   205  002656  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   206  002658                     end_of_initialization:
   207                           	opt stack 0
   208  002658                     __end_of__initialization:
   209                           	opt stack 0
   210  002658  0E00               	movlw	low (__Lmediumconst shr (0+16))
   211  00265A  6EF8               	movwf	tblptru,c
   212  00265C  0100               	movlb	0
   213  00265E  EFE2  F009         	goto	_main	;jump to C main() function
   214                           tblptru	equ	0xFF8
   215                           
   216                           	psect	bssCOMRAM
   217  00005C                     __pbssCOMRAM:
   218                           	opt stack 0
   219  00005C                     _i:
   220                           	opt stack 0
   221  00005C                     	ds	2
   222                           tblptru	equ	0xFF8
   223                           
   224                           	psect	bssBANK0
   225  000089                     __pbssBANK0:
   226                           	opt stack 0
   227  000089                     _analog_reading:
   228                           	opt stack 0
   229  000089                     	ds	3
   230                           tblptru	equ	0xFF8
   231                           
   232                           	psect	cstackBANK0
   233  000060                     __pcstackBANK0:
   234                           	opt stack 0
   235  000060                     _sprintf$808:
   236                           	opt stack 0
   237                           
   238                           ; 3 bytes @ 0x0
   239  000060                     	ds	3
   240  000063                     _sprintf$204:
   241                           	opt stack 0
   242                           
   243                           ; 4 bytes @ 0x3
   244  000063                     	ds	4
   245  000067                     sprintf@ap:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x7
   249  000067                     	ds	2
   250  000069                     sprintf@vd:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x9
   254  000069                     	ds	2
   255  00006B                     sprintf@vd_206:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0xB
   259  00006B                     	ds	2
   260  00006D                     sprintf@flag:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0xD
   264  00006D                     	ds	2
   265  00006F                     sprintf@prec:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0xF
   269  00006F                     	ds	2
   270  000071                     sprintf@_val:
   271                           	opt stack 0
   272                           
   273                           ; 5 bytes @ 0x11
   274  000071                     	ds	5
   275  000076                     sprintf@integ:
   276                           	opt stack 0
   277                           
   278                           ; 3 bytes @ 0x16
   279  000076                     	ds	3
   280  000079                     sprintf@exp:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x19
   284  000079                     	ds	2
   285  00007B                     sprintf@c:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0x1B
   289  00007B                     	ds	1
   290  00007C                     sprintf@fval:
   291                           	opt stack 0
   292                           
   293                           ; 3 bytes @ 0x1C
   294  00007C                     	ds	3
   295  00007F                     main@mystr:
   296                           	opt stack 0
   297                           
   298                           ; 10 bytes @ 0x1F
   299  00007F                     	ds	10
   300                           tblptru	equ	0xFF8
   301                           
   302                           	psect	cstackCOMRAM
   303  000001                     __pcstackCOMRAM:
   304                           	opt stack 0
   305  000001                     ?_cmd:
   306                           	opt stack 0
   307  000001                     ?_dat:
   308                           	opt stack 0
   309  000001                     ?___ftge:
   310                           	opt stack 0
   311  000001                     ?___awmod:
   312                           	opt stack 0
   313  000001                     ?___lwmod:
   314                           	opt stack 0
   315  000001                     ?___ftpack:
   316                           	opt stack 0
   317  000001                     ?__tdiv_to_l_:
   318                           	opt stack 0
   319  000001                     ?__div_to_l_:
   320                           	opt stack 0
   321  000001                     ?___lldiv:
   322                           	opt stack 0
   323  000001                     ?___llmod:
   324                           	opt stack 0
   325  000001                     cmd@a:
   326                           	opt stack 0
   327  000001                     dat@b:
   328                           	opt stack 0
   329  000001                     ___awmod@dividend:
   330                           	opt stack 0
   331  000001                     ___lwmod@dividend:
   332                           	opt stack 0
   333  000001                     __div_to_l_@f1:
   334                           	opt stack 0
   335  000001                     ___ftpack@arg:
   336                           	opt stack 0
   337  000001                     __tdiv_to_l_@f1:
   338                           	opt stack 0
   339  000001                     ___ftge@ff1:
   340                           	opt stack 0
   341  000001                     ___lldiv@dividend:
   342                           	opt stack 0
   343  000001                     ___llmod@dividend:
   344                           	opt stack 0
   345                           
   346                           ; 4 bytes @ 0x0
   347  000001                     	ds	1
   348  000002                     ??_lcd_int:
   349  000002                     ?_show:
   350                           	opt stack 0
   351  000002                     show@s:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x1
   355  000002                     	ds	1
   356  000003                     ___awmod@divisor:
   357                           	opt stack 0
   358  000003                     ___lwmod@divisor:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x2
   362  000003                     	ds	1
   363  000004                     ___ftpack@exp:
   364                           	opt stack 0
   365  000004                     __div_to_l_@f2:
   366                           	opt stack 0
   367  000004                     __tdiv_to_l_@f2:
   368                           	opt stack 0
   369  000004                     ___ftge@ff2:
   370                           	opt stack 0
   371                           
   372                           ; 3 bytes @ 0x3
   373  000004                     	ds	1
   374  000005                     ??___awmod:
   375  000005                     ??___lwmod:
   376  000005                     ___ftpack@sign:
   377                           	opt stack 0
   378  000005                     ___lldiv@divisor:
   379                           	opt stack 0
   380  000005                     ___llmod@divisor:
   381                           	opt stack 0
   382                           
   383                           ; 4 bytes @ 0x4
   384  000005                     	ds	1
   385  000006                     ??___ftpack:
   386  000006                     ___awmod@counter:
   387                           	opt stack 0
   388  000006                     ___lwmod@counter:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x5
   392  000006                     	ds	1
   393  000007                     ??__tdiv_to_l_:
   394  000007                     ??__div_to_l_:
   395  000007                     ??___ftge:
   396  000007                     ___awmod@sign:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x6
   400  000007                     	ds	1
   401  000008                     ?___awdiv:
   402                           	opt stack 0
   403  000008                     ___awdiv@dividend:
   404                           	opt stack 0
   405  000008                     __div_to_l_@quot:
   406                           	opt stack 0
   407                           
   408                           ; 4 bytes @ 0x7
   409  000008                     	ds	1
   410  000009                     ??___lldiv:
   411  000009                     ??___llmod:
   412  000009                     ?___awtoft:
   413                           	opt stack 0
   414  000009                     ?___ftneg:
   415                           	opt stack 0
   416  000009                     ?___lltoft:
   417                           	opt stack 0
   418  000009                     ___awtoft@c:
   419                           	opt stack 0
   420  000009                     ___ftneg@f1:
   421                           	opt stack 0
   422  000009                     ___lltoft@c:
   423                           	opt stack 0
   424                           
   425                           ; 4 bytes @ 0x8
   426  000009                     	ds	1
   427  00000A                     ___llmod@counter:
   428                           	opt stack 0
   429  00000A                     ___awdiv@divisor:
   430                           	opt stack 0
   431  00000A                     ___lldiv@quotient:
   432                           	opt stack 0
   433                           
   434                           ; 4 bytes @ 0x9
   435  00000A                     	ds	2
   436  00000C                     ??___awdiv:
   437  00000C                     ??___awtoft:
   438  00000C                     ?___ftdiv:
   439                           	opt stack 0
   440  00000C                     __div_to_l_@cntr:
   441                           	opt stack 0
   442  00000C                     ___ftdiv@f1:
   443                           	opt stack 0
   444  00000C                     __tdiv_to_l_@quot:
   445                           	opt stack 0
   446                           
   447                           ; 4 bytes @ 0xB
   448  00000C                     	ds	1
   449  00000D                     ??___lltoft:
   450  00000D                     ___awdiv@counter:
   451                           	opt stack 0
   452  00000D                     ___awtoft@sign:
   453                           	opt stack 0
   454  00000D                     __div_to_l_@exp1:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0xC
   458  00000D                     	ds	1
   459  00000E                     ___awdiv@sign:
   460                           	opt stack 0
   461  00000E                     ___lldiv@counter:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0xD
   465  00000E                     	ds	1
   466  00000F                     ___awdiv@quotient:
   467                           	opt stack 0
   468  00000F                     ___ftdiv@f2:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0xE
   472  00000F                     	ds	1
   473  000010                     __tdiv_to_l_@cntr:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0xF
   477  000010                     	ds	1
   478  000011                     ?___wmul:
   479                           	opt stack 0
   480  000011                     __tdiv_to_l_@exp1:
   481                           	opt stack 0
   482  000011                     ___lltoft@exp:
   483                           	opt stack 0
   484  000011                     ___wmul@multiplier:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x10
   488  000011                     	ds	1
   489  000012                     ??___ftdiv:
   490                           
   491                           ; 0 bytes @ 0x11
   492  000012                     	ds	1
   493  000013                     ___wmul@multiplicand:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x12
   497  000013                     	ds	2
   498  000015                     ___wmul@product:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x14
   502  000015                     	ds	2
   503  000017                     ?___fttol:
   504                           	opt stack 0
   505  000017                     ___ftdiv@cntr:
   506                           	opt stack 0
   507  000017                     ___fttol@f1:
   508                           	opt stack 0
   509                           
   510                           ; 3 bytes @ 0x16
   511  000017                     	ds	1
   512  000018                     ___ftdiv@f3:
   513                           	opt stack 0
   514                           
   515                           ; 3 bytes @ 0x17
   516  000018                     	ds	3
   517  00001B                     ??___fttol:
   518  00001B                     ___ftdiv@exp:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x1A
   522  00001B                     	ds	1
   523  00001C                     ___ftdiv@sign:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x1B
   527  00001C                     	ds	1
   528  00001D                     ?___ftadd:
   529                           	opt stack 0
   530  00001D                     ___ftadd@f1:
   531                           	opt stack 0
   532                           
   533                           ; 3 bytes @ 0x1C
   534  00001D                     	ds	3
   535  000020                     ___fttol@sign1:
   536                           	opt stack 0
   537  000020                     ___ftadd@f2:
   538                           	opt stack 0
   539                           
   540                           ; 3 bytes @ 0x1F
   541  000020                     	ds	1
   542  000021                     ___fttol@lval:
   543                           	opt stack 0
   544                           
   545                           ; 4 bytes @ 0x20
   546  000021                     	ds	2
   547  000023                     ??___ftadd:
   548                           
   549                           ; 0 bytes @ 0x22
   550  000023                     	ds	2
   551  000025                     ___fttol@exp1:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x24
   555  000025                     	ds	1
   556  000026                     ?___ftmul:
   557                           	opt stack 0
   558  000026                     ___ftmul@f1:
   559                           	opt stack 0
   560                           
   561                           ; 3 bytes @ 0x25
   562  000026                     	ds	2
   563  000028                     ___ftadd@sign:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x27
   567  000028                     	ds	1
   568  000029                     ___ftadd@exp2:
   569                           	opt stack 0
   570  000029                     ___ftmul@f2:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x28
   574  000029                     	ds	1
   575  00002A                     ___ftadd@exp1:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x29
   579  00002A                     	ds	1
   580  00002B                     ?___ftsub:
   581                           	opt stack 0
   582  00002B                     ___ftsub@f1:
   583                           	opt stack 0
   584                           
   585                           ; 3 bytes @ 0x2A
   586  00002B                     	ds	1
   587  00002C                     ??___ftmul:
   588                           
   589                           ; 0 bytes @ 0x2B
   590  00002C                     	ds	2
   591  00002E                     ___ftsub@f2:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x2D
   595  00002E                     	ds	3
   596  000031                     ?___asftsub:
   597                           	opt stack 0
   598  000031                     ___ftmul@exp:
   599                           	opt stack 0
   600  000031                     ___asftsub@f1p:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x30
   604  000031                     	ds	1
   605  000032                     ___ftmul@f3_as_product:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0x31
   609  000032                     	ds	1
   610  000033                     ___asftsub@f2:
   611                           	opt stack 0
   612                           
   613                           ; 3 bytes @ 0x32
   614  000033                     	ds	2
   615  000035                     ___ftmul@cntr:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x34
   619  000035                     	ds	1
   620  000036                     ___ftmul@sign:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x35
   624  000036                     	ds	1
   625  000037                     ?_fround:
   626                           	opt stack 0
   627  000037                     ?_scale:
   628                           	opt stack 0
   629  000037                     ?___asftmul:
   630                           	opt stack 0
   631  000037                     fround@prec:
   632                           	opt stack 0
   633  000037                     scale@scl:
   634                           	opt stack 0
   635  000037                     ___asftmul@f1p:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x36
   639  000037                     	ds	2
   640  000039                     ___asftmul@f2:
   641                           	opt stack 0
   642                           
   643                           ; 3 bytes @ 0x38
   644  000039                     	ds	1
   645  00003A                     ??_fround:
   646  00003A                     ??_scale:
   647                           
   648                           ; 0 bytes @ 0x39
   649  00003A                     	ds	2
   650  00003C                     
   651                           ; 0 bytes @ 0x3B
   652  00003C                     	ds	4
   653  000040                     _fround$806:
   654                           	opt stack 0
   655  000040                     _scale$807:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x3F
   659  000040                     	ds	3
   660  000043                     _fround$805:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x42
   664  000043                     	ds	3
   665  000046                     ?___asftadd:
   666                           	opt stack 0
   667  000046                     ___asftadd@f1p:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x45
   671  000046                     	ds	2
   672  000048                     ___asftadd@f2:
   673                           	opt stack 0
   674                           
   675                           ; 3 bytes @ 0x47
   676  000048                     	ds	3
   677  00004B                     ?_sprintf:
   678                           	opt stack 0
   679  00004B                     sprintf@sp:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x4A
   683  00004B                     	ds	2
   684  00004D                     sprintf@f:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x4C
   688  00004D                     	ds	5
   689  000052                     ??_sprintf:
   690                           
   691                           ; 0 bytes @ 0x51
   692  000052                     	ds	6
   693  000058                     ??_main:
   694                           
   695                           ; 0 bytes @ 0x57
   696  000058                     	ds	4
   697                           tblptru	equ	0xFF8
   698                           
   699 ;;
   700 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   701 ;;
   702 ;; *************** function _main *****************
   703 ;; Defined at:
   704 ;;		line 30 in file "main.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  mystr          10   31[BANK0 ] unsigned char [10]
   709 ;;  val             2    0        unsigned int 
   710 ;; Return value:  Size  Location     Type
   711 ;;		None               void
   712 ;; Registers used:
   713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   719 ;;      Params:         0       0       0       0       0       0       0       0       0
   720 ;;      Locals:         0      10       0       0       0       0       0       0       0
   721 ;;      Temps:          4       0       0       0       0       0       0       0       0
   722 ;;      Totals:         4      10       0       0       0       0       0       0       0
   723 ;;Total ram usage:       14 bytes
   724 ;; Hardware stack levels required when called:    5
   725 ;; This function calls:
   726 ;;		_Init_AD
   727 ;;		_lcd_int
   728 ;;		_cmd
   729 ;;		_sprintf
   730 ;;		_show
   731 ;;		___ftadd
   732 ;;		___ftdiv
   733 ;;		___awtoft
   734 ;;		___ftge
   735 ;;		___ftneg
   736 ;; This function is called by:
   737 ;;		Startup code after reset
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           	psect	text0
   742  0013C4                     __ptext0:
   743                           	opt stack 0
   744  0013C4                     _main:
   745                           	opt stack 26
   746                           
   747                           ;main.c: 31: Init_AD();
   748                           
   749                           ; BSR set to: 0
   750                           ;incstack = 0
   751                           ;incstack = 0
   752  0013C4  EC31  F013         	call	_Init_AD	;wreg free
   753                           
   754                           ;main.c: 32: unsigned int val;
   755                           ;main.c: 33: TRISD = TRISC = 0;
   756  0013C8  0E00               	movlw	0
   757  0013CA  6E94               	movwf	3988,c	;volatile
   758  0013CC  CF94 FF95          	movff	3988,3989	;volatile
   759                           
   760                           ;main.c: 34: TRISB = 0;
   761  0013D0  0E00               	movlw	0
   762  0013D2  6E93               	movwf	3987,c	;volatile
   763                           
   764                           ;main.c: 35: TRISA0 = 1;
   765  0013D4  8092               	bsf	3986,0,c	;volatile
   766                           
   767                           ;main.c: 36: lcd_int();
   768  0013D6  ECBB  F012         	call	_lcd_int	;wreg free
   769  0013DA                     l4080:
   770                           
   771                           ;main.c: 39: cmd(0x80);
   772  0013DA  6E58               	movwf	??_main& (0+255),c
   773  0013DC  0E80               	movlw	128
   774  0013DE  6E01               	movwf	?_cmd,c
   775  0013E0  5058               	movf	??_main& (0+255),w,c
   776  0013E2  ECEA  F012         	call	_cmd	;wreg free
   777                           
   778                           ;main.c: 40: ADCON0 |= ((1 << ADON) | (1 << GO));
   779  0013E6  0E00               	movlw	0
   780  0013E8  B2C2               	btfsc	4034,1,c	;volatile
   781  0013EA  0E01               	movlw	1
   782  0013EC  6E58               	movwf	??_main& (0+255),c
   783  0013EE  0E01               	movlw	1
   784  0013F0  6E59               	movwf	(??_main+1)& (0+255),c
   785  0013F2  2A58               	incf	??_main,f,c
   786  0013F4  D002               	goto	u2764
   787  0013F6                     u2765:
   788  0013F6  90D8               	bcf	status,0,c
   789  0013F8  3659               	rlcf	??_main+1,f,c
   790  0013FA                     u2764:
   791  0013FA  2E58               	decfsz	??_main,f,c
   792  0013FC  D7FC               	goto	u2765
   793  0013FE  0E00               	movlw	0
   794  001400  B0C2               	btfsc	4034,0,c	;volatile
   795  001402  0E01               	movlw	1
   796  001404  6E5A               	movwf	(??_main+2)& (0+255),c
   797  001406  0E01               	movlw	1
   798  001408  6E5B               	movwf	(??_main+3)& (0+255),c
   799  00140A  2A5A               	incf	??_main+2,f,c
   800  00140C  D002               	goto	u2774
   801  00140E                     u2775:
   802  00140E  90D8               	bcf	status,0,c
   803  001410  365B               	rlcf	??_main+3,f,c
   804  001412                     u2774:
   805  001412  2E5A               	decfsz	??_main+2,f,c
   806  001414  D7FC               	goto	u2775
   807  001416  505B               	movf	??_main+3,w,c
   808  001418  1059               	iorwf	??_main+1,w,c
   809  00141A  12C2               	iorwf	4034,f,c	;volatile
   810  00141C                     l55:
   811  00141C  B2C2               	btfsc	4034,1,c	;volatile
   812  00141E  D7FE               	goto	l55
   813                           
   814                           ;main.c: 42: analog_reading = (ADRESH * 256) + (ADRESL);
   815  001420  50C4               	movf	4036,w,c	;volatile
   816  001422  6E59               	movwf	(??_main+1)& (0+255),c
   817  001424  6A58               	clrf	??_main& (0+255),c
   818  001426  50C3               	movf	4035,w,c	;volatile
   819  001428  2458               	addwf	??_main,w,c
   820  00142A  6E09               	movwf	?___awtoft,c
   821  00142C  0E00               	movlw	0
   822  00142E  2059               	addwfc	??_main+1,w,c
   823  001430  6E0A               	movwf	?___awtoft+1,c
   824  001432  EC07  F012         	call	___awtoft	;wreg free
   825  001436  C00B  F08B         	movff	?___awtoft+2,_analog_reading+2
   826  00143A  C00A  F08A         	movff	?___awtoft+1,_analog_reading+1
   827  00143E  C009  F089         	movff	?___awtoft,_analog_reading
   828                           
   829                           ;main.c: 43: analog_reading = 100 - analog_reading / 10.23;
   830  001442  0EAE               	movlw	174
   831  001444  6E0F               	movwf	?___ftdiv+3,c
   832  001446  0E23               	movlw	35
   833  001448  6E10               	movwf	?___ftdiv+4,c
   834  00144A  0E41               	movlw	65
   835  00144C  6E11               	movwf	?___ftdiv+5,c
   836  00144E  C089  F00C         	movff	_analog_reading,?___ftdiv
   837  001452  C08A  F00D         	movff	_analog_reading+1,?___ftdiv+1
   838  001456  C08B  F00E         	movff	_analog_reading+2,?___ftdiv+2
   839  00145A  ECA7  F00E         	call	___ftdiv	;wreg free
   840  00145E  C00E  F00B         	movff	?___ftdiv+2,?___ftneg+2
   841  001462  C00D  F00A         	movff	?___ftdiv+1,?___ftneg+1
   842  001466  C00C  F009         	movff	?___ftdiv,?___ftneg
   843  00146A  EC13  F013         	call	___ftneg	;wreg free
   844  00146E  C00B  F01F         	movff	?___ftneg+2,?___ftadd+2
   845  001472  C00A  F01E         	movff	?___ftneg+1,?___ftadd+1
   846  001476  C009  F01D         	movff	?___ftneg,?___ftadd
   847  00147A  0E00               	movlw	0
   848  00147C  6E20               	movwf	?___ftadd+3,c
   849  00147E  0EC8               	movlw	200
   850  001480  6E21               	movwf	?___ftadd+4,c
   851  001482  0E42               	movlw	66
   852  001484  6E22               	movwf	?___ftadd+5,c
   853  001486  ECA8  F00C         	call	___ftadd	;wreg free
   854  00148A  C01F  F08B         	movff	?___ftadd+2,_analog_reading+2
   855  00148E  C01E  F08A         	movff	?___ftadd+1,_analog_reading+1
   856  001492  C01D  F089         	movff	?___ftadd,_analog_reading
   857                           
   858                           ;main.c: 44: char mystr[10];
   859                           ;main.c: 45: sprintf(mystr, "%f", analog_reading);
   860  001496  0100               	movlb	0	; () banked
   861  001498  0E00               	movlw	high main@mystr
   862  00149A  6E4C               	movwf	?_sprintf+1,c
   863  00149C  0100               	movlb	0	; () banked
   864  00149E  0E7F               	movlw	low main@mystr
   865  0014A0  6E4B               	movwf	?_sprintf,c
   866  0014A2  0E08               	movlw	high STR_1
   867  0014A4  6E4E               	movwf	?_sprintf+3,c
   868  0014A6  0E76               	movlw	low STR_1
   869  0014A8  6E4D               	movwf	?_sprintf+2,c
   870  0014AA  C089  F04F         	movff	_analog_reading,?_sprintf+4
   871  0014AE  C08A  F050         	movff	_analog_reading+1,?_sprintf+5
   872  0014B2  C08B  F051         	movff	_analog_reading+2,?_sprintf+6
   873  0014B6  EC3D  F004         	call	_sprintf	;wreg free
   874                           
   875                           ;main.c: 46: show(mystr);
   876  0014BA  0100               	movlb	0	; () banked
   877  0014BC  0E00               	movlw	high main@mystr
   878  0014BE  6E03               	movwf	?_show+1,c
   879  0014C0  0100               	movlb	0	; () banked
   880  0014C2  0E7F               	movlw	low main@mystr
   881  0014C4  6E02               	movwf	?_show,c
   882  0014C6  EC00  F013         	call	_show	;wreg free
   883                           
   884                           ;main.c: 47: if (analog_reading > 0 && analog_reading < 10) {
   885  0014CA  0E00               	movlw	0
   886  0014CC  6E01               	movwf	?___ftge,c
   887  0014CE  0E00               	movlw	0
   888  0014D0  6E02               	movwf	?___ftge+1,c
   889  0014D2  0E00               	movlw	0
   890  0014D4  6E03               	movwf	?___ftge+2,c
   891  0014D6  C089  F004         	movff	_analog_reading,?___ftge+3
   892  0014DA  C08A  F005         	movff	_analog_reading+1,?___ftge+4
   893  0014DE  C08B  F006         	movff	_analog_reading+2,?___ftge+5
   894  0014E2  EC6C  F010         	call	___ftge	;wreg free
   895  0014E6  B0D8               	btfsc	status,0,c
   896  0014E8  D012               	goto	l4096
   897  0014EA  C089  F001         	movff	_analog_reading,?___ftge
   898  0014EE  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   899  0014F2  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   900  0014F6  0E00               	movlw	0
   901  0014F8  6E04               	movwf	?___ftge+3,c
   902  0014FA  0E20               	movlw	32
   903  0014FC  6E05               	movwf	?___ftge+4,c
   904  0014FE  0E41               	movlw	65
   905  001500  6E06               	movwf	?___ftge+5,c
   906  001502  EC6C  F010         	call	___ftge	;wreg free
   907  001506  B0D8               	btfsc	status,0,c
   908  001508  D002               	goto	l4096
   909                           
   910                           ;main.c: 48: LATB = 0x80;
   911  00150A  0E80               	movlw	128
   912  00150C  D0DF               	goto	L7
   913  00150E                     l4096:
   914  00150E  C089  F001         	movff	_analog_reading,?___ftge
   915  001512  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   916  001516  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   917  00151A  0E00               	movlw	0
   918  00151C  6E04               	movwf	?___ftge+3,c
   919  00151E  0E20               	movlw	32
   920  001520  6E05               	movwf	?___ftge+4,c
   921  001522  0E41               	movlw	65
   922  001524  6E06               	movwf	?___ftge+5,c
   923  001526  EC6C  F010         	call	___ftge	;wreg free
   924  00152A  A0D8               	btfss	status,0,c
   925  00152C  D012               	goto	l4102
   926  00152E  C089  F001         	movff	_analog_reading,?___ftge
   927  001532  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   928  001536  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   929  00153A  0E00               	movlw	0
   930  00153C  6E04               	movwf	?___ftge+3,c
   931  00153E  0EA0               	movlw	160
   932  001540  6E05               	movwf	?___ftge+4,c
   933  001542  0E41               	movlw	65
   934  001544  6E06               	movwf	?___ftge+5,c
   935  001546  EC6C  F010         	call	___ftge	;wreg free
   936  00154A  B0D8               	btfsc	status,0,c
   937  00154C  D002               	goto	l4102
   938                           
   939                           ;main.c: 50: LATB = 0xC0;
   940  00154E  0EC0               	movlw	192
   941  001550  D0BD               	goto	L7
   942  001552                     l4102:
   943  001552  C089  F001         	movff	_analog_reading,?___ftge
   944  001556  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   945  00155A  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   946  00155E  0E00               	movlw	0
   947  001560  6E04               	movwf	?___ftge+3,c
   948  001562  0EA0               	movlw	160
   949  001564  6E05               	movwf	?___ftge+4,c
   950  001566  0E41               	movlw	65
   951  001568  6E06               	movwf	?___ftge+5,c
   952  00156A  EC6C  F010         	call	___ftge	;wreg free
   953  00156E  A0D8               	btfss	status,0,c
   954  001570  D012               	goto	l4108
   955  001572  C089  F001         	movff	_analog_reading,?___ftge
   956  001576  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   957  00157A  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   958  00157E  0E00               	movlw	0
   959  001580  6E04               	movwf	?___ftge+3,c
   960  001582  0EF0               	movlw	240
   961  001584  6E05               	movwf	?___ftge+4,c
   962  001586  0E41               	movlw	65
   963  001588  6E06               	movwf	?___ftge+5,c
   964  00158A  EC6C  F010         	call	___ftge	;wreg free
   965  00158E  B0D8               	btfsc	status,0,c
   966  001590  D002               	goto	l4108
   967                           
   968                           ;main.c: 52: LATB = 0xE0;
   969  001592  0EE0               	movlw	224
   970  001594  D09B               	goto	L7
   971  001596                     l4108:
   972  001596  C089  F001         	movff	_analog_reading,?___ftge
   973  00159A  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   974  00159E  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   975  0015A2  0E00               	movlw	0
   976  0015A4  6E04               	movwf	?___ftge+3,c
   977  0015A6  0EF0               	movlw	240
   978  0015A8  6E05               	movwf	?___ftge+4,c
   979  0015AA  0E41               	movlw	65
   980  0015AC  6E06               	movwf	?___ftge+5,c
   981  0015AE  EC6C  F010         	call	___ftge	;wreg free
   982  0015B2  A0D8               	btfss	status,0,c
   983  0015B4  D012               	goto	l4114
   984  0015B6  C089  F001         	movff	_analog_reading,?___ftge
   985  0015BA  C08A  F002         	movff	_analog_reading+1,?___ftge+1
   986  0015BE  C08B  F003         	movff	_analog_reading+2,?___ftge+2
   987  0015C2  0E00               	movlw	0
   988  0015C4  6E04               	movwf	?___ftge+3,c
   989  0015C6  0E20               	movlw	32
   990  0015C8  6E05               	movwf	?___ftge+4,c
   991  0015CA  0E42               	movlw	66
   992  0015CC  6E06               	movwf	?___ftge+5,c
   993  0015CE  EC6C  F010         	call	___ftge	;wreg free
   994  0015D2  B0D8               	btfsc	status,0,c
   995  0015D4  D002               	goto	l4114
   996                           
   997                           ;main.c: 54: LATB = 0xF0;
   998  0015D6  0EF0               	movlw	240
   999  0015D8  D079               	goto	L7
  1000  0015DA                     l4114:
  1001  0015DA  C089  F001         	movff	_analog_reading,?___ftge
  1002  0015DE  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1003  0015E2  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1004  0015E6  0E00               	movlw	0
  1005  0015E8  6E04               	movwf	?___ftge+3,c
  1006  0015EA  0E20               	movlw	32
  1007  0015EC  6E05               	movwf	?___ftge+4,c
  1008  0015EE  0E42               	movlw	66
  1009  0015F0  6E06               	movwf	?___ftge+5,c
  1010  0015F2  EC6C  F010         	call	___ftge	;wreg free
  1011  0015F6  A0D8               	btfss	status,0,c
  1012  0015F8  D012               	goto	l4120
  1013  0015FA  C089  F001         	movff	_analog_reading,?___ftge
  1014  0015FE  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1015  001602  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1016  001606  0E00               	movlw	0
  1017  001608  6E04               	movwf	?___ftge+3,c
  1018  00160A  0E48               	movlw	72
  1019  00160C  6E05               	movwf	?___ftge+4,c
  1020  00160E  0E42               	movlw	66
  1021  001610  6E06               	movwf	?___ftge+5,c
  1022  001612  EC6C  F010         	call	___ftge	;wreg free
  1023  001616  B0D8               	btfsc	status,0,c
  1024  001618  D002               	goto	l4120
  1025                           
  1026                           ;main.c: 56: LATB = 0xF8;
  1027  00161A  0EF8               	movlw	248
  1028  00161C  D057               	goto	L7
  1029  00161E                     l4120:
  1030  00161E  C089  F001         	movff	_analog_reading,?___ftge
  1031  001622  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1032  001626  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1033  00162A  0E00               	movlw	0
  1034  00162C  6E04               	movwf	?___ftge+3,c
  1035  00162E  0E48               	movlw	72
  1036  001630  6E05               	movwf	?___ftge+4,c
  1037  001632  0E42               	movlw	66
  1038  001634  6E06               	movwf	?___ftge+5,c
  1039  001636  EC6C  F010         	call	___ftge	;wreg free
  1040  00163A  A0D8               	btfss	status,0,c
  1041  00163C  D012               	goto	l4126
  1042  00163E  C089  F001         	movff	_analog_reading,?___ftge
  1043  001642  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1044  001646  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1045  00164A  0E00               	movlw	0
  1046  00164C  6E04               	movwf	?___ftge+3,c
  1047  00164E  0E70               	movlw	112
  1048  001650  6E05               	movwf	?___ftge+4,c
  1049  001652  0E42               	movlw	66
  1050  001654  6E06               	movwf	?___ftge+5,c
  1051  001656  EC6C  F010         	call	___ftge	;wreg free
  1052  00165A  B0D8               	btfsc	status,0,c
  1053  00165C  D002               	goto	l4126
  1054                           
  1055                           ;main.c: 58: LATB = 0xFC;
  1056  00165E  0EFC               	movlw	252
  1057  001660  D035               	goto	L7
  1058  001662                     l4126:
  1059  001662  C089  F001         	movff	_analog_reading,?___ftge
  1060  001666  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1061  00166A  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1062  00166E  0E00               	movlw	0
  1063  001670  6E04               	movwf	?___ftge+3,c
  1064  001672  0E70               	movlw	112
  1065  001674  6E05               	movwf	?___ftge+4,c
  1066  001676  0E42               	movlw	66
  1067  001678  6E06               	movwf	?___ftge+5,c
  1068  00167A  EC6C  F010         	call	___ftge	;wreg free
  1069  00167E  A0D8               	btfss	status,0,c
  1070  001680  D012               	goto	l4132
  1071  001682  C089  F001         	movff	_analog_reading,?___ftge
  1072  001686  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1073  00168A  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1074  00168E  0E00               	movlw	0
  1075  001690  6E04               	movwf	?___ftge+3,c
  1076  001692  0E8C               	movlw	140
  1077  001694  6E05               	movwf	?___ftge+4,c
  1078  001696  0E42               	movlw	66
  1079  001698  6E06               	movwf	?___ftge+5,c
  1080  00169A  EC6C  F010         	call	___ftge	;wreg free
  1081  00169E  B0D8               	btfsc	status,0,c
  1082  0016A0  D002               	goto	l4132
  1083                           
  1084                           ;main.c: 60: LATB = 0xFE;
  1085  0016A2  0EFE               	movlw	254
  1086  0016A4  D013               	goto	L7
  1087  0016A6                     l4132:
  1088  0016A6  C089  F001         	movff	_analog_reading,?___ftge
  1089  0016AA  C08A  F002         	movff	_analog_reading+1,?___ftge+1
  1090  0016AE  C08B  F003         	movff	_analog_reading+2,?___ftge+2
  1091  0016B2  0E00               	movlw	0
  1092  0016B4  6E04               	movwf	?___ftge+3,c
  1093  0016B6  0E8C               	movlw	140
  1094  0016B8  6E05               	movwf	?___ftge+4,c
  1095  0016BA  0E42               	movlw	66
  1096  0016BC  6E06               	movwf	?___ftge+5,c
  1097  0016BE  EC6C  F010         	call	___ftge	;wreg free
  1098  0016C2  A0D8               	btfss	status,0,c
  1099  0016C4  D002               	goto	l4136
  1100                           
  1101                           ;main.c: 62: LATB = 0xFF;
  1102  0016C6  688A               	setf	3978,c	;volatile
  1103                           
  1104                           ;main.c: 63: } else {
  1105  0016C8  D688               	goto	l4080
  1106  0016CA                     l4136:
  1107                           
  1108                           ;main.c: 64: LATB = 0x00;
  1109  0016CA  0E00               	movlw	0
  1110  0016CC                     L7:
  1111  0016CC  6E8A               	movwf	3978,c	;volatile
  1112  0016CE  D685               	goto	l4080
  1113  0016D0                     __end_of_main:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           status	equ	0xFD8
  1117                           
  1118 ;; *************** function ___awtoft *****************
  1119 ;; Defined at:
  1120 ;;		line 33 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\awtoft.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  c               2    8[COMRAM] int 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  sign            1   12[COMRAM] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  3    8[COMRAM] float 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1134 ;;      Params:         3       0       0       0       0       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1136 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1137 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1138 ;;Total ram usage:        5 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    1
  1141 ;; This function calls:
  1142 ;;		___ftpack
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text1
  1149  00240E                     __ptext1:
  1150                           	opt stack 0
  1151  00240E                     ___awtoft:
  1152                           	opt stack 29
  1153                           
  1154                           ;incstack = 0
  1155                           ;incstack = 0
  1156  00240E  6E0C               	movwf	??___awtoft& (0+255),c
  1157  002410  0E00               	movlw	0
  1158  002412  6E0D               	movwf	___awtoft@sign,c
  1159  002414  500C               	movf	??___awtoft& (0+255),w,c
  1160  002416  AE0A               	btfss	___awtoft@c+1,7,c
  1161  002418  D008               	goto	l3628
  1162  00241A  6C09               	negf	___awtoft@c,c
  1163  00241C  1E0A               	comf	___awtoft@c+1,f,c
  1164  00241E  B0D8               	btfsc	status,0,c
  1165  002420  2A0A               	incf	___awtoft@c+1,f,c
  1166  002422  6E0C               	movwf	??___awtoft& (0+255),c
  1167  002424  0E01               	movlw	1
  1168  002426  6E0D               	movwf	___awtoft@sign,c
  1169  002428  500C               	movf	??___awtoft& (0+255),w,c
  1170  00242A                     l3628:
  1171  00242A  C009  F001         	movff	___awtoft@c,?___ftpack
  1172  00242E  C00A  F002         	movff	___awtoft@c+1,?___ftpack+1
  1173  002432  6A03               	clrf	?___ftpack+2,c
  1174  002434  6E0C               	movwf	??___awtoft& (0+255),c
  1175  002436  0E8E               	movlw	142
  1176  002438  6E04               	movwf	?___ftpack+3,c
  1177  00243A  500C               	movf	??___awtoft& (0+255),w,c
  1178  00243C  C00D  F005         	movff	___awtoft@sign,?___ftpack+4
  1179  002440  EC10  F010         	call	___ftpack	;wreg free
  1180  002444  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1181  002448  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1182  00244C  C001  F009         	movff	?___ftpack,?___awtoft
  1183  002450  0012               	return	
  1184  002452                     __end_of___awtoft:
  1185                           	opt stack 0
  1186                           tblptru	equ	0xFF8
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function ___ftdiv *****************
  1190 ;; Defined at:
  1191 ;;		line 50 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftdiv.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  f1              3   11[COMRAM] float 
  1194 ;;  f2              3   14[COMRAM] float 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  f3              3   23[COMRAM] float 
  1197 ;;  sign            1   27[COMRAM] unsigned char 
  1198 ;;  exp             1   26[COMRAM] unsigned char 
  1199 ;;  cntr            1   22[COMRAM] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  3   11[COMRAM] float 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1209 ;;      Params:         6       0       0       0       0       0       0       0       0
  1210 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1211 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1212 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1213 ;;Total ram usage:       17 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    1
  1216 ;; This function calls:
  1217 ;;		___ftpack
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text2
  1224  001D4E                     __ptext2:
  1225                           	opt stack 0
  1226  001D4E                     ___ftdiv:
  1227                           	opt stack 29
  1228                           
  1229                           ;incstack = 0
  1230                           ;incstack = 0
  1231  001D4E  0E0F               	movlw	15
  1232  001D50  6E12               	movwf	??___ftdiv& (0+255),c
  1233  001D52  C00C  F013         	movff	___ftdiv@f1,??___ftdiv+1
  1234  001D56  C00D  F014         	movff	___ftdiv@f1+1,??___ftdiv+2
  1235  001D5A  C00E  F015         	movff	___ftdiv@f1+2,??___ftdiv+3
  1236  001D5E  2812               	incf	??___ftdiv,w,c
  1237  001D60  6E16               	movwf	(??___ftdiv+4)& (0+255),c
  1238  001D62  D004               	goto	u2320
  1239  001D64                     u2325:
  1240  001D64  90D8               	bcf	status,0,c
  1241  001D66  3215               	rrcf	??___ftdiv+3,f,c
  1242  001D68  3214               	rrcf	??___ftdiv+2,f,c
  1243  001D6A  3213               	rrcf	??___ftdiv+1,f,c
  1244  001D6C                     u2320:
  1245  001D6C  2E16               	decfsz	(??___ftdiv+4)& (0+255),f,c
  1246  001D6E  D7FA               	goto	u2325
  1247  001D70  5013               	movf	??___ftdiv+1,w,c
  1248  001D72  6E1B               	movwf	___ftdiv@exp,c
  1249  001D74  661B               	tstfsz	___ftdiv@exp& (0+255),c
  1250  001D76  D001               	goto	l3744
  1251  001D78  D015               	goto	u2350
  1252  001D7A                     l3744:
  1253  001D7A  0E0F               	movlw	15
  1254  001D7C  6E12               	movwf	??___ftdiv& (0+255),c
  1255  001D7E  C00F  F013         	movff	___ftdiv@f2,??___ftdiv+1
  1256  001D82  C010  F014         	movff	___ftdiv@f2+1,??___ftdiv+2
  1257  001D86  C011  F015         	movff	___ftdiv@f2+2,??___ftdiv+3
  1258  001D8A  2812               	incf	??___ftdiv,w,c
  1259  001D8C  6E16               	movwf	(??___ftdiv+4)& (0+255),c
  1260  001D8E  D004               	goto	u2340
  1261  001D90                     u2345:
  1262  001D90  90D8               	bcf	status,0,c
  1263  001D92  3215               	rrcf	??___ftdiv+3,f,c
  1264  001D94  3214               	rrcf	??___ftdiv+2,f,c
  1265  001D96  3213               	rrcf	??___ftdiv+1,f,c
  1266  001D98                     u2340:
  1267  001D98  2E16               	decfsz	(??___ftdiv+4)& (0+255),f,c
  1268  001D9A  D7FA               	goto	u2345
  1269  001D9C  5013               	movf	??___ftdiv+1,w,c
  1270  001D9E  6E1C               	movwf	___ftdiv@sign,c
  1271  001DA0  661C               	tstfsz	___ftdiv@sign& (0+255),c
  1272  001DA2  D007               	goto	l3750
  1273  001DA4                     u2350:
  1274  001DA4  0E00               	movlw	0
  1275  001DA6  6E0C               	movwf	?___ftdiv,c
  1276  001DA8  0E00               	movlw	0
  1277  001DAA  6E0D               	movwf	?___ftdiv+1,c
  1278  001DAC  0E00               	movlw	0
  1279  001DAE  6E0E               	movwf	?___ftdiv+2,c
  1280  001DB0  D04C               	goto	l562
  1281  001DB2                     l3750:
  1282  001DB2  0E00               	movlw	0
  1283  001DB4  6E18               	movwf	___ftdiv@f3,c
  1284  001DB6  0E00               	movlw	0
  1285  001DB8  6E19               	movwf	___ftdiv@f3+1,c
  1286  001DBA  0E00               	movlw	0
  1287  001DBC  6E1A               	movwf	___ftdiv@f3+2,c
  1288  001DBE  501C               	movf	___ftdiv@sign,w,c
  1289  001DC0  0F89               	addlw	137
  1290  001DC2  5E1B               	subwf	___ftdiv@exp,f,c
  1291  001DC4  C00E  F01C         	movff	___ftdiv@f1+2,___ftdiv@sign
  1292  001DC8  5011               	movf	(___ftdiv@f2+2)& (0+255),w,c
  1293  001DCA  1A1C               	xorwf	___ftdiv@sign,f,c
  1294  001DCC  0E80               	movlw	128
  1295  001DCE  161C               	andwf	___ftdiv@sign,f,c
  1296  001DD0  8E0D               	bsf	___ftdiv@f1+1,7,c
  1297  001DD2  0EFF               	movlw	255
  1298  001DD4  160C               	andwf	___ftdiv@f1,f,c
  1299  001DD6  0EFF               	movlw	255
  1300  001DD8  160D               	andwf	___ftdiv@f1+1,f,c
  1301  001DDA  0E00               	movlw	0
  1302  001DDC  160E               	andwf	___ftdiv@f1+2,f,c
  1303  001DDE  8E10               	bsf	___ftdiv@f2+1,7,c
  1304  001DE0  0EFF               	movlw	255
  1305  001DE2  160F               	andwf	___ftdiv@f2,f,c
  1306  001DE4  0EFF               	movlw	255
  1307  001DE6  1610               	andwf	___ftdiv@f2+1,f,c
  1308  001DE8  0E00               	movlw	0
  1309  001DEA  1611               	andwf	___ftdiv@f2+2,f,c
  1310  001DEC  6E12               	movwf	??___ftdiv& (0+255),c
  1311  001DEE  0E18               	movlw	24
  1312  001DF0  6E17               	movwf	___ftdiv@cntr,c
  1313  001DF2  5012               	movf	??___ftdiv& (0+255),w,c
  1314  001DF4                     l564:
  1315  001DF4  90D8               	bcf	status,0,c
  1316  001DF6  3618               	rlcf	___ftdiv@f3,f,c
  1317  001DF8  3619               	rlcf	___ftdiv@f3+1,f,c
  1318  001DFA  361A               	rlcf	___ftdiv@f3+2,f,c
  1319  001DFC  500F               	movf	___ftdiv@f2,w,c
  1320  001DFE  5C0C               	subwf	___ftdiv@f1,w,c
  1321  001E00  5010               	movf	___ftdiv@f2+1,w,c
  1322  001E02  580D               	subwfb	___ftdiv@f1+1,w,c
  1323  001E04  5011               	movf	___ftdiv@f2+2,w,c
  1324  001E06  580E               	subwfb	___ftdiv@f1+2,w,c
  1325  001E08  A0D8               	btfss	status,0,c
  1326  001E0A  D007               	goto	l565
  1327  001E0C  500F               	movf	___ftdiv@f2,w,c
  1328  001E0E  5E0C               	subwf	___ftdiv@f1,f,c
  1329  001E10  5010               	movf	___ftdiv@f2+1,w,c
  1330  001E12  5A0D               	subwfb	___ftdiv@f1+1,f,c
  1331  001E14  5011               	movf	___ftdiv@f2+2,w,c
  1332  001E16  5A0E               	subwfb	___ftdiv@f1+2,f,c
  1333  001E18  8018               	bsf	___ftdiv@f3,0,c
  1334  001E1A                     l565:
  1335  001E1A  90D8               	bcf	status,0,c
  1336  001E1C  360C               	rlcf	___ftdiv@f1,f,c
  1337  001E1E  360D               	rlcf	___ftdiv@f1+1,f,c
  1338  001E20  360E               	rlcf	___ftdiv@f1+2,f,c
  1339  001E22  2E17               	decfsz	___ftdiv@cntr,f,c
  1340  001E24  D7E7               	goto	l564
  1341  001E26  C018  F001         	movff	___ftdiv@f3,?___ftpack
  1342  001E2A  C019  F002         	movff	___ftdiv@f3+1,?___ftpack+1
  1343  001E2E  C01A  F003         	movff	___ftdiv@f3+2,?___ftpack+2
  1344  001E32  C01B  F004         	movff	___ftdiv@exp,?___ftpack+3
  1345  001E36  C01C  F005         	movff	___ftdiv@sign,?___ftpack+4
  1346  001E3A  EC10  F010         	call	___ftpack	;wreg free
  1347  001E3E  C003  F00E         	movff	?___ftpack+2,?___ftdiv+2
  1348  001E42  C002  F00D         	movff	?___ftpack+1,?___ftdiv+1
  1349  001E46  C001  F00C         	movff	?___ftpack,?___ftdiv
  1350  001E4A                     l562:
  1351  001E4A  0012               	return	
  1352  001E4C                     __end_of___ftdiv:
  1353                           	opt stack 0
  1354                           tblptru	equ	0xFF8
  1355                           status	equ	0xFD8
  1356                           
  1357 ;; *************** function _show *****************
  1358 ;; Defined at:
  1359 ;;		line 94 in file "main.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  s               2    1[COMRAM] PTR unsigned char 
  1362 ;;		 -> main@mystr(10), 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;		None               void
  1367 ;; Registers used:
  1368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1374 ;;      Params:         2       0       0       0       0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1377 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1378 ;;Total ram usage:        2 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    1
  1381 ;; This function calls:
  1382 ;;		_dat
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text3
  1389  002600                     __ptext3:
  1390                           	opt stack 0
  1391  002600                     _show:
  1392                           	opt stack 29
  1393                           
  1394                           ;main.c: 95: while ( * s) {
  1395                           
  1396                           ;incstack = 0
  1397                           ;incstack = 0
  1398  002600  D00A               	goto	l3526
  1399  002602                     l3522:
  1400                           
  1401                           ;main.c: 96: dat( * s++);
  1402  002602  C002  FFD9         	movff	show@s,fsr2l
  1403  002606  C003  FFDA         	movff	show@s+1,fsr2h
  1404  00260A  50DF               	movf	indf2,w,c
  1405  00260C  6E01               	movwf	?_dat,c
  1406  00260E  ECD4  F012         	call	_dat	;wreg free
  1407  002612  4A02               	infsnz	show@s,f,c
  1408  002614  2A03               	incf	show@s+1,f,c
  1409  002616                     l3526:
  1410  002616  C002  FFD9         	movff	show@s,fsr2l
  1411  00261A  C003  FFDA         	movff	show@s+1,fsr2h
  1412  00261E  50DF               	movf	indf2,w,c
  1413  002620  B4D8               	btfsc	status,2,c
  1414  002622  0012               	return	
  1415  002624  D7EE               	goto	l3522
  1416  002626                     __end_of_show:
  1417                           	opt stack 0
  1418                           tblptru	equ	0xFF8
  1419                           indf2	equ	0xFDF
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _dat *****************
  1425 ;; Defined at:
  1426 ;;		line 85 in file "main.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  b               1    0[COMRAM] unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1440 ;;      Params:         1       0       0       0       0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1443 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1444 ;;Total ram usage:        1 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_show
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text4
  1454  0025A8                     __ptext4:
  1455                           	opt stack 0
  1456  0025A8                     _dat:
  1457                           	opt stack 29
  1458                           
  1459                           ;main.c: 86: PORTD = b;
  1460                           
  1461                           ;incstack = 0
  1462                           ;incstack = 0
  1463  0025A8  C001  FF83         	movff	dat@b,3971	;volatile
  1464                           
  1465                           ;main.c: 87: RC0 = 1;
  1466  0025AC  8082               	bsf	3970,0,c	;volatile
  1467                           
  1468                           ;main.c: 88: RC1 = 0;
  1469  0025AE  9282               	bcf	3970,1,c	;volatile
  1470                           
  1471                           ;main.c: 89: RC2 = 1;
  1472  0025B0  8482               	bsf	3970,2,c	;volatile
  1473                           
  1474                           ;main.c: 90: for (i = 0; i <= 1000; i++);
  1475  0025B2  0E00               	movlw	0
  1476  0025B4  6E5D               	movwf	_i+1,c
  1477  0025B6  0E00               	movlw	0
  1478  0025B8  6E5C               	movwf	_i,c
  1479  0025BA  505D               	movf	_i+1,w,c
  1480  0025BC  0A80               	xorlw	128
  1481  0025BE  0F7D               	addlw	-131
  1482  0025C0  0EE9               	movlw	233
  1483  0025C2  B4D8               	btfsc	status,2,c
  1484  0025C4  5C5C               	subwf	_i,w,c
  1485  0025C6  B0D8               	btfsc	status,0,c
  1486  0025C8  D003               	goto	l88
  1487  0025CA  4A5C               	infsnz	_i,f,c
  1488  0025CC  2A5D               	incf	_i+1,f,c
  1489  0025CE  D7F5               	goto	L8
  1490  0025D0                     l88:
  1491                           
  1492                           ;main.c: 91: RC2 = 0;
  1493  0025D0  9482               	bcf	3970,2,c	;volatile
  1494  0025D2  0012               	return	
  1495  0025D4                     __end_of_dat:
  1496                           	opt stack 0
  1497                           tblptru	equ	0xFF8
  1498                           indf2	equ	0xFDF
  1499                           fsr2h	equ	0xFDA
  1500                           fsr2l	equ	0xFD9
  1501                           status	equ	0xFD8
  1502                           
  1503 ;; *************** function _sprintf *****************
  1504 ;; Defined at:
  1505 ;;		line 493 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\doprnt.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  sp              2   74[COMRAM] PTR unsigned char 
  1508 ;;		 -> main@mystr(10), 
  1509 ;;  f               2   76[COMRAM] PTR const unsigned char 
  1510 ;;		 -> STR_1(3), 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  vd              2    9[BANK0 ] unsigned int 
  1513 ;;  vd              2   11[BANK0 ] unsigned int 
  1514 ;;  _val            5   17[BANK0 ] struct .
  1515 ;;  fval            3   28[BANK0 ] struct .
  1516 ;;  integ           3   22[BANK0 ] struct .
  1517 ;;  ival            3    0        struct .
  1518 ;;  exp             2   25[BANK0 ] int 
  1519 ;;  prec            2   15[BANK0 ] int 
  1520 ;;  flag            2   13[BANK0 ] unsigned short 
  1521 ;;  ap              2    7[BANK0 ] PTR void [1]
  1522 ;;		 -> ?_sprintf(2), 
  1523 ;;  width           2    0        int 
  1524 ;;  c               1   27[BANK0 ] char 
  1525 ;;  d               1    0        unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  2   74[COMRAM] int 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1535 ;;      Params:         7       0       0       0       0       0       0       0       0
  1536 ;;      Locals:         0      31       0       0       0       0       0       0       0
  1537 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1538 ;;      Totals:        13      31       0       0       0       0       0       0       0
  1539 ;;Total ram usage:       44 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    4
  1542 ;; This function calls:
  1543 ;;		_fround
  1544 ;;		_scale
  1545 ;;		__tdiv_to_l_
  1546 ;;		__div_to_l_
  1547 ;;		___asftadd
  1548 ;;		___asftmul
  1549 ;;		___ftmul
  1550 ;;		___asftsub
  1551 ;;		___awdiv
  1552 ;;		___ftge
  1553 ;;		___ftneg
  1554 ;;		___fttol
  1555 ;;		___lldiv
  1556 ;;		___llmod
  1557 ;;		___lltoft
  1558 ;;		___lwmod
  1559 ;;		___wmul
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text5
  1566  00087A                     __ptext5:
  1567                           	opt stack 0
  1568  00087A                     _sprintf:
  1569                           	opt stack 26
  1570                           
  1571                           ;doprnt.c: 494: va_list ap;
  1572                           ;doprnt.c: 499: signed char c;
  1573                           ;doprnt.c: 501: int width;
  1574                           ;doprnt.c: 504: int prec;
  1575                           ;doprnt.c: 508: unsigned short flag;
  1576                           ;doprnt.c: 515: char d;
  1577                           ;doprnt.c: 516: double fval, integ;
  1578                           ;doprnt.c: 517: int exp;
  1579                           ;doprnt.c: 518: double ival;
  1580                           ;doprnt.c: 519: union {
  1581                           ;doprnt.c: 520: unsigned long _val;
  1582                           ;doprnt.c: 521: struct {
  1583                           ;doprnt.c: 522: const char * _cp;
  1584                           ;doprnt.c: 523: unsigned _len;
  1585                           ;doprnt.c: 524: } _str;
  1586                           ;doprnt.c: 525: } _val;
  1587                           ;doprnt.c: 542: *ap = __va_start();
  1588                           
  1589                           ;incstack = 0
  1590                           ;incstack = 0
  1591  00087A  0E00               	movlw	high (?_sprintf+4)
  1592  00087C  0100               	movlb	0	; () banked
  1593  00087E  0100               	movlb	0	; () banked
  1594  000880  6F68               	movwf	(sprintf@ap+1)& (0+255),b
  1595  000882  0E4F               	movlw	low (?_sprintf+4)
  1596  000884  0100               	movlb	0	; () banked
  1597  000886  6F67               	movwf	sprintf@ap& (0+255),b
  1598                           
  1599                           ;doprnt.c: 545: while(c = *f++) {
  1600  000888  D361               	goto	l4064
  1601  00088A                     l3894:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;doprnt.c: 547: if(c != '%')
  1605  00088A  0100               	movlb	0	; () banked
  1606  00088C  0100               	movlb	0	; () banked
  1607  00088E  517B               	movf	sprintf@c& (0+255),w,b
  1608  000890  0A25               	xorlw	37
  1609  000892  B4D8               	btfsc	status,2,c
  1610  000894  D008               	goto	l3900
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;doprnt.c: 549: {
  1614                           ;doprnt.c: 550: ((*sp++ = (c)));
  1615  000896  C04B  FFD9         	movff	sprintf@sp,fsr2l
  1616  00089A  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  1617  00089E  0100               	movlb	0	; () banked
  1618  0008A0  C07B  FFDF         	movff	sprintf@c,indf2
  1619  0008A4  D351               	goto	L9
  1620  0008A6                     l3900:
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;doprnt.c: 552: }
  1624                           ;doprnt.c: 557: flag = 0;
  1625  0008A6  0E00               	movlw	0
  1626  0008A8  0100               	movlb	0	; () banked
  1627  0008AA  0100               	movlb	0	; () banked
  1628  0008AC  6F6E               	movwf	(sprintf@flag+1)& (0+255),b
  1629  0008AE  0E00               	movlw	0
  1630  0008B0  0100               	movlb	0	; () banked
  1631  0008B2  6F6D               	movwf	sprintf@flag& (0+255),b
  1632                           
  1633                           ;doprnt.c: 644: switch(c = *f++) {
  1634  0008B4  D004               	goto	l3906
  1635  0008B6                     l3902:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;doprnt.c: 672: flag |= 0x400;
  1639  0008B6  0100               	movlb	0	; () banked
  1640  0008B8  0100               	movlb	0	; () banked
  1641  0008BA  856E               	bsf	(sprintf@flag+1)& (0+255),2,b
  1642                           
  1643                           ;doprnt.c: 673: break;
  1644  0008BC  D013               	goto	l3908
  1645  0008BE                     l3906:
  1646                           
  1647                           ; BSR set to: 0
  1648  0008BE  C04D  FFF6         	movff	sprintf@f,tblptrl
  1649  0008C2  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  1650  0008C6  4A4D               	infsnz	sprintf@f,f,c
  1651  0008C8  2A4E               	incf	sprintf@f+1,f,c
  1652  0008CA  0008               	tblrd		*
  1653  0008CC  0100               	movlb	0	; () banked
  1654  0008CE  CFF5 F07B          	movff	tablat,sprintf@c
  1655  0008D2  0100               	movlb	0	; () banked
  1656  0008D4  517B               	movf	sprintf@c& (0+255),w,b
  1657                           
  1658                           ; Switch size 1, requested type "space"
  1659                           ; Number of cases is 2, Range of values is 0 to 102
  1660                           ; switch strategies available:
  1661                           ; Name         Instructions Cycles
  1662                           ; simple_byte            7     4 (average)
  1663                           ;	Chosen strategy is simple_byte
  1664  0008D6  0A00               	xorlw	0	; case 0
  1665  0008D8  B4D8               	btfsc	status,2,c
  1666  0008DA  D345               	goto	l4066
  1667  0008DC  0A66               	xorlw	102	; case 102
  1668  0008DE  B4D8               	btfsc	status,2,c
  1669  0008E0  D7EA               	goto	l3902
  1670  0008E2  D334               	goto	l4064
  1671  0008E4                     l3908:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;doprnt.c: 834: if(flag & (0x700)) {
  1675  0008E4  0E07               	movlw	7
  1676  0008E6  0100               	movlb	0	; () banked
  1677  0008E8  0100               	movlb	0	; () banked
  1678  0008EA  156E               	andwf	(sprintf@flag+1)& (0+255),w,b
  1679  0008EC  B4D8               	btfsc	status,2,c
  1680  0008EE  D318               	goto	l4058
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;doprnt.c: 838: prec = 6;
  1684  0008F0  0E00               	movlw	0
  1685  0008F2  0100               	movlb	0	; () banked
  1686  0008F4  0100               	movlb	0	; () banked
  1687  0008F6  6F70               	movwf	(sprintf@prec+1)& (0+255),b
  1688  0008F8  0E06               	movlw	6
  1689  0008FA  0100               	movlb	0	; () banked
  1690  0008FC  6F6F               	movwf	sprintf@prec& (0+255),b
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1694  0008FE  C067  FFD9         	movff	sprintf@ap,fsr2l
  1695  000902  C068  FFDA         	movff	sprintf@ap+1,fsr2h
  1696  000906  0100               	movlb	0	; () banked
  1697  000908  CFDE F07C          	movff	postinc2,sprintf@fval
  1698  00090C  0100               	movlb	0	; () banked
  1699  00090E  CFDE F07D          	movff	postinc2,sprintf@fval+1
  1700  000912  0100               	movlb	0	; () banked
  1701  000914  CFDD F07E          	movff	postdec2,sprintf@fval+2
  1702                           
  1703                           ; BSR set to: 0
  1704  000918  0E03               	movlw	3
  1705  00091A  0100               	movlb	0	; () banked
  1706  00091C  0100               	movlb	0	; () banked
  1707  00091E  2767               	addwf	sprintf@ap& (0+255),f,b
  1708  000920  0E00               	movlw	0
  1709  000922  0100               	movlb	0	; () banked
  1710  000924  2368               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;doprnt.c: 840: if(fval < 0.0) {
  1714  000926  0100               	movlb	0	; () banked
  1715  000928  0100               	movlb	0	; () banked
  1716  00092A  517E               	movf	(sprintf@fval+2)& (0+255),w,b
  1717  00092C  0A80               	xorlw	128
  1718  00092E  0F80               	addlw	128
  1719  000930  E107               	bnz	u2525
  1720  000932  0E00               	movlw	0
  1721  000934  0100               	movlb	0	; () banked
  1722  000936  5D7D               	subwf	(sprintf@fval+1)& (0+255),w,b
  1723  000938  E103               	bnz	u2525
  1724  00093A  0E00               	movlw	0
  1725  00093C  0100               	movlb	0	; () banked
  1726  00093E  5D7C               	subwf	sprintf@fval& (0+255),w,b
  1727  000940                     u2525:
  1728  000940  B0D8               	btfsc	status,0,c
  1729  000942  D012               	goto	l3922
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;doprnt.c: 841: fval = -fval;
  1733  000944  C07C  F009         	movff	sprintf@fval,?___ftneg
  1734  000948  C07D  F00A         	movff	sprintf@fval+1,?___ftneg+1
  1735  00094C  C07E  F00B         	movff	sprintf@fval+2,?___ftneg+2
  1736  000950  EC13  F013         	call	___ftneg	;wreg free
  1737  000954  C00B  F07E         	movff	?___ftneg+2,sprintf@fval+2
  1738  000958  C00A  F07D         	movff	?___ftneg+1,sprintf@fval+1
  1739  00095C  C009  F07C         	movff	?___ftneg,sprintf@fval
  1740                           
  1741                           ;doprnt.c: 842: flag |= 0x03;
  1742  000960  0E03               	movlw	3
  1743  000962  0100               	movlb	0	; () banked
  1744  000964  0100               	movlb	0	; () banked
  1745  000966  136D               	iorwf	sprintf@flag& (0+255),f,b
  1746  000968                     l3922:
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;doprnt.c: 843: }
  1750                           ;doprnt.c: 844: exp = 0;
  1751  000968  0E00               	movlw	0
  1752  00096A  0100               	movlb	0	; () banked
  1753  00096C  0100               	movlb	0	; () banked
  1754  00096E  6F7A               	movwf	(sprintf@exp+1)& (0+255),b
  1755  000970  0E00               	movlw	0
  1756  000972  0100               	movlb	0	; () banked
  1757  000974  6F79               	movwf	sprintf@exp& (0+255),b
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;doprnt.c: 845: if( fval!=0) {
  1761  000976  0E7F               	movlw	127
  1762  000978  0100               	movlb	0	; () banked
  1763  00097A  0100               	movlb	0	; () banked
  1764  00097C  157E               	andwf	(sprintf@fval+2)& (0+255),w,b
  1765  00097E  0100               	movlb	0	; () banked
  1766  000980  117D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1767  000982  0100               	movlb	0	; () banked
  1768  000984  117C               	iorwf	sprintf@fval& (0+255),w,b
  1769  000986  B4D8               	btfsc	status,2,c
  1770  000988  D091               	goto	l3950
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1774  00098A  0E82               	movlw	130
  1775  00098C  6E52               	movwf	??_sprintf& (0+255),c
  1776  00098E  0EFF               	movlw	255
  1777  000990  6E53               	movwf	(??_sprintf+1)& (0+255),c
  1778  000992  0100               	movlb	0	; () banked
  1779  000994  C07C  F054         	movff	sprintf@fval,??_sprintf+2
  1780  000998  0100               	movlb	0	; () banked
  1781  00099A  C07D  F055         	movff	sprintf@fval+1,??_sprintf+3
  1782  00099E  0100               	movlb	0	; () banked
  1783  0009A0  C07E  F056         	movff	sprintf@fval+2,??_sprintf+4
  1784  0009A4  0100               	movlb	0	; () banked
  1785  0009A6  C07F  F057         	movff	sprintf@fval+3,??_sprintf+5
  1786  0009AA  0E10               	movlw	16
  1787  0009AC  D005               	goto	u2540
  1788  0009AE                     u2545:
  1789  0009AE  90D8               	bcf	status,0,c
  1790  0009B0  3257               	rrcf	??_sprintf+5,f,c
  1791  0009B2  3256               	rrcf	??_sprintf+4,f,c
  1792  0009B4  3255               	rrcf	??_sprintf+3,f,c
  1793  0009B6  3254               	rrcf	??_sprintf+2,f,c
  1794  0009B8                     u2540:
  1795  0009B8  2EE8               	decfsz	wreg,f,c
  1796  0009BA  D7F9               	goto	u2545
  1797  0009BC  5054               	movf	??_sprintf+2,w,c
  1798  0009BE  2452               	addwf	??_sprintf,w,c
  1799  0009C0  0100               	movlb	0	; () banked
  1800  0009C2  0100               	movlb	0	; () banked
  1801  0009C4  6F79               	movwf	sprintf@exp& (0+255),b
  1802  0009C6  0100               	movlb	0	; () banked
  1803  0009C8  0E00               	movlw	0
  1804  0009CA  2053               	addwfc	??_sprintf+1,w,c
  1805  0009CC  6F7A               	movwf	(sprintf@exp+1)& (0+255),b
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;doprnt.c: 847: exp--;
  1809  0009CE  0100               	movlb	0	; () banked
  1810  0009D0  0100               	movlb	0	; () banked
  1811  0009D2  0779               	decf	sprintf@exp& (0+255),f,b
  1812  0009D4  A0D8               	btfss	status,0,c
  1813  0009D6  077A               	decf	(sprintf@exp+1)& (0+255),f,b
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;doprnt.c: 848: exp *= 3;
  1817  0009D8  C079  F011         	movff	sprintf@exp,?___wmul
  1818  0009DC  C07A  F012         	movff	sprintf@exp+1,?___wmul+1
  1819  0009E0  0E00               	movlw	0
  1820  0009E2  6E14               	movwf	?___wmul+3,c
  1821  0009E4  0E03               	movlw	3
  1822  0009E6  6E13               	movwf	?___wmul+2,c
  1823  0009E8  EC83  F012         	call	___wmul	;wreg free
  1824  0009EC  C011  F079         	movff	?___wmul,sprintf@exp
  1825  0009F0  C012  F07A         	movff	?___wmul+1,sprintf@exp+1
  1826                           
  1827                           ;doprnt.c: 849: exp /= 10;
  1828  0009F4  C079  F008         	movff	sprintf@exp,?___awdiv
  1829  0009F8  C07A  F009         	movff	sprintf@exp+1,?___awdiv+1
  1830  0009FC  0E00               	movlw	0
  1831  0009FE  6E0B               	movwf	?___awdiv+3,c
  1832  000A00  0E0A               	movlw	10
  1833  000A02  6E0A               	movwf	?___awdiv+2,c
  1834  000A04  ECB4  F010         	call	___awdiv	;wreg free
  1835  000A08  C008  F079         	movff	?___awdiv,sprintf@exp
  1836  000A0C  C009  F07A         	movff	?___awdiv+1,sprintf@exp+1
  1837                           
  1838                           ;doprnt.c: 850: if(exp < 0)
  1839  000A10  0100               	movlb	0	; () banked
  1840  000A12  0100               	movlb	0	; () banked
  1841  000A14  AF7A               	btfss	(sprintf@exp+1)& (0+255),7,b
  1842  000A16  D005               	goto	l3938
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;doprnt.c: 851: exp--;
  1846  000A18  0100               	movlb	0	; () banked
  1847  000A1A  0100               	movlb	0	; () banked
  1848  000A1C  0779               	decf	sprintf@exp& (0+255),f,b
  1849  000A1E  A0D8               	btfss	status,0,c
  1850  000A20  077A               	decf	(sprintf@exp+1)& (0+255),f,b
  1851  000A22                     l3938:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;doprnt.c: 855: integ = scale(-exp);
  1855  000A22  0100               	movlb	0	; () banked
  1856  000A24  0100               	movlb	0	; () banked
  1857  000A26  5179               	movf	sprintf@exp& (0+255),w,b
  1858  000A28  0800               	sublw	0
  1859  000A2A  6E37               	movwf	?_scale,c
  1860  000A2C  ECBA  F007         	call	_scale	;wreg free
  1861  000A30  C039  F078         	movff	?_scale+2,sprintf@integ+2
  1862  000A34  C038  F077         	movff	?_scale+1,sprintf@integ+1
  1863  000A38  C037  F076         	movff	?_scale,sprintf@integ
  1864                           
  1865                           ;doprnt.c: 856: integ *= fval;
  1866  000A3C  0100               	movlb	0	; () banked
  1867  000A3E  0E00               	movlw	high sprintf@integ
  1868  000A40  6E38               	movwf	?___asftmul+1,c
  1869  000A42  0100               	movlb	0	; () banked
  1870  000A44  0E76               	movlw	low sprintf@integ
  1871  000A46  6E37               	movwf	?___asftmul,c
  1872  000A48  C07C  F039         	movff	sprintf@fval,?___asftmul+2
  1873  000A4C  C07D  F03A         	movff	sprintf@fval+1,?___asftmul+3
  1874  000A50  C07E  F03B         	movff	sprintf@fval+2,?___asftmul+4
  1875  000A54  EC47  F012         	call	___asftmul	;wreg free
  1876                           
  1877                           ;doprnt.c: 857: if(integ < 1.0)
  1878  000A58  C076  F001         	movff	sprintf@integ,?___ftge
  1879  000A5C  C077  F002         	movff	sprintf@integ+1,?___ftge+1
  1880  000A60  C078  F003         	movff	sprintf@integ+2,?___ftge+2
  1881  000A64  0E00               	movlw	0
  1882  000A66  6E04               	movwf	?___ftge+3,c
  1883  000A68  0E80               	movlw	128
  1884  000A6A  6E05               	movwf	?___ftge+4,c
  1885  000A6C  0E3F               	movlw	63
  1886  000A6E  6E06               	movwf	?___ftge+5,c
  1887  000A70  EC6C  F010         	call	___ftge	;wreg free
  1888  000A74  B0D8               	btfsc	status,0,c
  1889  000A76  D006               	goto	l3946
  1890                           
  1891                           ;doprnt.c: 858: exp--;
  1892  000A78  0100               	movlb	0	; () banked
  1893  000A7A  0100               	movlb	0	; () banked
  1894  000A7C  0779               	decf	sprintf@exp& (0+255),f,b
  1895  000A7E  A0D8               	btfss	status,0,c
  1896  000A80  077A               	decf	(sprintf@exp+1)& (0+255),f,b
  1897  000A82  D014               	goto	l3950
  1898  000A84                     l3946:
  1899                           
  1900                           ;doprnt.c: 859: else if(integ >= 10.0)
  1901  000A84  C076  F001         	movff	sprintf@integ,?___ftge
  1902  000A88  C077  F002         	movff	sprintf@integ+1,?___ftge+1
  1903  000A8C  C078  F003         	movff	sprintf@integ+2,?___ftge+2
  1904  000A90  0E00               	movlw	0
  1905  000A92  6E04               	movwf	?___ftge+3,c
  1906  000A94  0E20               	movlw	32
  1907  000A96  6E05               	movwf	?___ftge+4,c
  1908  000A98  0E41               	movlw	65
  1909  000A9A  6E06               	movwf	?___ftge+5,c
  1910  000A9C  EC6C  F010         	call	___ftge	;wreg free
  1911  000AA0  A0D8               	btfss	status,0,c
  1912  000AA2  D004               	goto	l3950
  1913                           
  1914                           ;doprnt.c: 860: exp++;
  1915  000AA4  0100               	movlb	0	; () banked
  1916  000AA6  0100               	movlb	0	; () banked
  1917  000AA8  4B79               	infsnz	sprintf@exp& (0+255),f,b
  1918  000AAA  2B7A               	incf	(sprintf@exp+1)& (0+255),f,b
  1919  000AAC                     l3950:
  1920                           
  1921                           ;doprnt.c: 861: }
  1922                           ;doprnt.c: 1121: if(prec <= 12)
  1923  000AAC  0100               	movlb	0	; () banked
  1924  000AAE  0100               	movlb	0	; () banked
  1925  000AB0  5170               	movf	(sprintf@prec+1)& (0+255),w,b
  1926  000AB2  0A80               	xorlw	128
  1927  000AB4  0F80               	addlw	-128
  1928  000AB6  0E0D               	movlw	13
  1929  000AB8  B4D8               	btfsc	status,2,c
  1930  000ABA  5D6F               	subwf	sprintf@prec& (0+255),w,b
  1931  000ABC  B0D8               	btfsc	status,0,c
  1932  000ABE  D012               	goto	l3954
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;doprnt.c: 1122: fval += fround(prec);
  1936  000AC0  0100               	movlb	0	; () banked
  1937  000AC2  0E00               	movlw	high sprintf@fval
  1938  000AC4  6E47               	movwf	?___asftadd+1,c
  1939  000AC6  0100               	movlb	0	; () banked
  1940  000AC8  0E7C               	movlw	low sprintf@fval
  1941  000ACA  6E46               	movwf	?___asftadd,c
  1942  000ACC  C06F  F037         	movff	sprintf@prec,?_fround
  1943  000AD0  EC68  F00B         	call	_fround	;wreg free
  1944  000AD4  C039  F04A         	movff	?_fround+2,?___asftadd+4
  1945  000AD8  C038  F049         	movff	?_fround+1,?___asftadd+3
  1946  000ADC  C037  F048         	movff	?_fround,?___asftadd+2
  1947  000AE0  EC65  F012         	call	___asftadd	;wreg free
  1948  000AE4                     l3954:
  1949                           
  1950                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1951  000AE4  0100               	movlb	0	; () banked
  1952  000AE6  0100               	movlb	0	; () banked
  1953  000AE8  517A               	movf	(sprintf@exp+1)& (0+255),w,b
  1954  000AEA  0A80               	xorlw	128
  1955  000AEC  0F80               	addlw	-128
  1956  000AEE  0E0A               	movlw	10
  1957  000AF0  B4D8               	btfsc	status,2,c
  1958  000AF2  5D79               	subwf	sprintf@exp& (0+255),w,b
  1959  000AF4  B0D8               	btfsc	status,0,c
  1960  000AF6  D022               	goto	l3962
  1961                           
  1962                           ; BSR set to: 0
  1963  000AF8  0E7F               	movlw	127
  1964  000AFA  0100               	movlb	0	; () banked
  1965  000AFC  0100               	movlb	0	; () banked
  1966  000AFE  157E               	andwf	(sprintf@fval+2)& (0+255),w,b
  1967  000B00  0100               	movlb	0	; () banked
  1968  000B02  117D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1969  000B04  0100               	movlb	0	; () banked
  1970  000B06  117C               	iorwf	sprintf@fval& (0+255),w,b
  1971  000B08  B4D8               	btfsc	status,2,c
  1972  000B0A  D067               	goto	l3978
  1973                           
  1974                           ; BSR set to: 0
  1975  000B0C  C07C  F017         	movff	sprintf@fval,?___fttol
  1976  000B10  C07D  F018         	movff	sprintf@fval+1,?___fttol+1
  1977  000B14  C07E  F019         	movff	sprintf@fval+2,?___fttol+2
  1978  000B18  ECA0  F00F         	call	___fttol	;wreg free
  1979  000B1C  501A               	movf	?___fttol+3,w,c
  1980  000B1E  1017               	iorwf	?___fttol,w,c
  1981  000B20  1018               	iorwf	?___fttol+1,w,c
  1982  000B22  1019               	iorwf	?___fttol+2,w,c
  1983  000B24  A4D8               	btfss	status,2,c
  1984  000B26  D059               	goto	l3978
  1985  000B28  0100               	movlb	0	; () banked
  1986  000B2A  0100               	movlb	0	; () banked
  1987  000B2C  517A               	movf	(sprintf@exp+1)& (0+255),w,b
  1988  000B2E  0A80               	xorlw	128
  1989  000B30  0F80               	addlw	-128
  1990  000B32  0E02               	movlw	2
  1991  000B34  B4D8               	btfsc	status,2,c
  1992  000B36  5D79               	subwf	sprintf@exp& (0+255),w,b
  1993  000B38  A0D8               	btfss	status,0,c
  1994  000B3A  D04F               	goto	l3978
  1995  000B3C                     l3962:
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;doprnt.c: 1129: if(integ < 4.294967296){
  1999  000B3C  C076  F001         	movff	sprintf@integ,?___ftge
  2000  000B40  C077  F002         	movff	sprintf@integ+1,?___ftge+1
  2001  000B44  C078  F003         	movff	sprintf@integ+2,?___ftge+2
  2002  000B48  0E70               	movlw	112
  2003  000B4A  6E04               	movwf	?___ftge+3,c
  2004  000B4C  0E89               	movlw	137
  2005  000B4E  6E05               	movwf	?___ftge+4,c
  2006  000B50  0E40               	movlw	64
  2007  000B52  6E06               	movwf	?___ftge+5,c
  2008  000B54  EC6C  F010         	call	___ftge	;wreg free
  2009  000B58  B0D8               	btfsc	status,0,c
  2010  000B5A  D003               	goto	l3966
  2011                           
  2012                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2013  000B5C  0100               	movlb	0	; () banked
  2014  000B5E  0EF7               	movlw	247
  2015  000B60  D002               	goto	L10
  2016  000B62                     l3966:
  2017                           
  2018                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2019  000B62  0100               	movlb	0	; () banked
  2020  000B64  0EF8               	movlw	248
  2021  000B66                     L10:
  2022  000B66  0100               	movlb	0	; () banked
  2023  000B68  2779               	addwf	sprintf@exp& (0+255),f,b
  2024  000B6A  0EFF               	movlw	255
  2025  000B6C  0100               	movlb	0	; () banked
  2026  000B6E  237A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;doprnt.c: 1133: }
  2030                           ;doprnt.c: 1134: integ = scale(exp);
  2031                           
  2032                           ; BSR set to: 0
  2033  000B70  C079  F037         	movff	sprintf@exp,?_scale
  2034  000B74  ECBA  F007         	call	_scale	;wreg free
  2035  000B78  C039  F078         	movff	?_scale+2,sprintf@integ+2
  2036  000B7C  C038  F077         	movff	?_scale+1,sprintf@integ+1
  2037  000B80  C037  F076         	movff	?_scale,sprintf@integ
  2038                           
  2039                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2040  000B84  C07C  F001         	movff	sprintf@fval,?__tdiv_to_l_
  2041  000B88  C07D  F002         	movff	sprintf@fval+1,?__tdiv_to_l_+1
  2042  000B8C  C07E  F003         	movff	sprintf@fval+2,?__tdiv_to_l_+2
  2043  000B90  C076  F004         	movff	sprintf@integ,?__tdiv_to_l_+3
  2044  000B94  C077  F005         	movff	sprintf@integ+1,?__tdiv_to_l_+4
  2045  000B98  C078  F006         	movff	sprintf@integ+2,?__tdiv_to_l_+5
  2046  000B9C  EC8E  F00D         	call	__tdiv_to_l_	;wreg free
  2047  000BA0  C004  F066         	movff	?__tdiv_to_l_+3,_sprintf$204+3
  2048  000BA4  C003  F065         	movff	?__tdiv_to_l_+2,_sprintf$204+2
  2049  000BA8  C002  F064         	movff	?__tdiv_to_l_+1,_sprintf$204+1
  2050  000BAC  C001  F063         	movff	?__tdiv_to_l_,_sprintf$204
  2051  000BB0  C063  F071         	movff	_sprintf$204,sprintf@_val
  2052  000BB4  C064  F072         	movff	_sprintf$204+1,sprintf@_val+1
  2053  000BB8  C065  F073         	movff	_sprintf$204+2,sprintf@_val+2
  2054  000BBC  C066  F074         	movff	_sprintf$204+3,sprintf@_val+3
  2055                           
  2056                           ;doprnt.c: 1138: fval = 0.0;
  2057  000BC0  0E00               	movlw	0
  2058  000BC2  0100               	movlb	0	; () banked
  2059  000BC4  0100               	movlb	0	; () banked
  2060  000BC6  6F7C               	movwf	sprintf@fval& (0+255),b
  2061  000BC8  0E00               	movlw	0
  2062  000BCA  0100               	movlb	0	; () banked
  2063  000BCC  0100               	movlb	0	; () banked
  2064  000BCE  6F7D               	movwf	(sprintf@fval+1)& (0+255),b
  2065  000BD0  0E00               	movlw	0
  2066  000BD2  0100               	movlb	0	; () banked
  2067  000BD4  0100               	movlb	0	; () banked
  2068  000BD6  6F7E               	movwf	(sprintf@fval+2)& (0+255),b
  2069                           
  2070                           ;doprnt.c: 1139: } else {
  2071  000BD8  D02F               	goto	l3984
  2072  000BDA                     l3978:
  2073                           
  2074                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2075  000BDA  C07C  F017         	movff	sprintf@fval,?___fttol
  2076  000BDE  C07D  F018         	movff	sprintf@fval+1,?___fttol+1
  2077  000BE2  C07E  F019         	movff	sprintf@fval+2,?___fttol+2
  2078  000BE6  ECA0  F00F         	call	___fttol	;wreg free
  2079  000BEA  C01A  F074         	movff	?___fttol+3,sprintf@_val+3
  2080  000BEE  C019  F073         	movff	?___fttol+2,sprintf@_val+2
  2081  000BF2  C018  F072         	movff	?___fttol+1,sprintf@_val+1
  2082  000BF6  C017  F071         	movff	?___fttol,sprintf@_val
  2083                           
  2084                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2085  000BFA  0100               	movlb	0	; () banked
  2086  000BFC  0E00               	movlw	high sprintf@fval
  2087  000BFE  6E32               	movwf	?___asftsub+1,c
  2088  000C00  0100               	movlb	0	; () banked
  2089  000C02  0E7C               	movlw	low sprintf@fval
  2090  000C04  6E31               	movwf	?___asftsub,c
  2091  000C06  C071  F009         	movff	sprintf@_val,?___lltoft
  2092  000C0A  C072  F00A         	movff	sprintf@_val+1,?___lltoft+1
  2093  000C0E  C073  F00B         	movff	sprintf@_val+2,?___lltoft+2
  2094  000C12  C074  F00C         	movff	sprintf@_val+3,?___lltoft+3
  2095  000C16  ECB2  F011         	call	___lltoft	;wreg free
  2096  000C1A  C00B  F035         	movff	?___lltoft+2,?___asftsub+4
  2097  000C1E  C00A  F034         	movff	?___lltoft+1,?___asftsub+3
  2098  000C22  C009  F033         	movff	?___lltoft,?___asftsub+2
  2099  000C26  EC29  F012         	call	___asftsub	;wreg free
  2100                           
  2101                           ;doprnt.c: 1142: exp = 0;
  2102  000C2A  0E00               	movlw	0
  2103  000C2C  0100               	movlb	0	; () banked
  2104  000C2E  0100               	movlb	0	; () banked
  2105  000C30  6F7A               	movwf	(sprintf@exp+1)& (0+255),b
  2106  000C32  0E00               	movlw	0
  2107  000C34  0100               	movlb	0	; () banked
  2108  000C36  6F79               	movwf	sprintf@exp& (0+255),b
  2109  000C38                     l3984:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;doprnt.c: 1143: }
  2113                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2114  000C38  6E52               	movwf	??_sprintf& (0+255),c
  2115  000C3A  0E01               	movlw	1
  2116  000C3C  0100               	movlb	0	; () banked
  2117  000C3E  0100               	movlb	0	; () banked
  2118  000C40  6F7B               	movwf	sprintf@c& (0+255),b
  2119  000C42  5052               	movf	??_sprintf& (0+255),w,c
  2120  000C44                     
  2121                           ; BSR set to: 0
  2122  000C44  0100               	movlb	0	; () banked
  2123  000C46  0100               	movlb	0	; () banked
  2124  000C48  517B               	movf	sprintf@c& (0+255),w,b
  2125  000C4A  0A0A               	xorlw	10
  2126  000C4C  B4D8               	btfsc	status,2,c
  2127  000C4E  D021               	goto	l3998
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2131                           
  2132                           ; BSR set to: 0
  2133                           
  2134                           ; BSR set to: 0
  2135  000C50  0100               	movlb	0	; () banked
  2136  000C52  0100               	movlb	0	; () banked
  2137  000C54  517B               	movf	sprintf@c& (0+255),w,b
  2138  000C56  0D04               	mullw	4
  2139  000C58  0E00               	movlw	low _dpowers
  2140  000C5A  24F3               	addwf	prodl,w,c
  2141  000C5C  6EF6               	movwf	tblptrl,c
  2142  000C5E  0E08               	movlw	high _dpowers
  2143  000C60  20F4               	addwfc	prodh,w,c
  2144  000C62  6EF7               	movwf	tblptrh,c
  2145  000C64  0009               	tblrd		*+
  2146  000C66  50F5               	movf	tablat,w,c
  2147  000C68  0100               	movlb	0	; () banked
  2148  000C6A  0100               	movlb	0	; () banked
  2149  000C6C  5D71               	subwf	sprintf@_val& (0+255),w,b
  2150  000C6E  0009               	tblrd		*+
  2151  000C70  50F5               	movf	tablat,w,c
  2152  000C72  0100               	movlb	0	; () banked
  2153  000C74  5972               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2154  000C76  0009               	tblrd		*+
  2155  000C78  50F5               	movf	tablat,w,c
  2156  000C7A  0100               	movlb	0	; () banked
  2157  000C7C  5973               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2158  000C7E  0009               	tblrd		*+
  2159  000C80  50F5               	movf	tablat,w,c
  2160  000C82  0100               	movlb	0	; () banked
  2161  000C84  5974               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2162  000C86  A0D8               	btfss	status,0,c
  2163  000C88  D004               	goto	l3998
  2164                           
  2165                           ; BSR set to: 0
  2166                           
  2167                           ; BSR set to: 0
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;doprnt.c: 1147: break;
  2171  000C8A  0100               	movlb	0	; () banked
  2172  000C8C  0100               	movlb	0	; () banked
  2173  000C8E  2B7B               	incf	sprintf@c& (0+255),f,b
  2174  000C90  D7D9               	goto	L11
  2175  000C92                     l3998:
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;doprnt.c: 1182: {
  2179                           ;doprnt.c: 1195: if(flag & 0x03)
  2180  000C92  0E03               	movlw	3
  2181  000C94  0100               	movlb	0	; () banked
  2182  000C96  0100               	movlb	0	; () banked
  2183  000C98  156D               	andwf	sprintf@flag& (0+255),w,b
  2184  000C9A  6E52               	movwf	??_sprintf& (0+255),c
  2185  000C9C  0E00               	movlw	0
  2186  000C9E  0100               	movlb	0	; () banked
  2187  000CA0  0100               	movlb	0	; () banked
  2188  000CA2  156E               	andwf	(sprintf@flag+1)& (0+255),w,b
  2189  000CA4  6E53               	movwf	(??_sprintf+1)& (0+255),c
  2190  000CA6  5053               	movf	??_sprintf+1,w,c
  2191  000CA8  1052               	iorwf	??_sprintf,w,c
  2192  000CAA  B4D8               	btfsc	status,2,c
  2193  000CAC  D043               	goto	l4012
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;doprnt.c: 1197: ((*sp++ = ('-')));
  2197  000CAE  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2198  000CB2  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2199  000CB6  0E2D               	movlw	45
  2200  000CB8  D03A               	goto	L12
  2201  000CBA                     l4004:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;doprnt.c: 1207: {
  2205                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
  2206  000CBA  C071  F001         	movff	sprintf@_val,?___lldiv
  2207  000CBE  C072  F002         	movff	sprintf@_val+1,?___lldiv+1
  2208  000CC2  C073  F003         	movff	sprintf@_val+2,?___lldiv+2
  2209  000CC6  C074  F004         	movff	sprintf@_val+3,?___lldiv+3
  2210  000CCA  0100               	movlb	0	; () banked
  2211  000CCC  0100               	movlb	0	; () banked
  2212  000CCE  517B               	movf	sprintf@c& (0+255),w,b
  2213  000CD0  0D04               	mullw	4
  2214  000CD2  0E00               	movlw	low _dpowers
  2215  000CD4  24F3               	addwf	prodl,w,c
  2216  000CD6  6EF6               	movwf	tblptrl,c
  2217  000CD8  0E08               	movlw	high _dpowers
  2218  000CDA  20F4               	addwfc	prodh,w,c
  2219  000CDC  6EF7               	movwf	tblptrh,c
  2220  000CDE  0009               	tblrd		*+
  2221  000CE0  CFF5 F005          	movff	tablat,?___lldiv+4
  2222  000CE4  0009               	tblrd		*+
  2223  000CE6  CFF5 F006          	movff	tablat,?___lldiv+5
  2224  000CEA  0009               	tblrd		*+
  2225  000CEC  CFF5 F007          	movff	tablat,?___lldiv+6
  2226  000CF0  000A               	tblrd		*-
  2227  000CF2  CFF5 F008          	movff	tablat,?___lldiv+7
  2228  000CF6  ECFC  F010         	call	___lldiv	;wreg free
  2229  000CFA  C001  F069         	movff	?___lldiv,sprintf@vd
  2230  000CFE  C002  F06A         	movff	?___lldiv+1,sprintf@vd+1
  2231                           
  2232                           ;doprnt.c: 1209: vd %= 10;
  2233  000D02  C069  F001         	movff	sprintf@vd,?___lwmod
  2234  000D06  C06A  F002         	movff	sprintf@vd+1,?___lwmod+1
  2235  000D0A  0E00               	movlw	0
  2236  000D0C  6E04               	movwf	?___lwmod+3,c
  2237  000D0E  0E0A               	movlw	10
  2238  000D10  6E03               	movwf	?___lwmod+2,c
  2239  000D12  ECE4  F011         	call	___lwmod	;wreg free
  2240  000D16  C001  F069         	movff	?___lwmod,sprintf@vd
  2241  000D1A  C002  F06A         	movff	?___lwmod+1,sprintf@vd+1
  2242                           
  2243                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
  2244  000D1E  0100               	movlb	0	; () banked
  2245  000D20  0100               	movlb	0	; () banked
  2246  000D22  5169               	movf	sprintf@vd& (0+255),w,b
  2247  000D24  0F30               	addlw	48
  2248  000D26  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2249  000D2A  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2250  000D2E                     L12:
  2251  000D2E  6EDF               	movwf	indf2,c
  2252                           
  2253                           ; BSR set to: 0
  2254  000D30  4A4B               	infsnz	sprintf@sp,f,c
  2255  000D32  2A4C               	incf	sprintf@sp+1,f,c
  2256  000D34                     l4012:
  2257                           
  2258                           ; BSR set to: 0
  2259  000D34  0100               	movlb	0	; () banked
  2260  000D36  0100               	movlb	0	; () banked
  2261  000D38  077B               	decf	sprintf@c& (0+255),f,b
  2262  000D3A  0100               	movlb	0	; () banked
  2263  000D3C  297B               	incf	sprintf@c& (0+255),w,b
  2264  000D3E  B4D8               	btfsc	status,2,c
  2265  000D40  D00E               	goto	l4020
  2266  000D42  D7BB               	goto	l4004
  2267  000D44                     l4014:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;doprnt.c: 1215: ((*sp++ = ('0')));
  2271  000D44  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2272  000D48  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2273  000D4C  0E30               	movlw	48
  2274  000D4E  6EDF               	movwf	indf2,c
  2275                           
  2276                           ; BSR set to: 0
  2277  000D50  4A4B               	infsnz	sprintf@sp,f,c
  2278  000D52  2A4C               	incf	sprintf@sp+1,f,c
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;doprnt.c: 1216: exp--;
  2282  000D54  0100               	movlb	0	; () banked
  2283  000D56  0100               	movlb	0	; () banked
  2284  000D58  0779               	decf	sprintf@exp& (0+255),f,b
  2285  000D5A  A0D8               	btfss	status,0,c
  2286  000D5C  077A               	decf	(sprintf@exp+1)& (0+255),f,b
  2287  000D5E                     l4020:
  2288                           
  2289                           ; BSR set to: 0
  2290  000D5E  0100               	movlb	0	; () banked
  2291  000D60  0100               	movlb	0	; () banked
  2292  000D62  517A               	movf	(sprintf@exp+1)& (0+255),w,b
  2293  000D64  0A80               	xorlw	128
  2294  000D66  0F80               	addlw	-128
  2295  000D68  0E01               	movlw	1
  2296  000D6A  B4D8               	btfsc	status,2,c
  2297  000D6C  5D79               	subwf	sprintf@exp& (0+255),w,b
  2298  000D6E  B0D8               	btfsc	status,0,c
  2299  000D70  D7E9               	goto	l4014
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;doprnt.c: 1217: }
  2303                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2304                           
  2305                           ; BSR set to: 0
  2306  000D72  0100               	movlb	0	; () banked
  2307  000D74  0100               	movlb	0	; () banked
  2308  000D76  5170               	movf	(sprintf@prec+1)& (0+255),w,b
  2309  000D78  0A80               	xorlw	128
  2310  000D7A  0F80               	addlw	-128
  2311  000D7C  0E09               	movlw	9
  2312  000D7E  B4D8               	btfsc	status,2,c
  2313  000D80  5D6F               	subwf	sprintf@prec& (0+255),w,b
  2314  000D82  A0D8               	btfss	status,0,c
  2315  000D84  D007               	goto	l171
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2319  000D86  6E52               	movwf	??_sprintf& (0+255),c
  2320  000D88  0E08               	movlw	8
  2321  000D8A  0100               	movlb	0	; () banked
  2322  000D8C  0100               	movlb	0	; () banked
  2323  000D8E  6F7B               	movwf	sprintf@c& (0+255),b
  2324  000D90  5052               	movf	??_sprintf& (0+255),w,c
  2325  000D92  D002               	goto	l4026
  2326  000D94                     l171:
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;doprnt.c: 1220: else
  2330                           ;doprnt.c: 1221: c = prec;
  2331  000D94  C06F  F07B         	movff	sprintf@prec,sprintf@c
  2332  000D98                     l4026:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;doprnt.c: 1222: prec -= c;
  2336  000D98  0100               	movlb	0	; () banked
  2337  000D9A  0100               	movlb	0	; () banked
  2338  000D9C  517B               	movf	sprintf@c& (0+255),w,b
  2339  000D9E  0100               	movlb	0	; () banked
  2340  000DA0  0100               	movlb	0	; () banked
  2341  000DA2  5F6F               	subwf	sprintf@prec& (0+255),f,b
  2342  000DA4  0E00               	movlw	0
  2343  000DA6  0100               	movlb	0	; () banked
  2344  000DA8  BF7B               	btfsc	sprintf@c& (0+255),7,b
  2345  000DAA  0EFF               	movlw	255
  2346  000DAC  0100               	movlb	0	; () banked
  2347  000DAE  0100               	movlb	0	; () banked
  2348  000DB0  5B70               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;doprnt.c: 1226: if(c)
  2352  000DB2  0100               	movlb	0	; () banked
  2353  000DB4  0100               	movlb	0	; () banked
  2354  000DB6  517B               	movf	sprintf@c& (0+255),w,b
  2355  000DB8  B4D8               	btfsc	status,2,c
  2356  000DBA  D008               	goto	l4034
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;doprnt.c: 1228: ((*sp++ = ('.')));
  2360  000DBC  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2361  000DC0  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2362  000DC4  0E2E               	movlw	46
  2363  000DC6  6EDF               	movwf	indf2,c
  2364                           
  2365                           ; BSR set to: 0
  2366  000DC8  4A4B               	infsnz	sprintf@sp,f,c
  2367  000DCA  2A4C               	incf	sprintf@sp+1,f,c
  2368  000DCC                     l4034:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  2372  000DCC  C07B  F037         	movff	sprintf@c,?_scale
  2373  000DD0  ECBA  F007         	call	_scale	;wreg free
  2374  000DD4  C039  F062         	movff	?_scale+2,_sprintf$808+2
  2375  000DD8  C038  F061         	movff	?_scale+1,_sprintf$808+1
  2376  000DDC  C037  F060         	movff	?_scale,_sprintf$808
  2377                           
  2378                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  2379  000DE0  C07C  F029         	movff	sprintf@fval,?___ftmul+3
  2380  000DE4  C07D  F02A         	movff	sprintf@fval+1,?___ftmul+4
  2381  000DE8  C07E  F02B         	movff	sprintf@fval+2,?___ftmul+5
  2382  000DEC  C060  F026         	movff	_sprintf$808,?___ftmul
  2383  000DF0  C061  F027         	movff	_sprintf$808+1,?___ftmul+1
  2384  000DF4  C062  F028         	movff	_sprintf$808+2,?___ftmul+2
  2385  000DF8  EC1F  F00E         	call	___ftmul	;wreg free
  2386  000DFC  C028  F019         	movff	?___ftmul+2,?___fttol+2
  2387  000E00  C027  F018         	movff	?___ftmul+1,?___fttol+1
  2388  000E04  C026  F017         	movff	?___ftmul,?___fttol
  2389  000E08  ECA0  F00F         	call	___fttol	;wreg free
  2390  000E0C  C01A  F074         	movff	?___fttol+3,sprintf@_val+3
  2391  000E10  C019  F073         	movff	?___fttol+2,sprintf@_val+2
  2392  000E14  C018  F072         	movff	?___fttol+1,sprintf@_val+1
  2393  000E18  C017  F071         	movff	?___fttol,sprintf@_val
  2394                           
  2395                           ;doprnt.c: 1235: while(c--) {
  2396  000E1C  D065               	goto	l4048
  2397  000E1E                     l4038:
  2398                           
  2399                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
  2400  000E1E  C071  F001         	movff	sprintf@_val,?___lldiv
  2401  000E22  C072  F002         	movff	sprintf@_val+1,?___lldiv+1
  2402  000E26  C073  F003         	movff	sprintf@_val+2,?___lldiv+2
  2403  000E2A  C074  F004         	movff	sprintf@_val+3,?___lldiv+3
  2404  000E2E  0100               	movlb	0	; () banked
  2405  000E30  0100               	movlb	0	; () banked
  2406  000E32  517B               	movf	sprintf@c& (0+255),w,b
  2407  000E34  0D04               	mullw	4
  2408  000E36  0E00               	movlw	low _dpowers
  2409  000E38  24F3               	addwf	prodl,w,c
  2410  000E3A  6EF6               	movwf	tblptrl,c
  2411  000E3C  0E08               	movlw	high _dpowers
  2412  000E3E  20F4               	addwfc	prodh,w,c
  2413  000E40  6EF7               	movwf	tblptrh,c
  2414  000E42  0009               	tblrd		*+
  2415  000E44  CFF5 F005          	movff	tablat,?___lldiv+4
  2416  000E48  0009               	tblrd		*+
  2417  000E4A  CFF5 F006          	movff	tablat,?___lldiv+5
  2418  000E4E  0009               	tblrd		*+
  2419  000E50  CFF5 F007          	movff	tablat,?___lldiv+6
  2420  000E54  000A               	tblrd		*-
  2421  000E56  CFF5 F008          	movff	tablat,?___lldiv+7
  2422  000E5A  ECFC  F010         	call	___lldiv	;wreg free
  2423  000E5E  C001  F06B         	movff	?___lldiv,sprintf@vd_206
  2424  000E62  C002  F06C         	movff	?___lldiv+1,sprintf@vd_206+1
  2425                           
  2426                           ;doprnt.c: 1237: vd %= 10;
  2427  000E66  C06B  F001         	movff	sprintf@vd_206,?___lwmod
  2428  000E6A  C06C  F002         	movff	sprintf@vd_206+1,?___lwmod+1
  2429  000E6E  0E00               	movlw	0
  2430  000E70  6E04               	movwf	?___lwmod+3,c
  2431  000E72  0E0A               	movlw	10
  2432  000E74  6E03               	movwf	?___lwmod+2,c
  2433  000E76  ECE4  F011         	call	___lwmod	;wreg free
  2434  000E7A  C001  F06B         	movff	?___lwmod,sprintf@vd_206
  2435  000E7E  C002  F06C         	movff	?___lwmod+1,sprintf@vd_206+1
  2436                           
  2437                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
  2438  000E82  0100               	movlb	0	; () banked
  2439  000E84  0100               	movlb	0	; () banked
  2440  000E86  516B               	movf	sprintf@vd_206& (0+255),w,b
  2441  000E88  0F30               	addlw	48
  2442  000E8A  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2443  000E8E  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2444  000E92  6EDF               	movwf	indf2,c
  2445                           
  2446                           ; BSR set to: 0
  2447  000E94  4A4B               	infsnz	sprintf@sp,f,c
  2448  000E96  2A4C               	incf	sprintf@sp+1,f,c
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;doprnt.c: 1239: _val._val %= dpowers[c];
  2452  000E98  C071  F001         	movff	sprintf@_val,?___llmod
  2453  000E9C  C072  F002         	movff	sprintf@_val+1,?___llmod+1
  2454  000EA0  C073  F003         	movff	sprintf@_val+2,?___llmod+2
  2455  000EA4  C074  F004         	movff	sprintf@_val+3,?___llmod+3
  2456  000EA8  0100               	movlb	0	; () banked
  2457  000EAA  0100               	movlb	0	; () banked
  2458  000EAC  517B               	movf	sprintf@c& (0+255),w,b
  2459  000EAE  0D04               	mullw	4
  2460  000EB0  0E00               	movlw	low _dpowers
  2461  000EB2  24F3               	addwf	prodl,w,c
  2462  000EB4  6EF6               	movwf	tblptrl,c
  2463  000EB6  0E08               	movlw	high _dpowers
  2464  000EB8  20F4               	addwfc	prodh,w,c
  2465  000EBA  6EF7               	movwf	tblptrh,c
  2466  000EBC  0009               	tblrd		*+
  2467  000EBE  CFF5 F005          	movff	tablat,?___llmod+4
  2468  000EC2  0009               	tblrd		*+
  2469  000EC4  CFF5 F006          	movff	tablat,?___llmod+5
  2470  000EC8  0009               	tblrd		*+
  2471  000ECA  CFF5 F007          	movff	tablat,?___llmod+6
  2472  000ECE  000A               	tblrd		*-
  2473  000ED0  CFF5 F008          	movff	tablat,?___llmod+7
  2474  000ED4  EC7D  F011         	call	___llmod	;wreg free
  2475  000ED8  C004  F074         	movff	?___llmod+3,sprintf@_val+3
  2476  000EDC  C003  F073         	movff	?___llmod+2,sprintf@_val+2
  2477  000EE0  C002  F072         	movff	?___llmod+1,sprintf@_val+1
  2478  000EE4  C001  F071         	movff	?___llmod,sprintf@_val
  2479  000EE8                     l4048:
  2480  000EE8  0100               	movlb	0	; () banked
  2481  000EEA  0100               	movlb	0	; () banked
  2482  000EEC  077B               	decf	sprintf@c& (0+255),f,b
  2483  000EEE  0100               	movlb	0	; () banked
  2484  000EF0  297B               	incf	sprintf@c& (0+255),w,b
  2485  000EF2  B4D8               	btfsc	status,2,c
  2486  000EF4  D00E               	goto	l4056
  2487  000EF6  D793               	goto	l4038
  2488  000EF8                     l4050:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;doprnt.c: 1243: ((*sp++ = ('0')));
  2492  000EF8  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2493  000EFC  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2494  000F00  0E30               	movlw	48
  2495  000F02  6EDF               	movwf	indf2,c
  2496                           
  2497                           ; BSR set to: 0
  2498  000F04  4A4B               	infsnz	sprintf@sp,f,c
  2499  000F06  2A4C               	incf	sprintf@sp+1,f,c
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;doprnt.c: 1244: prec--;
  2503  000F08  0100               	movlb	0	; () banked
  2504  000F0A  0100               	movlb	0	; () banked
  2505  000F0C  076F               	decf	sprintf@prec& (0+255),f,b
  2506  000F0E  A0D8               	btfss	status,0,c
  2507  000F10  0770               	decf	(sprintf@prec+1)& (0+255),f,b
  2508  000F12                     l4056:
  2509                           
  2510                           ; BSR set to: 0
  2511  000F12  0100               	movlb	0	; () banked
  2512  000F14  0100               	movlb	0	; () banked
  2513  000F16  5170               	movf	(sprintf@prec+1)& (0+255),w,b
  2514  000F18  116F               	iorwf	sprintf@prec& (0+255),w,b
  2515  000F1A  B4D8               	btfsc	status,2,c
  2516  000F1C  D017               	goto	l4064
  2517  000F1E  D7EC               	goto	l4050
  2518  000F20                     l4058:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;doprnt.c: 1253: }
  2522                           ;doprnt.c: 1429: {
  2523                           ;doprnt.c: 1445: if(flag & 0x03)
  2524  000F20  0E03               	movlw	3
  2525  000F22  0100               	movlb	0	; () banked
  2526  000F24  0100               	movlb	0	; () banked
  2527  000F26  156D               	andwf	sprintf@flag& (0+255),w,b
  2528  000F28  6E52               	movwf	??_sprintf& (0+255),c
  2529  000F2A  0E00               	movlw	0
  2530  000F2C  0100               	movlb	0	; () banked
  2531  000F2E  0100               	movlb	0	; () banked
  2532  000F30  156E               	andwf	(sprintf@flag+1)& (0+255),w,b
  2533  000F32  6E53               	movwf	(??_sprintf+1)& (0+255),c
  2534  000F34  5053               	movf	??_sprintf+1,w,c
  2535  000F36  1052               	iorwf	??_sprintf,w,c
  2536  000F38  B4D8               	btfsc	status,2,c
  2537  000F3A  D008               	goto	l4064
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  2541  000F3C  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2542  000F40  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2543  000F44  0E2D               	movlw	45
  2544  000F46  6EDF               	movwf	indf2,c
  2545  000F48                     L9:
  2546                           
  2547                           ; BSR set to: 0
  2548  000F48  4A4B               	infsnz	sprintf@sp,f,c
  2549  000F4A  2A4C               	incf	sprintf@sp+1,f,c
  2550  000F4C                     l4064:
  2551                           
  2552                           ; BSR set to: 0
  2553  000F4C  C04D  FFF6         	movff	sprintf@f,tblptrl
  2554  000F50  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  2555  000F54  4A4D               	infsnz	sprintf@f,f,c
  2556  000F56  2A4E               	incf	sprintf@f+1,f,c
  2557  000F58  0008               	tblrd		*
  2558  000F5A  0100               	movlb	0	; () banked
  2559  000F5C  CFF5 F07B          	movff	tablat,sprintf@c
  2560  000F60  0100               	movlb	0	; () banked
  2561  000F62  677B               	tstfsz	sprintf@c& (0+255),b
  2562  000F64  D492               	goto	l3894
  2563  000F66                     l4066:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;doprnt.c: 1545: *sp = 0;
  2567  000F66  C04B  FFD9         	movff	sprintf@sp,fsr2l
  2568  000F6A  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  2569  000F6E  0E00               	movlw	0
  2570  000F70  6EDF               	movwf	indf2,c
  2571                           
  2572                           ; BSR set to: 0
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;doprnt.c: 1547: return 0;
  2576                           ;	Return value of _sprintf is never used
  2577  000F72  0012               	return	
  2578  000F74                     __end_of_sprintf:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodh	equ	0xFF4
  2585                           prodl	equ	0xFF3
  2586                           wreg	equ	0xFE8
  2587                           indf2	equ	0xFDF
  2588                           postinc2	equ	0xFDE
  2589                           postdec2	equ	0xFDD
  2590                           fsr2h	equ	0xFDA
  2591                           fsr2l	equ	0xFD9
  2592                           status	equ	0xFD8
  2593                           
  2594 ;; *************** function ___lwmod *****************
  2595 ;; Defined at:
  2596 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\lwmod.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  dividend        2    0[COMRAM] unsigned int 
  2599 ;;  divisor         2    2[COMRAM] unsigned int 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  counter         1    5[COMRAM] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  2    0[COMRAM] unsigned int 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2611 ;;      Params:         4       0       0       0       0       0       0       0       0
  2612 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2613 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2614 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2615 ;;Total ram usage:        6 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_sprintf
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text6
  2625  0023C8                     __ptext6:
  2626                           	opt stack 0
  2627  0023C8                     ___lwmod:
  2628                           	opt stack 29
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;incstack = 0
  2632                           ;incstack = 0
  2633  0023C8  5004               	movf	___lwmod@divisor+1,w,c
  2634  0023CA  1003               	iorwf	___lwmod@divisor,w,c
  2635  0023CC  B4D8               	btfsc	status,2,c
  2636  0023CE  D01A               	goto	l732
  2637  0023D0  6E05               	movwf	??___lwmod& (0+255),c
  2638  0023D2  0E01               	movlw	1
  2639  0023D4  6E06               	movwf	___lwmod@counter,c
  2640  0023D6  5005               	movf	??___lwmod& (0+255),w,c
  2641  0023D8  D004               	goto	l3508
  2642  0023DA                     l3506:
  2643  0023DA  90D8               	bcf	status,0,c
  2644  0023DC  3603               	rlcf	___lwmod@divisor,f,c
  2645  0023DE  3604               	rlcf	___lwmod@divisor+1,f,c
  2646  0023E0  2A06               	incf	___lwmod@counter,f,c
  2647  0023E2                     l3508:
  2648  0023E2  AE04               	btfss	___lwmod@divisor+1,7,c
  2649  0023E4  D7FA               	goto	l3506
  2650  0023E6                     l3510:
  2651  0023E6  5003               	movf	___lwmod@divisor,w,c
  2652  0023E8  5C01               	subwf	___lwmod@dividend,w,c
  2653  0023EA  5004               	movf	___lwmod@divisor+1,w,c
  2654  0023EC  5802               	subwfb	___lwmod@dividend+1,w,c
  2655  0023EE  A0D8               	btfss	status,0,c
  2656  0023F0  D004               	goto	l3514
  2657  0023F2  5003               	movf	___lwmod@divisor,w,c
  2658  0023F4  5E01               	subwf	___lwmod@dividend,f,c
  2659  0023F6  5004               	movf	___lwmod@divisor+1,w,c
  2660  0023F8  5A02               	subwfb	___lwmod@dividend+1,f,c
  2661  0023FA                     l3514:
  2662  0023FA  90D8               	bcf	status,0,c
  2663  0023FC  3204               	rrcf	___lwmod@divisor+1,f,c
  2664  0023FE  3203               	rrcf	___lwmod@divisor,f,c
  2665  002400  2E06               	decfsz	___lwmod@counter,f,c
  2666  002402  D7F1               	goto	l3510
  2667  002404                     l732:
  2668  002404  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2669  002408  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2670  00240C  0012               	return	
  2671  00240E                     __end_of___lwmod:
  2672                           	opt stack 0
  2673                           tblptru	equ	0xFF8
  2674                           tblptrh	equ	0xFF7
  2675                           tblptrl	equ	0xFF6
  2676                           tablat	equ	0xFF5
  2677                           prodh	equ	0xFF4
  2678                           prodl	equ	0xFF3
  2679                           wreg	equ	0xFE8
  2680                           indf2	equ	0xFDF
  2681                           postinc2	equ	0xFDE
  2682                           postdec2	equ	0xFDD
  2683                           fsr2h	equ	0xFDA
  2684                           fsr2l	equ	0xFD9
  2685                           status	equ	0xFD8
  2686                           
  2687 ;; *************** function ___lltoft *****************
  2688 ;; Defined at:
  2689 ;;		line 36 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\lltoft.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  c               4    8[COMRAM] unsigned long 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  exp             1   16[COMRAM] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  3    8[COMRAM] float 
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2703 ;;      Params:         4       0       0       0       0       0       0       0       0
  2704 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2705 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2706 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2707 ;;Total ram usage:        9 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    1
  2710 ;; This function calls:
  2711 ;;		___ftpack
  2712 ;; This function is called by:
  2713 ;;		_sprintf
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text7
  2718  002364                     __ptext7:
  2719                           	opt stack 0
  2720  002364                     ___lltoft:
  2721                           	opt stack 28
  2722                           
  2723                           ;incstack = 0
  2724                           ;incstack = 0
  2725  002364  6E0D               	movwf	??___lltoft& (0+255),c
  2726  002366  0E8E               	movlw	142
  2727  002368  6E11               	movwf	___lltoft@exp,c
  2728  00236A  500D               	movf	??___lltoft& (0+255),w,c
  2729  00236C  D006               	goto	l3640
  2730  00236E                     l3638:
  2731  00236E  90D8               	bcf	status,0,c
  2732  002370  320C               	rrcf	___lltoft@c+3,f,c
  2733  002372  320B               	rrcf	___lltoft@c+2,f,c
  2734  002374  320A               	rrcf	___lltoft@c+1,f,c
  2735  002376  3209               	rrcf	___lltoft@c,f,c
  2736  002378  2A11               	incf	___lltoft@exp,f,c
  2737  00237A                     l3640:
  2738  00237A  0E00               	movlw	0
  2739  00237C  1409               	andwf	___lltoft@c,w,c
  2740  00237E  6E0D               	movwf	??___lltoft& (0+255),c
  2741  002380  0E00               	movlw	0
  2742  002382  140A               	andwf	___lltoft@c+1,w,c
  2743  002384  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  2744  002386  0E00               	movlw	0
  2745  002388  140B               	andwf	___lltoft@c+2,w,c
  2746  00238A  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  2747  00238C  0EFF               	movlw	255
  2748  00238E  140C               	andwf	___lltoft@c+3,w,c
  2749  002390  6E10               	movwf	(??___lltoft+3)& (0+255),c
  2750  002392  5010               	movf	??___lltoft+3,w,c
  2751  002394  100D               	iorwf	??___lltoft,w,c
  2752  002396  100E               	iorwf	??___lltoft+1,w,c
  2753  002398  100F               	iorwf	??___lltoft+2,w,c
  2754  00239A  A4D8               	btfss	status,2,c
  2755  00239C  D7E8               	goto	l3638
  2756  00239E  C009  F001         	movff	___lltoft@c,?___ftpack
  2757  0023A2  C00A  F002         	movff	___lltoft@c+1,?___ftpack+1
  2758  0023A6  C00B  F003         	movff	___lltoft@c+2,?___ftpack+2
  2759  0023AA  C011  F004         	movff	___lltoft@exp,?___ftpack+3
  2760  0023AE  6E0D               	movwf	??___lltoft& (0+255),c
  2761  0023B0  0E00               	movlw	0
  2762  0023B2  6E05               	movwf	?___ftpack+4,c
  2763  0023B4  500D               	movf	??___lltoft& (0+255),w,c
  2764  0023B6  EC10  F010         	call	___ftpack	;wreg free
  2765  0023BA  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  2766  0023BE  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  2767  0023C2  C001  F009         	movff	?___ftpack,?___lltoft
  2768  0023C6  0012               	return	
  2769  0023C8                     __end_of___lltoft:
  2770                           	opt stack 0
  2771                           tblptru	equ	0xFF8
  2772                           tblptrh	equ	0xFF7
  2773                           tblptrl	equ	0xFF6
  2774                           tablat	equ	0xFF5
  2775                           prodh	equ	0xFF4
  2776                           prodl	equ	0xFF3
  2777                           wreg	equ	0xFE8
  2778                           indf2	equ	0xFDF
  2779                           postinc2	equ	0xFDE
  2780                           postdec2	equ	0xFDD
  2781                           fsr2h	equ	0xFDA
  2782                           fsr2l	equ	0xFD9
  2783                           status	equ	0xFD8
  2784                           
  2785 ;; *************** function ___llmod *****************
  2786 ;; Defined at:
  2787 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\llmod.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  dividend        4    0[COMRAM] unsigned long 
  2790 ;;  divisor         4    4[COMRAM] unsigned long 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  counter         1    9[COMRAM] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  4    0[COMRAM] unsigned long 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2802 ;;      Params:         8       0       0       0       0       0       0       0       0
  2803 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2804 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2805 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2806 ;;Total ram usage:       10 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_sprintf
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text8
  2816  0022FA                     __ptext8:
  2817                           	opt stack 0
  2818  0022FA                     ___llmod:
  2819                           	opt stack 29
  2820                           
  2821                           ;incstack = 0
  2822                           ;incstack = 0
  2823  0022FA  5008               	movf	___llmod@divisor+3,w,c
  2824  0022FC  1005               	iorwf	___llmod@divisor,w,c
  2825  0022FE  1006               	iorwf	___llmod@divisor+1,w,c
  2826  002300  1007               	iorwf	___llmod@divisor+2,w,c
  2827  002302  B4D8               	btfsc	status,2,c
  2828  002304  D026               	goto	l663
  2829  002306  6E09               	movwf	??___llmod& (0+255),c
  2830  002308  0E01               	movlw	1
  2831  00230A  6E0A               	movwf	___llmod@counter,c
  2832  00230C  5009               	movf	??___llmod& (0+255),w,c
  2833  00230E  D006               	goto	l3492
  2834  002310                     l3490:
  2835  002310  90D8               	bcf	status,0,c
  2836  002312  3605               	rlcf	___llmod@divisor,f,c
  2837  002314  3606               	rlcf	___llmod@divisor+1,f,c
  2838  002316  3607               	rlcf	___llmod@divisor+2,f,c
  2839  002318  3608               	rlcf	___llmod@divisor+3,f,c
  2840  00231A  2A0A               	incf	___llmod@counter,f,c
  2841  00231C                     l3492:
  2842  00231C  AE08               	btfss	___llmod@divisor+3,7,c
  2843  00231E  D7F8               	goto	l3490
  2844  002320                     l3494:
  2845  002320  5005               	movf	___llmod@divisor,w,c
  2846  002322  5C01               	subwf	___llmod@dividend,w,c
  2847  002324  5006               	movf	___llmod@divisor+1,w,c
  2848  002326  5802               	subwfb	___llmod@dividend+1,w,c
  2849  002328  5007               	movf	___llmod@divisor+2,w,c
  2850  00232A  5803               	subwfb	___llmod@dividend+2,w,c
  2851  00232C  5008               	movf	___llmod@divisor+3,w,c
  2852  00232E  5804               	subwfb	___llmod@dividend+3,w,c
  2853  002330  A0D8               	btfss	status,0,c
  2854  002332  D008               	goto	l3498
  2855  002334  5005               	movf	___llmod@divisor,w,c
  2856  002336  5E01               	subwf	___llmod@dividend,f,c
  2857  002338  5006               	movf	___llmod@divisor+1,w,c
  2858  00233A  5A02               	subwfb	___llmod@dividend+1,f,c
  2859  00233C  5007               	movf	___llmod@divisor+2,w,c
  2860  00233E  5A03               	subwfb	___llmod@dividend+2,f,c
  2861  002340  5008               	movf	___llmod@divisor+3,w,c
  2862  002342  5A04               	subwfb	___llmod@dividend+3,f,c
  2863  002344                     l3498:
  2864  002344  90D8               	bcf	status,0,c
  2865  002346  3208               	rrcf	___llmod@divisor+3,f,c
  2866  002348  3207               	rrcf	___llmod@divisor+2,f,c
  2867  00234A  3206               	rrcf	___llmod@divisor+1,f,c
  2868  00234C  3205               	rrcf	___llmod@divisor,f,c
  2869  00234E  2E0A               	decfsz	___llmod@counter,f,c
  2870  002350  D7E7               	goto	l3494
  2871  002352                     l663:
  2872  002352  C001  F001         	movff	___llmod@dividend,?___llmod
  2873  002356  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  2874  00235A  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  2875  00235E  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  2876  002362  0012               	return	
  2877  002364                     __end_of___llmod:
  2878                           	opt stack 0
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           prodh	equ	0xFF4
  2884                           prodl	equ	0xFF3
  2885                           wreg	equ	0xFE8
  2886                           indf2	equ	0xFDF
  2887                           postinc2	equ	0xFDE
  2888                           postdec2	equ	0xFDD
  2889                           fsr2h	equ	0xFDA
  2890                           fsr2l	equ	0xFD9
  2891                           status	equ	0xFD8
  2892                           
  2893 ;; *************** function ___lldiv *****************
  2894 ;; Defined at:
  2895 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\lldiv.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  dividend        4    0[COMRAM] unsigned long 
  2898 ;;  divisor         4    4[COMRAM] unsigned long 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  quotient        4    9[COMRAM] unsigned long 
  2901 ;;  counter         1   13[COMRAM] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  4    0[COMRAM] unsigned long 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2911 ;;      Params:         8       0       0       0       0       0       0       0       0
  2912 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2913 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2914 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2915 ;;Total ram usage:       14 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_sprintf
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text9
  2925  0021F8                     __ptext9:
  2926                           	opt stack 0
  2927  0021F8                     ___lldiv:
  2928                           	opt stack 29
  2929                           
  2930                           ;incstack = 0
  2931                           ;incstack = 0
  2932  0021F8  0E00               	movlw	0
  2933  0021FA  6E0A               	movwf	___lldiv@quotient,c
  2934  0021FC  0E00               	movlw	0
  2935  0021FE  6E0B               	movwf	___lldiv@quotient+1,c
  2936  002200  0E00               	movlw	0
  2937  002202  6E0C               	movwf	___lldiv@quotient+2,c
  2938  002204  0E00               	movlw	0
  2939  002206  6E0D               	movwf	___lldiv@quotient+3,c
  2940  002208  5008               	movf	___lldiv@divisor+3,w,c
  2941  00220A  1005               	iorwf	___lldiv@divisor,w,c
  2942  00220C  1006               	iorwf	___lldiv@divisor+1,w,c
  2943  00220E  1007               	iorwf	___lldiv@divisor+2,w,c
  2944  002210  B4D8               	btfsc	status,2,c
  2945  002212  D02C               	goto	l653
  2946  002214  6E09               	movwf	??___lldiv& (0+255),c
  2947  002216  0E01               	movlw	1
  2948  002218  6E0E               	movwf	___lldiv@counter,c
  2949  00221A  5009               	movf	??___lldiv& (0+255),w,c
  2950  00221C  D006               	goto	l3472
  2951  00221E                     l3470:
  2952  00221E  90D8               	bcf	status,0,c
  2953  002220  3605               	rlcf	___lldiv@divisor,f,c
  2954  002222  3606               	rlcf	___lldiv@divisor+1,f,c
  2955  002224  3607               	rlcf	___lldiv@divisor+2,f,c
  2956  002226  3608               	rlcf	___lldiv@divisor+3,f,c
  2957  002228  2A0E               	incf	___lldiv@counter,f,c
  2958  00222A                     l3472:
  2959  00222A  AE08               	btfss	___lldiv@divisor+3,7,c
  2960  00222C  D7F8               	goto	l3470
  2961  00222E                     l3474:
  2962  00222E  90D8               	bcf	status,0,c
  2963  002230  360A               	rlcf	___lldiv@quotient,f,c
  2964  002232  360B               	rlcf	___lldiv@quotient+1,f,c
  2965  002234  360C               	rlcf	___lldiv@quotient+2,f,c
  2966  002236  360D               	rlcf	___lldiv@quotient+3,f,c
  2967  002238  5005               	movf	___lldiv@divisor,w,c
  2968  00223A  5C01               	subwf	___lldiv@dividend,w,c
  2969  00223C  5006               	movf	___lldiv@divisor+1,w,c
  2970  00223E  5802               	subwfb	___lldiv@dividend+1,w,c
  2971  002240  5007               	movf	___lldiv@divisor+2,w,c
  2972  002242  5803               	subwfb	___lldiv@dividend+2,w,c
  2973  002244  5008               	movf	___lldiv@divisor+3,w,c
  2974  002246  5804               	subwfb	___lldiv@dividend+3,w,c
  2975  002248  A0D8               	btfss	status,0,c
  2976  00224A  D009               	goto	l3482
  2977  00224C  5005               	movf	___lldiv@divisor,w,c
  2978  00224E  5E01               	subwf	___lldiv@dividend,f,c
  2979  002250  5006               	movf	___lldiv@divisor+1,w,c
  2980  002252  5A02               	subwfb	___lldiv@dividend+1,f,c
  2981  002254  5007               	movf	___lldiv@divisor+2,w,c
  2982  002256  5A03               	subwfb	___lldiv@dividend+2,f,c
  2983  002258  5008               	movf	___lldiv@divisor+3,w,c
  2984  00225A  5A04               	subwfb	___lldiv@dividend+3,f,c
  2985  00225C  800A               	bsf	___lldiv@quotient,0,c
  2986  00225E                     l3482:
  2987  00225E  90D8               	bcf	status,0,c
  2988  002260  3208               	rrcf	___lldiv@divisor+3,f,c
  2989  002262  3207               	rrcf	___lldiv@divisor+2,f,c
  2990  002264  3206               	rrcf	___lldiv@divisor+1,f,c
  2991  002266  3205               	rrcf	___lldiv@divisor,f,c
  2992  002268  2E0E               	decfsz	___lldiv@counter,f,c
  2993  00226A  D7E1               	goto	l3474
  2994  00226C                     l653:
  2995  00226C  C00A  F001         	movff	___lldiv@quotient,?___lldiv
  2996  002270  C00B  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2997  002274  C00C  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2998  002278  C00D  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2999  00227C  0012               	return	
  3000  00227E                     __end_of___lldiv:
  3001                           	opt stack 0
  3002                           tblptru	equ	0xFF8
  3003                           tblptrh	equ	0xFF7
  3004                           tblptrl	equ	0xFF6
  3005                           tablat	equ	0xFF5
  3006                           prodh	equ	0xFF4
  3007                           prodl	equ	0xFF3
  3008                           wreg	equ	0xFE8
  3009                           indf2	equ	0xFDF
  3010                           postinc2	equ	0xFDE
  3011                           postdec2	equ	0xFDD
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function ___fttol *****************
  3017 ;; Defined at:
  3018 ;;		line 45 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\fttol.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  f1              3   22[COMRAM] float 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  lval            4   32[COMRAM] unsigned long 
  3023 ;;  exp1            1   36[COMRAM] unsigned char 
  3024 ;;  sign1           1   31[COMRAM] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  4   22[COMRAM] long 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3034 ;;      Params:         4       0       0       0       0       0       0       0       0
  3035 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3036 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3037 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3038 ;;Total ram usage:       15 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_sprintf
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text10
  3048  001F40                     __ptext10:
  3049                           	opt stack 0
  3050  001F40                     ___fttol:
  3051                           	opt stack 29
  3052                           
  3053                           ;incstack = 0
  3054                           ;incstack = 0
  3055  001F40  0E0F               	movlw	15
  3056  001F42  6E1B               	movwf	??___fttol& (0+255),c
  3057  001F44  C017  F01C         	movff	___fttol@f1,??___fttol+1
  3058  001F48  C018  F01D         	movff	___fttol@f1+1,??___fttol+2
  3059  001F4C  C019  F01E         	movff	___fttol@f1+2,??___fttol+3
  3060  001F50  281B               	incf	??___fttol,w,c
  3061  001F52  6E1F               	movwf	(??___fttol+4)& (0+255),c
  3062  001F54  D004               	goto	u2420
  3063  001F56                     u2425:
  3064  001F56  90D8               	bcf	status,0,c
  3065  001F58  321E               	rrcf	??___fttol+3,f,c
  3066  001F5A  321D               	rrcf	??___fttol+2,f,c
  3067  001F5C  321C               	rrcf	??___fttol+1,f,c
  3068  001F5E                     u2420:
  3069  001F5E  2E1F               	decfsz	(??___fttol+4)& (0+255),f,c
  3070  001F60  D7FA               	goto	u2425
  3071  001F62  501C               	movf	??___fttol+1,w,c
  3072  001F64  6E25               	movwf	___fttol@exp1,c
  3073  001F66  6625               	tstfsz	___fttol@exp1& (0+255),c
  3074  001F68  D001               	goto	l3848
  3075  001F6A  D035               	goto	u2470
  3076  001F6C                     l3848:
  3077  001F6C  0E17               	movlw	23
  3078  001F6E  6E1B               	movwf	??___fttol& (0+255),c
  3079  001F70  C017  F01C         	movff	___fttol@f1,??___fttol+1
  3080  001F74  C018  F01D         	movff	___fttol@f1+1,??___fttol+2
  3081  001F78  C019  F01E         	movff	___fttol@f1+2,??___fttol+3
  3082  001F7C  281B               	incf	??___fttol,w,c
  3083  001F7E  6E1F               	movwf	(??___fttol+4)& (0+255),c
  3084  001F80  D004               	goto	u2440
  3085  001F82                     u2445:
  3086  001F82  90D8               	bcf	status,0,c
  3087  001F84  321E               	rrcf	??___fttol+3,f,c
  3088  001F86  321D               	rrcf	??___fttol+2,f,c
  3089  001F88  321C               	rrcf	??___fttol+1,f,c
  3090  001F8A                     u2440:
  3091  001F8A  2E1F               	decfsz	(??___fttol+4)& (0+255),f,c
  3092  001F8C  D7FA               	goto	u2445
  3093  001F8E  501C               	movf	??___fttol+1,w,c
  3094  001F90  6E20               	movwf	___fttol@sign1,c
  3095  001F92  8E18               	bsf	___fttol@f1+1,7,c
  3096  001F94  0EFF               	movlw	255
  3097  001F96  1617               	andwf	___fttol@f1,f,c
  3098  001F98  0EFF               	movlw	255
  3099  001F9A  1618               	andwf	___fttol@f1+1,f,c
  3100  001F9C  0E00               	movlw	0
  3101  001F9E  1619               	andwf	___fttol@f1+2,f,c
  3102  001FA0  5017               	movf	___fttol@f1,w,c
  3103  001FA2  6E21               	movwf	___fttol@lval,c
  3104  001FA4  5018               	movf	___fttol@f1+1,w,c
  3105  001FA6  6E22               	movwf	___fttol@lval+1,c
  3106  001FA8  5019               	movf	___fttol@f1+2,w,c
  3107  001FAA  6E23               	movwf	___fttol@lval+2,c
  3108  001FAC  6A24               	clrf	___fttol@lval+3,c
  3109  001FAE  0E8E               	movlw	142
  3110  001FB0  5E25               	subwf	___fttol@exp1,f,c
  3111  001FB2  AE25               	btfss	___fttol@exp1,7,c
  3112  001FB4  D00D               	goto	l3870
  3113  001FB6  5025               	movf	___fttol@exp1,w,c
  3114  001FB8  0A80               	xorlw	128
  3115  001FBA  0F8F               	addlw	143
  3116  001FBC  A0D8               	btfss	status,0,c
  3117  001FBE  D00B               	goto	u2470
  3118  001FC0                     l3866:
  3119  001FC0  90D8               	bcf	status,0,c
  3120  001FC2  3224               	rrcf	___fttol@lval+3,f,c
  3121  001FC4  3223               	rrcf	___fttol@lval+2,f,c
  3122  001FC6  3222               	rrcf	___fttol@lval+1,f,c
  3123  001FC8  3221               	rrcf	___fttol@lval,f,c
  3124  001FCA  3E25               	incfsz	___fttol@exp1,f,c
  3125  001FCC  D7F9               	goto	l3866
  3126  001FCE  D014               	goto	l3880
  3127  001FD0                     l3870:
  3128  001FD0  0E17               	movlw	23
  3129  001FD2  6425               	cpfsgt	___fttol@exp1,c
  3130  001FD4  D00F               	goto	l3878
  3131  001FD6                     u2470:
  3132  001FD6  0E00               	movlw	0
  3133  001FD8  6E17               	movwf	?___fttol,c
  3134  001FDA  0E00               	movlw	0
  3135  001FDC  6E18               	movwf	?___fttol+1,c
  3136  001FDE  0E00               	movlw	0
  3137  001FE0  6E19               	movwf	?___fttol+2,c
  3138  001FE2  0E00               	movlw	0
  3139  001FE4  6E1A               	movwf	?___fttol+3,c
  3140  001FE6  D01B               	goto	l614
  3141  001FE8                     l3876:
  3142  001FE8  90D8               	bcf	status,0,c
  3143  001FEA  3621               	rlcf	___fttol@lval,f,c
  3144  001FEC  3622               	rlcf	___fttol@lval+1,f,c
  3145  001FEE  3623               	rlcf	___fttol@lval+2,f,c
  3146  001FF0  3624               	rlcf	___fttol@lval+3,f,c
  3147  001FF2  0625               	decf	___fttol@exp1,f,c
  3148  001FF4                     l3878:
  3149  001FF4  6625               	tstfsz	___fttol@exp1,c
  3150  001FF6  D7F8               	goto	l3876
  3151  001FF8                     l3880:
  3152  001FF8  5020               	movf	___fttol@sign1,w,c
  3153  001FFA  B4D8               	btfsc	status,2,c
  3154  001FFC  D008               	goto	l3884
  3155  001FFE  1E24               	comf	___fttol@lval+3,f,c
  3156  002000  1E23               	comf	___fttol@lval+2,f,c
  3157  002002  1E22               	comf	___fttol@lval+1,f,c
  3158  002004  6C21               	negf	___fttol@lval,c
  3159  002006  0E00               	movlw	0
  3160  002008  2222               	addwfc	___fttol@lval+1,f,c
  3161  00200A  2223               	addwfc	___fttol@lval+2,f,c
  3162  00200C  2224               	addwfc	___fttol@lval+3,f,c
  3163  00200E                     l3884:
  3164  00200E  C021  F017         	movff	___fttol@lval,?___fttol
  3165  002012  C022  F018         	movff	___fttol@lval+1,?___fttol+1
  3166  002016  C023  F019         	movff	___fttol@lval+2,?___fttol+2
  3167  00201A  C024  F01A         	movff	___fttol@lval+3,?___fttol+3
  3168  00201E                     l614:
  3169  00201E  0012               	return	
  3170  002020                     __end_of___fttol:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           prodh	equ	0xFF4
  3177                           prodl	equ	0xFF3
  3178                           wreg	equ	0xFE8
  3179                           indf2	equ	0xFDF
  3180                           postinc2	equ	0xFDE
  3181                           postdec2	equ	0xFDD
  3182                           fsr2h	equ	0xFDA
  3183                           fsr2l	equ	0xFD9
  3184                           status	equ	0xFD8
  3185                           
  3186 ;; *************** function ___ftge *****************
  3187 ;; Defined at:
  3188 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftge.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  ff1             3    0[COMRAM] float 
  3191 ;;  ff2             3    3[COMRAM] float 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;		None               void
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3203 ;;      Params:         6       0       0       0       0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3205 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3206 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3207 ;;Total ram usage:        9 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_main
  3213 ;;		_sprintf
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text11
  3218  0020D8                     __ptext11:
  3219                           	opt stack 0
  3220  0020D8                     ___ftge:
  3221                           	opt stack 30
  3222                           
  3223                           ;incstack = 0
  3224                           ;incstack = 0
  3225  0020D8  AE03               	btfss	___ftge@ff1+2,7,c
  3226  0020DA  D016               	goto	l3450
  3227  0020DC  C001  F007         	movff	___ftge@ff1,??___ftge
  3228  0020E0  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3229  0020E4  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3230  0020E8  1E07               	comf	??___ftge,f,c
  3231  0020EA  1E08               	comf	??___ftge+1,f,c
  3232  0020EC  1E09               	comf	??___ftge+2,f,c
  3233  0020EE  2A07               	incf	??___ftge,f,c
  3234  0020F0  0E00               	movlw	0
  3235  0020F2  2208               	addwfc	??___ftge+1,f,c
  3236  0020F4  2209               	addwfc	??___ftge+2,f,c
  3237  0020F6  0E00               	movlw	0
  3238  0020F8  2407               	addwf	??___ftge,w,c
  3239  0020FA  6E01               	movwf	___ftge@ff1,c
  3240  0020FC  0E00               	movlw	0
  3241  0020FE  2008               	addwfc	??___ftge+1,w,c
  3242  002100  6E02               	movwf	___ftge@ff1+1,c
  3243  002102  0E80               	movlw	128
  3244  002104  2009               	addwfc	??___ftge+2,w,c
  3245  002106  6E03               	movwf	___ftge@ff1+2,c
  3246  002108                     l3450:
  3247  002108  AE06               	btfss	___ftge@ff2+2,7,c
  3248  00210A  D016               	goto	l3454
  3249  00210C  C004  F007         	movff	___ftge@ff2,??___ftge
  3250  002110  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3251  002114  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3252  002118  1E07               	comf	??___ftge,f,c
  3253  00211A  1E08               	comf	??___ftge+1,f,c
  3254  00211C  1E09               	comf	??___ftge+2,f,c
  3255  00211E  2A07               	incf	??___ftge,f,c
  3256  002120  0E00               	movlw	0
  3257  002122  2208               	addwfc	??___ftge+1,f,c
  3258  002124  2209               	addwfc	??___ftge+2,f,c
  3259  002126  0E00               	movlw	0
  3260  002128  2407               	addwf	??___ftge,w,c
  3261  00212A  6E04               	movwf	___ftge@ff2,c
  3262  00212C  0E00               	movlw	0
  3263  00212E  2008               	addwfc	??___ftge+1,w,c
  3264  002130  6E05               	movwf	___ftge@ff2+1,c
  3265  002132  0E80               	movlw	128
  3266  002134  2009               	addwfc	??___ftge+2,w,c
  3267  002136  6E06               	movwf	___ftge@ff2+2,c
  3268  002138                     l3454:
  3269  002138  0E00               	movlw	0
  3270  00213A  1A01               	xorwf	___ftge@ff1,f,c
  3271  00213C  0E00               	movlw	0
  3272  00213E  1A02               	xorwf	___ftge@ff1+1,f,c
  3273  002140  0E80               	movlw	128
  3274  002142  1A03               	xorwf	___ftge@ff1+2,f,c
  3275  002144  0E00               	movlw	0
  3276  002146  1A04               	xorwf	___ftge@ff2,f,c
  3277  002148  0E00               	movlw	0
  3278  00214A  1A05               	xorwf	___ftge@ff2+1,f,c
  3279  00214C  0E80               	movlw	128
  3280  00214E  1A06               	xorwf	___ftge@ff2+2,f,c
  3281  002150  5004               	movf	___ftge@ff2,w,c
  3282  002152  5C01               	subwf	___ftge@ff1,w,c
  3283  002154  5005               	movf	___ftge@ff2+1,w,c
  3284  002156  5802               	subwfb	___ftge@ff1+1,w,c
  3285  002158  5006               	movf	___ftge@ff2+2,w,c
  3286  00215A  5803               	subwfb	___ftge@ff1+2,w,c
  3287  00215C  B0D8               	btfsc	status,0,c
  3288  00215E  D002               	goto	l3460
  3289  002160  90D8               	bcf	status,0,c
  3290  002162  D001               	goto	l588
  3291  002164                     l3460:
  3292  002164  80D8               	bsf	status,0,c
  3293  002166                     l588:
  3294  002166  0012               	return	
  3295  002168                     __end_of___ftge:
  3296                           	opt stack 0
  3297                           tblptru	equ	0xFF8
  3298                           tblptrh	equ	0xFF7
  3299                           tblptrl	equ	0xFF6
  3300                           tablat	equ	0xFF5
  3301                           prodh	equ	0xFF4
  3302                           prodl	equ	0xFF3
  3303                           wreg	equ	0xFE8
  3304                           indf2	equ	0xFDF
  3305                           postinc2	equ	0xFDE
  3306                           postdec2	equ	0xFDD
  3307                           fsr2h	equ	0xFDA
  3308                           fsr2l	equ	0xFD9
  3309                           status	equ	0xFD8
  3310                           
  3311 ;; *************** function ___asftsub *****************
  3312 ;; Defined at:
  3313 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  f1p             2   48[COMRAM] PTR float 
  3316 ;;		 -> sprintf@fval(3), 
  3317 ;;  f2              3   50[COMRAM] float 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  3   48[COMRAM] float 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3329 ;;      Params:         5       0       0       0       0       0       0       0       0
  3330 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3332 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3333 ;;Total ram usage:        5 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    3
  3336 ;; This function calls:
  3337 ;;		___ftsub
  3338 ;; This function is called by:
  3339 ;;		_sprintf
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text12
  3344  002452                     __ptext12:
  3345                           	opt stack 0
  3346  002452                     ___asftsub:
  3347                           	opt stack 26
  3348                           
  3349                           ;	Return value of ___asftsub is never used
  3350                           
  3351                           ;incstack = 0
  3352                           ;incstack = 0
  3353  002452  C031  FFD9         	movff	___asftsub@f1p,fsr2l
  3354  002456  C032  FFDA         	movff	___asftsub@f1p+1,fsr2h
  3355  00245A  CFDE F02B          	movff	postinc2,?___ftsub
  3356  00245E  CFDE F02C          	movff	postinc2,?___ftsub+1
  3357  002462  CFDD F02D          	movff	postdec2,?___ftsub+2
  3358  002466  C033  F02E         	movff	___asftsub@f2,?___ftsub+3
  3359  00246A  C034  F02F         	movff	___asftsub@f2+1,?___ftsub+4
  3360  00246E  C035  F030         	movff	___asftsub@f2+2,?___ftsub+5
  3361  002472  ECA0  F012         	call	___ftsub	;wreg free
  3362  002476  C031  FFD9         	movff	___asftsub@f1p,fsr2l
  3363  00247A  C032  FFDA         	movff	___asftsub@f1p+1,fsr2h
  3364  00247E  C02B  FFDE         	movff	?___ftsub,postinc2
  3365  002482  C02C  FFDE         	movff	?___ftsub+1,postinc2
  3366  002486  C02D  FFDD         	movff	?___ftsub+2,postdec2
  3367  00248A  52DD               	movf	postdec2,f,c
  3368  00248C  0012               	return	
  3369  00248E                     __end_of___asftsub:
  3370                           	opt stack 0
  3371                           tblptru	equ	0xFF8
  3372                           tblptrh	equ	0xFF7
  3373                           tblptrl	equ	0xFF6
  3374                           tablat	equ	0xFF5
  3375                           prodh	equ	0xFF4
  3376                           prodl	equ	0xFF3
  3377                           wreg	equ	0xFE8
  3378                           indf2	equ	0xFDF
  3379                           postinc2	equ	0xFDE
  3380                           postdec2	equ	0xFDD
  3381                           fsr2h	equ	0xFDA
  3382                           fsr2l	equ	0xFD9
  3383                           status	equ	0xFD8
  3384                           
  3385 ;; *************** function ___ftsub *****************
  3386 ;; Defined at:
  3387 ;;		line 22 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftsub.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  f1              3   42[COMRAM] float 
  3390 ;;  f2              3   45[COMRAM] float 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  3   42[COMRAM] float 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3402 ;;      Params:         6       0       0       0       0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3405 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3406 ;;Total ram usage:        6 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    2
  3409 ;; This function calls:
  3410 ;;		___ftadd
  3411 ;; This function is called by:
  3412 ;;		___asftsub
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text13
  3417  002540                     __ptext13:
  3418                           	opt stack 0
  3419  002540                     ___ftsub:
  3420                           	opt stack 26
  3421                           
  3422                           ;incstack = 0
  3423                           ;incstack = 0
  3424  002540  0E00               	movlw	0
  3425  002542  1A2E               	xorwf	___ftsub@f2,f,c
  3426  002544  0E00               	movlw	0
  3427  002546  1A2F               	xorwf	___ftsub@f2+1,f,c
  3428  002548  0E80               	movlw	128
  3429  00254A  1A30               	xorwf	___ftsub@f2+2,f,c
  3430  00254C  C02B  F01D         	movff	___ftsub@f1,?___ftadd
  3431  002550  C02C  F01E         	movff	___ftsub@f1+1,?___ftadd+1
  3432  002554  C02D  F01F         	movff	___ftsub@f1+2,?___ftadd+2
  3433  002558  C02E  F020         	movff	___ftsub@f2,?___ftadd+3
  3434  00255C  C02F  F021         	movff	___ftsub@f2+1,?___ftadd+4
  3435  002560  C030  F022         	movff	___ftsub@f2+2,?___ftadd+5
  3436  002564  ECA8  F00C         	call	___ftadd	;wreg free
  3437  002568  C01F  F02D         	movff	?___ftadd+2,?___ftsub+2
  3438  00256C  C01E  F02C         	movff	?___ftadd+1,?___ftsub+1
  3439  002570  C01D  F02B         	movff	?___ftadd,?___ftsub
  3440  002574  0012               	return	
  3441  002576                     __end_of___ftsub:
  3442                           	opt stack 0
  3443                           tblptru	equ	0xFF8
  3444                           tblptrh	equ	0xFF7
  3445                           tblptrl	equ	0xFF6
  3446                           tablat	equ	0xFF5
  3447                           prodh	equ	0xFF4
  3448                           prodl	equ	0xFF3
  3449                           wreg	equ	0xFE8
  3450                           indf2	equ	0xFDF
  3451                           postinc2	equ	0xFDE
  3452                           postdec2	equ	0xFDD
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function ___asftmul *****************
  3458 ;; Defined at:
  3459 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  f1p             2   54[COMRAM] PTR float 
  3462 ;;		 -> sprintf@integ(3), 
  3463 ;;  f2              3   56[COMRAM] float 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  3   54[COMRAM] float 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3475 ;;      Params:         5       0       0       0       0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3478 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3479 ;;Total ram usage:        5 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    2
  3482 ;; This function calls:
  3483 ;;		___ftmul
  3484 ;; This function is called by:
  3485 ;;		_sprintf
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text14
  3490  00248E                     __ptext14:
  3491                           	opt stack 0
  3492  00248E                     ___asftmul:
  3493                           	opt stack 27
  3494                           
  3495                           ;	Return value of ___asftmul is never used
  3496                           
  3497                           ;incstack = 0
  3498                           ;incstack = 0
  3499  00248E  C037  FFD9         	movff	___asftmul@f1p,fsr2l
  3500  002492  C038  FFDA         	movff	___asftmul@f1p+1,fsr2h
  3501  002496  CFDE F026          	movff	postinc2,?___ftmul
  3502  00249A  CFDE F027          	movff	postinc2,?___ftmul+1
  3503  00249E  CFDD F028          	movff	postdec2,?___ftmul+2
  3504  0024A2  C039  F029         	movff	___asftmul@f2,?___ftmul+3
  3505  0024A6  C03A  F02A         	movff	___asftmul@f2+1,?___ftmul+4
  3506  0024AA  C03B  F02B         	movff	___asftmul@f2+2,?___ftmul+5
  3507  0024AE  EC1F  F00E         	call	___ftmul	;wreg free
  3508  0024B2  C037  FFD9         	movff	___asftmul@f1p,fsr2l
  3509  0024B6  C038  FFDA         	movff	___asftmul@f1p+1,fsr2h
  3510  0024BA  C026  FFDE         	movff	?___ftmul,postinc2
  3511  0024BE  C027  FFDE         	movff	?___ftmul+1,postinc2
  3512  0024C2  C028  FFDD         	movff	?___ftmul+2,postdec2
  3513  0024C6  52DD               	movf	postdec2,f,c
  3514  0024C8  0012               	return	
  3515  0024CA                     __end_of___asftmul:
  3516                           	opt stack 0
  3517                           tblptru	equ	0xFF8
  3518                           tblptrh	equ	0xFF7
  3519                           tblptrl	equ	0xFF6
  3520                           tablat	equ	0xFF5
  3521                           prodh	equ	0xFF4
  3522                           prodl	equ	0xFF3
  3523                           wreg	equ	0xFE8
  3524                           indf2	equ	0xFDF
  3525                           postinc2	equ	0xFDE
  3526                           postdec2	equ	0xFDD
  3527                           fsr2h	equ	0xFDA
  3528                           fsr2l	equ	0xFD9
  3529                           status	equ	0xFD8
  3530                           
  3531 ;; *************** function ___asftadd *****************
  3532 ;; Defined at:
  3533 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  f1p             2   69[COMRAM] PTR float 
  3536 ;;		 -> sprintf@fval(3), 
  3537 ;;  f2              3   71[COMRAM] float 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  3   69[COMRAM] float 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3549 ;;      Params:         5       0       0       0       0       0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3552 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3553 ;;Total ram usage:        5 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    2
  3556 ;; This function calls:
  3557 ;;		___ftadd
  3558 ;; This function is called by:
  3559 ;;		_sprintf
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text15
  3564  0024CA                     __ptext15:
  3565                           	opt stack 0
  3566  0024CA                     ___asftadd:
  3567                           	opt stack 27
  3568                           
  3569                           ;	Return value of ___asftadd is never used
  3570                           
  3571                           ;incstack = 0
  3572                           ;incstack = 0
  3573  0024CA  C046  FFD9         	movff	___asftadd@f1p,fsr2l
  3574  0024CE  C047  FFDA         	movff	___asftadd@f1p+1,fsr2h
  3575  0024D2  CFDE F01D          	movff	postinc2,?___ftadd
  3576  0024D6  CFDE F01E          	movff	postinc2,?___ftadd+1
  3577  0024DA  CFDD F01F          	movff	postdec2,?___ftadd+2
  3578  0024DE  C048  F020         	movff	___asftadd@f2,?___ftadd+3
  3579  0024E2  C049  F021         	movff	___asftadd@f2+1,?___ftadd+4
  3580  0024E6  C04A  F022         	movff	___asftadd@f2+2,?___ftadd+5
  3581  0024EA  ECA8  F00C         	call	___ftadd	;wreg free
  3582  0024EE  C046  FFD9         	movff	___asftadd@f1p,fsr2l
  3583  0024F2  C047  FFDA         	movff	___asftadd@f1p+1,fsr2h
  3584  0024F6  C01D  FFDE         	movff	?___ftadd,postinc2
  3585  0024FA  C01E  FFDE         	movff	?___ftadd+1,postinc2
  3586  0024FE  C01F  FFDD         	movff	?___ftadd+2,postdec2
  3587  002502  52DD               	movf	postdec2,f,c
  3588  002504  0012               	return	
  3589  002506                     __end_of___asftadd:
  3590                           	opt stack 0
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           prodh	equ	0xFF4
  3596                           prodl	equ	0xFF3
  3597                           wreg	equ	0xFE8
  3598                           indf2	equ	0xFDF
  3599                           postinc2	equ	0xFDE
  3600                           postdec2	equ	0xFDD
  3601                           fsr2h	equ	0xFDA
  3602                           fsr2l	equ	0xFD9
  3603                           status	equ	0xFD8
  3604                           
  3605 ;; *************** function ___ftadd *****************
  3606 ;; Defined at:
  3607 ;;		line 87 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftadd.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  f1              3   28[COMRAM] float 
  3610 ;;  f2              3   31[COMRAM] float 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  exp1            1   41[COMRAM] unsigned char 
  3613 ;;  exp2            1   40[COMRAM] unsigned char 
  3614 ;;  sign            1   39[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  3   28[COMRAM] float 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3624 ;;      Params:         6       0       0       0       0       0       0       0       0
  3625 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3626 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3627 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3628 ;;Total ram usage:       14 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    1
  3631 ;; This function calls:
  3632 ;;		___ftpack
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;;		___asftadd
  3636 ;;		___ftsub
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text16
  3641  001950                     __ptext16:
  3642                           	opt stack 0
  3643  001950                     ___ftadd:
  3644                           	opt stack 29
  3645                           
  3646                           ;incstack = 0
  3647                           ;incstack = 0
  3648  001950  0E0F               	movlw	15
  3649  001952  6E23               	movwf	??___ftadd& (0+255),c
  3650  001954  C01D  F024         	movff	___ftadd@f1,??___ftadd+1
  3651  001958  C01E  F025         	movff	___ftadd@f1+1,??___ftadd+2
  3652  00195C  C01F  F026         	movff	___ftadd@f1+2,??___ftadd+3
  3653  001960  2823               	incf	??___ftadd,w,c
  3654  001962  6E27               	movwf	(??___ftadd+4)& (0+255),c
  3655  001964  D004               	goto	u2110
  3656  001966                     u2115:
  3657  001966  90D8               	bcf	status,0,c
  3658  001968  3226               	rrcf	??___ftadd+3,f,c
  3659  00196A  3225               	rrcf	??___ftadd+2,f,c
  3660  00196C  3224               	rrcf	??___ftadd+1,f,c
  3661  00196E                     u2110:
  3662  00196E  2E27               	decfsz	(??___ftadd+4)& (0+255),f,c
  3663  001970  D7FA               	goto	u2115
  3664  001972  5024               	movf	??___ftadd+1,w,c
  3665  001974  6E2A               	movwf	___ftadd@exp1,c
  3666  001976  0E0F               	movlw	15
  3667  001978  6E23               	movwf	??___ftadd& (0+255),c
  3668  00197A  C020  F024         	movff	___ftadd@f2,??___ftadd+1
  3669  00197E  C021  F025         	movff	___ftadd@f2+1,??___ftadd+2
  3670  001982  C022  F026         	movff	___ftadd@f2+2,??___ftadd+3
  3671  001986  2823               	incf	??___ftadd,w,c
  3672  001988  6E27               	movwf	(??___ftadd+4)& (0+255),c
  3673  00198A  D004               	goto	u2120
  3674  00198C                     u2125:
  3675  00198C  90D8               	bcf	status,0,c
  3676  00198E  3226               	rrcf	??___ftadd+3,f,c
  3677  001990  3225               	rrcf	??___ftadd+2,f,c
  3678  001992  3224               	rrcf	??___ftadd+1,f,c
  3679  001994                     u2120:
  3680  001994  2E27               	decfsz	(??___ftadd+4)& (0+255),f,c
  3681  001996  D7FA               	goto	u2125
  3682  001998  5024               	movf	??___ftadd+1,w,c
  3683  00199A  6E29               	movwf	___ftadd@exp2,c
  3684  00199C  502A               	movf	___ftadd@exp1,w,c
  3685  00199E  B4D8               	btfsc	status,2,c
  3686  0019A0  D00B               	goto	l530
  3687  0019A2  5029               	movf	___ftadd@exp2,w,c
  3688  0019A4  602A               	cpfslt	___ftadd@exp1,c
  3689  0019A6  D00F               	goto	l3676
  3690  0019A8  502A               	movf	___ftadd@exp1,w,c
  3691  0019AA  0800               	sublw	0
  3692  0019AC  2429               	addwf	___ftadd@exp2,w,c
  3693  0019AE  6E23               	movwf	??___ftadd& (0+255),c
  3694  0019B0  0E19               	movlw	25
  3695  0019B2  5C23               	subwf	??___ftadd,w,c
  3696  0019B4  A0D8               	btfss	status,0,c
  3697  0019B6  D007               	goto	l3676
  3698  0019B8                     l530:
  3699  0019B8  C020  F01D         	movff	___ftadd@f2,?___ftadd
  3700  0019BC  C021  F01E         	movff	___ftadd@f2+1,?___ftadd+1
  3701  0019C0  C022  F01F         	movff	___ftadd@f2+2,?___ftadd+2
  3702  0019C4  D0AA               	goto	l531
  3703  0019C6                     l3676:
  3704  0019C6  5029               	movf	___ftadd@exp2,w,c
  3705  0019C8  B4D8               	btfsc	status,2,c
  3706  0019CA  D00B               	goto	l534
  3707  0019CC  502A               	movf	___ftadd@exp1,w,c
  3708  0019CE  6029               	cpfslt	___ftadd@exp2,c
  3709  0019D0  D00F               	goto	l3682
  3710  0019D2  5029               	movf	___ftadd@exp2,w,c
  3711  0019D4  0800               	sublw	0
  3712  0019D6  242A               	addwf	___ftadd@exp1,w,c
  3713  0019D8  6E23               	movwf	??___ftadd& (0+255),c
  3714  0019DA  0E19               	movlw	25
  3715  0019DC  5C23               	subwf	??___ftadd,w,c
  3716  0019DE  A0D8               	btfss	status,0,c
  3717  0019E0  D007               	goto	l3682
  3718  0019E2                     l534:
  3719  0019E2  C01D  F01D         	movff	___ftadd@f1,?___ftadd
  3720  0019E6  C01E  F01E         	movff	___ftadd@f1+1,?___ftadd+1
  3721  0019EA  C01F  F01F         	movff	___ftadd@f1+2,?___ftadd+2
  3722  0019EE  D095               	goto	l531
  3723  0019F0                     l3682:
  3724  0019F0  6E23               	movwf	??___ftadd& (0+255),c
  3725  0019F2  0E06               	movlw	6
  3726  0019F4  6E28               	movwf	___ftadd@sign,c
  3727  0019F6  5023               	movf	??___ftadd& (0+255),w,c
  3728  0019F8  BE1F               	btfsc	___ftadd@f1+2,7,c
  3729  0019FA  8E28               	bsf	___ftadd@sign,7,c
  3730  0019FC  BE22               	btfsc	___ftadd@f2+2,7,c
  3731  0019FE  8C28               	bsf	___ftadd@sign,6,c
  3732  001A00  8E1E               	bsf	___ftadd@f1+1,7,c
  3733  001A02  0EFF               	movlw	255
  3734  001A04  161D               	andwf	___ftadd@f1,f,c
  3735  001A06  0EFF               	movlw	255
  3736  001A08  161E               	andwf	___ftadd@f1+1,f,c
  3737  001A0A  0E00               	movlw	0
  3738  001A0C  161F               	andwf	___ftadd@f1+2,f,c
  3739  001A0E  8E21               	bsf	___ftadd@f2+1,7,c
  3740  001A10  0EFF               	movlw	255
  3741  001A12  1620               	andwf	___ftadd@f2,f,c
  3742  001A14  0EFF               	movlw	255
  3743  001A16  1621               	andwf	___ftadd@f2+1,f,c
  3744  001A18  0E00               	movlw	0
  3745  001A1A  1622               	andwf	___ftadd@f2+2,f,c
  3746  001A1C  5029               	movf	___ftadd@exp2,w,c
  3747  001A1E  602A               	cpfslt	___ftadd@exp1,c
  3748  001A20  D018               	goto	l3708
  3749  001A22                     l3698:
  3750  001A22  90D8               	bcf	status,0,c
  3751  001A24  3620               	rlcf	___ftadd@f2,f,c
  3752  001A26  3621               	rlcf	___ftadd@f2+1,f,c
  3753  001A28  3622               	rlcf	___ftadd@f2+2,f,c
  3754  001A2A  0629               	decf	___ftadd@exp2,f,c
  3755  001A2C  5029               	movf	___ftadd@exp2,w,c
  3756  001A2E  182A               	xorwf	___ftadd@exp1,w,c
  3757  001A30  B4D8               	btfsc	status,2,c
  3758  001A32  D00B               	goto	l3706
  3759  001A34  0628               	decf	___ftadd@sign,f,c
  3760  001A36  5028               	movf	___ftadd@sign& (0+255),w,c
  3761  001A38  0B07               	andlw	7
  3762  001A3A  B4D8               	btfsc	status,2,c
  3763  001A3C  D006               	goto	l3706
  3764  001A3E  D7F1               	goto	l3698
  3765  001A40                     l3704:
  3766  001A40  90D8               	bcf	status,0,c
  3767  001A42  321F               	rrcf	___ftadd@f1+2,f,c
  3768  001A44  321E               	rrcf	___ftadd@f1+1,f,c
  3769  001A46  321D               	rrcf	___ftadd@f1,f,c
  3770  001A48  2A2A               	incf	___ftadd@exp1,f,c
  3771  001A4A                     l3706:
  3772  001A4A  5029               	movf	___ftadd@exp2,w,c
  3773  001A4C  622A               	cpfseq	___ftadd@exp1,c
  3774  001A4E  D7F8               	goto	l3704
  3775  001A50  D01A               	goto	l545
  3776  001A52                     l3708:
  3777  001A52  502A               	movf	___ftadd@exp1,w,c
  3778  001A54  6029               	cpfslt	___ftadd@exp2,c
  3779  001A56  D017               	goto	l545
  3780  001A58                     l3710:
  3781  001A58  90D8               	bcf	status,0,c
  3782  001A5A  361D               	rlcf	___ftadd@f1,f,c
  3783  001A5C  361E               	rlcf	___ftadd@f1+1,f,c
  3784  001A5E  361F               	rlcf	___ftadd@f1+2,f,c
  3785  001A60  062A               	decf	___ftadd@exp1,f,c
  3786  001A62  5029               	movf	___ftadd@exp2,w,c
  3787  001A64  182A               	xorwf	___ftadd@exp1,w,c
  3788  001A66  B4D8               	btfsc	status,2,c
  3789  001A68  D00B               	goto	l3718
  3790  001A6A  0628               	decf	___ftadd@sign,f,c
  3791  001A6C  5028               	movf	___ftadd@sign& (0+255),w,c
  3792  001A6E  0B07               	andlw	7
  3793  001A70  B4D8               	btfsc	status,2,c
  3794  001A72  D006               	goto	l3718
  3795  001A74  D7F1               	goto	l3710
  3796  001A76                     l3716:
  3797  001A76  90D8               	bcf	status,0,c
  3798  001A78  3222               	rrcf	___ftadd@f2+2,f,c
  3799  001A7A  3221               	rrcf	___ftadd@f2+1,f,c
  3800  001A7C  3220               	rrcf	___ftadd@f2,f,c
  3801  001A7E  2A29               	incf	___ftadd@exp2,f,c
  3802  001A80                     l3718:
  3803  001A80  5029               	movf	___ftadd@exp2,w,c
  3804  001A82  622A               	cpfseq	___ftadd@exp1,c
  3805  001A84  D7F8               	goto	l3716
  3806  001A86                     l545:
  3807  001A86  AE28               	btfss	___ftadd@sign,7,c
  3808  001A88  D00C               	goto	l554
  3809  001A8A  0EFF               	movlw	255
  3810  001A8C  1A1D               	xorwf	___ftadd@f1,f,c
  3811  001A8E  0EFF               	movlw	255
  3812  001A90  1A1E               	xorwf	___ftadd@f1+1,f,c
  3813  001A92  0EFF               	movlw	255
  3814  001A94  1A1F               	xorwf	___ftadd@f1+2,f,c
  3815  001A96  0E01               	movlw	1
  3816  001A98  261D               	addwf	___ftadd@f1,f,c
  3817  001A9A  0E00               	movlw	0
  3818  001A9C  221E               	addwfc	___ftadd@f1+1,f,c
  3819  001A9E  0E00               	movlw	0
  3820  001AA0  221F               	addwfc	___ftadd@f1+2,f,c
  3821  001AA2                     l554:
  3822  001AA2  AC28               	btfss	___ftadd@sign,6,c
  3823  001AA4  D00C               	goto	l3724
  3824  001AA6  0EFF               	movlw	255
  3825  001AA8  1A20               	xorwf	___ftadd@f2,f,c
  3826  001AAA  0EFF               	movlw	255
  3827  001AAC  1A21               	xorwf	___ftadd@f2+1,f,c
  3828  001AAE  0EFF               	movlw	255
  3829  001AB0  1A22               	xorwf	___ftadd@f2+2,f,c
  3830  001AB2  0E01               	movlw	1
  3831  001AB4  2620               	addwf	___ftadd@f2,f,c
  3832  001AB6  0E00               	movlw	0
  3833  001AB8  2221               	addwfc	___ftadd@f2+1,f,c
  3834  001ABA  0E00               	movlw	0
  3835  001ABC  2222               	addwfc	___ftadd@f2+2,f,c
  3836  001ABE                     l3724:
  3837  001ABE  6E23               	movwf	??___ftadd& (0+255),c
  3838  001AC0  0E00               	movlw	0
  3839  001AC2  6E28               	movwf	___ftadd@sign,c
  3840  001AC4  5023               	movf	??___ftadd& (0+255),w,c
  3841  001AC6  501D               	movf	___ftadd@f1,w,c
  3842  001AC8  2620               	addwf	___ftadd@f2,f,c
  3843  001ACA  501E               	movf	___ftadd@f1+1,w,c
  3844  001ACC  2221               	addwfc	___ftadd@f2+1,f,c
  3845  001ACE  501F               	movf	___ftadd@f1+2,w,c
  3846  001AD0  2222               	addwfc	___ftadd@f2+2,f,c
  3847  001AD2  AE22               	btfss	___ftadd@f2+2,7,c
  3848  001AD4  D010               	goto	l3734
  3849  001AD6  0EFF               	movlw	255
  3850  001AD8  1A20               	xorwf	___ftadd@f2,f,c
  3851  001ADA  0EFF               	movlw	255
  3852  001ADC  1A21               	xorwf	___ftadd@f2+1,f,c
  3853  001ADE  0EFF               	movlw	255
  3854  001AE0  1A22               	xorwf	___ftadd@f2+2,f,c
  3855  001AE2  0E01               	movlw	1
  3856  001AE4  2620               	addwf	___ftadd@f2,f,c
  3857  001AE6  0E00               	movlw	0
  3858  001AE8  2221               	addwfc	___ftadd@f2+1,f,c
  3859  001AEA  0E00               	movlw	0
  3860  001AEC  2222               	addwfc	___ftadd@f2+2,f,c
  3861  001AEE  6E23               	movwf	??___ftadd& (0+255),c
  3862  001AF0  0E01               	movlw	1
  3863  001AF2  6E28               	movwf	___ftadd@sign,c
  3864  001AF4  5023               	movf	??___ftadd& (0+255),w,c
  3865  001AF6                     l3734:
  3866  001AF6  C020  F001         	movff	___ftadd@f2,?___ftpack
  3867  001AFA  C021  F002         	movff	___ftadd@f2+1,?___ftpack+1
  3868  001AFE  C022  F003         	movff	___ftadd@f2+2,?___ftpack+2
  3869  001B02  C02A  F004         	movff	___ftadd@exp1,?___ftpack+3
  3870  001B06  C028  F005         	movff	___ftadd@sign,?___ftpack+4
  3871  001B0A  EC10  F010         	call	___ftpack	;wreg free
  3872  001B0E  C003  F01F         	movff	?___ftpack+2,?___ftadd+2
  3873  001B12  C002  F01E         	movff	?___ftpack+1,?___ftadd+1
  3874  001B16  C001  F01D         	movff	?___ftpack,?___ftadd
  3875  001B1A                     l531:
  3876  001B1A  0012               	return	
  3877  001B1C                     __end_of___ftadd:
  3878                           	opt stack 0
  3879                           tblptru	equ	0xFF8
  3880                           tblptrh	equ	0xFF7
  3881                           tblptrl	equ	0xFF6
  3882                           tablat	equ	0xFF5
  3883                           prodh	equ	0xFF4
  3884                           prodl	equ	0xFF3
  3885                           wreg	equ	0xFE8
  3886                           indf2	equ	0xFDF
  3887                           postinc2	equ	0xFDE
  3888                           postdec2	equ	0xFDD
  3889                           fsr2h	equ	0xFDA
  3890                           fsr2l	equ	0xFD9
  3891                           status	equ	0xFD8
  3892                           
  3893 ;; *************** function ___ftpack *****************
  3894 ;; Defined at:
  3895 ;;		line 63 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\float.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  arg             3    0[COMRAM] unsigned um
  3898 ;;  exp             1    3[COMRAM] unsigned char 
  3899 ;;  sign            1    4[COMRAM] unsigned char 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  3    0[COMRAM] float 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3911 ;;      Params:         5       0       0       0       0       0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3913 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3914 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3915 ;;Total ram usage:        8 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		___awtoft
  3921 ;;		___ftadd
  3922 ;;		___ftdiv
  3923 ;;		___ftmul
  3924 ;;		___lltoft
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text17
  3929  002020                     __ptext17:
  3930                           	opt stack 0
  3931  002020                     ___ftpack:
  3932                           	opt stack 29
  3933                           
  3934                           ;incstack = 0
  3935                           ;incstack = 0
  3936  002020  5004               	movf	___ftpack@exp,w,c
  3937  002022  B4D8               	btfsc	status,2,c
  3938  002024  D005               	goto	l3380
  3939  002026  5001               	movf	___ftpack@arg,w,c
  3940  002028  1002               	iorwf	___ftpack@arg+1,w,c
  3941  00202A  1003               	iorwf	___ftpack@arg+2,w,c
  3942  00202C  A4D8               	btfss	status,2,c
  3943  00202E  D00C               	goto	l3386
  3944  002030                     l3380:
  3945  002030  0E00               	movlw	0
  3946  002032  6E01               	movwf	?___ftpack,c
  3947  002034  0E00               	movlw	0
  3948  002036  6E02               	movwf	?___ftpack+1,c
  3949  002038  0E00               	movlw	0
  3950  00203A  6E03               	movwf	?___ftpack+2,c
  3951  00203C  D04C               	goto	l493
  3952  00203E                     l3384:
  3953  00203E  2A04               	incf	___ftpack@exp,f,c
  3954  002040  90D8               	bcf	status,0,c
  3955  002042  3203               	rrcf	___ftpack@arg+2,f,c
  3956  002044  3202               	rrcf	___ftpack@arg+1,f,c
  3957  002046  3201               	rrcf	___ftpack@arg,f,c
  3958  002048                     l3386:
  3959  002048  0E00               	movlw	0
  3960  00204A  1401               	andwf	___ftpack@arg,w,c
  3961  00204C  6E06               	movwf	??___ftpack& (0+255),c
  3962  00204E  0E00               	movlw	0
  3963  002050  1402               	andwf	___ftpack@arg+1,w,c
  3964  002052  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3965  002054  0EFE               	movlw	254
  3966  002056  1403               	andwf	___ftpack@arg+2,w,c
  3967  002058  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3968  00205A  5006               	movf	??___ftpack,w,c
  3969  00205C  1007               	iorwf	??___ftpack+1,w,c
  3970  00205E  1008               	iorwf	??___ftpack+2,w,c
  3971  002060  B4D8               	btfsc	status,2,c
  3972  002062  D00C               	goto	l3392
  3973  002064  D7EC               	goto	l3384
  3974  002066                     l3388:
  3975  002066  2A04               	incf	___ftpack@exp,f,c
  3976  002068  0E01               	movlw	1
  3977  00206A  2601               	addwf	___ftpack@arg,f,c
  3978  00206C  0E00               	movlw	0
  3979  00206E  2202               	addwfc	___ftpack@arg+1,f,c
  3980  002070  0E00               	movlw	0
  3981  002072  2203               	addwfc	___ftpack@arg+2,f,c
  3982  002074  90D8               	bcf	status,0,c
  3983  002076  3203               	rrcf	___ftpack@arg+2,f,c
  3984  002078  3202               	rrcf	___ftpack@arg+1,f,c
  3985  00207A  3201               	rrcf	___ftpack@arg,f,c
  3986  00207C                     l3392:
  3987  00207C  0E00               	movlw	0
  3988  00207E  1401               	andwf	___ftpack@arg,w,c
  3989  002080  6E06               	movwf	??___ftpack& (0+255),c
  3990  002082  0E00               	movlw	0
  3991  002084  1402               	andwf	___ftpack@arg+1,w,c
  3992  002086  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3993  002088  0EFF               	movlw	255
  3994  00208A  1403               	andwf	___ftpack@arg+2,w,c
  3995  00208C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3996  00208E  5006               	movf	??___ftpack,w,c
  3997  002090  1007               	iorwf	??___ftpack+1,w,c
  3998  002092  1008               	iorwf	??___ftpack+2,w,c
  3999  002094  B4D8               	btfsc	status,2,c
  4000  002096  D006               	goto	l3396
  4001  002098  D7E6               	goto	l3388
  4002  00209A                     l3394:
  4003  00209A  0604               	decf	___ftpack@exp,f,c
  4004  00209C  90D8               	bcf	status,0,c
  4005  00209E  3601               	rlcf	___ftpack@arg,f,c
  4006  0020A0  3602               	rlcf	___ftpack@arg+1,f,c
  4007  0020A2  3603               	rlcf	___ftpack@arg+2,f,c
  4008  0020A4                     l3396:
  4009  0020A4  AE02               	btfss	___ftpack@arg+1,7,c
  4010  0020A6  D7F9               	goto	l3394
  4011  0020A8  A004               	btfss	___ftpack@exp,0,c
  4012  0020AA  9E02               	bcf	___ftpack@arg+1,7,c
  4013  0020AC  90D8               	bcf	status,0,c
  4014  0020AE  3204               	rrcf	___ftpack@exp,f,c
  4015  0020B0  5004               	movf	___ftpack@exp,w,c
  4016  0020B2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4017  0020B4  6A07               	clrf	(??___ftpack+1)& (0+255),c
  4018  0020B6  6A06               	clrf	??___ftpack& (0+255),c
  4019  0020B8  5006               	movf	??___ftpack,w,c
  4020  0020BA  1201               	iorwf	___ftpack@arg,f,c
  4021  0020BC  5007               	movf	??___ftpack+1,w,c
  4022  0020BE  1202               	iorwf	___ftpack@arg+1,f,c
  4023  0020C0  5008               	movf	??___ftpack+2,w,c
  4024  0020C2  1203               	iorwf	___ftpack@arg+2,f,c
  4025  0020C4  5005               	movf	___ftpack@sign,w,c
  4026  0020C6  A4D8               	btfss	status,2,c
  4027  0020C8  8E03               	bsf	___ftpack@arg+2,7,c
  4028  0020CA  C001  F001         	movff	___ftpack@arg,?___ftpack
  4029  0020CE  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4030  0020D2  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4031  0020D6                     l493:
  4032  0020D6  0012               	return	
  4033  0020D8                     __end_of___ftpack:
  4034                           	opt stack 0
  4035                           tblptru	equ	0xFF8
  4036                           tblptrh	equ	0xFF7
  4037                           tblptrl	equ	0xFF6
  4038                           tablat	equ	0xFF5
  4039                           prodh	equ	0xFF4
  4040                           prodl	equ	0xFF3
  4041                           wreg	equ	0xFE8
  4042                           indf2	equ	0xFDF
  4043                           postinc2	equ	0xFDE
  4044                           postdec2	equ	0xFDD
  4045                           fsr2h	equ	0xFDA
  4046                           fsr2l	equ	0xFD9
  4047                           status	equ	0xFD8
  4048                           
  4049 ;; *************** function __div_to_l_ *****************
  4050 ;; Defined at:
  4051 ;;		line 61 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\fldivl.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  f1              3    0[COMRAM] float 
  4054 ;;  f2              3    3[COMRAM] float 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  quot            4    7[COMRAM] unsigned long 
  4057 ;;  exp1            1   12[COMRAM] unsigned char 
  4058 ;;  cntr            1   11[COMRAM] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  4    0[COMRAM] unsigned long 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4068 ;;      Params:         6       0       0       0       0       0       0       0       0
  4069 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4070 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4071 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4072 ;;Total ram usage:       13 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_sprintf
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text18
  4082  001E4C                     __ptext18:
  4083                           	opt stack 0
  4084  001E4C                     __div_to_l_:
  4085                           	opt stack 29
  4086                           
  4087                           ;incstack = 0
  4088                           ;incstack = 0
  4089  001E4C  3403               	rlcf	(__div_to_l_@f1+2)& (0+255),w,c
  4090  001E4E  3404               	rlcf	(__div_to_l_@f1+3)& (0+255),w,c
  4091  001E50  6E0D               	movwf	__div_to_l_@exp1,c
  4092  001E52  660D               	tstfsz	__div_to_l_@exp1& (0+255),c
  4093  001E54  D001               	goto	l3326
  4094  001E56  D05A               	goto	u1660
  4095  001E58                     l3326:
  4096  001E58  3406               	rlcf	(__div_to_l_@f2+2)& (0+255),w,c
  4097  001E5A  3407               	rlcf	(__div_to_l_@f2+3)& (0+255),w,c
  4098  001E5C  6E0C               	movwf	__div_to_l_@cntr,c
  4099  001E5E  660C               	tstfsz	__div_to_l_@cntr& (0+255),c
  4100  001E60  D001               	goto	l3332
  4101  001E62  D054               	goto	u1660
  4102  001E64                     l3332:
  4103  001E64  8E03               	bsf	__div_to_l_@f1+2,7,c
  4104  001E66  0EFF               	movlw	255
  4105  001E68  1601               	andwf	__div_to_l_@f1,f,c
  4106  001E6A  0EFF               	movlw	255
  4107  001E6C  1602               	andwf	__div_to_l_@f1+1,f,c
  4108  001E6E  0EFF               	movlw	255
  4109  001E70  1603               	andwf	__div_to_l_@f1+2,f,c
  4110  001E72  0E00               	movlw	0
  4111  001E74  1604               	andwf	__div_to_l_@f1+3,f,c
  4112  001E76  8E06               	bsf	__div_to_l_@f2+2,7,c
  4113  001E78  0EFF               	movlw	255
  4114  001E7A  1604               	andwf	__div_to_l_@f2,f,c
  4115  001E7C  0EFF               	movlw	255
  4116  001E7E  1605               	andwf	__div_to_l_@f2+1,f,c
  4117  001E80  0EFF               	movlw	255
  4118  001E82  1606               	andwf	__div_to_l_@f2+2,f,c
  4119  001E84  0E00               	movlw	0
  4120  001E86  1607               	andwf	__div_to_l_@f2+3,f,c
  4121  001E88  0E00               	movlw	0
  4122  001E8A  6E08               	movwf	__div_to_l_@quot,c
  4123  001E8C  0E00               	movlw	0
  4124  001E8E  6E09               	movwf	__div_to_l_@quot+1,c
  4125  001E90  0E00               	movlw	0
  4126  001E92  6E0A               	movwf	__div_to_l_@quot+2,c
  4127  001E94  0E00               	movlw	0
  4128  001E96  6E0B               	movwf	__div_to_l_@quot+3,c
  4129  001E98  0E7F               	movlw	127
  4130  001E9A  5E0D               	subwf	__div_to_l_@exp1,f,c
  4131  001E9C  500C               	movf	__div_to_l_@cntr,w,c
  4132  001E9E  0FA0               	addlw	160
  4133  001EA0  5E0D               	subwf	__div_to_l_@exp1,f,c
  4134  001EA2  6E07               	movwf	??__div_to_l_& (0+255),c
  4135  001EA4  0E20               	movlw	32
  4136  001EA6  6E0C               	movwf	__div_to_l_@cntr,c
  4137  001EA8  5007               	movf	??__div_to_l_& (0+255),w,c
  4138  001EAA                     l454:
  4139  001EAA  90D8               	bcf	status,0,c
  4140  001EAC  3608               	rlcf	__div_to_l_@quot,f,c
  4141  001EAE  3609               	rlcf	__div_to_l_@quot+1,f,c
  4142  001EB0  360A               	rlcf	__div_to_l_@quot+2,f,c
  4143  001EB2  360B               	rlcf	__div_to_l_@quot+3,f,c
  4144  001EB4  5004               	movf	__div_to_l_@f2,w,c
  4145  001EB6  5C01               	subwf	__div_to_l_@f1,w,c
  4146  001EB8  5005               	movf	__div_to_l_@f2+1,w,c
  4147  001EBA  5802               	subwfb	__div_to_l_@f1+1,w,c
  4148  001EBC  5006               	movf	__div_to_l_@f2+2,w,c
  4149  001EBE  5803               	subwfb	__div_to_l_@f1+2,w,c
  4150  001EC0  5007               	movf	__div_to_l_@f2+3,w,c
  4151  001EC2  5804               	subwfb	__div_to_l_@f1+3,w,c
  4152  001EC4  A0D8               	btfss	status,0,c
  4153  001EC6  D009               	goto	l3352
  4154  001EC8  5004               	movf	__div_to_l_@f2,w,c
  4155  001ECA  5E01               	subwf	__div_to_l_@f1,f,c
  4156  001ECC  5005               	movf	__div_to_l_@f2+1,w,c
  4157  001ECE  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4158  001ED0  5006               	movf	__div_to_l_@f2+2,w,c
  4159  001ED2  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4160  001ED4  5007               	movf	__div_to_l_@f2+3,w,c
  4161  001ED6  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4162  001ED8  8008               	bsf	__div_to_l_@quot,0,c
  4163  001EDA                     l3352:
  4164  001EDA  90D8               	bcf	status,0,c
  4165  001EDC  3601               	rlcf	__div_to_l_@f1,f,c
  4166  001EDE  3602               	rlcf	__div_to_l_@f1+1,f,c
  4167  001EE0  3603               	rlcf	__div_to_l_@f1+2,f,c
  4168  001EE2  3604               	rlcf	__div_to_l_@f1+3,f,c
  4169  001EE4  2E0C               	decfsz	__div_to_l_@cntr,f,c
  4170  001EE6  D7E1               	goto	l454
  4171  001EE8  AE0D               	btfss	__div_to_l_@exp1,7,c
  4172  001EEA  D00D               	goto	l3366
  4173  001EEC  500D               	movf	__div_to_l_@exp1,w,c
  4174  001EEE  0A80               	xorlw	128
  4175  001EF0  0F9F               	addlw	159
  4176  001EF2  A0D8               	btfss	status,0,c
  4177  001EF4  D00B               	goto	u1660
  4178  001EF6                     l3362:
  4179  001EF6  90D8               	bcf	status,0,c
  4180  001EF8  320B               	rrcf	__div_to_l_@quot+3,f,c
  4181  001EFA  320A               	rrcf	__div_to_l_@quot+2,f,c
  4182  001EFC  3209               	rrcf	__div_to_l_@quot+1,f,c
  4183  001EFE  3208               	rrcf	__div_to_l_@quot,f,c
  4184  001F00  3E0D               	incfsz	__div_to_l_@exp1,f,c
  4185  001F02  D7F9               	goto	l3362
  4186  001F04  D014               	goto	l461
  4187  001F06                     l3366:
  4188  001F06  0E1F               	movlw	31
  4189  001F08  640D               	cpfsgt	__div_to_l_@exp1,c
  4190  001F0A  D00F               	goto	l3374
  4191  001F0C                     u1660:
  4192  001F0C  0E00               	movlw	0
  4193  001F0E  6E01               	movwf	?__div_to_l_,c
  4194  001F10  0E00               	movlw	0
  4195  001F12  6E02               	movwf	?__div_to_l_+1,c
  4196  001F14  0E00               	movlw	0
  4197  001F16  6E03               	movwf	?__div_to_l_+2,c
  4198  001F18  0E00               	movlw	0
  4199  001F1A  6E04               	movwf	?__div_to_l_+3,c
  4200  001F1C  D010               	goto	l452
  4201  001F1E                     l3372:
  4202  001F1E  90D8               	bcf	status,0,c
  4203  001F20  3608               	rlcf	__div_to_l_@quot,f,c
  4204  001F22  3609               	rlcf	__div_to_l_@quot+1,f,c
  4205  001F24  360A               	rlcf	__div_to_l_@quot+2,f,c
  4206  001F26  360B               	rlcf	__div_to_l_@quot+3,f,c
  4207  001F28  060D               	decf	__div_to_l_@exp1,f,c
  4208  001F2A                     l3374:
  4209  001F2A  660D               	tstfsz	__div_to_l_@exp1,c
  4210  001F2C  D7F8               	goto	l3372
  4211  001F2E                     l461:
  4212  001F2E  C008  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4213  001F32  C009  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4214  001F36  C00A  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4215  001F3A  C00B  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4216  001F3E                     l452:
  4217  001F3E  0012               	return	
  4218  001F40                     __end_of__div_to_l_:
  4219                           	opt stack 0
  4220                           tblptru	equ	0xFF8
  4221                           tblptrh	equ	0xFF7
  4222                           tblptrl	equ	0xFF6
  4223                           tablat	equ	0xFF5
  4224                           prodh	equ	0xFF4
  4225                           prodl	equ	0xFF3
  4226                           wreg	equ	0xFE8
  4227                           indf2	equ	0xFDF
  4228                           postinc2	equ	0xFDE
  4229                           postdec2	equ	0xFDD
  4230                           fsr2h	equ	0xFDA
  4231                           fsr2l	equ	0xFD9
  4232                           status	equ	0xFD8
  4233                           
  4234 ;; *************** function __tdiv_to_l_ *****************
  4235 ;; Defined at:
  4236 ;;		line 61 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftdivl.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  f1              3    0[COMRAM] float 
  4239 ;;  f2              3    3[COMRAM] float 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  quot            4   11[COMRAM] unsigned long 
  4242 ;;  exp1            1   16[COMRAM] unsigned char 
  4243 ;;  cntr            1   15[COMRAM] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  4    0[COMRAM] unsigned long 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4253 ;;      Params:         6       0       0       0       0       0       0       0       0
  4254 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4255 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4256 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4257 ;;Total ram usage:       17 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_sprintf
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text19
  4267  001B1C                     __ptext19:
  4268                           	opt stack 0
  4269  001B1C                     __tdiv_to_l_:
  4270                           	opt stack 29
  4271                           
  4272                           ;incstack = 0
  4273                           ;incstack = 0
  4274  001B1C  0E0F               	movlw	15
  4275  001B1E  6E07               	movwf	??__tdiv_to_l_& (0+255),c
  4276  001B20  C001  F008         	movff	__tdiv_to_l_@f1,??__tdiv_to_l_+1
  4277  001B24  C002  F009         	movff	__tdiv_to_l_@f1+1,??__tdiv_to_l_+2
  4278  001B28  C003  F00A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_+3
  4279  001B2C  2807               	incf	??__tdiv_to_l_,w,c
  4280  001B2E  6E0B               	movwf	(??__tdiv_to_l_+4)& (0+255),c
  4281  001B30  D004               	goto	u1520
  4282  001B32                     u1525:
  4283  001B32  90D8               	bcf	status,0,c
  4284  001B34  320A               	rrcf	??__tdiv_to_l_+3,f,c
  4285  001B36  3209               	rrcf	??__tdiv_to_l_+2,f,c
  4286  001B38  3208               	rrcf	??__tdiv_to_l_+1,f,c
  4287  001B3A                     u1520:
  4288  001B3A  2E0B               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,c
  4289  001B3C  D7FA               	goto	u1525
  4290  001B3E  5008               	movf	??__tdiv_to_l_+1,w,c
  4291  001B40  6E11               	movwf	__tdiv_to_l_@exp1,c
  4292  001B42  6611               	tstfsz	__tdiv_to_l_@exp1& (0+255),c
  4293  001B44  D001               	goto	l3270
  4294  001B46  D061               	goto	u1590
  4295  001B48                     l3270:
  4296  001B48  0E0F               	movlw	15
  4297  001B4A  6E07               	movwf	??__tdiv_to_l_& (0+255),c
  4298  001B4C  C004  F008         	movff	__tdiv_to_l_@f2,??__tdiv_to_l_+1
  4299  001B50  C005  F009         	movff	__tdiv_to_l_@f2+1,??__tdiv_to_l_+2
  4300  001B54  C006  F00A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_+3
  4301  001B58  2807               	incf	??__tdiv_to_l_,w,c
  4302  001B5A  6E0B               	movwf	(??__tdiv_to_l_+4)& (0+255),c
  4303  001B5C  D004               	goto	u1540
  4304  001B5E                     u1545:
  4305  001B5E  90D8               	bcf	status,0,c
  4306  001B60  320A               	rrcf	??__tdiv_to_l_+3,f,c
  4307  001B62  3209               	rrcf	??__tdiv_to_l_+2,f,c
  4308  001B64  3208               	rrcf	??__tdiv_to_l_+1,f,c
  4309  001B66                     u1540:
  4310  001B66  2E0B               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,c
  4311  001B68  D7FA               	goto	u1545
  4312  001B6A  5008               	movf	??__tdiv_to_l_+1,w,c
  4313  001B6C  6E10               	movwf	__tdiv_to_l_@cntr,c
  4314  001B6E  6610               	tstfsz	__tdiv_to_l_@cntr& (0+255),c
  4315  001B70  D001               	goto	l3276
  4316  001B72  D04B               	goto	u1590
  4317  001B74                     l3276:
  4318  001B74  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4319  001B76  0EFF               	movlw	255
  4320  001B78  1601               	andwf	__tdiv_to_l_@f1,f,c
  4321  001B7A  0EFF               	movlw	255
  4322  001B7C  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4323  001B7E  0E00               	movlw	0
  4324  001B80  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4325  001B82  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  4326  001B84  0EFF               	movlw	255
  4327  001B86  1604               	andwf	__tdiv_to_l_@f2,f,c
  4328  001B88  0EFF               	movlw	255
  4329  001B8A  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  4330  001B8C  0E00               	movlw	0
  4331  001B8E  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  4332  001B90  0E00               	movlw	0
  4333  001B92  6E0C               	movwf	__tdiv_to_l_@quot,c
  4334  001B94  0E00               	movlw	0
  4335  001B96  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  4336  001B98  0E00               	movlw	0
  4337  001B9A  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  4338  001B9C  0E00               	movlw	0
  4339  001B9E  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  4340  001BA0  0E7F               	movlw	127
  4341  001BA2  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4342  001BA4  5010               	movf	__tdiv_to_l_@cntr,w,c
  4343  001BA6  0F98               	addlw	152
  4344  001BA8  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4345  001BAA  6E07               	movwf	??__tdiv_to_l_& (0+255),c
  4346  001BAC  0E18               	movlw	24
  4347  001BAE  6E10               	movwf	__tdiv_to_l_@cntr,c
  4348  001BB0  5007               	movf	??__tdiv_to_l_& (0+255),w,c
  4349  001BB2                     l3290:
  4350  001BB2  90D8               	bcf	status,0,c
  4351  001BB4  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4352  001BB6  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4353  001BB8  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4354  001BBA  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4355  001BBC  5004               	movf	__tdiv_to_l_@f2,w,c
  4356  001BBE  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4357  001BC0  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4358  001BC2  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4359  001BC4  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4360  001BC6  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4361  001BC8  A0D8               	btfss	status,0,c
  4362  001BCA  D007               	goto	l573
  4363  001BCC  5004               	movf	__tdiv_to_l_@f2,w,c
  4364  001BCE  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4365  001BD0  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4366  001BD2  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4367  001BD4  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4368  001BD6  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4369  001BD8  800C               	bsf	__tdiv_to_l_@quot,0,c
  4370  001BDA                     l573:
  4371  001BDA  90D8               	bcf	status,0,c
  4372  001BDC  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4373  001BDE  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4374  001BE0  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4375  001BE2  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  4376  001BE4  D7E6               	goto	l3290
  4377  001BE6  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  4378  001BE8  D00D               	goto	l3310
  4379  001BEA  5011               	movf	__tdiv_to_l_@exp1,w,c
  4380  001BEC  0A80               	xorlw	128
  4381  001BEE  0F97               	addlw	151
  4382  001BF0  A0D8               	btfss	status,0,c
  4383  001BF2  D00B               	goto	u1590
  4384  001BF4                     l3306:
  4385  001BF4  90D8               	bcf	status,0,c
  4386  001BF6  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  4387  001BF8  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  4388  001BFA  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  4389  001BFC  320C               	rrcf	__tdiv_to_l_@quot,f,c
  4390  001BFE  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  4391  001C00  D7F9               	goto	l3306
  4392  001C02  D014               	goto	l579
  4393  001C04                     l3310:
  4394  001C04  0E17               	movlw	23
  4395  001C06  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  4396  001C08  D00F               	goto	l3318
  4397  001C0A                     u1590:
  4398  001C0A  0E00               	movlw	0
  4399  001C0C  6E01               	movwf	?__tdiv_to_l_,c
  4400  001C0E  0E00               	movlw	0
  4401  001C10  6E02               	movwf	?__tdiv_to_l_+1,c
  4402  001C12  0E00               	movlw	0
  4403  001C14  6E03               	movwf	?__tdiv_to_l_+2,c
  4404  001C16  0E00               	movlw	0
  4405  001C18  6E04               	movwf	?__tdiv_to_l_+3,c
  4406  001C1A  D010               	goto	l570
  4407  001C1C                     l3316:
  4408  001C1C  90D8               	bcf	status,0,c
  4409  001C1E  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4410  001C20  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4411  001C22  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4412  001C24  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4413  001C26  0611               	decf	__tdiv_to_l_@exp1,f,c
  4414  001C28                     l3318:
  4415  001C28  6611               	tstfsz	__tdiv_to_l_@exp1,c
  4416  001C2A  D7F8               	goto	l3316
  4417  001C2C                     l579:
  4418  001C2C  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4419  001C30  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4420  001C34  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4421  001C38  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4422  001C3C                     l570:
  4423  001C3C  0012               	return	
  4424  001C3E                     __end_of__tdiv_to_l_:
  4425                           	opt stack 0
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           prodh	equ	0xFF4
  4431                           prodl	equ	0xFF3
  4432                           wreg	equ	0xFE8
  4433                           indf2	equ	0xFDF
  4434                           postinc2	equ	0xFDE
  4435                           postdec2	equ	0xFDD
  4436                           fsr2h	equ	0xFDA
  4437                           fsr2l	equ	0xFD9
  4438                           status	equ	0xFD8
  4439                           
  4440 ;; *************** function _scale *****************
  4441 ;; Defined at:
  4442 ;;		line 426 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\doprnt.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  scl             1   54[COMRAM] char 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  3   54[COMRAM] char 
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4456 ;;      Params:         3       0       0       0       0       0       0       0       0
  4457 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4458 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4459 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4460 ;;Total ram usage:       12 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    2
  4463 ;; This function calls:
  4464 ;;		___ftmul
  4465 ;;		___awdiv
  4466 ;;		___awmod
  4467 ;;		___wmul
  4468 ;; This function is called by:
  4469 ;;		_sprintf
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text20
  4474  000F74                     __ptext20:
  4475                           	opt stack 0
  4476  000F74                     _scale:
  4477                           	opt stack 27
  4478                           
  4479                           ;doprnt.c: 428: if(scl < 0) {
  4480                           
  4481                           ;incstack = 0
  4482                           ;incstack = 0
  4483  000F74  AE37               	btfss	scale@scl,7,c
  4484  000F76  D108               	goto	l3814
  4485                           
  4486                           ;doprnt.c: 429: scl = -scl;
  4487  000F78  6C37               	negf	scale@scl,c
  4488                           
  4489                           ;doprnt.c: 430: if(scl>=110)
  4490  000F7A  5037               	movf	scale@scl,w,c
  4491  000F7C  0A80               	xorlw	128
  4492  000F7E  0F12               	addlw	-238
  4493  000F80  A0D8               	btfss	status,0,c
  4494  000F82  D09D               	goto	l3804
  4495                           
  4496                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4497  000F84  0E00               	movlw	0
  4498  000F86  6E14               	movwf	?___wmul+3,c
  4499  000F88  0E03               	movlw	3
  4500  000F8A  6E13               	movwf	?___wmul+2,c
  4501  000F8C  0E00               	movlw	0
  4502  000F8E  6E0B               	movwf	?___awdiv+3,c
  4503  000F90  0E0A               	movlw	10
  4504  000F92  6E0A               	movwf	?___awdiv+2,c
  4505  000F94  0E00               	movlw	0
  4506  000F96  6E04               	movwf	?___awmod+3,c
  4507  000F98  0E64               	movlw	100
  4508  000F9A  6E03               	movwf	?___awmod+2,c
  4509  000F9C  5037               	movf	scale@scl,w,c
  4510  000F9E  6E01               	movwf	?___awmod,c
  4511  000FA0  6A02               	clrf	?___awmod+1,c
  4512  000FA2  BE01               	btfsc	?___awmod,7,c
  4513  000FA4  0602               	decf	?___awmod+1,f,c
  4514  000FA6  EC3F  F011         	call	___awmod	;wreg free
  4515  000FAA  C001  F008         	movff	?___awmod,?___awdiv
  4516  000FAE  C002  F009         	movff	?___awmod+1,?___awdiv+1
  4517  000FB2  ECB4  F010         	call	___awdiv	;wreg free
  4518  000FB6  0E09               	movlw	9
  4519  000FB8  2408               	addwf	?___awdiv,w,c
  4520  000FBA  6E11               	movwf	?___wmul,c
  4521  000FBC  0E00               	movlw	0
  4522  000FBE  2009               	addwfc	?___awdiv+1,w,c
  4523  000FC0  6E12               	movwf	?___wmul+1,c
  4524  000FC2  EC83  F012         	call	___wmul	;wreg free
  4525  000FC6  0E28               	movlw	low __npowers_
  4526  000FC8  2411               	addwf	?___wmul,w,c
  4527  000FCA  6EF6               	movwf	tblptrl,c
  4528  000FCC  0E08               	movlw	high __npowers_
  4529  000FCE  2012               	addwfc	?___wmul+1,w,c
  4530  000FD0  6EF7               	movwf	tblptrh,c
  4531  000FD2  0009               	tblrd		*+
  4532  000FD4  CFF5 F03A          	movff	tablat,??_scale
  4533  000FD8  0009               	tblrd		*+
  4534  000FDA  CFF5 F03B          	movff	tablat,??_scale+1
  4535  000FDE  0009               	tblrd		*+
  4536  000FE0  CFF5 F03C          	movff	tablat,??_scale+2
  4537  000FE4  C03C  F02B         	movff	??_scale+2,?___ftmul+5
  4538  000FE8  C03B  F02A         	movff	??_scale+1,?___ftmul+4
  4539  000FEC  C03A  F029         	movff	??_scale,?___ftmul+3
  4540  000FF0  0E00               	movlw	0
  4541  000FF2  6E14               	movwf	?___wmul+3,c
  4542  000FF4  0E03               	movlw	3
  4543  000FF6  6E13               	movwf	?___wmul+2,c
  4544  000FF8  0E00               	movlw	0
  4545  000FFA  6E0B               	movwf	?___awdiv+3,c
  4546  000FFC  0E64               	movlw	100
  4547  000FFE  6E0A               	movwf	?___awdiv+2,c
  4548  001000  5037               	movf	scale@scl,w,c
  4549  001002  6E08               	movwf	?___awdiv,c
  4550  001004  6A09               	clrf	?___awdiv+1,c
  4551  001006  BE08               	btfsc	?___awdiv,7,c
  4552  001008  0609               	decf	?___awdiv+1,f,c
  4553  00100A  ECB4  F010         	call	___awdiv	;wreg free
  4554  00100E  0E12               	movlw	18
  4555  001010  2408               	addwf	?___awdiv,w,c
  4556  001012  6E11               	movwf	?___wmul,c
  4557  001014  0E00               	movlw	0
  4558  001016  2009               	addwfc	?___awdiv+1,w,c
  4559  001018  6E12               	movwf	?___wmul+1,c
  4560  00101A  EC83  F012         	call	___wmul	;wreg free
  4561  00101E  0E28               	movlw	low __npowers_
  4562  001020  2411               	addwf	?___wmul,w,c
  4563  001022  6EF6               	movwf	tblptrl,c
  4564  001024  0E08               	movlw	high __npowers_
  4565  001026  2012               	addwfc	?___wmul+1,w,c
  4566  001028  6EF7               	movwf	tblptrh,c
  4567  00102A  0009               	tblrd		*+
  4568  00102C  CFF5 F03D          	movff	tablat,??_scale+3
  4569  001030  0009               	tblrd		*+
  4570  001032  CFF5 F03E          	movff	tablat,??_scale+4
  4571  001036  0009               	tblrd		*+
  4572  001038  CFF5 F03F          	movff	tablat,??_scale+5
  4573  00103C  C03F  F028         	movff	??_scale+5,?___ftmul+2
  4574  001040  C03E  F027         	movff	??_scale+4,?___ftmul+1
  4575  001044  C03D  F026         	movff	??_scale+3,?___ftmul
  4576  001048  EC1F  F00E         	call	___ftmul	;wreg free
  4577  00104C  C028  F042         	movff	?___ftmul+2,_scale$807+2
  4578  001050  C027  F041         	movff	?___ftmul+1,_scale$807+1
  4579  001054  C026  F040         	movff	?___ftmul,_scale$807
  4580                           
  4581                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4582  001058  C040  F026         	movff	_scale$807,?___ftmul
  4583  00105C  C041  F027         	movff	_scale$807+1,?___ftmul+1
  4584  001060  C042  F028         	movff	_scale$807+2,?___ftmul+2
  4585  001064  0E00               	movlw	0
  4586  001066  6E14               	movwf	?___wmul+3,c
  4587  001068  0E03               	movlw	3
  4588  00106A  6E13               	movwf	?___wmul+2,c
  4589  00106C  0E00               	movlw	0
  4590  00106E  6E04               	movwf	?___awmod+3,c
  4591  001070  0E0A               	movlw	10
  4592  001072  6E03               	movwf	?___awmod+2,c
  4593  001074  5037               	movf	scale@scl,w,c
  4594  001076  6E01               	movwf	?___awmod,c
  4595  001078  6A02               	clrf	?___awmod+1,c
  4596  00107A  BE01               	btfsc	?___awmod,7,c
  4597  00107C  0602               	decf	?___awmod+1,f,c
  4598  00107E  EC3F  F011         	call	___awmod	;wreg free
  4599  001082  C001  F011         	movff	?___awmod,?___wmul
  4600  001086  C002  F012         	movff	?___awmod+1,?___wmul+1
  4601  00108A  EC83  F012         	call	___wmul	;wreg free
  4602  00108E  0E28               	movlw	low __npowers_
  4603  001090  2411               	addwf	?___wmul,w,c
  4604  001092  6EF6               	movwf	tblptrl,c
  4605  001094  0E08               	movlw	high __npowers_
  4606  001096  2012               	addwfc	?___wmul+1,w,c
  4607  001098  6EF7               	movwf	tblptrh,c
  4608  00109A  0009               	tblrd		*+
  4609  00109C  CFF5 F03A          	movff	tablat,??_scale
  4610  0010A0  0009               	tblrd		*+
  4611  0010A2  CFF5 F03B          	movff	tablat,??_scale+1
  4612  0010A6  0009               	tblrd		*+
  4613  0010A8  CFF5 F03C          	movff	tablat,??_scale+2
  4614  0010AC  C03C  F02B         	movff	??_scale+2,?___ftmul+5
  4615  0010B0  C03B  F02A         	movff	??_scale+1,?___ftmul+4
  4616  0010B4  C03A  F029         	movff	??_scale,?___ftmul+3
  4617  0010B8  EC1F  F00E         	call	___ftmul	;wreg free
  4618  0010BC  D164               	goto	L17
  4619  0010BE                     l3804:
  4620                           
  4621                           ;doprnt.c: 432: else if(scl > 10)
  4622  0010BE  5037               	movf	scale@scl,w,c
  4623  0010C0  0A80               	xorlw	128
  4624  0010C2  0F75               	addlw	-139
  4625  0010C4  A0D8               	btfss	status,0,c
  4626  0010C6  D059               	goto	l3810
  4627                           
  4628                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4629  0010C8  0E00               	movlw	0
  4630  0010CA  6E14               	movwf	?___wmul+3,c
  4631  0010CC  0E03               	movlw	3
  4632  0010CE  6E13               	movwf	?___wmul+2,c
  4633  0010D0  0E00               	movlw	0
  4634  0010D2  6E0B               	movwf	?___awdiv+3,c
  4635  0010D4  0E0A               	movlw	10
  4636  0010D6  6E0A               	movwf	?___awdiv+2,c
  4637  0010D8  5037               	movf	scale@scl,w,c
  4638  0010DA  6E08               	movwf	?___awdiv,c
  4639  0010DC  6A09               	clrf	?___awdiv+1,c
  4640  0010DE  BE08               	btfsc	?___awdiv,7,c
  4641  0010E0  0609               	decf	?___awdiv+1,f,c
  4642  0010E2  ECB4  F010         	call	___awdiv	;wreg free
  4643  0010E6  0E09               	movlw	9
  4644  0010E8  2408               	addwf	?___awdiv,w,c
  4645  0010EA  6E11               	movwf	?___wmul,c
  4646  0010EC  0E00               	movlw	0
  4647  0010EE  2009               	addwfc	?___awdiv+1,w,c
  4648  0010F0  6E12               	movwf	?___wmul+1,c
  4649  0010F2  EC83  F012         	call	___wmul	;wreg free
  4650  0010F6  0E28               	movlw	low __npowers_
  4651  0010F8  2411               	addwf	?___wmul,w,c
  4652  0010FA  6EF6               	movwf	tblptrl,c
  4653  0010FC  0E08               	movlw	high __npowers_
  4654  0010FE  2012               	addwfc	?___wmul+1,w,c
  4655  001100  6EF7               	movwf	tblptrh,c
  4656  001102  0009               	tblrd		*+
  4657  001104  CFF5 F03A          	movff	tablat,??_scale
  4658  001108  0009               	tblrd		*+
  4659  00110A  CFF5 F03B          	movff	tablat,??_scale+1
  4660  00110E  0009               	tblrd		*+
  4661  001110  CFF5 F03C          	movff	tablat,??_scale+2
  4662  001114  C03C  F028         	movff	??_scale+2,?___ftmul+2
  4663  001118  C03B  F027         	movff	??_scale+1,?___ftmul+1
  4664  00111C  C03A  F026         	movff	??_scale,?___ftmul
  4665  001120  0E00               	movlw	0
  4666  001122  6E14               	movwf	?___wmul+3,c
  4667  001124  0E03               	movlw	3
  4668  001126  6E13               	movwf	?___wmul+2,c
  4669  001128  0E00               	movlw	0
  4670  00112A  6E04               	movwf	?___awmod+3,c
  4671  00112C  0E0A               	movlw	10
  4672  00112E  6E03               	movwf	?___awmod+2,c
  4673  001130  5037               	movf	scale@scl,w,c
  4674  001132  6E01               	movwf	?___awmod,c
  4675  001134  6A02               	clrf	?___awmod+1,c
  4676  001136  BE01               	btfsc	?___awmod,7,c
  4677  001138  0602               	decf	?___awmod+1,f,c
  4678  00113A  EC3F  F011         	call	___awmod	;wreg free
  4679  00113E  C001  F011         	movff	?___awmod,?___wmul
  4680  001142  C002  F012         	movff	?___awmod+1,?___wmul+1
  4681  001146  EC83  F012         	call	___wmul	;wreg free
  4682  00114A  0E28               	movlw	low __npowers_
  4683  00114C  2411               	addwf	?___wmul,w,c
  4684  00114E  6EF6               	movwf	tblptrl,c
  4685  001150  0E08               	movlw	high __npowers_
  4686  001152  2012               	addwfc	?___wmul+1,w,c
  4687  001154  6EF7               	movwf	tblptrh,c
  4688  001156  0009               	tblrd		*+
  4689  001158  CFF5 F03D          	movff	tablat,??_scale+3
  4690  00115C  0009               	tblrd		*+
  4691  00115E  CFF5 F03E          	movff	tablat,??_scale+4
  4692  001162  0009               	tblrd		*+
  4693  001164  CFF5 F03F          	movff	tablat,??_scale+5
  4694  001168  C03F  F02B         	movff	??_scale+5,?___ftmul+5
  4695  00116C  C03E  F02A         	movff	??_scale+4,?___ftmul+4
  4696  001170  C03D  F029         	movff	??_scale+3,?___ftmul+3
  4697  001174  EC1F  F00E         	call	___ftmul	;wreg free
  4698  001178  D106               	goto	L17
  4699  00117A                     l3810:
  4700                           
  4701                           ;doprnt.c: 434: return _npowers_[scl];
  4702  00117A  5037               	movf	scale@scl,w,c
  4703  00117C  0D03               	mullw	3
  4704  00117E  0E28               	movlw	low __npowers_
  4705  001180  24F3               	addwf	prodl,w,c
  4706  001182  6EF6               	movwf	tblptrl,c
  4707  001184  0E08               	movlw	high __npowers_
  4708  001186  D10C               	goto	L16
  4709  001188                     l3814:
  4710                           
  4711                           ;doprnt.c: 435: }
  4712                           ;doprnt.c: 436: if(scl>=110)
  4713  001188  5037               	movf	scale@scl,w,c
  4714  00118A  0A80               	xorlw	128
  4715  00118C  0F12               	addlw	-238
  4716  00118E  A0D8               	btfss	status,0,c
  4717  001190  D09D               	goto	l3822
  4718                           
  4719                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4720  001192  0E00               	movlw	0
  4721  001194  6E14               	movwf	?___wmul+3,c
  4722  001196  0E03               	movlw	3
  4723  001198  6E13               	movwf	?___wmul+2,c
  4724  00119A  0E00               	movlw	0
  4725  00119C  6E0B               	movwf	?___awdiv+3,c
  4726  00119E  0E0A               	movlw	10
  4727  0011A0  6E0A               	movwf	?___awdiv+2,c
  4728  0011A2  0E00               	movlw	0
  4729  0011A4  6E04               	movwf	?___awmod+3,c
  4730  0011A6  0E64               	movlw	100
  4731  0011A8  6E03               	movwf	?___awmod+2,c
  4732  0011AA  5037               	movf	scale@scl,w,c
  4733  0011AC  6E01               	movwf	?___awmod,c
  4734  0011AE  6A02               	clrf	?___awmod+1,c
  4735  0011B0  BE01               	btfsc	?___awmod,7,c
  4736  0011B2  0602               	decf	?___awmod+1,f,c
  4737  0011B4  EC3F  F011         	call	___awmod	;wreg free
  4738  0011B8  C001  F008         	movff	?___awmod,?___awdiv
  4739  0011BC  C002  F009         	movff	?___awmod+1,?___awdiv+1
  4740  0011C0  ECB4  F010         	call	___awdiv	;wreg free
  4741  0011C4  0E09               	movlw	9
  4742  0011C6  2408               	addwf	?___awdiv,w,c
  4743  0011C8  6E11               	movwf	?___wmul,c
  4744  0011CA  0E00               	movlw	0
  4745  0011CC  2009               	addwfc	?___awdiv+1,w,c
  4746  0011CE  6E12               	movwf	?___wmul+1,c
  4747  0011D0  EC83  F012         	call	___wmul	;wreg free
  4748  0011D4  0E4F               	movlw	low __powers_
  4749  0011D6  2411               	addwf	?___wmul,w,c
  4750  0011D8  6EF6               	movwf	tblptrl,c
  4751  0011DA  0E08               	movlw	high __powers_
  4752  0011DC  2012               	addwfc	?___wmul+1,w,c
  4753  0011DE  6EF7               	movwf	tblptrh,c
  4754  0011E0  0009               	tblrd		*+
  4755  0011E2  CFF5 F03A          	movff	tablat,??_scale
  4756  0011E6  0009               	tblrd		*+
  4757  0011E8  CFF5 F03B          	movff	tablat,??_scale+1
  4758  0011EC  0009               	tblrd		*+
  4759  0011EE  CFF5 F03C          	movff	tablat,??_scale+2
  4760  0011F2  C03C  F02B         	movff	??_scale+2,?___ftmul+5
  4761  0011F6  C03B  F02A         	movff	??_scale+1,?___ftmul+4
  4762  0011FA  C03A  F029         	movff	??_scale,?___ftmul+3
  4763  0011FE  0E00               	movlw	0
  4764  001200  6E14               	movwf	?___wmul+3,c
  4765  001202  0E03               	movlw	3
  4766  001204  6E13               	movwf	?___wmul+2,c
  4767  001206  0E00               	movlw	0
  4768  001208  6E0B               	movwf	?___awdiv+3,c
  4769  00120A  0E64               	movlw	100
  4770  00120C  6E0A               	movwf	?___awdiv+2,c
  4771  00120E  5037               	movf	scale@scl,w,c
  4772  001210  6E08               	movwf	?___awdiv,c
  4773  001212  6A09               	clrf	?___awdiv+1,c
  4774  001214  BE08               	btfsc	?___awdiv,7,c
  4775  001216  0609               	decf	?___awdiv+1,f,c
  4776  001218  ECB4  F010         	call	___awdiv	;wreg free
  4777  00121C  0E12               	movlw	18
  4778  00121E  2408               	addwf	?___awdiv,w,c
  4779  001220  6E11               	movwf	?___wmul,c
  4780  001222  0E00               	movlw	0
  4781  001224  2009               	addwfc	?___awdiv+1,w,c
  4782  001226  6E12               	movwf	?___wmul+1,c
  4783  001228  EC83  F012         	call	___wmul	;wreg free
  4784  00122C  0E4F               	movlw	low __powers_
  4785  00122E  2411               	addwf	?___wmul,w,c
  4786  001230  6EF6               	movwf	tblptrl,c
  4787  001232  0E08               	movlw	high __powers_
  4788  001234  2012               	addwfc	?___wmul+1,w,c
  4789  001236  6EF7               	movwf	tblptrh,c
  4790  001238  0009               	tblrd		*+
  4791  00123A  CFF5 F03D          	movff	tablat,??_scale+3
  4792  00123E  0009               	tblrd		*+
  4793  001240  CFF5 F03E          	movff	tablat,??_scale+4
  4794  001244  0009               	tblrd		*+
  4795  001246  CFF5 F03F          	movff	tablat,??_scale+5
  4796  00124A  C03F  F028         	movff	??_scale+5,?___ftmul+2
  4797  00124E  C03E  F027         	movff	??_scale+4,?___ftmul+1
  4798  001252  C03D  F026         	movff	??_scale+3,?___ftmul
  4799  001256  EC1F  F00E         	call	___ftmul	;wreg free
  4800  00125A  C028  F042         	movff	?___ftmul+2,_scale$807+2
  4801  00125E  C027  F041         	movff	?___ftmul+1,_scale$807+1
  4802  001262  C026  F040         	movff	?___ftmul,_scale$807
  4803                           
  4804                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4805  001266  C040  F026         	movff	_scale$807,?___ftmul
  4806  00126A  C041  F027         	movff	_scale$807+1,?___ftmul+1
  4807  00126E  C042  F028         	movff	_scale$807+2,?___ftmul+2
  4808  001272  0E00               	movlw	0
  4809  001274  6E14               	movwf	?___wmul+3,c
  4810  001276  0E03               	movlw	3
  4811  001278  6E13               	movwf	?___wmul+2,c
  4812  00127A  0E00               	movlw	0
  4813  00127C  6E04               	movwf	?___awmod+3,c
  4814  00127E  0E0A               	movlw	10
  4815  001280  6E03               	movwf	?___awmod+2,c
  4816  001282  5037               	movf	scale@scl,w,c
  4817  001284  6E01               	movwf	?___awmod,c
  4818  001286  6A02               	clrf	?___awmod+1,c
  4819  001288  BE01               	btfsc	?___awmod,7,c
  4820  00128A  0602               	decf	?___awmod+1,f,c
  4821  00128C  EC3F  F011         	call	___awmod	;wreg free
  4822  001290  C001  F011         	movff	?___awmod,?___wmul
  4823  001294  C002  F012         	movff	?___awmod+1,?___wmul+1
  4824  001298  EC83  F012         	call	___wmul	;wreg free
  4825  00129C  0E4F               	movlw	low __powers_
  4826  00129E  2411               	addwf	?___wmul,w,c
  4827  0012A0  6EF6               	movwf	tblptrl,c
  4828  0012A2  0E08               	movlw	high __powers_
  4829  0012A4  2012               	addwfc	?___wmul+1,w,c
  4830  0012A6  6EF7               	movwf	tblptrh,c
  4831  0012A8  0009               	tblrd		*+
  4832  0012AA  CFF5 F03A          	movff	tablat,??_scale
  4833  0012AE  0009               	tblrd		*+
  4834  0012B0  CFF5 F03B          	movff	tablat,??_scale+1
  4835  0012B4  0009               	tblrd		*+
  4836  0012B6  CFF5 F03C          	movff	tablat,??_scale+2
  4837  0012BA  C03C  F02B         	movff	??_scale+2,?___ftmul+5
  4838  0012BE  C03B  F02A         	movff	??_scale+1,?___ftmul+4
  4839  0012C2  C03A  F029         	movff	??_scale,?___ftmul+3
  4840  0012C6  EC1F  F00E         	call	___ftmul	;wreg free
  4841  0012CA  D05D               	goto	L17
  4842  0012CC                     l3822:
  4843                           
  4844                           ;doprnt.c: 438: else if(scl > 10)
  4845  0012CC  5037               	movf	scale@scl,w,c
  4846  0012CE  0A80               	xorlw	128
  4847  0012D0  0F75               	addlw	-139
  4848  0012D2  A0D8               	btfss	status,0,c
  4849  0012D4  D05F               	goto	l3828
  4850                           
  4851                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4852  0012D6  0E00               	movlw	0
  4853  0012D8  6E14               	movwf	?___wmul+3,c
  4854  0012DA  0E03               	movlw	3
  4855  0012DC  6E13               	movwf	?___wmul+2,c
  4856  0012DE  0E00               	movlw	0
  4857  0012E0  6E0B               	movwf	?___awdiv+3,c
  4858  0012E2  0E0A               	movlw	10
  4859  0012E4  6E0A               	movwf	?___awdiv+2,c
  4860  0012E6  5037               	movf	scale@scl,w,c
  4861  0012E8  6E08               	movwf	?___awdiv,c
  4862  0012EA  6A09               	clrf	?___awdiv+1,c
  4863  0012EC  BE08               	btfsc	?___awdiv,7,c
  4864  0012EE  0609               	decf	?___awdiv+1,f,c
  4865  0012F0  ECB4  F010         	call	___awdiv	;wreg free
  4866  0012F4  0E09               	movlw	9
  4867  0012F6  2408               	addwf	?___awdiv,w,c
  4868  0012F8  6E11               	movwf	?___wmul,c
  4869  0012FA  0E00               	movlw	0
  4870  0012FC  2009               	addwfc	?___awdiv+1,w,c
  4871  0012FE  6E12               	movwf	?___wmul+1,c
  4872  001300  EC83  F012         	call	___wmul	;wreg free
  4873  001304  0E4F               	movlw	low __powers_
  4874  001306  2411               	addwf	?___wmul,w,c
  4875  001308  6EF6               	movwf	tblptrl,c
  4876  00130A  0E08               	movlw	high __powers_
  4877  00130C  2012               	addwfc	?___wmul+1,w,c
  4878  00130E  6EF7               	movwf	tblptrh,c
  4879  001310  0009               	tblrd		*+
  4880  001312  CFF5 F03A          	movff	tablat,??_scale
  4881  001316  0009               	tblrd		*+
  4882  001318  CFF5 F03B          	movff	tablat,??_scale+1
  4883  00131C  0009               	tblrd		*+
  4884  00131E  CFF5 F03C          	movff	tablat,??_scale+2
  4885  001322  C03C  F028         	movff	??_scale+2,?___ftmul+2
  4886  001326  C03B  F027         	movff	??_scale+1,?___ftmul+1
  4887  00132A  C03A  F026         	movff	??_scale,?___ftmul
  4888  00132E  0E00               	movlw	0
  4889  001330  6E14               	movwf	?___wmul+3,c
  4890  001332  0E03               	movlw	3
  4891  001334  6E13               	movwf	?___wmul+2,c
  4892  001336  0E00               	movlw	0
  4893  001338  6E04               	movwf	?___awmod+3,c
  4894  00133A  0E0A               	movlw	10
  4895  00133C  6E03               	movwf	?___awmod+2,c
  4896  00133E  5037               	movf	scale@scl,w,c
  4897  001340  6E01               	movwf	?___awmod,c
  4898  001342  6A02               	clrf	?___awmod+1,c
  4899  001344  BE01               	btfsc	?___awmod,7,c
  4900  001346  0602               	decf	?___awmod+1,f,c
  4901  001348  EC3F  F011         	call	___awmod	;wreg free
  4902  00134C  C001  F011         	movff	?___awmod,?___wmul
  4903  001350  C002  F012         	movff	?___awmod+1,?___wmul+1
  4904  001354  EC83  F012         	call	___wmul	;wreg free
  4905  001358  0E4F               	movlw	low __powers_
  4906  00135A  2411               	addwf	?___wmul,w,c
  4907  00135C  6EF6               	movwf	tblptrl,c
  4908  00135E  0E08               	movlw	high __powers_
  4909  001360  2012               	addwfc	?___wmul+1,w,c
  4910  001362  6EF7               	movwf	tblptrh,c
  4911  001364  0009               	tblrd		*+
  4912  001366  CFF5 F03D          	movff	tablat,??_scale+3
  4913  00136A  0009               	tblrd		*+
  4914  00136C  CFF5 F03E          	movff	tablat,??_scale+4
  4915  001370  0009               	tblrd		*+
  4916  001372  CFF5 F03F          	movff	tablat,??_scale+5
  4917  001376  C03F  F02B         	movff	??_scale+5,?___ftmul+5
  4918  00137A  C03E  F02A         	movff	??_scale+4,?___ftmul+4
  4919  00137E  C03D  F029         	movff	??_scale+3,?___ftmul+3
  4920  001382  EC1F  F00E         	call	___ftmul	;wreg free
  4921  001386                     L17:
  4922  001386  C028  F039         	movff	?___ftmul+2,?_scale+2
  4923  00138A  C027  F038         	movff	?___ftmul+1,?_scale+1
  4924  00138E  C026  F037         	movff	?___ftmul,?_scale
  4925  001392  D017               	goto	l126
  4926  001394                     l3828:
  4927                           
  4928                           ;doprnt.c: 440: return _powers_[scl];
  4929  001394  5037               	movf	scale@scl,w,c
  4930  001396  0D03               	mullw	3
  4931  001398  0E4F               	movlw	low __powers_
  4932  00139A  24F3               	addwf	prodl,w,c
  4933  00139C  6EF6               	movwf	tblptrl,c
  4934  00139E  0E08               	movlw	high __powers_
  4935  0013A0                     L16:
  4936  0013A0  20F4               	addwfc	prodh,w,c
  4937  0013A2  6EF7               	movwf	tblptrh,c
  4938  0013A4  0009               	tblrd		*+
  4939  0013A6  CFF5 F03A          	movff	tablat,??_scale
  4940  0013AA  0009               	tblrd		*+
  4941  0013AC  CFF5 F03B          	movff	tablat,??_scale+1
  4942  0013B0  0009               	tblrd		*+
  4943  0013B2  CFF5 F03C          	movff	tablat,??_scale+2
  4944  0013B6  C03C  F039         	movff	??_scale+2,?_scale+2
  4945  0013BA  C03B  F038         	movff	??_scale+1,?_scale+1
  4946  0013BE  C03A  F037         	movff	??_scale,?_scale
  4947  0013C2                     l126:
  4948  0013C2  0012               	return	
  4949  0013C4                     __end_of_scale:
  4950                           	opt stack 0
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           prodh	equ	0xFF4
  4956                           prodl	equ	0xFF3
  4957                           wreg	equ	0xFE8
  4958                           indf2	equ	0xFDF
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function ___wmul *****************
  4966 ;; Defined at:
  4967 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\wmul.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  multiplier      2   16[COMRAM] unsigned int 
  4970 ;;  multiplicand    2   18[COMRAM] unsigned int 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  product         2   20[COMRAM] unsigned int 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  2   16[COMRAM] unsigned int 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0, prodl, prodh
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4982 ;;      Params:         4       0       0       0       0       0       0       0       0
  4983 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4985 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4986 ;;Total ram usage:        6 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_fround
  4992 ;;		_scale
  4993 ;;		_sprintf
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text21
  4998  002506                     __ptext21:
  4999                           	opt stack 0
  5000  002506                     ___wmul:
  5001                           	opt stack 29
  5002                           
  5003                           ;incstack = 0
  5004                           ;incstack = 0
  5005  002506  5011               	movf	___wmul@multiplier,w,c
  5006  002508  0213               	mulwf	___wmul@multiplicand,c
  5007  00250A  CFF3 F015          	movff	prodl,___wmul@product
  5008  00250E  CFF4 F016          	movff	prodh,___wmul@product+1
  5009  002512  5011               	movf	___wmul@multiplier,w,c
  5010  002514  0214               	mulwf	___wmul@multiplicand+1,c
  5011  002516  CFF3 FFF4          	movff	prodl,prodh
  5012  00251A  6AF3               	clrf	prodl,c
  5013  00251C  50F3               	movf	prodl,w,c
  5014  00251E  2615               	addwf	___wmul@product,f,c
  5015  002520  50F4               	movf	prodh,w,c
  5016  002522  2216               	addwfc	___wmul@product+1,f,c
  5017  002524  5012               	movf	___wmul@multiplier+1,w,c
  5018  002526  0213               	mulwf	___wmul@multiplicand,c
  5019  002528  CFF3 FFF4          	movff	prodl,prodh
  5020  00252C  6AF3               	clrf	prodl,c
  5021  00252E  50F3               	movf	prodl,w,c
  5022  002530  2615               	addwf	___wmul@product,f,c
  5023  002532  50F4               	movf	prodh,w,c
  5024  002534  2216               	addwfc	___wmul@product+1,f,c
  5025  002536  C015  F011         	movff	___wmul@product,?___wmul
  5026  00253A  C016  F012         	movff	___wmul@product+1,?___wmul+1
  5027  00253E  0012               	return	
  5028  002540                     __end_of___wmul:
  5029                           	opt stack 0
  5030                           tblptru	equ	0xFF8
  5031                           tblptrh	equ	0xFF7
  5032                           tblptrl	equ	0xFF6
  5033                           tablat	equ	0xFF5
  5034                           prodh	equ	0xFF4
  5035                           prodl	equ	0xFF3
  5036                           wreg	equ	0xFE8
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           postdec2	equ	0xFDD
  5040                           fsr2h	equ	0xFDA
  5041                           fsr2l	equ	0xFD9
  5042                           status	equ	0xFD8
  5043                           
  5044 ;; *************** function ___awmod *****************
  5045 ;; Defined at:
  5046 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\awmod.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  dividend        2    0[COMRAM] int 
  5049 ;;  divisor         2    2[COMRAM] int 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  sign            1    6[COMRAM] unsigned char 
  5052 ;;  counter         1    5[COMRAM] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  2    0[COMRAM] int 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5062 ;;      Params:         4       0       0       0       0       0       0       0       0
  5063 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5064 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5065 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5066 ;;Total ram usage:        7 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_fround
  5072 ;;		_scale
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text22
  5077  00227E                     __ptext22:
  5078                           	opt stack 0
  5079  00227E                     ___awmod:
  5080                           	opt stack 28
  5081                           
  5082                           ;incstack = 0
  5083                           ;incstack = 0
  5084  00227E  6E05               	movwf	??___awmod& (0+255),c
  5085  002280  0E00               	movlw	0
  5086  002282  6E07               	movwf	___awmod@sign,c
  5087  002284  5005               	movf	??___awmod& (0+255),w,c
  5088  002286  AE02               	btfss	___awmod@dividend+1,7,c
  5089  002288  D008               	goto	l3418
  5090  00228A  6C01               	negf	___awmod@dividend,c
  5091  00228C  1E02               	comf	___awmod@dividend+1,f,c
  5092  00228E  B0D8               	btfsc	status,0,c
  5093  002290  2A02               	incf	___awmod@dividend+1,f,c
  5094  002292  6E05               	movwf	??___awmod& (0+255),c
  5095  002294  0E01               	movlw	1
  5096  002296  6E07               	movwf	___awmod@sign,c
  5097  002298  5005               	movf	??___awmod& (0+255),w,c
  5098  00229A                     l3418:
  5099  00229A  AE04               	btfss	___awmod@divisor+1,7,c
  5100  00229C  D004               	goto	l3422
  5101  00229E  6C03               	negf	___awmod@divisor,c
  5102  0022A0  1E04               	comf	___awmod@divisor+1,f,c
  5103  0022A2  B0D8               	btfsc	status,0,c
  5104  0022A4  2A04               	incf	___awmod@divisor+1,f,c
  5105  0022A6                     l3422:
  5106  0022A6  5004               	movf	___awmod@divisor+1,w,c
  5107  0022A8  1003               	iorwf	___awmod@divisor,w,c
  5108  0022AA  B4D8               	btfsc	status,2,c
  5109  0022AC  D01A               	goto	l3438
  5110  0022AE  6E05               	movwf	??___awmod& (0+255),c
  5111  0022B0  0E01               	movlw	1
  5112  0022B2  6E06               	movwf	___awmod@counter,c
  5113  0022B4  5005               	movf	??___awmod& (0+255),w,c
  5114  0022B6  D004               	goto	l3428
  5115  0022B8                     l3426:
  5116  0022B8  90D8               	bcf	status,0,c
  5117  0022BA  3603               	rlcf	___awmod@divisor,f,c
  5118  0022BC  3604               	rlcf	___awmod@divisor+1,f,c
  5119  0022BE  2A06               	incf	___awmod@counter,f,c
  5120  0022C0                     l3428:
  5121  0022C0  AE04               	btfss	___awmod@divisor+1,7,c
  5122  0022C2  D7FA               	goto	l3426
  5123  0022C4                     l3430:
  5124  0022C4  5003               	movf	___awmod@divisor,w,c
  5125  0022C6  5C01               	subwf	___awmod@dividend,w,c
  5126  0022C8  5004               	movf	___awmod@divisor+1,w,c
  5127  0022CA  5802               	subwfb	___awmod@dividend+1,w,c
  5128  0022CC  A0D8               	btfss	status,0,c
  5129  0022CE  D004               	goto	l3434
  5130  0022D0  5003               	movf	___awmod@divisor,w,c
  5131  0022D2  5E01               	subwf	___awmod@dividend,f,c
  5132  0022D4  5004               	movf	___awmod@divisor+1,w,c
  5133  0022D6  5A02               	subwfb	___awmod@dividend+1,f,c
  5134  0022D8                     l3434:
  5135  0022D8  90D8               	bcf	status,0,c
  5136  0022DA  3204               	rrcf	___awmod@divisor+1,f,c
  5137  0022DC  3203               	rrcf	___awmod@divisor,f,c
  5138  0022DE  2E06               	decfsz	___awmod@counter,f,c
  5139  0022E0  D7F1               	goto	l3430
  5140  0022E2                     l3438:
  5141  0022E2  5007               	movf	___awmod@sign,w,c
  5142  0022E4  B4D8               	btfsc	status,2,c
  5143  0022E6  D004               	goto	l3442
  5144  0022E8  6C01               	negf	___awmod@dividend,c
  5145  0022EA  1E02               	comf	___awmod@dividend+1,f,c
  5146  0022EC  B0D8               	btfsc	status,0,c
  5147  0022EE  2A02               	incf	___awmod@dividend+1,f,c
  5148  0022F0                     l3442:
  5149  0022F0  C001  F001         	movff	___awmod@dividend,?___awmod
  5150  0022F4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5151  0022F8  0012               	return	
  5152  0022FA                     __end_of___awmod:
  5153                           	opt stack 0
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           wreg	equ	0xFE8
  5161                           indf2	equ	0xFDF
  5162                           postinc2	equ	0xFDE
  5163                           postdec2	equ	0xFDD
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function ___awdiv *****************
  5169 ;; Defined at:
  5170 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\awdiv.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  dividend        2    7[COMRAM] int 
  5173 ;;  divisor         2    9[COMRAM] int 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  quotient        2   14[COMRAM] int 
  5176 ;;  sign            1   13[COMRAM] unsigned char 
  5177 ;;  counter         1   12[COMRAM] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  2    7[COMRAM] int 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5187 ;;      Params:         4       0       0       0       0       0       0       0       0
  5188 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5189 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5190 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5191 ;;Total ram usage:        9 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_fround
  5197 ;;		_scale
  5198 ;;		_sprintf
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text23
  5203  002168                     __ptext23:
  5204                           	opt stack 0
  5205  002168                     ___awdiv:
  5206                           	opt stack 29
  5207                           
  5208                           ;incstack = 0
  5209                           ;incstack = 0
  5210  002168  6E0C               	movwf	??___awdiv& (0+255),c
  5211  00216A  0E00               	movlw	0
  5212  00216C  6E0E               	movwf	___awdiv@sign,c
  5213  00216E  500C               	movf	??___awdiv& (0+255),w,c
  5214  002170  AE0B               	btfss	___awdiv@divisor+1,7,c
  5215  002172  D008               	goto	l3584
  5216  002174  6C0A               	negf	___awdiv@divisor,c
  5217  002176  1E0B               	comf	___awdiv@divisor+1,f,c
  5218  002178  B0D8               	btfsc	status,0,c
  5219  00217A  2A0B               	incf	___awdiv@divisor+1,f,c
  5220  00217C  6E0C               	movwf	??___awdiv& (0+255),c
  5221  00217E  0E01               	movlw	1
  5222  002180  6E0E               	movwf	___awdiv@sign,c
  5223  002182  500C               	movf	??___awdiv& (0+255),w,c
  5224  002184                     l3584:
  5225  002184  AE09               	btfss	___awdiv@dividend+1,7,c
  5226  002186  D006               	goto	l3590
  5227  002188  6C08               	negf	___awdiv@dividend,c
  5228  00218A  1E09               	comf	___awdiv@dividend+1,f,c
  5229  00218C  B0D8               	btfsc	status,0,c
  5230  00218E  2A09               	incf	___awdiv@dividend+1,f,c
  5231  002190  0E01               	movlw	1
  5232  002192  1A0E               	xorwf	___awdiv@sign,f,c
  5233  002194                     l3590:
  5234  002194  0E00               	movlw	0
  5235  002196  6E10               	movwf	___awdiv@quotient+1,c
  5236  002198  0E00               	movlw	0
  5237  00219A  6E0F               	movwf	___awdiv@quotient,c
  5238  00219C  500B               	movf	___awdiv@divisor+1,w,c
  5239  00219E  100A               	iorwf	___awdiv@divisor,w,c
  5240  0021A0  B4D8               	btfsc	status,2,c
  5241  0021A2  D01E               	goto	l3612
  5242  0021A4  6E0C               	movwf	??___awdiv& (0+255),c
  5243  0021A6  0E01               	movlw	1
  5244  0021A8  6E0D               	movwf	___awdiv@counter,c
  5245  0021AA  500C               	movf	??___awdiv& (0+255),w,c
  5246  0021AC  D004               	goto	l3598
  5247  0021AE                     l3596:
  5248  0021AE  90D8               	bcf	status,0,c
  5249  0021B0  360A               	rlcf	___awdiv@divisor,f,c
  5250  0021B2  360B               	rlcf	___awdiv@divisor+1,f,c
  5251  0021B4  2A0D               	incf	___awdiv@counter,f,c
  5252  0021B6                     l3598:
  5253  0021B6  AE0B               	btfss	___awdiv@divisor+1,7,c
  5254  0021B8  D7FA               	goto	l3596
  5255  0021BA                     l3600:
  5256  0021BA  90D8               	bcf	status,0,c
  5257  0021BC  360F               	rlcf	___awdiv@quotient,f,c
  5258  0021BE  3610               	rlcf	___awdiv@quotient+1,f,c
  5259  0021C0  500A               	movf	___awdiv@divisor,w,c
  5260  0021C2  5C08               	subwf	___awdiv@dividend,w,c
  5261  0021C4  500B               	movf	___awdiv@divisor+1,w,c
  5262  0021C6  5809               	subwfb	___awdiv@dividend+1,w,c
  5263  0021C8  A0D8               	btfss	status,0,c
  5264  0021CA  D005               	goto	l3608
  5265  0021CC  500A               	movf	___awdiv@divisor,w,c
  5266  0021CE  5E08               	subwf	___awdiv@dividend,f,c
  5267  0021D0  500B               	movf	___awdiv@divisor+1,w,c
  5268  0021D2  5A09               	subwfb	___awdiv@dividend+1,f,c
  5269  0021D4  800F               	bsf	___awdiv@quotient,0,c
  5270  0021D6                     l3608:
  5271  0021D6  90D8               	bcf	status,0,c
  5272  0021D8  320B               	rrcf	___awdiv@divisor+1,f,c
  5273  0021DA  320A               	rrcf	___awdiv@divisor,f,c
  5274  0021DC  2E0D               	decfsz	___awdiv@counter,f,c
  5275  0021DE  D7ED               	goto	l3600
  5276  0021E0                     l3612:
  5277  0021E0  500E               	movf	___awdiv@sign,w,c
  5278  0021E2  B4D8               	btfsc	status,2,c
  5279  0021E4  D004               	goto	l3616
  5280  0021E6  6C0F               	negf	___awdiv@quotient,c
  5281  0021E8  1E10               	comf	___awdiv@quotient+1,f,c
  5282  0021EA  B0D8               	btfsc	status,0,c
  5283  0021EC  2A10               	incf	___awdiv@quotient+1,f,c
  5284  0021EE                     l3616:
  5285  0021EE  C00F  F008         	movff	___awdiv@quotient,?___awdiv
  5286  0021F2  C010  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  5287  0021F6  0012               	return	
  5288  0021F8                     __end_of___awdiv:
  5289                           	opt stack 0
  5290                           tblptru	equ	0xFF8
  5291                           tblptrh	equ	0xFF7
  5292                           tblptrl	equ	0xFF6
  5293                           tablat	equ	0xFF5
  5294                           prodh	equ	0xFF4
  5295                           prodl	equ	0xFF3
  5296                           wreg	equ	0xFE8
  5297                           indf2	equ	0xFDF
  5298                           postinc2	equ	0xFDE
  5299                           postdec2	equ	0xFDD
  5300                           fsr2h	equ	0xFDA
  5301                           fsr2l	equ	0xFD9
  5302                           status	equ	0xFD8
  5303                           
  5304 ;; *************** function _fround *****************
  5305 ;; Defined at:
  5306 ;;		line 410 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\doprnt.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  prec            1   54[COMRAM] unsigned char 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  3   54[COMRAM] unsigned char 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5320 ;;      Params:         3       0       0       0       0       0       0       0       0
  5321 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5322 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5323 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5324 ;;Total ram usage:       15 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    2
  5327 ;; This function calls:
  5328 ;;		___ftmul
  5329 ;;		___awdiv
  5330 ;;		___awmod
  5331 ;;		___wmul
  5332 ;; This function is called by:
  5333 ;;		_sprintf
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text24
  5338  0016D0                     __ptext24:
  5339                           	opt stack 0
  5340  0016D0                     _fround:
  5341                           	opt stack 27
  5342                           
  5343                           ;doprnt.c: 413: if(prec>=110)
  5344                           
  5345                           ;incstack = 0
  5346                           ;incstack = 0
  5347  0016D0  0E6D               	movlw	109
  5348  0016D2  6437               	cpfsgt	fround@prec,c
  5349  0016D4  D0AB               	goto	l3656
  5350                           
  5351                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5352  0016D6  0E00               	movlw	0
  5353  0016D8  6E14               	movwf	?___wmul+3,c
  5354  0016DA  0E03               	movlw	3
  5355  0016DC  6E13               	movwf	?___wmul+2,c
  5356  0016DE  0E00               	movlw	0
  5357  0016E0  6E0B               	movwf	?___awdiv+3,c
  5358  0016E2  0E0A               	movlw	10
  5359  0016E4  6E0A               	movwf	?___awdiv+2,c
  5360  0016E6  0E00               	movlw	0
  5361  0016E8  6E04               	movwf	?___awmod+3,c
  5362  0016EA  0E64               	movlw	100
  5363  0016EC  6E03               	movwf	?___awmod+2,c
  5364  0016EE  C037  F001         	movff	fround@prec,?___awmod
  5365  0016F2  6A02               	clrf	?___awmod+1,c
  5366  0016F4  EC3F  F011         	call	___awmod	;wreg free
  5367  0016F8  C001  F008         	movff	?___awmod,?___awdiv
  5368  0016FC  C002  F009         	movff	?___awmod+1,?___awdiv+1
  5369  001700  ECB4  F010         	call	___awdiv	;wreg free
  5370  001704  0E09               	movlw	9
  5371  001706  2408               	addwf	?___awdiv,w,c
  5372  001708  6E11               	movwf	?___wmul,c
  5373  00170A  0E00               	movlw	0
  5374  00170C  2009               	addwfc	?___awdiv+1,w,c
  5375  00170E  6E12               	movwf	?___wmul+1,c
  5376  001710  EC83  F012         	call	___wmul	;wreg free
  5377  001714  0E28               	movlw	low __npowers_
  5378  001716  2411               	addwf	?___wmul,w,c
  5379  001718  6EF6               	movwf	tblptrl,c
  5380  00171A  0E08               	movlw	high __npowers_
  5381  00171C  2012               	addwfc	?___wmul+1,w,c
  5382  00171E  6EF7               	movwf	tblptrh,c
  5383  001720  0009               	tblrd		*+
  5384  001722  CFF5 F03A          	movff	tablat,??_fround
  5385  001726  0009               	tblrd		*+
  5386  001728  CFF5 F03B          	movff	tablat,??_fround+1
  5387  00172C  0009               	tblrd		*+
  5388  00172E  CFF5 F03C          	movff	tablat,??_fround+2
  5389  001732  C03C  F02B         	movff	??_fround+2,?___ftmul+5
  5390  001736  C03B  F02A         	movff	??_fround+1,?___ftmul+4
  5391  00173A  C03A  F029         	movff	??_fround,?___ftmul+3
  5392  00173E  0E00               	movlw	0
  5393  001740  6E14               	movwf	?___wmul+3,c
  5394  001742  0E03               	movlw	3
  5395  001744  6E13               	movwf	?___wmul+2,c
  5396  001746  0E00               	movlw	0
  5397  001748  6E0B               	movwf	?___awdiv+3,c
  5398  00174A  0E64               	movlw	100
  5399  00174C  6E0A               	movwf	?___awdiv+2,c
  5400  00174E  C037  F008         	movff	fround@prec,?___awdiv
  5401  001752  6A09               	clrf	?___awdiv+1,c
  5402  001754  ECB4  F010         	call	___awdiv	;wreg free
  5403  001758  0E12               	movlw	18
  5404  00175A  2408               	addwf	?___awdiv,w,c
  5405  00175C  6E11               	movwf	?___wmul,c
  5406  00175E  0E00               	movlw	0
  5407  001760  2009               	addwfc	?___awdiv+1,w,c
  5408  001762  6E12               	movwf	?___wmul+1,c
  5409  001764  EC83  F012         	call	___wmul	;wreg free
  5410  001768  0E28               	movlw	low __npowers_
  5411  00176A  2411               	addwf	?___wmul,w,c
  5412  00176C  6EF6               	movwf	tblptrl,c
  5413  00176E  0E08               	movlw	high __npowers_
  5414  001770  2012               	addwfc	?___wmul+1,w,c
  5415  001772  6EF7               	movwf	tblptrh,c
  5416  001774  0009               	tblrd		*+
  5417  001776  CFF5 F03D          	movff	tablat,??_fround+3
  5418  00177A  0009               	tblrd		*+
  5419  00177C  CFF5 F03E          	movff	tablat,??_fround+4
  5420  001780  0009               	tblrd		*+
  5421  001782  CFF5 F03F          	movff	tablat,??_fround+5
  5422  001786  C03F  F028         	movff	??_fround+5,?___ftmul+2
  5423  00178A  C03E  F027         	movff	??_fround+4,?___ftmul+1
  5424  00178E  C03D  F026         	movff	??_fround+3,?___ftmul
  5425  001792  EC1F  F00E         	call	___ftmul	;wreg free
  5426  001796  C028  F045         	movff	?___ftmul+2,_fround$805+2
  5427  00179A  C027  F044         	movff	?___ftmul+1,_fround$805+1
  5428  00179E  C026  F043         	movff	?___ftmul,_fround$805
  5429                           
  5430                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5431  0017A2  0E00               	movlw	0
  5432  0017A4  6E14               	movwf	?___wmul+3,c
  5433  0017A6  0E03               	movlw	3
  5434  0017A8  6E13               	movwf	?___wmul+2,c
  5435  0017AA  0E00               	movlw	0
  5436  0017AC  6E04               	movwf	?___awmod+3,c
  5437  0017AE  0E0A               	movlw	10
  5438  0017B0  6E03               	movwf	?___awmod+2,c
  5439  0017B2  C037  F001         	movff	fround@prec,?___awmod
  5440  0017B6  6A02               	clrf	?___awmod+1,c
  5441  0017B8  EC3F  F011         	call	___awmod	;wreg free
  5442  0017BC  C001  F011         	movff	?___awmod,?___wmul
  5443  0017C0  C002  F012         	movff	?___awmod+1,?___wmul+1
  5444  0017C4  EC83  F012         	call	___wmul	;wreg free
  5445  0017C8  0E28               	movlw	low __npowers_
  5446  0017CA  2411               	addwf	?___wmul,w,c
  5447  0017CC  6EF6               	movwf	tblptrl,c
  5448  0017CE  0E08               	movlw	high __npowers_
  5449  0017D0  2012               	addwfc	?___wmul+1,w,c
  5450  0017D2  6EF7               	movwf	tblptrh,c
  5451  0017D4  0009               	tblrd		*+
  5452  0017D6  CFF5 F03A          	movff	tablat,??_fround
  5453  0017DA  0009               	tblrd		*+
  5454  0017DC  CFF5 F03B          	movff	tablat,??_fround+1
  5455  0017E0  0009               	tblrd		*+
  5456  0017E2  CFF5 F03C          	movff	tablat,??_fround+2
  5457  0017E6  C03C  F02B         	movff	??_fround+2,?___ftmul+5
  5458  0017EA  C03B  F02A         	movff	??_fround+1,?___ftmul+4
  5459  0017EE  C03A  F029         	movff	??_fround,?___ftmul+3
  5460  0017F2  C043  F026         	movff	_fround$805,?___ftmul
  5461  0017F6  C044  F027         	movff	_fround$805+1,?___ftmul+1
  5462  0017FA  C045  F028         	movff	_fround$805+2,?___ftmul+2
  5463  0017FE  EC1F  F00E         	call	___ftmul	;wreg free
  5464  001802  C028  F042         	movff	?___ftmul+2,_fround$806+2
  5465  001806  C027  F041         	movff	?___ftmul+1,_fround$806+1
  5466  00180A  C026  F040         	movff	?___ftmul,_fround$806
  5467                           
  5468                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5469  00180E  C040  F026         	movff	_fround$806,?___ftmul
  5470  001812  C041  F027         	movff	_fround$806+1,?___ftmul+1
  5471  001816  C042  F028         	movff	_fround$806+2,?___ftmul+2
  5472  00181A  0E00               	movlw	0
  5473  00181C  6E29               	movwf	?___ftmul+3,c
  5474  00181E  0E00               	movlw	0
  5475  001820  6E2A               	movwf	?___ftmul+4,c
  5476  001822  0E3F               	movlw	63
  5477  001824  6E2B               	movwf	?___ftmul+5,c
  5478  001826  EC1F  F00E         	call	___ftmul	;wreg free
  5479  00182A  D08B               	goto	L19
  5480  00182C                     l3656:
  5481                           
  5482                           ;doprnt.c: 415: else if(prec > 10)
  5483  00182C  0E0A               	movlw	10
  5484  00182E  6437               	cpfsgt	fround@prec,c
  5485  001830  D069               	goto	l3664
  5486                           
  5487                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5488  001832  0E00               	movlw	0
  5489  001834  6E14               	movwf	?___wmul+3,c
  5490  001836  0E03               	movlw	3
  5491  001838  6E13               	movwf	?___wmul+2,c
  5492  00183A  0E00               	movlw	0
  5493  00183C  6E04               	movwf	?___awmod+3,c
  5494  00183E  0E0A               	movlw	10
  5495  001840  6E03               	movwf	?___awmod+2,c
  5496  001842  C037  F001         	movff	fround@prec,?___awmod
  5497  001846  6A02               	clrf	?___awmod+1,c
  5498  001848  EC3F  F011         	call	___awmod	;wreg free
  5499  00184C  C001  F011         	movff	?___awmod,?___wmul
  5500  001850  C002  F012         	movff	?___awmod+1,?___wmul+1
  5501  001854  EC83  F012         	call	___wmul	;wreg free
  5502  001858  0E28               	movlw	low __npowers_
  5503  00185A  2411               	addwf	?___wmul,w,c
  5504  00185C  6EF6               	movwf	tblptrl,c
  5505  00185E  0E08               	movlw	high __npowers_
  5506  001860  2012               	addwfc	?___wmul+1,w,c
  5507  001862  6EF7               	movwf	tblptrh,c
  5508  001864  0009               	tblrd		*+
  5509  001866  CFF5 F03A          	movff	tablat,??_fround
  5510  00186A  0009               	tblrd		*+
  5511  00186C  CFF5 F03B          	movff	tablat,??_fround+1
  5512  001870  0009               	tblrd		*+
  5513  001872  CFF5 F03C          	movff	tablat,??_fround+2
  5514  001876  C03C  F02B         	movff	??_fround+2,?___ftmul+5
  5515  00187A  C03B  F02A         	movff	??_fround+1,?___ftmul+4
  5516  00187E  C03A  F029         	movff	??_fround,?___ftmul+3
  5517  001882  0E00               	movlw	0
  5518  001884  6E14               	movwf	?___wmul+3,c
  5519  001886  0E03               	movlw	3
  5520  001888  6E13               	movwf	?___wmul+2,c
  5521  00188A  0E00               	movlw	0
  5522  00188C  6E0B               	movwf	?___awdiv+3,c
  5523  00188E  0E0A               	movlw	10
  5524  001890  6E0A               	movwf	?___awdiv+2,c
  5525  001892  C037  F008         	movff	fround@prec,?___awdiv
  5526  001896  6A09               	clrf	?___awdiv+1,c
  5527  001898  ECB4  F010         	call	___awdiv	;wreg free
  5528  00189C  0E09               	movlw	9
  5529  00189E  2408               	addwf	?___awdiv,w,c
  5530  0018A0  6E11               	movwf	?___wmul,c
  5531  0018A2  0E00               	movlw	0
  5532  0018A4  2009               	addwfc	?___awdiv+1,w,c
  5533  0018A6  6E12               	movwf	?___wmul+1,c
  5534  0018A8  EC83  F012         	call	___wmul	;wreg free
  5535  0018AC  0E28               	movlw	low __npowers_
  5536  0018AE  2411               	addwf	?___wmul,w,c
  5537  0018B0  6EF6               	movwf	tblptrl,c
  5538  0018B2  0E08               	movlw	high __npowers_
  5539  0018B4  2012               	addwfc	?___wmul+1,w,c
  5540  0018B6  6EF7               	movwf	tblptrh,c
  5541  0018B8  0009               	tblrd		*+
  5542  0018BA  CFF5 F03D          	movff	tablat,??_fround+3
  5543  0018BE  0009               	tblrd		*+
  5544  0018C0  CFF5 F03E          	movff	tablat,??_fround+4
  5545  0018C4  0009               	tblrd		*+
  5546  0018C6  CFF5 F03F          	movff	tablat,??_fround+5
  5547  0018CA  C03F  F028         	movff	??_fround+5,?___ftmul+2
  5548  0018CE  C03E  F027         	movff	??_fround+4,?___ftmul+1
  5549  0018D2  C03D  F026         	movff	??_fround+3,?___ftmul
  5550  0018D6  EC1F  F00E         	call	___ftmul	;wreg free
  5551  0018DA  C028  F045         	movff	?___ftmul+2,_fround$805+2
  5552  0018DE  C027  F044         	movff	?___ftmul+1,_fround$805+1
  5553  0018E2  C026  F043         	movff	?___ftmul,_fround$805
  5554                           
  5555                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5556  0018E6  C043  F026         	movff	_fround$805,?___ftmul
  5557  0018EA  C044  F027         	movff	_fround$805+1,?___ftmul+1
  5558  0018EE  C045  F028         	movff	_fround$805+2,?___ftmul+2
  5559  0018F2  0E00               	movlw	0
  5560  0018F4  6E29               	movwf	?___ftmul+3,c
  5561  0018F6  0E00               	movlw	0
  5562  0018F8  6E2A               	movwf	?___ftmul+4,c
  5563  0018FA  0E3F               	movlw	63
  5564  0018FC  6E2B               	movwf	?___ftmul+5,c
  5565  0018FE  EC1F  F00E         	call	___ftmul	;wreg free
  5566  001902  D01F               	goto	L19
  5567  001904                     l3664:
  5568                           
  5569                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5570  001904  5037               	movf	fround@prec,w,c
  5571  001906  0D03               	mullw	3
  5572  001908  0E28               	movlw	low __npowers_
  5573  00190A  24F3               	addwf	prodl,w,c
  5574  00190C  6EF6               	movwf	tblptrl,c
  5575  00190E  0E08               	movlw	high __npowers_
  5576  001910  20F4               	addwfc	prodh,w,c
  5577  001912  6EF7               	movwf	tblptrh,c
  5578  001914  0009               	tblrd		*+
  5579  001916  CFF5 F03A          	movff	tablat,??_fround
  5580  00191A  0009               	tblrd		*+
  5581  00191C  CFF5 F03B          	movff	tablat,??_fround+1
  5582  001920  0009               	tblrd		*+
  5583  001922  CFF5 F03C          	movff	tablat,??_fround+2
  5584  001926  C03C  F028         	movff	??_fround+2,?___ftmul+2
  5585  00192A  C03B  F027         	movff	??_fround+1,?___ftmul+1
  5586  00192E  C03A  F026         	movff	??_fround,?___ftmul
  5587  001932  0E00               	movlw	0
  5588  001934  6E29               	movwf	?___ftmul+3,c
  5589  001936  0E00               	movlw	0
  5590  001938  6E2A               	movwf	?___ftmul+4,c
  5591  00193A  0E3F               	movlw	63
  5592  00193C  6E2B               	movwf	?___ftmul+5,c
  5593  00193E  EC1F  F00E         	call	___ftmul	;wreg free
  5594  001942                     L19:
  5595  001942  C028  F039         	movff	?___ftmul+2,?_fround+2
  5596  001946  C027  F038         	movff	?___ftmul+1,?_fround+1
  5597  00194A  C026  F037         	movff	?___ftmul,?_fround
  5598  00194E  0012               	return	
  5599  001950                     __end_of_fround:
  5600                           	opt stack 0
  5601                           tblptru	equ	0xFF8
  5602                           tblptrh	equ	0xFF7
  5603                           tblptrl	equ	0xFF6
  5604                           tablat	equ	0xFF5
  5605                           prodh	equ	0xFF4
  5606                           prodl	equ	0xFF3
  5607                           wreg	equ	0xFE8
  5608                           indf2	equ	0xFDF
  5609                           postinc2	equ	0xFDE
  5610                           postdec2	equ	0xFDD
  5611                           fsr2h	equ	0xFDA
  5612                           fsr2l	equ	0xFD9
  5613                           status	equ	0xFD8
  5614                           
  5615 ;; *************** function ___ftmul *****************
  5616 ;; Defined at:
  5617 ;;		line 52 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftmul.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  f1              3   37[COMRAM] float 
  5620 ;;  f2              3   40[COMRAM] float 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  f3_as_produc    3   49[COMRAM] unsigned um
  5623 ;;  sign            1   53[COMRAM] unsigned char 
  5624 ;;  cntr            1   52[COMRAM] unsigned char 
  5625 ;;  exp             1   48[COMRAM] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  3   37[COMRAM] float 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5635 ;;      Params:         6       0       0       0       0       0       0       0       0
  5636 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5637 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5638 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5639 ;;Total ram usage:       17 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    1
  5642 ;; This function calls:
  5643 ;;		___ftpack
  5644 ;; This function is called by:
  5645 ;;		_fround
  5646 ;;		_scale
  5647 ;;		_sprintf
  5648 ;;		___asftmul
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text25
  5653  001C3E                     __ptext25:
  5654                           	opt stack 0
  5655  001C3E                     ___ftmul:
  5656                           	opt stack 28
  5657                           
  5658                           ;incstack = 0
  5659                           ;incstack = 0
  5660  001C3E  0E0F               	movlw	15
  5661  001C40  6E2C               	movwf	??___ftmul& (0+255),c
  5662  001C42  C026  F02D         	movff	___ftmul@f1,??___ftmul+1
  5663  001C46  C027  F02E         	movff	___ftmul@f1+1,??___ftmul+2
  5664  001C4A  C028  F02F         	movff	___ftmul@f1+2,??___ftmul+3
  5665  001C4E  282C               	incf	??___ftmul,w,c
  5666  001C50  6E30               	movwf	(??___ftmul+4)& (0+255),c
  5667  001C52  D004               	goto	u1940
  5668  001C54                     u1945:
  5669  001C54  90D8               	bcf	status,0,c
  5670  001C56  322F               	rrcf	??___ftmul+3,f,c
  5671  001C58  322E               	rrcf	??___ftmul+2,f,c
  5672  001C5A  322D               	rrcf	??___ftmul+1,f,c
  5673  001C5C                     u1940:
  5674  001C5C  2E30               	decfsz	(??___ftmul+4)& (0+255),f,c
  5675  001C5E  D7FA               	goto	u1945
  5676  001C60  502D               	movf	??___ftmul+1,w,c
  5677  001C62  6E31               	movwf	___ftmul@exp,c
  5678  001C64  6631               	tstfsz	___ftmul@exp& (0+255),c
  5679  001C66  D001               	goto	l3534
  5680  001C68  D015               	goto	u1970
  5681  001C6A                     l3534:
  5682  001C6A  0E0F               	movlw	15
  5683  001C6C  6E2C               	movwf	??___ftmul& (0+255),c
  5684  001C6E  C029  F02D         	movff	___ftmul@f2,??___ftmul+1
  5685  001C72  C02A  F02E         	movff	___ftmul@f2+1,??___ftmul+2
  5686  001C76  C02B  F02F         	movff	___ftmul@f2+2,??___ftmul+3
  5687  001C7A  282C               	incf	??___ftmul,w,c
  5688  001C7C  6E30               	movwf	(??___ftmul+4)& (0+255),c
  5689  001C7E  D004               	goto	u1960
  5690  001C80                     u1965:
  5691  001C80  90D8               	bcf	status,0,c
  5692  001C82  322F               	rrcf	??___ftmul+3,f,c
  5693  001C84  322E               	rrcf	??___ftmul+2,f,c
  5694  001C86  322D               	rrcf	??___ftmul+1,f,c
  5695  001C88                     u1960:
  5696  001C88  2E30               	decfsz	(??___ftmul+4)& (0+255),f,c
  5697  001C8A  D7FA               	goto	u1965
  5698  001C8C  502D               	movf	??___ftmul+1,w,c
  5699  001C8E  6E36               	movwf	___ftmul@sign,c
  5700  001C90  6636               	tstfsz	___ftmul@sign& (0+255),c
  5701  001C92  D007               	goto	l3540
  5702  001C94                     u1970:
  5703  001C94  0E00               	movlw	0
  5704  001C96  6E26               	movwf	?___ftmul,c
  5705  001C98  0E00               	movlw	0
  5706  001C9A  6E27               	movwf	?___ftmul+1,c
  5707  001C9C  0E00               	movlw	0
  5708  001C9E  6E28               	movwf	?___ftmul+2,c
  5709  001CA0  D055               	goto	l594
  5710  001CA2                     l3540:
  5711  001CA2  5036               	movf	___ftmul@sign,w,c
  5712  001CA4  0F7B               	addlw	123
  5713  001CA6  2631               	addwf	___ftmul@exp,f,c
  5714  001CA8  C028  F036         	movff	___ftmul@f1+2,___ftmul@sign
  5715  001CAC  502B               	movf	(___ftmul@f2+2)& (0+255),w,c
  5716  001CAE  1A36               	xorwf	___ftmul@sign,f,c
  5717  001CB0  0E80               	movlw	128
  5718  001CB2  1636               	andwf	___ftmul@sign,f,c
  5719  001CB4  8E27               	bsf	___ftmul@f1+1,7,c
  5720  001CB6  8E2A               	bsf	___ftmul@f2+1,7,c
  5721  001CB8  0EFF               	movlw	255
  5722  001CBA  1629               	andwf	___ftmul@f2,f,c
  5723  001CBC  0EFF               	movlw	255
  5724  001CBE  162A               	andwf	___ftmul@f2+1,f,c
  5725  001CC0  0E00               	movlw	0
  5726  001CC2  162B               	andwf	___ftmul@f2+2,f,c
  5727  001CC4  0E00               	movlw	0
  5728  001CC6  6E32               	movwf	___ftmul@f3_as_product,c
  5729  001CC8  0E00               	movlw	0
  5730  001CCA  6E33               	movwf	___ftmul@f3_as_product+1,c
  5731  001CCC  0E00               	movlw	0
  5732  001CCE  6E34               	movwf	___ftmul@f3_as_product+2,c
  5733  001CD0  6E2C               	movwf	??___ftmul& (0+255),c
  5734  001CD2  0E07               	movlw	7
  5735  001CD4  6E35               	movwf	___ftmul@cntr,c
  5736  001CD6  502C               	movf	??___ftmul& (0+255),w,c
  5737  001CD8                     l3554:
  5738  001CD8  A026               	btfss	___ftmul@f1,0,c
  5739  001CDA  D006               	goto	l3558
  5740  001CDC  5029               	movf	___ftmul@f2,w,c
  5741  001CDE  2632               	addwf	___ftmul@f3_as_product,f,c
  5742  001CE0  502A               	movf	___ftmul@f2+1,w,c
  5743  001CE2  2233               	addwfc	___ftmul@f3_as_product+1,f,c
  5744  001CE4  502B               	movf	___ftmul@f2+2,w,c
  5745  001CE6  2234               	addwfc	___ftmul@f3_as_product+2,f,c
  5746  001CE8                     l3558:
  5747  001CE8  90D8               	bcf	status,0,c
  5748  001CEA  3228               	rrcf	___ftmul@f1+2,f,c
  5749  001CEC  3227               	rrcf	___ftmul@f1+1,f,c
  5750  001CEE  3226               	rrcf	___ftmul@f1,f,c
  5751  001CF0  90D8               	bcf	status,0,c
  5752  001CF2  3629               	rlcf	___ftmul@f2,f,c
  5753  001CF4  362A               	rlcf	___ftmul@f2+1,f,c
  5754  001CF6  362B               	rlcf	___ftmul@f2+2,f,c
  5755  001CF8  2E35               	decfsz	___ftmul@cntr,f,c
  5756  001CFA  D7EE               	goto	l3554
  5757  001CFC  6E2C               	movwf	??___ftmul& (0+255),c
  5758  001CFE  0E09               	movlw	9
  5759  001D00  6E35               	movwf	___ftmul@cntr,c
  5760  001D02  502C               	movf	??___ftmul& (0+255),w,c
  5761  001D04                     l3564:
  5762  001D04  A026               	btfss	___ftmul@f1,0,c
  5763  001D06  D006               	goto	l3568
  5764  001D08  5029               	movf	___ftmul@f2,w,c
  5765  001D0A  2632               	addwf	___ftmul@f3_as_product,f,c
  5766  001D0C  502A               	movf	___ftmul@f2+1,w,c
  5767  001D0E  2233               	addwfc	___ftmul@f3_as_product+1,f,c
  5768  001D10  502B               	movf	___ftmul@f2+2,w,c
  5769  001D12  2234               	addwfc	___ftmul@f3_as_product+2,f,c
  5770  001D14                     l3568:
  5771  001D14  90D8               	bcf	status,0,c
  5772  001D16  3228               	rrcf	___ftmul@f1+2,f,c
  5773  001D18  3227               	rrcf	___ftmul@f1+1,f,c
  5774  001D1A  3226               	rrcf	___ftmul@f1,f,c
  5775  001D1C  90D8               	bcf	status,0,c
  5776  001D1E  3234               	rrcf	___ftmul@f3_as_product+2,f,c
  5777  001D20  3233               	rrcf	___ftmul@f3_as_product+1,f,c
  5778  001D22  3232               	rrcf	___ftmul@f3_as_product,f,c
  5779  001D24  2E35               	decfsz	___ftmul@cntr,f,c
  5780  001D26  D7EE               	goto	l3564
  5781  001D28  C032  F001         	movff	___ftmul@f3_as_product,?___ftpack
  5782  001D2C  C033  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  5783  001D30  C034  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  5784  001D34  C031  F004         	movff	___ftmul@exp,?___ftpack+3
  5785  001D38  C036  F005         	movff	___ftmul@sign,?___ftpack+4
  5786  001D3C  EC10  F010         	call	___ftpack	;wreg free
  5787  001D40  C003  F028         	movff	?___ftpack+2,?___ftmul+2
  5788  001D44  C002  F027         	movff	?___ftpack+1,?___ftmul+1
  5789  001D48  C001  F026         	movff	?___ftpack,?___ftmul
  5790  001D4C                     l594:
  5791  001D4C  0012               	return	
  5792  001D4E                     __end_of___ftmul:
  5793                           	opt stack 0
  5794                           tblptru	equ	0xFF8
  5795                           tblptrh	equ	0xFF7
  5796                           tblptrl	equ	0xFF6
  5797                           tablat	equ	0xFF5
  5798                           prodh	equ	0xFF4
  5799                           prodl	equ	0xFF3
  5800                           wreg	equ	0xFE8
  5801                           indf2	equ	0xFDF
  5802                           postinc2	equ	0xFDE
  5803                           postdec2	equ	0xFDD
  5804                           fsr2h	equ	0xFDA
  5805                           fsr2l	equ	0xFD9
  5806                           status	equ	0xFD8
  5807                           
  5808 ;; *************** function _lcd_int *****************
  5809 ;; Defined at:
  5810 ;;		line 69 in file "main.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;		None
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;		None
  5815 ;; Return value:  Size  Location     Type
  5816 ;;		None               void
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0, cstack
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5824 ;;      Params:         0       0       0       0       0       0       0       0       0
  5825 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5826 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5827 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5828 ;;Total ram usage:        1 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    1
  5831 ;; This function calls:
  5832 ;;		_cmd
  5833 ;; This function is called by:
  5834 ;;		_main
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text26
  5839  002576                     __ptext26:
  5840                           	opt stack 0
  5841  002576                     _lcd_int:
  5842                           	opt stack 29
  5843                           
  5844                           ;main.c: 70: cmd(0x38);
  5845                           
  5846                           ;incstack = 0
  5847                           ;incstack = 0
  5848  002576  6E02               	movwf	??_lcd_int& (0+255),c
  5849  002578  0E38               	movlw	56
  5850  00257A  6E01               	movwf	?_cmd,c
  5851  00257C  5002               	movf	??_lcd_int& (0+255),w,c
  5852  00257E  ECEA  F012         	call	_cmd	;wreg free
  5853                           
  5854                           ;main.c: 71: cmd(0x0c);
  5855  002582  6E02               	movwf	??_lcd_int& (0+255),c
  5856  002584  0E0C               	movlw	12
  5857  002586  6E01               	movwf	?_cmd,c
  5858  002588  5002               	movf	??_lcd_int& (0+255),w,c
  5859  00258A  ECEA  F012         	call	_cmd	;wreg free
  5860                           
  5861                           ;main.c: 72: cmd(0x06);
  5862  00258E  6E02               	movwf	??_lcd_int& (0+255),c
  5863  002590  0E06               	movlw	6
  5864  002592  6E01               	movwf	?_cmd,c
  5865  002594  5002               	movf	??_lcd_int& (0+255),w,c
  5866  002596  ECEA  F012         	call	_cmd	;wreg free
  5867                           
  5868                           ;main.c: 73: cmd(0x80);
  5869  00259A  6E02               	movwf	??_lcd_int& (0+255),c
  5870  00259C  0E80               	movlw	128
  5871  00259E  6E01               	movwf	?_cmd,c
  5872  0025A0  5002               	movf	??_lcd_int& (0+255),w,c
  5873  0025A2  ECEA  F012         	call	_cmd	;wreg free
  5874  0025A6  0012               	return	
  5875  0025A8                     __end_of_lcd_int:
  5876                           	opt stack 0
  5877                           tblptru	equ	0xFF8
  5878                           tblptrh	equ	0xFF7
  5879                           tblptrl	equ	0xFF6
  5880                           tablat	equ	0xFF5
  5881                           prodh	equ	0xFF4
  5882                           prodl	equ	0xFF3
  5883                           wreg	equ	0xFE8
  5884                           indf2	equ	0xFDF
  5885                           postinc2	equ	0xFDE
  5886                           postdec2	equ	0xFDD
  5887                           fsr2h	equ	0xFDA
  5888                           fsr2l	equ	0xFD9
  5889                           status	equ	0xFD8
  5890                           
  5891 ;; *************** function _cmd *****************
  5892 ;; Defined at:
  5893 ;;		line 76 in file "main.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  a               1    0[COMRAM] unsigned char 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;		None               void
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5907 ;;      Params:         1       0       0       0       0       0       0       0       0
  5908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5910 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5911 ;;Total ram usage:        1 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_main
  5917 ;;		_lcd_int
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text27
  5922  0025D4                     __ptext27:
  5923                           	opt stack 0
  5924  0025D4                     _cmd:
  5925                           	opt stack 30
  5926                           
  5927                           ;main.c: 77: PORTD = a;
  5928                           
  5929                           ;incstack = 0
  5930                           ;incstack = 0
  5931  0025D4  C001  FF83         	movff	cmd@a,3971	;volatile
  5932                           
  5933                           ;main.c: 78: RC0 = 0;
  5934  0025D8  9082               	bcf	3970,0,c	;volatile
  5935                           
  5936                           ;main.c: 79: RC1 = 0;
  5937  0025DA  9282               	bcf	3970,1,c	;volatile
  5938                           
  5939                           ;main.c: 80: RC2 = 1;
  5940  0025DC  8482               	bsf	3970,2,c	;volatile
  5941                           
  5942                           ;main.c: 81: for (i = 0; i <= 1000; i++);
  5943  0025DE  0E00               	movlw	0
  5944  0025E0  6E5D               	movwf	_i+1,c
  5945  0025E2  0E00               	movlw	0
  5946  0025E4  6E5C               	movwf	_i,c
  5947  0025E6  505D               	movf	_i+1,w,c
  5948  0025E8  0A80               	xorlw	128
  5949  0025EA  0F7D               	addlw	-131
  5950  0025EC  0EE9               	movlw	233
  5951  0025EE  B4D8               	btfsc	status,2,c
  5952  0025F0  5C5C               	subwf	_i,w,c
  5953  0025F2  B0D8               	btfsc	status,0,c
  5954  0025F4  D003               	goto	l83
  5955  0025F6  4A5C               	infsnz	_i,f,c
  5956  0025F8  2A5D               	incf	_i+1,f,c
  5957  0025FA  D7F5               	goto	L20
  5958  0025FC                     l83:
  5959                           
  5960                           ;main.c: 82: RC2 = 0;
  5961  0025FC  9482               	bcf	3970,2,c	;volatile
  5962  0025FE  0012               	return	
  5963  002600                     __end_of_cmd:
  5964                           	opt stack 0
  5965                           tblptru	equ	0xFF8
  5966                           tblptrh	equ	0xFF7
  5967                           tblptrl	equ	0xFF6
  5968                           tablat	equ	0xFF5
  5969                           prodh	equ	0xFF4
  5970                           prodl	equ	0xFF3
  5971                           wreg	equ	0xFE8
  5972                           indf2	equ	0xFDF
  5973                           postinc2	equ	0xFDE
  5974                           postdec2	equ	0xFDD
  5975                           fsr2h	equ	0xFDA
  5976                           fsr2l	equ	0xFD9
  5977                           status	equ	0xFD8
  5978                           
  5979 ;; *************** function _Init_AD *****************
  5980 ;; Defined at:
  5981 ;;		line 13 in file "main.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;		None               void
  5988 ;; Registers used:
  5989 ;;		wreg, status,2
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5998 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5999 ;;Total ram usage:        0 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_main
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text28
  6009  002662                     __ptext28:
  6010                           	opt stack 0
  6011  002662                     _Init_AD:
  6012                           	opt stack 30
  6013                           
  6014                           ;main.c: 14: ADCON0 = 0x01;
  6015                           
  6016                           ;incstack = 0
  6017                           ;incstack = 0
  6018  002662  0E01               	movlw	1
  6019  002664  6EC2               	movwf	4034,c	;volatile
  6020                           
  6021                           ;main.c: 15: ADCON1 = 0x0E;
  6022  002666  0E0E               	movlw	14
  6023  002668  6EC1               	movwf	4033,c	;volatile
  6024                           
  6025                           ;main.c: 16: ADCON2 = 0xA6;
  6026  00266A  0EA6               	movlw	166
  6027  00266C  6EC0               	movwf	4032,c	;volatile
  6028                           
  6029                           ;main.c: 17: ADRESH = 0;
  6030  00266E  0E00               	movlw	0
  6031  002670  6EC4               	movwf	4036,c	;volatile
  6032                           
  6033                           ;main.c: 18: ADRESL = 0;
  6034  002672  0E00               	movlw	0
  6035  002674  6EC3               	movwf	4035,c	;volatile
  6036  002676  0012               	return	
  6037  002678                     __end_of_Init_AD:
  6038                           	opt stack 0
  6039                           tblptru	equ	0xFF8
  6040                           tblptrh	equ	0xFF7
  6041                           tblptrl	equ	0xFF6
  6042                           tablat	equ	0xFF5
  6043                           prodh	equ	0xFF4
  6044                           prodl	equ	0xFF3
  6045                           wreg	equ	0xFE8
  6046                           indf2	equ	0xFDF
  6047                           postinc2	equ	0xFDE
  6048                           postdec2	equ	0xFDD
  6049                           fsr2h	equ	0xFDA
  6050                           fsr2l	equ	0xFD9
  6051                           status	equ	0xFD8
  6052                           
  6053 ;; *************** function ___ftneg *****************
  6054 ;; Defined at:
  6055 ;;		line 16 in file "E:\Program Files\Microchip\xc8\v1.20\sources\common\ftneg.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  f1              3    8[COMRAM] float 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  3    8[COMRAM] float 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6069 ;;      Params:         3       0       0       0       0       0       0       0       0
  6070 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6072 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6073 ;;Total ram usage:        3 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;;		_sprintf
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text29
  6084  002626                     __ptext29:
  6085                           	opt stack 0
  6086  002626                     ___ftneg:
  6087                           	opt stack 30
  6088                           
  6089                           ;incstack = 0
  6090                           ;incstack = 0
  6091  002626  0E7F               	movlw	127
  6092  002628  140B               	andwf	___ftneg@f1+2,w,c
  6093  00262A  100A               	iorwf	___ftneg@f1+1,w,c
  6094  00262C  1009               	iorwf	___ftneg@f1,w,c
  6095  00262E  B4D8               	btfsc	status,2,c
  6096  002630  D006               	goto	l604
  6097  002632  0E00               	movlw	0
  6098  002634  1A09               	xorwf	___ftneg@f1,f,c
  6099  002636  0E00               	movlw	0
  6100  002638  1A0A               	xorwf	___ftneg@f1+1,f,c
  6101  00263A  0E80               	movlw	128
  6102  00263C  1A0B               	xorwf	___ftneg@f1+2,f,c
  6103  00263E                     l604:
  6104  00263E  C009  F009         	movff	___ftneg@f1,?___ftneg
  6105  002642  C00A  F00A         	movff	___ftneg@f1+1,?___ftneg+1
  6106  002646  C00B  F00B         	movff	___ftneg@f1+2,?___ftneg+2
  6107  00264A  0012               	return	
  6108  00264C                     __end_of___ftneg:
  6109                           	opt stack 0
  6110                           tblptru	equ	0xFF8
  6111                           tblptrh	equ	0xFF7
  6112                           tblptrl	equ	0xFF6
  6113                           tablat	equ	0xFF5
  6114                           prodh	equ	0xFF4
  6115                           prodl	equ	0xFF3
  6116                           wreg	equ	0xFE8
  6117                           indf2	equ	0xFDF
  6118                           postinc2	equ	0xFDE
  6119                           postdec2	equ	0xFDD
  6120                           fsr2h	equ	0xFDA
  6121                           fsr2l	equ	0xFD9
  6122                           status	equ	0xFD8
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           wreg	equ	0xFE8
  6130                           indf2	equ	0xFDF
  6131                           postinc2	equ	0xFDE
  6132                           postdec2	equ	0xFDD
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137                           	psect	rparam
  6138  0000                     tblptru	equ	0xFF8
  6139                           tblptrh	equ	0xFF7
  6140                           tblptrl	equ	0xFF6
  6141                           tablat	equ	0xFF5
  6142                           prodh	equ	0xFF4
  6143                           prodl	equ	0xFF3
  6144                           wreg	equ	0xFE8
  6145                           indf2	equ	0xFDF
  6146                           postinc2	equ	0xFDE
  6147                           postdec2	equ	0xFDD
  6148                           fsr2h	equ	0xFDA
  6149                           fsr2l	equ	0xFD9
  6150                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    118
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      93
    BANK0           160     41      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?___ftsub	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___asftsub	float  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?__tdiv_to_l_	unsigned long  size(2) Largest target is 0

    ?__div_to_l_	unsigned long  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 0

    ?___asftadd	float  size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 0

    ?_scale	float  size(2) Largest target is 0

    ?_fround	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awmod	int  size(2) Largest target is 0

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK0[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> main@mystr(BANK0[10]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S193$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    show@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@mystr(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    ___awtoft->___ftpack
    ___ftdiv->___ftneg
    _show->_dat
    _sprintf->___asftadd
    ___lltoft->___ftpack
    ___fttol->___wmul
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___asftadd->_fround
    ___ftadd->___ftdiv
    _scale->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    _fround->___ftmul
    ___ftmul->___fttol
    _lcd_int->_cmd
    ___ftneg->___ftpack

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   12986
                                             87 COMRAM     4     4      0
                                             31 BANK0     10    10      0
                            _Init_AD
                            _lcd_int
                                _cmd
                            _sprintf
                               _show
                            ___ftadd
                            ___ftdiv
                           ___awtoft
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             5     2      3     300
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             17    11      6     489
                                             11 COMRAM    17    11      6
                           ___ftpack
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     0      2      67
                                              1 COMRAM     2     0      2
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  1     0      1      22
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    43      7   10792
                                             74 COMRAM    13     6      7
                                              0 BANK0     31    31      0
                             _fround
                              _scale
                        __tdiv_to_l_
                         __div_to_l_
                          ___asftadd
                          ___asftmul
                            ___ftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     159
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4     278
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     159
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     162
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     252
                                             22 COMRAM    15    11      4
                           ___ftpack (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     136
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___asftsub                                            5     0      5    1160
                                             48 COMRAM     5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    1094
                                             42 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5     601
                                             54 COMRAM     5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___asftadd                                            5     0      5    1115
                                             69 COMRAM     5     0      5
                             _fround (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             14     8      6    1049
                                             28 COMRAM    14     8      6
                           ___ftpack
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5     209
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          13     7      6     446
                                              0 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17    11      6     303
                                              0 COMRAM    17    11      6
 ---------------------------------------------------------------------------------
 (2) _scale                                               15    12      3    1779
                                             54 COMRAM    12     9      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     159
                                             16 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     296
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     300
                                              7 COMRAM     9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              18    15      3    1581
                                             54 COMRAM    15    12      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             17    11      6     535
                                             37 COMRAM    17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_int                                              1     1      0      22
                                              1 COMRAM     1     1      0
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  1     0      1      22
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _Init_AD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      45
                                              8 COMRAM     3     0      3
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_AD
   _lcd_int
     _cmd
   _cmd
   _sprintf
     _fround
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     __tdiv_to_l_
     __div_to_l_
     ___asftadd
       _fround (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftneg (ARG)
             ___ftpack (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
     ___asftmul
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___asftsub
       ___ftsub
         ___ftadd
           ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftneg (ARG)
               ___ftpack (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___awdiv
       ___awmod (ARG)
     ___ftge
     ___ftneg
       ___ftpack (ARG)
     ___fttol
       ___ftpack (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___lwmod
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _show
     _dat
   ___ftadd
     ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftneg (ARG)
         ___ftpack (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
   ___ftdiv
     ___ftpack
     ___ftneg (ARG)
       ___ftpack (ARG)
   ___awtoft
     ___ftpack
   ___ftge
   ___ftneg
     ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      2C       5       27.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5D       1       97.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       5       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89      20        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Wed Jun 01 22:00:52 2022

           ___asftadd@f2 0048                        _i 005C            ___asftadd@f1p 0046  
                     l55 141C                       l83 25FC                       l88 25D0  
                     _GO 007E11             ___awdiv@sign 000E      ___wmul@multiplicand 0013  
           ___asftmul@f2 0039             ___asftsub@f2 0033             ___ftadd@exp1 002A  
           ___ftadd@exp2 0029             ___ftadd@sign 0028                      l126 13C2  
                    l171 0D94                      l530 19B8                      l531 1B1A  
                    l604 263E                      l452 1F3E                      l461 1F2E  
                    l454 1EAA                      l534 19E2                      l614 201E  
                    l545 1A86                      l570 1C3C                      l554 1AA2  
                    l562 1E4A                      l732 2404                      l564 1DF4  
                    l573 1BDA                      l493 20D6                      l653 226C  
                    l565 1E1A                      l663 2352                      l594 1D4C  
                    l579 1C2C                      l588 2166                      _RC0 007C10  
                    _RC1 007C11                      _RC2 007C12                      _dat 25A8  
                    _cmd 25D4             ___awmod@sign 0007                      wreg 000FE8  
          ___asftmul@f1p 0037              _sprintf$204 0063              _sprintf$808 0060  
          ___asftsub@f1p 0031             ___ftdiv@cntr 0017             ___ftdiv@sign 001C  
                   ?_dat 0001                     ?_cmd 0001                     l4020 0D5E  
                   l4004 0CBA                     l4012 0D34                     l3310 1C04  
                   l4014 0D44                     l4102 1552                     l4120 161E  
                   l3306 1BF4                     l4050 0EF8                     l4034 0DCC  
                   l4026 0D98                     l4114 15DA                     l3316 1C1C  
                   l3332 1E64                     l4132 16A6                     l4108 1596  
                   l3430 22C4                     l3422 22A6                     l3318 1C28  
                   l3270 1B48                     l3326 1E58                     l3510 23E6  
                   l4038 0E1E                     l4126 1662                     l3600 21BA  
                   l3352 1EDA                     l4056 0F12                     l4048 0EE8  
                   l4064 0F4C                     l4136 16CA                     l4080 13DA  
                   l3442 22F0                     l3434 22D8                     l3426 22B8  
                   l3418 229A                     l3290 1BB2                     l3362 1EF6  
                   l3450 2108                     l3514 23FA                     l3506 23DA  
                   l4058 0F20                     l4066 0F66                     l3522 2602  
                   l3540 1CA2                     l3612 21E0                     l3428 22C0  
                   l3276 1B74                     l3372 1F1E                     l3380 2030  
                   l3460 2164                     l3508 23E2                     l3534 1C6A  
                   l3438 22E2                     l3374 1F2A                     l3366 1F06  
                   l3710 1A58                     l3454 2138                     l3470 221E  
                   l3526 2616                     l3616 21EE                     l3608 21D6  
                   l3392 207C                     l3384 203E                     l3704 1A40  
                   l3472 222A                     l3640 237A                     l4096 150E  
                   l3554 1CD8                     l3810 117A                     l3394 209A  
                   l3386 2048                     l3706 1A4A                     l3482 225E  
                   l3474 222E                     l3490 2310                     l3564 1D04  
                   l3804 10BE                     l3396 20A4                     l3388 2066  
                   l3724 1ABE                     l3716 1A76                     l3708 1A52  
                   l3492 231C                     l3900 08A6                     l3628 242A  
                   l3558 1CE8                     l3590 2194                     l3822 12CC  
                   l3814 1188                     l3734 1AF6                     l3718 1A80  
                   l3494 2320                     l3638 236E                     l3902 08B6  
                   l3750 1DB2                     l3568 1D14                     l3664 1904  
                   l3656 182C                     l3584 2184                     l3744 1D7A  
                   l3682 19F0                     l3498 2344                     l3922 0968  
                   l3906 08BE                     l3596 21AE                     l3828 1394  
                   l3676 19C6                     l3908 08E4                     l3598 21B6  
                   l3870 1FD0                     l3950 0AAC                     l3880 1FF8  
                   l3848 1F6C                     l3698 1A22                     l3866 1FC0  
                   l3962 0B3C                     l3954 0AE4                     l3946 0A84  
                   l3938 0A22                     l3884 200E                     l3876 1FE8  
                   l3878 1FF4                     l3966 0B62                     l3894 088A  
                   l3984 0C38                     l3978 0BDA                     l3998 0C92  
                   _ADON 007E10                     STR_1 0876                     u2110 196E  
                   u2120 1994                     u2115 1966                     u2125 198C  
                   _LATB 000F8A                     u1520 1B3A                     u2320 1D6C  
                   u1540 1B66                     u2420 1F5E                     u2340 1D98  
                   u1525 1B32                     u2325 1D64                     u2350 1DA4  
                   u2440 1F8A                     u1545 1B5E                     u2425 1F56  
                   u2345 1D90                     u1660 1F0C                     u2540 09B8  
                   u2445 1F82                     u2525 0940                     u1590 1C0A  
                   u2470 1FD6                     u2545 09AE                     u1940 1C5C  
                   u1960 1C88                     u1945 1C54                     u1970 1C94  
                   u2764 13FA                     u1965 1C80                     u2765 13F6  
                   u2774 1412                     u2775 140E                     dat@b 0001  
                   cmd@a 0001                     _main 13C4             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     _show 2600                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___ftmul@cntr 0035  
           ___ftmul@sign 0036          __end_of_Init_AD 2678             ___fttol@exp1 0025  
                  ??_dat 0002                    ??_cmd 0002             ___fttol@lval 0021  
                  ?_main 0001          __end_of___awdiv 21F8          __end_of___ftadd 1B1C  
        __end_of___awmod 22FA                    ?_show 0002          __end_of___ftdiv 1E4C  
        __end_of___ftneg 264C          __end_of___lldiv 227E          __end_of___ftmul 1D4E  
        ___awdiv@divisor 000A          __end_of___llmod 2364          __end_of___ftsub 2576  
        __end_of___fttol 2020          __end_of___lwmod 240E          ___awdiv@counter 000D  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95             ___lltoft@exp 0011          __end_of_lcd_int 25A8  
          ___awtoft@sign 000D          __end_of_dpowers 0828                    _scale 0F74  
          ___ftpack@sign 0005                    tablat 000FF5                    show@s 0002  
                  status 000FD8          __end_of_sprintf 0F74          __initialization 264C  
           __end_of_main 16D0             __end_of_show 2626                   ??_main 0058  
          ___fttol@sign1 0020                   ??_show 0004            __activetblptr 000002  
   __size_of__tdiv_to_l_ 0122                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0         ___llmod@dividend 0001                   ?_scale 0037  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0008  
       __end_of___awtoft 2452         __end_of___ftpack 20D8         __end_of___lltoft 23C8  
                 _TRISA0 007C90                ??_Init_AD 0001         __end_of__powers_ 0876  
                 ___ftge 20D8                   ___wmul 2506                ??___awdiv 000C  
              ??___ftadd 0023                ??___awmod 0005                ??___ftdiv 0012  
              ??___ftneg 000C                ??___lldiv 0009                ??___ftmul 002C  
              ??___llmod 0009                ??___ftsub 0031                ??___fttol 001B  
              ??___lwmod 0005                   _fround 16D0         ___awdiv@quotient 000F  
        ___awmod@divisor 0003          ___awmod@counter 0006                ??_lcd_int 0002  
  ___ftmul@f3_as_product 0032           _analog_reading 0089             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_sprintf 0052       __size_of___asftadd 003C       __size_of___asftmul 003C  
     __size_of___asftsub 003C               __accesstop 0060  __end_of__initialization 2658  
             ___ftadd@f1 001D               ___ftadd@f2 0020               ___ftge@ff1 0001  
             ___ftge@ff2 0004               ___ftdiv@f1 000C               ___ftdiv@f2 000F  
             ___ftdiv@f3 0018               ___ftneg@f1 0009               ___awtoft@c 0009  
             ___ftmul@f1 0026               ___ftmul@f2 0029               ___ftsub@f1 002B  
             ___ftsub@f2 002E               ___fttol@f1 0017           __pcstackCOMRAM 0001  
             ___lltoft@c 0009            __end_of_scale 13C4               __div_to_l_ 1E4C  
        __div_to_l_@exp1 000D          __div_to_l_@cntr 000C             sprintf@integ 0076  
                ??_scale 003A          __div_to_l_@quot 0008               __pbssBANK0 0089  
          __div_to_l_@f1 0001            __div_to_l_@f2 0004                  ?___ftge 0001  
                ?___wmul 0011        __end_of___asftadd 2506                  ?_fround 0037  
      __end_of___asftmul 24CA        __end_of___asftsub 248E                ?___awtoft 0009  
              ?___ftpack 0001                ?___lltoft 0009                  _Init_AD 2662  
      __end_of__npowers_ 084F                  __Hparam 0000                  __Lparam 0000  
        __size_of___ftge 0090                  ___awdiv 2168                  ___ftadd 1950  
                ___awmod 227E                  ___ftdiv 1D4E                  ___ftneg 2626  
                ___lldiv 21F8          __size_of___wmul 003A                  ___ftmul 1C3E  
                ___llmod 22FA                  ___ftsub 2540                  ___fttol 1F40  
             _fround$805 0043               _fround$806 0040                  ___lwmod 23C8  
           __psmallconst 0800                  __pcinit 264C               ??___awtoft 000C  
             ??___ftpack 0006          __size_of_fround 0280                  __ramtop 0800  
             ??___lltoft 000D                  __ptext0 13C4                  __ptext1 240E  
                __ptext2 1D4E                  __ptext3 2600                  __ptext4 25A8  
                __ptext5 087A                  __ptext6 23C8                  __ptext7 2364  
                __ptext8 22FA                  __ptext9 21F8                  _lcd_int 2576  
            ?__div_to_l_ 0001                  _dpowers 0800             __size_of_dat 002C  
           __size_of_cmd 002C         ___awmod@dividend 0001                  _sprintf 087A  
   end_of_initialization 2658            __Lmediumconst 0000          ___lldiv@divisor 0005  
        ___lldiv@counter 000E                  postdec2 000FDD                  postinc2 000FDE  
         __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0004            ??__tdiv_to_l_ 0007  
            ___ftdiv@exp 001B      __size_of__div_to_l_ 00F4              ___ftmul@exp 0031  
         __end_of___ftge 2168           __end_of___wmul 2540           __end_of_fround 1950  
    start_initialization 264C      __end_of__tdiv_to_l_ 1C3E              __end_of_dat 25D4  
            __end_of_cmd 2600          ___llmod@divisor 0005          ___llmod@counter 000A  
               ??___ftge 0007                 ??___wmul 0015            sprintf@vd_206 006B  
               ??_fround 003A               fround@prec 0037        __size_of___awtoft 0044  
      __size_of___ftpack 00B8                ___asftadd 24CA                ___asftmul 248E  
              ___asftsub 2452        __size_of___lltoft 0064              __pbssCOMRAM 005C  
          __pcstackBANK0 0060      __end_of__stringdata 0879              sprintf@_val 0071  
            sprintf@flag 006D              sprintf@fval 007C              sprintf@prec 006F  
               ?_Init_AD 0001                 ?___awdiv 0008                 ?___ftadd 001D  
               ?___awmod 0001                 ?___ftdiv 000C                 ?___ftneg 0009  
               ?___lldiv 0001                 ?___ftmul 0026                 ?___llmod 0001  
               ?___ftsub 002B                __npowers_ 0828                 ?___fttol 0017  
               ?___lwmod 0001              __tdiv_to_l_ 1B1C                 ?_lcd_int 0001  
           ??__div_to_l_ 0007              __smallconst 0800               ?___asftadd 0046  
             ?___asftmul 0037               ?___asftsub 0031                _scale$807 0040  
               ?_sprintf 004B           __size_of_scale 0450           ___wmul@product 0015  
     __end_of__div_to_l_ 1F40                 _GO_nDONE 007E11               _ADCON0bits 000FC2  
            __stringdata 0876        ___wmul@multiplier 0011                main@mystr 007F  
       __size_of_Init_AD 0016                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 0090         __size_of___ftadd 01CC         __size_of___awmod 007C  
       __size_of___ftdiv 00FE         __size_of___ftneg 0026         __size_of___lldiv 0086  
       __size_of___ftmul 0110         __size_of___llmod 006A         __size_of___ftsub 0036  
       __size_of___fttol 00E0         __size_of___lwmod 0046                 ___awtoft 240E  
               ___ftpack 2020                 ___lltoft 2364              ??___asftadd 004B  
       __size_of_lcd_int 0032               sprintf@exp 0079              ??___asftmul 003C  
            ??___asftsub 0036                 __ptext10 1F40                 __ptext11 20D8  
               __ptext20 0F74                 __ptext12 2452                 __ptext21 2506  
               __ptext13 2540                 __ptext22 227E                 __ptext14 248E  
               __ptext23 2168                 __ptext15 24CA                 __ptext24 16D0  
               __ptext16 1950                 __ptext25 1C3E                 __ptext17 2020  
               __ptext26 2576                 __ptext18 1E4C                 __ptext27 25D4  
               __ptext19 1B1C                 __ptext28 2662                 __ptext29 2626  
               __powers_ 084F         __size_of_sprintf 06FA            __size_of_main 030C  
          __size_of_show 0026                 scale@scl 0037                sprintf@ap 0067  
       __tdiv_to_l_@exp1 0011                sprintf@vd 0069                sprintf@sp 004B  
       __tdiv_to_l_@cntr 0010         __tdiv_to_l_@quot 000C         ___lwmod@dividend 0001  
       ___lldiv@dividend 0001             ?__tdiv_to_l_ 0001                 sprintf@c 007B  
               sprintf@f 004D         ___lldiv@quotient 000A          ___lwmod@divisor 0003  
        ___lwmod@counter 0006  
