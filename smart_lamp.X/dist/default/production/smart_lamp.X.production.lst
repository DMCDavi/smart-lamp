

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Jun 10 02:06:53 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   112  0000                     
   113                           	psect	idataBANK1
   114  00678C                     __pidataBANK1:
   115                           	opt stack 0
   116                           
   117                           ;initializer for _cycles
   118  00678C  000A               	dw	10
   119  00678E  0005               	dw	5
   120                           
   121                           	psect	smallconst
   122  000800                     __psmallconst:
   123                           	opt stack 0
   124  000800                     _dpowers:
   125                           	opt stack 0
   126  000800  0001               	dw	1
   127  000802  0000               	dw	0
   128  000804  000A               	dw	10
   129  000806  0000               	dw	0
   130  000808  0064               	dw	100
   131  00080A  0000               	dw	0
   132  00080C  03E8               	dw	1000
   133  00080E  0000               	dw	0
   134  000810  2710               	dw	10000
   135  000812  0000               	dw	0
   136  000814  86A0               	dw	34464
   137  000816  0001               	dw	1
   138  000818  4240               	dw	16960
   139  00081A  000F               	dw	15
   140  00081C  9680               	dw	38528
   141  00081E  0098               	dw	152
   142  000820  E100               	dw	57600
   143  000822  05F5               	dw	1525
   144  000824  CA00               	dw	51712
   145  000826  3B9A               	dw	15258
   146  000828                     __end_of_dpowers:
   147                           	opt stack 0
   148  000828                     __npowers_:
   149                           	opt stack 0
   150  000828  00                 	db	0
   151  000829  80                 	db	128
   152  00082A  3F                 	db	63
   153  00082B  CD                 	db	205
   154  00082C  CC                 	db	204
   155  00082D  3D                 	db	61
   156  00082E  D7                 	db	215
   157  00082F  23                 	db	35
   158  000830  3C                 	db	60
   159  000831  12                 	db	18
   160  000832  83                 	db	131
   161  000833  3A                 	db	58
   162  000834  B7                 	db	183
   163  000835  D1                 	db	209
   164  000836  38                 	db	56
   165  000837  C6                 	db	198
   166  000838  27                 	db	39
   167  000839  37                 	db	55
   168  00083A  38                 	db	56
   169  00083B  86                 	db	134
   170  00083C  35                 	db	53
   171  00083D  C0                 	db	192
   172  00083E  D6                 	db	214
   173  00083F  33                 	db	51
   174  000840  CC                 	db	204
   175  000841  2B                 	db	43
   176  000842  32                 	db	50
   177  000843  70                 	db	112
   178  000844  89                 	db	137
   179  000845  30                 	db	48
   180  000846  E7                 	db	231
   181  000847  DB                 	db	219
   182  000848  2E                 	db	46
   183  000849  E5                 	db	229
   184  00084A  3C                 	db	60
   185  00084B  1E                 	db	30
   186  00084C  42                 	db	66
   187  00084D  A2                 	db	162
   188  00084E  0D                 	db	13
   189  00084F                     __end_of__npowers_:
   190                           	opt stack 0
   191  00084F                     __powers_:
   192                           	opt stack 0
   193  00084F  00                 	db	0
   194  000850  80                 	db	128
   195  000851  3F                 	db	63
   196  000852  00                 	db	0
   197  000853  20                 	db	32
   198  000854  41                 	db	65
   199  000855  00                 	db	0
   200  000856  C8                 	db	200
   201  000857  42                 	db	66
   202  000858  00                 	db	0
   203  000859  7A                 	db	122
   204  00085A  44                 	db	68
   205  00085B  40                 	db	64
   206  00085C  1C                 	db	28
   207  00085D  46                 	db	70
   208  00085E  50                 	db	80
   209  00085F  C3                 	db	195
   210  000860  47                 	db	71
   211  000861  24                 	db	36
   212  000862  74                 	db	116
   213  000863  49                 	db	73
   214  000864  97                 	db	151
   215  000865  18                 	db	24
   216  000866  4B                 	db	75
   217  000867  BC                 	db	188
   218  000868  BE                 	db	190
   219  000869  4C                 	db	76
   220  00086A  6B                 	db	107
   221  00086B  6E                 	db	110
   222  00086C  4E                 	db	78
   223  00086D  03                 	db	3
   224  00086E  15                 	db	21
   225  00086F  50                 	db	80
   226  000870  79                 	db	121
   227  000871  AD                 	db	173
   228  000872  60                 	db	96
   229  000873  F3                 	db	243
   230  000874  49                 	db	73
   231  000875  71                 	db	113
   232  000876                     __end_of__powers_:
   233                           	opt stack 0
   234  0000                     _TMR1	set	4046
   235  0000                     _ADCON0	set	4034
   236  0000                     _ADCON0bits	set	4034
   237  0000                     _ADCON1	set	4033
   238  0000                     _ADCON1bits	set	4033
   239  0000                     _ADCON2	set	4032
   240  0000                     _ADRESH	set	4036
   241  0000                     _ADRESL	set	4035
   242  0000                     _INTCONbits	set	4082
   243  0000                     _LATAbits	set	3977
   244  0000                     _LATB	set	3978
   245  0000                     _PORTAbits	set	3968
   246  0000                     _RCREG	set	4014
   247  0000                     _RCSTA	set	4011
   248  0000                     _SPBRG	set	4015
   249  0000                     _T0CONbits	set	4053
   250  0000                     _T1CONbits	set	4045
   251  0000                     _TMR0H	set	4055
   252  0000                     _TMR0L	set	4054
   253  0000                     _TRISA	set	3986
   254  0000                     _TRISB	set	3987
   255  0000                     _TRISD	set	3989
   256  0000                     _ADIE	set	31982
   257  0000                     _ADIP	set	31998
   258  0000                     _ADON	set	32272
   259  0000                     _GIEH	set	32663
   260  0000                     _GIEL	set	32662
   261  0000                     _GO	set	32273
   262  0000                     _IPEN	set	32391
   263  0000                     _RCIE	set	31981
   264  0000                     _RCIF	set	31989
   265  0000                     _RCIP	set	31997
   266  0000                     _RD2	set	31770
   267  0000                     _RD3	set	31771
   268  0000                     _RD4	set	31772
   269  0000                     _RD5	set	31773
   270  0000                     _RD6	set	31774
   271  0000                     _RD7	set	31775
   272  0000                     _TMR1ON	set	32360
   273  0000                     _TRISA0	set	31888
   274  0000                     _TRISC6	set	31910
   275  0000                     _TRISC7	set	31911
   276  000876                     __stringdata:
   277                           	opt stack 0
   278  000876                     STR_2:
   279  000876  44                 	db	68	;'D'
   280  000877  69                 	db	105	;'i'
   281  000878  73                 	db	115	;'s'
   282  000879  74                 	db	116	;'t'
   283  00087A  61                 	db	97	;'a'
   284  00087B  6E                 	db	110	;'n'
   285  00087C  63                 	db	99	;'c'
   286  00087D  69                 	db	105	;'i'
   287  00087E  61                 	db	97	;'a'
   288  00087F  3A                 	db	58	;':'
   289  000880  20                 	db	32
   290  000881  25                 	db	37
   291  000882  30                 	db	48	;'0'
   292  000883  33                 	db	51	;'3'
   293  000884  64                 	db	100	;'d'
   294  000885  63                 	db	99	;'c'
   295  000886  6D                 	db	109	;'m'
   296  000887  00                 	db	0
   297  000888                     STR_1:
   298  000888  4C                 	db	76	;'L'
   299  000889  44                 	db	68	;'D'
   300  00088A  52                 	db	82	;'R'
   301  00088B  3A                 	db	58	;':'
   302  00088C  20                 	db	32
   303  00088D  25                 	db	37
   304  00088E  2E                 	db	46
   305  00088F  32                 	db	50	;'2'
   306  000890  66                 	db	102	;'f'
   307  000891  00                 	db	0
   308  000892                     __end_of__stringdata:
   309                           	opt stack 0
   310                           
   311                           ; #config settings
   312  000892  00                 	db	0	; dummy byte at the end
   313  0000                     
   314                           	psect	cinit
   315  006074                     __pcinit:
   316                           	opt stack 0
   317  006074                     start_initialization:
   318                           	opt stack 0
   319  006074                     __initialization:
   320                           	opt stack 0
   321                           
   322                           ; Clear objects allocated to BANK1 (38 bytes)
   323  006074  EE01  F081         	lfsr	0,__pbssBANK1
   324  006078  0E26               	movlw	38
   325  00607A                     clear_0:
   326  00607A  6AEE               	clrf	postinc0,c
   327  00607C  06E8               	decf	wreg,f,c
   328  00607E  E1FD               	bnz	clear_0
   329                           
   330                           ; Clear objects allocated to BANK0 (7 bytes)
   331  006080  EE00  F0B2         	lfsr	0,__pbssBANK0
   332  006084  0E07               	movlw	7
   333  006086                     clear_1:
   334  006086  6AEE               	clrf	postinc0,c
   335  006088  06E8               	decf	wreg,f,c
   336  00608A  E1FD               	bnz	clear_1
   337                           
   338                           ; Clear objects allocated to COMRAM (6 bytes)
   339  00608C  6A4F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   340  00608E  6A4E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   341  006090  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   342  006092  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   343  006094  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   344  006096  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   345                           
   346                           ; Initialize objects allocated to BANK1 (4 bytes)
   347                           ; load TBLPTR registers with __pidataBANK1
   348  006098  0E8C               	movlw	low __pidataBANK1
   349  00609A  6EF6               	movwf	tblptrl,c
   350  00609C  0E67               	movlw	high __pidataBANK1
   351  00609E  6EF7               	movwf	tblptrh,c
   352  0060A0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   353  0060A2  6EF8               	movwf	tblptru,c
   354  0060A4  EE01  F0A7         	lfsr	0,__pdataBANK1
   355  0060A8  EE10 F004          	lfsr	1,4
   356  0060AC                     copy_data0:
   357  0060AC  0009               	tblrd		*+
   358  0060AE  CFF5 FFEE          	movff	tablat,postinc0
   359  0060B2  50E5               	movf	postdec1,w,c
   360  0060B4  50E1               	movf	fsr1l,w,c
   361  0060B6  E1FA               	bnz	copy_data0
   362  0060B8                     end_of_initialization:
   363                           	opt stack 0
   364  0060B8                     __end_of__initialization:
   365                           	opt stack 0
   366  0060B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   367  0060BA  6EF8               	movwf	tblptru,c
   368  0060BC  0100               	movlb	0
   369  0060BE  EF2B  F033         	goto	_main	;jump to C main() function
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           postdec1	equ	0xFE5
   377                           fsr1l	equ	0xFE1
   378                           
   379                           	psect	bssCOMRAM
   380  00004A                     __pbssCOMRAM:
   381                           	opt stack 0
   382  00004A                     _buttonClicked:
   383                           	opt stack 0
   384  00004A                     	ds	2
   385  00004C                     _controlOn:
   386                           	opt stack 0
   387  00004C                     	ds	2
   388  00004E                     _numBase:
   389                           	opt stack 0
   390  00004E                     	ds	2
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec1	equ	0xFE5
   398                           fsr1l	equ	0xFE1
   399                           
   400                           	psect	bssBANK0
   401  0000B2                     __pbssBANK0:
   402                           	opt stack 0
   403  0000B2                     _LDR_value:
   404                           	opt stack 0
   405  0000B2                     	ds	3
   406  0000B5                     _Distancia:
   407                           	opt stack 0
   408  0000B5                     	ds	2
   409  0000B7                     _theresMovement:
   410                           	opt stack 0
   411  0000B7                     	ds	2
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           postdec1	equ	0xFE5
   419                           fsr1l	equ	0xFE1
   420                           
   421                           	psect	bssBANK1
   422  000181                     __pbssBANK1:
   423                           	opt stack 0
   424  000181                     _baseT1:
   425                           	opt stack 0
   426  000181                     	ds	2
   427  000183                     _baseT2:
   428                           	opt stack 0
   429  000183                     	ds	2
   430  000185                     _isBright:
   431                           	opt stack 0
   432  000185                     	ds	2
   433  000187                     _LCD_Buffer:
   434                           	opt stack 0
   435  000187                     	ds	32
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           postdec1	equ	0xFE5
   443                           fsr1l	equ	0xFE1
   444                           
   445                           	psect	dataBANK1
   446  0001A7                     __pdataBANK1:
   447                           	opt stack 0
   448  0001A7                     _cycles:
   449                           	opt stack 0
   450  0001A7                     	ds	4
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           postdec1	equ	0xFE5
   458                           fsr1l	equ	0xFE1
   459                           
   460                           	psect	cstackBANK1
   461  000100                     __pcstackBANK1:
   462                           	opt stack 0
   463  000100                     ?_check_movement:
   464                           	opt stack 0
   465  000100                     ?_isdigit:
   466                           	opt stack 0
   467  000100                     ?_Lcd_Port:
   468                           	opt stack 0
   469  000100                     ?___ftge:
   470                           	opt stack 0
   471  000100                     ?___awmod:
   472                           	opt stack 0
   473  000100                     ?___lwdiv:
   474                           	opt stack 0
   475  000100                     ?___lwmod:
   476                           	opt stack 0
   477  000100                     ?___ftpack:
   478                           	opt stack 0
   479  000100                     ?___ftneg:
   480                           	opt stack 0
   481  000100                     ?__tdiv_to_l_:
   482                           	opt stack 0
   483  000100                     ?__div_to_l_:
   484                           	opt stack 0
   485  000100                     ?___lldiv:
   486                           	opt stack 0
   487  000100                     Lcd_Port@a:
   488                           	opt stack 0
   489  000100                     isdigit@c:
   490                           	opt stack 0
   491  000100                     ___awmod@dividend:
   492                           	opt stack 0
   493  000100                     ___lwdiv@dividend:
   494                           	opt stack 0
   495  000100                     ___lwmod@dividend:
   496                           	opt stack 0
   497  000100                     __div_to_l_@f1:
   498                           	opt stack 0
   499  000100                     ___ftpack@arg:
   500                           	opt stack 0
   501  000100                     __tdiv_to_l_@f1:
   502                           	opt stack 0
   503  000100                     ___ftge@ff1:
   504                           	opt stack 0
   505  000100                     ___ftneg@f1:
   506                           	opt stack 0
   507  000100                     ___lldiv@dividend:
   508                           	opt stack 0
   509                           
   510                           ; 4 bytes @ 0x0
   511  000100                     	ds	1
   512  000101                     ??_isdigit:
   513  000101                     ?_Lcd_Cmd:
   514                           	opt stack 0
   515  000101                     ?_lcd_write_char:
   516                           	opt stack 0
   517  000101                     Lcd_Cmd@a:
   518                           	opt stack 0
   519  000101                     lcd_write_char@a:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x1
   523  000101                     	ds	1
   524  000102                     ??_Lcd_Cmd:
   525  000102                     lcd_write_char@temp:
   526                           	opt stack 0
   527  000102                     _isdigit$998:
   528                           	opt stack 0
   529  000102                     ___awmod@divisor:
   530                           	opt stack 0
   531  000102                     ___lwdiv@divisor:
   532                           	opt stack 0
   533  000102                     ___lwmod@divisor:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x2
   537  000102                     	ds	1
   538  000103                     ?_lcd_gotoxy:
   539                           	opt stack 0
   540  000103                     ??_lcd_init:
   541  000103                     lcd_gotoxy@a:
   542                           	opt stack 0
   543  000103                     lcd_write_char@y:
   544                           	opt stack 0
   545  000103                     ___ftpack@exp:
   546                           	opt stack 0
   547  000103                     __div_to_l_@f2:
   548                           	opt stack 0
   549  000103                     __tdiv_to_l_@f2:
   550                           	opt stack 0
   551  000103                     ___ftge@ff2:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x3
   555  000103                     	ds	1
   556  000104                     ?_lcd_putc:
   557                           	opt stack 0
   558  000104                     ??___awmod:
   559  000104                     ??___lwdiv:
   560  000104                     ??___lwmod:
   561  000104                     lcd_gotoxy@b:
   562                           	opt stack 0
   563  000104                     ___ftpack@sign:
   564                           	opt stack 0
   565  000104                     lcd_putc@a:
   566                           	opt stack 0
   567  000104                     ___lldiv@divisor:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0x4
   571  000104                     	ds	1
   572  000105                     ??___ftpack:
   573  000105                     lcd_gotoxy@z:
   574                           	opt stack 0
   575  000105                     ___awmod@counter:
   576                           	opt stack 0
   577  000105                     ___lwdiv@counter:
   578                           	opt stack 0
   579  000105                     ___lwmod@counter:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x5
   583  000105                     	ds	1
   584  000106                     ??__tdiv_to_l_:
   585  000106                     ??__div_to_l_:
   586  000106                     ??___ftge:
   587  000106                     lcd_gotoxy@y:
   588                           	opt stack 0
   589  000106                     ___awmod@sign:
   590                           	opt stack 0
   591  000106                     lcd_putc@i:
   592                           	opt stack 0
   593  000106                     ___lwdiv@quotient:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x6
   597  000106                     	ds	1
   598  000107                     ?___awdiv:
   599                           	opt stack 0
   600  000107                     lcd_gotoxy@temp:
   601                           	opt stack 0
   602  000107                     ___awdiv@dividend:
   603                           	opt stack 0
   604  000107                     __div_to_l_@quot:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0x7
   608  000107                     	ds	1
   609  000108                     ??___lldiv:
   610  000108                     ?_Obtener_Distancia:
   611                           	opt stack 0
   612  000108                     ?___altoft:
   613                           	opt stack 0
   614  000108                     ?___awtoft:
   615                           	opt stack 0
   616  000108                     ?___lltoft:
   617                           	opt stack 0
   618  000108                     ___awtoft@c:
   619                           	opt stack 0
   620  000108                     ___altoft@c:
   621                           	opt stack 0
   622  000108                     ___lltoft@c:
   623                           	opt stack 0
   624                           
   625                           ; 4 bytes @ 0x8
   626  000108                     	ds	1
   627  000109                     ?_check_light:
   628                           	opt stack 0
   629  000109                     ___awdiv@divisor:
   630                           	opt stack 0
   631  000109                     ___lldiv@quotient:
   632                           	opt stack 0
   633                           
   634                           ; 4 bytes @ 0x9
   635  000109                     	ds	1
   636  00010A                     Obtener_Distancia@Timer_1:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0xA
   640  00010A                     	ds	1
   641  00010B                     ??___awdiv:
   642  00010B                     ??___awtoft:
   643  00010B                     __div_to_l_@cntr:
   644                           	opt stack 0
   645  00010B                     __tdiv_to_l_@quot:
   646                           	opt stack 0
   647                           
   648                           ; 4 bytes @ 0xB
   649  00010B                     	ds	1
   650  00010C                     ??___altoft:
   651  00010C                     ??___lltoft:
   652  00010C                     ___awdiv@counter:
   653                           	opt stack 0
   654  00010C                     ___awtoft@sign:
   655                           	opt stack 0
   656  00010C                     __div_to_l_@exp1:
   657                           	opt stack 0
   658  00010C                     Obtener_Distancia@Distancia:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0xC
   662  00010C                     	ds	1
   663  00010D                     ___awdiv@sign:
   664                           	opt stack 0
   665  00010D                     ___lldiv@counter:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0xD
   669  00010D                     	ds	1
   670  00010E                     ?___llmod:
   671                           	opt stack 0
   672  00010E                     Obtener_Distancia@Duracion:
   673                           	opt stack 0
   674  00010E                     ___awdiv@quotient:
   675                           	opt stack 0
   676  00010E                     ___llmod@dividend:
   677                           	opt stack 0
   678                           
   679                           ; 4 bytes @ 0xE
   680  00010E                     	ds	1
   681  00010F                     __tdiv_to_l_@cntr:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0xF
   685  00010F                     	ds	1
   686  000110                     ?___wmul:
   687                           	opt stack 0
   688  000110                     ___altoft@exp:
   689                           	opt stack 0
   690  000110                     __tdiv_to_l_@exp1:
   691                           	opt stack 0
   692  000110                     ___lltoft@exp:
   693                           	opt stack 0
   694  000110                     ___wmul@multiplier:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x10
   698  000110                     	ds	1
   699  000111                     ___altoft@sign:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x11
   703  000111                     	ds	1
   704  000112                     ___wmul@multiplicand:
   705                           	opt stack 0
   706  000112                     ___llmod@divisor:
   707                           	opt stack 0
   708                           
   709                           ; 4 bytes @ 0x12
   710  000112                     	ds	2
   711  000114                     ___wmul@product:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x14
   715  000114                     	ds	2
   716  000116                     ??___llmod:
   717  000116                     ?___ftmul:
   718                           	opt stack 0
   719  000116                     ___ftmul@f1:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x16
   723  000116                     	ds	1
   724  000117                     ___llmod@counter:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x17
   728  000117                     	ds	2
   729  000119                     ___ftmul@f2:
   730                           	opt stack 0
   731                           
   732                           ; 3 bytes @ 0x19
   733  000119                     	ds	3
   734  00011C                     ??___ftmul:
   735                           
   736                           ; 0 bytes @ 0x1C
   737  00011C                     	ds	5
   738  000121                     ___ftmul@exp:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x21
   742  000121                     	ds	1
   743  000122                     ___ftmul@f3_as_product:
   744                           	opt stack 0
   745                           
   746                           ; 3 bytes @ 0x22
   747  000122                     	ds	3
   748  000125                     ___ftmul@cntr:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x25
   752  000125                     	ds	1
   753  000126                     ___ftmul@sign:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x26
   757  000126                     	ds	1
   758  000127                     ?___ftdiv:
   759                           	opt stack 0
   760  000127                     ?_fround:
   761                           	opt stack 0
   762  000127                     ?_scale:
   763                           	opt stack 0
   764  000127                     ?___asftmul:
   765                           	opt stack 0
   766  000127                     fround@prec:
   767                           	opt stack 0
   768  000127                     scale@scl:
   769                           	opt stack 0
   770  000127                     ___asftmul@f1p:
   771                           	opt stack 0
   772  000127                     ___ftdiv@f1:
   773                           	opt stack 0
   774                           
   775                           ; 3 bytes @ 0x27
   776  000127                     	ds	2
   777  000129                     ___asftmul@f2:
   778                           	opt stack 0
   779                           
   780                           ; 3 bytes @ 0x29
   781  000129                     	ds	1
   782  00012A                     ??_fround:
   783  00012A                     ??_scale:
   784  00012A                     ___ftdiv@f2:
   785                           	opt stack 0
   786                           
   787                           ; 3 bytes @ 0x2A
   788  00012A                     	ds	2
   789  00012C                     
   790                           ; 0 bytes @ 0x2C
   791  00012C                     	ds	1
   792  00012D                     ??___ftdiv:
   793                           
   794                           ; 0 bytes @ 0x2D
   795  00012D                     	ds	3
   796  000130                     _fround$1354:
   797                           	opt stack 0
   798  000130                     _scale$1355:
   799                           	opt stack 0
   800                           
   801                           ; 3 bytes @ 0x30
   802  000130                     	ds	2
   803  000132                     ___ftdiv@cntr:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x32
   807  000132                     	ds	1
   808  000133                     ?___fttol:
   809                           	opt stack 0
   810  000133                     ___ftdiv@f3:
   811                           	opt stack 0
   812  000133                     ___fttol@f1:
   813                           	opt stack 0
   814  000133                     _fround$1353:
   815                           	opt stack 0
   816                           
   817                           ; 3 bytes @ 0x33
   818  000133                     	ds	3
   819  000136                     ___ftdiv@exp:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x36
   823  000136                     	ds	1
   824  000137                     ??___fttol:
   825  000137                     ___ftdiv@sign:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x37
   829  000137                     	ds	1
   830  000138                     ?_Read_LDR:
   831                           	opt stack 0
   832  000138                     ?___ftadd:
   833                           	opt stack 0
   834  000138                     ___ftadd@f1:
   835                           	opt stack 0
   836                           
   837                           ; 3 bytes @ 0x38
   838  000138                     	ds	3
   839  00013B                     ??_Read_LDR:
   840  00013B                     ___ftadd@f2:
   841                           	opt stack 0
   842                           
   843                           ; 3 bytes @ 0x3B
   844  00013B                     	ds	1
   845  00013C                     ___fttol@sign1:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x3C
   849  00013C                     	ds	1
   850  00013D                     ___fttol@lval:
   851                           	opt stack 0
   852                           
   853                           ; 4 bytes @ 0x3D
   854  00013D                     	ds	1
   855  00013E                     ??___ftadd:
   856                           
   857                           ; 0 bytes @ 0x3E
   858  00013E                     	ds	1
   859  00013F                     Read_LDR@analog_reading:
   860                           	opt stack 0
   861                           
   862                           ; 3 bytes @ 0x3F
   863  00013F                     	ds	2
   864  000141                     ___fttol@exp1:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x41
   868  000141                     	ds	2
   869  000143                     ___ftadd@sign:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x43
   873  000143                     	ds	1
   874  000144                     ___ftadd@exp2:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x44
   878  000144                     	ds	1
   879  000145                     ___ftadd@exp1:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x45
   883  000145                     	ds	1
   884  000146                     ?___ftsub:
   885                           	opt stack 0
   886  000146                     ?___asftadd:
   887                           	opt stack 0
   888  000146                     ___asftadd@f1p:
   889                           	opt stack 0
   890  000146                     ___ftsub@f1:
   891                           	opt stack 0
   892  000146                     USART_Init@baud_rate:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x46
   896  000146                     	ds	2
   897  000148                     ___asftadd@f2:
   898                           	opt stack 0
   899                           
   900                           ; 3 bytes @ 0x48
   901  000148                     	ds	1
   902  000149                     ___ftsub@f2:
   903                           	opt stack 0
   904                           
   905                           ; 3 bytes @ 0x49
   906  000149                     	ds	1
   907  00014A                     USART_Init@temp:
   908                           	opt stack 0
   909                           
   910                           ; 3 bytes @ 0x4A
   911  00014A                     	ds	1
   912  00014B                     
   913                           ; 0 bytes @ 0x4B
   914  00014B                     	ds	1
   915  00014C                     ?___asftsub:
   916                           	opt stack 0
   917  00014C                     ___asftsub@f1p:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x4C
   921  00014C                     	ds	2
   922  00014E                     ___asftsub@f2:
   923                           	opt stack 0
   924                           
   925                           ; 3 bytes @ 0x4E
   926  00014E                     	ds	3
   927  000151                     ?_sprintf:
   928                           	opt stack 0
   929  000151                     sprintf@sp:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x51
   933  000151                     	ds	2
   934  000153                     sprintf@f:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0x53
   938  000153                     	ds	5
   939  000158                     ??_sprintf:
   940                           
   941                           ; 0 bytes @ 0x58
   942  000158                     	ds	6
   943  00015E                     _sprintf$1356:
   944                           	opt stack 0
   945                           
   946                           ; 3 bytes @ 0x5E
   947  00015E                     	ds	3
   948  000161                     _sprintf$723:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x61
   952  000161                     	ds	4
   953  000165                     sprintf@vd:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x65
   957  000165                     	ds	2
   958  000167                     sprintf@vd_725:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x67
   962  000167                     	ds	2
   963  000169                     sprintf@ap:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x69
   967  000169                     	ds	2
   968  00016B                     sprintf@integ:
   969                           	opt stack 0
   970                           
   971                           ; 3 bytes @ 0x6B
   972  00016B                     	ds	3
   973  00016E                     sprintf@_val:
   974                           	opt stack 0
   975                           
   976                           ; 5 bytes @ 0x6E
   977  00016E                     	ds	5
   978  000173                     sprintf@flag:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x73
   982  000173                     	ds	2
   983  000175                     sprintf@exp:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x75
   987  000175                     	ds	2
   988  000177                     sprintf@width:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x77
   992  000177                     	ds	2
   993  000179                     sprintf@fval:
   994                           	opt stack 0
   995                           
   996                           ; 3 bytes @ 0x79
   997  000179                     	ds	3
   998  00017C                     sprintf@prec:
   999                           	opt stack 0
  1000                           
  1001                           ; 2 bytes @ 0x7C
  1002  00017C                     	ds	2
  1003  00017E                     sprintf@c:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0x7E
  1007  00017E                     	ds	1
  1008  00017F                     ??_Time_Bases:
  1009                           
  1010                           ; 0 bytes @ 0x7F
  1011  00017F                     	ds	2
  1012  000181                     tblptru	equ	0xFF8
  1013                           tblptrh	equ	0xFF7
  1014                           tblptrl	equ	0xFF6
  1015                           tablat	equ	0xFF5
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           postdec1	equ	0xFE5
  1019                           fsr1l	equ	0xFE1
  1020                           
  1021                           ; 0 bytes @ 0x81
  1022                           
  1023                           	psect	cstackBANK0
  1024  000060                     __pcstackBANK0:
  1025                           	opt stack 0
  1026  000060                     ??i1_fround:
  1027  000060                     ??i1_scale:
  1028  000060                     ?i1___asftmul:
  1029                           	opt stack 0
  1030  000060                     ?i1___ftdiv:
  1031                           	opt stack 0
  1032  000060                     i1___asftmul@f1p:
  1033                           	opt stack 0
  1034  000060                     i1___ftdiv@f1:
  1035                           	opt stack 0
  1036                           
  1037                           ; 3 bytes @ 0x0
  1038  000060                     	ds	2
  1039  000062                     i1___asftmul@f2:
  1040                           	opt stack 0
  1041                           
  1042                           ; 3 bytes @ 0x2
  1043  000062                     	ds	1
  1044  000063                     i1___ftdiv@f2:
  1045                           	opt stack 0
  1046                           
  1047                           ; 3 bytes @ 0x3
  1048  000063                     	ds	3
  1049  000066                     ??i1___ftdiv:
  1050  000066                     i1_fround$2020:
  1051                           	opt stack 0
  1052  000066                     i1_scale$2021:
  1053                           	opt stack 0
  1054                           
  1055                           ; 3 bytes @ 0x6
  1056  000066                     	ds	3
  1057  000069                     i1_fround$2019:
  1058                           	opt stack 0
  1059                           
  1060                           ; 3 bytes @ 0x9
  1061  000069                     	ds	2
  1062  00006B                     i1___ftdiv@cntr:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0xB
  1066  00006B                     	ds	1
  1067  00006C                     ?i1___asftadd:
  1068                           	opt stack 0
  1069  00006C                     i1___ftdiv@exp:
  1070                           	opt stack 0
  1071  00006C                     i1___asftadd@f1p:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0xC
  1075  00006C                     	ds	1
  1076  00006D                     i1___ftdiv@f3:
  1077                           	opt stack 0
  1078                           
  1079                           ; 3 bytes @ 0xD
  1080  00006D                     	ds	1
  1081  00006E                     i1___asftadd@f2:
  1082                           	opt stack 0
  1083                           
  1084                           ; 3 bytes @ 0xE
  1085  00006E                     	ds	2
  1086  000070                     i1___ftdiv@sign:
  1087                           	opt stack 0
  1088                           
  1089                           ; 1 bytes @ 0x10
  1090  000070                     	ds	1
  1091  000071                     ??i1_Read_LDR:
  1092  000071                     ?i1_sprintf:
  1093                           	opt stack 0
  1094  000071                     i1sprintf@sp:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x11
  1098  000071                     	ds	2
  1099  000073                     i1sprintf@f:
  1100                           	opt stack 0
  1101                           
  1102                           ; 2 bytes @ 0x13
  1103  000073                     	ds	2
  1104  000075                     i1Read_LDR@analog_reading:
  1105                           	opt stack 0
  1106                           
  1107                           ; 3 bytes @ 0x15
  1108  000075                     	ds	3
  1109  000078                     ??i1_sprintf:
  1110                           
  1111                           ; 0 bytes @ 0x18
  1112  000078                     	ds	6
  1113  00007E                     i1_sprintf$2022:
  1114                           	opt stack 0
  1115                           
  1116                           ; 3 bytes @ 0x1E
  1117  00007E                     	ds	3
  1118  000081                     i1_sprintf$723:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x21
  1122  000081                     	ds	4
  1123  000085                     i1sprintf@vd:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0x25
  1127  000085                     	ds	2
  1128  000087                     i1sprintf@vd_725:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0x27
  1132  000087                     	ds	2
  1133  000089                     i1sprintf@ap:
  1134                           	opt stack 0
  1135                           
  1136                           ; 2 bytes @ 0x29
  1137  000089                     	ds	2
  1138  00008B                     i1sprintf@integ:
  1139                           	opt stack 0
  1140                           
  1141                           ; 3 bytes @ 0x2B
  1142  00008B                     	ds	3
  1143  00008E                     i1sprintf@_val:
  1144                           	opt stack 0
  1145                           
  1146                           ; 5 bytes @ 0x2E
  1147  00008E                     	ds	5
  1148  000093                     i1sprintf@flag:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x33
  1152  000093                     	ds	2
  1153  000095                     i1sprintf@exp:
  1154                           	opt stack 0
  1155                           
  1156                           ; 2 bytes @ 0x35
  1157  000095                     	ds	2
  1158  000097                     i1sprintf@width:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x37
  1162  000097                     	ds	2
  1163  000099                     i1sprintf@fval:
  1164                           	opt stack 0
  1165                           
  1166                           ; 3 bytes @ 0x39
  1167  000099                     	ds	3
  1168  00009C                     i1sprintf@prec:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x3C
  1172  00009C                     	ds	2
  1173  00009E                     i1sprintf@c:
  1174                           	opt stack 0
  1175                           
  1176                           ; 1 bytes @ 0x3E
  1177  00009E                     	ds	1
  1178  00009F                     ??i1_Time_Bases:
  1179                           
  1180                           ; 0 bytes @ 0x3F
  1181  00009F                     	ds	2
  1182  0000A1                     ??_interrupcaoLOW:
  1183                           
  1184                           ; 0 bytes @ 0x41
  1185  0000A1                     	ds	17
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           postdec1	equ	0xFE5
  1193                           fsr1l	equ	0xFE1
  1194                           
  1195                           	psect	cstackCOMRAM
  1196  000001                     __pcstackCOMRAM:
  1197                           	opt stack 0
  1198  000001                     ?_control_LED:
  1199                           	opt stack 0
  1200  000001                     control_LED@data:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x0
  1204  000001                     	ds	1
  1205  000002                     ??_interrupcaoHIGH:
  1206                           
  1207                           ; 0 bytes @ 0x1
  1208  000002                     	ds	14
  1209  000010                     interrupcaoHIGH@esp_server_data:
  1210                           	opt stack 0
  1211                           
  1212                           ; 1 bytes @ 0xF
  1213  000010                     	ds	1
  1214  000011                     ?i1_Lcd_Port:
  1215                           	opt stack 0
  1216  000011                     ?i1_check_movement:
  1217                           	opt stack 0
  1218  000011                     ?i1___ftge:
  1219                           	opt stack 0
  1220  000011                     ?i1_isdigit:
  1221                           	opt stack 0
  1222  000011                     ?i1___awmod:
  1223                           	opt stack 0
  1224  000011                     ?i1___lwdiv:
  1225                           	opt stack 0
  1226  000011                     ?i1___lwmod:
  1227                           	opt stack 0
  1228  000011                     ?i1___ftpack:
  1229                           	opt stack 0
  1230  000011                     ?i1___ftneg:
  1231                           	opt stack 0
  1232  000011                     ?i1__div_to_l_:
  1233                           	opt stack 0
  1234  000011                     ?i1__tdiv_to_l_:
  1235                           	opt stack 0
  1236  000011                     ?i1___lldiv:
  1237                           	opt stack 0
  1238  000011                     i1Lcd_Port@a:
  1239                           	opt stack 0
  1240  000011                     i1isdigit@c:
  1241                           	opt stack 0
  1242  000011                     i1___awmod@dividend:
  1243                           	opt stack 0
  1244  000011                     i1___lwdiv@dividend:
  1245                           	opt stack 0
  1246  000011                     i1___lwmod@dividend:
  1247                           	opt stack 0
  1248  000011                     i1__div_to_l_@f1:
  1249                           	opt stack 0
  1250  000011                     i1___ftpack@arg:
  1251                           	opt stack 0
  1252  000011                     i1__tdiv_to_l_@f1:
  1253                           	opt stack 0
  1254  000011                     i1___ftge@ff1:
  1255                           	opt stack 0
  1256  000011                     i1___ftneg@f1:
  1257                           	opt stack 0
  1258  000011                     i1___lldiv@dividend:
  1259                           	opt stack 0
  1260                           
  1261                           ; 4 bytes @ 0x10
  1262  000011                     	ds	1
  1263  000012                     ?i1_Lcd_Cmd:
  1264                           	opt stack 0
  1265  000012                     ?i1_lcd_write_char:
  1266                           	opt stack 0
  1267  000012                     ??i1_isdigit:
  1268  000012                     i1Lcd_Cmd@a:
  1269                           	opt stack 0
  1270  000012                     i1lcd_write_char@a:
  1271                           	opt stack 0
  1272                           
  1273                           ; 1 bytes @ 0x11
  1274  000012                     	ds	1
  1275  000013                     ??i1_Lcd_Cmd:
  1276  000013                     i1lcd_write_char@temp:
  1277                           	opt stack 0
  1278  000013                     i1_isdigit$998:
  1279                           	opt stack 0
  1280  000013                     i1___awmod@divisor:
  1281                           	opt stack 0
  1282  000013                     i1___lwdiv@divisor:
  1283                           	opt stack 0
  1284  000013                     i1___lwmod@divisor:
  1285                           	opt stack 0
  1286                           
  1287                           ; 2 bytes @ 0x12
  1288  000013                     	ds	1
  1289  000014                     ?i1_lcd_gotoxy:
  1290                           	opt stack 0
  1291  000014                     i1lcd_gotoxy@a:
  1292                           	opt stack 0
  1293  000014                     i1lcd_write_char@y:
  1294                           	opt stack 0
  1295  000014                     i1___ftpack@exp:
  1296                           	opt stack 0
  1297  000014                     i1__div_to_l_@f2:
  1298                           	opt stack 0
  1299  000014                     i1__tdiv_to_l_@f2:
  1300                           	opt stack 0
  1301  000014                     i1___ftge@ff2:
  1302                           	opt stack 0
  1303                           
  1304                           ; 3 bytes @ 0x13
  1305  000014                     	ds	1
  1306  000015                     ?i1_lcd_putc:
  1307                           	opt stack 0
  1308  000015                     ??i1___awmod:
  1309  000015                     ??i1___lwdiv:
  1310  000015                     ??i1___lwmod:
  1311  000015                     i1lcd_gotoxy@b:
  1312                           	opt stack 0
  1313  000015                     i1___ftpack@sign:
  1314                           	opt stack 0
  1315  000015                     i1lcd_putc@a:
  1316                           	opt stack 0
  1317  000015                     i1___lldiv@divisor:
  1318                           	opt stack 0
  1319                           
  1320                           ; 4 bytes @ 0x14
  1321  000015                     	ds	1
  1322  000016                     ??i1___ftpack:
  1323  000016                     i1lcd_gotoxy@z:
  1324                           	opt stack 0
  1325  000016                     i1___awmod@counter:
  1326                           	opt stack 0
  1327  000016                     i1___lwdiv@counter:
  1328                           	opt stack 0
  1329  000016                     i1___lwmod@counter:
  1330                           	opt stack 0
  1331                           
  1332                           ; 1 bytes @ 0x15
  1333  000016                     	ds	1
  1334  000017                     ??i1__div_to_l_:
  1335  000017                     ??i1__tdiv_to_l_:
  1336  000017                     ??i1___ftge:
  1337  000017                     i1lcd_gotoxy@y:
  1338                           	opt stack 0
  1339  000017                     i1___awmod@sign:
  1340                           	opt stack 0
  1341  000017                     i1lcd_putc@i:
  1342                           	opt stack 0
  1343  000017                     i1___lwdiv@quotient:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0x16
  1347  000017                     	ds	1
  1348  000018                     ?i1___awdiv:
  1349                           	opt stack 0
  1350  000018                     i1lcd_gotoxy@temp:
  1351                           	opt stack 0
  1352  000018                     i1___awdiv@dividend:
  1353                           	opt stack 0
  1354  000018                     i1__div_to_l_@quot:
  1355                           	opt stack 0
  1356                           
  1357                           ; 4 bytes @ 0x17
  1358  000018                     	ds	1
  1359  000019                     ??i1___lldiv:
  1360  000019                     ?i1_Obtener_Distancia:
  1361                           	opt stack 0
  1362  000019                     ?i1___awtoft:
  1363                           	opt stack 0
  1364  000019                     ?i1___ftadd:
  1365                           	opt stack 0
  1366  000019                     ?i1___lltoft:
  1367                           	opt stack 0
  1368  000019                     i1___awtoft@c:
  1369                           	opt stack 0
  1370  000019                     i1___ftadd@f1:
  1371                           	opt stack 0
  1372  000019                     i1___lltoft@c:
  1373                           	opt stack 0
  1374                           
  1375                           ; 4 bytes @ 0x18
  1376  000019                     	ds	1
  1377  00001A                     ?i1_check_light:
  1378                           	opt stack 0
  1379  00001A                     i1___awdiv@divisor:
  1380                           	opt stack 0
  1381  00001A                     i1___lldiv@quotient:
  1382                           	opt stack 0
  1383                           
  1384                           ; 4 bytes @ 0x19
  1385  00001A                     	ds	1
  1386  00001B                     i1Obtener_Distancia@Timer_1:
  1387                           	opt stack 0
  1388                           
  1389                           ; 2 bytes @ 0x1A
  1390  00001B                     	ds	1
  1391  00001C                     ??i1___awdiv:
  1392  00001C                     ??i1___awtoft:
  1393  00001C                     i1__div_to_l_@cntr:
  1394                           	opt stack 0
  1395  00001C                     i1___ftadd@f2:
  1396                           	opt stack 0
  1397  00001C                     i1__tdiv_to_l_@quot:
  1398                           	opt stack 0
  1399                           
  1400                           ; 4 bytes @ 0x1B
  1401  00001C                     	ds	1
  1402  00001D                     ??i1___lltoft:
  1403  00001D                     i1___awdiv@counter:
  1404                           	opt stack 0
  1405  00001D                     i1___awtoft@sign:
  1406                           	opt stack 0
  1407  00001D                     i1__div_to_l_@exp1:
  1408                           	opt stack 0
  1409  00001D                     i1Obtener_Distancia@Distancia:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0x1C
  1413  00001D                     	ds	1
  1414  00001E                     i1___awdiv@sign:
  1415                           	opt stack 0
  1416  00001E                     i1___lldiv@counter:
  1417                           	opt stack 0
  1418                           
  1419                           ; 1 bytes @ 0x1D
  1420  00001E                     	ds	1
  1421  00001F                     ??i1___ftadd:
  1422  00001F                     ?i1___llmod:
  1423                           	opt stack 0
  1424  00001F                     i1Obtener_Distancia@Duracion:
  1425                           	opt stack 0
  1426  00001F                     i1___awdiv@quotient:
  1427                           	opt stack 0
  1428  00001F                     i1___llmod@dividend:
  1429                           	opt stack 0
  1430                           
  1431                           ; 4 bytes @ 0x1E
  1432  00001F                     	ds	1
  1433  000020                     i1__tdiv_to_l_@cntr:
  1434                           	opt stack 0
  1435                           
  1436                           ; 1 bytes @ 0x1F
  1437  000020                     	ds	1
  1438  000021                     ?i1___wmul:
  1439                           	opt stack 0
  1440  000021                     i1__tdiv_to_l_@exp1:
  1441                           	opt stack 0
  1442  000021                     i1___lltoft@exp:
  1443                           	opt stack 0
  1444  000021                     i1___wmul@multiplier:
  1445                           	opt stack 0
  1446                           
  1447                           ; 2 bytes @ 0x20
  1448  000021                     	ds	2
  1449  000023                     i1___wmul@multiplicand:
  1450                           	opt stack 0
  1451  000023                     i1___llmod@divisor:
  1452                           	opt stack 0
  1453                           
  1454                           ; 4 bytes @ 0x22
  1455  000023                     	ds	1
  1456  000024                     i1___ftadd@sign:
  1457                           	opt stack 0
  1458                           
  1459                           ; 1 bytes @ 0x23
  1460  000024                     	ds	1
  1461  000025                     i1___ftadd@exp2:
  1462                           	opt stack 0
  1463  000025                     i1___wmul@product:
  1464                           	opt stack 0
  1465                           
  1466                           ; 2 bytes @ 0x24
  1467  000025                     	ds	1
  1468  000026                     i1___ftadd@exp1:
  1469                           	opt stack 0
  1470                           
  1471                           ; 1 bytes @ 0x25
  1472  000026                     	ds	1
  1473  000027                     ??i1___llmod:
  1474  000027                     ?i1___ftsub:
  1475                           	opt stack 0
  1476  000027                     ?i1___fttol:
  1477                           	opt stack 0
  1478  000027                     i1___ftsub@f1:
  1479                           	opt stack 0
  1480  000027                     i1___fttol@f1:
  1481                           	opt stack 0
  1482                           
  1483                           ; 3 bytes @ 0x26
  1484  000027                     	ds	1
  1485  000028                     i1___llmod@counter:
  1486                           	opt stack 0
  1487                           
  1488                           ; 1 bytes @ 0x27
  1489  000028                     	ds	2
  1490  00002A                     i1___ftsub@f2:
  1491                           	opt stack 0
  1492                           
  1493                           ; 3 bytes @ 0x29
  1494  00002A                     	ds	1
  1495  00002B                     ??i1___fttol:
  1496                           
  1497                           ; 0 bytes @ 0x2A
  1498  00002B                     	ds	2
  1499  00002D                     ?i1___asftsub:
  1500                           	opt stack 0
  1501  00002D                     i1___asftsub@f1p:
  1502                           	opt stack 0
  1503                           
  1504                           ; 2 bytes @ 0x2C
  1505  00002D                     	ds	2
  1506  00002F                     i1___asftsub@f2:
  1507                           	opt stack 0
  1508                           
  1509                           ; 3 bytes @ 0x2E
  1510  00002F                     	ds	1
  1511  000030                     i1___fttol@sign1:
  1512                           	opt stack 0
  1513                           
  1514                           ; 1 bytes @ 0x2F
  1515  000030                     	ds	1
  1516  000031                     i1___fttol@lval:
  1517                           	opt stack 0
  1518                           
  1519                           ; 4 bytes @ 0x30
  1520  000031                     	ds	1
  1521  000032                     
  1522                           ; 0 bytes @ 0x31
  1523  000032                     	ds	3
  1524  000035                     i1___fttol@exp1:
  1525                           	opt stack 0
  1526                           
  1527                           ; 1 bytes @ 0x34
  1528  000035                     	ds	1
  1529  000036                     ?i1___ftmul:
  1530                           	opt stack 0
  1531  000036                     i1___ftmul@f1:
  1532                           	opt stack 0
  1533                           
  1534                           ; 3 bytes @ 0x35
  1535  000036                     	ds	3
  1536  000039                     i1___ftmul@f2:
  1537                           	opt stack 0
  1538                           
  1539                           ; 3 bytes @ 0x38
  1540  000039                     	ds	3
  1541  00003C                     ??i1___ftmul:
  1542                           
  1543                           ; 0 bytes @ 0x3B
  1544  00003C                     	ds	5
  1545  000041                     i1___ftmul@exp:
  1546                           	opt stack 0
  1547                           
  1548                           ; 1 bytes @ 0x40
  1549  000041                     	ds	1
  1550  000042                     i1___ftmul@f3_as_product:
  1551                           	opt stack 0
  1552                           
  1553                           ; 3 bytes @ 0x41
  1554  000042                     	ds	3
  1555  000045                     i1___ftmul@cntr:
  1556                           	opt stack 0
  1557                           
  1558                           ; 1 bytes @ 0x44
  1559  000045                     	ds	1
  1560  000046                     i1___ftmul@sign:
  1561                           	opt stack 0
  1562                           
  1563                           ; 1 bytes @ 0x45
  1564  000046                     	ds	1
  1565  000047                     ?i1_Read_LDR:
  1566                           	opt stack 0
  1567  000047                     ?i1_fround:
  1568                           	opt stack 0
  1569  000047                     ?i1_scale:
  1570                           	opt stack 0
  1571  000047                     i1fround@prec:
  1572                           	opt stack 0
  1573  000047                     i1scale@scl:
  1574                           	opt stack 0
  1575                           
  1576                           ; 1 bytes @ 0x46
  1577  000047                     	ds	3
  1578  00004A                     tblptru	equ	0xFF8
  1579                           tblptrh	equ	0xFF7
  1580                           tblptrl	equ	0xFF6
  1581                           tablat	equ	0xFF5
  1582                           postinc0	equ	0xFEE
  1583                           wreg	equ	0xFE8
  1584                           postdec1	equ	0xFE5
  1585                           fsr1l	equ	0xFE1
  1586                           
  1587                           ; 0 bytes @ 0x49
  1588 ;;
  1589 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1590 ;;
  1591 ;; *************** function _main *****************
  1592 ;; Defined at:
  1593 ;;		line 84 in file "main.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;		None               void
  1600 ;; Registers used:
  1601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1607 ;;      Params:         0       0       0       0       0       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1610 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels required when called:   18
  1613 ;; This function calls:
  1614 ;;		_lcd_init
  1615 ;;		_Configuracion_Registros
  1616 ;;		_Timer1_Init
  1617 ;;		_Timer0_Init
  1618 ;;		_Init_AD
  1619 ;;		_USART_Init
  1620 ;;		_inicioInterrupcoes
  1621 ;;		_mainLoop
  1622 ;; This function is called by:
  1623 ;;		Startup code after reset
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text0
  1628  006656                     __ptext0:
  1629                           	opt stack 0
  1630  006656                     _main:
  1631                           	opt stack 13
  1632                           
  1633                           ;main.c: 86: Configuracion_Registros();
  1634                           
  1635                           ;incstack = 0
  1636                           ;incstack = 0
  1637  006656  ECA3  F033         	call	_Configuracion_Registros	;wreg free
  1638                           
  1639                           ;main.c: 87: Timer1_Init();
  1640  00665A  EC99  F033         	call	_Timer1_Init	;wreg free
  1641                           
  1642                           ;main.c: 88: Timer0_Init();
  1643  00665E  EC84  F033         	call	_Timer0_Init	;wreg free
  1644                           
  1645                           ;main.c: 89: lcd_init();
  1646  006662  EC2F  F025         	call	_lcd_init	;wreg free
  1647                           
  1648                           ;main.c: 90: Init_AD();
  1649  006666  EC8F  F033         	call	_Init_AD	;wreg free
  1650                           
  1651                           ;main.c: 91: Timer0_Init();
  1652  00666A  EC84  F033         	call	_Timer0_Init	;wreg free
  1653                           
  1654                           ;main.c: 93: USART_Init();
  1655  00666E  EC25  F02B         	call	_USART_Init	;wreg free
  1656                           
  1657                           ;main.c: 94: inicioInterrupcoes();
  1658  006672  ECAC  F033         	call	_inicioInterrupcoes	;wreg free
  1659  006676                     l10540:
  1660                           
  1661                           ;main.c: 97: mainLoop();
  1662  006676  ECA8  F030         	call	_mainLoop	;wreg free
  1663  00667A  D7FD               	goto	l10540
  1664  00667C                     __end_of_main:
  1665                           	opt stack 0
  1666                           tblptru	equ	0xFF8
  1667                           tblptrh	equ	0xFF7
  1668                           tblptrl	equ	0xFF6
  1669                           tablat	equ	0xFF5
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           postdec1	equ	0xFE5
  1673                           fsr1l	equ	0xFE1
  1674                           
  1675 ;; *************** function _mainLoop *****************
  1676 ;; Defined at:
  1677 ;;		line 103 in file "main.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;		None               void
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:   17
  1698 ;; This function calls:
  1699 ;;		_Time_Bases
  1700 ;;		_check_light
  1701 ;;		_check_movement
  1702 ;;		_FSM
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text1
  1709  006150                     __ptext1:
  1710                           	opt stack 0
  1711  006150                     _mainLoop:
  1712                           	opt stack 13
  1713                           
  1714                           ;main.c: 105: if (INTCONbits.TMR0IF)
  1715                           
  1716                           ;incstack = 0
  1717                           ;incstack = 0
  1718  006150  A4F2               	btfss	intcon,2,c	;volatile
  1719  006152  D00F               	goto	l10598
  1720                           
  1721                           ;main.c: 106: {
  1722                           ;main.c: 107: INTCONbits.TMR0IF = 0x00;
  1723  006154  94F2               	bcf	intcon,2,c	;volatile
  1724                           
  1725                           ;main.c: 108: TMR0H = 0xD8;
  1726  006156  0ED8               	movlw	216
  1727  006158  6ED7               	movwf	4055,c	;volatile
  1728                           
  1729                           ;main.c: 109: TMR0L = 0xF0;
  1730  00615A  0EF0               	movlw	240
  1731  00615C  6ED6               	movwf	4054,c	;volatile
  1732                           
  1733                           ;main.c: 110: baseT1 += 1;
  1734  00615E  0101               	movlb	1	; () banked
  1735  006160  0101               	movlb	1	; () banked
  1736  006162  4B81               	infsnz	_baseT1& (0+255),f,b
  1737  006164  2B82               	incf	(_baseT1+1)& (0+255),f,b
  1738                           
  1739                           ; BSR set to: 1
  1740                           ;main.c: 111: baseT2 += 1;
  1741  006166  0101               	movlb	1	; () banked
  1742  006168  0101               	movlb	1	; () banked
  1743  00616A  4B83               	infsnz	_baseT2& (0+255),f,b
  1744  00616C  2B84               	incf	(_baseT2+1)& (0+255),f,b
  1745                           
  1746                           ; BSR set to: 1
  1747                           ;main.c: 112: Time_Bases();
  1748  00616E  ECDD  F022         	call	_Time_Bases	;wreg free
  1749  006172                     l10598:
  1750                           
  1751                           ;main.c: 113: }
  1752                           ;main.c: 124: check_light(LDR_value);;
  1753  006172  C0B2  F109         	movff	_LDR_value,?_check_light
  1754  006176  C0B3  F10A         	movff	_LDR_value+1,?_check_light+1
  1755  00617A  C0B4  F10B         	movff	_LDR_value+2,?_check_light+2
  1756  00617E  EC61  F030         	call	_check_light	;wreg free
  1757                           
  1758                           ;main.c: 125: check_movement(Distancia);
  1759  006182  C0B5  F100         	movff	_Distancia,?_check_movement
  1760  006186  C0B6  F101         	movff	_Distancia+1,?_check_movement+1
  1761  00618A  ECD3  F032         	call	_check_movement	;wreg free
  1762                           
  1763                           ;main.c: 126: FSM();
  1764  00618E  ECBD  F02D         	call	_FSM	;wreg free
  1765  006192  0012               	return	
  1766  006194                     __end_of_mainLoop:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           intcon	equ	0xFF2
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           postdec1	equ	0xFE5
  1776                           fsr1l	equ	0xFE1
  1777                           
  1778 ;; *************** function _FSM *****************
  1779 ;; Defined at:
  1780 ;;		line 189 in file "main.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;		None               void
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1794 ;;      Params:         0       0       0       0       0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1797 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1798 ;;Total ram usage:        0 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:   12
  1801 ;; This function calls:
  1802 ;;		_led_off
  1803 ;;		_led_on
  1804 ;; This function is called by:
  1805 ;;		_mainLoop
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text2
  1810  005B7A                     __ptext2:
  1811                           	opt stack 0
  1812  005B7A                     _FSM:
  1813                           	opt stack 17
  1814                           
  1815                           ;main.c: 191: if(controlOn){
  1816                           
  1817                           ;incstack = 0
  1818                           ;incstack = 0
  1819  005B7A  504D               	movf	_controlOn+1,w,c
  1820  005B7C  104C               	iorwf	_controlOn,w,c
  1821  005B7E  B4D8               	btfsc	status,2,c
  1822  005B80  D03A               	goto	l222
  1823                           
  1824                           ;main.c: 192: if(theresMovement && isBright){
  1825  005B82  0100               	movlb	0	; () banked
  1826  005B84  0100               	movlb	0	; () banked
  1827  005B86  51B8               	movf	(_theresMovement+1)& (0+255),w,b
  1828  005B88  11B7               	iorwf	_theresMovement& (0+255),w,b
  1829  005B8A  B4D8               	btfsc	status,2,c
  1830  005B8C  D009               	goto	l10648
  1831                           
  1832                           ; BSR set to: 0
  1833  005B8E  0101               	movlb	1	; () banked
  1834  005B90  0101               	movlb	1	; () banked
  1835  005B92  5186               	movf	(_isBright+1)& (0+255),w,b
  1836  005B94  1185               	iorwf	_isBright& (0+255),w,b
  1837  005B96  B4D8               	btfsc	status,2,c
  1838  005B98  D003               	goto	l10648
  1839                           
  1840                           ; BSR set to: 1
  1841                           ;main.c: 193: led_off();
  1842  005B9A  ECB7  F033         	call	_led_off	;wreg free
  1843                           
  1844                           ;main.c: 194: }else if(!theresMovement && !isBright){
  1845  005B9E  D02B               	goto	l222
  1846  005BA0                     l10648:
  1847  005BA0  0100               	movlb	0	; () banked
  1848  005BA2  0100               	movlb	0	; () banked
  1849  005BA4  51B8               	movf	(_theresMovement+1)& (0+255),w,b
  1850  005BA6  11B7               	iorwf	_theresMovement& (0+255),w,b
  1851  005BA8  A4D8               	btfss	status,2,c
  1852  005BAA  D009               	goto	l10654
  1853                           
  1854                           ; BSR set to: 0
  1855  005BAC  0101               	movlb	1	; () banked
  1856  005BAE  0101               	movlb	1	; () banked
  1857  005BB0  5186               	movf	(_isBright+1)& (0+255),w,b
  1858  005BB2  1185               	iorwf	_isBright& (0+255),w,b
  1859  005BB4  A4D8               	btfss	status,2,c
  1860  005BB6  D003               	goto	l10654
  1861                           
  1862                           ; BSR set to: 1
  1863                           ;main.c: 195: led_off();
  1864  005BB8  ECB7  F033         	call	_led_off	;wreg free
  1865                           
  1866                           ;main.c: 196: }else if(!theresMovement && isBright){
  1867  005BBC  D01C               	goto	l222
  1868  005BBE                     l10654:
  1869  005BBE  0100               	movlb	0	; () banked
  1870  005BC0  0100               	movlb	0	; () banked
  1871  005BC2  51B8               	movf	(_theresMovement+1)& (0+255),w,b
  1872  005BC4  11B7               	iorwf	_theresMovement& (0+255),w,b
  1873  005BC6  A4D8               	btfss	status,2,c
  1874  005BC8  D009               	goto	l10660
  1875                           
  1876                           ; BSR set to: 0
  1877  005BCA  0101               	movlb	1	; () banked
  1878  005BCC  0101               	movlb	1	; () banked
  1879  005BCE  5186               	movf	(_isBright+1)& (0+255),w,b
  1880  005BD0  1185               	iorwf	_isBright& (0+255),w,b
  1881  005BD2  B4D8               	btfsc	status,2,c
  1882  005BD4  D003               	goto	l10660
  1883                           
  1884                           ; BSR set to: 1
  1885                           ;main.c: 197: led_off();
  1886  005BD6  ECB7  F033         	call	_led_off	;wreg free
  1887                           
  1888                           ;main.c: 198: }else if(theresMovement && !isBright){
  1889  005BDA  D00D               	goto	l222
  1890  005BDC                     l10660:
  1891  005BDC  0100               	movlb	0	; () banked
  1892  005BDE  0100               	movlb	0	; () banked
  1893  005BE0  51B8               	movf	(_theresMovement+1)& (0+255),w,b
  1894  005BE2  11B7               	iorwf	_theresMovement& (0+255),w,b
  1895  005BE4  B4D8               	btfsc	status,2,c
  1896  005BE6  D007               	goto	l222
  1897                           
  1898                           ; BSR set to: 0
  1899  005BE8  0101               	movlb	1	; () banked
  1900  005BEA  0101               	movlb	1	; () banked
  1901  005BEC  5186               	movf	(_isBright+1)& (0+255),w,b
  1902  005BEE  1185               	iorwf	_isBright& (0+255),w,b
  1903  005BF0  B4D8               	btfsc	status,2,c
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;main.c: 199: led_on();
  1907  005BF2  ECB4  F033         	call	_led_on	;wreg free
  1908  005BF6                     l222:
  1909  005BF6  0012               	return	
  1910  005BF8                     __end_of_FSM:
  1911                           	opt stack 0
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           intcon	equ	0xFF2
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           postdec1	equ	0xFE5
  1920                           fsr1l	equ	0xFE1
  1921                           status	equ	0xFD8
  1922                           
  1923 ;; *************** function _led_on *****************
  1924 ;; Defined at:
  1925 ;;		line 184 in file "main.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;		None               void
  1932 ;; Registers used:
  1933 ;;		wreg, status,2
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1939 ;;      Params:         0       0       0       0       0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:   11
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_FSM
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text3
  1954  006768                     __ptext3:
  1955                           	opt stack 0
  1956  006768                     _led_on:
  1957                           	opt stack 17
  1958                           
  1959                           ;main.c: 185: LATB = 0x01;
  1960                           
  1961                           ;incstack = 0
  1962                           ;incstack = 0
  1963  006768  0E01               	movlw	1
  1964  00676A  6E8A               	movwf	3978,c	;volatile
  1965  00676C  0012               	return	
  1966  00676E                     __end_of_led_on:
  1967                           	opt stack 0
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           intcon	equ	0xFF2
  1973                           postinc0	equ	0xFEE
  1974                           wreg	equ	0xFE8
  1975                           postdec1	equ	0xFE5
  1976                           fsr1l	equ	0xFE1
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _led_off *****************
  1980 ;; Defined at:
  1981 ;;		line 181 in file "main.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;		None               void
  1988 ;; Registers used:
  1989 ;;		wreg, status,2
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1998 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:   11
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_FSM
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text4
  2010  00676E                     __ptext4:
  2011                           	opt stack 0
  2012  00676E                     _led_off:
  2013                           	opt stack 17
  2014                           
  2015                           ;main.c: 182: LATB = 0x00;
  2016                           
  2017                           ;incstack = 0
  2018                           ;incstack = 0
  2019  00676E  0E00               	movlw	0
  2020  006770  6E8A               	movwf	3978,c	;volatile
  2021  006772  0012               	return	
  2022  006774                     __end_of_led_off:
  2023                           	opt stack 0
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           intcon	equ	0xFF2
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           postdec1	equ	0xFE5
  2032                           fsr1l	equ	0xFE1
  2033                           status	equ	0xFD8
  2034                           
  2035 ;; *************** function _check_movement *****************
  2036 ;; Defined at:
  2037 ;;		line 173 in file "main.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;		None               void
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2051 ;;      Params:         0       0       2       0       0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2054 ;;      Totals:         0       0       2       0       0       0       0       0       0
  2055 ;;Total ram usage:        2 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:   11
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_mainLoop
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text5
  2066  0065A6                     __ptext5:
  2067                           	opt stack 0
  2068  0065A6                     _check_movement:
  2069                           	opt stack 18
  2070                           
  2071                           ;main.c: 174: if(Distancia > 110) {
  2072                           
  2073                           ;incstack = 0
  2074                           ;incstack = 0
  2075  0065A6  0E6F               	movlw	111
  2076  0065A8  0100               	movlb	0	; () banked
  2077  0065AA  0100               	movlb	0	; () banked
  2078  0065AC  5DB5               	subwf	_Distancia& (0+255),w,b
  2079  0065AE  0E00               	movlw	0
  2080  0065B0  0100               	movlb	0	; () banked
  2081  0065B2  59B6               	subwfb	(_Distancia+1)& (0+255),w,b
  2082  0065B4  A0D8               	btfss	status,0,c
  2083  0065B6  D006               	goto	l10638
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;main.c: 175: theresMovement = 0;
  2087  0065B8  0E00               	movlw	0
  2088  0065BA  0100               	movlb	0	; () banked
  2089  0065BC  0100               	movlb	0	; () banked
  2090  0065BE  6FB8               	movwf	(_theresMovement+1)& (0+255),b
  2091  0065C0  0E00               	movlw	0
  2092  0065C2  D005               	goto	L1
  2093  0065C4                     l10638:
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;main.c: 177: theresMovement = 1;
  2097  0065C4  0E00               	movlw	0
  2098  0065C6  0100               	movlb	0	; () banked
  2099  0065C8  0100               	movlb	0	; () banked
  2100  0065CA  6FB8               	movwf	(_theresMovement+1)& (0+255),b
  2101  0065CC  0E01               	movlw	1
  2102  0065CE                     L1:
  2103  0065CE  0100               	movlb	0	; () banked
  2104  0065D0  6FB7               	movwf	_theresMovement& (0+255),b
  2105                           
  2106                           ; BSR set to: 0
  2107                           
  2108                           ; BSR set to: 0
  2109  0065D2  0012               	return	
  2110  0065D4                     __end_of_check_movement:
  2111                           	opt stack 0
  2112                           tblptru	equ	0xFF8
  2113                           tblptrh	equ	0xFF7
  2114                           tblptrl	equ	0xFF6
  2115                           tablat	equ	0xFF5
  2116                           intcon	equ	0xFF2
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1l	equ	0xFE1
  2121                           status	equ	0xFD8
  2122                           
  2123 ;; *************** function _check_light *****************
  2124 ;; Defined at:
  2125 ;;		line 166 in file "main.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;		None               void
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2139 ;;      Params:         0       0       3       0       0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2142 ;;      Totals:         0       0       3       0       0       0       0       0       0
  2143 ;;Total ram usage:        3 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:   12
  2146 ;; This function calls:
  2147 ;;		___ftge
  2148 ;; This function is called by:
  2149 ;;		_mainLoop
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text6
  2154  0060C2                     __ptext6:
  2155                           	opt stack 0
  2156  0060C2                     _check_light:
  2157                           	opt stack 17
  2158                           
  2159                           ;main.c: 167: if (LDR_value > 4.0) {
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;incstack = 0
  2163                           ;incstack = 0
  2164  0060C2  0E00               	movlw	0
  2165  0060C4  0101               	movlb	1	; () banked
  2166  0060C6  0101               	movlb	1	; () banked
  2167  0060C8  6F00               	movwf	?___ftge& (0+255),b
  2168  0060CA  0E80               	movlw	128
  2169  0060CC  0101               	movlb	1	; () banked
  2170  0060CE  0101               	movlb	1	; () banked
  2171  0060D0  6F01               	movwf	(?___ftge+1)& (0+255),b
  2172  0060D2  0E40               	movlw	64
  2173  0060D4  0101               	movlb	1	; () banked
  2174  0060D6  0101               	movlb	1	; () banked
  2175  0060D8  6F02               	movwf	(?___ftge+2)& (0+255),b
  2176  0060DA  C0B2  F103         	movff	_LDR_value,?___ftge+3
  2177  0060DE  C0B3  F104         	movff	_LDR_value+1,?___ftge+4
  2178  0060E2  C0B4  F105         	movff	_LDR_value+2,?___ftge+5
  2179  0060E6  EC48  F027         	call	___ftge	;wreg free
  2180  0060EA  B0D8               	btfsc	status,0,c
  2181  0060EC  D006               	goto	l10632
  2182                           
  2183                           ;main.c: 168: isBright = 0;
  2184  0060EE  0E00               	movlw	0
  2185  0060F0  0101               	movlb	1	; () banked
  2186  0060F2  0101               	movlb	1	; () banked
  2187  0060F4  6F86               	movwf	(_isBright+1)& (0+255),b
  2188  0060F6  0E00               	movlw	0
  2189  0060F8  D005               	goto	L2
  2190  0060FA                     l10632:
  2191                           
  2192                           ;main.c: 170: isBright = 1;
  2193  0060FA  0E00               	movlw	0
  2194  0060FC  0101               	movlb	1	; () banked
  2195  0060FE  0101               	movlb	1	; () banked
  2196  006100  6F86               	movwf	(_isBright+1)& (0+255),b
  2197  006102  0E01               	movlw	1
  2198  006104                     L2:
  2199  006104  0101               	movlb	1	; () banked
  2200  006106  6F85               	movwf	_isBright& (0+255),b
  2201                           
  2202                           ; BSR set to: 1
  2203                           
  2204                           ; BSR set to: 1
  2205  006108  0012               	return	
  2206  00610A                     __end_of_check_light:
  2207                           	opt stack 0
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           intcon	equ	0xFF2
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1l	equ	0xFE1
  2217                           status	equ	0xFD8
  2218                           
  2219 ;; *************** function _Time_Bases *****************
  2220 ;; Defined at:
  2221 ;;		line 129 in file "main.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;		None               void
  2228 ;; Registers used:
  2229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2235 ;;      Params:         0       0       0       0       0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2237 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2238 ;;      Totals:         0       0       2       0       0       0       0       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:   16
  2242 ;; This function calls:
  2243 ;;		_lcd_gotoxy
  2244 ;;		_lcd_putc
  2245 ;;		_Read_LDR
  2246 ;;		_sprintf
  2247 ;;		_Obtener_Distancia
  2248 ;; This function is called by:
  2249 ;;		_mainLoop
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text7
  2254  0045BA                     __ptext7:
  2255                           	opt stack 0
  2256  0045BA                     _Time_Bases:
  2257                           	opt stack 13
  2258                           
  2259                           ;main.c: 130: if (baseT1 >= cycles[0])
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;incstack = 0
  2263                           ;incstack = 0
  2264  0045BA  0101               	movlb	1	; () banked
  2265  0045BC  0101               	movlb	1	; () banked
  2266  0045BE  51A7               	movf	_cycles& (0+255),w,b
  2267  0045C0  0101               	movlb	1	; () banked
  2268  0045C2  0101               	movlb	1	; () banked
  2269  0045C4  5D81               	subwf	_baseT1& (0+255),w,b
  2270  0045C6  0101               	movlb	1	; () banked
  2271  0045C8  0101               	movlb	1	; () banked
  2272  0045CA  51A8               	movf	(_cycles+1)& (0+255),w,b
  2273  0045CC  0101               	movlb	1	; () banked
  2274  0045CE  0101               	movlb	1	; () banked
  2275  0045D0  5982               	subwfb	(_baseT1+1)& (0+255),w,b
  2276  0045D2  A0D8               	btfss	status,0,c
  2277  0045D4  D044               	goto	l10616
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;main.c: 131: {
  2281                           ;main.c: 132: baseT1 = 0x00;
  2282  0045D6  0E00               	movlw	0
  2283  0045D8  0101               	movlb	1	; () banked
  2284  0045DA  0101               	movlb	1	; () banked
  2285  0045DC  6F82               	movwf	(_baseT1+1)& (0+255),b
  2286  0045DE  0E00               	movlw	0
  2287  0045E0  0101               	movlb	1	; () banked
  2288  0045E2  6F81               	movwf	_baseT1& (0+255),b
  2289                           
  2290                           ; BSR set to: 1
  2291                           ;main.c: 133: LDR_value=Read_LDR();
  2292  0045E4  ECC7  F026         	call	_Read_LDR	;wreg free
  2293  0045E8  C13A  F0B4         	movff	?_Read_LDR+2,_LDR_value+2
  2294  0045EC  C139  F0B3         	movff	?_Read_LDR+1,_LDR_value+1
  2295  0045F0  C138  F0B2         	movff	?_Read_LDR,_LDR_value
  2296                           
  2297                           ;main.c: 134: lcd_gotoxy(1,1);
  2298  0045F4  0101               	movlb	1	; () banked
  2299  0045F6  6F7F               	movwf	??_Time_Bases& (0+255),b
  2300  0045F8  0E01               	movlw	1
  2301  0045FA  0101               	movlb	1	; () banked
  2302  0045FC  0101               	movlb	1	; () banked
  2303  0045FE  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  2304  004600  0101               	movlb	1	; () banked
  2305  004602  517F               	movf	??_Time_Bases& (0+255),w,b
  2306  004604  0101               	movlb	1	; () banked
  2307  004606  6F80               	movwf	(??_Time_Bases+1)& (0+255),b
  2308  004608  0E01               	movlw	1
  2309  00460A  0101               	movlb	1	; () banked
  2310  00460C  0101               	movlb	1	; () banked
  2311  00460E  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  2312  004610  0101               	movlb	1	; () banked
  2313  004612  5180               	movf	(??_Time_Bases+1)& (0+255),w,b
  2314  004614  ECAE  F02C         	call	_lcd_gotoxy	;wreg free
  2315                           
  2316                           ;main.c: 135: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
  2317  004618  0101               	movlb	1	; () banked
  2318  00461A  0E01               	movlw	high _LCD_Buffer
  2319  00461C  0101               	movlb	1	; () banked
  2320  00461E  0101               	movlb	1	; () banked
  2321  004620  6F52               	movwf	(?_sprintf+1)& (0+255),b
  2322  004622  0101               	movlb	1	; () banked
  2323  004624  0E87               	movlw	low _LCD_Buffer
  2324  004626  0101               	movlb	1	; () banked
  2325  004628  6F51               	movwf	?_sprintf& (0+255),b
  2326  00462A  0E08               	movlw	high STR_1
  2327  00462C  0101               	movlb	1	; () banked
  2328  00462E  0101               	movlb	1	; () banked
  2329  004630  6F54               	movwf	(?_sprintf+3)& (0+255),b
  2330  004632  0E88               	movlw	low STR_1
  2331  004634  0101               	movlb	1	; () banked
  2332  004636  6F53               	movwf	(?_sprintf+2)& (0+255),b
  2333  004638  C0B2  F155         	movff	_LDR_value,?_sprintf+4
  2334  00463C  C0B3  F156         	movff	_LDR_value+1,?_sprintf+5
  2335  004640  C0B4  F157         	movff	_LDR_value+2,?_sprintf+6
  2336  004644  EC4A  F004         	call	_sprintf	;wreg free
  2337                           
  2338                           ;main.c: 136: lcd_putc(LCD_Buffer);
  2339  004648  0101               	movlb	1	; () banked
  2340  00464A  0E01               	movlw	high _LCD_Buffer
  2341  00464C  0101               	movlb	1	; () banked
  2342  00464E  0101               	movlb	1	; () banked
  2343  004650  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  2344  004652  0101               	movlb	1	; () banked
  2345  004654  0E87               	movlw	low _LCD_Buffer
  2346  004656  0101               	movlb	1	; () banked
  2347  004658  6F04               	movwf	?_lcd_putc& (0+255),b
  2348  00465A  EC26  F02F         	call	_lcd_putc	;wreg free
  2349  00465E                     l10616:
  2350                           
  2351                           ;main.c: 137: }
  2352                           ;main.c: 138: if (baseT2 >= cycles[1])
  2353  00465E  0101               	movlb	1	; () banked
  2354  004660  0101               	movlb	1	; () banked
  2355  004662  51A9               	movf	(_cycles+2)& (0+255),w,b
  2356  004664  0101               	movlb	1	; () banked
  2357  004666  0101               	movlb	1	; () banked
  2358  004668  5D83               	subwf	_baseT2& (0+255),w,b
  2359  00466A  0101               	movlb	1	; () banked
  2360  00466C  0101               	movlb	1	; () banked
  2361  00466E  51AA               	movf	(_cycles+3)& (0+255),w,b
  2362  004670  0101               	movlb	1	; () banked
  2363  004672  0101               	movlb	1	; () banked
  2364  004674  5984               	subwfb	(_baseT2+1)& (0+255),w,b
  2365  004676  A0D8               	btfss	status,0,c
  2366  004678  D042               	goto	l192
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;main.c: 139: {
  2370                           ;main.c: 140: baseT2 = 0x00;
  2371  00467A  0E00               	movlw	0
  2372  00467C  0101               	movlb	1	; () banked
  2373  00467E  0101               	movlb	1	; () banked
  2374  004680  6F84               	movwf	(_baseT2+1)& (0+255),b
  2375  004682  0E00               	movlw	0
  2376  004684  0101               	movlb	1	; () banked
  2377  004686  6F83               	movwf	_baseT2& (0+255),b
  2378                           
  2379                           ; BSR set to: 1
  2380                           ;main.c: 141: Distancia=Obtener_Distancia();
  2381  004688  ECCE  F02A         	call	_Obtener_Distancia	;wreg free
  2382  00468C  0101               	movlb	1	; () banked
  2383  00468E  C108  F0B5         	movff	?_Obtener_Distancia,_Distancia
  2384  004692  0101               	movlb	1	; () banked
  2385  004694  C109  F0B6         	movff	?_Obtener_Distancia+1,_Distancia+1
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;main.c: 142: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
  2389  004698  0101               	movlb	1	; () banked
  2390  00469A  0E01               	movlw	high _LCD_Buffer
  2391  00469C  0101               	movlb	1	; () banked
  2392  00469E  0101               	movlb	1	; () banked
  2393  0046A0  6F52               	movwf	(?_sprintf+1)& (0+255),b
  2394  0046A2  0101               	movlb	1	; () banked
  2395  0046A4  0E87               	movlw	low _LCD_Buffer
  2396  0046A6  0101               	movlb	1	; () banked
  2397  0046A8  6F51               	movwf	?_sprintf& (0+255),b
  2398  0046AA  0E08               	movlw	high STR_2
  2399  0046AC  0101               	movlb	1	; () banked
  2400  0046AE  0101               	movlb	1	; () banked
  2401  0046B0  6F54               	movwf	(?_sprintf+3)& (0+255),b
  2402  0046B2  0E76               	movlw	low STR_2
  2403  0046B4  0101               	movlb	1	; () banked
  2404  0046B6  6F53               	movwf	(?_sprintf+2)& (0+255),b
  2405  0046B8  C0B5  F155         	movff	_Distancia,?_sprintf+4
  2406  0046BC  C0B6  F156         	movff	_Distancia+1,?_sprintf+5
  2407  0046C0  EC4A  F004         	call	_sprintf	;wreg free
  2408                           
  2409                           ;main.c: 143: lcd_gotoxy(2,1);
  2410  0046C4  0101               	movlb	1	; () banked
  2411  0046C6  6F7F               	movwf	??_Time_Bases& (0+255),b
  2412  0046C8  0E02               	movlw	2
  2413  0046CA  0101               	movlb	1	; () banked
  2414  0046CC  0101               	movlb	1	; () banked
  2415  0046CE  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  2416  0046D0  0101               	movlb	1	; () banked
  2417  0046D2  517F               	movf	??_Time_Bases& (0+255),w,b
  2418  0046D4  0101               	movlb	1	; () banked
  2419  0046D6  6F80               	movwf	(??_Time_Bases+1)& (0+255),b
  2420  0046D8  0E01               	movlw	1
  2421  0046DA  0101               	movlb	1	; () banked
  2422  0046DC  0101               	movlb	1	; () banked
  2423  0046DE  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  2424  0046E0  0101               	movlb	1	; () banked
  2425  0046E2  5180               	movf	(??_Time_Bases+1)& (0+255),w,b
  2426  0046E4  ECAE  F02C         	call	_lcd_gotoxy	;wreg free
  2427                           
  2428                           ;main.c: 144: lcd_putc(LCD_Buffer);
  2429  0046E8  0101               	movlb	1	; () banked
  2430  0046EA  0E01               	movlw	high _LCD_Buffer
  2431  0046EC  0101               	movlb	1	; () banked
  2432  0046EE  0101               	movlb	1	; () banked
  2433  0046F0  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  2434  0046F2  0101               	movlb	1	; () banked
  2435  0046F4  0E87               	movlw	low _LCD_Buffer
  2436  0046F6  0101               	movlb	1	; () banked
  2437  0046F8  6F04               	movwf	?_lcd_putc& (0+255),b
  2438  0046FA  EC26  F02F         	call	_lcd_putc	;wreg free
  2439  0046FE                     l192:
  2440  0046FE  0012               	return	
  2441  004700                     __end_of_Time_Bases:
  2442                           	opt stack 0
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           intcon	equ	0xFF2
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           postdec1	equ	0xFE5
  2451                           fsr1l	equ	0xFE1
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _Obtener_Distancia *****************
  2455 ;; Defined at:
  2456 ;;		line 289 in file "main.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  Duracion        2   14[BANK1 ] unsigned int 
  2461 ;;  Distancia       2   12[BANK1 ] unsigned int 
  2462 ;;  Timer_1         2   10[BANK1 ] unsigned int 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  2    8[BANK1 ] unsigned int 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2472 ;;      Params:         0       0       2       0       0       0       0       0       0
  2473 ;;      Locals:         0       0       6       0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2475 ;;      Totals:         0       0       8       0       0       0       0       0       0
  2476 ;;Total ram usage:        8 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:   12
  2479 ;; This function calls:
  2480 ;;		___lwdiv
  2481 ;; This function is called by:
  2482 ;;		_Time_Bases
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text8
  2487  00559C                     __ptext8:
  2488                           	opt stack 0
  2489  00559C                     _Obtener_Distancia:
  2490                           	opt stack 16
  2491                           
  2492                           ;main.c: 290: uint16_t Duracion;
  2493                           ;main.c: 291: uint16_t Distancia;
  2494                           ;main.c: 292: uint16_t Timer_1;
  2495                           ;main.c: 294: LATAbits.LATA1=1;
  2496                           
  2497                           ;incstack = 0
  2498                           ;incstack = 0
  2499  00559C  8289               	bsf	3977,1,c	;volatile
  2500                           
  2501                           ;main.c: 295: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2502  00559E  0E06               	movlw	6
  2503  0055A0                     u11897:
  2504  0055A0  2EE8               	decfsz	wreg,f,c
  2505  0055A2  D7FE               	goto	u11897
  2506  0055A4  D000               	nop2		;nop
  2507                           
  2508                           ;main.c: 296: LATAbits.LATA1=0;
  2509  0055A6  9289               	bcf	3977,1,c	;volatile
  2510  0055A8                     l250:
  2511  0055A8  A480               	btfss	3968,2,c	;volatile
  2512  0055AA  D7FE               	goto	l250
  2513                           
  2514                           ;main.c: 298: T1CONbits.TMR1ON=1;
  2515  0055AC  80CD               	bsf	4045,0,c	;volatile
  2516  0055AE                     l253:
  2517  0055AE  B480               	btfsc	3968,2,c	;volatile
  2518  0055B0  D7FE               	goto	l253
  2519                           
  2520                           ;main.c: 300: T1CONbits.TMR1ON=0;
  2521  0055B2  90CD               	bcf	4045,0,c	;volatile
  2522                           
  2523                           ;main.c: 301: Timer_1=TMR1;
  2524  0055B4  CFCE F10A          	movff	4046,Obtener_Distancia@Timer_1	;volatile
  2525  0055B8  CFCF F10B          	movff	4047,Obtener_Distancia@Timer_1+1	;volatile
  2526                           
  2527                           ;main.c: 302: Duracion=Timer_1/2;
  2528  0055BC  90D8               	bcf	status,0,c
  2529  0055BE  0101               	movlb	1	; () banked
  2530  0055C0  0101               	movlb	1	; () banked
  2531  0055C2  310B               	rrcf	(Obtener_Distancia@Timer_1+1)& (0+255),w,b
  2532  0055C4  0101               	movlb	1	; () banked
  2533  0055C6  0101               	movlb	1	; () banked
  2534  0055C8  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  2535  0055CA  0101               	movlb	1	; () banked
  2536  0055CC  0101               	movlb	1	; () banked
  2537  0055CE  310A               	rrcf	Obtener_Distancia@Timer_1& (0+255),w,b
  2538  0055D0  0101               	movlb	1	; () banked
  2539  0055D2  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  2540                           
  2541                           ;main.c: 303: if(Duracion<=23200)
  2542  0055D4  0EA1               	movlw	161
  2543  0055D6  0101               	movlb	1	; () banked
  2544  0055D8  0101               	movlb	1	; () banked
  2545  0055DA  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  2546  0055DC  0E5A               	movlw	90
  2547  0055DE  0101               	movlb	1	; () banked
  2548  0055E0  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  2549  0055E2  B0D8               	btfsc	status,0,c
  2550  0055E4  D014               	goto	l11018
  2551                           
  2552                           ; BSR set to: 1
  2553                           ;main.c: 304: {
  2554                           ;main.c: 305: Distancia=Duracion/58;
  2555  0055E6  C10E  F100         	movff	Obtener_Distancia@Duracion,?___lwdiv
  2556  0055EA  C10F  F101         	movff	Obtener_Distancia@Duracion+1,?___lwdiv+1
  2557  0055EE  0E00               	movlw	0
  2558  0055F0  0101               	movlb	1	; () banked
  2559  0055F2  0101               	movlb	1	; () banked
  2560  0055F4  6F03               	movwf	(?___lwdiv+3)& (0+255),b
  2561  0055F6  0E3A               	movlw	58
  2562  0055F8  0101               	movlb	1	; () banked
  2563  0055FA  6F02               	movwf	(?___lwdiv+2)& (0+255),b
  2564  0055FC  EC7B  F02B         	call	___lwdiv	;wreg free
  2565  005600  0101               	movlb	1	; () banked
  2566  005602  C100  F10C         	movff	?___lwdiv,Obtener_Distancia@Distancia
  2567  005606  0101               	movlb	1	; () banked
  2568  005608  C101  F10D         	movff	?___lwdiv+1,Obtener_Distancia@Distancia+1
  2569                           
  2570                           ;main.c: 306: }
  2571  00560C  D00E               	goto	l257
  2572  00560E                     l11018:
  2573                           
  2574                           ; BSR set to: 1
  2575                           ;main.c: 307: else if(Duracion<116)
  2576  00560E  0E74               	movlw	116
  2577  005610  0101               	movlb	1	; () banked
  2578  005612  0101               	movlb	1	; () banked
  2579  005614  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  2580  005616  0E00               	movlw	0
  2581  005618  0101               	movlb	1	; () banked
  2582  00561A  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  2583                           
  2584                           ; BSR set to: 1
  2585                           ;main.c: 311: else
  2586                           ;main.c: 312: {
  2587                           ;main.c: 313: Distancia=0;
  2588                           
  2589                           ; BSR set to: 1
  2590                           
  2591                           ;main.c: 310: }
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;main.c: 308: {
  2595                           ;main.c: 309: Distancia=0;
  2596  00561C  0E00               	movlw	0
  2597  00561E  0101               	movlb	1	; () banked
  2598  005620  0101               	movlb	1	; () banked
  2599  005622  6F0D               	movwf	(Obtener_Distancia@Distancia+1)& (0+255),b
  2600  005624  0E00               	movlw	0
  2601  005626  0101               	movlb	1	; () banked
  2602  005628  6F0C               	movwf	Obtener_Distancia@Distancia& (0+255),b
  2603  00562A                     l257:
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;main.c: 314: }
  2607                           ;main.c: 315: Duracion=0;
  2608  00562A  0E00               	movlw	0
  2609  00562C  0101               	movlb	1	; () banked
  2610  00562E  0101               	movlb	1	; () banked
  2611  005630  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  2612  005632  0E00               	movlw	0
  2613  005634  0101               	movlb	1	; () banked
  2614  005636  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  2615                           
  2616                           ;main.c: 316: TMR1=0;
  2617  005638  0E00               	movlw	0
  2618  00563A  6ECF               	movwf	4047,c	;volatile
  2619  00563C  0E00               	movlw	0
  2620  00563E  6ECE               	movwf	4046,c	;volatile
  2621                           
  2622                           ; BSR set to: 1
  2623                           ;main.c: 318: return Distancia;
  2624  005640  C10C  F108         	movff	Obtener_Distancia@Distancia,?_Obtener_Distancia
  2625  005644  C10D  F109         	movff	Obtener_Distancia@Distancia+1,?_Obtener_Distancia+1
  2626                           
  2627                           ; BSR set to: 1
  2628                           
  2629                           ; BSR set to: 1
  2630  005648  0012               	return	
  2631  00564A                     __end_of_Obtener_Distancia:
  2632                           	opt stack 0
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           intcon	equ	0xFF2
  2638                           postinc0	equ	0xFEE
  2639                           wreg	equ	0xFE8
  2640                           postdec1	equ	0xFE5
  2641                           fsr1l	equ	0xFE1
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function ___lwdiv *****************
  2645 ;; Defined at:
  2646 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  dividend        2    0[BANK1 ] unsigned int 
  2649 ;;  divisor         2    2[BANK1 ] unsigned int 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  quotient        2    6[BANK1 ] unsigned int 
  2652 ;;  counter         1    5[BANK1 ] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  2    0[BANK1 ] unsigned int 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2662 ;;      Params:         0       0       4       0       0       0       0       0       0
  2663 ;;      Locals:         0       0       3       0       0       0       0       0       0
  2664 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2665 ;;      Totals:         0       0       8       0       0       0       0       0       0
  2666 ;;Total ram usage:        8 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:   11
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_Obtener_Distancia
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text9
  2677  0056F6                     __ptext9:
  2678                           	opt stack 0
  2679  0056F6                     ___lwdiv:
  2680                           	opt stack 16
  2681                           
  2682                           ; BSR set to: 1
  2683                           ;incstack = 0
  2684                           ;incstack = 0
  2685  0056F6  0E00               	movlw	0
  2686  0056F8  0101               	movlb	1	; () banked
  2687  0056FA  0101               	movlb	1	; () banked
  2688  0056FC  6F07               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2689  0056FE  0E00               	movlw	0
  2690  005700  0101               	movlb	1	; () banked
  2691  005702  6F06               	movwf	___lwdiv@quotient& (0+255),b
  2692                           
  2693                           ; BSR set to: 1
  2694  005704  0101               	movlb	1	; () banked
  2695  005706  0101               	movlb	1	; () banked
  2696  005708  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2697  00570A  1102               	iorwf	___lwdiv@divisor& (0+255),w,b
  2698  00570C  B4D8               	btfsc	status,2,c
  2699  00570E  D043               	goto	l950
  2700                           
  2701                           ; BSR set to: 1
  2702  005710  0101               	movlb	1	; () banked
  2703  005712  6F04               	movwf	??___lwdiv& (0+255),b
  2704  005714  0E01               	movlw	1
  2705  005716  0101               	movlb	1	; () banked
  2706  005718  0101               	movlb	1	; () banked
  2707  00571A  6F05               	movwf	___lwdiv@counter& (0+255),b
  2708  00571C  0101               	movlb	1	; () banked
  2709  00571E  5104               	movf	??___lwdiv& (0+255),w,b
  2710  005720  D009               	goto	l11604
  2711  005722                     l11602:
  2712                           
  2713                           ; BSR set to: 1
  2714  005722  0101               	movlb	1	; () banked
  2715  005724  0101               	movlb	1	; () banked
  2716  005726  0101               	movlb	1	; () banked
  2717  005728  90D8               	bcf	status,0,c
  2718  00572A  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
  2719  00572C  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2720  00572E  0101               	movlb	1	; () banked
  2721  005730  0101               	movlb	1	; () banked
  2722  005732  2B05               	incf	___lwdiv@counter& (0+255),f,b
  2723  005734                     l11604:
  2724                           
  2725                           ; BSR set to: 1
  2726  005734  0101               	movlb	1	; () banked
  2727  005736  0101               	movlb	1	; () banked
  2728  005738  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2729  00573A  D7F3               	goto	l11602
  2730  00573C                     l11606:
  2731                           
  2732                           ; BSR set to: 1
  2733  00573C  0101               	movlb	1	; () banked
  2734  00573E  0101               	movlb	1	; () banked
  2735  005740  0101               	movlb	1	; () banked
  2736  005742  90D8               	bcf	status,0,c
  2737  005744  3706               	rlcf	___lwdiv@quotient& (0+255),f,b
  2738  005746  3707               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2739                           
  2740                           ; BSR set to: 1
  2741  005748  0101               	movlb	1	; () banked
  2742  00574A  0101               	movlb	1	; () banked
  2743  00574C  5102               	movf	___lwdiv@divisor& (0+255),w,b
  2744  00574E  0101               	movlb	1	; () banked
  2745  005750  0101               	movlb	1	; () banked
  2746  005752  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
  2747  005754  0101               	movlb	1	; () banked
  2748  005756  0101               	movlb	1	; () banked
  2749  005758  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2750  00575A  0101               	movlb	1	; () banked
  2751  00575C  0101               	movlb	1	; () banked
  2752  00575E  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2753  005760  A0D8               	btfss	status,0,c
  2754  005762  D00F               	goto	l11614
  2755                           
  2756                           ; BSR set to: 1
  2757  005764  0101               	movlb	1	; () banked
  2758  005766  0101               	movlb	1	; () banked
  2759  005768  5102               	movf	___lwdiv@divisor& (0+255),w,b
  2760  00576A  0101               	movlb	1	; () banked
  2761  00576C  0101               	movlb	1	; () banked
  2762  00576E  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
  2763  005770  0101               	movlb	1	; () banked
  2764  005772  0101               	movlb	1	; () banked
  2765  005774  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2766  005776  0101               	movlb	1	; () banked
  2767  005778  0101               	movlb	1	; () banked
  2768  00577A  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2769                           
  2770                           ; BSR set to: 1
  2771  00577C  0101               	movlb	1	; () banked
  2772  00577E  0101               	movlb	1	; () banked
  2773  005780  8106               	bsf	___lwdiv@quotient& (0+255),0,b
  2774  005782                     l11614:
  2775                           
  2776                           ; BSR set to: 1
  2777  005782  0101               	movlb	1	; () banked
  2778  005784  0101               	movlb	1	; () banked
  2779  005786  0101               	movlb	1	; () banked
  2780  005788  90D8               	bcf	status,0,c
  2781  00578A  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2782  00578C  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
  2783                           
  2784                           ; BSR set to: 1
  2785  00578E  0101               	movlb	1	; () banked
  2786  005790  0101               	movlb	1	; () banked
  2787  005792  2F05               	decfsz	___lwdiv@counter& (0+255),f,b
  2788  005794  D7D3               	goto	l11606
  2789  005796                     l950:
  2790                           
  2791                           ; BSR set to: 1
  2792  005796  C106  F100         	movff	___lwdiv@quotient,?___lwdiv
  2793  00579A  C107  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2794                           
  2795                           ; BSR set to: 1
  2796  00579E  0012               	return	
  2797  0057A0                     __end_of___lwdiv:
  2798                           	opt stack 0
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           intcon	equ	0xFF2
  2804                           postinc0	equ	0xFEE
  2805                           wreg	equ	0xFE8
  2806                           postdec1	equ	0xFE5
  2807                           fsr1l	equ	0xFE1
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _sprintf *****************
  2811 ;; Defined at:
  2812 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  sp              2   81[BANK1 ] PTR unsigned char 
  2815 ;;		 -> LCD_Buffer(32), 
  2816 ;;  f               2   83[BANK1 ] PTR const unsigned char 
  2817 ;;		 -> STR_2(18), STR_1(10), 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  vd              2  101[BANK1 ] unsigned int 
  2820 ;;  vd              2  103[BANK1 ] unsigned int 
  2821 ;;  _val            5  110[BANK1 ] struct .
  2822 ;;  fval            3  121[BANK1 ] struct .
  2823 ;;  integ           3  107[BANK1 ] struct .
  2824 ;;  ival            3    0        struct .
  2825 ;;  prec            2  124[BANK1 ] int 
  2826 ;;  width           2  119[BANK1 ] int 
  2827 ;;  exp             2  117[BANK1 ] int 
  2828 ;;  flag            2  115[BANK1 ] unsigned short 
  2829 ;;  ap              2  105[BANK1 ] PTR void [1]
  2830 ;;		 -> ?_sprintf(2), 
  2831 ;;  c               1  126[BANK1 ] char 
  2832 ;;  d               1    0        unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  2   81[BANK1 ] int 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2842 ;;      Params:         0       0       7       0       0       0       0       0       0
  2843 ;;      Locals:         0       0      33       0       0       0       0       0       0
  2844 ;;      Temps:          0       0       6       0       0       0       0       0       0
  2845 ;;      Totals:         0       0      46       0       0       0       0       0       0
  2846 ;;Total ram usage:       46 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:   15
  2849 ;; This function calls:
  2850 ;;		_fround
  2851 ;;		_scale
  2852 ;;		_isdigit
  2853 ;;		__tdiv_to_l_
  2854 ;;		__div_to_l_
  2855 ;;		___asftadd
  2856 ;;		___asftmul
  2857 ;;		___ftmul
  2858 ;;		___asftsub
  2859 ;;		___awdiv
  2860 ;;		___ftge
  2861 ;;		___ftneg
  2862 ;;		___fttol
  2863 ;;		___lldiv
  2864 ;;		___llmod
  2865 ;;		___lltoft
  2866 ;;		___lwmod
  2867 ;;		___wmul
  2868 ;; This function is called by:
  2869 ;;		_Time_Bases
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text10
  2874  000894                     __ptext10:
  2875                           	opt stack 0
  2876  000894                     _sprintf:
  2877                           	opt stack 13
  2878                           
  2879                           ;doprnt.c: 494: va_list ap;
  2880                           ;doprnt.c: 499: signed char c;
  2881                           ;doprnt.c: 501: int width;
  2882                           ;doprnt.c: 504: int prec;
  2883                           ;doprnt.c: 508: unsigned short flag;
  2884                           ;doprnt.c: 515: char d;
  2885                           ;doprnt.c: 516: double fval, integ;
  2886                           ;doprnt.c: 517: int exp;
  2887                           ;doprnt.c: 518: double ival;
  2888                           ;doprnt.c: 519: union {
  2889                           ;doprnt.c: 520: unsigned long _val;
  2890                           ;doprnt.c: 521: struct {
  2891                           ;doprnt.c: 522: const char * _cp;
  2892                           ;doprnt.c: 523: unsigned _len;
  2893                           ;doprnt.c: 524: } _str;
  2894                           ;doprnt.c: 525: } _val;
  2895                           ;doprnt.c: 542: *ap = __va_start();
  2896                           
  2897                           ; BSR set to: 1
  2898                           ;incstack = 0
  2899                           ;incstack = 0
  2900  000894  0101               	movlb	1	; () banked
  2901  000896  0E01               	movlw	high (?_sprintf+4)
  2902  000898  0101               	movlb	1	; () banked
  2903  00089A  0101               	movlb	1	; () banked
  2904  00089C  6F6A               	movwf	(sprintf@ap+1)& (0+255),b
  2905  00089E  0101               	movlb	1	; () banked
  2906  0008A0  0E55               	movlw	low (?_sprintf+4)
  2907  0008A2  0101               	movlb	1	; () banked
  2908  0008A4  6F69               	movwf	sprintf@ap& (0+255),b
  2909                           
  2910                           ;doprnt.c: 545: while(c = *f++) {
  2911  0008A6  EF3C  F00B         	goto	l11002
  2912  0008AA                     l10678:
  2913                           
  2914                           ; BSR set to: 1
  2915                           ;doprnt.c: 547: if(c != '%')
  2916  0008AA  0101               	movlb	1	; () banked
  2917  0008AC  0101               	movlb	1	; () banked
  2918  0008AE  517E               	movf	sprintf@c& (0+255),w,b
  2919  0008B0  0A25               	xorlw	37
  2920  0008B2  B4D8               	btfsc	status,2,c
  2921  0008B4  D00D               	goto	l10684
  2922                           
  2923                           ; BSR set to: 1
  2924                           ;doprnt.c: 549: {
  2925                           ;doprnt.c: 550: ((*sp++ = (c)));
  2926  0008B6  C151  FFD9         	movff	sprintf@sp,fsr2l
  2927  0008BA  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2928  0008BE  0101               	movlb	1	; () banked
  2929  0008C0  C17E  FFDF         	movff	sprintf@c,indf2
  2930                           
  2931                           ; BSR set to: 1
  2932  0008C4  0101               	movlb	1	; () banked
  2933  0008C6  0101               	movlb	1	; () banked
  2934  0008C8  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2935  0008CA  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2936                           
  2937                           ;doprnt.c: 551: continue;
  2938  0008CC  EF3C  F00B         	goto	l11002
  2939  0008D0                     l10684:
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;doprnt.c: 552: }
  2943                           ;doprnt.c: 555: width = 0;
  2944  0008D0  0E00               	movlw	0
  2945  0008D2  0101               	movlb	1	; () banked
  2946  0008D4  0101               	movlb	1	; () banked
  2947  0008D6  6F78               	movwf	(sprintf@width+1)& (0+255),b
  2948  0008D8  0E00               	movlw	0
  2949  0008DA  0101               	movlb	1	; () banked
  2950  0008DC  6F77               	movwf	sprintf@width& (0+255),b
  2951                           
  2952                           ;doprnt.c: 557: flag = 0;
  2953  0008DE  0E00               	movlw	0
  2954  0008E0  0101               	movlb	1	; () banked
  2955  0008E2  0101               	movlb	1	; () banked
  2956  0008E4  6F74               	movwf	(sprintf@flag+1)& (0+255),b
  2957  0008E6  0E00               	movlw	0
  2958  0008E8  0101               	movlb	1	; () banked
  2959  0008EA  6F73               	movwf	sprintf@flag& (0+255),b
  2960  0008EC  D007               	goto	l10690
  2961  0008EE                     l10686:
  2962                           
  2963                           ; BSR set to: 1
  2964                           ;doprnt.c: 589: flag |= 0x04;
  2965  0008EE  0101               	movlb	1	; () banked
  2966  0008F0  0101               	movlb	1	; () banked
  2967  0008F2  8573               	bsf	sprintf@flag& (0+255),2,b
  2968                           
  2969                           ;doprnt.c: 590: f++;
  2970  0008F4  0101               	movlb	1	; () banked
  2971  0008F6  0101               	movlb	1	; () banked
  2972  0008F8  4B53               	infsnz	sprintf@f& (0+255),f,b
  2973  0008FA  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2974  0008FC                     l10690:
  2975                           
  2976                           ; BSR set to: 1
  2977  0008FC  0101               	movlb	1	; () banked
  2978  0008FE  C153  FFF6         	movff	sprintf@f,tblptrl
  2979  000902  0101               	movlb	1	; () banked
  2980  000904  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2981  000908  0008               	tblrd		*
  2982  00090A  50F5               	movf	tablat,w,c
  2983                           
  2984                           ; Switch size 1, requested type "space"
  2985                           ; Number of cases is 1, Range of values is 48 to 48
  2986                           ; switch strategies available:
  2987                           ; Name         Instructions Cycles
  2988                           ; simple_byte            4     3 (average)
  2989                           ;	Chosen strategy is simple_byte
  2990  00090C  0A30               	xorlw	48	; case 48
  2991  00090E  B4D8               	btfsc	status,2,c
  2992  000910  D7EE               	goto	l10686
  2993                           
  2994                           ; BSR set to: 1
  2995                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2996                           
  2997                           ; BSR set to: 1
  2998                           
  2999                           ; BSR set to: 1
  3000                           ;doprnt.c: 595: }
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;doprnt.c: 594: break;
  3004  000912  0101               	movlb	1	; () banked
  3005  000914  C153  FFF6         	movff	sprintf@f,tblptrl
  3006  000918  0101               	movlb	1	; () banked
  3007  00091A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3008  00091E  0008               	tblrd		*
  3009  000920  0101               	movlb	1	; () banked
  3010  000922  CFF5 F100          	movff	tablat,?_isdigit
  3011  000926  EC92  F031         	call	_isdigit	;wreg free
  3012  00092A  A0D8               	btfss	status,0,c
  3013  00092C  D049               	goto	l10704
  3014                           
  3015                           ;doprnt.c: 607: width = 0;
  3016  00092E  0E00               	movlw	0
  3017  000930  0101               	movlb	1	; () banked
  3018  000932  0101               	movlb	1	; () banked
  3019  000934  6F78               	movwf	(sprintf@width+1)& (0+255),b
  3020  000936  0E00               	movlw	0
  3021  000938  0101               	movlb	1	; () banked
  3022  00093A  6F77               	movwf	sprintf@width& (0+255),b
  3023  00093C                     l10696:
  3024                           
  3025                           ;doprnt.c: 609: width *= 10;
  3026  00093C  C177  F110         	movff	sprintf@width,?___wmul
  3027  000940  C178  F111         	movff	sprintf@width+1,?___wmul+1
  3028  000944  0E00               	movlw	0
  3029  000946  0101               	movlb	1	; () banked
  3030  000948  0101               	movlb	1	; () banked
  3031  00094A  6F13               	movwf	(?___wmul+3)& (0+255),b
  3032  00094C  0E0A               	movlw	10
  3033  00094E  0101               	movlb	1	; () banked
  3034  000950  6F12               	movwf	(?___wmul+2)& (0+255),b
  3035  000952  EC8A  F02F         	call	___wmul	;wreg free
  3036  000956  0101               	movlb	1	; () banked
  3037  000958  C110  F177         	movff	?___wmul,sprintf@width
  3038  00095C  0101               	movlb	1	; () banked
  3039  00095E  C111  F178         	movff	?___wmul+1,sprintf@width+1
  3040                           
  3041                           ; BSR set to: 1
  3042                           ;doprnt.c: 610: width += *f++ - '0';
  3043  000962  0101               	movlb	1	; () banked
  3044  000964  C153  FFF6         	movff	sprintf@f,tblptrl
  3045  000968  0101               	movlb	1	; () banked
  3046  00096A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3047  00096E  0008               	tblrd		*
  3048  000970  CFF5 F158          	movff	tablat,??_sprintf
  3049  000974  0ED0               	movlw	208
  3050  000976  0101               	movlb	1	; () banked
  3051  000978  2558               	addwf	??_sprintf& (0+255),w,b
  3052  00097A  0101               	movlb	1	; () banked
  3053  00097C  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3054  00097E  0101               	movlb	1	; () banked
  3055  000980  0101               	movlb	1	; () banked
  3056  000982  6B5A               	clrf	(??_sprintf+2)& (0+255),b
  3057  000984  0EFF               	movlw	255
  3058  000986  235A               	addwfc	(??_sprintf+2)& (0+255),f,b
  3059  000988  0101               	movlb	1	; () banked
  3060  00098A  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3061  00098C  0101               	movlb	1	; () banked
  3062  00098E  0101               	movlb	1	; () banked
  3063  000990  2777               	addwf	sprintf@width& (0+255),f,b
  3064  000992  0101               	movlb	1	; () banked
  3065  000994  515A               	movf	(??_sprintf+2)& (0+255),w,b
  3066  000996  0101               	movlb	1	; () banked
  3067  000998  0101               	movlb	1	; () banked
  3068  00099A  2378               	addwfc	(sprintf@width+1)& (0+255),f,b
  3069                           
  3070                           ; BSR set to: 1
  3071  00099C  0101               	movlb	1	; () banked
  3072  00099E  0101               	movlb	1	; () banked
  3073  0009A0  4B53               	infsnz	sprintf@f& (0+255),f,b
  3074  0009A2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  3075                           
  3076                           ; BSR set to: 1
  3077                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  3078  0009A4  0101               	movlb	1	; () banked
  3079  0009A6  C153  FFF6         	movff	sprintf@f,tblptrl
  3080  0009AA  0101               	movlb	1	; () banked
  3081  0009AC  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3082  0009B0  0008               	tblrd		*
  3083  0009B2  0101               	movlb	1	; () banked
  3084  0009B4  CFF5 F100          	movff	tablat,?_isdigit
  3085  0009B8  EC92  F031         	call	_isdigit	;wreg free
  3086  0009BC  B0D8               	btfsc	status,0,c
  3087  0009BE  D7BE               	goto	l10696
  3088  0009C0                     l10704:
  3089                           
  3090                           ;doprnt.c: 617: }
  3091                           ;doprnt.c: 620: if(*f == '.') {
  3092  0009C0  0101               	movlb	1	; () banked
  3093  0009C2  C153  FFF6         	movff	sprintf@f,tblptrl
  3094  0009C6  0101               	movlb	1	; () banked
  3095  0009C8  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3096  0009CC  0008               	tblrd		*
  3097  0009CE  50F5               	movf	tablat,w,c
  3098  0009D0  0A2E               	xorlw	46
  3099  0009D2  A4D8               	btfss	status,2,c
  3100  0009D4  D04A               	goto	l10716
  3101                           
  3102                           ; BSR set to: 1
  3103                           ;doprnt.c: 621: flag |= 0x4000;
  3104  0009D6  0101               	movlb	1	; () banked
  3105  0009D8  0101               	movlb	1	; () banked
  3106  0009DA  8D74               	bsf	(sprintf@flag+1)& (0+255),6,b
  3107                           
  3108                           ;doprnt.c: 622: f++;
  3109  0009DC  0101               	movlb	1	; () banked
  3110  0009DE  0101               	movlb	1	; () banked
  3111  0009E0  4B53               	infsnz	sprintf@f& (0+255),f,b
  3112  0009E2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  3113                           
  3114                           ; BSR set to: 1
  3115                           ;doprnt.c: 629: {
  3116                           ;doprnt.c: 630: prec = 0;
  3117  0009E4  0E00               	movlw	0
  3118  0009E6  0101               	movlb	1	; () banked
  3119  0009E8  0101               	movlb	1	; () banked
  3120  0009EA  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  3121  0009EC  0E00               	movlw	0
  3122  0009EE  0101               	movlb	1	; () banked
  3123  0009F0  6F7C               	movwf	sprintf@prec& (0+255),b
  3124                           
  3125                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  3126  0009F2  D02C               	goto	l10714
  3127  0009F4                     l10710:
  3128                           
  3129                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  3130  0009F4  C17C  F110         	movff	sprintf@prec,?___wmul
  3131  0009F8  C17D  F111         	movff	sprintf@prec+1,?___wmul+1
  3132  0009FC  0E00               	movlw	0
  3133  0009FE  0101               	movlb	1	; () banked
  3134  000A00  0101               	movlb	1	; () banked
  3135  000A02  6F13               	movwf	(?___wmul+3)& (0+255),b
  3136  000A04  0E0A               	movlw	10
  3137  000A06  0101               	movlb	1	; () banked
  3138  000A08  6F12               	movwf	(?___wmul+2)& (0+255),b
  3139  000A0A  EC8A  F02F         	call	___wmul	;wreg free
  3140  000A0E  0101               	movlb	1	; () banked
  3141  000A10  C153  FFF6         	movff	sprintf@f,tblptrl
  3142  000A14  0101               	movlb	1	; () banked
  3143  000A16  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3144  000A1A  0008               	tblrd		*
  3145  000A1C  50F5               	movf	tablat,w,c
  3146  000A1E  0101               	movlb	1	; () banked
  3147  000A20  0101               	movlb	1	; () banked
  3148  000A22  2710               	addwf	?___wmul& (0+255),f,b
  3149  000A24  0E00               	movlw	0
  3150  000A26  0101               	movlb	1	; () banked
  3151  000A28  2311               	addwfc	(?___wmul+1)& (0+255),f,b
  3152  000A2A  0ED0               	movlw	208
  3153  000A2C  0101               	movlb	1	; () banked
  3154  000A2E  0101               	movlb	1	; () banked
  3155  000A30  2510               	addwf	?___wmul& (0+255),w,b
  3156  000A32  0101               	movlb	1	; () banked
  3157  000A34  0101               	movlb	1	; () banked
  3158  000A36  6F7C               	movwf	sprintf@prec& (0+255),b
  3159  000A38  0EFF               	movlw	255
  3160  000A3A  0101               	movlb	1	; () banked
  3161  000A3C  0101               	movlb	1	; () banked
  3162  000A3E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  3163  000A40  0101               	movlb	1	; () banked
  3164  000A42  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  3165                           
  3166                           ; BSR set to: 1
  3167  000A44  0101               	movlb	1	; () banked
  3168  000A46  0101               	movlb	1	; () banked
  3169  000A48  4B53               	infsnz	sprintf@f& (0+255),f,b
  3170  000A4A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  3171  000A4C                     l10714:
  3172                           
  3173                           ; BSR set to: 1
  3174  000A4C  0101               	movlb	1	; () banked
  3175  000A4E  C153  FFF6         	movff	sprintf@f,tblptrl
  3176  000A52  0101               	movlb	1	; () banked
  3177  000A54  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3178  000A58  0008               	tblrd		*
  3179  000A5A  0101               	movlb	1	; () banked
  3180  000A5C  CFF5 F100          	movff	tablat,?_isdigit
  3181  000A60  EC92  F031         	call	_isdigit	;wreg free
  3182  000A64  A0D8               	btfss	status,0,c
  3183  000A66  D010               	goto	l10724
  3184  000A68  D7C5               	goto	l10710
  3185  000A6A                     l10716:
  3186                           
  3187                           ;doprnt.c: 635: prec = 0;
  3188  000A6A  0E00               	movlw	0
  3189  000A6C  0101               	movlb	1	; () banked
  3190  000A6E  0101               	movlb	1	; () banked
  3191  000A70  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  3192  000A72  0E00               	movlw	0
  3193  000A74  0101               	movlb	1	; () banked
  3194  000A76  6F7C               	movwf	sprintf@prec& (0+255),b
  3195                           
  3196                           ; BSR set to: 1
  3197                           ;doprnt.c: 637: flag |= 0x1000;
  3198  000A78  0101               	movlb	1	; () banked
  3199  000A7A  0101               	movlb	1	; () banked
  3200  000A7C  8974               	bsf	(sprintf@flag+1)& (0+255),4,b
  3201  000A7E  D004               	goto	l10724
  3202  000A80                     l10720:
  3203                           
  3204                           ; BSR set to: 1
  3205                           ;doprnt.c: 672: flag |= 0x400;
  3206  000A80  0101               	movlb	1	; () banked
  3207  000A82  0101               	movlb	1	; () banked
  3208  000A84  8574               	bsf	(sprintf@flag+1)& (0+255),2,b
  3209                           
  3210                           ;doprnt.c: 673: break;
  3211  000A86  D01E               	goto	l10726
  3212  000A88                     l10724:
  3213  000A88  0101               	movlb	1	; () banked
  3214  000A8A  C153  FFF6         	movff	sprintf@f,tblptrl
  3215  000A8E  0101               	movlb	1	; () banked
  3216  000A90  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3217  000A94  0101               	movlb	1	; () banked
  3218  000A96  0101               	movlb	1	; () banked
  3219  000A98  4B53               	infsnz	sprintf@f& (0+255),f,b
  3220  000A9A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  3221  000A9C  0008               	tblrd		*
  3222  000A9E  0101               	movlb	1	; () banked
  3223  000AA0  CFF5 F17E          	movff	tablat,sprintf@c
  3224  000AA4  0101               	movlb	1	; () banked
  3225  000AA6  517E               	movf	sprintf@c& (0+255),w,b
  3226                           
  3227                           ; Switch size 1, requested type "space"
  3228                           ; Number of cases is 4, Range of values is 0 to 105
  3229                           ; switch strategies available:
  3230                           ; Name         Instructions Cycles
  3231                           ; simple_byte           13     7 (average)
  3232                           ;	Chosen strategy is simple_byte
  3233  000AA8  0A00               	xorlw	0	; case 0
  3234  000AAA  B4D8               	btfsc	status,2,c
  3235  000AAC  EF4E  F00B         	goto	l11004
  3236  000AB0  0A64               	xorlw	100	; case 100
  3237  000AB2  B4D8               	btfsc	status,2,c
  3238  000AB4  D007               	goto	l10726
  3239  000AB6  0A02               	xorlw	2	; case 102
  3240  000AB8  B4D8               	btfsc	status,2,c
  3241  000ABA  D7E2               	goto	l10720
  3242  000ABC  0A0F               	xorlw	15	; case 105
  3243  000ABE  A4D8               	btfss	status,2,c
  3244  000AC0  EF3C  F00B         	goto	l11002
  3245  000AC4                     l10726:
  3246                           
  3247                           ; BSR set to: 1
  3248                           ;doprnt.c: 834: if(flag & (0x700)) {
  3249  000AC4  0E07               	movlw	7
  3250  000AC6  0101               	movlb	1	; () banked
  3251  000AC8  0101               	movlb	1	; () banked
  3252  000ACA  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3253  000ACC  B4D8               	btfsc	status,2,c
  3254  000ACE  D3EF               	goto	l10906
  3255                           
  3256                           ; BSR set to: 1
  3257                           ;doprnt.c: 836: if(flag & 0x1000)
  3258  000AD0  0101               	movlb	1	; () banked
  3259  000AD2  0101               	movlb	1	; () banked
  3260  000AD4  A974               	btfss	(sprintf@flag+1)& (0+255),4,b
  3261  000AD6  D007               	goto	l10732
  3262                           
  3263                           ; BSR set to: 1
  3264                           ;doprnt.c: 838: prec = 6;
  3265  000AD8  0E00               	movlw	0
  3266  000ADA  0101               	movlb	1	; () banked
  3267  000ADC  0101               	movlb	1	; () banked
  3268  000ADE  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  3269  000AE0  0E06               	movlw	6
  3270  000AE2  0101               	movlb	1	; () banked
  3271  000AE4  6F7C               	movwf	sprintf@prec& (0+255),b
  3272  000AE6                     l10732:
  3273                           
  3274                           ; BSR set to: 1
  3275                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3276  000AE6  C169  FFD9         	movff	sprintf@ap,fsr2l
  3277  000AEA  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  3278  000AEE  0101               	movlb	1	; () banked
  3279  000AF0  CFDE F179          	movff	postinc2,sprintf@fval
  3280  000AF4  0101               	movlb	1	; () banked
  3281  000AF6  CFDE F17A          	movff	postinc2,sprintf@fval+1
  3282  000AFA  0101               	movlb	1	; () banked
  3283  000AFC  CFDD F17B          	movff	postdec2,sprintf@fval+2
  3284                           
  3285                           ; BSR set to: 1
  3286  000B00  0E03               	movlw	3
  3287  000B02  0101               	movlb	1	; () banked
  3288  000B04  0101               	movlb	1	; () banked
  3289  000B06  2769               	addwf	sprintf@ap& (0+255),f,b
  3290  000B08  0E00               	movlw	0
  3291  000B0A  0101               	movlb	1	; () banked
  3292  000B0C  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3293                           
  3294                           ; BSR set to: 1
  3295                           ;doprnt.c: 840: if(fval < 0.0) {
  3296  000B0E  0101               	movlb	1	; () banked
  3297  000B10  0101               	movlb	1	; () banked
  3298  000B12  517B               	movf	(sprintf@fval+2)& (0+255),w,b
  3299  000B14  0A80               	xorlw	128
  3300  000B16  0F80               	addlw	128
  3301  000B18  E107               	bnz	u9695
  3302  000B1A  0E00               	movlw	0
  3303  000B1C  0101               	movlb	1	; () banked
  3304  000B1E  5D7A               	subwf	(sprintf@fval+1)& (0+255),w,b
  3305  000B20  E103               	bnz	u9695
  3306  000B22  0E00               	movlw	0
  3307  000B24  0101               	movlb	1	; () banked
  3308  000B26  5D79               	subwf	sprintf@fval& (0+255),w,b
  3309  000B28                     u9695:
  3310  000B28  B0D8               	btfsc	status,0,c
  3311  000B2A  D012               	goto	l10742
  3312                           
  3313                           ; BSR set to: 1
  3314                           ;doprnt.c: 841: fval = -fval;
  3315  000B2C  C179  F100         	movff	sprintf@fval,?___ftneg
  3316  000B30  C17A  F101         	movff	sprintf@fval+1,?___ftneg+1
  3317  000B34  C17B  F102         	movff	sprintf@fval+2,?___ftneg+2
  3318  000B38  EC29  F032         	call	___ftneg	;wreg free
  3319  000B3C  C102  F17B         	movff	?___ftneg+2,sprintf@fval+2
  3320  000B40  C101  F17A         	movff	?___ftneg+1,sprintf@fval+1
  3321  000B44  C100  F179         	movff	?___ftneg,sprintf@fval
  3322                           
  3323                           ;doprnt.c: 842: flag |= 0x03;
  3324  000B48  0E03               	movlw	3
  3325  000B4A  0101               	movlb	1	; () banked
  3326  000B4C  0101               	movlb	1	; () banked
  3327  000B4E  1373               	iorwf	sprintf@flag& (0+255),f,b
  3328  000B50                     l10742:
  3329                           
  3330                           ; BSR set to: 1
  3331                           ;doprnt.c: 843: }
  3332                           ;doprnt.c: 844: exp = 0;
  3333  000B50  0E00               	movlw	0
  3334  000B52  0101               	movlb	1	; () banked
  3335  000B54  0101               	movlb	1	; () banked
  3336  000B56  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  3337  000B58  0E00               	movlw	0
  3338  000B5A  0101               	movlb	1	; () banked
  3339  000B5C  6F75               	movwf	sprintf@exp& (0+255),b
  3340                           
  3341                           ; BSR set to: 1
  3342                           ;doprnt.c: 845: if( fval!=0) {
  3343  000B5E  0E7F               	movlw	127
  3344  000B60  0101               	movlb	1	; () banked
  3345  000B62  0101               	movlb	1	; () banked
  3346  000B64  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  3347  000B66  0101               	movlb	1	; () banked
  3348  000B68  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3349  000B6A  0101               	movlb	1	; () banked
  3350  000B6C  1179               	iorwf	sprintf@fval& (0+255),w,b
  3351  000B6E  B4D8               	btfsc	status,2,c
  3352  000B70  D0B1               	goto	l10770
  3353                           
  3354                           ; BSR set to: 1
  3355                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  3356  000B72  0E82               	movlw	130
  3357  000B74  0101               	movlb	1	; () banked
  3358  000B76  6F58               	movwf	??_sprintf& (0+255),b
  3359  000B78  0EFF               	movlw	255
  3360  000B7A  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3361  000B7C  0101               	movlb	1	; () banked
  3362  000B7E  C179  F15A         	movff	sprintf@fval,??_sprintf+2
  3363  000B82  0101               	movlb	1	; () banked
  3364  000B84  C17A  F15B         	movff	sprintf@fval+1,??_sprintf+3
  3365  000B88  0101               	movlb	1	; () banked
  3366  000B8A  C17B  F15C         	movff	sprintf@fval+2,??_sprintf+4
  3367  000B8E  0101               	movlb	1	; () banked
  3368  000B90  C17C  F15D         	movff	sprintf@fval+3,??_sprintf+5
  3369  000B94  0E10               	movlw	16
  3370  000B96  D006               	goto	u9710
  3371  000B98                     u9715:
  3372  000B98  0101               	movlb	1	; () banked
  3373  000B9A  90D8               	bcf	status,0,c
  3374  000B9C  335D               	rrcf	(??_sprintf+5)& (0+255),f,b
  3375  000B9E  335C               	rrcf	(??_sprintf+4)& (0+255),f,b
  3376  000BA0  335B               	rrcf	(??_sprintf+3)& (0+255),f,b
  3377  000BA2  335A               	rrcf	(??_sprintf+2)& (0+255),f,b
  3378  000BA4                     u9710:
  3379  000BA4  2EE8               	decfsz	wreg,f,c
  3380  000BA6  D7F8               	goto	u9715
  3381  000BA8  0101               	movlb	1	; () banked
  3382  000BAA  515A               	movf	(??_sprintf+2)& (0+255),w,b
  3383  000BAC  0101               	movlb	1	; () banked
  3384  000BAE  2558               	addwf	??_sprintf& (0+255),w,b
  3385  000BB0  0101               	movlb	1	; () banked
  3386  000BB2  0101               	movlb	1	; () banked
  3387  000BB4  6F75               	movwf	sprintf@exp& (0+255),b
  3388  000BB6  0101               	movlb	1	; () banked
  3389  000BB8  0101               	movlb	1	; () banked
  3390  000BBA  0E00               	movlw	0
  3391  000BBC  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  3392  000BBE  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  3393                           
  3394                           ; BSR set to: 1
  3395                           ;doprnt.c: 847: exp--;
  3396  000BC0  0101               	movlb	1	; () banked
  3397  000BC2  0101               	movlb	1	; () banked
  3398  000BC4  0775               	decf	sprintf@exp& (0+255),f,b
  3399  000BC6  A0D8               	btfss	status,0,c
  3400  000BC8  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  3401                           
  3402                           ; BSR set to: 1
  3403                           ;doprnt.c: 848: exp *= 3;
  3404  000BCA  C175  F110         	movff	sprintf@exp,?___wmul
  3405  000BCE  C176  F111         	movff	sprintf@exp+1,?___wmul+1
  3406  000BD2  0E00               	movlw	0
  3407  000BD4  0101               	movlb	1	; () banked
  3408  000BD6  0101               	movlb	1	; () banked
  3409  000BD8  6F13               	movwf	(?___wmul+3)& (0+255),b
  3410  000BDA  0E03               	movlw	3
  3411  000BDC  0101               	movlb	1	; () banked
  3412  000BDE  6F12               	movwf	(?___wmul+2)& (0+255),b
  3413  000BE0  EC8A  F02F         	call	___wmul	;wreg free
  3414  000BE4  0101               	movlb	1	; () banked
  3415  000BE6  C110  F175         	movff	?___wmul,sprintf@exp
  3416  000BEA  0101               	movlb	1	; () banked
  3417  000BEC  C111  F176         	movff	?___wmul+1,sprintf@exp+1
  3418                           
  3419                           ; BSR set to: 1
  3420                           ;doprnt.c: 849: exp /= 10;
  3421  000BF0  C175  F107         	movff	sprintf@exp,?___awdiv
  3422  000BF4  C176  F108         	movff	sprintf@exp+1,?___awdiv+1
  3423  000BF8  0E00               	movlw	0
  3424  000BFA  0101               	movlb	1	; () banked
  3425  000BFC  0101               	movlb	1	; () banked
  3426  000BFE  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  3427  000C00  0E0A               	movlw	10
  3428  000C02  0101               	movlb	1	; () banked
  3429  000C04  6F09               	movwf	(?___awdiv+2)& (0+255),b
  3430  000C06  ECA4  F024         	call	___awdiv	;wreg free
  3431  000C0A  0101               	movlb	1	; () banked
  3432  000C0C  C107  F175         	movff	?___awdiv,sprintf@exp
  3433  000C10  0101               	movlb	1	; () banked
  3434  000C12  C108  F176         	movff	?___awdiv+1,sprintf@exp+1
  3435                           
  3436                           ; BSR set to: 1
  3437                           ;doprnt.c: 850: if(exp < 0)
  3438  000C16  0101               	movlb	1	; () banked
  3439  000C18  0101               	movlb	1	; () banked
  3440  000C1A  AF76               	btfss	(sprintf@exp+1)& (0+255),7,b
  3441  000C1C  D005               	goto	l10758
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;doprnt.c: 851: exp--;
  3445  000C1E  0101               	movlb	1	; () banked
  3446  000C20  0101               	movlb	1	; () banked
  3447  000C22  0775               	decf	sprintf@exp& (0+255),f,b
  3448  000C24  A0D8               	btfss	status,0,c
  3449  000C26  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  3450  000C28                     l10758:
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;doprnt.c: 855: integ = scale(-exp);
  3454  000C28  0101               	movlb	1	; () banked
  3455  000C2A  0101               	movlb	1	; () banked
  3456  000C2C  5175               	movf	sprintf@exp& (0+255),w,b
  3457  000C2E  0800               	sublw	0
  3458  000C30  0101               	movlb	1	; () banked
  3459  000C32  0101               	movlb	1	; () banked
  3460  000C34  6F27               	movwf	?_scale& (0+255),b
  3461  000C36  EC0A  F012         	call	_scale	;wreg free
  3462  000C3A  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  3463  000C3E  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  3464  000C42  C127  F16B         	movff	?_scale,sprintf@integ
  3465                           
  3466                           ;doprnt.c: 856: integ *= fval;
  3467  000C46  0101               	movlb	1	; () banked
  3468  000C48  0E01               	movlw	high sprintf@integ
  3469  000C4A  0101               	movlb	1	; () banked
  3470  000C4C  0101               	movlb	1	; () banked
  3471  000C4E  6F28               	movwf	(?___asftmul+1)& (0+255),b
  3472  000C50  0101               	movlb	1	; () banked
  3473  000C52  0E6B               	movlw	low sprintf@integ
  3474  000C54  0101               	movlb	1	; () banked
  3475  000C56  6F27               	movwf	?___asftmul& (0+255),b
  3476  000C58  C179  F129         	movff	sprintf@fval,?___asftmul+2
  3477  000C5C  C17A  F12A         	movff	sprintf@fval+1,?___asftmul+3
  3478  000C60  C17B  F12B         	movff	sprintf@fval+2,?___asftmul+4
  3479  000C64  EC50  F031         	call	___asftmul	;wreg free
  3480                           
  3481                           ;doprnt.c: 857: if(integ < 1.0)
  3482  000C68  C16B  F100         	movff	sprintf@integ,?___ftge
  3483  000C6C  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  3484  000C70  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  3485  000C74  0E00               	movlw	0
  3486  000C76  0101               	movlb	1	; () banked
  3487  000C78  0101               	movlb	1	; () banked
  3488  000C7A  6F03               	movwf	(?___ftge+3)& (0+255),b
  3489  000C7C  0E80               	movlw	128
  3490  000C7E  0101               	movlb	1	; () banked
  3491  000C80  0101               	movlb	1	; () banked
  3492  000C82  6F04               	movwf	(?___ftge+4)& (0+255),b
  3493  000C84  0E3F               	movlw	63
  3494  000C86  0101               	movlb	1	; () banked
  3495  000C88  0101               	movlb	1	; () banked
  3496  000C8A  6F05               	movwf	(?___ftge+5)& (0+255),b
  3497  000C8C  EC48  F027         	call	___ftge	;wreg free
  3498  000C90  B0D8               	btfsc	status,0,c
  3499  000C92  D006               	goto	l10766
  3500                           
  3501                           ;doprnt.c: 858: exp--;
  3502  000C94  0101               	movlb	1	; () banked
  3503  000C96  0101               	movlb	1	; () banked
  3504  000C98  0775               	decf	sprintf@exp& (0+255),f,b
  3505  000C9A  A0D8               	btfss	status,0,c
  3506  000C9C  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  3507  000C9E  D01A               	goto	l10770
  3508  000CA0                     l10766:
  3509                           
  3510                           ;doprnt.c: 859: else if(integ >= 10.0)
  3511  000CA0  C16B  F100         	movff	sprintf@integ,?___ftge
  3512  000CA4  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  3513  000CA8  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  3514  000CAC  0E00               	movlw	0
  3515  000CAE  0101               	movlb	1	; () banked
  3516  000CB0  0101               	movlb	1	; () banked
  3517  000CB2  6F03               	movwf	(?___ftge+3)& (0+255),b
  3518  000CB4  0E20               	movlw	32
  3519  000CB6  0101               	movlb	1	; () banked
  3520  000CB8  0101               	movlb	1	; () banked
  3521  000CBA  6F04               	movwf	(?___ftge+4)& (0+255),b
  3522  000CBC  0E41               	movlw	65
  3523  000CBE  0101               	movlb	1	; () banked
  3524  000CC0  0101               	movlb	1	; () banked
  3525  000CC2  6F05               	movwf	(?___ftge+5)& (0+255),b
  3526  000CC4  EC48  F027         	call	___ftge	;wreg free
  3527  000CC8  A0D8               	btfss	status,0,c
  3528  000CCA  D004               	goto	l10770
  3529                           
  3530                           ;doprnt.c: 860: exp++;
  3531  000CCC  0101               	movlb	1	; () banked
  3532  000CCE  0101               	movlb	1	; () banked
  3533  000CD0  4B75               	infsnz	sprintf@exp& (0+255),f,b
  3534  000CD2  2B76               	incf	(sprintf@exp+1)& (0+255),f,b
  3535  000CD4                     l10770:
  3536                           
  3537                           ;doprnt.c: 861: }
  3538                           ;doprnt.c: 1121: if(prec <= 12)
  3539  000CD4  0101               	movlb	1	; () banked
  3540  000CD6  0101               	movlb	1	; () banked
  3541  000CD8  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3542  000CDA  0A80               	xorlw	128
  3543  000CDC  0F80               	addlw	-128
  3544  000CDE  0E0D               	movlw	13
  3545  000CE0  B4D8               	btfsc	status,2,c
  3546  000CE2  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3547  000CE4  B0D8               	btfsc	status,0,c
  3548  000CE6  D015               	goto	l10774
  3549                           
  3550                           ; BSR set to: 1
  3551                           ;doprnt.c: 1122: fval += fround(prec);
  3552  000CE8  0101               	movlb	1	; () banked
  3553  000CEA  0E01               	movlw	high sprintf@fval
  3554  000CEC  0101               	movlb	1	; () banked
  3555  000CEE  0101               	movlb	1	; () banked
  3556  000CF0  6F47               	movwf	(?___asftadd+1)& (0+255),b
  3557  000CF2  0101               	movlb	1	; () banked
  3558  000CF4  0E79               	movlw	low sprintf@fval
  3559  000CF6  0101               	movlb	1	; () banked
  3560  000CF8  6F46               	movwf	?___asftadd& (0+255),b
  3561  000CFA  C17C  F127         	movff	sprintf@prec,?_fround
  3562  000CFE  EC3C  F017         	call	_fround	;wreg free
  3563  000D02  C129  F14A         	movff	?_fround+2,?___asftadd+4
  3564  000D06  C128  F149         	movff	?_fround+1,?___asftadd+3
  3565  000D0A  C127  F148         	movff	?_fround,?___asftadd+2
  3566  000D0E  EC71  F031         	call	___asftadd	;wreg free
  3567  000D12                     l10774:
  3568                           
  3569                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3570  000D12  0101               	movlb	1	; () banked
  3571  000D14  0101               	movlb	1	; () banked
  3572  000D16  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  3573  000D18  0A80               	xorlw	128
  3574  000D1A  0F80               	addlw	-128
  3575  000D1C  0E0A               	movlw	10
  3576  000D1E  B4D8               	btfsc	status,2,c
  3577  000D20  5D75               	subwf	sprintf@exp& (0+255),w,b
  3578  000D22  B0D8               	btfsc	status,0,c
  3579  000D24  D024               	goto	l10782
  3580                           
  3581                           ; BSR set to: 1
  3582  000D26  0E7F               	movlw	127
  3583  000D28  0101               	movlb	1	; () banked
  3584  000D2A  0101               	movlb	1	; () banked
  3585  000D2C  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  3586  000D2E  0101               	movlb	1	; () banked
  3587  000D30  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3588  000D32  0101               	movlb	1	; () banked
  3589  000D34  1179               	iorwf	sprintf@fval& (0+255),w,b
  3590  000D36  B4D8               	btfsc	status,2,c
  3591  000D38  D06F               	goto	l10798
  3592                           
  3593                           ; BSR set to: 1
  3594  000D3A  C179  F133         	movff	sprintf@fval,?___fttol
  3595  000D3E  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  3596  000D42  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  3597  000D46  EC70  F021         	call	___fttol	;wreg free
  3598  000D4A  0101               	movlb	1	; () banked
  3599  000D4C  0101               	movlb	1	; () banked
  3600  000D4E  5136               	movf	(?___fttol+3)& (0+255),w,b
  3601  000D50  1133               	iorwf	?___fttol& (0+255),w,b
  3602  000D52  1134               	iorwf	(?___fttol+1)& (0+255),w,b
  3603  000D54  1135               	iorwf	(?___fttol+2)& (0+255),w,b
  3604  000D56  A4D8               	btfss	status,2,c
  3605  000D58  D05F               	goto	l10798
  3606                           
  3607                           ; BSR set to: 1
  3608  000D5A  0101               	movlb	1	; () banked
  3609  000D5C  0101               	movlb	1	; () banked
  3610  000D5E  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  3611  000D60  0A80               	xorlw	128
  3612  000D62  0F80               	addlw	-128
  3613  000D64  0E02               	movlw	2
  3614  000D66  B4D8               	btfsc	status,2,c
  3615  000D68  5D75               	subwf	sprintf@exp& (0+255),w,b
  3616  000D6A  A0D8               	btfss	status,0,c
  3617  000D6C  D055               	goto	l10798
  3618  000D6E                     l10782:
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;doprnt.c: 1129: if(integ < 4.294967296){
  3622  000D6E  C16B  F100         	movff	sprintf@integ,?___ftge
  3623  000D72  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  3624  000D76  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  3625  000D7A  0E70               	movlw	112
  3626  000D7C  0101               	movlb	1	; () banked
  3627  000D7E  0101               	movlb	1	; () banked
  3628  000D80  6F03               	movwf	(?___ftge+3)& (0+255),b
  3629  000D82  0E89               	movlw	137
  3630  000D84  0101               	movlb	1	; () banked
  3631  000D86  0101               	movlb	1	; () banked
  3632  000D88  6F04               	movwf	(?___ftge+4)& (0+255),b
  3633  000D8A  0E40               	movlw	64
  3634  000D8C  0101               	movlb	1	; () banked
  3635  000D8E  0101               	movlb	1	; () banked
  3636  000D90  6F05               	movwf	(?___ftge+5)& (0+255),b
  3637  000D92  EC48  F027         	call	___ftge	;wreg free
  3638  000D96  B0D8               	btfsc	status,0,c
  3639  000D98  D003               	goto	l10786
  3640                           
  3641                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3642  000D9A  0101               	movlb	1	; () banked
  3643  000D9C  0EF7               	movlw	247
  3644  000D9E  D002               	goto	L3
  3645  000DA0                     l10786:
  3646                           
  3647                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3648  000DA0  0101               	movlb	1	; () banked
  3649  000DA2  0EF8               	movlw	248
  3650  000DA4                     L3:
  3651  000DA4  0101               	movlb	1	; () banked
  3652  000DA6  2775               	addwf	sprintf@exp& (0+255),f,b
  3653  000DA8  0EFF               	movlw	255
  3654  000DAA  0101               	movlb	1	; () banked
  3655  000DAC  2376               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3656                           
  3657                           ; BSR set to: 1
  3658                           ;doprnt.c: 1133: }
  3659                           ;doprnt.c: 1134: integ = scale(exp);
  3660                           
  3661                           ; BSR set to: 1
  3662  000DAE  C175  F127         	movff	sprintf@exp,?_scale
  3663  000DB2  EC0A  F012         	call	_scale	;wreg free
  3664  000DB6  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  3665  000DBA  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  3666  000DBE  C127  F16B         	movff	?_scale,sprintf@integ
  3667                           
  3668                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  3669  000DC2  C179  F100         	movff	sprintf@fval,?__tdiv_to_l_
  3670  000DC6  C17A  F101         	movff	sprintf@fval+1,?__tdiv_to_l_+1
  3671  000DCA  C17B  F102         	movff	sprintf@fval+2,?__tdiv_to_l_+2
  3672  000DCE  C16B  F103         	movff	sprintf@integ,?__tdiv_to_l_+3
  3673  000DD2  C16C  F104         	movff	sprintf@integ+1,?__tdiv_to_l_+4
  3674  000DD6  C16D  F105         	movff	sprintf@integ+2,?__tdiv_to_l_+5
  3675  000DDA  ECD9  F01B         	call	__tdiv_to_l_	;wreg free
  3676  000DDE  C103  F164         	movff	?__tdiv_to_l_+3,_sprintf$723+3
  3677  000DE2  C102  F163         	movff	?__tdiv_to_l_+2,_sprintf$723+2
  3678  000DE6  C101  F162         	movff	?__tdiv_to_l_+1,_sprintf$723+1
  3679  000DEA  C100  F161         	movff	?__tdiv_to_l_,_sprintf$723
  3680  000DEE  C161  F16E         	movff	_sprintf$723,sprintf@_val
  3681  000DF2  C162  F16F         	movff	_sprintf$723+1,sprintf@_val+1
  3682  000DF6  C163  F170         	movff	_sprintf$723+2,sprintf@_val+2
  3683  000DFA  C164  F171         	movff	_sprintf$723+3,sprintf@_val+3
  3684                           
  3685                           ;doprnt.c: 1138: fval = 0.0;
  3686  000DFE  0E00               	movlw	0
  3687  000E00  0101               	movlb	1	; () banked
  3688  000E02  0101               	movlb	1	; () banked
  3689  000E04  6F79               	movwf	sprintf@fval& (0+255),b
  3690  000E06  0E00               	movlw	0
  3691  000E08  0101               	movlb	1	; () banked
  3692  000E0A  0101               	movlb	1	; () banked
  3693  000E0C  6F7A               	movwf	(sprintf@fval+1)& (0+255),b
  3694  000E0E  0E00               	movlw	0
  3695  000E10  0101               	movlb	1	; () banked
  3696  000E12  0101               	movlb	1	; () banked
  3697  000E14  6F7B               	movwf	(sprintf@fval+2)& (0+255),b
  3698                           
  3699                           ;doprnt.c: 1139: } else {
  3700  000E16  D032               	goto	l10804
  3701  000E18                     l10798:
  3702                           
  3703                           ; BSR set to: 1
  3704                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  3705  000E18  C179  F133         	movff	sprintf@fval,?___fttol
  3706  000E1C  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  3707  000E20  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  3708  000E24  EC70  F021         	call	___fttol	;wreg free
  3709  000E28  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  3710  000E2C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  3711  000E30  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  3712  000E34  C133  F16E         	movff	?___fttol,sprintf@_val
  3713                           
  3714                           ;doprnt.c: 1141: fval -= (double)_val._val;
  3715  000E38  0101               	movlb	1	; () banked
  3716  000E3A  0E01               	movlw	high sprintf@fval
  3717  000E3C  0101               	movlb	1	; () banked
  3718  000E3E  0101               	movlb	1	; () banked
  3719  000E40  6F4D               	movwf	(?___asftsub+1)& (0+255),b
  3720  000E42  0101               	movlb	1	; () banked
  3721  000E44  0E79               	movlw	low sprintf@fval
  3722  000E46  0101               	movlb	1	; () banked
  3723  000E48  6F4C               	movwf	?___asftsub& (0+255),b
  3724  000E4A  C16E  F108         	movff	sprintf@_val,?___lltoft
  3725  000E4E  C16F  F109         	movff	sprintf@_val+1,?___lltoft+1
  3726  000E52  C170  F10A         	movff	sprintf@_val+2,?___lltoft+2
  3727  000E56  C171  F10B         	movff	sprintf@_val+3,?___lltoft+3
  3728  000E5A  ECD0  F02B         	call	___lltoft	;wreg free
  3729  000E5E  C10A  F150         	movff	?___lltoft+2,?___asftsub+4
  3730  000E62  C109  F14F         	movff	?___lltoft+1,?___asftsub+3
  3731  000E66  C108  F14E         	movff	?___lltoft,?___asftsub+2
  3732  000E6A  EC0E  F031         	call	___asftsub	;wreg free
  3733                           
  3734                           ;doprnt.c: 1142: exp = 0;
  3735  000E6E  0E00               	movlw	0
  3736  000E70  0101               	movlb	1	; () banked
  3737  000E72  0101               	movlb	1	; () banked
  3738  000E74  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  3739  000E76  0E00               	movlw	0
  3740  000E78  0101               	movlb	1	; () banked
  3741  000E7A  6F75               	movwf	sprintf@exp& (0+255),b
  3742  000E7C                     l10804:
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;doprnt.c: 1143: }
  3746                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3747  000E7C  0101               	movlb	1	; () banked
  3748  000E7E  6F58               	movwf	??_sprintf& (0+255),b
  3749  000E80  0E01               	movlw	1
  3750  000E82  0101               	movlb	1	; () banked
  3751  000E84  0101               	movlb	1	; () banked
  3752  000E86  6F7E               	movwf	sprintf@c& (0+255),b
  3753  000E88  0101               	movlb	1	; () banked
  3754  000E8A  5158               	movf	??_sprintf& (0+255),w,b
  3755  000E8C                     
  3756                           ; BSR set to: 1
  3757  000E8C  0101               	movlb	1	; () banked
  3758  000E8E  0101               	movlb	1	; () banked
  3759  000E90  517E               	movf	sprintf@c& (0+255),w,b
  3760  000E92  0A0A               	xorlw	10
  3761  000E94  B4D8               	btfsc	status,2,c
  3762  000E96  D021               	goto	l10818
  3763                           
  3764                           ; BSR set to: 1
  3765                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  3766                           
  3767                           ; BSR set to: 1
  3768                           
  3769                           ; BSR set to: 1
  3770  000E98  0101               	movlb	1	; () banked
  3771  000E9A  0101               	movlb	1	; () banked
  3772  000E9C  517E               	movf	sprintf@c& (0+255),w,b
  3773  000E9E  0D04               	mullw	4
  3774  000EA0  0E00               	movlw	low _dpowers
  3775  000EA2  24F3               	addwf	prodl,w,c
  3776  000EA4  6EF6               	movwf	tblptrl,c
  3777  000EA6  0E08               	movlw	high _dpowers
  3778  000EA8  20F4               	addwfc	prodh,w,c
  3779  000EAA  6EF7               	movwf	tblptrh,c
  3780  000EAC  0009               	tblrd		*+
  3781  000EAE  50F5               	movf	tablat,w,c
  3782  000EB0  0101               	movlb	1	; () banked
  3783  000EB2  0101               	movlb	1	; () banked
  3784  000EB4  5D6E               	subwf	sprintf@_val& (0+255),w,b
  3785  000EB6  0009               	tblrd		*+
  3786  000EB8  50F5               	movf	tablat,w,c
  3787  000EBA  0101               	movlb	1	; () banked
  3788  000EBC  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3789  000EBE  0009               	tblrd		*+
  3790  000EC0  50F5               	movf	tablat,w,c
  3791  000EC2  0101               	movlb	1	; () banked
  3792  000EC4  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3793  000EC6  0009               	tblrd		*+
  3794  000EC8  50F5               	movf	tablat,w,c
  3795  000ECA  0101               	movlb	1	; () banked
  3796  000ECC  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3797  000ECE  A0D8               	btfss	status,0,c
  3798  000ED0  D004               	goto	l10818
  3799                           
  3800                           ; BSR set to: 1
  3801                           
  3802                           ; BSR set to: 1
  3803                           
  3804                           ; BSR set to: 1
  3805                           ;doprnt.c: 1147: break;
  3806  000ED2  0101               	movlb	1	; () banked
  3807  000ED4  0101               	movlb	1	; () banked
  3808  000ED6  2B7E               	incf	sprintf@c& (0+255),f,b
  3809  000ED8  D7D9               	goto	L4
  3810  000EDA                     l10818:
  3811                           
  3812                           ; BSR set to: 1
  3813                           ;doprnt.c: 1151: width -= prec + c + exp;
  3814  000EDA  0101               	movlb	1	; () banked
  3815  000EDC  C17E  F158         	movff	sprintf@c,??_sprintf
  3816  000EE0  0101               	movlb	1	; () banked
  3817  000EE2  6B59               	clrf	(??_sprintf+1)& (0+255),b
  3818  000EE4  BF58               	btfsc	??_sprintf& (0+255),7,b
  3819  000EE6  0759               	decf	(??_sprintf+1)& (0+255),f,b
  3820  000EE8  0101               	movlb	1	; () banked
  3821  000EEA  0101               	movlb	1	; () banked
  3822  000EEC  517C               	movf	sprintf@prec& (0+255),w,b
  3823  000EEE  0101               	movlb	1	; () banked
  3824  000EF0  2758               	addwf	??_sprintf& (0+255),f,b
  3825  000EF2  0101               	movlb	1	; () banked
  3826  000EF4  0101               	movlb	1	; () banked
  3827  000EF6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3828  000EF8  0101               	movlb	1	; () banked
  3829  000EFA  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  3830  000EFC  0101               	movlb	1	; () banked
  3831  000EFE  0101               	movlb	1	; () banked
  3832  000F00  5175               	movf	sprintf@exp& (0+255),w,b
  3833  000F02  0101               	movlb	1	; () banked
  3834  000F04  2758               	addwf	??_sprintf& (0+255),f,b
  3835  000F06  0101               	movlb	1	; () banked
  3836  000F08  0101               	movlb	1	; () banked
  3837  000F0A  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  3838  000F0C  0101               	movlb	1	; () banked
  3839  000F0E  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  3840  000F10  0101               	movlb	1	; () banked
  3841  000F12  5158               	movf	??_sprintf& (0+255),w,b
  3842  000F14  0101               	movlb	1	; () banked
  3843  000F16  0101               	movlb	1	; () banked
  3844  000F18  5F77               	subwf	sprintf@width& (0+255),f,b
  3845  000F1A  0101               	movlb	1	; () banked
  3846  000F1C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3847  000F1E  0101               	movlb	1	; () banked
  3848  000F20  0101               	movlb	1	; () banked
  3849  000F22  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  3850                           
  3851                           ;doprnt.c: 1152: if(
  3852                           ;doprnt.c: 1156: prec)
  3853  000F24  0101               	movlb	1	; () banked
  3854  000F26  0101               	movlb	1	; () banked
  3855  000F28  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3856  000F2A  117C               	iorwf	sprintf@prec& (0+255),w,b
  3857  000F2C  B4D8               	btfsc	status,2,c
  3858  000F2E  D005               	goto	l10822
  3859                           
  3860                           ; BSR set to: 1
  3861                           ;doprnt.c: 1157: width--;
  3862  000F30  0101               	movlb	1	; () banked
  3863  000F32  0101               	movlb	1	; () banked
  3864  000F34  0777               	decf	sprintf@width& (0+255),f,b
  3865  000F36  A0D8               	btfss	status,0,c
  3866  000F38  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3867  000F3A                     l10822:
  3868                           
  3869                           ; BSR set to: 1
  3870                           ;doprnt.c: 1158: if(flag & 0x03)
  3871  000F3A  0E03               	movlw	3
  3872  000F3C  0101               	movlb	1	; () banked
  3873  000F3E  0101               	movlb	1	; () banked
  3874  000F40  1573               	andwf	sprintf@flag& (0+255),w,b
  3875  000F42  0101               	movlb	1	; () banked
  3876  000F44  6F58               	movwf	??_sprintf& (0+255),b
  3877  000F46  0E00               	movlw	0
  3878  000F48  0101               	movlb	1	; () banked
  3879  000F4A  0101               	movlb	1	; () banked
  3880  000F4C  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3881  000F4E  0101               	movlb	1	; () banked
  3882  000F50  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3883  000F52  0101               	movlb	1	; () banked
  3884  000F54  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3885  000F56  1158               	iorwf	??_sprintf& (0+255),w,b
  3886  000F58  B4D8               	btfsc	status,2,c
  3887  000F5A  D005               	goto	l10826
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;doprnt.c: 1159: width--;
  3891  000F5C  0101               	movlb	1	; () banked
  3892  000F5E  0101               	movlb	1	; () banked
  3893  000F60  0777               	decf	sprintf@width& (0+255),f,b
  3894  000F62  A0D8               	btfss	status,0,c
  3895  000F64  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3896  000F66                     l10826:
  3897                           
  3898                           ; BSR set to: 1
  3899                           ;doprnt.c: 1162: if(flag & 0x04) {
  3900  000F66  0101               	movlb	1	; () banked
  3901  000F68  0101               	movlb	1	; () banked
  3902  000F6A  B573               	btfsc	sprintf@flag& (0+255),2,b
  3903  000F6C  D010               	goto	l10836
  3904  000F6E  D029               	goto	l10844
  3905  000F70                     l10830:
  3906                           
  3907                           ; BSR set to: 1
  3908                           ;doprnt.c: 1176: ((*sp++ = ('0')));
  3909  000F70  C151  FFD9         	movff	sprintf@sp,fsr2l
  3910  000F74  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3911  000F78  0E30               	movlw	48
  3912  000F7A  6EDF               	movwf	indf2,c
  3913                           
  3914                           ; BSR set to: 1
  3915  000F7C  0101               	movlb	1	; () banked
  3916  000F7E  0101               	movlb	1	; () banked
  3917  000F80  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3918  000F82  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3919                           
  3920                           ; BSR set to: 1
  3921                           ;doprnt.c: 1177: width--;
  3922  000F84  0101               	movlb	1	; () banked
  3923  000F86  0101               	movlb	1	; () banked
  3924  000F88  0777               	decf	sprintf@width& (0+255),f,b
  3925  000F8A  A0D8               	btfss	status,0,c
  3926  000F8C  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3927  000F8E                     l10836:
  3928                           
  3929                           ; BSR set to: 1
  3930  000F8E  0101               	movlb	1	; () banked
  3931  000F90  0101               	movlb	1	; () banked
  3932  000F92  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3933  000F94  0A80               	xorlw	128
  3934  000F96  0F80               	addlw	-128
  3935  000F98  0E01               	movlw	1
  3936  000F9A  B4D8               	btfsc	status,2,c
  3937  000F9C  5D77               	subwf	sprintf@width& (0+255),w,b
  3938  000F9E  A0D8               	btfss	status,0,c
  3939  000FA0  D079               	goto	l10860
  3940  000FA2  D7E6               	goto	l10830
  3941  000FA4                     l10838:
  3942                           
  3943                           ; BSR set to: 1
  3944                           ;doprnt.c: 1188: ((*sp++ = (' ')));
  3945  000FA4  C151  FFD9         	movff	sprintf@sp,fsr2l
  3946  000FA8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3947  000FAC  0E20               	movlw	32
  3948  000FAE  6EDF               	movwf	indf2,c
  3949                           
  3950                           ; BSR set to: 1
  3951  000FB0  0101               	movlb	1	; () banked
  3952  000FB2  0101               	movlb	1	; () banked
  3953  000FB4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3954  000FB6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3955                           
  3956                           ; BSR set to: 1
  3957                           ;doprnt.c: 1189: width--;
  3958  000FB8  0101               	movlb	1	; () banked
  3959  000FBA  0101               	movlb	1	; () banked
  3960  000FBC  0777               	decf	sprintf@width& (0+255),f,b
  3961  000FBE  A0D8               	btfss	status,0,c
  3962  000FC0  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3963  000FC2                     l10844:
  3964                           
  3965                           ; BSR set to: 1
  3966  000FC2  0101               	movlb	1	; () banked
  3967  000FC4  0101               	movlb	1	; () banked
  3968  000FC6  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3969  000FC8  0A80               	xorlw	128
  3970  000FCA  0F80               	addlw	-128
  3971  000FCC  0E01               	movlw	1
  3972  000FCE  B4D8               	btfsc	status,2,c
  3973  000FD0  5D77               	subwf	sprintf@width& (0+255),w,b
  3974  000FD2  B0D8               	btfsc	status,0,c
  3975  000FD4  D7E7               	goto	l10838
  3976                           
  3977                           ; BSR set to: 1
  3978                           ;doprnt.c: 1190: }
  3979                           ;doprnt.c: 1195: if(flag & 0x03)
  3980                           
  3981                           ; BSR set to: 1
  3982  000FD6  0E03               	movlw	3
  3983  000FD8  0101               	movlb	1	; () banked
  3984  000FDA  0101               	movlb	1	; () banked
  3985  000FDC  1573               	andwf	sprintf@flag& (0+255),w,b
  3986  000FDE  0101               	movlb	1	; () banked
  3987  000FE0  6F58               	movwf	??_sprintf& (0+255),b
  3988  000FE2  0E00               	movlw	0
  3989  000FE4  0101               	movlb	1	; () banked
  3990  000FE6  0101               	movlb	1	; () banked
  3991  000FE8  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3992  000FEA  0101               	movlb	1	; () banked
  3993  000FEC  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3994  000FEE  0101               	movlb	1	; () banked
  3995  000FF0  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3996  000FF2  1158               	iorwf	??_sprintf& (0+255),w,b
  3997  000FF4  B4D8               	btfsc	status,2,c
  3998  000FF6  D04E               	goto	l10860
  3999                           
  4000                           ; BSR set to: 1
  4001                           ;doprnt.c: 1197: ((*sp++ = ('-')));
  4002  000FF8  C151  FFD9         	movff	sprintf@sp,fsr2l
  4003  000FFC  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4004  001000  0E2D               	movlw	45
  4005  001002  D043               	goto	L5
  4006  001004                     l10852:
  4007                           
  4008                           ; BSR set to: 1
  4009                           ;doprnt.c: 1207: {
  4010                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
  4011  001004  C16E  F100         	movff	sprintf@_val,?___lldiv
  4012  001008  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  4013  00100C  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  4014  001010  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  4015  001014  0101               	movlb	1	; () banked
  4016  001016  0101               	movlb	1	; () banked
  4017  001018  517E               	movf	sprintf@c& (0+255),w,b
  4018  00101A  0D04               	mullw	4
  4019  00101C  0E00               	movlw	low _dpowers
  4020  00101E  24F3               	addwf	prodl,w,c
  4021  001020  6EF6               	movwf	tblptrl,c
  4022  001022  0E08               	movlw	high _dpowers
  4023  001024  20F4               	addwfc	prodh,w,c
  4024  001026  6EF7               	movwf	tblptrh,c
  4025  001028  0009               	tblrd		*+
  4026  00102A  0101               	movlb	1	; () banked
  4027  00102C  CFF5 F104          	movff	tablat,?___lldiv+4
  4028  001030  0009               	tblrd		*+
  4029  001032  0101               	movlb	1	; () banked
  4030  001034  CFF5 F105          	movff	tablat,?___lldiv+5
  4031  001038  0009               	tblrd		*+
  4032  00103A  0101               	movlb	1	; () banked
  4033  00103C  CFF5 F106          	movff	tablat,?___lldiv+6
  4034  001040  000A               	tblrd		*-
  4035  001042  0101               	movlb	1	; () banked
  4036  001044  CFF5 F107          	movff	tablat,?___lldiv+7
  4037  001048  EC42  F026         	call	___lldiv	;wreg free
  4038  00104C  C100  F165         	movff	?___lldiv,sprintf@vd
  4039  001050  C101  F166         	movff	?___lldiv+1,sprintf@vd+1
  4040                           
  4041                           ;doprnt.c: 1209: vd %= 10;
  4042  001054  C165  F100         	movff	sprintf@vd,?___lwmod
  4043  001058  C166  F101         	movff	sprintf@vd+1,?___lwmod+1
  4044  00105C  0E00               	movlw	0
  4045  00105E  0101               	movlb	1	; () banked
  4046  001060  0101               	movlb	1	; () banked
  4047  001062  6F03               	movwf	(?___lwmod+3)& (0+255),b
  4048  001064  0E0A               	movlw	10
  4049  001066  0101               	movlb	1	; () banked
  4050  001068  6F02               	movwf	(?___lwmod+2)& (0+255),b
  4051  00106A  ECF5  F02C         	call	___lwmod	;wreg free
  4052  00106E  0101               	movlb	1	; () banked
  4053  001070  C100  F165         	movff	?___lwmod,sprintf@vd
  4054  001074  0101               	movlb	1	; () banked
  4055  001076  C101  F166         	movff	?___lwmod+1,sprintf@vd+1
  4056                           
  4057                           ; BSR set to: 1
  4058                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
  4059  00107A  0101               	movlb	1	; () banked
  4060  00107C  0101               	movlb	1	; () banked
  4061  00107E  5165               	movf	sprintf@vd& (0+255),w,b
  4062  001080  0F30               	addlw	48
  4063  001082  C151  FFD9         	movff	sprintf@sp,fsr2l
  4064  001086  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4065  00108A                     L5:
  4066  00108A  6EDF               	movwf	indf2,c
  4067                           
  4068                           ; BSR set to: 1
  4069  00108C  0101               	movlb	1	; () banked
  4070  00108E  0101               	movlb	1	; () banked
  4071  001090  4B51               	infsnz	sprintf@sp& (0+255),f,b
  4072  001092  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  4073  001094                     l10860:
  4074                           
  4075                           ; BSR set to: 1
  4076  001094  0101               	movlb	1	; () banked
  4077  001096  0101               	movlb	1	; () banked
  4078  001098  077E               	decf	sprintf@c& (0+255),f,b
  4079  00109A  0101               	movlb	1	; () banked
  4080  00109C  297E               	incf	sprintf@c& (0+255),w,b
  4081  00109E  B4D8               	btfsc	status,2,c
  4082  0010A0  D010               	goto	l10868
  4083  0010A2  D7B0               	goto	l10852
  4084  0010A4                     l10862:
  4085                           
  4086                           ; BSR set to: 1
  4087                           ;doprnt.c: 1215: ((*sp++ = ('0')));
  4088  0010A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  4089  0010A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4090  0010AC  0E30               	movlw	48
  4091  0010AE  6EDF               	movwf	indf2,c
  4092                           
  4093                           ; BSR set to: 1
  4094  0010B0  0101               	movlb	1	; () banked
  4095  0010B2  0101               	movlb	1	; () banked
  4096  0010B4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  4097  0010B6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  4098                           
  4099                           ; BSR set to: 1
  4100                           ;doprnt.c: 1216: exp--;
  4101  0010B8  0101               	movlb	1	; () banked
  4102  0010BA  0101               	movlb	1	; () banked
  4103  0010BC  0775               	decf	sprintf@exp& (0+255),f,b
  4104  0010BE  A0D8               	btfss	status,0,c
  4105  0010C0  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  4106  0010C2                     l10868:
  4107                           
  4108                           ; BSR set to: 1
  4109  0010C2  0101               	movlb	1	; () banked
  4110  0010C4  0101               	movlb	1	; () banked
  4111  0010C6  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  4112  0010C8  0A80               	xorlw	128
  4113  0010CA  0F80               	addlw	-128
  4114  0010CC  0E01               	movlw	1
  4115  0010CE  B4D8               	btfsc	status,2,c
  4116  0010D0  5D75               	subwf	sprintf@exp& (0+255),w,b
  4117  0010D2  B0D8               	btfsc	status,0,c
  4118  0010D4  D7E7               	goto	l10862
  4119                           
  4120                           ; BSR set to: 1
  4121                           ;doprnt.c: 1217: }
  4122                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4123                           
  4124                           ; BSR set to: 1
  4125  0010D6  0101               	movlb	1	; () banked
  4126  0010D8  0101               	movlb	1	; () banked
  4127  0010DA  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  4128  0010DC  0A80               	xorlw	128
  4129  0010DE  0F80               	addlw	-128
  4130  0010E0  0E09               	movlw	9
  4131  0010E2  B4D8               	btfsc	status,2,c
  4132  0010E4  5D7C               	subwf	sprintf@prec& (0+255),w,b
  4133  0010E6  A0D8               	btfss	status,0,c
  4134  0010E8  D009               	goto	l368
  4135                           
  4136                           ; BSR set to: 1
  4137                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4138  0010EA  0101               	movlb	1	; () banked
  4139  0010EC  6F58               	movwf	??_sprintf& (0+255),b
  4140  0010EE  0E08               	movlw	8
  4141  0010F0  0101               	movlb	1	; () banked
  4142  0010F2  0101               	movlb	1	; () banked
  4143  0010F4  6F7E               	movwf	sprintf@c& (0+255),b
  4144  0010F6  0101               	movlb	1	; () banked
  4145  0010F8  5158               	movf	??_sprintf& (0+255),w,b
  4146  0010FA  D002               	goto	l10874
  4147  0010FC                     l368:
  4148                           
  4149                           ; BSR set to: 1
  4150                           ;doprnt.c: 1220: else
  4151                           ;doprnt.c: 1221: c = prec;
  4152  0010FC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  4153  001100                     l10874:
  4154                           
  4155                           ; BSR set to: 1
  4156                           ;doprnt.c: 1222: prec -= c;
  4157  001100  0101               	movlb	1	; () banked
  4158  001102  0101               	movlb	1	; () banked
  4159  001104  517E               	movf	sprintf@c& (0+255),w,b
  4160  001106  0101               	movlb	1	; () banked
  4161  001108  0101               	movlb	1	; () banked
  4162  00110A  5F7C               	subwf	sprintf@prec& (0+255),f,b
  4163  00110C  0E00               	movlw	0
  4164  00110E  0101               	movlb	1	; () banked
  4165  001110  BF7E               	btfsc	sprintf@c& (0+255),7,b
  4166  001112  0EFF               	movlw	255
  4167  001114  0101               	movlb	1	; () banked
  4168  001116  0101               	movlb	1	; () banked
  4169  001118  5B7D               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4170                           
  4171                           ; BSR set to: 1
  4172                           ;doprnt.c: 1226: if(c)
  4173  00111A  0101               	movlb	1	; () banked
  4174  00111C  0101               	movlb	1	; () banked
  4175  00111E  517E               	movf	sprintf@c& (0+255),w,b
  4176  001120  B4D8               	btfsc	status,2,c
  4177  001122  D00A               	goto	l10882
  4178                           
  4179                           ; BSR set to: 1
  4180                           ;doprnt.c: 1228: ((*sp++ = ('.')));
  4181  001124  C151  FFD9         	movff	sprintf@sp,fsr2l
  4182  001128  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4183  00112C  0E2E               	movlw	46
  4184  00112E  6EDF               	movwf	indf2,c
  4185                           
  4186                           ; BSR set to: 1
  4187  001130  0101               	movlb	1	; () banked
  4188  001132  0101               	movlb	1	; () banked
  4189  001134  4B51               	infsnz	sprintf@sp& (0+255),f,b
  4190  001136  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  4191  001138                     l10882:
  4192                           
  4193                           ; BSR set to: 1
  4194                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  4195  001138  C17E  F127         	movff	sprintf@c,?_scale
  4196  00113C  EC0A  F012         	call	_scale	;wreg free
  4197  001140  C129  F160         	movff	?_scale+2,_sprintf$1356+2
  4198  001144  C128  F15F         	movff	?_scale+1,_sprintf$1356+1
  4199  001148  C127  F15E         	movff	?_scale,_sprintf$1356
  4200                           
  4201                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  4202  00114C  C179  F119         	movff	sprintf@fval,?___ftmul+3
  4203  001150  C17A  F11A         	movff	sprintf@fval+1,?___ftmul+4
  4204  001154  C17B  F11B         	movff	sprintf@fval+2,?___ftmul+5
  4205  001158  C15E  F116         	movff	_sprintf$1356,?___ftmul
  4206  00115C  C15F  F117         	movff	_sprintf$1356+1,?___ftmul+1
  4207  001160  C160  F118         	movff	_sprintf$1356+2,?___ftmul+2
  4208  001164  ECE1  F01C         	call	___ftmul	;wreg free
  4209  001168  C118  F135         	movff	?___ftmul+2,?___fttol+2
  4210  00116C  C117  F134         	movff	?___ftmul+1,?___fttol+1
  4211  001170  C116  F133         	movff	?___ftmul,?___fttol
  4212  001174  EC70  F021         	call	___fttol	;wreg free
  4213  001178  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  4214  00117C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  4215  001180  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  4216  001184  C133  F16E         	movff	?___fttol,sprintf@_val
  4217                           
  4218                           ;doprnt.c: 1235: while(c--) {
  4219  001188  D074               	goto	l10896
  4220  00118A                     l10886:
  4221                           
  4222                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
  4223  00118A  C16E  F100         	movff	sprintf@_val,?___lldiv
  4224  00118E  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  4225  001192  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  4226  001196  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  4227  00119A  0101               	movlb	1	; () banked
  4228  00119C  0101               	movlb	1	; () banked
  4229  00119E  517E               	movf	sprintf@c& (0+255),w,b
  4230  0011A0  0D04               	mullw	4
  4231  0011A2  0E00               	movlw	low _dpowers
  4232  0011A4  24F3               	addwf	prodl,w,c
  4233  0011A6  6EF6               	movwf	tblptrl,c
  4234  0011A8  0E08               	movlw	high _dpowers
  4235  0011AA  20F4               	addwfc	prodh,w,c
  4236  0011AC  6EF7               	movwf	tblptrh,c
  4237  0011AE  0009               	tblrd		*+
  4238  0011B0  0101               	movlb	1	; () banked
  4239  0011B2  CFF5 F104          	movff	tablat,?___lldiv+4
  4240  0011B6  0009               	tblrd		*+
  4241  0011B8  0101               	movlb	1	; () banked
  4242  0011BA  CFF5 F105          	movff	tablat,?___lldiv+5
  4243  0011BE  0009               	tblrd		*+
  4244  0011C0  0101               	movlb	1	; () banked
  4245  0011C2  CFF5 F106          	movff	tablat,?___lldiv+6
  4246  0011C6  000A               	tblrd		*-
  4247  0011C8  0101               	movlb	1	; () banked
  4248  0011CA  CFF5 F107          	movff	tablat,?___lldiv+7
  4249  0011CE  EC42  F026         	call	___lldiv	;wreg free
  4250  0011D2  C100  F167         	movff	?___lldiv,sprintf@vd_725
  4251  0011D6  C101  F168         	movff	?___lldiv+1,sprintf@vd_725+1
  4252                           
  4253                           ;doprnt.c: 1237: vd %= 10;
  4254  0011DA  C167  F100         	movff	sprintf@vd_725,?___lwmod
  4255  0011DE  C168  F101         	movff	sprintf@vd_725+1,?___lwmod+1
  4256  0011E2  0E00               	movlw	0
  4257  0011E4  0101               	movlb	1	; () banked
  4258  0011E6  0101               	movlb	1	; () banked
  4259  0011E8  6F03               	movwf	(?___lwmod+3)& (0+255),b
  4260  0011EA  0E0A               	movlw	10
  4261  0011EC  0101               	movlb	1	; () banked
  4262  0011EE  6F02               	movwf	(?___lwmod+2)& (0+255),b
  4263  0011F0  ECF5  F02C         	call	___lwmod	;wreg free
  4264  0011F4  0101               	movlb	1	; () banked
  4265  0011F6  C100  F167         	movff	?___lwmod,sprintf@vd_725
  4266  0011FA  0101               	movlb	1	; () banked
  4267  0011FC  C101  F168         	movff	?___lwmod+1,sprintf@vd_725+1
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
  4271  001200  0101               	movlb	1	; () banked
  4272  001202  0101               	movlb	1	; () banked
  4273  001204  5167               	movf	sprintf@vd_725& (0+255),w,b
  4274  001206  0F30               	addlw	48
  4275  001208  C151  FFD9         	movff	sprintf@sp,fsr2l
  4276  00120C  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4277  001210  6EDF               	movwf	indf2,c
  4278                           
  4279                           ; BSR set to: 1
  4280  001212  0101               	movlb	1	; () banked
  4281  001214  0101               	movlb	1	; () banked
  4282  001216  4B51               	infsnz	sprintf@sp& (0+255),f,b
  4283  001218  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  4284                           
  4285                           ; BSR set to: 1
  4286                           ;doprnt.c: 1239: _val._val %= dpowers[c];
  4287  00121A  C16E  F10E         	movff	sprintf@_val,?___llmod
  4288  00121E  C16F  F10F         	movff	sprintf@_val+1,?___llmod+1
  4289  001222  C170  F110         	movff	sprintf@_val+2,?___llmod+2
  4290  001226  C171  F111         	movff	sprintf@_val+3,?___llmod+3
  4291  00122A  0101               	movlb	1	; () banked
  4292  00122C  0101               	movlb	1	; () banked
  4293  00122E  517E               	movf	sprintf@c& (0+255),w,b
  4294  001230  0D04               	mullw	4
  4295  001232  0E00               	movlw	low _dpowers
  4296  001234  24F3               	addwf	prodl,w,c
  4297  001236  6EF6               	movwf	tblptrl,c
  4298  001238  0E08               	movlw	high _dpowers
  4299  00123A  20F4               	addwfc	prodh,w,c
  4300  00123C  6EF7               	movwf	tblptrh,c
  4301  00123E  0009               	tblrd		*+
  4302  001240  0101               	movlb	1	; () banked
  4303  001242  CFF5 F112          	movff	tablat,?___llmod+4
  4304  001246  0009               	tblrd		*+
  4305  001248  0101               	movlb	1	; () banked
  4306  00124A  CFF5 F113          	movff	tablat,?___llmod+5
  4307  00124E  0009               	tblrd		*+
  4308  001250  0101               	movlb	1	; () banked
  4309  001252  CFF5 F114          	movff	tablat,?___llmod+6
  4310  001256  000A               	tblrd		*-
  4311  001258  0101               	movlb	1	; () banked
  4312  00125A  CFF5 F115          	movff	tablat,?___llmod+7
  4313  00125E  EC07  F02A         	call	___llmod	;wreg free
  4314  001262  C111  F171         	movff	?___llmod+3,sprintf@_val+3
  4315  001266  C110  F170         	movff	?___llmod+2,sprintf@_val+2
  4316  00126A  C10F  F16F         	movff	?___llmod+1,sprintf@_val+1
  4317  00126E  C10E  F16E         	movff	?___llmod,sprintf@_val
  4318  001272                     l10896:
  4319  001272  0101               	movlb	1	; () banked
  4320  001274  0101               	movlb	1	; () banked
  4321  001276  077E               	decf	sprintf@c& (0+255),f,b
  4322  001278  0101               	movlb	1	; () banked
  4323  00127A  297E               	incf	sprintf@c& (0+255),w,b
  4324  00127C  B4D8               	btfsc	status,2,c
  4325  00127E  D010               	goto	l10904
  4326  001280  D784               	goto	l10886
  4327  001282                     l10898:
  4328                           
  4329                           ; BSR set to: 1
  4330                           ;doprnt.c: 1243: ((*sp++ = ('0')));
  4331  001282  C151  FFD9         	movff	sprintf@sp,fsr2l
  4332  001286  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4333  00128A  0E30               	movlw	48
  4334  00128C  6EDF               	movwf	indf2,c
  4335                           
  4336                           ; BSR set to: 1
  4337  00128E  0101               	movlb	1	; () banked
  4338  001290  0101               	movlb	1	; () banked
  4339  001292  4B51               	infsnz	sprintf@sp& (0+255),f,b
  4340  001294  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  4341                           
  4342                           ; BSR set to: 1
  4343                           ;doprnt.c: 1244: prec--;
  4344  001296  0101               	movlb	1	; () banked
  4345  001298  0101               	movlb	1	; () banked
  4346  00129A  077C               	decf	sprintf@prec& (0+255),f,b
  4347  00129C  A0D8               	btfss	status,0,c
  4348  00129E  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  4349  0012A0                     l10904:
  4350                           
  4351                           ; BSR set to: 1
  4352  0012A0  0101               	movlb	1	; () banked
  4353  0012A2  0101               	movlb	1	; () banked
  4354  0012A4  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  4355  0012A6  117C               	iorwf	sprintf@prec& (0+255),w,b
  4356  0012A8  B4D8               	btfsc	status,2,c
  4357  0012AA  D1E6               	goto	l11002
  4358  0012AC  D7EA               	goto	l10898
  4359  0012AE                     l10906:
  4360                           
  4361                           ; BSR set to: 1
  4362                           ;doprnt.c: 1253: }
  4363                           ;doprnt.c: 1260: {
  4364                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  4365  0012AE  C169  FFD9         	movff	sprintf@ap,fsr2l
  4366  0012B2  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  4367  0012B6  0101               	movlb	1	; () banked
  4368  0012B8  CFDE F16E          	movff	postinc2,sprintf@_val
  4369  0012BC  0101               	movlb	1	; () banked
  4370  0012BE  CFDD F16F          	movff	postdec2,sprintf@_val+1
  4371  0012C2  0101               	movlb	1	; () banked
  4372  0012C4  0E00               	movlw	0
  4373  0012C6  0101               	movlb	1	; () banked
  4374  0012C8  BF6F               	btfsc	(sprintf@_val+1)& (0+255),7,b
  4375  0012CA  0EFF               	movlw	-1
  4376  0012CC  0101               	movlb	1	; () banked
  4377  0012CE  6F70               	movwf	(sprintf@_val+2)& (0+255),b
  4378  0012D0  0101               	movlb	1	; () banked
  4379  0012D2  6F71               	movwf	(sprintf@_val+3)& (0+255),b
  4380                           
  4381                           ; BSR set to: 1
  4382  0012D4  0E02               	movlw	2
  4383  0012D6  0101               	movlb	1	; () banked
  4384  0012D8  0101               	movlb	1	; () banked
  4385  0012DA  2769               	addwf	sprintf@ap& (0+255),f,b
  4386  0012DC  0E00               	movlw	0
  4387  0012DE  0101               	movlb	1	; () banked
  4388  0012E0  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4389                           
  4390                           ; BSR set to: 1
  4391                           ;doprnt.c: 1268: if((long)_val._val < 0) {
  4392  0012E2  0101               	movlb	1	; () banked
  4393  0012E4  0101               	movlb	1	; () banked
  4394  0012E6  AF71               	btfss	(sprintf@_val+3)& (0+255),7,b
  4395  0012E8  D014               	goto	l10916
  4396                           
  4397                           ; BSR set to: 1
  4398                           ;doprnt.c: 1269: flag |= 0x03;
  4399  0012EA  0E03               	movlw	3
  4400  0012EC  0101               	movlb	1	; () banked
  4401  0012EE  0101               	movlb	1	; () banked
  4402  0012F0  1373               	iorwf	sprintf@flag& (0+255),f,b
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;doprnt.c: 1270: _val._val = -_val._val;
  4406  0012F2  0101               	movlb	1	; () banked
  4407  0012F4  0101               	movlb	1	; () banked
  4408  0012F6  1F71               	comf	(sprintf@_val+3)& (0+255),f,b
  4409  0012F8  0101               	movlb	1	; () banked
  4410  0012FA  1F70               	comf	(sprintf@_val+2)& (0+255),f,b
  4411  0012FC  0101               	movlb	1	; () banked
  4412  0012FE  1F6F               	comf	(sprintf@_val+1)& (0+255),f,b
  4413  001300  0101               	movlb	1	; () banked
  4414  001302  6D6E               	negf	sprintf@_val& (0+255),b
  4415  001304  0E00               	movlw	0
  4416  001306  0101               	movlb	1	; () banked
  4417  001308  236F               	addwfc	(sprintf@_val+1)& (0+255),f,b
  4418  00130A  0101               	movlb	1	; () banked
  4419  00130C  2370               	addwfc	(sprintf@_val+2)& (0+255),f,b
  4420  00130E  0101               	movlb	1	; () banked
  4421  001310  2371               	addwfc	(sprintf@_val+3)& (0+255),f,b
  4422  001312                     l10916:
  4423                           
  4424                           ; BSR set to: 1
  4425                           ;doprnt.c: 1271: }
  4426                           ;doprnt.c: 1273: }
  4427                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
  4428  001312  0101               	movlb	1	; () banked
  4429  001314  0101               	movlb	1	; () banked
  4430  001316  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  4431  001318  117C               	iorwf	sprintf@prec& (0+255),w,b
  4432  00131A  A4D8               	btfss	status,2,c
  4433  00131C  D00C               	goto	l10922
  4434                           
  4435                           ; BSR set to: 1
  4436  00131E  0101               	movlb	1	; () banked
  4437  001320  0101               	movlb	1	; () banked
  4438  001322  5171               	movf	(sprintf@_val+3)& (0+255),w,b
  4439  001324  116E               	iorwf	sprintf@_val& (0+255),w,b
  4440  001326  116F               	iorwf	(sprintf@_val+1)& (0+255),w,b
  4441  001328  1170               	iorwf	(sprintf@_val+2)& (0+255),w,b
  4442  00132A  A4D8               	btfss	status,2,c
  4443  00132C  D004               	goto	l10922
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;doprnt.c: 1298: prec++;
  4447  00132E  0101               	movlb	1	; () banked
  4448  001330  0101               	movlb	1	; () banked
  4449  001332  4B7C               	infsnz	sprintf@prec& (0+255),f,b
  4450  001334  2B7D               	incf	(sprintf@prec+1)& (0+255),f,b
  4451  001336                     l10922:
  4452                           
  4453                           ; BSR set to: 1
  4454                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4455  001336  0101               	movlb	1	; () banked
  4456  001338  6F58               	movwf	??_sprintf& (0+255),b
  4457  00133A  0E01               	movlw	1
  4458  00133C  0101               	movlb	1	; () banked
  4459  00133E  0101               	movlb	1	; () banked
  4460  001340  6F7E               	movwf	sprintf@c& (0+255),b
  4461  001342  0101               	movlb	1	; () banked
  4462  001344  5158               	movf	??_sprintf& (0+255),w,b
  4463  001346                     
  4464                           ; BSR set to: 1
  4465  001346  0101               	movlb	1	; () banked
  4466  001348  0101               	movlb	1	; () banked
  4467  00134A  517E               	movf	sprintf@c& (0+255),w,b
  4468  00134C  0A0A               	xorlw	10
  4469  00134E  B4D8               	btfsc	status,2,c
  4470  001350  D021               	goto	l10936
  4471                           
  4472                           ; BSR set to: 1
  4473                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  4474                           
  4475                           ; BSR set to: 1
  4476                           
  4477                           ; BSR set to: 1
  4478  001352  0101               	movlb	1	; () banked
  4479  001354  0101               	movlb	1	; () banked
  4480  001356  517E               	movf	sprintf@c& (0+255),w,b
  4481  001358  0D04               	mullw	4
  4482  00135A  0E00               	movlw	low _dpowers
  4483  00135C  24F3               	addwf	prodl,w,c
  4484  00135E  6EF6               	movwf	tblptrl,c
  4485  001360  0E08               	movlw	high _dpowers
  4486  001362  20F4               	addwfc	prodh,w,c
  4487  001364  6EF7               	movwf	tblptrh,c
  4488  001366  0009               	tblrd		*+
  4489  001368  50F5               	movf	tablat,w,c
  4490  00136A  0101               	movlb	1	; () banked
  4491  00136C  0101               	movlb	1	; () banked
  4492  00136E  5D6E               	subwf	sprintf@_val& (0+255),w,b
  4493  001370  0009               	tblrd		*+
  4494  001372  50F5               	movf	tablat,w,c
  4495  001374  0101               	movlb	1	; () banked
  4496  001376  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  4497  001378  0009               	tblrd		*+
  4498  00137A  50F5               	movf	tablat,w,c
  4499  00137C  0101               	movlb	1	; () banked
  4500  00137E  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  4501  001380  0009               	tblrd		*+
  4502  001382  50F5               	movf	tablat,w,c
  4503  001384  0101               	movlb	1	; () banked
  4504  001386  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  4505  001388  A0D8               	btfss	status,0,c
  4506  00138A  D004               	goto	l10936
  4507                           
  4508                           ; BSR set to: 1
  4509                           
  4510                           ; BSR set to: 1
  4511                           
  4512                           ; BSR set to: 1
  4513                           ;doprnt.c: 1314: break;
  4514  00138C  0101               	movlb	1	; () banked
  4515  00138E  0101               	movlb	1	; () banked
  4516  001390  2B7E               	incf	sprintf@c& (0+255),f,b
  4517  001392  D7D9               	goto	L6
  4518  001394                     l10936:
  4519                           
  4520                           ; BSR set to: 1
  4521                           ;doprnt.c: 1346: if(c < prec)
  4522  001394  0E80               	movlw	128
  4523  001396  0101               	movlb	1	; () banked
  4524  001398  0101               	movlb	1	; () banked
  4525  00139A  BF7E               	btfsc	sprintf@c& (0+255),7,b
  4526  00139C  0E7F               	movlw	127
  4527  00139E  6F58               	movwf	??_sprintf& (0+255),b
  4528  0013A0  0101               	movlb	1	; () banked
  4529  0013A2  0101               	movlb	1	; () banked
  4530  0013A4  517C               	movf	sprintf@prec& (0+255),w,b
  4531  0013A6  0101               	movlb	1	; () banked
  4532  0013A8  0101               	movlb	1	; () banked
  4533  0013AA  5D7E               	subwf	sprintf@c& (0+255),w,b
  4534  0013AC  0101               	movlb	1	; () banked
  4535  0013AE  0101               	movlb	1	; () banked
  4536  0013B0  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  4537  0013B2  0A80               	xorlw	128
  4538  0013B4  0101               	movlb	1	; () banked
  4539  0013B6  5958               	subwfb	??_sprintf& (0+255),w,b
  4540  0013B8  B0D8               	btfsc	status,0,c
  4541  0013BA  D003               	goto	l10940
  4542                           
  4543                           ; BSR set to: 1
  4544                           ;doprnt.c: 1347: c = prec;
  4545  0013BC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  4546  0013C0  D020               	goto	l10944
  4547  0013C2                     l10940:
  4548                           
  4549                           ; BSR set to: 1
  4550                           ;doprnt.c: 1348: else if(prec < c)
  4551  0013C2  0101               	movlb	1	; () banked
  4552  0013C4  0101               	movlb	1	; () banked
  4553  0013C6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  4554  0013C8  0A80               	xorlw	128
  4555  0013CA  0101               	movlb	1	; () banked
  4556  0013CC  6F58               	movwf	??_sprintf& (0+255),b
  4557  0013CE  0101               	movlb	1	; () banked
  4558  0013D0  0101               	movlb	1	; () banked
  4559  0013D2  517E               	movf	sprintf@c& (0+255),w,b
  4560  0013D4  0101               	movlb	1	; () banked
  4561  0013D6  0101               	movlb	1	; () banked
  4562  0013D8  5D7C               	subwf	sprintf@prec& (0+255),w,b
  4563  0013DA  0E80               	movlw	128
  4564  0013DC  0101               	movlb	1	; () banked
  4565  0013DE  0101               	movlb	1	; () banked
  4566  0013E0  BF7E               	btfsc	sprintf@c& (0+255),7,b
  4567  0013E2  0E7F               	movlw	127
  4568  0013E4  0101               	movlb	1	; () banked
  4569  0013E6  5958               	subwfb	??_sprintf& (0+255),w,b
  4570  0013E8  B0D8               	btfsc	status,0,c
  4571  0013EA  D00B               	goto	l10944
  4572                           
  4573                           ; BSR set to: 1
  4574                           ;doprnt.c: 1349: prec = c;
  4575  0013EC  0101               	movlb	1	; () banked
  4576  0013EE  0101               	movlb	1	; () banked
  4577  0013F0  517E               	movf	sprintf@c& (0+255),w,b
  4578  0013F2  0101               	movlb	1	; () banked
  4579  0013F4  0101               	movlb	1	; () banked
  4580  0013F6  6F7C               	movwf	sprintf@prec& (0+255),b
  4581  0013F8  0101               	movlb	1	; () banked
  4582  0013FA  6B7D               	clrf	(sprintf@prec+1)& (0+255),b
  4583  0013FC  0101               	movlb	1	; () banked
  4584  0013FE  BF7C               	btfsc	sprintf@prec& (0+255),7,b
  4585  001400  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  4586  001402                     l10944:
  4587                           
  4588                           ; BSR set to: 1
  4589                           ;doprnt.c: 1352: if(width && flag & 0x03)
  4590  001402  0101               	movlb	1	; () banked
  4591  001404  0101               	movlb	1	; () banked
  4592  001406  5178               	movf	(sprintf@width+1)& (0+255),w,b
  4593  001408  1177               	iorwf	sprintf@width& (0+255),w,b
  4594  00140A  B4D8               	btfsc	status,2,c
  4595  00140C  D016               	goto	l10950
  4596                           
  4597                           ; BSR set to: 1
  4598  00140E  0E03               	movlw	3
  4599  001410  0101               	movlb	1	; () banked
  4600  001412  0101               	movlb	1	; () banked
  4601  001414  1573               	andwf	sprintf@flag& (0+255),w,b
  4602  001416  0101               	movlb	1	; () banked
  4603  001418  6F58               	movwf	??_sprintf& (0+255),b
  4604  00141A  0E00               	movlw	0
  4605  00141C  0101               	movlb	1	; () banked
  4606  00141E  0101               	movlb	1	; () banked
  4607  001420  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  4608  001422  0101               	movlb	1	; () banked
  4609  001424  6F59               	movwf	(??_sprintf+1)& (0+255),b
  4610  001426  0101               	movlb	1	; () banked
  4611  001428  5159               	movf	(??_sprintf+1)& (0+255),w,b
  4612  00142A  1158               	iorwf	??_sprintf& (0+255),w,b
  4613  00142C  B4D8               	btfsc	status,2,c
  4614  00142E  D005               	goto	l10950
  4615                           
  4616                           ; BSR set to: 1
  4617                           ;doprnt.c: 1353: width--;
  4618  001430  0101               	movlb	1	; () banked
  4619  001432  0101               	movlb	1	; () banked
  4620  001434  0777               	decf	sprintf@width& (0+255),f,b
  4621  001436  A0D8               	btfss	status,0,c
  4622  001438  0778               	decf	(sprintf@width+1)& (0+255),f,b
  4623  00143A                     l10950:
  4624                           
  4625                           ; BSR set to: 1
  4626                           ;doprnt.c: 1355: if(flag & 0x4000) {
  4627  00143A  0101               	movlb	1	; () banked
  4628  00143C  0101               	movlb	1	; () banked
  4629  00143E  AD74               	btfss	(sprintf@flag+1)& (0+255),6,b
  4630  001440  D028               	goto	l10958
  4631                           
  4632                           ; BSR set to: 1
  4633                           ;doprnt.c: 1356: if(width > prec)
  4634  001442  0101               	movlb	1	; () banked
  4635  001444  0101               	movlb	1	; () banked
  4636  001446  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  4637  001448  0A80               	xorlw	128
  4638  00144A  0101               	movlb	1	; () banked
  4639  00144C  6F58               	movwf	??_sprintf& (0+255),b
  4640  00144E  0101               	movlb	1	; () banked
  4641  001450  0101               	movlb	1	; () banked
  4642  001452  5177               	movf	sprintf@width& (0+255),w,b
  4643  001454  0101               	movlb	1	; () banked
  4644  001456  0101               	movlb	1	; () banked
  4645  001458  5D7C               	subwf	sprintf@prec& (0+255),w,b
  4646  00145A  0101               	movlb	1	; () banked
  4647  00145C  0101               	movlb	1	; () banked
  4648  00145E  5178               	movf	(sprintf@width+1)& (0+255),w,b
  4649  001460  0A80               	xorlw	128
  4650  001462  0101               	movlb	1	; () banked
  4651  001464  5958               	subwfb	??_sprintf& (0+255),w,b
  4652  001466  B0D8               	btfsc	status,0,c
  4653  001468  D00D               	goto	l10956
  4654                           
  4655                           ; BSR set to: 1
  4656                           ;doprnt.c: 1357: width -= prec;
  4657  00146A  0101               	movlb	1	; () banked
  4658  00146C  0101               	movlb	1	; () banked
  4659  00146E  517C               	movf	sprintf@prec& (0+255),w,b
  4660  001470  0101               	movlb	1	; () banked
  4661  001472  0101               	movlb	1	; () banked
  4662  001474  5F77               	subwf	sprintf@width& (0+255),f,b
  4663  001476  0101               	movlb	1	; () banked
  4664  001478  0101               	movlb	1	; () banked
  4665  00147A  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  4666  00147C  0101               	movlb	1	; () banked
  4667  00147E  0101               	movlb	1	; () banked
  4668  001480  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  4669  001482  D007               	goto	l10958
  4670  001484                     l10956:
  4671                           
  4672                           ; BSR set to: 1
  4673                           ;doprnt.c: 1358: else
  4674                           ;doprnt.c: 1359: width = 0;
  4675  001484  0E00               	movlw	0
  4676  001486  0101               	movlb	1	; () banked
  4677  001488  0101               	movlb	1	; () banked
  4678  00148A  6F78               	movwf	(sprintf@width+1)& (0+255),b
  4679  00148C  0E00               	movlw	0
  4680  00148E  0101               	movlb	1	; () banked
  4681  001490  6F77               	movwf	sprintf@width& (0+255),b
  4682  001492                     l10958:
  4683                           
  4684                           ; BSR set to: 1
  4685                           ;doprnt.c: 1360: }
  4686                           ;doprnt.c: 1388: if(width > c)
  4687  001492  0E80               	movlw	128
  4688  001494  0101               	movlb	1	; () banked
  4689  001496  0101               	movlb	1	; () banked
  4690  001498  BF7E               	btfsc	sprintf@c& (0+255),7,b
  4691  00149A  0E7F               	movlw	127
  4692  00149C  6F58               	movwf	??_sprintf& (0+255),b
  4693  00149E  0101               	movlb	1	; () banked
  4694  0014A0  0101               	movlb	1	; () banked
  4695  0014A2  5177               	movf	sprintf@width& (0+255),w,b
  4696  0014A4  0101               	movlb	1	; () banked
  4697  0014A6  0101               	movlb	1	; () banked
  4698  0014A8  5D7E               	subwf	sprintf@c& (0+255),w,b
  4699  0014AA  0101               	movlb	1	; () banked
  4700  0014AC  0101               	movlb	1	; () banked
  4701  0014AE  5178               	movf	(sprintf@width+1)& (0+255),w,b
  4702  0014B0  0A80               	xorlw	128
  4703  0014B2  0101               	movlb	1	; () banked
  4704  0014B4  5958               	subwfb	??_sprintf& (0+255),w,b
  4705  0014B6  B0D8               	btfsc	status,0,c
  4706  0014B8  D00E               	goto	l10962
  4707                           
  4708                           ; BSR set to: 1
  4709                           ;doprnt.c: 1389: width -= c;
  4710  0014BA  0101               	movlb	1	; () banked
  4711  0014BC  0101               	movlb	1	; () banked
  4712  0014BE  517E               	movf	sprintf@c& (0+255),w,b
  4713  0014C0  0101               	movlb	1	; () banked
  4714  0014C2  0101               	movlb	1	; () banked
  4715  0014C4  5F77               	subwf	sprintf@width& (0+255),f,b
  4716  0014C6  0E00               	movlw	0
  4717  0014C8  0101               	movlb	1	; () banked
  4718  0014CA  BF7E               	btfsc	sprintf@c& (0+255),7,b
  4719  0014CC  0EFF               	movlw	255
  4720  0014CE  0101               	movlb	1	; () banked
  4721  0014D0  0101               	movlb	1	; () banked
  4722  0014D2  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  4723  0014D4  D007               	goto	l10964
  4724  0014D6                     l10962:
  4725                           
  4726                           ; BSR set to: 1
  4727                           ;doprnt.c: 1390: else
  4728                           ;doprnt.c: 1391: width = 0;
  4729  0014D6  0E00               	movlw	0
  4730  0014D8  0101               	movlb	1	; () banked
  4731  0014DA  0101               	movlb	1	; () banked
  4732  0014DC  6F78               	movwf	(sprintf@width+1)& (0+255),b
  4733  0014DE  0E00               	movlw	0
  4734  0014E0  0101               	movlb	1	; () banked
  4735  0014E2  6F77               	movwf	sprintf@width& (0+255),b
  4736  0014E4                     l10964:
  4737                           
  4738                           ; BSR set to: 1
  4739                           ;doprnt.c: 1394: if(flag & 0x04) {
  4740  0014E4  0101               	movlb	1	; () banked
  4741  0014E6  0101               	movlb	1	; () banked
  4742  0014E8  A573               	btfss	sprintf@flag& (0+255),2,b
  4743  0014EA  D031               	goto	l10980
  4744                           
  4745                           ; BSR set to: 1
  4746                           ;doprnt.c: 1399: if(flag & 0x03)
  4747  0014EC  0E03               	movlw	3
  4748  0014EE  0101               	movlb	1	; () banked
  4749  0014F0  0101               	movlb	1	; () banked
  4750  0014F2  1573               	andwf	sprintf@flag& (0+255),w,b
  4751  0014F4  0101               	movlb	1	; () banked
  4752  0014F6  6F58               	movwf	??_sprintf& (0+255),b
  4753  0014F8  0E00               	movlw	0
  4754  0014FA  0101               	movlb	1	; () banked
  4755  0014FC  0101               	movlb	1	; () banked
  4756  0014FE  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  4757  001500  0101               	movlb	1	; () banked
  4758  001502  6F59               	movwf	(??_sprintf+1)& (0+255),b
  4759  001504  0101               	movlb	1	; () banked
  4760  001506  5159               	movf	(??_sprintf+1)& (0+255),w,b
  4761  001508  1158               	iorwf	??_sprintf& (0+255),w,b
  4762  00150A  B4D8               	btfsc	status,2,c
  4763  00150C  D00A               	goto	l10972
  4764                           
  4765                           ; BSR set to: 1
  4766                           ;doprnt.c: 1400: ((*sp++ = ('-')));
  4767  00150E  C151  FFD9         	movff	sprintf@sp,fsr2l
  4768  001512  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4769  001516  0E2D               	movlw	45
  4770  001518  6EDF               	movwf	indf2,c
  4771                           
  4772                           ; BSR set to: 1
  4773  00151A  0101               	movlb	1	; () banked
  4774  00151C  0101               	movlb	1	; () banked
  4775  00151E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  4776  001520  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  4777  001522                     l10972:
  4778                           
  4779                           ; BSR set to: 1
  4780                           ;doprnt.c: 1422: if(width)
  4781  001522  0101               	movlb	1	; () banked
  4782  001524  0101               	movlb	1	; () banked
  4783  001526  5178               	movf	(sprintf@width+1)& (0+255),w,b
  4784  001528  1177               	iorwf	sprintf@width& (0+255),w,b
  4785  00152A  B4D8               	btfsc	status,2,c
  4786  00152C  D09A               	goto	l11000
  4787                           
  4788                           ; BSR set to: 1
  4789                           ;doprnt.c: 1424: ((*sp++ = ('0')));
  4790                           
  4791                           ; BSR set to: 1
  4792                           
  4793                           ;doprnt.c: 1423: do
  4794  00152E  C151  FFD9         	movff	sprintf@sp,fsr2l
  4795  001532  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4796  001536  0E30               	movlw	48
  4797  001538  6EDF               	movwf	indf2,c
  4798                           
  4799                           ; BSR set to: 1
  4800  00153A  0101               	movlb	1	; () banked
  4801  00153C  0101               	movlb	1	; () banked
  4802  00153E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  4803  001540  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  4804                           
  4805                           ; BSR set to: 1
  4806                           ;doprnt.c: 1425: while(--width);
  4807  001542  0101               	movlb	1	; () banked
  4808  001544  0101               	movlb	1	; () banked
  4809  001546  0777               	decf	sprintf@width& (0+255),f,b
  4810  001548  A0D8               	btfss	status,0,c
  4811  00154A  0778               	decf	(sprintf@width+1)& (0+255),f,b
  4812  00154C  D7EB               	goto	L8
  4813  00154E                     l10980:
  4814                           
  4815                           ; BSR set to: 1
  4816                           ;doprnt.c: 1429: {
  4817                           ;doprnt.c: 1431: if(width
  4818                           ;doprnt.c: 1435: )
  4819  00154E  0101               	movlb	1	; () banked
  4820  001550  0101               	movlb	1	; () banked
  4821  001552  5178               	movf	(sprintf@width+1)& (0+255),w,b
  4822  001554  1177               	iorwf	sprintf@width& (0+255),w,b
  4823  001556  B4D8               	btfsc	status,2,c
  4824  001558  D014               	goto	l10988
  4825  00155A                     l10982:
  4826                           
  4827                           ; BSR set to: 1
  4828                           ;doprnt.c: 1437: ((*sp++ = (' ')));
  4829  00155A  C151  FFD9         	movff	sprintf@sp,fsr2l
  4830  00155E  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4831  001562  0E20               	movlw	32
  4832  001564  6EDF               	movwf	indf2,c
  4833                           
  4834                           ; BSR set to: 1
  4835  001566  0101               	movlb	1	; () banked
  4836  001568  0101               	movlb	1	; () banked
  4837  00156A  4B51               	infsnz	sprintf@sp& (0+255),f,b
  4838  00156C  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;doprnt.c: 1438: while(--width);
  4842  00156E  0101               	movlb	1	; () banked
  4843  001570  0101               	movlb	1	; () banked
  4844  001572  0777               	decf	sprintf@width& (0+255),f,b
  4845  001574  A0D8               	btfss	status,0,c
  4846  001576  0778               	decf	(sprintf@width+1)& (0+255),f,b
  4847  001578  0101               	movlb	1	; () banked
  4848  00157A  5178               	movf	(sprintf@width+1)& (0+255),w,b
  4849  00157C  1177               	iorwf	sprintf@width& (0+255),w,b
  4850  00157E  A4D8               	btfss	status,2,c
  4851  001580  D7EC               	goto	l10982
  4852  001582                     l10988:
  4853                           
  4854                           ; BSR set to: 1
  4855                           ;doprnt.c: 1445: if(flag & 0x03)
  4856  001582  0E03               	movlw	3
  4857  001584  0101               	movlb	1	; () banked
  4858  001586  0101               	movlb	1	; () banked
  4859  001588  1573               	andwf	sprintf@flag& (0+255),w,b
  4860  00158A  0101               	movlb	1	; () banked
  4861  00158C  6F58               	movwf	??_sprintf& (0+255),b
  4862  00158E  0E00               	movlw	0
  4863  001590  0101               	movlb	1	; () banked
  4864  001592  0101               	movlb	1	; () banked
  4865  001594  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  4866  001596  0101               	movlb	1	; () banked
  4867  001598  6F59               	movwf	(??_sprintf+1)& (0+255),b
  4868  00159A  0101               	movlb	1	; () banked
  4869  00159C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  4870  00159E  1158               	iorwf	??_sprintf& (0+255),w,b
  4871  0015A0  B4D8               	btfsc	status,2,c
  4872  0015A2  D05F               	goto	l11000
  4873                           
  4874                           ; BSR set to: 1
  4875                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  4876  0015A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  4877  0015A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4878  0015AC  0E2D               	movlw	45
  4879  0015AE  6EDF               	movwf	indf2,c
  4880  0015B0  D054               	goto	L7
  4881  0015B2                     l10994:
  4882                           
  4883                           ; BSR set to: 1
  4884                           ;doprnt.c: 1485: {
  4885                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  4886  0015B2  0101               	movlb	1	; () banked
  4887  0015B4  C17C  F158         	movff	sprintf@prec,??_sprintf
  4888  0015B8  0101               	movlb	1	; () banked
  4889  0015BA  C17D  F159         	movff	sprintf@prec+1,??_sprintf+1
  4890  0015BE  0101               	movlb	1	; () banked
  4891  0015C0  90D8               	bcf	status,0,c
  4892  0015C2  3758               	rlcf	??_sprintf& (0+255),f,b
  4893  0015C4  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  4894  0015C6  0101               	movlb	1	; () banked
  4895  0015C8  90D8               	bcf	status,0,c
  4896  0015CA  3758               	rlcf	??_sprintf& (0+255),f,b
  4897  0015CC  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  4898  0015CE  0E00               	movlw	low _dpowers
  4899  0015D0  0101               	movlb	1	; () banked
  4900  0015D2  2558               	addwf	??_sprintf& (0+255),w,b
  4901  0015D4  6EF6               	movwf	tblptrl,c
  4902  0015D6  0E08               	movlw	high _dpowers
  4903  0015D8  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  4904  0015DA  6EF7               	movwf	tblptrh,c
  4905  0015DC  0009               	tblrd		*+
  4906  0015DE  0101               	movlb	1	; () banked
  4907  0015E0  CFF5 F104          	movff	tablat,?___lldiv+4
  4908  0015E4  0009               	tblrd		*+
  4909  0015E6  0101               	movlb	1	; () banked
  4910  0015E8  CFF5 F105          	movff	tablat,?___lldiv+5
  4911  0015EC  0009               	tblrd		*+
  4912  0015EE  0101               	movlb	1	; () banked
  4913  0015F0  CFF5 F106          	movff	tablat,?___lldiv+6
  4914  0015F4  000A               	tblrd		*-
  4915  0015F6  0101               	movlb	1	; () banked
  4916  0015F8  CFF5 F107          	movff	tablat,?___lldiv+7
  4917  0015FC  C16E  F100         	movff	sprintf@_val,?___lldiv
  4918  001600  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  4919  001604  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  4920  001608  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  4921  00160C  EC42  F026         	call	___lldiv	;wreg free
  4922  001610  C103  F111         	movff	?___lldiv+3,?___llmod+3
  4923  001614  C102  F110         	movff	?___lldiv+2,?___llmod+2
  4924  001618  C101  F10F         	movff	?___lldiv+1,?___llmod+1
  4925  00161C  C100  F10E         	movff	?___lldiv,?___llmod
  4926  001620  0E0A               	movlw	10
  4927  001622  0101               	movlb	1	; () banked
  4928  001624  0101               	movlb	1	; () banked
  4929  001626  6F12               	movwf	(?___llmod+4)& (0+255),b
  4930  001628  0E00               	movlw	0
  4931  00162A  0101               	movlb	1	; () banked
  4932  00162C  6F13               	movwf	(?___llmod+5)& (0+255),b
  4933  00162E  0E00               	movlw	0
  4934  001630  0101               	movlb	1	; () banked
  4935  001632  6F14               	movwf	(?___llmod+6)& (0+255),b
  4936  001634  0E00               	movlw	0
  4937  001636  0101               	movlb	1	; () banked
  4938  001638  6F15               	movwf	(?___llmod+7)& (0+255),b
  4939  00163A  EC07  F02A         	call	___llmod	;wreg free
  4940  00163E  0101               	movlb	1	; () banked
  4941  001640  0101               	movlb	1	; () banked
  4942  001642  510E               	movf	?___llmod& (0+255),w,b
  4943  001644  0F30               	addlw	48
  4944  001646  0101               	movlb	1	; () banked
  4945  001648  0101               	movlb	1	; () banked
  4946  00164A  6F7E               	movwf	sprintf@c& (0+255),b
  4947                           
  4948                           ; BSR set to: 1
  4949                           ;doprnt.c: 1530: }
  4950                           ;doprnt.c: 1531: ((*sp++ = (c)));
  4951  00164C  C151  FFD9         	movff	sprintf@sp,fsr2l
  4952  001650  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4953  001654  0101               	movlb	1	; () banked
  4954  001656  C17E  FFDF         	movff	sprintf@c,indf2
  4955  00165A                     L7:
  4956                           
  4957                           ; BSR set to: 1
  4958  00165A  0101               	movlb	1	; () banked
  4959  00165C  0101               	movlb	1	; () banked
  4960  00165E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  4961  001660  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  4962  001662                     l11000:
  4963                           
  4964                           ; BSR set to: 1
  4965  001662  0101               	movlb	1	; () banked
  4966  001664  0101               	movlb	1	; () banked
  4967  001666  077C               	decf	sprintf@prec& (0+255),f,b
  4968  001668  A0D8               	btfss	status,0,c
  4969  00166A  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  4970  00166C  0101               	movlb	1	; () banked
  4971  00166E  297C               	incf	sprintf@prec& (0+255),w,b
  4972  001670  B4D8               	btfsc	status,2,c
  4973  001672  297D               	incf	(sprintf@prec+1)& (0+255),w,b
  4974  001674  A4D8               	btfss	status,2,c
  4975  001676  D79D               	goto	l10994
  4976  001678                     l11002:
  4977                           
  4978                           ; BSR set to: 1
  4979  001678  0101               	movlb	1	; () banked
  4980  00167A  C153  FFF6         	movff	sprintf@f,tblptrl
  4981  00167E  0101               	movlb	1	; () banked
  4982  001680  C154  FFF7         	movff	sprintf@f+1,tblptrh
  4983  001684  0101               	movlb	1	; () banked
  4984  001686  0101               	movlb	1	; () banked
  4985  001688  4B53               	infsnz	sprintf@f& (0+255),f,b
  4986  00168A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  4987  00168C  0008               	tblrd		*
  4988  00168E  0101               	movlb	1	; () banked
  4989  001690  CFF5 F17E          	movff	tablat,sprintf@c
  4990  001694  0101               	movlb	1	; () banked
  4991  001696  677E               	tstfsz	sprintf@c& (0+255),b
  4992  001698  EF55  F004         	goto	l10678
  4993  00169C                     l11004:
  4994                           
  4995                           ; BSR set to: 1
  4996                           ;doprnt.c: 1545: *sp = 0;
  4997  00169C  C151  FFD9         	movff	sprintf@sp,fsr2l
  4998  0016A0  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  4999  0016A4  0E00               	movlw	0
  5000  0016A6  6EDF               	movwf	indf2,c
  5001                           
  5002                           ; BSR set to: 1
  5003                           
  5004                           ; BSR set to: 1
  5005                           ;doprnt.c: 1547: return 0;
  5006                           ;	Return value of _sprintf is never used
  5007  0016A8  0012               	return	
  5008  0016AA                     __end_of_sprintf:
  5009                           	opt stack 0
  5010                           tblptru	equ	0xFF8
  5011                           tblptrh	equ	0xFF7
  5012                           tblptrl	equ	0xFF6
  5013                           tablat	equ	0xFF5
  5014                           prodh	equ	0xFF4
  5015                           prodl	equ	0xFF3
  5016                           intcon	equ	0xFF2
  5017                           postinc0	equ	0xFEE
  5018                           wreg	equ	0xFE8
  5019                           postdec1	equ	0xFE5
  5020                           fsr1l	equ	0xFE1
  5021                           indf2	equ	0xFDF
  5022                           postinc2	equ	0xFDE
  5023                           postdec2	equ	0xFDD
  5024                           fsr2h	equ	0xFDA
  5025                           fsr2l	equ	0xFD9
  5026                           status	equ	0xFD8
  5027                           
  5028 ;; *************** function ___lwmod *****************
  5029 ;; Defined at:
  5030 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  dividend        2    0[BANK1 ] unsigned int 
  5033 ;;  divisor         2    2[BANK1 ] unsigned int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  counter         1    5[BANK1 ] unsigned char 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  2    0[BANK1 ] unsigned int 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5045 ;;      Params:         0       0       4       0       0       0       0       0       0
  5046 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5047 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5048 ;;      Totals:         0       0       6       0       0       0       0       0       0
  5049 ;;Total ram usage:        6 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:   11
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_sprintf
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text11
  5060  0059EA                     __ptext11:
  5061                           	opt stack 0
  5062  0059EA                     ___lwmod:
  5063                           	opt stack 16
  5064                           
  5065                           ; BSR set to: 1
  5066                           ;incstack = 0
  5067                           ;incstack = 0
  5068  0059EA  0101               	movlb	1	; () banked
  5069  0059EC  0101               	movlb	1	; () banked
  5070  0059EE  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5071  0059F0  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  5072  0059F2  B4D8               	btfsc	status,2,c
  5073  0059F4  D03A               	goto	l960
  5074                           
  5075                           ; BSR set to: 1
  5076  0059F6  0101               	movlb	1	; () banked
  5077  0059F8  6F04               	movwf	??___lwmod& (0+255),b
  5078  0059FA  0E01               	movlw	1
  5079  0059FC  0101               	movlb	1	; () banked
  5080  0059FE  0101               	movlb	1	; () banked
  5081  005A00  6F05               	movwf	___lwmod@counter& (0+255),b
  5082  005A02  0101               	movlb	1	; () banked
  5083  005A04  5104               	movf	??___lwmod& (0+255),w,b
  5084  005A06  D009               	goto	l11624
  5085  005A08                     l11622:
  5086                           
  5087                           ; BSR set to: 1
  5088  005A08  0101               	movlb	1	; () banked
  5089  005A0A  0101               	movlb	1	; () banked
  5090  005A0C  0101               	movlb	1	; () banked
  5091  005A0E  90D8               	bcf	status,0,c
  5092  005A10  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  5093  005A12  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5094  005A14  0101               	movlb	1	; () banked
  5095  005A16  0101               	movlb	1	; () banked
  5096  005A18  2B05               	incf	___lwmod@counter& (0+255),f,b
  5097  005A1A                     l11624:
  5098                           
  5099                           ; BSR set to: 1
  5100  005A1A  0101               	movlb	1	; () banked
  5101  005A1C  0101               	movlb	1	; () banked
  5102  005A1E  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5103  005A20  D7F3               	goto	l11622
  5104  005A22                     l11626:
  5105                           
  5106                           ; BSR set to: 1
  5107  005A22  0101               	movlb	1	; () banked
  5108  005A24  0101               	movlb	1	; () banked
  5109  005A26  5102               	movf	___lwmod@divisor& (0+255),w,b
  5110  005A28  0101               	movlb	1	; () banked
  5111  005A2A  0101               	movlb	1	; () banked
  5112  005A2C  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  5113  005A2E  0101               	movlb	1	; () banked
  5114  005A30  0101               	movlb	1	; () banked
  5115  005A32  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5116  005A34  0101               	movlb	1	; () banked
  5117  005A36  0101               	movlb	1	; () banked
  5118  005A38  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5119  005A3A  A0D8               	btfss	status,0,c
  5120  005A3C  D00C               	goto	l11630
  5121                           
  5122                           ; BSR set to: 1
  5123  005A3E  0101               	movlb	1	; () banked
  5124  005A40  0101               	movlb	1	; () banked
  5125  005A42  5102               	movf	___lwmod@divisor& (0+255),w,b
  5126  005A44  0101               	movlb	1	; () banked
  5127  005A46  0101               	movlb	1	; () banked
  5128  005A48  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  5129  005A4A  0101               	movlb	1	; () banked
  5130  005A4C  0101               	movlb	1	; () banked
  5131  005A4E  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5132  005A50  0101               	movlb	1	; () banked
  5133  005A52  0101               	movlb	1	; () banked
  5134  005A54  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5135  005A56                     l11630:
  5136                           
  5137                           ; BSR set to: 1
  5138  005A56  0101               	movlb	1	; () banked
  5139  005A58  0101               	movlb	1	; () banked
  5140  005A5A  0101               	movlb	1	; () banked
  5141  005A5C  90D8               	bcf	status,0,c
  5142  005A5E  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5143  005A60  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  5144                           
  5145                           ; BSR set to: 1
  5146  005A62  0101               	movlb	1	; () banked
  5147  005A64  0101               	movlb	1	; () banked
  5148  005A66  2F05               	decfsz	___lwmod@counter& (0+255),f,b
  5149  005A68  D7DC               	goto	l11626
  5150  005A6A                     l960:
  5151                           
  5152                           ; BSR set to: 1
  5153  005A6A  C100  F100         	movff	___lwmod@dividend,?___lwmod
  5154  005A6E  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  5155                           
  5156                           ; BSR set to: 1
  5157  005A72  0012               	return	
  5158  005A74                     __end_of___lwmod:
  5159                           	opt stack 0
  5160                           tblptru	equ	0xFF8
  5161                           tblptrh	equ	0xFF7
  5162                           tblptrl	equ	0xFF6
  5163                           tablat	equ	0xFF5
  5164                           prodh	equ	0xFF4
  5165                           prodl	equ	0xFF3
  5166                           intcon	equ	0xFF2
  5167                           postinc0	equ	0xFEE
  5168                           wreg	equ	0xFE8
  5169                           postdec1	equ	0xFE5
  5170                           fsr1l	equ	0xFE1
  5171                           indf2	equ	0xFDF
  5172                           postinc2	equ	0xFDE
  5173                           postdec2	equ	0xFDD
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function ___lltoft *****************
  5179 ;; Defined at:
  5180 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  c               4    8[BANK1 ] unsigned long 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  exp             1   16[BANK1 ] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  3    8[BANK1 ] float 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5194 ;;      Params:         0       0       4       0       0       0       0       0       0
  5195 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5196 ;;      Temps:          0       0       4       0       0       0       0       0       0
  5197 ;;      Totals:         0       0       9       0       0       0       0       0       0
  5198 ;;Total ram usage:        9 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:   12
  5201 ;; This function calls:
  5202 ;;		___ftpack
  5203 ;; This function is called by:
  5204 ;;		_sprintf
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text12
  5209  0057A0                     __ptext12:
  5210                           	opt stack 0
  5211  0057A0                     ___lltoft:
  5212                           	opt stack 15
  5213                           
  5214                           ; BSR set to: 1
  5215                           ;incstack = 0
  5216                           ;incstack = 0
  5217  0057A0  0101               	movlb	1	; () banked
  5218  0057A2  6F0C               	movwf	??___lltoft& (0+255),b
  5219  0057A4  0E8E               	movlw	142
  5220  0057A6  0101               	movlb	1	; () banked
  5221  0057A8  0101               	movlb	1	; () banked
  5222  0057AA  6F10               	movwf	___lltoft@exp& (0+255),b
  5223  0057AC  0101               	movlb	1	; () banked
  5224  0057AE  510C               	movf	??___lltoft& (0+255),w,b
  5225  0057B0  D00D               	goto	l11590
  5226  0057B2                     l11588:
  5227                           
  5228                           ; BSR set to: 1
  5229  0057B2  0101               	movlb	1	; () banked
  5230  0057B4  90D8               	bcf	status,0,c
  5231  0057B6  0101               	movlb	1	; () banked
  5232  0057B8  330B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  5233  0057BA  0101               	movlb	1	; () banked
  5234  0057BC  330A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  5235  0057BE  0101               	movlb	1	; () banked
  5236  0057C0  3309               	rrcf	(___lltoft@c+1)& (0+255),f,b
  5237  0057C2  0101               	movlb	1	; () banked
  5238  0057C4  3308               	rrcf	___lltoft@c& (0+255),f,b
  5239  0057C6  0101               	movlb	1	; () banked
  5240  0057C8  0101               	movlb	1	; () banked
  5241  0057CA  2B10               	incf	___lltoft@exp& (0+255),f,b
  5242  0057CC                     l11590:
  5243                           
  5244                           ; BSR set to: 1
  5245  0057CC  0E00               	movlw	0
  5246  0057CE  0101               	movlb	1	; () banked
  5247  0057D0  0101               	movlb	1	; () banked
  5248  0057D2  1508               	andwf	___lltoft@c& (0+255),w,b
  5249  0057D4  0101               	movlb	1	; () banked
  5250  0057D6  6F0C               	movwf	??___lltoft& (0+255),b
  5251  0057D8  0E00               	movlw	0
  5252  0057DA  0101               	movlb	1	; () banked
  5253  0057DC  0101               	movlb	1	; () banked
  5254  0057DE  1509               	andwf	(___lltoft@c+1)& (0+255),w,b
  5255  0057E0  0101               	movlb	1	; () banked
  5256  0057E2  6F0D               	movwf	(??___lltoft+1)& (0+255),b
  5257  0057E4  0E00               	movlw	0
  5258  0057E6  0101               	movlb	1	; () banked
  5259  0057E8  0101               	movlb	1	; () banked
  5260  0057EA  150A               	andwf	(___lltoft@c+2)& (0+255),w,b
  5261  0057EC  0101               	movlb	1	; () banked
  5262  0057EE  6F0E               	movwf	(??___lltoft+2)& (0+255),b
  5263  0057F0  0EFF               	movlw	255
  5264  0057F2  0101               	movlb	1	; () banked
  5265  0057F4  0101               	movlb	1	; () banked
  5266  0057F6  150B               	andwf	(___lltoft@c+3)& (0+255),w,b
  5267  0057F8  0101               	movlb	1	; () banked
  5268  0057FA  6F0F               	movwf	(??___lltoft+3)& (0+255),b
  5269  0057FC  0101               	movlb	1	; () banked
  5270  0057FE  510F               	movf	(??___lltoft+3)& (0+255),w,b
  5271  005800  110C               	iorwf	??___lltoft& (0+255),w,b
  5272  005802  110D               	iorwf	(??___lltoft+1)& (0+255),w,b
  5273  005804  110E               	iorwf	(??___lltoft+2)& (0+255),w,b
  5274  005806  A4D8               	btfss	status,2,c
  5275  005808  D7D4               	goto	l11588
  5276                           
  5277                           ; BSR set to: 1
  5278                           
  5279                           ; BSR set to: 1
  5280  00580A  C108  F100         	movff	___lltoft@c,?___ftpack
  5281  00580E  C109  F101         	movff	___lltoft@c+1,?___ftpack+1
  5282  005812  C10A  F102         	movff	___lltoft@c+2,?___ftpack+2
  5283  005816  C110  F103         	movff	___lltoft@exp,?___ftpack+3
  5284  00581A  0101               	movlb	1	; () banked
  5285  00581C  6F0C               	movwf	??___lltoft& (0+255),b
  5286  00581E  0E00               	movlw	0
  5287  005820  0101               	movlb	1	; () banked
  5288  005822  0101               	movlb	1	; () banked
  5289  005824  6F04               	movwf	(?___ftpack+4)& (0+255),b
  5290  005826  0101               	movlb	1	; () banked
  5291  005828  510C               	movf	??___lltoft& (0+255),w,b
  5292  00582A  EC30  F022         	call	___ftpack	;wreg free
  5293  00582E  C102  F10A         	movff	?___ftpack+2,?___lltoft+2
  5294  005832  C101  F109         	movff	?___ftpack+1,?___lltoft+1
  5295  005836  C100  F108         	movff	?___ftpack,?___lltoft
  5296  00583A  0012               	return	
  5297  00583C                     __end_of___lltoft:
  5298                           	opt stack 0
  5299                           tblptru	equ	0xFF8
  5300                           tblptrh	equ	0xFF7
  5301                           tblptrl	equ	0xFF6
  5302                           tablat	equ	0xFF5
  5303                           prodh	equ	0xFF4
  5304                           prodl	equ	0xFF3
  5305                           intcon	equ	0xFF2
  5306                           postinc0	equ	0xFEE
  5307                           wreg	equ	0xFE8
  5308                           postdec1	equ	0xFE5
  5309                           fsr1l	equ	0xFE1
  5310                           indf2	equ	0xFDF
  5311                           postinc2	equ	0xFDE
  5312                           postdec2	equ	0xFDD
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function ___llmod *****************
  5318 ;; Defined at:
  5319 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  dividend        4   14[BANK1 ] unsigned long 
  5322 ;;  divisor         4   18[BANK1 ] unsigned long 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  counter         1   23[BANK1 ] unsigned char 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  4   14[BANK1 ] unsigned long 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5334 ;;      Params:         0       0       8       0       0       0       0       0       0
  5335 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5336 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5337 ;;      Totals:         0       0      10       0       0       0       0       0       0
  5338 ;;Total ram usage:       10 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:   11
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_sprintf
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text13
  5349  00540E                     __ptext13:
  5350                           	opt stack 0
  5351  00540E                     ___llmod:
  5352                           	opt stack 16
  5353                           
  5354                           ;incstack = 0
  5355                           ;incstack = 0
  5356  00540E  0101               	movlb	1	; () banked
  5357  005410  0101               	movlb	1	; () banked
  5358  005412  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  5359  005414  1112               	iorwf	___llmod@divisor& (0+255),w,b
  5360  005416  1113               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5361  005418  1114               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5362  00541A  B4D8               	btfsc	status,2,c
  5363  00541C  D05A               	goto	l891
  5364                           
  5365                           ; BSR set to: 1
  5366  00541E  0101               	movlb	1	; () banked
  5367  005420  6F16               	movwf	??___llmod& (0+255),b
  5368  005422  0E01               	movlw	1
  5369  005424  0101               	movlb	1	; () banked
  5370  005426  0101               	movlb	1	; () banked
  5371  005428  6F17               	movwf	___llmod@counter& (0+255),b
  5372  00542A  0101               	movlb	1	; () banked
  5373  00542C  5116               	movf	??___llmod& (0+255),w,b
  5374  00542E  D00D               	goto	l8902
  5375  005430                     l8900:
  5376                           
  5377                           ; BSR set to: 1
  5378  005430  0101               	movlb	1	; () banked
  5379  005432  90D8               	bcf	status,0,c
  5380  005434  0101               	movlb	1	; () banked
  5381  005436  3712               	rlcf	___llmod@divisor& (0+255),f,b
  5382  005438  0101               	movlb	1	; () banked
  5383  00543A  3713               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5384  00543C  0101               	movlb	1	; () banked
  5385  00543E  3714               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5386  005440  0101               	movlb	1	; () banked
  5387  005442  3715               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5388  005444  0101               	movlb	1	; () banked
  5389  005446  0101               	movlb	1	; () banked
  5390  005448  2B17               	incf	___llmod@counter& (0+255),f,b
  5391  00544A                     l8902:
  5392                           
  5393                           ; BSR set to: 1
  5394  00544A  0101               	movlb	1	; () banked
  5395  00544C  0101               	movlb	1	; () banked
  5396  00544E  AF15               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5397  005450  D7EF               	goto	l8900
  5398  005452                     l8904:
  5399                           
  5400                           ; BSR set to: 1
  5401  005452  0101               	movlb	1	; () banked
  5402  005454  0101               	movlb	1	; () banked
  5403  005456  5112               	movf	___llmod@divisor& (0+255),w,b
  5404  005458  0101               	movlb	1	; () banked
  5405  00545A  0101               	movlb	1	; () banked
  5406  00545C  5D0E               	subwf	___llmod@dividend& (0+255),w,b
  5407  00545E  0101               	movlb	1	; () banked
  5408  005460  0101               	movlb	1	; () banked
  5409  005462  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  5410  005464  0101               	movlb	1	; () banked
  5411  005466  0101               	movlb	1	; () banked
  5412  005468  590F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5413  00546A  0101               	movlb	1	; () banked
  5414  00546C  0101               	movlb	1	; () banked
  5415  00546E  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  5416  005470  0101               	movlb	1	; () banked
  5417  005472  0101               	movlb	1	; () banked
  5418  005474  5910               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5419  005476  0101               	movlb	1	; () banked
  5420  005478  0101               	movlb	1	; () banked
  5421  00547A  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  5422  00547C  0101               	movlb	1	; () banked
  5423  00547E  0101               	movlb	1	; () banked
  5424  005480  5911               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5425  005482  A0D8               	btfss	status,0,c
  5426  005484  D018               	goto	l8908
  5427                           
  5428                           ; BSR set to: 1
  5429  005486  0101               	movlb	1	; () banked
  5430  005488  0101               	movlb	1	; () banked
  5431  00548A  5112               	movf	___llmod@divisor& (0+255),w,b
  5432  00548C  0101               	movlb	1	; () banked
  5433  00548E  0101               	movlb	1	; () banked
  5434  005490  5F0E               	subwf	___llmod@dividend& (0+255),f,b
  5435  005492  0101               	movlb	1	; () banked
  5436  005494  0101               	movlb	1	; () banked
  5437  005496  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  5438  005498  0101               	movlb	1	; () banked
  5439  00549A  0101               	movlb	1	; () banked
  5440  00549C  5B0F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5441  00549E  0101               	movlb	1	; () banked
  5442  0054A0  0101               	movlb	1	; () banked
  5443  0054A2  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  5444  0054A4  0101               	movlb	1	; () banked
  5445  0054A6  0101               	movlb	1	; () banked
  5446  0054A8  5B10               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5447  0054AA  0101               	movlb	1	; () banked
  5448  0054AC  0101               	movlb	1	; () banked
  5449  0054AE  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  5450  0054B0  0101               	movlb	1	; () banked
  5451  0054B2  0101               	movlb	1	; () banked
  5452  0054B4  5B11               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5453  0054B6                     l8908:
  5454                           
  5455                           ; BSR set to: 1
  5456  0054B6  0101               	movlb	1	; () banked
  5457  0054B8  90D8               	bcf	status,0,c
  5458  0054BA  0101               	movlb	1	; () banked
  5459  0054BC  3315               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5460  0054BE  0101               	movlb	1	; () banked
  5461  0054C0  3314               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5462  0054C2  0101               	movlb	1	; () banked
  5463  0054C4  3313               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5464  0054C6  0101               	movlb	1	; () banked
  5465  0054C8  3312               	rrcf	___llmod@divisor& (0+255),f,b
  5466                           
  5467                           ; BSR set to: 1
  5468  0054CA  0101               	movlb	1	; () banked
  5469  0054CC  0101               	movlb	1	; () banked
  5470  0054CE  2F17               	decfsz	___llmod@counter& (0+255),f,b
  5471  0054D0  D7C0               	goto	l8904
  5472  0054D2                     l891:
  5473                           
  5474                           ; BSR set to: 1
  5475  0054D2  C10E  F10E         	movff	___llmod@dividend,?___llmod
  5476  0054D6  C10F  F10F         	movff	___llmod@dividend+1,?___llmod+1
  5477  0054DA  C110  F110         	movff	___llmod@dividend+2,?___llmod+2
  5478  0054DE  C111  F111         	movff	___llmod@dividend+3,?___llmod+3
  5479                           
  5480                           ; BSR set to: 1
  5481  0054E2  0012               	return	
  5482  0054E4                     __end_of___llmod:
  5483                           	opt stack 0
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           intcon	equ	0xFF2
  5491                           postinc0	equ	0xFEE
  5492                           wreg	equ	0xFE8
  5493                           postdec1	equ	0xFE5
  5494                           fsr1l	equ	0xFE1
  5495                           indf2	equ	0xFDF
  5496                           postinc2	equ	0xFDE
  5497                           postdec2	equ	0xFDD
  5498                           fsr2h	equ	0xFDA
  5499                           fsr2l	equ	0xFD9
  5500                           status	equ	0xFD8
  5501                           
  5502 ;; *************** function ___lldiv *****************
  5503 ;; Defined at:
  5504 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  dividend        4    0[BANK1 ] unsigned long 
  5507 ;;  divisor         4    4[BANK1 ] unsigned long 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  quotient        4    9[BANK1 ] unsigned long 
  5510 ;;  counter         1   13[BANK1 ] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  4    0[BANK1 ] unsigned long 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5520 ;;      Params:         0       0       8       0       0       0       0       0       0
  5521 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5522 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5523 ;;      Totals:         0       0      14       0       0       0       0       0       0
  5524 ;;Total ram usage:       14 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:   11
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_sprintf
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text14
  5535  004C84                     __ptext14:
  5536                           	opt stack 0
  5537  004C84                     ___lldiv:
  5538                           	opt stack 16
  5539                           
  5540                           ; BSR set to: 1
  5541                           ;incstack = 0
  5542                           ;incstack = 0
  5543  004C84  0E00               	movlw	0
  5544  004C86  0101               	movlb	1	; () banked
  5545  004C88  0101               	movlb	1	; () banked
  5546  004C8A  6F09               	movwf	___lldiv@quotient& (0+255),b
  5547  004C8C  0E00               	movlw	0
  5548  004C8E  0101               	movlb	1	; () banked
  5549  004C90  6F0A               	movwf	(___lldiv@quotient+1)& (0+255),b
  5550  004C92  0E00               	movlw	0
  5551  004C94  0101               	movlb	1	; () banked
  5552  004C96  6F0B               	movwf	(___lldiv@quotient+2)& (0+255),b
  5553  004C98  0E00               	movlw	0
  5554  004C9A  0101               	movlb	1	; () banked
  5555  004C9C  6F0C               	movwf	(___lldiv@quotient+3)& (0+255),b
  5556                           
  5557                           ; BSR set to: 1
  5558  004C9E  0101               	movlb	1	; () banked
  5559  004CA0  0101               	movlb	1	; () banked
  5560  004CA2  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5561  004CA4  1104               	iorwf	___lldiv@divisor& (0+255),w,b
  5562  004CA6  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5563  004CA8  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5564  004CAA  B4D8               	btfsc	status,2,c
  5565  004CAC  D067               	goto	l881
  5566                           
  5567                           ; BSR set to: 1
  5568  004CAE  0101               	movlb	1	; () banked
  5569  004CB0  6F08               	movwf	??___lldiv& (0+255),b
  5570  004CB2  0E01               	movlw	1
  5571  004CB4  0101               	movlb	1	; () banked
  5572  004CB6  0101               	movlb	1	; () banked
  5573  004CB8  6F0D               	movwf	___lldiv@counter& (0+255),b
  5574  004CBA  0101               	movlb	1	; () banked
  5575  004CBC  5108               	movf	??___lldiv& (0+255),w,b
  5576  004CBE  D00D               	goto	l11572
  5577  004CC0                     l11570:
  5578                           
  5579                           ; BSR set to: 1
  5580  004CC0  0101               	movlb	1	; () banked
  5581  004CC2  90D8               	bcf	status,0,c
  5582  004CC4  0101               	movlb	1	; () banked
  5583  004CC6  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  5584  004CC8  0101               	movlb	1	; () banked
  5585  004CCA  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  5586  004CCC  0101               	movlb	1	; () banked
  5587  004CCE  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  5588  004CD0  0101               	movlb	1	; () banked
  5589  004CD2  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  5590  004CD4  0101               	movlb	1	; () banked
  5591  004CD6  0101               	movlb	1	; () banked
  5592  004CD8  2B0D               	incf	___lldiv@counter& (0+255),f,b
  5593  004CDA                     l11572:
  5594                           
  5595                           ; BSR set to: 1
  5596  004CDA  0101               	movlb	1	; () banked
  5597  004CDC  0101               	movlb	1	; () banked
  5598  004CDE  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  5599  004CE0  D7EF               	goto	l11570
  5600  004CE2                     l11574:
  5601                           
  5602                           ; BSR set to: 1
  5603  004CE2  0101               	movlb	1	; () banked
  5604  004CE4  90D8               	bcf	status,0,c
  5605  004CE6  0101               	movlb	1	; () banked
  5606  004CE8  3709               	rlcf	___lldiv@quotient& (0+255),f,b
  5607  004CEA  0101               	movlb	1	; () banked
  5608  004CEC  370A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  5609  004CEE  0101               	movlb	1	; () banked
  5610  004CF0  370B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  5611  004CF2  0101               	movlb	1	; () banked
  5612  004CF4  370C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  5613                           
  5614                           ; BSR set to: 1
  5615  004CF6  0101               	movlb	1	; () banked
  5616  004CF8  0101               	movlb	1	; () banked
  5617  004CFA  5104               	movf	___lldiv@divisor& (0+255),w,b
  5618  004CFC  0101               	movlb	1	; () banked
  5619  004CFE  0101               	movlb	1	; () banked
  5620  004D00  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  5621  004D02  0101               	movlb	1	; () banked
  5622  004D04  0101               	movlb	1	; () banked
  5623  004D06  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5624  004D08  0101               	movlb	1	; () banked
  5625  004D0A  0101               	movlb	1	; () banked
  5626  004D0C  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  5627  004D0E  0101               	movlb	1	; () banked
  5628  004D10  0101               	movlb	1	; () banked
  5629  004D12  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5630  004D14  0101               	movlb	1	; () banked
  5631  004D16  0101               	movlb	1	; () banked
  5632  004D18  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  5633  004D1A  0101               	movlb	1	; () banked
  5634  004D1C  0101               	movlb	1	; () banked
  5635  004D1E  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5636  004D20  0101               	movlb	1	; () banked
  5637  004D22  0101               	movlb	1	; () banked
  5638  004D24  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  5639  004D26  A0D8               	btfss	status,0,c
  5640  004D28  D01B               	goto	l11582
  5641                           
  5642                           ; BSR set to: 1
  5643  004D2A  0101               	movlb	1	; () banked
  5644  004D2C  0101               	movlb	1	; () banked
  5645  004D2E  5104               	movf	___lldiv@divisor& (0+255),w,b
  5646  004D30  0101               	movlb	1	; () banked
  5647  004D32  0101               	movlb	1	; () banked
  5648  004D34  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  5649  004D36  0101               	movlb	1	; () banked
  5650  004D38  0101               	movlb	1	; () banked
  5651  004D3A  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5652  004D3C  0101               	movlb	1	; () banked
  5653  004D3E  0101               	movlb	1	; () banked
  5654  004D40  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  5655  004D42  0101               	movlb	1	; () banked
  5656  004D44  0101               	movlb	1	; () banked
  5657  004D46  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5658  004D48  0101               	movlb	1	; () banked
  5659  004D4A  0101               	movlb	1	; () banked
  5660  004D4C  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  5661  004D4E  0101               	movlb	1	; () banked
  5662  004D50  0101               	movlb	1	; () banked
  5663  004D52  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5664  004D54  0101               	movlb	1	; () banked
  5665  004D56  0101               	movlb	1	; () banked
  5666  004D58  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  5667                           
  5668                           ; BSR set to: 1
  5669  004D5A  0101               	movlb	1	; () banked
  5670  004D5C  0101               	movlb	1	; () banked
  5671  004D5E  8109               	bsf	___lldiv@quotient& (0+255),0,b
  5672  004D60                     l11582:
  5673                           
  5674                           ; BSR set to: 1
  5675  004D60  0101               	movlb	1	; () banked
  5676  004D62  90D8               	bcf	status,0,c
  5677  004D64  0101               	movlb	1	; () banked
  5678  004D66  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  5679  004D68  0101               	movlb	1	; () banked
  5680  004D6A  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  5681  004D6C  0101               	movlb	1	; () banked
  5682  004D6E  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  5683  004D70  0101               	movlb	1	; () banked
  5684  004D72  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  5685                           
  5686                           ; BSR set to: 1
  5687  004D74  0101               	movlb	1	; () banked
  5688  004D76  0101               	movlb	1	; () banked
  5689  004D78  2F0D               	decfsz	___lldiv@counter& (0+255),f,b
  5690  004D7A  D7B3               	goto	l11574
  5691  004D7C                     l881:
  5692                           
  5693                           ; BSR set to: 1
  5694  004D7C  C109  F100         	movff	___lldiv@quotient,?___lldiv
  5695  004D80  C10A  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  5696  004D84  C10B  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  5697  004D88  C10C  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  5698                           
  5699                           ; BSR set to: 1
  5700  004D8C  0012               	return	
  5701  004D8E                     __end_of___lldiv:
  5702                           	opt stack 0
  5703                           tblptru	equ	0xFF8
  5704                           tblptrh	equ	0xFF7
  5705                           tblptrl	equ	0xFF6
  5706                           tablat	equ	0xFF5
  5707                           prodh	equ	0xFF4
  5708                           prodl	equ	0xFF3
  5709                           intcon	equ	0xFF2
  5710                           postinc0	equ	0xFEE
  5711                           wreg	equ	0xFE8
  5712                           postdec1	equ	0xFE5
  5713                           fsr1l	equ	0xFE1
  5714                           indf2	equ	0xFDF
  5715                           postinc2	equ	0xFDE
  5716                           postdec2	equ	0xFDD
  5717                           fsr2h	equ	0xFDA
  5718                           fsr2l	equ	0xFD9
  5719                           status	equ	0xFD8
  5720                           
  5721 ;; *************** function ___ftneg *****************
  5722 ;; Defined at:
  5723 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  f1              3    0[BANK1 ] float 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;		None
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  3    0[BANK1 ] float 
  5730 ;; Registers used:
  5731 ;;		wreg, status,2, status,0
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5737 ;;      Params:         0       0       3       0       0       0       0       0       0
  5738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5740 ;;      Totals:         0       0       3       0       0       0       0       0       0
  5741 ;;Total ram usage:        3 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:   11
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_sprintf
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           	psect	text15
  5752  006452                     __ptext15:
  5753                           	opt stack 0
  5754  006452                     ___ftneg:
  5755                           	opt stack 16
  5756                           
  5757                           ; BSR set to: 1
  5758                           ;incstack = 0
  5759                           ;incstack = 0
  5760  006452  0E7F               	movlw	127
  5761  006454  0101               	movlb	1	; () banked
  5762  006456  0101               	movlb	1	; () banked
  5763  006458  1502               	andwf	(___ftneg@f1+2)& (0+255),w,b
  5764  00645A  0101               	movlb	1	; () banked
  5765  00645C  1101               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  5766  00645E  0101               	movlb	1	; () banked
  5767  006460  1100               	iorwf	___ftneg@f1& (0+255),w,b
  5768  006462  B4D8               	btfsc	status,2,c
  5769  006464  D00C               	goto	l827
  5770                           
  5771                           ; BSR set to: 1
  5772  006466  0E00               	movlw	0
  5773  006468  0101               	movlb	1	; () banked
  5774  00646A  0101               	movlb	1	; () banked
  5775  00646C  1B00               	xorwf	___ftneg@f1& (0+255),f,b
  5776  00646E  0E00               	movlw	0
  5777  006470  0101               	movlb	1	; () banked
  5778  006472  0101               	movlb	1	; () banked
  5779  006474  1B01               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  5780  006476  0E80               	movlw	128
  5781  006478  0101               	movlb	1	; () banked
  5782  00647A  0101               	movlb	1	; () banked
  5783  00647C  1B02               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  5784  00647E                     l827:
  5785                           
  5786                           ; BSR set to: 1
  5787  00647E  C100  F100         	movff	___ftneg@f1,?___ftneg
  5788  006482  C101  F101         	movff	___ftneg@f1+1,?___ftneg+1
  5789  006486  C102  F102         	movff	___ftneg@f1+2,?___ftneg+2
  5790                           
  5791                           ; BSR set to: 1
  5792  00648A  0012               	return	
  5793  00648C                     __end_of___ftneg:
  5794                           	opt stack 0
  5795                           tblptru	equ	0xFF8
  5796                           tblptrh	equ	0xFF7
  5797                           tblptrl	equ	0xFF6
  5798                           tablat	equ	0xFF5
  5799                           prodh	equ	0xFF4
  5800                           prodl	equ	0xFF3
  5801                           intcon	equ	0xFF2
  5802                           postinc0	equ	0xFEE
  5803                           wreg	equ	0xFE8
  5804                           postdec1	equ	0xFE5
  5805                           fsr1l	equ	0xFE1
  5806                           indf2	equ	0xFDF
  5807                           postinc2	equ	0xFDE
  5808                           postdec2	equ	0xFDD
  5809                           fsr2h	equ	0xFDA
  5810                           fsr2l	equ	0xFD9
  5811                           status	equ	0xFD8
  5812                           
  5813 ;; *************** function ___ftge *****************
  5814 ;; Defined at:
  5815 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  ff1             3    0[BANK1 ] float 
  5818 ;;  ff2             3    3[BANK1 ] float 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;		None
  5821 ;; Return value:  Size  Location     Type
  5822 ;;		None               void
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5830 ;;      Params:         0       0       6       0       0       0       0       0       0
  5831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5832 ;;      Temps:          0       0       3       0       0       0       0       0       0
  5833 ;;      Totals:         0       0       9       0       0       0       0       0       0
  5834 ;;Total ram usage:        9 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:   11
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_check_light
  5841 ;;		_sprintf
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text16
  5846  004E90                     __ptext16:
  5847                           	opt stack 0
  5848  004E90                     ___ftge:
  5849                           	opt stack 17
  5850                           
  5851                           ; BSR set to: 1
  5852                           ;incstack = 0
  5853                           ;incstack = 0
  5854  004E90  0101               	movlb	1	; () banked
  5855  004E92  0101               	movlb	1	; () banked
  5856  004E94  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5857  004E96  D021               	goto	l11546
  5858                           
  5859                           ; BSR set to: 1
  5860  004E98  0101               	movlb	1	; () banked
  5861  004E9A  C100  F106         	movff	___ftge@ff1,??___ftge
  5862  004E9E  0101               	movlb	1	; () banked
  5863  004EA0  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  5864  004EA4  0101               	movlb	1	; () banked
  5865  004EA6  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  5866  004EAA  0101               	movlb	1	; () banked
  5867  004EAC  1F06               	comf	??___ftge& (0+255),f,b
  5868  004EAE  1F07               	comf	(??___ftge+1)& (0+255),f,b
  5869  004EB0  1F08               	comf	(??___ftge+2)& (0+255),f,b
  5870  004EB2  2B06               	incf	??___ftge& (0+255),f,b
  5871  004EB4  0E00               	movlw	0
  5872  004EB6  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  5873  004EB8  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  5874  004EBA  0E00               	movlw	0
  5875  004EBC  0101               	movlb	1	; () banked
  5876  004EBE  2506               	addwf	??___ftge& (0+255),w,b
  5877  004EC0  0101               	movlb	1	; () banked
  5878  004EC2  0101               	movlb	1	; () banked
  5879  004EC4  6F00               	movwf	___ftge@ff1& (0+255),b
  5880  004EC6  0E00               	movlw	0
  5881  004EC8  0101               	movlb	1	; () banked
  5882  004ECA  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  5883  004ECC  0101               	movlb	1	; () banked
  5884  004ECE  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  5885  004ED0  0E80               	movlw	128
  5886  004ED2  0101               	movlb	1	; () banked
  5887  004ED4  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  5888  004ED6  0101               	movlb	1	; () banked
  5889  004ED8  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  5890  004EDA                     l11546:
  5891                           
  5892                           ; BSR set to: 1
  5893  004EDA  0101               	movlb	1	; () banked
  5894  004EDC  0101               	movlb	1	; () banked
  5895  004EDE  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5896  004EE0  D021               	goto	l11550
  5897                           
  5898                           ; BSR set to: 1
  5899  004EE2  0101               	movlb	1	; () banked
  5900  004EE4  C103  F106         	movff	___ftge@ff2,??___ftge
  5901  004EE8  0101               	movlb	1	; () banked
  5902  004EEA  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  5903  004EEE  0101               	movlb	1	; () banked
  5904  004EF0  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  5905  004EF4  0101               	movlb	1	; () banked
  5906  004EF6  1F06               	comf	??___ftge& (0+255),f,b
  5907  004EF8  1F07               	comf	(??___ftge+1)& (0+255),f,b
  5908  004EFA  1F08               	comf	(??___ftge+2)& (0+255),f,b
  5909  004EFC  2B06               	incf	??___ftge& (0+255),f,b
  5910  004EFE  0E00               	movlw	0
  5911  004F00  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  5912  004F02  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  5913  004F04  0E00               	movlw	0
  5914  004F06  0101               	movlb	1	; () banked
  5915  004F08  2506               	addwf	??___ftge& (0+255),w,b
  5916  004F0A  0101               	movlb	1	; () banked
  5917  004F0C  0101               	movlb	1	; () banked
  5918  004F0E  6F03               	movwf	___ftge@ff2& (0+255),b
  5919  004F10  0E00               	movlw	0
  5920  004F12  0101               	movlb	1	; () banked
  5921  004F14  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  5922  004F16  0101               	movlb	1	; () banked
  5923  004F18  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  5924  004F1A  0E80               	movlw	128
  5925  004F1C  0101               	movlb	1	; () banked
  5926  004F1E  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  5927  004F20  0101               	movlb	1	; () banked
  5928  004F22  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  5929  004F24                     l11550:
  5930                           
  5931                           ; BSR set to: 1
  5932  004F24  0E00               	movlw	0
  5933  004F26  0101               	movlb	1	; () banked
  5934  004F28  0101               	movlb	1	; () banked
  5935  004F2A  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  5936  004F2C  0E00               	movlw	0
  5937  004F2E  0101               	movlb	1	; () banked
  5938  004F30  0101               	movlb	1	; () banked
  5939  004F32  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5940  004F34  0E80               	movlw	128
  5941  004F36  0101               	movlb	1	; () banked
  5942  004F38  0101               	movlb	1	; () banked
  5943  004F3A  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5944                           
  5945                           ; BSR set to: 1
  5946  004F3C  0E00               	movlw	0
  5947  004F3E  0101               	movlb	1	; () banked
  5948  004F40  0101               	movlb	1	; () banked
  5949  004F42  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  5950  004F44  0E00               	movlw	0
  5951  004F46  0101               	movlb	1	; () banked
  5952  004F48  0101               	movlb	1	; () banked
  5953  004F4A  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5954  004F4C  0E80               	movlw	128
  5955  004F4E  0101               	movlb	1	; () banked
  5956  004F50  0101               	movlb	1	; () banked
  5957  004F52  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5958  004F54  0101               	movlb	1	; () banked
  5959  004F56  0101               	movlb	1	; () banked
  5960  004F58  5103               	movf	___ftge@ff2& (0+255),w,b
  5961  004F5A  0101               	movlb	1	; () banked
  5962  004F5C  0101               	movlb	1	; () banked
  5963  004F5E  5D00               	subwf	___ftge@ff1& (0+255),w,b
  5964  004F60  0101               	movlb	1	; () banked
  5965  004F62  0101               	movlb	1	; () banked
  5966  004F64  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  5967  004F66  0101               	movlb	1	; () banked
  5968  004F68  0101               	movlb	1	; () banked
  5969  004F6A  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5970  004F6C  0101               	movlb	1	; () banked
  5971  004F6E  0101               	movlb	1	; () banked
  5972  004F70  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  5973  004F72  0101               	movlb	1	; () banked
  5974  004F74  0101               	movlb	1	; () banked
  5975  004F76  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5976  004F78  B0D8               	btfsc	status,0,c
  5977  004F7A  D002               	goto	l11556
  5978                           
  5979                           ; BSR set to: 1
  5980  004F7C  90D8               	bcf	status,0,c
  5981  004F7E  D001               	goto	l811
  5982  004F80                     l11556:
  5983                           
  5984                           ; BSR set to: 1
  5985  004F80  80D8               	bsf	status,0,c
  5986  004F82                     l811:
  5987                           
  5988                           ; BSR set to: 1
  5989  004F82  0012               	return	
  5990  004F84                     __end_of___ftge:
  5991                           	opt stack 0
  5992                           tblptru	equ	0xFF8
  5993                           tblptrh	equ	0xFF7
  5994                           tblptrl	equ	0xFF6
  5995                           tablat	equ	0xFF5
  5996                           prodh	equ	0xFF4
  5997                           prodl	equ	0xFF3
  5998                           intcon	equ	0xFF2
  5999                           postinc0	equ	0xFEE
  6000                           wreg	equ	0xFE8
  6001                           postdec1	equ	0xFE5
  6002                           fsr1l	equ	0xFE1
  6003                           indf2	equ	0xFDF
  6004                           postinc2	equ	0xFDE
  6005                           postdec2	equ	0xFDD
  6006                           fsr2h	equ	0xFDA
  6007                           fsr2l	equ	0xFD9
  6008                           status	equ	0xFD8
  6009                           
  6010 ;; *************** function ___asftsub *****************
  6011 ;; Defined at:
  6012 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  f1p             2   76[BANK1 ] PTR float 
  6015 ;;		 -> sprintf@fval(3), 
  6016 ;;  f2              3   78[BANK1 ] float 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  3   76[BANK1 ] float 
  6021 ;; Registers used:
  6022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6028 ;;      Params:         0       0       5       0       0       0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6031 ;;      Totals:         0       0       5       0       0       0       0       0       0
  6032 ;;Total ram usage:        5 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:   14
  6035 ;; This function calls:
  6036 ;;		___ftsub
  6037 ;; This function is called by:
  6038 ;;		_sprintf
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           	psect	text17
  6043  00621C                     __ptext17:
  6044                           	opt stack 0
  6045  00621C                     ___asftsub:
  6046                           	opt stack 13
  6047                           
  6048                           ;	Return value of ___asftsub is never used
  6049                           
  6050                           ; BSR set to: 1
  6051                           ;incstack = 0
  6052                           ;incstack = 0
  6053  00621C  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  6054  006220  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  6055  006224  0101               	movlb	1	; () banked
  6056  006226  CFDE F146          	movff	postinc2,?___ftsub
  6057  00622A  0101               	movlb	1	; () banked
  6058  00622C  CFDE F147          	movff	postinc2,?___ftsub+1
  6059  006230  0101               	movlb	1	; () banked
  6060  006232  CFDD F148          	movff	postdec2,?___ftsub+2
  6061  006236  C14E  F149         	movff	___asftsub@f2,?___ftsub+3
  6062  00623A  C14F  F14A         	movff	___asftsub@f2+1,?___ftsub+4
  6063  00623E  C150  F14B         	movff	___asftsub@f2+2,?___ftsub+5
  6064  006242  EC2F  F031         	call	___ftsub	;wreg free
  6065  006246  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  6066  00624A  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  6067  00624E  C146  FFDE         	movff	?___ftsub,postinc2
  6068  006252  C147  FFDE         	movff	?___ftsub+1,postinc2
  6069  006256  C148  FFDD         	movff	?___ftsub+2,postdec2
  6070  00625A  52DD               	movf	postdec2,f,c
  6071  00625C  0012               	return	
  6072  00625E                     __end_of___asftsub:
  6073                           	opt stack 0
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           prodh	equ	0xFF4
  6079                           prodl	equ	0xFF3
  6080                           intcon	equ	0xFF2
  6081                           postinc0	equ	0xFEE
  6082                           wreg	equ	0xFE8
  6083                           postdec1	equ	0xFE5
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           postdec2	equ	0xFDD
  6088                           fsr2h	equ	0xFDA
  6089                           fsr2l	equ	0xFD9
  6090                           status	equ	0xFD8
  6091                           
  6092 ;; *************** function ___ftsub *****************
  6093 ;; Defined at:
  6094 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  f1              3   70[BANK1 ] float 
  6097 ;;  f2              3   73[BANK1 ] float 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  3   70[BANK1 ] float 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0, cstack
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6109 ;;      Params:         0       0       6       0       0       0       0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6112 ;;      Totals:         0       0       6       0       0       0       0       0       0
  6113 ;;Total ram usage:        6 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; Hardware stack levels required when called:   13
  6116 ;; This function calls:
  6117 ;;		___ftadd
  6118 ;; This function is called by:
  6119 ;;		___asftsub
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text18
  6124  00625E                     __ptext18:
  6125                           	opt stack 0
  6126  00625E                     ___ftsub:
  6127                           	opt stack 13
  6128                           
  6129                           ;incstack = 0
  6130                           ;incstack = 0
  6131  00625E  0E00               	movlw	0
  6132  006260  0101               	movlb	1	; () banked
  6133  006262  0101               	movlb	1	; () banked
  6134  006264  1B49               	xorwf	___ftsub@f2& (0+255),f,b
  6135  006266  0E00               	movlw	0
  6136  006268  0101               	movlb	1	; () banked
  6137  00626A  0101               	movlb	1	; () banked
  6138  00626C  1B4A               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  6139  00626E  0E80               	movlw	128
  6140  006270  0101               	movlb	1	; () banked
  6141  006272  0101               	movlb	1	; () banked
  6142  006274  1B4B               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  6143                           
  6144                           ; BSR set to: 1
  6145  006276  C146  F138         	movff	___ftsub@f1,?___ftadd
  6146  00627A  C147  F139         	movff	___ftsub@f1+1,?___ftadd+1
  6147  00627E  C148  F13A         	movff	___ftsub@f1+2,?___ftadd+2
  6148  006282  C149  F13B         	movff	___ftsub@f2,?___ftadd+3
  6149  006286  C14A  F13C         	movff	___ftsub@f2+1,?___ftadd+4
  6150  00628A  C14B  F13D         	movff	___ftsub@f2+2,?___ftadd+5
  6151  00628E  ECF3  F018         	call	___ftadd	;wreg free
  6152  006292  C13A  F148         	movff	?___ftadd+2,?___ftsub+2
  6153  006296  C139  F147         	movff	?___ftadd+1,?___ftsub+1
  6154  00629A  C138  F146         	movff	?___ftadd,?___ftsub
  6155  00629E  0012               	return	
  6156  0062A0                     __end_of___ftsub:
  6157                           	opt stack 0
  6158                           tblptru	equ	0xFF8
  6159                           tblptrh	equ	0xFF7
  6160                           tblptrl	equ	0xFF6
  6161                           tablat	equ	0xFF5
  6162                           prodh	equ	0xFF4
  6163                           prodl	equ	0xFF3
  6164                           intcon	equ	0xFF2
  6165                           postinc0	equ	0xFEE
  6166                           wreg	equ	0xFE8
  6167                           postdec1	equ	0xFE5
  6168                           fsr1l	equ	0xFE1
  6169                           indf2	equ	0xFDF
  6170                           postinc2	equ	0xFDE
  6171                           postdec2	equ	0xFDD
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function ___asftmul *****************
  6177 ;; Defined at:
  6178 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  f1p             2   39[BANK1 ] PTR float 
  6181 ;;		 -> sprintf@integ(3), 
  6182 ;;  f2              3   41[BANK1 ] float 
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  3   39[BANK1 ] float 
  6187 ;; Registers used:
  6188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6194 ;;      Params:         0       0       5       0       0       0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6197 ;;      Totals:         0       0       5       0       0       0       0       0       0
  6198 ;;Total ram usage:        5 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:   13
  6201 ;; This function calls:
  6202 ;;		___ftmul
  6203 ;; This function is called by:
  6204 ;;		_sprintf
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text19
  6209  0062A0                     __ptext19:
  6210                           	opt stack 0
  6211  0062A0                     ___asftmul:
  6212                           	opt stack 14
  6213                           
  6214                           ;	Return value of ___asftmul is never used
  6215                           
  6216                           ;incstack = 0
  6217                           ;incstack = 0
  6218  0062A0  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  6219  0062A4  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  6220  0062A8  0101               	movlb	1	; () banked
  6221  0062AA  CFDE F116          	movff	postinc2,?___ftmul
  6222  0062AE  0101               	movlb	1	; () banked
  6223  0062B0  CFDE F117          	movff	postinc2,?___ftmul+1
  6224  0062B4  0101               	movlb	1	; () banked
  6225  0062B6  CFDD F118          	movff	postdec2,?___ftmul+2
  6226  0062BA  C129  F119         	movff	___asftmul@f2,?___ftmul+3
  6227  0062BE  C12A  F11A         	movff	___asftmul@f2+1,?___ftmul+4
  6228  0062C2  C12B  F11B         	movff	___asftmul@f2+2,?___ftmul+5
  6229  0062C6  ECE1  F01C         	call	___ftmul	;wreg free
  6230  0062CA  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  6231  0062CE  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  6232  0062D2  C116  FFDE         	movff	?___ftmul,postinc2
  6233  0062D6  C117  FFDE         	movff	?___ftmul+1,postinc2
  6234  0062DA  C118  FFDD         	movff	?___ftmul+2,postdec2
  6235  0062DE  52DD               	movf	postdec2,f,c
  6236  0062E0  0012               	return	
  6237  0062E2                     __end_of___asftmul:
  6238                           	opt stack 0
  6239                           tblptru	equ	0xFF8
  6240                           tblptrh	equ	0xFF7
  6241                           tblptrl	equ	0xFF6
  6242                           tablat	equ	0xFF5
  6243                           prodh	equ	0xFF4
  6244                           prodl	equ	0xFF3
  6245                           intcon	equ	0xFF2
  6246                           postinc0	equ	0xFEE
  6247                           wreg	equ	0xFE8
  6248                           postdec1	equ	0xFE5
  6249                           fsr1l	equ	0xFE1
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           postdec2	equ	0xFDD
  6253                           fsr2h	equ	0xFDA
  6254                           fsr2l	equ	0xFD9
  6255                           status	equ	0xFD8
  6256                           
  6257 ;; *************** function ___asftadd *****************
  6258 ;; Defined at:
  6259 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  f1p             2   70[BANK1 ] PTR float 
  6262 ;;		 -> sprintf@fval(3), 
  6263 ;;  f2              3   72[BANK1 ] float 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;		None
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  3   70[BANK1 ] float 
  6268 ;; Registers used:
  6269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6275 ;;      Params:         0       0       5       0       0       0       0       0       0
  6276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6278 ;;      Totals:         0       0       5       0       0       0       0       0       0
  6279 ;;Total ram usage:        5 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; Hardware stack levels required when called:   13
  6282 ;; This function calls:
  6283 ;;		___ftadd
  6284 ;; This function is called by:
  6285 ;;		_sprintf
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text20
  6290  0062E2                     __ptext20:
  6291                           	opt stack 0
  6292  0062E2                     ___asftadd:
  6293                           	opt stack 14
  6294                           
  6295                           ;	Return value of ___asftadd is never used
  6296                           
  6297                           ;incstack = 0
  6298                           ;incstack = 0
  6299  0062E2  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  6300  0062E6  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  6301  0062EA  0101               	movlb	1	; () banked
  6302  0062EC  CFDE F138          	movff	postinc2,?___ftadd
  6303  0062F0  0101               	movlb	1	; () banked
  6304  0062F2  CFDE F139          	movff	postinc2,?___ftadd+1
  6305  0062F6  0101               	movlb	1	; () banked
  6306  0062F8  CFDD F13A          	movff	postdec2,?___ftadd+2
  6307  0062FC  C148  F13B         	movff	___asftadd@f2,?___ftadd+3
  6308  006300  C149  F13C         	movff	___asftadd@f2+1,?___ftadd+4
  6309  006304  C14A  F13D         	movff	___asftadd@f2+2,?___ftadd+5
  6310  006308  ECF3  F018         	call	___ftadd	;wreg free
  6311  00630C  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  6312  006310  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  6313  006314  C138  FFDE         	movff	?___ftadd,postinc2
  6314  006318  C139  FFDE         	movff	?___ftadd+1,postinc2
  6315  00631C  C13A  FFDD         	movff	?___ftadd+2,postdec2
  6316  006320  52DD               	movf	postdec2,f,c
  6317  006322  0012               	return	
  6318  006324                     __end_of___asftadd:
  6319                           	opt stack 0
  6320                           tblptru	equ	0xFF8
  6321                           tblptrh	equ	0xFF7
  6322                           tblptrl	equ	0xFF6
  6323                           tablat	equ	0xFF5
  6324                           prodh	equ	0xFF4
  6325                           prodl	equ	0xFF3
  6326                           intcon	equ	0xFF2
  6327                           postinc0	equ	0xFEE
  6328                           wreg	equ	0xFE8
  6329                           postdec1	equ	0xFE5
  6330                           fsr1l	equ	0xFE1
  6331                           indf2	equ	0xFDF
  6332                           postinc2	equ	0xFDE
  6333                           postdec2	equ	0xFDD
  6334                           fsr2h	equ	0xFDA
  6335                           fsr2l	equ	0xFD9
  6336                           status	equ	0xFD8
  6337                           
  6338 ;; *************** function __div_to_l_ *****************
  6339 ;; Defined at:
  6340 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  f1              3    0[BANK1 ] float 
  6343 ;;  f2              3    3[BANK1 ] float 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  quot            4    7[BANK1 ] unsigned long 
  6346 ;;  exp1            1   12[BANK1 ] unsigned char 
  6347 ;;  cntr            1   11[BANK1 ] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  4    0[BANK1 ] unsigned long 
  6350 ;; Registers used:
  6351 ;;		wreg, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6357 ;;      Params:         0       0       6       0       0       0       0       0       0
  6358 ;;      Locals:         0       0       6       0       0       0       0       0       0
  6359 ;;      Temps:          0       0       1       0       0       0       0       0       0
  6360 ;;      Totals:         0       0      13       0       0       0       0       0       0
  6361 ;;Total ram usage:       13 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:   11
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_sprintf
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text21
  6372  003BB0                     __ptext21:
  6373                           	opt stack 0
  6374  003BB0                     __div_to_l_:
  6375                           	opt stack 16
  6376                           
  6377                           ;incstack = 0
  6378                           ;incstack = 0
  6379  003BB0  0101               	movlb	1	; () banked
  6380  003BB2  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6381  003BB4  0101               	movlb	1	; () banked
  6382  003BB6  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6383  003BB8  0101               	movlb	1	; () banked
  6384  003BBA  0101               	movlb	1	; () banked
  6385  003BBC  6F0C               	movwf	__div_to_l_@exp1& (0+255),b
  6386  003BBE  0101               	movlb	1	; () banked
  6387  003BC0  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  6388  003BC2  D001               	goto	l11170
  6389  003BC4  D0B7               	goto	u10450
  6390  003BC6                     l11170:
  6391                           
  6392                           ; BSR set to: 1
  6393  003BC6  0101               	movlb	1	; () banked
  6394  003BC8  3505               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6395  003BCA  0101               	movlb	1	; () banked
  6396  003BCC  3506               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6397  003BCE  0101               	movlb	1	; () banked
  6398  003BD0  0101               	movlb	1	; () banked
  6399  003BD2  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  6400  003BD4  0101               	movlb	1	; () banked
  6401  003BD6  670B               	tstfsz	__div_to_l_@cntr& (0+255),b
  6402  003BD8  D001               	goto	l11176
  6403  003BDA  D0AC               	goto	u10450
  6404  003BDC                     l11176:
  6405                           
  6406                           ; BSR set to: 1
  6407  003BDC  0101               	movlb	1	; () banked
  6408  003BDE  0101               	movlb	1	; () banked
  6409  003BE0  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6410                           
  6411                           ; BSR set to: 1
  6412  003BE2  0EFF               	movlw	255
  6413  003BE4  0101               	movlb	1	; () banked
  6414  003BE6  0101               	movlb	1	; () banked
  6415  003BE8  1700               	andwf	__div_to_l_@f1& (0+255),f,b
  6416  003BEA  0EFF               	movlw	255
  6417  003BEC  0101               	movlb	1	; () banked
  6418  003BEE  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6419  003BF0  0EFF               	movlw	255
  6420  003BF2  0101               	movlb	1	; () banked
  6421  003BF4  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6422  003BF6  0E00               	movlw	0
  6423  003BF8  0101               	movlb	1	; () banked
  6424  003BFA  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6425                           
  6426                           ; BSR set to: 1
  6427  003BFC  0101               	movlb	1	; () banked
  6428  003BFE  0101               	movlb	1	; () banked
  6429  003C00  8F05               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6430  003C02  0EFF               	movlw	255
  6431  003C04  0101               	movlb	1	; () banked
  6432  003C06  0101               	movlb	1	; () banked
  6433  003C08  1703               	andwf	__div_to_l_@f2& (0+255),f,b
  6434  003C0A  0EFF               	movlw	255
  6435  003C0C  0101               	movlb	1	; () banked
  6436  003C0E  1704               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6437  003C10  0EFF               	movlw	255
  6438  003C12  0101               	movlb	1	; () banked
  6439  003C14  1705               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6440  003C16  0E00               	movlw	0
  6441  003C18  0101               	movlb	1	; () banked
  6442  003C1A  1706               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6443                           
  6444                           ; BSR set to: 1
  6445  003C1C  0E00               	movlw	0
  6446  003C1E  0101               	movlb	1	; () banked
  6447  003C20  0101               	movlb	1	; () banked
  6448  003C22  6F07               	movwf	__div_to_l_@quot& (0+255),b
  6449  003C24  0E00               	movlw	0
  6450  003C26  0101               	movlb	1	; () banked
  6451  003C28  6F08               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6452  003C2A  0E00               	movlw	0
  6453  003C2C  0101               	movlb	1	; () banked
  6454  003C2E  6F09               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6455  003C30  0E00               	movlw	0
  6456  003C32  0101               	movlb	1	; () banked
  6457  003C34  6F0A               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6458                           
  6459                           ; BSR set to: 1
  6460  003C36  0E7F               	movlw	127
  6461  003C38  0101               	movlb	1	; () banked
  6462  003C3A  0101               	movlb	1	; () banked
  6463  003C3C  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  6464                           
  6465                           ; BSR set to: 1
  6466  003C3E  0101               	movlb	1	; () banked
  6467  003C40  0101               	movlb	1	; () banked
  6468  003C42  510B               	movf	__div_to_l_@cntr& (0+255),w,b
  6469  003C44  0FA0               	addlw	160
  6470  003C46  0101               	movlb	1	; () banked
  6471  003C48  0101               	movlb	1	; () banked
  6472  003C4A  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  6473                           
  6474                           ; BSR set to: 1
  6475  003C4C  0101               	movlb	1	; () banked
  6476  003C4E  6F06               	movwf	??__div_to_l_& (0+255),b
  6477  003C50  0E20               	movlw	32
  6478  003C52  0101               	movlb	1	; () banked
  6479  003C54  0101               	movlb	1	; () banked
  6480  003C56  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  6481  003C58  0101               	movlb	1	; () banked
  6482  003C5A  5106               	movf	??__div_to_l_& (0+255),w,b
  6483  003C5C                     l677:
  6484                           
  6485                           ; BSR set to: 1
  6486  003C5C  0101               	movlb	1	; () banked
  6487  003C5E  90D8               	bcf	status,0,c
  6488  003C60  0101               	movlb	1	; () banked
  6489  003C62  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  6490  003C64  0101               	movlb	1	; () banked
  6491  003C66  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6492  003C68  0101               	movlb	1	; () banked
  6493  003C6A  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6494  003C6C  0101               	movlb	1	; () banked
  6495  003C6E  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6496                           
  6497                           ; BSR set to: 1
  6498  003C70  0101               	movlb	1	; () banked
  6499  003C72  0101               	movlb	1	; () banked
  6500  003C74  5103               	movf	__div_to_l_@f2& (0+255),w,b
  6501  003C76  0101               	movlb	1	; () banked
  6502  003C78  0101               	movlb	1	; () banked
  6503  003C7A  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
  6504  003C7C  0101               	movlb	1	; () banked
  6505  003C7E  0101               	movlb	1	; () banked
  6506  003C80  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6507  003C82  0101               	movlb	1	; () banked
  6508  003C84  0101               	movlb	1	; () banked
  6509  003C86  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6510  003C88  0101               	movlb	1	; () banked
  6511  003C8A  0101               	movlb	1	; () banked
  6512  003C8C  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6513  003C8E  0101               	movlb	1	; () banked
  6514  003C90  0101               	movlb	1	; () banked
  6515  003C92  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6516  003C94  0101               	movlb	1	; () banked
  6517  003C96  0101               	movlb	1	; () banked
  6518  003C98  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6519  003C9A  0101               	movlb	1	; () banked
  6520  003C9C  0101               	movlb	1	; () banked
  6521  003C9E  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6522  003CA0  A0D8               	btfss	status,0,c
  6523  003CA2  D01B               	goto	l11196
  6524                           
  6525                           ; BSR set to: 1
  6526  003CA4  0101               	movlb	1	; () banked
  6527  003CA6  0101               	movlb	1	; () banked
  6528  003CA8  5103               	movf	__div_to_l_@f2& (0+255),w,b
  6529  003CAA  0101               	movlb	1	; () banked
  6530  003CAC  0101               	movlb	1	; () banked
  6531  003CAE  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
  6532  003CB0  0101               	movlb	1	; () banked
  6533  003CB2  0101               	movlb	1	; () banked
  6534  003CB4  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6535  003CB6  0101               	movlb	1	; () banked
  6536  003CB8  0101               	movlb	1	; () banked
  6537  003CBA  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6538  003CBC  0101               	movlb	1	; () banked
  6539  003CBE  0101               	movlb	1	; () banked
  6540  003CC0  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6541  003CC2  0101               	movlb	1	; () banked
  6542  003CC4  0101               	movlb	1	; () banked
  6543  003CC6  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6544  003CC8  0101               	movlb	1	; () banked
  6545  003CCA  0101               	movlb	1	; () banked
  6546  003CCC  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6547  003CCE  0101               	movlb	1	; () banked
  6548  003CD0  0101               	movlb	1	; () banked
  6549  003CD2  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6550                           
  6551                           ; BSR set to: 1
  6552  003CD4  0101               	movlb	1	; () banked
  6553  003CD6  0101               	movlb	1	; () banked
  6554  003CD8  8107               	bsf	__div_to_l_@quot& (0+255),0,b
  6555  003CDA                     l11196:
  6556                           
  6557                           ; BSR set to: 1
  6558  003CDA  0101               	movlb	1	; () banked
  6559  003CDC  90D8               	bcf	status,0,c
  6560  003CDE  0101               	movlb	1	; () banked
  6561  003CE0  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
  6562  003CE2  0101               	movlb	1	; () banked
  6563  003CE4  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6564  003CE6  0101               	movlb	1	; () banked
  6565  003CE8  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6566  003CEA  0101               	movlb	1	; () banked
  6567  003CEC  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6568                           
  6569                           ; BSR set to: 1
  6570  003CEE  0101               	movlb	1	; () banked
  6571  003CF0  0101               	movlb	1	; () banked
  6572  003CF2  2F0B               	decfsz	__div_to_l_@cntr& (0+255),f,b
  6573  003CF4  D7B3               	goto	l677
  6574                           
  6575                           ; BSR set to: 1
  6576  003CF6  0101               	movlb	1	; () banked
  6577  003CF8  0101               	movlb	1	; () banked
  6578  003CFA  AF0C               	btfss	__div_to_l_@exp1& (0+255),7,b
  6579  003CFC  D016               	goto	l11210
  6580                           
  6581                           ; BSR set to: 1
  6582  003CFE  0101               	movlb	1	; () banked
  6583  003D00  0101               	movlb	1	; () banked
  6584  003D02  510C               	movf	__div_to_l_@exp1& (0+255),w,b
  6585  003D04  0A80               	xorlw	128
  6586  003D06  0F9F               	addlw	159
  6587  003D08  A0D8               	btfss	status,0,c
  6588  003D0A  D014               	goto	u10450
  6589  003D0C                     l11206:
  6590                           
  6591                           ; BSR set to: 1
  6592  003D0C  0101               	movlb	1	; () banked
  6593  003D0E  90D8               	bcf	status,0,c
  6594  003D10  0101               	movlb	1	; () banked
  6595  003D12  330A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  6596  003D14  0101               	movlb	1	; () banked
  6597  003D16  3309               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  6598  003D18  0101               	movlb	1	; () banked
  6599  003D1A  3308               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  6600  003D1C  0101               	movlb	1	; () banked
  6601  003D1E  3307               	rrcf	__div_to_l_@quot& (0+255),f,b
  6602                           
  6603                           ; BSR set to: 1
  6604  003D20  0101               	movlb	1	; () banked
  6605  003D22  0101               	movlb	1	; () banked
  6606  003D24  3F0C               	incfsz	__div_to_l_@exp1& (0+255),f,b
  6607  003D26  D7F2               	goto	l11206
  6608  003D28  D024               	goto	l684
  6609  003D2A                     l11210:
  6610                           
  6611                           ; BSR set to: 1
  6612  003D2A  0E1F               	movlw	31
  6613  003D2C  0101               	movlb	1	; () banked
  6614  003D2E  0101               	movlb	1	; () banked
  6615  003D30  650C               	cpfsgt	__div_to_l_@exp1& (0+255),b
  6616  003D32  D01B               	goto	l11218
  6617  003D34                     u10450:
  6618                           
  6619                           ; BSR set to: 1
  6620  003D34  0E00               	movlw	0
  6621  003D36  0101               	movlb	1	; () banked
  6622  003D38  0101               	movlb	1	; () banked
  6623  003D3A  6F00               	movwf	?__div_to_l_& (0+255),b
  6624  003D3C  0E00               	movlw	0
  6625  003D3E  0101               	movlb	1	; () banked
  6626  003D40  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
  6627  003D42  0E00               	movlw	0
  6628  003D44  0101               	movlb	1	; () banked
  6629  003D46  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
  6630  003D48  0E00               	movlw	0
  6631  003D4A  0101               	movlb	1	; () banked
  6632  003D4C  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
  6633  003D4E  D019               	goto	l675
  6634  003D50                     l11216:
  6635                           
  6636                           ; BSR set to: 1
  6637  003D50  0101               	movlb	1	; () banked
  6638  003D52  90D8               	bcf	status,0,c
  6639  003D54  0101               	movlb	1	; () banked
  6640  003D56  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  6641  003D58  0101               	movlb	1	; () banked
  6642  003D5A  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6643  003D5C  0101               	movlb	1	; () banked
  6644  003D5E  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6645  003D60  0101               	movlb	1	; () banked
  6646  003D62  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6647  003D64  0101               	movlb	1	; () banked
  6648  003D66  0101               	movlb	1	; () banked
  6649  003D68  070C               	decf	__div_to_l_@exp1& (0+255),f,b
  6650  003D6A                     l11218:
  6651                           
  6652                           ; BSR set to: 1
  6653  003D6A  0101               	movlb	1	; () banked
  6654  003D6C  0101               	movlb	1	; () banked
  6655  003D6E  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  6656  003D70  D7EF               	goto	l11216
  6657  003D72                     l684:
  6658                           
  6659                           ; BSR set to: 1
  6660  003D72  C107  F100         	movff	__div_to_l_@quot,?__div_to_l_
  6661  003D76  C108  F101         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6662  003D7A  C109  F102         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6663  003D7E  C10A  F103         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6664  003D82                     l675:
  6665                           
  6666                           ; BSR set to: 1
  6667  003D82  0012               	return	
  6668  003D84                     __end_of__div_to_l_:
  6669                           	opt stack 0
  6670                           tblptru	equ	0xFF8
  6671                           tblptrh	equ	0xFF7
  6672                           tblptrl	equ	0xFF6
  6673                           tablat	equ	0xFF5
  6674                           prodh	equ	0xFF4
  6675                           prodl	equ	0xFF3
  6676                           intcon	equ	0xFF2
  6677                           postinc0	equ	0xFEE
  6678                           wreg	equ	0xFE8
  6679                           postdec1	equ	0xFE5
  6680                           fsr1l	equ	0xFE1
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           postdec2	equ	0xFDD
  6684                           fsr2h	equ	0xFDA
  6685                           fsr2l	equ	0xFD9
  6686                           status	equ	0xFD8
  6687                           
  6688 ;; *************** function __tdiv_to_l_ *****************
  6689 ;; Defined at:
  6690 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  f1              3    0[BANK1 ] float 
  6693 ;;  f2              3    3[BANK1 ] float 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  quot            4   11[BANK1 ] unsigned long 
  6696 ;;  exp1            1   16[BANK1 ] unsigned char 
  6697 ;;  cntr            1   15[BANK1 ] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  4    0[BANK1 ] unsigned long 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6707 ;;      Params:         0       0       6       0       0       0       0       0       0
  6708 ;;      Locals:         0       0       6       0       0       0       0       0       0
  6709 ;;      Temps:          0       0       5       0       0       0       0       0       0
  6710 ;;      Totals:         0       0      17       0       0       0       0       0       0
  6711 ;;Total ram usage:       17 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:   11
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_sprintf
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text22
  6722  0037B2                     __ptext22:
  6723                           	opt stack 0
  6724  0037B2                     __tdiv_to_l_:
  6725                           	opt stack 16
  6726                           
  6727                           ; BSR set to: 1
  6728                           ;incstack = 0
  6729                           ;incstack = 0
  6730  0037B2  0E0F               	movlw	15
  6731  0037B4  0101               	movlb	1	; () banked
  6732  0037B6  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  6733  0037B8  0101               	movlb	1	; () banked
  6734  0037BA  C100  F107         	movff	__tdiv_to_l_@f1,??__tdiv_to_l_+1
  6735  0037BE  0101               	movlb	1	; () banked
  6736  0037C0  C101  F108         	movff	__tdiv_to_l_@f1+1,??__tdiv_to_l_+2
  6737  0037C4  0101               	movlb	1	; () banked
  6738  0037C6  C102  F109         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_+3
  6739  0037CA  0101               	movlb	1	; () banked
  6740  0037CC  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  6741  0037CE  0101               	movlb	1	; () banked
  6742  0037D0  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  6743  0037D2  D005               	goto	u10310
  6744  0037D4                     u10315:
  6745  0037D4  0101               	movlb	1	; () banked
  6746  0037D6  90D8               	bcf	status,0,c
  6747  0037D8  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  6748  0037DA  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  6749  0037DC  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  6750  0037DE                     u10310:
  6751  0037DE  0101               	movlb	1	; () banked
  6752  0037E0  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  6753  0037E2  D7F8               	goto	u10315
  6754  0037E4  0101               	movlb	1	; () banked
  6755  0037E6  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  6756  0037E8  0101               	movlb	1	; () banked
  6757  0037EA  0101               	movlb	1	; () banked
  6758  0037EC  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6759  0037EE  0101               	movlb	1	; () banked
  6760  0037F0  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  6761  0037F2  D001               	goto	l11114
  6762  0037F4  D0BE               	goto	u10380
  6763  0037F6                     l11114:
  6764                           
  6765                           ; BSR set to: 1
  6766  0037F6  0E0F               	movlw	15
  6767  0037F8  0101               	movlb	1	; () banked
  6768  0037FA  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  6769  0037FC  0101               	movlb	1	; () banked
  6770  0037FE  C103  F107         	movff	__tdiv_to_l_@f2,??__tdiv_to_l_+1
  6771  003802  0101               	movlb	1	; () banked
  6772  003804  C104  F108         	movff	__tdiv_to_l_@f2+1,??__tdiv_to_l_+2
  6773  003808  0101               	movlb	1	; () banked
  6774  00380A  C105  F109         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_+3
  6775  00380E  0101               	movlb	1	; () banked
  6776  003810  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  6777  003812  0101               	movlb	1	; () banked
  6778  003814  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  6779  003816  D005               	goto	u10330
  6780  003818                     u10335:
  6781  003818  0101               	movlb	1	; () banked
  6782  00381A  90D8               	bcf	status,0,c
  6783  00381C  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  6784  00381E  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  6785  003820  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  6786  003822                     u10330:
  6787  003822  0101               	movlb	1	; () banked
  6788  003824  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  6789  003826  D7F8               	goto	u10335
  6790  003828  0101               	movlb	1	; () banked
  6791  00382A  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  6792  00382C  0101               	movlb	1	; () banked
  6793  00382E  0101               	movlb	1	; () banked
  6794  003830  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6795  003832  0101               	movlb	1	; () banked
  6796  003834  670F               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  6797  003836  D001               	goto	l11120
  6798  003838  D09C               	goto	u10380
  6799  00383A                     l11120:
  6800                           
  6801                           ; BSR set to: 1
  6802  00383A  0101               	movlb	1	; () banked
  6803  00383C  0101               	movlb	1	; () banked
  6804  00383E  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6805                           
  6806                           ; BSR set to: 1
  6807  003840  0EFF               	movlw	255
  6808  003842  0101               	movlb	1	; () banked
  6809  003844  0101               	movlb	1	; () banked
  6810  003846  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6811  003848  0EFF               	movlw	255
  6812  00384A  0101               	movlb	1	; () banked
  6813  00384C  0101               	movlb	1	; () banked
  6814  00384E  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6815  003850  0E00               	movlw	0
  6816  003852  0101               	movlb	1	; () banked
  6817  003854  0101               	movlb	1	; () banked
  6818  003856  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6819  003858  0101               	movlb	1	; () banked
  6820  00385A  0101               	movlb	1	; () banked
  6821  00385C  8F04               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6822                           
  6823                           ; BSR set to: 1
  6824  00385E  0EFF               	movlw	255
  6825  003860  0101               	movlb	1	; () banked
  6826  003862  0101               	movlb	1	; () banked
  6827  003864  1703               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6828  003866  0EFF               	movlw	255
  6829  003868  0101               	movlb	1	; () banked
  6830  00386A  0101               	movlb	1	; () banked
  6831  00386C  1704               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6832  00386E  0E00               	movlw	0
  6833  003870  0101               	movlb	1	; () banked
  6834  003872  0101               	movlb	1	; () banked
  6835  003874  1705               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6836                           
  6837                           ; BSR set to: 1
  6838  003876  0E00               	movlw	0
  6839  003878  0101               	movlb	1	; () banked
  6840  00387A  0101               	movlb	1	; () banked
  6841  00387C  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
  6842  00387E  0E00               	movlw	0
  6843  003880  0101               	movlb	1	; () banked
  6844  003882  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6845  003884  0E00               	movlw	0
  6846  003886  0101               	movlb	1	; () banked
  6847  003888  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6848  00388A  0E00               	movlw	0
  6849  00388C  0101               	movlb	1	; () banked
  6850  00388E  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6851                           
  6852                           ; BSR set to: 1
  6853  003890  0E7F               	movlw	127
  6854  003892  0101               	movlb	1	; () banked
  6855  003894  0101               	movlb	1	; () banked
  6856  003896  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6857                           
  6858                           ; BSR set to: 1
  6859  003898  0101               	movlb	1	; () banked
  6860  00389A  0101               	movlb	1	; () banked
  6861  00389C  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6862  00389E  0F98               	addlw	152
  6863  0038A0  0101               	movlb	1	; () banked
  6864  0038A2  0101               	movlb	1	; () banked
  6865  0038A4  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6866                           
  6867                           ; BSR set to: 1
  6868  0038A6  0101               	movlb	1	; () banked
  6869  0038A8  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  6870  0038AA  0E18               	movlw	24
  6871  0038AC  0101               	movlb	1	; () banked
  6872  0038AE  0101               	movlb	1	; () banked
  6873  0038B0  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6874  0038B2  0101               	movlb	1	; () banked
  6875  0038B4  5106               	movf	??__tdiv_to_l_& (0+255),w,b
  6876  0038B6                     l11134:
  6877                           
  6878                           ; BSR set to: 1
  6879  0038B6  0101               	movlb	1	; () banked
  6880  0038B8  90D8               	bcf	status,0,c
  6881  0038BA  0101               	movlb	1	; () banked
  6882  0038BC  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6883  0038BE  0101               	movlb	1	; () banked
  6884  0038C0  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6885  0038C2  0101               	movlb	1	; () banked
  6886  0038C4  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6887  0038C6  0101               	movlb	1	; () banked
  6888  0038C8  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6889                           
  6890                           ; BSR set to: 1
  6891  0038CA  0101               	movlb	1	; () banked
  6892  0038CC  0101               	movlb	1	; () banked
  6893  0038CE  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6894  0038D0  0101               	movlb	1	; () banked
  6895  0038D2  0101               	movlb	1	; () banked
  6896  0038D4  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6897  0038D6  0101               	movlb	1	; () banked
  6898  0038D8  0101               	movlb	1	; () banked
  6899  0038DA  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6900  0038DC  0101               	movlb	1	; () banked
  6901  0038DE  0101               	movlb	1	; () banked
  6902  0038E0  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6903  0038E2  0101               	movlb	1	; () banked
  6904  0038E4  0101               	movlb	1	; () banked
  6905  0038E6  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6906  0038E8  0101               	movlb	1	; () banked
  6907  0038EA  0101               	movlb	1	; () banked
  6908  0038EC  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6909  0038EE  A0D8               	btfss	status,0,c
  6910  0038F0  D015               	goto	l796
  6911                           
  6912                           ; BSR set to: 1
  6913  0038F2  0101               	movlb	1	; () banked
  6914  0038F4  0101               	movlb	1	; () banked
  6915  0038F6  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6916  0038F8  0101               	movlb	1	; () banked
  6917  0038FA  0101               	movlb	1	; () banked
  6918  0038FC  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6919  0038FE  0101               	movlb	1	; () banked
  6920  003900  0101               	movlb	1	; () banked
  6921  003902  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6922  003904  0101               	movlb	1	; () banked
  6923  003906  0101               	movlb	1	; () banked
  6924  003908  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6925  00390A  0101               	movlb	1	; () banked
  6926  00390C  0101               	movlb	1	; () banked
  6927  00390E  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6928  003910  0101               	movlb	1	; () banked
  6929  003912  0101               	movlb	1	; () banked
  6930  003914  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6931                           
  6932                           ; BSR set to: 1
  6933  003916  0101               	movlb	1	; () banked
  6934  003918  0101               	movlb	1	; () banked
  6935  00391A  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6936  00391C                     l796:
  6937                           
  6938                           ; BSR set to: 1
  6939  00391C  0101               	movlb	1	; () banked
  6940  00391E  90D8               	bcf	status,0,c
  6941  003920  0101               	movlb	1	; () banked
  6942  003922  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6943  003924  0101               	movlb	1	; () banked
  6944  003926  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6945  003928  0101               	movlb	1	; () banked
  6946  00392A  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6947                           
  6948                           ; BSR set to: 1
  6949  00392C  0101               	movlb	1	; () banked
  6950  00392E  0101               	movlb	1	; () banked
  6951  003930  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6952  003932  D7C1               	goto	l11134
  6953                           
  6954                           ; BSR set to: 1
  6955  003934  0101               	movlb	1	; () banked
  6956  003936  0101               	movlb	1	; () banked
  6957  003938  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6958  00393A  D016               	goto	l11154
  6959                           
  6960                           ; BSR set to: 1
  6961  00393C  0101               	movlb	1	; () banked
  6962  00393E  0101               	movlb	1	; () banked
  6963  003940  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6964  003942  0A80               	xorlw	128
  6965  003944  0F97               	addlw	151
  6966  003946  A0D8               	btfss	status,0,c
  6967  003948  D014               	goto	u10380
  6968  00394A                     l11150:
  6969                           
  6970                           ; BSR set to: 1
  6971  00394A  0101               	movlb	1	; () banked
  6972  00394C  90D8               	bcf	status,0,c
  6973  00394E  0101               	movlb	1	; () banked
  6974  003950  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6975  003952  0101               	movlb	1	; () banked
  6976  003954  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6977  003956  0101               	movlb	1	; () banked
  6978  003958  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6979  00395A  0101               	movlb	1	; () banked
  6980  00395C  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6981                           
  6982                           ; BSR set to: 1
  6983  00395E  0101               	movlb	1	; () banked
  6984  003960  0101               	movlb	1	; () banked
  6985  003962  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6986  003964  D7F2               	goto	l11150
  6987  003966  D024               	goto	l802
  6988  003968                     l11154:
  6989                           
  6990                           ; BSR set to: 1
  6991  003968  0E17               	movlw	23
  6992  00396A  0101               	movlb	1	; () banked
  6993  00396C  0101               	movlb	1	; () banked
  6994  00396E  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6995  003970  D01B               	goto	l11162
  6996  003972                     u10380:
  6997                           
  6998                           ; BSR set to: 1
  6999  003972  0E00               	movlw	0
  7000  003974  0101               	movlb	1	; () banked
  7001  003976  0101               	movlb	1	; () banked
  7002  003978  6F00               	movwf	?__tdiv_to_l_& (0+255),b
  7003  00397A  0E00               	movlw	0
  7004  00397C  0101               	movlb	1	; () banked
  7005  00397E  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7006  003980  0E00               	movlw	0
  7007  003982  0101               	movlb	1	; () banked
  7008  003984  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7009  003986  0E00               	movlw	0
  7010  003988  0101               	movlb	1	; () banked
  7011  00398A  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7012  00398C  D019               	goto	l793
  7013  00398E                     l11160:
  7014                           
  7015                           ; BSR set to: 1
  7016  00398E  0101               	movlb	1	; () banked
  7017  003990  90D8               	bcf	status,0,c
  7018  003992  0101               	movlb	1	; () banked
  7019  003994  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7020  003996  0101               	movlb	1	; () banked
  7021  003998  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7022  00399A  0101               	movlb	1	; () banked
  7023  00399C  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7024  00399E  0101               	movlb	1	; () banked
  7025  0039A0  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7026  0039A2  0101               	movlb	1	; () banked
  7027  0039A4  0101               	movlb	1	; () banked
  7028  0039A6  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7029  0039A8                     l11162:
  7030                           
  7031                           ; BSR set to: 1
  7032  0039A8  0101               	movlb	1	; () banked
  7033  0039AA  0101               	movlb	1	; () banked
  7034  0039AC  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  7035  0039AE  D7EF               	goto	l11160
  7036  0039B0                     l802:
  7037                           
  7038                           ; BSR set to: 1
  7039  0039B0  C10B  F100         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7040  0039B4  C10C  F101         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7041  0039B8  C10D  F102         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7042  0039BC  C10E  F103         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7043  0039C0                     l793:
  7044                           
  7045                           ; BSR set to: 1
  7046  0039C0  0012               	return	
  7047  0039C2                     __end_of__tdiv_to_l_:
  7048                           	opt stack 0
  7049                           tblptru	equ	0xFF8
  7050                           tblptrh	equ	0xFF7
  7051                           tblptrl	equ	0xFF6
  7052                           tablat	equ	0xFF5
  7053                           prodh	equ	0xFF4
  7054                           prodl	equ	0xFF3
  7055                           intcon	equ	0xFF2
  7056                           postinc0	equ	0xFEE
  7057                           wreg	equ	0xFE8
  7058                           postdec1	equ	0xFE5
  7059                           fsr1l	equ	0xFE1
  7060                           indf2	equ	0xFDF
  7061                           postinc2	equ	0xFDE
  7062                           postdec2	equ	0xFDD
  7063                           fsr2h	equ	0xFDA
  7064                           fsr2l	equ	0xFD9
  7065                           status	equ	0xFD8
  7066                           
  7067 ;; *************** function _isdigit *****************
  7068 ;; Defined at:
  7069 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  c               1    0[BANK1 ] unsigned char 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;		None               void
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7083 ;;      Params:         0       0       1       0       0       0       0       0       0
  7084 ;;      Locals:         0       0       1       0       0       0       0       0       0
  7085 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7086 ;;      Totals:         0       0       3       0       0       0       0       0       0
  7087 ;;Total ram usage:        3 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:   11
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_sprintf
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text23
  7098  006324                     __ptext23:
  7099                           	opt stack 0
  7100  006324                     _isdigit:
  7101                           	opt stack 16
  7102                           
  7103                           ; BSR set to: 1
  7104                           ;incstack = 0
  7105                           ;incstack = 0
  7106  006324  0101               	movlb	1	; () banked
  7107  006326  6F01               	movwf	??_isdigit& (0+255),b
  7108  006328  0E00               	movlw	0
  7109  00632A  0101               	movlb	1	; () banked
  7110  00632C  0101               	movlb	1	; () banked
  7111  00632E  6F02               	movwf	_isdigit$998& (0+255),b
  7112  006330  0101               	movlb	1	; () banked
  7113  006332  5101               	movf	??_isdigit& (0+255),w,b
  7114                           
  7115                           ; BSR set to: 1
  7116  006334  0E3A               	movlw	58
  7117  006336  0101               	movlb	1	; () banked
  7118  006338  0101               	movlb	1	; () banked
  7119  00633A  6100               	cpfslt	isdigit@c& (0+255),b
  7120  00633C  D00D               	goto	l11104
  7121                           
  7122                           ; BSR set to: 1
  7123  00633E  0E2F               	movlw	47
  7124  006340  0101               	movlb	1	; () banked
  7125  006342  0101               	movlb	1	; () banked
  7126  006344  6500               	cpfsgt	isdigit@c& (0+255),b
  7127  006346  D008               	goto	l11104
  7128                           
  7129                           ; BSR set to: 1
  7130  006348  0101               	movlb	1	; () banked
  7131  00634A  6F01               	movwf	??_isdigit& (0+255),b
  7132  00634C  0E01               	movlw	1
  7133  00634E  0101               	movlb	1	; () banked
  7134  006350  0101               	movlb	1	; () banked
  7135  006352  6F02               	movwf	_isdigit$998& (0+255),b
  7136  006354  0101               	movlb	1	; () banked
  7137  006356  5101               	movf	??_isdigit& (0+255),w,b
  7138  006358                     l11104:
  7139                           
  7140                           ; BSR set to: 1
  7141  006358  C102  F101         	movff	_isdigit$998,??_isdigit
  7142  00635C  0101               	movlb	1	; () banked
  7143  00635E  3101               	rrcf	??_isdigit& (0+255),w,b
  7144                           
  7145                           ; BSR set to: 1
  7146                           
  7147                           ; BSR set to: 1
  7148  006360  0012               	return	
  7149  006362                     __end_of_isdigit:
  7150                           	opt stack 0
  7151                           tblptru	equ	0xFF8
  7152                           tblptrh	equ	0xFF7
  7153                           tblptrl	equ	0xFF6
  7154                           tablat	equ	0xFF5
  7155                           prodh	equ	0xFF4
  7156                           prodl	equ	0xFF3
  7157                           intcon	equ	0xFF2
  7158                           postinc0	equ	0xFEE
  7159                           wreg	equ	0xFE8
  7160                           postdec1	equ	0xFE5
  7161                           fsr1l	equ	0xFE1
  7162                           indf2	equ	0xFDF
  7163                           postinc2	equ	0xFDE
  7164                           postdec2	equ	0xFDD
  7165                           fsr2h	equ	0xFDA
  7166                           fsr2l	equ	0xFD9
  7167                           status	equ	0xFD8
  7168                           
  7169 ;; *************** function _scale *****************
  7170 ;; Defined at:
  7171 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  scl             1   39[BANK1 ] char 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  3   39[BANK1 ] char 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7185 ;;      Params:         0       0       3       0       0       0       0       0       0
  7186 ;;      Locals:         0       0       3       0       0       0       0       0       0
  7187 ;;      Temps:          0       0       6       0       0       0       0       0       0
  7188 ;;      Totals:         0       0      12       0       0       0       0       0       0
  7189 ;;Total ram usage:       12 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:   13
  7192 ;; This function calls:
  7193 ;;		___ftmul
  7194 ;;		___awdiv
  7195 ;;		___awmod
  7196 ;;		___wmul
  7197 ;; This function is called by:
  7198 ;;		_sprintf
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text24
  7203  002414                     __ptext24:
  7204                           	opt stack 0
  7205  002414                     _scale:
  7206                           	opt stack 14
  7207                           
  7208                           ;doprnt.c: 428: if(scl < 0) {
  7209                           
  7210                           ; BSR set to: 1
  7211                           ;incstack = 0
  7212                           ;incstack = 0
  7213  002414  0101               	movlb	1	; () banked
  7214  002416  0101               	movlb	1	; () banked
  7215  002418  AF27               	btfss	scale@scl& (0+255),7,b
  7216  00241A  D179               	goto	l11078
  7217                           
  7218                           ; BSR set to: 1
  7219                           ;doprnt.c: 429: scl = -scl;
  7220  00241C  0101               	movlb	1	; () banked
  7221  00241E  0101               	movlb	1	; () banked
  7222  002420  6D27               	negf	scale@scl& (0+255),b
  7223                           
  7224                           ; BSR set to: 1
  7225                           ;doprnt.c: 430: if(scl>=110)
  7226  002422  0101               	movlb	1	; () banked
  7227  002424  0101               	movlb	1	; () banked
  7228  002426  5127               	movf	scale@scl& (0+255),w,b
  7229  002428  0A80               	xorlw	128
  7230  00242A  0F12               	addlw	-238
  7231  00242C  A0D8               	btfss	status,0,c
  7232  00242E  D0DF               	goto	l11068
  7233                           
  7234                           ; BSR set to: 1
  7235                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7236  002430  0E00               	movlw	0
  7237  002432  0101               	movlb	1	; () banked
  7238  002434  0101               	movlb	1	; () banked
  7239  002436  6F13               	movwf	(?___wmul+3)& (0+255),b
  7240  002438  0E03               	movlw	3
  7241  00243A  0101               	movlb	1	; () banked
  7242  00243C  6F12               	movwf	(?___wmul+2)& (0+255),b
  7243  00243E  0E00               	movlw	0
  7244  002440  0101               	movlb	1	; () banked
  7245  002442  0101               	movlb	1	; () banked
  7246  002444  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7247  002446  0E0A               	movlw	10
  7248  002448  0101               	movlb	1	; () banked
  7249  00244A  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7250  00244C  0E00               	movlw	0
  7251  00244E  0101               	movlb	1	; () banked
  7252  002450  0101               	movlb	1	; () banked
  7253  002452  6F03               	movwf	(?___awmod+3)& (0+255),b
  7254  002454  0E64               	movlw	100
  7255  002456  0101               	movlb	1	; () banked
  7256  002458  6F02               	movwf	(?___awmod+2)& (0+255),b
  7257  00245A  0101               	movlb	1	; () banked
  7258  00245C  0101               	movlb	1	; () banked
  7259  00245E  5127               	movf	scale@scl& (0+255),w,b
  7260  002460  0101               	movlb	1	; () banked
  7261  002462  0101               	movlb	1	; () banked
  7262  002464  6F00               	movwf	?___awmod& (0+255),b
  7263  002466  0101               	movlb	1	; () banked
  7264  002468  6B01               	clrf	(?___awmod+1)& (0+255),b
  7265  00246A  0101               	movlb	1	; () banked
  7266  00246C  BF00               	btfsc	?___awmod& (0+255),7,b
  7267  00246E  0701               	decf	(?___awmod+1)& (0+255),f,b
  7268  002470  ECB4  F028         	call	___awmod	;wreg free
  7269  002474  0101               	movlb	1	; () banked
  7270  002476  C100  F107         	movff	?___awmod,?___awdiv
  7271  00247A  0101               	movlb	1	; () banked
  7272  00247C  C101  F108         	movff	?___awmod+1,?___awdiv+1
  7273  002480  ECA4  F024         	call	___awdiv	;wreg free
  7274  002484  0E09               	movlw	9
  7275  002486  0101               	movlb	1	; () banked
  7276  002488  0101               	movlb	1	; () banked
  7277  00248A  2507               	addwf	?___awdiv& (0+255),w,b
  7278  00248C  0101               	movlb	1	; () banked
  7279  00248E  0101               	movlb	1	; () banked
  7280  002490  6F10               	movwf	?___wmul& (0+255),b
  7281  002492  0E00               	movlw	0
  7282  002494  0101               	movlb	1	; () banked
  7283  002496  0101               	movlb	1	; () banked
  7284  002498  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7285  00249A  0101               	movlb	1	; () banked
  7286  00249C  6F11               	movwf	(?___wmul+1)& (0+255),b
  7287  00249E  EC8A  F02F         	call	___wmul	;wreg free
  7288  0024A2  0E28               	movlw	low __npowers_
  7289  0024A4  0101               	movlb	1	; () banked
  7290  0024A6  0101               	movlb	1	; () banked
  7291  0024A8  2510               	addwf	?___wmul& (0+255),w,b
  7292  0024AA  6EF6               	movwf	tblptrl,c
  7293  0024AC  0E08               	movlw	high __npowers_
  7294  0024AE  0101               	movlb	1	; () banked
  7295  0024B0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7296  0024B2  6EF7               	movwf	tblptrh,c
  7297  0024B4  0009               	tblrd		*+
  7298  0024B6  CFF5 F12A          	movff	tablat,??_scale
  7299  0024BA  0009               	tblrd		*+
  7300  0024BC  CFF5 F12B          	movff	tablat,??_scale+1
  7301  0024C0  0009               	tblrd		*+
  7302  0024C2  CFF5 F12C          	movff	tablat,??_scale+2
  7303  0024C6  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  7304  0024CA  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  7305  0024CE  C12A  F119         	movff	??_scale,?___ftmul+3
  7306  0024D2  0E00               	movlw	0
  7307  0024D4  0101               	movlb	1	; () banked
  7308  0024D6  0101               	movlb	1	; () banked
  7309  0024D8  6F13               	movwf	(?___wmul+3)& (0+255),b
  7310  0024DA  0E03               	movlw	3
  7311  0024DC  0101               	movlb	1	; () banked
  7312  0024DE  6F12               	movwf	(?___wmul+2)& (0+255),b
  7313  0024E0  0E00               	movlw	0
  7314  0024E2  0101               	movlb	1	; () banked
  7315  0024E4  0101               	movlb	1	; () banked
  7316  0024E6  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7317  0024E8  0E64               	movlw	100
  7318  0024EA  0101               	movlb	1	; () banked
  7319  0024EC  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7320  0024EE  0101               	movlb	1	; () banked
  7321  0024F0  0101               	movlb	1	; () banked
  7322  0024F2  5127               	movf	scale@scl& (0+255),w,b
  7323  0024F4  0101               	movlb	1	; () banked
  7324  0024F6  0101               	movlb	1	; () banked
  7325  0024F8  6F07               	movwf	?___awdiv& (0+255),b
  7326  0024FA  0101               	movlb	1	; () banked
  7327  0024FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  7328  0024FE  0101               	movlb	1	; () banked
  7329  002500  BF07               	btfsc	?___awdiv& (0+255),7,b
  7330  002502  0708               	decf	(?___awdiv+1)& (0+255),f,b
  7331  002504  ECA4  F024         	call	___awdiv	;wreg free
  7332  002508  0E12               	movlw	18
  7333  00250A  0101               	movlb	1	; () banked
  7334  00250C  0101               	movlb	1	; () banked
  7335  00250E  2507               	addwf	?___awdiv& (0+255),w,b
  7336  002510  0101               	movlb	1	; () banked
  7337  002512  0101               	movlb	1	; () banked
  7338  002514  6F10               	movwf	?___wmul& (0+255),b
  7339  002516  0E00               	movlw	0
  7340  002518  0101               	movlb	1	; () banked
  7341  00251A  0101               	movlb	1	; () banked
  7342  00251C  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7343  00251E  0101               	movlb	1	; () banked
  7344  002520  6F11               	movwf	(?___wmul+1)& (0+255),b
  7345  002522  EC8A  F02F         	call	___wmul	;wreg free
  7346  002526  0E28               	movlw	low __npowers_
  7347  002528  0101               	movlb	1	; () banked
  7348  00252A  0101               	movlb	1	; () banked
  7349  00252C  2510               	addwf	?___wmul& (0+255),w,b
  7350  00252E  6EF6               	movwf	tblptrl,c
  7351  002530  0E08               	movlw	high __npowers_
  7352  002532  0101               	movlb	1	; () banked
  7353  002534  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7354  002536  6EF7               	movwf	tblptrh,c
  7355  002538  0009               	tblrd		*+
  7356  00253A  CFF5 F12D          	movff	tablat,??_scale+3
  7357  00253E  0009               	tblrd		*+
  7358  002540  CFF5 F12E          	movff	tablat,??_scale+4
  7359  002544  0009               	tblrd		*+
  7360  002546  CFF5 F12F          	movff	tablat,??_scale+5
  7361  00254A  C12F  F118         	movff	??_scale+5,?___ftmul+2
  7362  00254E  C12E  F117         	movff	??_scale+4,?___ftmul+1
  7363  002552  C12D  F116         	movff	??_scale+3,?___ftmul
  7364  002556  ECE1  F01C         	call	___ftmul	;wreg free
  7365  00255A  C118  F132         	movff	?___ftmul+2,_scale$1355+2
  7366  00255E  C117  F131         	movff	?___ftmul+1,_scale$1355+1
  7367  002562  C116  F130         	movff	?___ftmul,_scale$1355
  7368                           
  7369                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7370  002566  C130  F116         	movff	_scale$1355,?___ftmul
  7371  00256A  C131  F117         	movff	_scale$1355+1,?___ftmul+1
  7372  00256E  C132  F118         	movff	_scale$1355+2,?___ftmul+2
  7373  002572  0E00               	movlw	0
  7374  002574  0101               	movlb	1	; () banked
  7375  002576  0101               	movlb	1	; () banked
  7376  002578  6F13               	movwf	(?___wmul+3)& (0+255),b
  7377  00257A  0E03               	movlw	3
  7378  00257C  0101               	movlb	1	; () banked
  7379  00257E  6F12               	movwf	(?___wmul+2)& (0+255),b
  7380  002580  0E00               	movlw	0
  7381  002582  0101               	movlb	1	; () banked
  7382  002584  0101               	movlb	1	; () banked
  7383  002586  6F03               	movwf	(?___awmod+3)& (0+255),b
  7384  002588  0E0A               	movlw	10
  7385  00258A  0101               	movlb	1	; () banked
  7386  00258C  6F02               	movwf	(?___awmod+2)& (0+255),b
  7387  00258E  0101               	movlb	1	; () banked
  7388  002590  0101               	movlb	1	; () banked
  7389  002592  5127               	movf	scale@scl& (0+255),w,b
  7390  002594  0101               	movlb	1	; () banked
  7391  002596  0101               	movlb	1	; () banked
  7392  002598  6F00               	movwf	?___awmod& (0+255),b
  7393  00259A  0101               	movlb	1	; () banked
  7394  00259C  6B01               	clrf	(?___awmod+1)& (0+255),b
  7395  00259E  0101               	movlb	1	; () banked
  7396  0025A0  BF00               	btfsc	?___awmod& (0+255),7,b
  7397  0025A2  0701               	decf	(?___awmod+1)& (0+255),f,b
  7398  0025A4  ECB4  F028         	call	___awmod	;wreg free
  7399  0025A8  0101               	movlb	1	; () banked
  7400  0025AA  C100  F110         	movff	?___awmod,?___wmul
  7401  0025AE  0101               	movlb	1	; () banked
  7402  0025B0  C101  F111         	movff	?___awmod+1,?___wmul+1
  7403  0025B4  EC8A  F02F         	call	___wmul	;wreg free
  7404  0025B8  0E28               	movlw	low __npowers_
  7405  0025BA  0101               	movlb	1	; () banked
  7406  0025BC  0101               	movlb	1	; () banked
  7407  0025BE  2510               	addwf	?___wmul& (0+255),w,b
  7408  0025C0  6EF6               	movwf	tblptrl,c
  7409  0025C2  0E08               	movlw	high __npowers_
  7410  0025C4  0101               	movlb	1	; () banked
  7411  0025C6  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7412  0025C8  6EF7               	movwf	tblptrh,c
  7413  0025CA  0009               	tblrd		*+
  7414  0025CC  CFF5 F12A          	movff	tablat,??_scale
  7415  0025D0  0009               	tblrd		*+
  7416  0025D2  CFF5 F12B          	movff	tablat,??_scale+1
  7417  0025D6  0009               	tblrd		*+
  7418  0025D8  CFF5 F12C          	movff	tablat,??_scale+2
  7419  0025DC  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  7420  0025E0  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  7421  0025E4  C12A  F119         	movff	??_scale,?___ftmul+3
  7422  0025E8  ECE1  F01C         	call	___ftmul	;wreg free
  7423  0025EC  D1FC               	goto	L12
  7424  0025EE                     l11068:
  7425                           
  7426                           ;doprnt.c: 432: else if(scl > 10)
  7427  0025EE  0101               	movlb	1	; () banked
  7428  0025F0  0101               	movlb	1	; () banked
  7429  0025F2  5127               	movf	scale@scl& (0+255),w,b
  7430  0025F4  0A80               	xorlw	128
  7431  0025F6  0F75               	addlw	-139
  7432  0025F8  A0D8               	btfss	status,0,c
  7433  0025FA  D080               	goto	l11074
  7434                           
  7435                           ; BSR set to: 1
  7436                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7437  0025FC  0E00               	movlw	0
  7438  0025FE  0101               	movlb	1	; () banked
  7439  002600  0101               	movlb	1	; () banked
  7440  002602  6F13               	movwf	(?___wmul+3)& (0+255),b
  7441  002604  0E03               	movlw	3
  7442  002606  0101               	movlb	1	; () banked
  7443  002608  6F12               	movwf	(?___wmul+2)& (0+255),b
  7444  00260A  0E00               	movlw	0
  7445  00260C  0101               	movlb	1	; () banked
  7446  00260E  0101               	movlb	1	; () banked
  7447  002610  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7448  002612  0E0A               	movlw	10
  7449  002614  0101               	movlb	1	; () banked
  7450  002616  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7451  002618  0101               	movlb	1	; () banked
  7452  00261A  0101               	movlb	1	; () banked
  7453  00261C  5127               	movf	scale@scl& (0+255),w,b
  7454  00261E  0101               	movlb	1	; () banked
  7455  002620  0101               	movlb	1	; () banked
  7456  002622  6F07               	movwf	?___awdiv& (0+255),b
  7457  002624  0101               	movlb	1	; () banked
  7458  002626  6B08               	clrf	(?___awdiv+1)& (0+255),b
  7459  002628  0101               	movlb	1	; () banked
  7460  00262A  BF07               	btfsc	?___awdiv& (0+255),7,b
  7461  00262C  0708               	decf	(?___awdiv+1)& (0+255),f,b
  7462  00262E  ECA4  F024         	call	___awdiv	;wreg free
  7463  002632  0E09               	movlw	9
  7464  002634  0101               	movlb	1	; () banked
  7465  002636  0101               	movlb	1	; () banked
  7466  002638  2507               	addwf	?___awdiv& (0+255),w,b
  7467  00263A  0101               	movlb	1	; () banked
  7468  00263C  0101               	movlb	1	; () banked
  7469  00263E  6F10               	movwf	?___wmul& (0+255),b
  7470  002640  0E00               	movlw	0
  7471  002642  0101               	movlb	1	; () banked
  7472  002644  0101               	movlb	1	; () banked
  7473  002646  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7474  002648  0101               	movlb	1	; () banked
  7475  00264A  6F11               	movwf	(?___wmul+1)& (0+255),b
  7476  00264C  EC8A  F02F         	call	___wmul	;wreg free
  7477  002650  0E28               	movlw	low __npowers_
  7478  002652  0101               	movlb	1	; () banked
  7479  002654  0101               	movlb	1	; () banked
  7480  002656  2510               	addwf	?___wmul& (0+255),w,b
  7481  002658  6EF6               	movwf	tblptrl,c
  7482  00265A  0E08               	movlw	high __npowers_
  7483  00265C  0101               	movlb	1	; () banked
  7484  00265E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7485  002660  6EF7               	movwf	tblptrh,c
  7486  002662  0009               	tblrd		*+
  7487  002664  CFF5 F12A          	movff	tablat,??_scale
  7488  002668  0009               	tblrd		*+
  7489  00266A  CFF5 F12B          	movff	tablat,??_scale+1
  7490  00266E  0009               	tblrd		*+
  7491  002670  CFF5 F12C          	movff	tablat,??_scale+2
  7492  002674  C12C  F118         	movff	??_scale+2,?___ftmul+2
  7493  002678  C12B  F117         	movff	??_scale+1,?___ftmul+1
  7494  00267C  C12A  F116         	movff	??_scale,?___ftmul
  7495  002680  0E00               	movlw	0
  7496  002682  0101               	movlb	1	; () banked
  7497  002684  0101               	movlb	1	; () banked
  7498  002686  6F13               	movwf	(?___wmul+3)& (0+255),b
  7499  002688  0E03               	movlw	3
  7500  00268A  0101               	movlb	1	; () banked
  7501  00268C  6F12               	movwf	(?___wmul+2)& (0+255),b
  7502  00268E  0E00               	movlw	0
  7503  002690  0101               	movlb	1	; () banked
  7504  002692  0101               	movlb	1	; () banked
  7505  002694  6F03               	movwf	(?___awmod+3)& (0+255),b
  7506  002696  0E0A               	movlw	10
  7507  002698  0101               	movlb	1	; () banked
  7508  00269A  6F02               	movwf	(?___awmod+2)& (0+255),b
  7509  00269C  0101               	movlb	1	; () banked
  7510  00269E  0101               	movlb	1	; () banked
  7511  0026A0  5127               	movf	scale@scl& (0+255),w,b
  7512  0026A2  0101               	movlb	1	; () banked
  7513  0026A4  0101               	movlb	1	; () banked
  7514  0026A6  6F00               	movwf	?___awmod& (0+255),b
  7515  0026A8  0101               	movlb	1	; () banked
  7516  0026AA  6B01               	clrf	(?___awmod+1)& (0+255),b
  7517  0026AC  0101               	movlb	1	; () banked
  7518  0026AE  BF00               	btfsc	?___awmod& (0+255),7,b
  7519  0026B0  0701               	decf	(?___awmod+1)& (0+255),f,b
  7520  0026B2  ECB4  F028         	call	___awmod	;wreg free
  7521  0026B6  0101               	movlb	1	; () banked
  7522  0026B8  C100  F110         	movff	?___awmod,?___wmul
  7523  0026BC  0101               	movlb	1	; () banked
  7524  0026BE  C101  F111         	movff	?___awmod+1,?___wmul+1
  7525  0026C2  EC8A  F02F         	call	___wmul	;wreg free
  7526  0026C6  0E28               	movlw	low __npowers_
  7527  0026C8  0101               	movlb	1	; () banked
  7528  0026CA  0101               	movlb	1	; () banked
  7529  0026CC  2510               	addwf	?___wmul& (0+255),w,b
  7530  0026CE  6EF6               	movwf	tblptrl,c
  7531  0026D0  0E08               	movlw	high __npowers_
  7532  0026D2  0101               	movlb	1	; () banked
  7533  0026D4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7534  0026D6  6EF7               	movwf	tblptrh,c
  7535  0026D8  0009               	tblrd		*+
  7536  0026DA  CFF5 F12D          	movff	tablat,??_scale+3
  7537  0026DE  0009               	tblrd		*+
  7538  0026E0  CFF5 F12E          	movff	tablat,??_scale+4
  7539  0026E4  0009               	tblrd		*+
  7540  0026E6  CFF5 F12F          	movff	tablat,??_scale+5
  7541  0026EA  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  7542  0026EE  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  7543  0026F2  C12D  F119         	movff	??_scale+3,?___ftmul+3
  7544  0026F6  ECE1  F01C         	call	___ftmul	;wreg free
  7545  0026FA  D175               	goto	L12
  7546  0026FC                     l11074:
  7547                           
  7548                           ;doprnt.c: 434: return _npowers_[scl];
  7549  0026FC  0101               	movlb	1	; () banked
  7550  0026FE  0101               	movlb	1	; () banked
  7551  002700  5127               	movf	scale@scl& (0+255),w,b
  7552  002702  0D03               	mullw	3
  7553  002704  0E28               	movlw	low __npowers_
  7554  002706  24F3               	addwf	prodl,w,c
  7555  002708  6EF6               	movwf	tblptrl,c
  7556  00270A  0E08               	movlw	high __npowers_
  7557  00270C  D17B               	goto	L11
  7558  00270E                     l11078:
  7559                           
  7560                           ; BSR set to: 1
  7561                           ;doprnt.c: 435: }
  7562                           ;doprnt.c: 436: if(scl>=110)
  7563  00270E  0101               	movlb	1	; () banked
  7564  002710  0101               	movlb	1	; () banked
  7565  002712  5127               	movf	scale@scl& (0+255),w,b
  7566  002714  0A80               	xorlw	128
  7567  002716  0F12               	addlw	-238
  7568  002718  A0D8               	btfss	status,0,c
  7569  00271A  D0DF               	goto	l11086
  7570                           
  7571                           ; BSR set to: 1
  7572                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7573  00271C  0E00               	movlw	0
  7574  00271E  0101               	movlb	1	; () banked
  7575  002720  0101               	movlb	1	; () banked
  7576  002722  6F13               	movwf	(?___wmul+3)& (0+255),b
  7577  002724  0E03               	movlw	3
  7578  002726  0101               	movlb	1	; () banked
  7579  002728  6F12               	movwf	(?___wmul+2)& (0+255),b
  7580  00272A  0E00               	movlw	0
  7581  00272C  0101               	movlb	1	; () banked
  7582  00272E  0101               	movlb	1	; () banked
  7583  002730  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7584  002732  0E0A               	movlw	10
  7585  002734  0101               	movlb	1	; () banked
  7586  002736  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7587  002738  0E00               	movlw	0
  7588  00273A  0101               	movlb	1	; () banked
  7589  00273C  0101               	movlb	1	; () banked
  7590  00273E  6F03               	movwf	(?___awmod+3)& (0+255),b
  7591  002740  0E64               	movlw	100
  7592  002742  0101               	movlb	1	; () banked
  7593  002744  6F02               	movwf	(?___awmod+2)& (0+255),b
  7594  002746  0101               	movlb	1	; () banked
  7595  002748  0101               	movlb	1	; () banked
  7596  00274A  5127               	movf	scale@scl& (0+255),w,b
  7597  00274C  0101               	movlb	1	; () banked
  7598  00274E  0101               	movlb	1	; () banked
  7599  002750  6F00               	movwf	?___awmod& (0+255),b
  7600  002752  0101               	movlb	1	; () banked
  7601  002754  6B01               	clrf	(?___awmod+1)& (0+255),b
  7602  002756  0101               	movlb	1	; () banked
  7603  002758  BF00               	btfsc	?___awmod& (0+255),7,b
  7604  00275A  0701               	decf	(?___awmod+1)& (0+255),f,b
  7605  00275C  ECB4  F028         	call	___awmod	;wreg free
  7606  002760  0101               	movlb	1	; () banked
  7607  002762  C100  F107         	movff	?___awmod,?___awdiv
  7608  002766  0101               	movlb	1	; () banked
  7609  002768  C101  F108         	movff	?___awmod+1,?___awdiv+1
  7610  00276C  ECA4  F024         	call	___awdiv	;wreg free
  7611  002770  0E09               	movlw	9
  7612  002772  0101               	movlb	1	; () banked
  7613  002774  0101               	movlb	1	; () banked
  7614  002776  2507               	addwf	?___awdiv& (0+255),w,b
  7615  002778  0101               	movlb	1	; () banked
  7616  00277A  0101               	movlb	1	; () banked
  7617  00277C  6F10               	movwf	?___wmul& (0+255),b
  7618  00277E  0E00               	movlw	0
  7619  002780  0101               	movlb	1	; () banked
  7620  002782  0101               	movlb	1	; () banked
  7621  002784  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7622  002786  0101               	movlb	1	; () banked
  7623  002788  6F11               	movwf	(?___wmul+1)& (0+255),b
  7624  00278A  EC8A  F02F         	call	___wmul	;wreg free
  7625  00278E  0E4F               	movlw	low __powers_
  7626  002790  0101               	movlb	1	; () banked
  7627  002792  0101               	movlb	1	; () banked
  7628  002794  2510               	addwf	?___wmul& (0+255),w,b
  7629  002796  6EF6               	movwf	tblptrl,c
  7630  002798  0E08               	movlw	high __powers_
  7631  00279A  0101               	movlb	1	; () banked
  7632  00279C  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7633  00279E  6EF7               	movwf	tblptrh,c
  7634  0027A0  0009               	tblrd		*+
  7635  0027A2  CFF5 F12A          	movff	tablat,??_scale
  7636  0027A6  0009               	tblrd		*+
  7637  0027A8  CFF5 F12B          	movff	tablat,??_scale+1
  7638  0027AC  0009               	tblrd		*+
  7639  0027AE  CFF5 F12C          	movff	tablat,??_scale+2
  7640  0027B2  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  7641  0027B6  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  7642  0027BA  C12A  F119         	movff	??_scale,?___ftmul+3
  7643  0027BE  0E00               	movlw	0
  7644  0027C0  0101               	movlb	1	; () banked
  7645  0027C2  0101               	movlb	1	; () banked
  7646  0027C4  6F13               	movwf	(?___wmul+3)& (0+255),b
  7647  0027C6  0E03               	movlw	3
  7648  0027C8  0101               	movlb	1	; () banked
  7649  0027CA  6F12               	movwf	(?___wmul+2)& (0+255),b
  7650  0027CC  0E00               	movlw	0
  7651  0027CE  0101               	movlb	1	; () banked
  7652  0027D0  0101               	movlb	1	; () banked
  7653  0027D2  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7654  0027D4  0E64               	movlw	100
  7655  0027D6  0101               	movlb	1	; () banked
  7656  0027D8  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7657  0027DA  0101               	movlb	1	; () banked
  7658  0027DC  0101               	movlb	1	; () banked
  7659  0027DE  5127               	movf	scale@scl& (0+255),w,b
  7660  0027E0  0101               	movlb	1	; () banked
  7661  0027E2  0101               	movlb	1	; () banked
  7662  0027E4  6F07               	movwf	?___awdiv& (0+255),b
  7663  0027E6  0101               	movlb	1	; () banked
  7664  0027E8  6B08               	clrf	(?___awdiv+1)& (0+255),b
  7665  0027EA  0101               	movlb	1	; () banked
  7666  0027EC  BF07               	btfsc	?___awdiv& (0+255),7,b
  7667  0027EE  0708               	decf	(?___awdiv+1)& (0+255),f,b
  7668  0027F0  ECA4  F024         	call	___awdiv	;wreg free
  7669  0027F4  0E12               	movlw	18
  7670  0027F6  0101               	movlb	1	; () banked
  7671  0027F8  0101               	movlb	1	; () banked
  7672  0027FA  2507               	addwf	?___awdiv& (0+255),w,b
  7673  0027FC  0101               	movlb	1	; () banked
  7674  0027FE  0101               	movlb	1	; () banked
  7675  002800  6F10               	movwf	?___wmul& (0+255),b
  7676  002802  0E00               	movlw	0
  7677  002804  0101               	movlb	1	; () banked
  7678  002806  0101               	movlb	1	; () banked
  7679  002808  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7680  00280A  0101               	movlb	1	; () banked
  7681  00280C  6F11               	movwf	(?___wmul+1)& (0+255),b
  7682  00280E  EC8A  F02F         	call	___wmul	;wreg free
  7683  002812  0E4F               	movlw	low __powers_
  7684  002814  0101               	movlb	1	; () banked
  7685  002816  0101               	movlb	1	; () banked
  7686  002818  2510               	addwf	?___wmul& (0+255),w,b
  7687  00281A  6EF6               	movwf	tblptrl,c
  7688  00281C  0E08               	movlw	high __powers_
  7689  00281E  0101               	movlb	1	; () banked
  7690  002820  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7691  002822  6EF7               	movwf	tblptrh,c
  7692  002824  0009               	tblrd		*+
  7693  002826  CFF5 F12D          	movff	tablat,??_scale+3
  7694  00282A  0009               	tblrd		*+
  7695  00282C  CFF5 F12E          	movff	tablat,??_scale+4
  7696  002830  0009               	tblrd		*+
  7697  002832  CFF5 F12F          	movff	tablat,??_scale+5
  7698  002836  C12F  F118         	movff	??_scale+5,?___ftmul+2
  7699  00283A  C12E  F117         	movff	??_scale+4,?___ftmul+1
  7700  00283E  C12D  F116         	movff	??_scale+3,?___ftmul
  7701  002842  ECE1  F01C         	call	___ftmul	;wreg free
  7702  002846  C118  F132         	movff	?___ftmul+2,_scale$1355+2
  7703  00284A  C117  F131         	movff	?___ftmul+1,_scale$1355+1
  7704  00284E  C116  F130         	movff	?___ftmul,_scale$1355
  7705                           
  7706                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7707  002852  C130  F116         	movff	_scale$1355,?___ftmul
  7708  002856  C131  F117         	movff	_scale$1355+1,?___ftmul+1
  7709  00285A  C132  F118         	movff	_scale$1355+2,?___ftmul+2
  7710  00285E  0E00               	movlw	0
  7711  002860  0101               	movlb	1	; () banked
  7712  002862  0101               	movlb	1	; () banked
  7713  002864  6F13               	movwf	(?___wmul+3)& (0+255),b
  7714  002866  0E03               	movlw	3
  7715  002868  0101               	movlb	1	; () banked
  7716  00286A  6F12               	movwf	(?___wmul+2)& (0+255),b
  7717  00286C  0E00               	movlw	0
  7718  00286E  0101               	movlb	1	; () banked
  7719  002870  0101               	movlb	1	; () banked
  7720  002872  6F03               	movwf	(?___awmod+3)& (0+255),b
  7721  002874  0E0A               	movlw	10
  7722  002876  0101               	movlb	1	; () banked
  7723  002878  6F02               	movwf	(?___awmod+2)& (0+255),b
  7724  00287A  0101               	movlb	1	; () banked
  7725  00287C  0101               	movlb	1	; () banked
  7726  00287E  5127               	movf	scale@scl& (0+255),w,b
  7727  002880  0101               	movlb	1	; () banked
  7728  002882  0101               	movlb	1	; () banked
  7729  002884  6F00               	movwf	?___awmod& (0+255),b
  7730  002886  0101               	movlb	1	; () banked
  7731  002888  6B01               	clrf	(?___awmod+1)& (0+255),b
  7732  00288A  0101               	movlb	1	; () banked
  7733  00288C  BF00               	btfsc	?___awmod& (0+255),7,b
  7734  00288E  0701               	decf	(?___awmod+1)& (0+255),f,b
  7735  002890  ECB4  F028         	call	___awmod	;wreg free
  7736  002894  0101               	movlb	1	; () banked
  7737  002896  C100  F110         	movff	?___awmod,?___wmul
  7738  00289A  0101               	movlb	1	; () banked
  7739  00289C  C101  F111         	movff	?___awmod+1,?___wmul+1
  7740  0028A0  EC8A  F02F         	call	___wmul	;wreg free
  7741  0028A4  0E4F               	movlw	low __powers_
  7742  0028A6  0101               	movlb	1	; () banked
  7743  0028A8  0101               	movlb	1	; () banked
  7744  0028AA  2510               	addwf	?___wmul& (0+255),w,b
  7745  0028AC  6EF6               	movwf	tblptrl,c
  7746  0028AE  0E08               	movlw	high __powers_
  7747  0028B0  0101               	movlb	1	; () banked
  7748  0028B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7749  0028B4  6EF7               	movwf	tblptrh,c
  7750  0028B6  0009               	tblrd		*+
  7751  0028B8  CFF5 F12A          	movff	tablat,??_scale
  7752  0028BC  0009               	tblrd		*+
  7753  0028BE  CFF5 F12B          	movff	tablat,??_scale+1
  7754  0028C2  0009               	tblrd		*+
  7755  0028C4  CFF5 F12C          	movff	tablat,??_scale+2
  7756  0028C8  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  7757  0028CC  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  7758  0028D0  C12A  F119         	movff	??_scale,?___ftmul+3
  7759  0028D4  ECE1  F01C         	call	___ftmul	;wreg free
  7760  0028D8  D086               	goto	L12
  7761  0028DA                     l11086:
  7762                           
  7763                           ;doprnt.c: 438: else if(scl > 10)
  7764  0028DA  0101               	movlb	1	; () banked
  7765  0028DC  0101               	movlb	1	; () banked
  7766  0028DE  5127               	movf	scale@scl& (0+255),w,b
  7767  0028E0  0A80               	xorlw	128
  7768  0028E2  0F75               	addlw	-139
  7769  0028E4  A0D8               	btfss	status,0,c
  7770  0028E6  D086               	goto	l11092
  7771                           
  7772                           ; BSR set to: 1
  7773                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7774  0028E8  0E00               	movlw	0
  7775  0028EA  0101               	movlb	1	; () banked
  7776  0028EC  0101               	movlb	1	; () banked
  7777  0028EE  6F13               	movwf	(?___wmul+3)& (0+255),b
  7778  0028F0  0E03               	movlw	3
  7779  0028F2  0101               	movlb	1	; () banked
  7780  0028F4  6F12               	movwf	(?___wmul+2)& (0+255),b
  7781  0028F6  0E00               	movlw	0
  7782  0028F8  0101               	movlb	1	; () banked
  7783  0028FA  0101               	movlb	1	; () banked
  7784  0028FC  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7785  0028FE  0E0A               	movlw	10
  7786  002900  0101               	movlb	1	; () banked
  7787  002902  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7788  002904  0101               	movlb	1	; () banked
  7789  002906  0101               	movlb	1	; () banked
  7790  002908  5127               	movf	scale@scl& (0+255),w,b
  7791  00290A  0101               	movlb	1	; () banked
  7792  00290C  0101               	movlb	1	; () banked
  7793  00290E  6F07               	movwf	?___awdiv& (0+255),b
  7794  002910  0101               	movlb	1	; () banked
  7795  002912  6B08               	clrf	(?___awdiv+1)& (0+255),b
  7796  002914  0101               	movlb	1	; () banked
  7797  002916  BF07               	btfsc	?___awdiv& (0+255),7,b
  7798  002918  0708               	decf	(?___awdiv+1)& (0+255),f,b
  7799  00291A  ECA4  F024         	call	___awdiv	;wreg free
  7800  00291E  0E09               	movlw	9
  7801  002920  0101               	movlb	1	; () banked
  7802  002922  0101               	movlb	1	; () banked
  7803  002924  2507               	addwf	?___awdiv& (0+255),w,b
  7804  002926  0101               	movlb	1	; () banked
  7805  002928  0101               	movlb	1	; () banked
  7806  00292A  6F10               	movwf	?___wmul& (0+255),b
  7807  00292C  0E00               	movlw	0
  7808  00292E  0101               	movlb	1	; () banked
  7809  002930  0101               	movlb	1	; () banked
  7810  002932  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7811  002934  0101               	movlb	1	; () banked
  7812  002936  6F11               	movwf	(?___wmul+1)& (0+255),b
  7813  002938  EC8A  F02F         	call	___wmul	;wreg free
  7814  00293C  0E4F               	movlw	low __powers_
  7815  00293E  0101               	movlb	1	; () banked
  7816  002940  0101               	movlb	1	; () banked
  7817  002942  2510               	addwf	?___wmul& (0+255),w,b
  7818  002944  6EF6               	movwf	tblptrl,c
  7819  002946  0E08               	movlw	high __powers_
  7820  002948  0101               	movlb	1	; () banked
  7821  00294A  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7822  00294C  6EF7               	movwf	tblptrh,c
  7823  00294E  0009               	tblrd		*+
  7824  002950  CFF5 F12A          	movff	tablat,??_scale
  7825  002954  0009               	tblrd		*+
  7826  002956  CFF5 F12B          	movff	tablat,??_scale+1
  7827  00295A  0009               	tblrd		*+
  7828  00295C  CFF5 F12C          	movff	tablat,??_scale+2
  7829  002960  C12C  F118         	movff	??_scale+2,?___ftmul+2
  7830  002964  C12B  F117         	movff	??_scale+1,?___ftmul+1
  7831  002968  C12A  F116         	movff	??_scale,?___ftmul
  7832  00296C  0E00               	movlw	0
  7833  00296E  0101               	movlb	1	; () banked
  7834  002970  0101               	movlb	1	; () banked
  7835  002972  6F13               	movwf	(?___wmul+3)& (0+255),b
  7836  002974  0E03               	movlw	3
  7837  002976  0101               	movlb	1	; () banked
  7838  002978  6F12               	movwf	(?___wmul+2)& (0+255),b
  7839  00297A  0E00               	movlw	0
  7840  00297C  0101               	movlb	1	; () banked
  7841  00297E  0101               	movlb	1	; () banked
  7842  002980  6F03               	movwf	(?___awmod+3)& (0+255),b
  7843  002982  0E0A               	movlw	10
  7844  002984  0101               	movlb	1	; () banked
  7845  002986  6F02               	movwf	(?___awmod+2)& (0+255),b
  7846  002988  0101               	movlb	1	; () banked
  7847  00298A  0101               	movlb	1	; () banked
  7848  00298C  5127               	movf	scale@scl& (0+255),w,b
  7849  00298E  0101               	movlb	1	; () banked
  7850  002990  0101               	movlb	1	; () banked
  7851  002992  6F00               	movwf	?___awmod& (0+255),b
  7852  002994  0101               	movlb	1	; () banked
  7853  002996  6B01               	clrf	(?___awmod+1)& (0+255),b
  7854  002998  0101               	movlb	1	; () banked
  7855  00299A  BF00               	btfsc	?___awmod& (0+255),7,b
  7856  00299C  0701               	decf	(?___awmod+1)& (0+255),f,b
  7857  00299E  ECB4  F028         	call	___awmod	;wreg free
  7858  0029A2  0101               	movlb	1	; () banked
  7859  0029A4  C100  F110         	movff	?___awmod,?___wmul
  7860  0029A8  0101               	movlb	1	; () banked
  7861  0029AA  C101  F111         	movff	?___awmod+1,?___wmul+1
  7862  0029AE  EC8A  F02F         	call	___wmul	;wreg free
  7863  0029B2  0E4F               	movlw	low __powers_
  7864  0029B4  0101               	movlb	1	; () banked
  7865  0029B6  0101               	movlb	1	; () banked
  7866  0029B8  2510               	addwf	?___wmul& (0+255),w,b
  7867  0029BA  6EF6               	movwf	tblptrl,c
  7868  0029BC  0E08               	movlw	high __powers_
  7869  0029BE  0101               	movlb	1	; () banked
  7870  0029C0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7871  0029C2  6EF7               	movwf	tblptrh,c
  7872  0029C4  0009               	tblrd		*+
  7873  0029C6  CFF5 F12D          	movff	tablat,??_scale+3
  7874  0029CA  0009               	tblrd		*+
  7875  0029CC  CFF5 F12E          	movff	tablat,??_scale+4
  7876  0029D0  0009               	tblrd		*+
  7877  0029D2  CFF5 F12F          	movff	tablat,??_scale+5
  7878  0029D6  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  7879  0029DA  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  7880  0029DE  C12D  F119         	movff	??_scale+3,?___ftmul+3
  7881  0029E2  ECE1  F01C         	call	___ftmul	;wreg free
  7882  0029E6                     L12:
  7883  0029E6  C118  F129         	movff	?___ftmul+2,?_scale+2
  7884  0029EA  C117  F128         	movff	?___ftmul+1,?_scale+1
  7885  0029EE  C116  F127         	movff	?___ftmul,?_scale
  7886  0029F2  D019               	goto	l296
  7887  0029F4                     l11092:
  7888                           
  7889                           ;doprnt.c: 440: return _powers_[scl];
  7890  0029F4  0101               	movlb	1	; () banked
  7891  0029F6  0101               	movlb	1	; () banked
  7892  0029F8  5127               	movf	scale@scl& (0+255),w,b
  7893  0029FA  0D03               	mullw	3
  7894  0029FC  0E4F               	movlw	low __powers_
  7895  0029FE  24F3               	addwf	prodl,w,c
  7896  002A00  6EF6               	movwf	tblptrl,c
  7897  002A02  0E08               	movlw	high __powers_
  7898  002A04                     L11:
  7899  002A04  20F4               	addwfc	prodh,w,c
  7900  002A06  6EF7               	movwf	tblptrh,c
  7901  002A08  0009               	tblrd		*+
  7902  002A0A  CFF5 F12A          	movff	tablat,??_scale
  7903  002A0E  0009               	tblrd		*+
  7904  002A10  CFF5 F12B          	movff	tablat,??_scale+1
  7905  002A14  0009               	tblrd		*+
  7906  002A16  CFF5 F12C          	movff	tablat,??_scale+2
  7907  002A1A  C12C  F129         	movff	??_scale+2,?_scale+2
  7908  002A1E  C12B  F128         	movff	??_scale+1,?_scale+1
  7909  002A22  C12A  F127         	movff	??_scale,?_scale
  7910  002A26                     l296:
  7911  002A26  0012               	return	
  7912  002A28                     __end_of_scale:
  7913                           	opt stack 0
  7914                           tblptru	equ	0xFF8
  7915                           tblptrh	equ	0xFF7
  7916                           tblptrl	equ	0xFF6
  7917                           tablat	equ	0xFF5
  7918                           prodh	equ	0xFF4
  7919                           prodl	equ	0xFF3
  7920                           intcon	equ	0xFF2
  7921                           postinc0	equ	0xFEE
  7922                           wreg	equ	0xFE8
  7923                           postdec1	equ	0xFE5
  7924                           fsr1l	equ	0xFE1
  7925                           indf2	equ	0xFDF
  7926                           postinc2	equ	0xFDE
  7927                           postdec2	equ	0xFDD
  7928                           fsr2h	equ	0xFDA
  7929                           fsr2l	equ	0xFD9
  7930                           status	equ	0xFD8
  7931                           
  7932 ;; *************** function _fround *****************
  7933 ;; Defined at:
  7934 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  prec            1   39[BANK1 ] unsigned char 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  3   39[BANK1 ] unsigned char 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7948 ;;      Params:         0       0       3       0       0       0       0       0       0
  7949 ;;      Locals:         0       0       6       0       0       0       0       0       0
  7950 ;;      Temps:          0       0       6       0       0       0       0       0       0
  7951 ;;      Totals:         0       0      15       0       0       0       0       0       0
  7952 ;;Total ram usage:       15 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:   13
  7955 ;; This function calls:
  7956 ;;		___ftmul
  7957 ;;		___awdiv
  7958 ;;		___awmod
  7959 ;;		___wmul
  7960 ;; This function is called by:
  7961 ;;		_sprintf
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text25
  7966  002E78                     __ptext25:
  7967                           	opt stack 0
  7968  002E78                     _fround:
  7969                           	opt stack 14
  7970                           
  7971                           ;doprnt.c: 413: if(prec>=110)
  7972                           
  7973                           ;incstack = 0
  7974                           ;incstack = 0
  7975  002E78  0E6D               	movlw	109
  7976  002E7A  0101               	movlb	1	; () banked
  7977  002E7C  0101               	movlb	1	; () banked
  7978  002E7E  6527               	cpfsgt	fround@prec& (0+255),b
  7979  002E80  D0ED               	goto	l11044
  7980                           
  7981                           ; BSR set to: 1
  7982                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7983  002E82  0E00               	movlw	0
  7984  002E84  0101               	movlb	1	; () banked
  7985  002E86  0101               	movlb	1	; () banked
  7986  002E88  6F13               	movwf	(?___wmul+3)& (0+255),b
  7987  002E8A  0E03               	movlw	3
  7988  002E8C  0101               	movlb	1	; () banked
  7989  002E8E  6F12               	movwf	(?___wmul+2)& (0+255),b
  7990  002E90  0E00               	movlw	0
  7991  002E92  0101               	movlb	1	; () banked
  7992  002E94  0101               	movlb	1	; () banked
  7993  002E96  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7994  002E98  0E0A               	movlw	10
  7995  002E9A  0101               	movlb	1	; () banked
  7996  002E9C  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7997  002E9E  0E00               	movlw	0
  7998  002EA0  0101               	movlb	1	; () banked
  7999  002EA2  0101               	movlb	1	; () banked
  8000  002EA4  6F03               	movwf	(?___awmod+3)& (0+255),b
  8001  002EA6  0E64               	movlw	100
  8002  002EA8  0101               	movlb	1	; () banked
  8003  002EAA  6F02               	movwf	(?___awmod+2)& (0+255),b
  8004  002EAC  0101               	movlb	1	; () banked
  8005  002EAE  0101               	movlb	1	; () banked
  8006  002EB0  C127  F100         	movff	fround@prec,?___awmod
  8007  002EB4  0101               	movlb	1	; () banked
  8008  002EB6  0101               	movlb	1	; () banked
  8009  002EB8  6B01               	clrf	(?___awmod+1)& (0+255),b
  8010  002EBA  ECB4  F028         	call	___awmod	;wreg free
  8011  002EBE  0101               	movlb	1	; () banked
  8012  002EC0  C100  F107         	movff	?___awmod,?___awdiv
  8013  002EC4  0101               	movlb	1	; () banked
  8014  002EC6  C101  F108         	movff	?___awmod+1,?___awdiv+1
  8015  002ECA  ECA4  F024         	call	___awdiv	;wreg free
  8016  002ECE  0E09               	movlw	9
  8017  002ED0  0101               	movlb	1	; () banked
  8018  002ED2  0101               	movlb	1	; () banked
  8019  002ED4  2507               	addwf	?___awdiv& (0+255),w,b
  8020  002ED6  0101               	movlb	1	; () banked
  8021  002ED8  0101               	movlb	1	; () banked
  8022  002EDA  6F10               	movwf	?___wmul& (0+255),b
  8023  002EDC  0E00               	movlw	0
  8024  002EDE  0101               	movlb	1	; () banked
  8025  002EE0  0101               	movlb	1	; () banked
  8026  002EE2  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  8027  002EE4  0101               	movlb	1	; () banked
  8028  002EE6  6F11               	movwf	(?___wmul+1)& (0+255),b
  8029  002EE8  EC8A  F02F         	call	___wmul	;wreg free
  8030  002EEC  0E28               	movlw	low __npowers_
  8031  002EEE  0101               	movlb	1	; () banked
  8032  002EF0  0101               	movlb	1	; () banked
  8033  002EF2  2510               	addwf	?___wmul& (0+255),w,b
  8034  002EF4  6EF6               	movwf	tblptrl,c
  8035  002EF6  0E08               	movlw	high __npowers_
  8036  002EF8  0101               	movlb	1	; () banked
  8037  002EFA  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  8038  002EFC  6EF7               	movwf	tblptrh,c
  8039  002EFE  0009               	tblrd		*+
  8040  002F00  CFF5 F12A          	movff	tablat,??_fround
  8041  002F04  0009               	tblrd		*+
  8042  002F06  CFF5 F12B          	movff	tablat,??_fround+1
  8043  002F0A  0009               	tblrd		*+
  8044  002F0C  CFF5 F12C          	movff	tablat,??_fround+2
  8045  002F10  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  8046  002F14  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  8047  002F18  C12A  F119         	movff	??_fround,?___ftmul+3
  8048  002F1C  0E00               	movlw	0
  8049  002F1E  0101               	movlb	1	; () banked
  8050  002F20  0101               	movlb	1	; () banked
  8051  002F22  6F13               	movwf	(?___wmul+3)& (0+255),b
  8052  002F24  0E03               	movlw	3
  8053  002F26  0101               	movlb	1	; () banked
  8054  002F28  6F12               	movwf	(?___wmul+2)& (0+255),b
  8055  002F2A  0E00               	movlw	0
  8056  002F2C  0101               	movlb	1	; () banked
  8057  002F2E  0101               	movlb	1	; () banked
  8058  002F30  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  8059  002F32  0E64               	movlw	100
  8060  002F34  0101               	movlb	1	; () banked
  8061  002F36  6F09               	movwf	(?___awdiv+2)& (0+255),b
  8062  002F38  0101               	movlb	1	; () banked
  8063  002F3A  0101               	movlb	1	; () banked
  8064  002F3C  C127  F107         	movff	fround@prec,?___awdiv
  8065  002F40  0101               	movlb	1	; () banked
  8066  002F42  0101               	movlb	1	; () banked
  8067  002F44  6B08               	clrf	(?___awdiv+1)& (0+255),b
  8068  002F46  ECA4  F024         	call	___awdiv	;wreg free
  8069  002F4A  0E12               	movlw	18
  8070  002F4C  0101               	movlb	1	; () banked
  8071  002F4E  0101               	movlb	1	; () banked
  8072  002F50  2507               	addwf	?___awdiv& (0+255),w,b
  8073  002F52  0101               	movlb	1	; () banked
  8074  002F54  0101               	movlb	1	; () banked
  8075  002F56  6F10               	movwf	?___wmul& (0+255),b
  8076  002F58  0E00               	movlw	0
  8077  002F5A  0101               	movlb	1	; () banked
  8078  002F5C  0101               	movlb	1	; () banked
  8079  002F5E  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  8080  002F60  0101               	movlb	1	; () banked
  8081  002F62  6F11               	movwf	(?___wmul+1)& (0+255),b
  8082  002F64  EC8A  F02F         	call	___wmul	;wreg free
  8083  002F68  0E28               	movlw	low __npowers_
  8084  002F6A  0101               	movlb	1	; () banked
  8085  002F6C  0101               	movlb	1	; () banked
  8086  002F6E  2510               	addwf	?___wmul& (0+255),w,b
  8087  002F70  6EF6               	movwf	tblptrl,c
  8088  002F72  0E08               	movlw	high __npowers_
  8089  002F74  0101               	movlb	1	; () banked
  8090  002F76  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  8091  002F78  6EF7               	movwf	tblptrh,c
  8092  002F7A  0009               	tblrd		*+
  8093  002F7C  CFF5 F12D          	movff	tablat,??_fround+3
  8094  002F80  0009               	tblrd		*+
  8095  002F82  CFF5 F12E          	movff	tablat,??_fround+4
  8096  002F86  0009               	tblrd		*+
  8097  002F88  CFF5 F12F          	movff	tablat,??_fround+5
  8098  002F8C  C12F  F118         	movff	??_fround+5,?___ftmul+2
  8099  002F90  C12E  F117         	movff	??_fround+4,?___ftmul+1
  8100  002F94  C12D  F116         	movff	??_fround+3,?___ftmul
  8101  002F98  ECE1  F01C         	call	___ftmul	;wreg free
  8102  002F9C  C118  F135         	movff	?___ftmul+2,_fround$1353+2
  8103  002FA0  C117  F134         	movff	?___ftmul+1,_fround$1353+1
  8104  002FA4  C116  F133         	movff	?___ftmul,_fround$1353
  8105                           
  8106                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8107  002FA8  0E00               	movlw	0
  8108  002FAA  0101               	movlb	1	; () banked
  8109  002FAC  0101               	movlb	1	; () banked
  8110  002FAE  6F13               	movwf	(?___wmul+3)& (0+255),b
  8111  002FB0  0E03               	movlw	3
  8112  002FB2  0101               	movlb	1	; () banked
  8113  002FB4  6F12               	movwf	(?___wmul+2)& (0+255),b
  8114  002FB6  0E00               	movlw	0
  8115  002FB8  0101               	movlb	1	; () banked
  8116  002FBA  0101               	movlb	1	; () banked
  8117  002FBC  6F03               	movwf	(?___awmod+3)& (0+255),b
  8118  002FBE  0E0A               	movlw	10
  8119  002FC0  0101               	movlb	1	; () banked
  8120  002FC2  6F02               	movwf	(?___awmod+2)& (0+255),b
  8121  002FC4  0101               	movlb	1	; () banked
  8122  002FC6  0101               	movlb	1	; () banked
  8123  002FC8  C127  F100         	movff	fround@prec,?___awmod
  8124  002FCC  0101               	movlb	1	; () banked
  8125  002FCE  0101               	movlb	1	; () banked
  8126  002FD0  6B01               	clrf	(?___awmod+1)& (0+255),b
  8127  002FD2  ECB4  F028         	call	___awmod	;wreg free
  8128  002FD6  0101               	movlb	1	; () banked
  8129  002FD8  C100  F110         	movff	?___awmod,?___wmul
  8130  002FDC  0101               	movlb	1	; () banked
  8131  002FDE  C101  F111         	movff	?___awmod+1,?___wmul+1
  8132  002FE2  EC8A  F02F         	call	___wmul	;wreg free
  8133  002FE6  0E28               	movlw	low __npowers_
  8134  002FE8  0101               	movlb	1	; () banked
  8135  002FEA  0101               	movlb	1	; () banked
  8136  002FEC  2510               	addwf	?___wmul& (0+255),w,b
  8137  002FEE  6EF6               	movwf	tblptrl,c
  8138  002FF0  0E08               	movlw	high __npowers_
  8139  002FF2  0101               	movlb	1	; () banked
  8140  002FF4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  8141  002FF6  6EF7               	movwf	tblptrh,c
  8142  002FF8  0009               	tblrd		*+
  8143  002FFA  CFF5 F12A          	movff	tablat,??_fround
  8144  002FFE  0009               	tblrd		*+
  8145  003000  CFF5 F12B          	movff	tablat,??_fround+1
  8146  003004  0009               	tblrd		*+
  8147  003006  CFF5 F12C          	movff	tablat,??_fround+2
  8148  00300A  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  8149  00300E  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  8150  003012  C12A  F119         	movff	??_fround,?___ftmul+3
  8151  003016  C133  F116         	movff	_fround$1353,?___ftmul
  8152  00301A  C134  F117         	movff	_fround$1353+1,?___ftmul+1
  8153  00301E  C135  F118         	movff	_fround$1353+2,?___ftmul+2
  8154  003022  ECE1  F01C         	call	___ftmul	;wreg free
  8155  003026  C118  F132         	movff	?___ftmul+2,_fround$1354+2
  8156  00302A  C117  F131         	movff	?___ftmul+1,_fround$1354+1
  8157  00302E  C116  F130         	movff	?___ftmul,_fround$1354
  8158                           
  8159                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8160  003032  C130  F116         	movff	_fround$1354,?___ftmul
  8161  003036  C131  F117         	movff	_fround$1354+1,?___ftmul+1
  8162  00303A  C132  F118         	movff	_fround$1354+2,?___ftmul+2
  8163  00303E  0E00               	movlw	0
  8164  003040  0101               	movlb	1	; () banked
  8165  003042  0101               	movlb	1	; () banked
  8166  003044  6F19               	movwf	(?___ftmul+3)& (0+255),b
  8167  003046  0E00               	movlw	0
  8168  003048  0101               	movlb	1	; () banked
  8169  00304A  0101               	movlb	1	; () banked
  8170  00304C  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  8171  00304E  0E3F               	movlw	63
  8172  003050  0101               	movlb	1	; () banked
  8173  003052  0101               	movlb	1	; () banked
  8174  003054  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  8175  003056  ECE1  F01C         	call	___ftmul	;wreg free
  8176  00305A  D0BE               	goto	L14
  8177  00305C                     l11044:
  8178                           
  8179                           ;doprnt.c: 415: else if(prec > 10)
  8180  00305C  0E0A               	movlw	10
  8181  00305E  0101               	movlb	1	; () banked
  8182  003060  0101               	movlb	1	; () banked
  8183  003062  6527               	cpfsgt	fround@prec& (0+255),b
  8184  003064  D092               	goto	l11052
  8185                           
  8186                           ; BSR set to: 1
  8187                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8188  003066  0E00               	movlw	0
  8189  003068  0101               	movlb	1	; () banked
  8190  00306A  0101               	movlb	1	; () banked
  8191  00306C  6F13               	movwf	(?___wmul+3)& (0+255),b
  8192  00306E  0E03               	movlw	3
  8193  003070  0101               	movlb	1	; () banked
  8194  003072  6F12               	movwf	(?___wmul+2)& (0+255),b
  8195  003074  0E00               	movlw	0
  8196  003076  0101               	movlb	1	; () banked
  8197  003078  0101               	movlb	1	; () banked
  8198  00307A  6F03               	movwf	(?___awmod+3)& (0+255),b
  8199  00307C  0E0A               	movlw	10
  8200  00307E  0101               	movlb	1	; () banked
  8201  003080  6F02               	movwf	(?___awmod+2)& (0+255),b
  8202  003082  0101               	movlb	1	; () banked
  8203  003084  0101               	movlb	1	; () banked
  8204  003086  C127  F100         	movff	fround@prec,?___awmod
  8205  00308A  0101               	movlb	1	; () banked
  8206  00308C  0101               	movlb	1	; () banked
  8207  00308E  6B01               	clrf	(?___awmod+1)& (0+255),b
  8208  003090  ECB4  F028         	call	___awmod	;wreg free
  8209  003094  0101               	movlb	1	; () banked
  8210  003096  C100  F110         	movff	?___awmod,?___wmul
  8211  00309A  0101               	movlb	1	; () banked
  8212  00309C  C101  F111         	movff	?___awmod+1,?___wmul+1
  8213  0030A0  EC8A  F02F         	call	___wmul	;wreg free
  8214  0030A4  0E28               	movlw	low __npowers_
  8215  0030A6  0101               	movlb	1	; () banked
  8216  0030A8  0101               	movlb	1	; () banked
  8217  0030AA  2510               	addwf	?___wmul& (0+255),w,b
  8218  0030AC  6EF6               	movwf	tblptrl,c
  8219  0030AE  0E08               	movlw	high __npowers_
  8220  0030B0  0101               	movlb	1	; () banked
  8221  0030B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  8222  0030B4  6EF7               	movwf	tblptrh,c
  8223  0030B6  0009               	tblrd		*+
  8224  0030B8  CFF5 F12A          	movff	tablat,??_fround
  8225  0030BC  0009               	tblrd		*+
  8226  0030BE  CFF5 F12B          	movff	tablat,??_fround+1
  8227  0030C2  0009               	tblrd		*+
  8228  0030C4  CFF5 F12C          	movff	tablat,??_fround+2
  8229  0030C8  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  8230  0030CC  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  8231  0030D0  C12A  F119         	movff	??_fround,?___ftmul+3
  8232  0030D4  0E00               	movlw	0
  8233  0030D6  0101               	movlb	1	; () banked
  8234  0030D8  0101               	movlb	1	; () banked
  8235  0030DA  6F13               	movwf	(?___wmul+3)& (0+255),b
  8236  0030DC  0E03               	movlw	3
  8237  0030DE  0101               	movlb	1	; () banked
  8238  0030E0  6F12               	movwf	(?___wmul+2)& (0+255),b
  8239  0030E2  0E00               	movlw	0
  8240  0030E4  0101               	movlb	1	; () banked
  8241  0030E6  0101               	movlb	1	; () banked
  8242  0030E8  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  8243  0030EA  0E0A               	movlw	10
  8244  0030EC  0101               	movlb	1	; () banked
  8245  0030EE  6F09               	movwf	(?___awdiv+2)& (0+255),b
  8246  0030F0  0101               	movlb	1	; () banked
  8247  0030F2  0101               	movlb	1	; () banked
  8248  0030F4  C127  F107         	movff	fround@prec,?___awdiv
  8249  0030F8  0101               	movlb	1	; () banked
  8250  0030FA  0101               	movlb	1	; () banked
  8251  0030FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  8252  0030FE  ECA4  F024         	call	___awdiv	;wreg free
  8253  003102  0E09               	movlw	9
  8254  003104  0101               	movlb	1	; () banked
  8255  003106  0101               	movlb	1	; () banked
  8256  003108  2507               	addwf	?___awdiv& (0+255),w,b
  8257  00310A  0101               	movlb	1	; () banked
  8258  00310C  0101               	movlb	1	; () banked
  8259  00310E  6F10               	movwf	?___wmul& (0+255),b
  8260  003110  0E00               	movlw	0
  8261  003112  0101               	movlb	1	; () banked
  8262  003114  0101               	movlb	1	; () banked
  8263  003116  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  8264  003118  0101               	movlb	1	; () banked
  8265  00311A  6F11               	movwf	(?___wmul+1)& (0+255),b
  8266  00311C  EC8A  F02F         	call	___wmul	;wreg free
  8267  003120  0E28               	movlw	low __npowers_
  8268  003122  0101               	movlb	1	; () banked
  8269  003124  0101               	movlb	1	; () banked
  8270  003126  2510               	addwf	?___wmul& (0+255),w,b
  8271  003128  6EF6               	movwf	tblptrl,c
  8272  00312A  0E08               	movlw	high __npowers_
  8273  00312C  0101               	movlb	1	; () banked
  8274  00312E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  8275  003130  6EF7               	movwf	tblptrh,c
  8276  003132  0009               	tblrd		*+
  8277  003134  CFF5 F12D          	movff	tablat,??_fround+3
  8278  003138  0009               	tblrd		*+
  8279  00313A  CFF5 F12E          	movff	tablat,??_fround+4
  8280  00313E  0009               	tblrd		*+
  8281  003140  CFF5 F12F          	movff	tablat,??_fround+5
  8282  003144  C12F  F118         	movff	??_fround+5,?___ftmul+2
  8283  003148  C12E  F117         	movff	??_fround+4,?___ftmul+1
  8284  00314C  C12D  F116         	movff	??_fround+3,?___ftmul
  8285  003150  ECE1  F01C         	call	___ftmul	;wreg free
  8286  003154  C118  F135         	movff	?___ftmul+2,_fround$1353+2
  8287  003158  C117  F134         	movff	?___ftmul+1,_fround$1353+1
  8288  00315C  C116  F133         	movff	?___ftmul,_fround$1353
  8289                           
  8290                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8291  003160  C133  F116         	movff	_fround$1353,?___ftmul
  8292  003164  C134  F117         	movff	_fround$1353+1,?___ftmul+1
  8293  003168  C135  F118         	movff	_fround$1353+2,?___ftmul+2
  8294  00316C  0E00               	movlw	0
  8295  00316E  0101               	movlb	1	; () banked
  8296  003170  0101               	movlb	1	; () banked
  8297  003172  6F19               	movwf	(?___ftmul+3)& (0+255),b
  8298  003174  0E00               	movlw	0
  8299  003176  0101               	movlb	1	; () banked
  8300  003178  0101               	movlb	1	; () banked
  8301  00317A  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  8302  00317C  0E3F               	movlw	63
  8303  00317E  0101               	movlb	1	; () banked
  8304  003180  0101               	movlb	1	; () banked
  8305  003182  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  8306  003184  ECE1  F01C         	call	___ftmul	;wreg free
  8307  003188  D027               	goto	L14
  8308  00318A                     l11052:
  8309                           
  8310                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8311  00318A  0101               	movlb	1	; () banked
  8312  00318C  0101               	movlb	1	; () banked
  8313  00318E  5127               	movf	fround@prec& (0+255),w,b
  8314  003190  0D03               	mullw	3
  8315  003192  0E28               	movlw	low __npowers_
  8316  003194  24F3               	addwf	prodl,w,c
  8317  003196  6EF6               	movwf	tblptrl,c
  8318  003198  0E08               	movlw	high __npowers_
  8319  00319A  20F4               	addwfc	prodh,w,c
  8320  00319C  6EF7               	movwf	tblptrh,c
  8321  00319E  0009               	tblrd		*+
  8322  0031A0  CFF5 F12A          	movff	tablat,??_fround
  8323  0031A4  0009               	tblrd		*+
  8324  0031A6  CFF5 F12B          	movff	tablat,??_fround+1
  8325  0031AA  0009               	tblrd		*+
  8326  0031AC  CFF5 F12C          	movff	tablat,??_fround+2
  8327  0031B0  C12C  F118         	movff	??_fround+2,?___ftmul+2
  8328  0031B4  C12B  F117         	movff	??_fround+1,?___ftmul+1
  8329  0031B8  C12A  F116         	movff	??_fround,?___ftmul
  8330  0031BC  0E00               	movlw	0
  8331  0031BE  0101               	movlb	1	; () banked
  8332  0031C0  0101               	movlb	1	; () banked
  8333  0031C2  6F19               	movwf	(?___ftmul+3)& (0+255),b
  8334  0031C4  0E00               	movlw	0
  8335  0031C6  0101               	movlb	1	; () banked
  8336  0031C8  0101               	movlb	1	; () banked
  8337  0031CA  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  8338  0031CC  0E3F               	movlw	63
  8339  0031CE  0101               	movlb	1	; () banked
  8340  0031D0  0101               	movlb	1	; () banked
  8341  0031D2  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  8342  0031D4  ECE1  F01C         	call	___ftmul	;wreg free
  8343  0031D8                     L14:
  8344  0031D8  C118  F129         	movff	?___ftmul+2,?_fround+2
  8345  0031DC  C117  F128         	movff	?___ftmul+1,?_fround+1
  8346  0031E0  C116  F127         	movff	?___ftmul,?_fround
  8347  0031E4  0012               	return	
  8348  0031E6                     __end_of_fround:
  8349                           	opt stack 0
  8350                           tblptru	equ	0xFF8
  8351                           tblptrh	equ	0xFF7
  8352                           tblptrl	equ	0xFF6
  8353                           tablat	equ	0xFF5
  8354                           prodh	equ	0xFF4
  8355                           prodl	equ	0xFF3
  8356                           intcon	equ	0xFF2
  8357                           postinc0	equ	0xFEE
  8358                           wreg	equ	0xFE8
  8359                           postdec1	equ	0xFE5
  8360                           fsr1l	equ	0xFE1
  8361                           indf2	equ	0xFDF
  8362                           postinc2	equ	0xFDE
  8363                           postdec2	equ	0xFDD
  8364                           fsr2h	equ	0xFDA
  8365                           fsr2l	equ	0xFD9
  8366                           status	equ	0xFD8
  8367                           
  8368 ;; *************** function ___wmul *****************
  8369 ;; Defined at:
  8370 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  multiplier      2   16[BANK1 ] unsigned int 
  8373 ;;  multiplicand    2   18[BANK1 ] unsigned int 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  product         2   20[BANK1 ] unsigned int 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  2   16[BANK1 ] unsigned int 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0, prodl, prodh
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8385 ;;      Params:         0       0       4       0       0       0       0       0       0
  8386 ;;      Locals:         0       0       2       0       0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8388 ;;      Totals:         0       0       6       0       0       0       0       0       0
  8389 ;;Total ram usage:        6 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:   11
  8392 ;; This function calls:
  8393 ;;		Nothing
  8394 ;; This function is called by:
  8395 ;;		_fround
  8396 ;;		_scale
  8397 ;;		_sprintf
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           	psect	text26
  8402  005F14                     __ptext26:
  8403                           	opt stack 0
  8404  005F14                     ___wmul:
  8405                           	opt stack 16
  8406                           
  8407                           ;incstack = 0
  8408                           ;incstack = 0
  8409  005F14  0101               	movlb	1	; () banked
  8410  005F16  0101               	movlb	1	; () banked
  8411  005F18  5110               	movf	___wmul@multiplier& (0+255),w,b
  8412  005F1A  0101               	movlb	1	; () banked
  8413  005F1C  0101               	movlb	1	; () banked
  8414  005F1E  0312               	mulwf	___wmul@multiplicand& (0+255),b
  8415  005F20  CFF3 F114          	movff	prodl,___wmul@product
  8416  005F24  CFF4 F115          	movff	prodh,___wmul@product+1
  8417  005F28  0101               	movlb	1	; () banked
  8418  005F2A  0101               	movlb	1	; () banked
  8419  005F2C  5110               	movf	___wmul@multiplier& (0+255),w,b
  8420  005F2E  0101               	movlb	1	; () banked
  8421  005F30  0101               	movlb	1	; () banked
  8422  005F32  0313               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8423  005F34  CFF3 FFF4          	movff	prodl,prodh
  8424  005F38  6AF3               	clrf	prodl,c
  8425  005F3A  50F3               	movf	prodl,w,c
  8426  005F3C  0101               	movlb	1	; () banked
  8427  005F3E  0101               	movlb	1	; () banked
  8428  005F40  2714               	addwf	___wmul@product& (0+255),f,b
  8429  005F42  50F4               	movf	prodh,w,c
  8430  005F44  0101               	movlb	1	; () banked
  8431  005F46  0101               	movlb	1	; () banked
  8432  005F48  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  8433  005F4A  0101               	movlb	1	; () banked
  8434  005F4C  0101               	movlb	1	; () banked
  8435  005F4E  5111               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8436  005F50  0101               	movlb	1	; () banked
  8437  005F52  0101               	movlb	1	; () banked
  8438  005F54  0312               	mulwf	___wmul@multiplicand& (0+255),b
  8439  005F56  CFF3 FFF4          	movff	prodl,prodh
  8440  005F5A  6AF3               	clrf	prodl,c
  8441  005F5C  50F3               	movf	prodl,w,c
  8442  005F5E  0101               	movlb	1	; () banked
  8443  005F60  0101               	movlb	1	; () banked
  8444  005F62  2714               	addwf	___wmul@product& (0+255),f,b
  8445  005F64  50F4               	movf	prodh,w,c
  8446  005F66  0101               	movlb	1	; () banked
  8447  005F68  0101               	movlb	1	; () banked
  8448  005F6A  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  8449                           
  8450                           ; BSR set to: 1
  8451  005F6C  C114  F110         	movff	___wmul@product,?___wmul
  8452  005F70  C115  F111         	movff	___wmul@product+1,?___wmul+1
  8453                           
  8454                           ; BSR set to: 1
  8455                           
  8456                           ; BSR set to: 1
  8457  005F74  0012               	return	
  8458  005F76                     __end_of___wmul:
  8459                           	opt stack 0
  8460                           tblptru	equ	0xFF8
  8461                           tblptrh	equ	0xFF7
  8462                           tblptrl	equ	0xFF6
  8463                           tablat	equ	0xFF5
  8464                           prodh	equ	0xFF4
  8465                           prodl	equ	0xFF3
  8466                           intcon	equ	0xFF2
  8467                           postinc0	equ	0xFEE
  8468                           wreg	equ	0xFE8
  8469                           postdec1	equ	0xFE5
  8470                           fsr1l	equ	0xFE1
  8471                           indf2	equ	0xFDF
  8472                           postinc2	equ	0xFDE
  8473                           postdec2	equ	0xFDD
  8474                           fsr2h	equ	0xFDA
  8475                           fsr2l	equ	0xFD9
  8476                           status	equ	0xFD8
  8477                           
  8478 ;; *************** function ___awmod *****************
  8479 ;; Defined at:
  8480 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  dividend        2    0[BANK1 ] int 
  8483 ;;  divisor         2    2[BANK1 ] int 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  sign            1    6[BANK1 ] unsigned char 
  8486 ;;  counter         1    5[BANK1 ] unsigned char 
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  2    0[BANK1 ] int 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2, status,0
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8496 ;;      Params:         0       0       4       0       0       0       0       0       0
  8497 ;;      Locals:         0       0       2       0       0       0       0       0       0
  8498 ;;      Temps:          0       0       1       0       0       0       0       0       0
  8499 ;;      Totals:         0       0       7       0       0       0       0       0       0
  8500 ;;Total ram usage:        7 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:   11
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_fround
  8507 ;;		_scale
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text27
  8512  005168                     __ptext27:
  8513                           	opt stack 0
  8514  005168                     ___awmod:
  8515                           	opt stack 15
  8516                           
  8517                           ; BSR set to: 1
  8518                           ;incstack = 0
  8519                           ;incstack = 0
  8520  005168  0101               	movlb	1	; () banked
  8521  00516A  6F04               	movwf	??___awmod& (0+255),b
  8522  00516C  0E00               	movlw	0
  8523  00516E  0101               	movlb	1	; () banked
  8524  005170  0101               	movlb	1	; () banked
  8525  005172  6F06               	movwf	___awmod@sign& (0+255),b
  8526  005174  0101               	movlb	1	; () banked
  8527  005176  5104               	movf	??___awmod& (0+255),w,b
  8528                           
  8529                           ; BSR set to: 1
  8530  005178  0101               	movlb	1	; () banked
  8531  00517A  0101               	movlb	1	; () banked
  8532  00517C  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8533  00517E  D00F               	goto	l11502
  8534                           
  8535                           ; BSR set to: 1
  8536  005180  0101               	movlb	1	; () banked
  8537  005182  0101               	movlb	1	; () banked
  8538  005184  6D00               	negf	___awmod@dividend& (0+255),b
  8539  005186  0101               	movlb	1	; () banked
  8540  005188  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  8541  00518A  B0D8               	btfsc	status,0,c
  8542  00518C  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  8543                           
  8544                           ; BSR set to: 1
  8545  00518E  0101               	movlb	1	; () banked
  8546  005190  6F04               	movwf	??___awmod& (0+255),b
  8547  005192  0E01               	movlw	1
  8548  005194  0101               	movlb	1	; () banked
  8549  005196  0101               	movlb	1	; () banked
  8550  005198  6F06               	movwf	___awmod@sign& (0+255),b
  8551  00519A  0101               	movlb	1	; () banked
  8552  00519C  5104               	movf	??___awmod& (0+255),w,b
  8553  00519E                     l11502:
  8554                           
  8555                           ; BSR set to: 1
  8556  00519E  0101               	movlb	1	; () banked
  8557  0051A0  0101               	movlb	1	; () banked
  8558  0051A2  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8559  0051A4  D007               	goto	l11506
  8560                           
  8561                           ; BSR set to: 1
  8562  0051A6  0101               	movlb	1	; () banked
  8563  0051A8  0101               	movlb	1	; () banked
  8564  0051AA  6D02               	negf	___awmod@divisor& (0+255),b
  8565  0051AC  0101               	movlb	1	; () banked
  8566  0051AE  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  8567  0051B0  B0D8               	btfsc	status,0,c
  8568  0051B2  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  8569  0051B4                     l11506:
  8570                           
  8571                           ; BSR set to: 1
  8572  0051B4  0101               	movlb	1	; () banked
  8573  0051B6  0101               	movlb	1	; () banked
  8574  0051B8  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  8575  0051BA  1102               	iorwf	___awmod@divisor& (0+255),w,b
  8576  0051BC  B4D8               	btfsc	status,2,c
  8577  0051BE  D03A               	goto	l11522
  8578                           
  8579                           ; BSR set to: 1
  8580  0051C0  0101               	movlb	1	; () banked
  8581  0051C2  6F04               	movwf	??___awmod& (0+255),b
  8582  0051C4  0E01               	movlw	1
  8583  0051C6  0101               	movlb	1	; () banked
  8584  0051C8  0101               	movlb	1	; () banked
  8585  0051CA  6F05               	movwf	___awmod@counter& (0+255),b
  8586  0051CC  0101               	movlb	1	; () banked
  8587  0051CE  5104               	movf	??___awmod& (0+255),w,b
  8588  0051D0  D009               	goto	l11512
  8589  0051D2                     l11510:
  8590                           
  8591                           ; BSR set to: 1
  8592  0051D2  0101               	movlb	1	; () banked
  8593  0051D4  0101               	movlb	1	; () banked
  8594  0051D6  0101               	movlb	1	; () banked
  8595  0051D8  90D8               	bcf	status,0,c
  8596  0051DA  3702               	rlcf	___awmod@divisor& (0+255),f,b
  8597  0051DC  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8598  0051DE  0101               	movlb	1	; () banked
  8599  0051E0  0101               	movlb	1	; () banked
  8600  0051E2  2B05               	incf	___awmod@counter& (0+255),f,b
  8601  0051E4                     l11512:
  8602                           
  8603                           ; BSR set to: 1
  8604  0051E4  0101               	movlb	1	; () banked
  8605  0051E6  0101               	movlb	1	; () banked
  8606  0051E8  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8607  0051EA  D7F3               	goto	l11510
  8608  0051EC                     l11514:
  8609                           
  8610                           ; BSR set to: 1
  8611  0051EC  0101               	movlb	1	; () banked
  8612  0051EE  0101               	movlb	1	; () banked
  8613  0051F0  5102               	movf	___awmod@divisor& (0+255),w,b
  8614  0051F2  0101               	movlb	1	; () banked
  8615  0051F4  0101               	movlb	1	; () banked
  8616  0051F6  5D00               	subwf	___awmod@dividend& (0+255),w,b
  8617  0051F8  0101               	movlb	1	; () banked
  8618  0051FA  0101               	movlb	1	; () banked
  8619  0051FC  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  8620  0051FE  0101               	movlb	1	; () banked
  8621  005200  0101               	movlb	1	; () banked
  8622  005202  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8623  005204  A0D8               	btfss	status,0,c
  8624  005206  D00C               	goto	l11518
  8625                           
  8626                           ; BSR set to: 1
  8627  005208  0101               	movlb	1	; () banked
  8628  00520A  0101               	movlb	1	; () banked
  8629  00520C  5102               	movf	___awmod@divisor& (0+255),w,b
  8630  00520E  0101               	movlb	1	; () banked
  8631  005210  0101               	movlb	1	; () banked
  8632  005212  5F00               	subwf	___awmod@dividend& (0+255),f,b
  8633  005214  0101               	movlb	1	; () banked
  8634  005216  0101               	movlb	1	; () banked
  8635  005218  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  8636  00521A  0101               	movlb	1	; () banked
  8637  00521C  0101               	movlb	1	; () banked
  8638  00521E  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8639  005220                     l11518:
  8640                           
  8641                           ; BSR set to: 1
  8642  005220  0101               	movlb	1	; () banked
  8643  005222  0101               	movlb	1	; () banked
  8644  005224  0101               	movlb	1	; () banked
  8645  005226  90D8               	bcf	status,0,c
  8646  005228  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8647  00522A  3302               	rrcf	___awmod@divisor& (0+255),f,b
  8648                           
  8649                           ; BSR set to: 1
  8650  00522C  0101               	movlb	1	; () banked
  8651  00522E  0101               	movlb	1	; () banked
  8652  005230  2F05               	decfsz	___awmod@counter& (0+255),f,b
  8653  005232  D7DC               	goto	l11514
  8654  005234                     l11522:
  8655                           
  8656                           ; BSR set to: 1
  8657  005234  0101               	movlb	1	; () banked
  8658  005236  0101               	movlb	1	; () banked
  8659  005238  5106               	movf	___awmod@sign& (0+255),w,b
  8660  00523A  B4D8               	btfsc	status,2,c
  8661  00523C  D007               	goto	l11526
  8662                           
  8663                           ; BSR set to: 1
  8664  00523E  0101               	movlb	1	; () banked
  8665  005240  0101               	movlb	1	; () banked
  8666  005242  6D00               	negf	___awmod@dividend& (0+255),b
  8667  005244  0101               	movlb	1	; () banked
  8668  005246  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  8669  005248  B0D8               	btfsc	status,0,c
  8670  00524A  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  8671  00524C                     l11526:
  8672                           
  8673                           ; BSR set to: 1
  8674  00524C  C100  F100         	movff	___awmod@dividend,?___awmod
  8675  005250  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  8676                           
  8677                           ; BSR set to: 1
  8678                           
  8679                           ; BSR set to: 1
  8680  005254  0012               	return	
  8681  005256                     __end_of___awmod:
  8682                           	opt stack 0
  8683                           tblptru	equ	0xFF8
  8684                           tblptrh	equ	0xFF7
  8685                           tblptrl	equ	0xFF6
  8686                           tablat	equ	0xFF5
  8687                           prodh	equ	0xFF4
  8688                           prodl	equ	0xFF3
  8689                           intcon	equ	0xFF2
  8690                           postinc0	equ	0xFEE
  8691                           wreg	equ	0xFE8
  8692                           postdec1	equ	0xFE5
  8693                           fsr1l	equ	0xFE1
  8694                           indf2	equ	0xFDF
  8695                           postinc2	equ	0xFDE
  8696                           postdec2	equ	0xFDD
  8697                           fsr2h	equ	0xFDA
  8698                           fsr2l	equ	0xFD9
  8699                           status	equ	0xFD8
  8700                           
  8701 ;; *************** function ___awdiv *****************
  8702 ;; Defined at:
  8703 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  dividend        2    7[BANK1 ] int 
  8706 ;;  divisor         2    9[BANK1 ] int 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  quotient        2   14[BANK1 ] int 
  8709 ;;  sign            1   13[BANK1 ] unsigned char 
  8710 ;;  counter         1   12[BANK1 ] unsigned char 
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  2    7[BANK1 ] int 
  8713 ;; Registers used:
  8714 ;;		wreg, status,2, status,0
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8720 ;;      Params:         0       0       4       0       0       0       0       0       0
  8721 ;;      Locals:         0       0       4       0       0       0       0       0       0
  8722 ;;      Temps:          0       0       1       0       0       0       0       0       0
  8723 ;;      Totals:         0       0       9       0       0       0       0       0       0
  8724 ;;Total ram usage:        9 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:   11
  8727 ;; This function calls:
  8728 ;;		Nothing
  8729 ;; This function is called by:
  8730 ;;		_fround
  8731 ;;		_scale
  8732 ;;		_sprintf
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text28
  8737  004948                     __ptext28:
  8738                           	opt stack 0
  8739  004948                     ___awdiv:
  8740                           	opt stack 16
  8741                           
  8742                           ; BSR set to: 1
  8743                           ;incstack = 0
  8744                           ;incstack = 0
  8745  004948  0101               	movlb	1	; () banked
  8746  00494A  6F0B               	movwf	??___awdiv& (0+255),b
  8747  00494C  0E00               	movlw	0
  8748  00494E  0101               	movlb	1	; () banked
  8749  004950  0101               	movlb	1	; () banked
  8750  004952  6F0D               	movwf	___awdiv@sign& (0+255),b
  8751  004954  0101               	movlb	1	; () banked
  8752  004956  510B               	movf	??___awdiv& (0+255),w,b
  8753                           
  8754                           ; BSR set to: 1
  8755  004958  0101               	movlb	1	; () banked
  8756  00495A  0101               	movlb	1	; () banked
  8757  00495C  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8758  00495E  D00F               	goto	l11458
  8759                           
  8760                           ; BSR set to: 1
  8761  004960  0101               	movlb	1	; () banked
  8762  004962  0101               	movlb	1	; () banked
  8763  004964  6D09               	negf	___awdiv@divisor& (0+255),b
  8764  004966  0101               	movlb	1	; () banked
  8765  004968  1F0A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8766  00496A  B0D8               	btfsc	status,0,c
  8767  00496C  2B0A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8768                           
  8769                           ; BSR set to: 1
  8770  00496E  0101               	movlb	1	; () banked
  8771  004970  6F0B               	movwf	??___awdiv& (0+255),b
  8772  004972  0E01               	movlw	1
  8773  004974  0101               	movlb	1	; () banked
  8774  004976  0101               	movlb	1	; () banked
  8775  004978  6F0D               	movwf	___awdiv@sign& (0+255),b
  8776  00497A  0101               	movlb	1	; () banked
  8777  00497C  510B               	movf	??___awdiv& (0+255),w,b
  8778  00497E                     l11458:
  8779                           
  8780                           ; BSR set to: 1
  8781  00497E  0101               	movlb	1	; () banked
  8782  004980  0101               	movlb	1	; () banked
  8783  004982  AF08               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8784  004984  D00B               	goto	l11464
  8785                           
  8786                           ; BSR set to: 1
  8787  004986  0101               	movlb	1	; () banked
  8788  004988  0101               	movlb	1	; () banked
  8789  00498A  6D07               	negf	___awdiv@dividend& (0+255),b
  8790  00498C  0101               	movlb	1	; () banked
  8791  00498E  1F08               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8792  004990  B0D8               	btfsc	status,0,c
  8793  004992  2B08               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8794                           
  8795                           ; BSR set to: 1
  8796  004994  0E01               	movlw	1
  8797  004996  0101               	movlb	1	; () banked
  8798  004998  0101               	movlb	1	; () banked
  8799  00499A  1B0D               	xorwf	___awdiv@sign& (0+255),f,b
  8800  00499C                     l11464:
  8801                           
  8802                           ; BSR set to: 1
  8803  00499C  0E00               	movlw	0
  8804  00499E  0101               	movlb	1	; () banked
  8805  0049A0  0101               	movlb	1	; () banked
  8806  0049A2  6F0F               	movwf	(___awdiv@quotient+1)& (0+255),b
  8807  0049A4  0E00               	movlw	0
  8808  0049A6  0101               	movlb	1	; () banked
  8809  0049A8  6F0E               	movwf	___awdiv@quotient& (0+255),b
  8810                           
  8811                           ; BSR set to: 1
  8812  0049AA  0101               	movlb	1	; () banked
  8813  0049AC  0101               	movlb	1	; () banked
  8814  0049AE  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8815  0049B0  1109               	iorwf	___awdiv@divisor& (0+255),w,b
  8816  0049B2  B4D8               	btfsc	status,2,c
  8817  0049B4  D043               	goto	l11486
  8818                           
  8819                           ; BSR set to: 1
  8820  0049B6  0101               	movlb	1	; () banked
  8821  0049B8  6F0B               	movwf	??___awdiv& (0+255),b
  8822  0049BA  0E01               	movlw	1
  8823  0049BC  0101               	movlb	1	; () banked
  8824  0049BE  0101               	movlb	1	; () banked
  8825  0049C0  6F0C               	movwf	___awdiv@counter& (0+255),b
  8826  0049C2  0101               	movlb	1	; () banked
  8827  0049C4  510B               	movf	??___awdiv& (0+255),w,b
  8828  0049C6  D009               	goto	l11472
  8829  0049C8                     l11470:
  8830                           
  8831                           ; BSR set to: 1
  8832  0049C8  0101               	movlb	1	; () banked
  8833  0049CA  0101               	movlb	1	; () banked
  8834  0049CC  0101               	movlb	1	; () banked
  8835  0049CE  90D8               	bcf	status,0,c
  8836  0049D0  3709               	rlcf	___awdiv@divisor& (0+255),f,b
  8837  0049D2  370A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8838  0049D4  0101               	movlb	1	; () banked
  8839  0049D6  0101               	movlb	1	; () banked
  8840  0049D8  2B0C               	incf	___awdiv@counter& (0+255),f,b
  8841  0049DA                     l11472:
  8842                           
  8843                           ; BSR set to: 1
  8844  0049DA  0101               	movlb	1	; () banked
  8845  0049DC  0101               	movlb	1	; () banked
  8846  0049DE  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8847  0049E0  D7F3               	goto	l11470
  8848  0049E2                     l11474:
  8849                           
  8850                           ; BSR set to: 1
  8851  0049E2  0101               	movlb	1	; () banked
  8852  0049E4  0101               	movlb	1	; () banked
  8853  0049E6  0101               	movlb	1	; () banked
  8854  0049E8  90D8               	bcf	status,0,c
  8855  0049EA  370E               	rlcf	___awdiv@quotient& (0+255),f,b
  8856  0049EC  370F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8857                           
  8858                           ; BSR set to: 1
  8859  0049EE  0101               	movlb	1	; () banked
  8860  0049F0  0101               	movlb	1	; () banked
  8861  0049F2  5109               	movf	___awdiv@divisor& (0+255),w,b
  8862  0049F4  0101               	movlb	1	; () banked
  8863  0049F6  0101               	movlb	1	; () banked
  8864  0049F8  5D07               	subwf	___awdiv@dividend& (0+255),w,b
  8865  0049FA  0101               	movlb	1	; () banked
  8866  0049FC  0101               	movlb	1	; () banked
  8867  0049FE  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8868  004A00  0101               	movlb	1	; () banked
  8869  004A02  0101               	movlb	1	; () banked
  8870  004A04  5908               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8871  004A06  A0D8               	btfss	status,0,c
  8872  004A08  D00F               	goto	l11482
  8873                           
  8874                           ; BSR set to: 1
  8875  004A0A  0101               	movlb	1	; () banked
  8876  004A0C  0101               	movlb	1	; () banked
  8877  004A0E  5109               	movf	___awdiv@divisor& (0+255),w,b
  8878  004A10  0101               	movlb	1	; () banked
  8879  004A12  0101               	movlb	1	; () banked
  8880  004A14  5F07               	subwf	___awdiv@dividend& (0+255),f,b
  8881  004A16  0101               	movlb	1	; () banked
  8882  004A18  0101               	movlb	1	; () banked
  8883  004A1A  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8884  004A1C  0101               	movlb	1	; () banked
  8885  004A1E  0101               	movlb	1	; () banked
  8886  004A20  5B08               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8887                           
  8888                           ; BSR set to: 1
  8889  004A22  0101               	movlb	1	; () banked
  8890  004A24  0101               	movlb	1	; () banked
  8891  004A26  810E               	bsf	___awdiv@quotient& (0+255),0,b
  8892  004A28                     l11482:
  8893                           
  8894                           ; BSR set to: 1
  8895  004A28  0101               	movlb	1	; () banked
  8896  004A2A  0101               	movlb	1	; () banked
  8897  004A2C  0101               	movlb	1	; () banked
  8898  004A2E  90D8               	bcf	status,0,c
  8899  004A30  330A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8900  004A32  3309               	rrcf	___awdiv@divisor& (0+255),f,b
  8901                           
  8902                           ; BSR set to: 1
  8903  004A34  0101               	movlb	1	; () banked
  8904  004A36  0101               	movlb	1	; () banked
  8905  004A38  2F0C               	decfsz	___awdiv@counter& (0+255),f,b
  8906  004A3A  D7D3               	goto	l11474
  8907  004A3C                     l11486:
  8908                           
  8909                           ; BSR set to: 1
  8910  004A3C  0101               	movlb	1	; () banked
  8911  004A3E  0101               	movlb	1	; () banked
  8912  004A40  510D               	movf	___awdiv@sign& (0+255),w,b
  8913  004A42  B4D8               	btfsc	status,2,c
  8914  004A44  D007               	goto	l11490
  8915                           
  8916                           ; BSR set to: 1
  8917  004A46  0101               	movlb	1	; () banked
  8918  004A48  0101               	movlb	1	; () banked
  8919  004A4A  6D0E               	negf	___awdiv@quotient& (0+255),b
  8920  004A4C  0101               	movlb	1	; () banked
  8921  004A4E  1F0F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8922  004A50  B0D8               	btfsc	status,0,c
  8923  004A52  2B0F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8924  004A54                     l11490:
  8925                           
  8926                           ; BSR set to: 1
  8927  004A54  C10E  F107         	movff	___awdiv@quotient,?___awdiv
  8928  004A58  C10F  F108         	movff	___awdiv@quotient+1,?___awdiv+1
  8929                           
  8930                           ; BSR set to: 1
  8931                           
  8932                           ; BSR set to: 1
  8933  004A5C  0012               	return	
  8934  004A5E                     __end_of___awdiv:
  8935                           	opt stack 0
  8936                           tblptru	equ	0xFF8
  8937                           tblptrh	equ	0xFF7
  8938                           tblptrl	equ	0xFF6
  8939                           tablat	equ	0xFF5
  8940                           prodh	equ	0xFF4
  8941                           prodl	equ	0xFF3
  8942                           intcon	equ	0xFF2
  8943                           postinc0	equ	0xFEE
  8944                           wreg	equ	0xFE8
  8945                           postdec1	equ	0xFE5
  8946                           fsr1l	equ	0xFE1
  8947                           indf2	equ	0xFDF
  8948                           postinc2	equ	0xFDE
  8949                           postdec2	equ	0xFDD
  8950                           fsr2h	equ	0xFDA
  8951                           fsr2l	equ	0xFD9
  8952                           status	equ	0xFD8
  8953                           
  8954 ;; *************** function _Read_LDR *****************
  8955 ;; Defined at:
  8956 ;;		line 329 in file "main.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;		None
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  analog_readi    3   63[BANK1 ] float 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  3   56[BANK1 ] float 
  8963 ;; Registers used:
  8964 ;;		wreg, status,2, status,0, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8970 ;;      Params:         0       0       3       0       0       0       0       0       0
  8971 ;;      Locals:         0       0       3       0       0       0       0       0       0
  8972 ;;      Temps:          0       0       4       0       0       0       0       0       0
  8973 ;;      Totals:         0       0      10       0       0       0       0       0       0
  8974 ;;Total ram usage:       10 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:   13
  8977 ;; This function calls:
  8978 ;;		___ftdiv
  8979 ;;		___ftmul
  8980 ;;		___awtoft
  8981 ;; This function is called by:
  8982 ;;		_Time_Bases
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	text29
  8987  004D8E                     __ptext29:
  8988                           	opt stack 0
  8989  004D8E                     _Read_LDR:
  8990                           	opt stack 15
  8991                           
  8992                           ;main.c: 330: float analog_reading = 0;
  8993                           
  8994                           ; BSR set to: 1
  8995                           ;incstack = 0
  8996                           ;incstack = 0
  8997  004D8E  0E00               	movlw	0
  8998  004D90  0101               	movlb	1	; () banked
  8999  004D92  0101               	movlb	1	; () banked
  9000  004D94  6F3F               	movwf	Read_LDR@analog_reading& (0+255),b
  9001  004D96  0E00               	movlw	0
  9002  004D98  0101               	movlb	1	; () banked
  9003  004D9A  0101               	movlb	1	; () banked
  9004  004D9C  6F40               	movwf	(Read_LDR@analog_reading+1)& (0+255),b
  9005  004D9E  0E00               	movlw	0
  9006  004DA0  0101               	movlb	1	; () banked
  9007  004DA2  0101               	movlb	1	; () banked
  9008  004DA4  6F41               	movwf	(Read_LDR@analog_reading+2)& (0+255),b
  9009                           
  9010                           ; BSR set to: 1
  9011                           ;main.c: 331: ADCON0 |= ((1 << ADON) | (1 << GO));
  9012  004DA6  0E00               	movlw	0
  9013  004DA8  B2C2               	btfsc	4034,1,c	;volatile
  9014  004DAA  0E01               	movlw	1
  9015  004DAC  0101               	movlb	1	; () banked
  9016  004DAE  6F3B               	movwf	??_Read_LDR& (0+255),b
  9017  004DB0  0E01               	movlw	1
  9018  004DB2  0101               	movlb	1	; () banked
  9019  004DB4  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  9020  004DB6  0101               	movlb	1	; () banked
  9021  004DB8  2B3B               	incf	??_Read_LDR& (0+255),f,b
  9022  004DBA  D003               	goto	u9594
  9023  004DBC                     u9595:
  9024  004DBC  0101               	movlb	1	; () banked
  9025  004DBE  90D8               	bcf	status,0,c
  9026  004DC0  373C               	rlcf	(??_Read_LDR+1)& (0+255),f,b
  9027  004DC2                     u9594:
  9028  004DC2  0101               	movlb	1	; () banked
  9029  004DC4  2F3B               	decfsz	??_Read_LDR& (0+255),f,b
  9030  004DC6  D7FA               	goto	u9595
  9031  004DC8  0E00               	movlw	0
  9032  004DCA  B0C2               	btfsc	4034,0,c	;volatile
  9033  004DCC  0E01               	movlw	1
  9034  004DCE  0101               	movlb	1	; () banked
  9035  004DD0  6F3D               	movwf	(??_Read_LDR+2)& (0+255),b
  9036  004DD2  0E01               	movlw	1
  9037  004DD4  0101               	movlb	1	; () banked
  9038  004DD6  6F3E               	movwf	(??_Read_LDR+3)& (0+255),b
  9039  004DD8  0101               	movlb	1	; () banked
  9040  004DDA  2B3D               	incf	(??_Read_LDR+2)& (0+255),f,b
  9041  004DDC  D003               	goto	u9604
  9042  004DDE                     u9605:
  9043  004DDE  0101               	movlb	1	; () banked
  9044  004DE0  90D8               	bcf	status,0,c
  9045  004DE2  373E               	rlcf	(??_Read_LDR+3)& (0+255),f,b
  9046  004DE4                     u9604:
  9047  004DE4  0101               	movlb	1	; () banked
  9048  004DE6  2F3D               	decfsz	(??_Read_LDR+2)& (0+255),f,b
  9049  004DE8  D7FA               	goto	u9605
  9050  004DEA  0101               	movlb	1	; () banked
  9051  004DEC  513E               	movf	(??_Read_LDR+3)& (0+255),w,b
  9052  004DEE  0101               	movlb	1	; () banked
  9053  004DF0  113C               	iorwf	(??_Read_LDR+1)& (0+255),w,b
  9054  004DF2  12C2               	iorwf	4034,f,c	;volatile
  9055  004DF4                     l266:
  9056  004DF4  B2C2               	btfsc	4034,1,c	;volatile
  9057  004DF6  D7FE               	goto	l266
  9058                           
  9059                           ;main.c: 333: analog_reading = (ADRESH * 256) + (ADRESL);
  9060  004DF8  50C4               	movf	4036,w,c	;volatile
  9061  004DFA  0101               	movlb	1	; () banked
  9062  004DFC  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  9063  004DFE  6B3B               	clrf	??_Read_LDR& (0+255),b
  9064  004E00  50C3               	movf	4035,w,c	;volatile
  9065  004E02  0101               	movlb	1	; () banked
  9066  004E04  253B               	addwf	??_Read_LDR& (0+255),w,b
  9067  004E06  0101               	movlb	1	; () banked
  9068  004E08  0101               	movlb	1	; () banked
  9069  004E0A  6F08               	movwf	?___awtoft& (0+255),b
  9070  004E0C  0E00               	movlw	0
  9071  004E0E  0101               	movlb	1	; () banked
  9072  004E10  213C               	addwfc	(??_Read_LDR+1)& (0+255),w,b
  9073  004E12  0101               	movlb	1	; () banked
  9074  004E14  6F09               	movwf	(?___awtoft+1)& (0+255),b
  9075  004E16  ECB8  F02E         	call	___awtoft	;wreg free
  9076  004E1A  C10A  F141         	movff	?___awtoft+2,Read_LDR@analog_reading+2
  9077  004E1E  C109  F140         	movff	?___awtoft+1,Read_LDR@analog_reading+1
  9078  004E22  C108  F13F         	movff	?___awtoft,Read_LDR@analog_reading
  9079                           
  9080                           ;main.c: 334: analog_reading = analog_reading*5/1023;
  9081  004E26  0E00               	movlw	0
  9082  004E28  0101               	movlb	1	; () banked
  9083  004E2A  0101               	movlb	1	; () banked
  9084  004E2C  6F19               	movwf	(?___ftmul+3)& (0+255),b
  9085  004E2E  0EA0               	movlw	160
  9086  004E30  0101               	movlb	1	; () banked
  9087  004E32  0101               	movlb	1	; () banked
  9088  004E34  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  9089  004E36  0E40               	movlw	64
  9090  004E38  0101               	movlb	1	; () banked
  9091  004E3A  0101               	movlb	1	; () banked
  9092  004E3C  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  9093  004E3E  C13F  F116         	movff	Read_LDR@analog_reading,?___ftmul
  9094  004E42  C140  F117         	movff	Read_LDR@analog_reading+1,?___ftmul+1
  9095  004E46  C141  F118         	movff	Read_LDR@analog_reading+2,?___ftmul+2
  9096  004E4A  ECE1  F01C         	call	___ftmul	;wreg free
  9097  004E4E  C118  F129         	movff	?___ftmul+2,?___ftdiv+2
  9098  004E52  C117  F128         	movff	?___ftmul+1,?___ftdiv+1
  9099  004E56  C116  F127         	movff	?___ftmul,?___ftdiv
  9100  004E5A  0EC0               	movlw	192
  9101  004E5C  0101               	movlb	1	; () banked
  9102  004E5E  0101               	movlb	1	; () banked
  9103  004E60  6F2A               	movwf	(?___ftdiv+3)& (0+255),b
  9104  004E62  0E7F               	movlw	127
  9105  004E64  0101               	movlb	1	; () banked
  9106  004E66  0101               	movlb	1	; () banked
  9107  004E68  6F2B               	movwf	(?___ftdiv+4)& (0+255),b
  9108  004E6A  0E44               	movlw	68
  9109  004E6C  0101               	movlb	1	; () banked
  9110  004E6E  0101               	movlb	1	; () banked
  9111  004E70  6F2C               	movwf	(?___ftdiv+5)& (0+255),b
  9112  004E72  ECA8  F01F         	call	___ftdiv	;wreg free
  9113  004E76  C129  F141         	movff	?___ftdiv+2,Read_LDR@analog_reading+2
  9114  004E7A  C128  F140         	movff	?___ftdiv+1,Read_LDR@analog_reading+1
  9115  004E7E  C127  F13F         	movff	?___ftdiv,Read_LDR@analog_reading
  9116                           
  9117                           ;main.c: 335: return analog_reading;
  9118  004E82  C13F  F138         	movff	Read_LDR@analog_reading,?_Read_LDR
  9119  004E86  C140  F139         	movff	Read_LDR@analog_reading+1,?_Read_LDR+1
  9120  004E8A  C141  F13A         	movff	Read_LDR@analog_reading+2,?_Read_LDR+2
  9121  004E8E  0012               	return	
  9122  004E90                     __end_of_Read_LDR:
  9123                           	opt stack 0
  9124                           tblptru	equ	0xFF8
  9125                           tblptrh	equ	0xFF7
  9126                           tblptrl	equ	0xFF6
  9127                           tablat	equ	0xFF5
  9128                           prodh	equ	0xFF4
  9129                           prodl	equ	0xFF3
  9130                           intcon	equ	0xFF2
  9131                           postinc0	equ	0xFEE
  9132                           wreg	equ	0xFE8
  9133                           postdec1	equ	0xFE5
  9134                           fsr1l	equ	0xFE1
  9135                           indf2	equ	0xFDF
  9136                           postinc2	equ	0xFDE
  9137                           postdec2	equ	0xFDD
  9138                           fsr2h	equ	0xFDA
  9139                           fsr2l	equ	0xFD9
  9140                           status	equ	0xFD8
  9141                           
  9142 ;; *************** function ___awtoft *****************
  9143 ;; Defined at:
  9144 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  c               2    8[BANK1 ] int 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  sign            1   12[BANK1 ] unsigned char 
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  3    8[BANK1 ] float 
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, status,0, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9158 ;;      Params:         0       0       3       0       0       0       0       0       0
  9159 ;;      Locals:         0       0       1       0       0       0       0       0       0
  9160 ;;      Temps:          0       0       1       0       0       0       0       0       0
  9161 ;;      Totals:         0       0       5       0       0       0       0       0       0
  9162 ;;Total ram usage:        5 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; Hardware stack levels required when called:   12
  9165 ;; This function calls:
  9166 ;;		___ftpack
  9167 ;; This function is called by:
  9168 ;;		_Read_LDR
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	text30
  9173  005D70                     __ptext30:
  9174                           	opt stack 0
  9175  005D70                     ___awtoft:
  9176                           	opt stack 15
  9177                           
  9178                           ;incstack = 0
  9179                           ;incstack = 0
  9180  005D70  0101               	movlb	1	; () banked
  9181  005D72  6F0B               	movwf	??___awtoft& (0+255),b
  9182  005D74  0E00               	movlw	0
  9183  005D76  0101               	movlb	1	; () banked
  9184  005D78  0101               	movlb	1	; () banked
  9185  005D7A  6F0C               	movwf	___awtoft@sign& (0+255),b
  9186  005D7C  0101               	movlb	1	; () banked
  9187  005D7E  510B               	movf	??___awtoft& (0+255),w,b
  9188                           
  9189                           ; BSR set to: 1
  9190  005D80  0101               	movlb	1	; () banked
  9191  005D82  0101               	movlb	1	; () banked
  9192  005D84  AF09               	btfss	(___awtoft@c+1)& (0+255),7,b
  9193  005D86  D00F               	goto	l11538
  9194                           
  9195                           ; BSR set to: 1
  9196  005D88  0101               	movlb	1	; () banked
  9197  005D8A  0101               	movlb	1	; () banked
  9198  005D8C  6D08               	negf	___awtoft@c& (0+255),b
  9199  005D8E  0101               	movlb	1	; () banked
  9200  005D90  1F09               	comf	(___awtoft@c+1)& (0+255),f,b
  9201  005D92  B0D8               	btfsc	status,0,c
  9202  005D94  2B09               	incf	(___awtoft@c+1)& (0+255),f,b
  9203                           
  9204                           ; BSR set to: 1
  9205  005D96  0101               	movlb	1	; () banked
  9206  005D98  6F0B               	movwf	??___awtoft& (0+255),b
  9207  005D9A  0E01               	movlw	1
  9208  005D9C  0101               	movlb	1	; () banked
  9209  005D9E  0101               	movlb	1	; () banked
  9210  005DA0  6F0C               	movwf	___awtoft@sign& (0+255),b
  9211  005DA2  0101               	movlb	1	; () banked
  9212  005DA4  510B               	movf	??___awtoft& (0+255),w,b
  9213  005DA6                     l11538:
  9214                           
  9215                           ; BSR set to: 1
  9216  005DA6  0101               	movlb	1	; () banked
  9217  005DA8  0101               	movlb	1	; () banked
  9218  005DAA  C108  F100         	movff	___awtoft@c,?___ftpack
  9219  005DAE  0101               	movlb	1	; () banked
  9220  005DB0  0101               	movlb	1	; () banked
  9221  005DB2  C109  F101         	movff	___awtoft@c+1,?___ftpack+1
  9222  005DB6  0101               	movlb	1	; () banked
  9223  005DB8  0101               	movlb	1	; () banked
  9224  005DBA  6B02               	clrf	(?___ftpack+2)& (0+255),b
  9225  005DBC  0101               	movlb	1	; () banked
  9226  005DBE  6F0B               	movwf	??___awtoft& (0+255),b
  9227  005DC0  0E8E               	movlw	142
  9228  005DC2  0101               	movlb	1	; () banked
  9229  005DC4  0101               	movlb	1	; () banked
  9230  005DC6  6F03               	movwf	(?___ftpack+3)& (0+255),b
  9231  005DC8  0101               	movlb	1	; () banked
  9232  005DCA  510B               	movf	??___awtoft& (0+255),w,b
  9233  005DCC  C10C  F104         	movff	___awtoft@sign,?___ftpack+4
  9234  005DD0  EC30  F022         	call	___ftpack	;wreg free
  9235  005DD4  C102  F10A         	movff	?___ftpack+2,?___awtoft+2
  9236  005DD8  C101  F109         	movff	?___ftpack+1,?___awtoft+1
  9237  005DDC  C100  F108         	movff	?___ftpack,?___awtoft
  9238  005DE0  0012               	return	
  9239  005DE2                     __end_of___awtoft:
  9240                           	opt stack 0
  9241                           tblptru	equ	0xFF8
  9242                           tblptrh	equ	0xFF7
  9243                           tblptrl	equ	0xFF6
  9244                           tablat	equ	0xFF5
  9245                           prodh	equ	0xFF4
  9246                           prodl	equ	0xFF3
  9247                           intcon	equ	0xFF2
  9248                           postinc0	equ	0xFEE
  9249                           wreg	equ	0xFE8
  9250                           postdec1	equ	0xFE5
  9251                           fsr1l	equ	0xFE1
  9252                           indf2	equ	0xFDF
  9253                           postinc2	equ	0xFDE
  9254                           postdec2	equ	0xFDD
  9255                           fsr2h	equ	0xFDA
  9256                           fsr2l	equ	0xFD9
  9257                           status	equ	0xFD8
  9258                           
  9259 ;; *************** function ___ftmul *****************
  9260 ;; Defined at:
  9261 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;  f1              3   22[BANK1 ] float 
  9264 ;;  f2              3   25[BANK1 ] float 
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;  f3_as_produc    3   34[BANK1 ] unsigned um
  9267 ;;  sign            1   38[BANK1 ] unsigned char 
  9268 ;;  cntr            1   37[BANK1 ] unsigned char 
  9269 ;;  exp             1   33[BANK1 ] unsigned char 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  3   22[BANK1 ] float 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2, status,0, cstack
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9279 ;;      Params:         0       0       6       0       0       0       0       0       0
  9280 ;;      Locals:         0       0       6       0       0       0       0       0       0
  9281 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9282 ;;      Totals:         0       0      17       0       0       0       0       0       0
  9283 ;;Total ram usage:       17 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:   12
  9286 ;; This function calls:
  9287 ;;		___ftpack
  9288 ;; This function is called by:
  9289 ;;		_Read_LDR
  9290 ;;		_fround
  9291 ;;		_scale
  9292 ;;		_sprintf
  9293 ;;		___asftmul
  9294 ;; This function uses a non-reentrant model
  9295 ;;
  9296                           
  9297                           	psect	text31
  9298  0039C2                     __ptext31:
  9299                           	opt stack 0
  9300  0039C2                     ___ftmul:
  9301                           	opt stack 15
  9302                           
  9303                           ;incstack = 0
  9304                           ;incstack = 0
  9305  0039C2  0E0F               	movlw	15
  9306  0039C4  0101               	movlb	1	; () banked
  9307  0039C6  6F1C               	movwf	??___ftmul& (0+255),b
  9308  0039C8  0101               	movlb	1	; () banked
  9309  0039CA  C116  F11D         	movff	___ftmul@f1,??___ftmul+1
  9310  0039CE  0101               	movlb	1	; () banked
  9311  0039D0  C117  F11E         	movff	___ftmul@f1+1,??___ftmul+2
  9312  0039D4  0101               	movlb	1	; () banked
  9313  0039D6  C118  F11F         	movff	___ftmul@f1+2,??___ftmul+3
  9314  0039DA  0101               	movlb	1	; () banked
  9315  0039DC  291C               	incf	??___ftmul& (0+255),w,b
  9316  0039DE  0101               	movlb	1	; () banked
  9317  0039E0  6F20               	movwf	(??___ftmul+4)& (0+255),b
  9318  0039E2  D005               	goto	u10820
  9319  0039E4                     u10825:
  9320  0039E4  0101               	movlb	1	; () banked
  9321  0039E6  90D8               	bcf	status,0,c
  9322  0039E8  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  9323  0039EA  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  9324  0039EC  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  9325  0039EE                     u10820:
  9326  0039EE  0101               	movlb	1	; () banked
  9327  0039F0  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  9328  0039F2  D7F8               	goto	u10825
  9329  0039F4  0101               	movlb	1	; () banked
  9330  0039F6  511D               	movf	(??___ftmul+1)& (0+255),w,b
  9331  0039F8  0101               	movlb	1	; () banked
  9332  0039FA  0101               	movlb	1	; () banked
  9333  0039FC  6F21               	movwf	___ftmul@exp& (0+255),b
  9334  0039FE  0101               	movlb	1	; () banked
  9335  003A00  6721               	tstfsz	___ftmul@exp& (0+255),b
  9336  003A02  D001               	goto	l11398
  9337  003A04  D021               	goto	u10850
  9338  003A06                     l11398:
  9339                           
  9340                           ; BSR set to: 1
  9341  003A06  0E0F               	movlw	15
  9342  003A08  0101               	movlb	1	; () banked
  9343  003A0A  6F1C               	movwf	??___ftmul& (0+255),b
  9344  003A0C  0101               	movlb	1	; () banked
  9345  003A0E  C119  F11D         	movff	___ftmul@f2,??___ftmul+1
  9346  003A12  0101               	movlb	1	; () banked
  9347  003A14  C11A  F11E         	movff	___ftmul@f2+1,??___ftmul+2
  9348  003A18  0101               	movlb	1	; () banked
  9349  003A1A  C11B  F11F         	movff	___ftmul@f2+2,??___ftmul+3
  9350  003A1E  0101               	movlb	1	; () banked
  9351  003A20  291C               	incf	??___ftmul& (0+255),w,b
  9352  003A22  0101               	movlb	1	; () banked
  9353  003A24  6F20               	movwf	(??___ftmul+4)& (0+255),b
  9354  003A26  D005               	goto	u10840
  9355  003A28                     u10845:
  9356  003A28  0101               	movlb	1	; () banked
  9357  003A2A  90D8               	bcf	status,0,c
  9358  003A2C  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  9359  003A2E  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  9360  003A30  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  9361  003A32                     u10840:
  9362  003A32  0101               	movlb	1	; () banked
  9363  003A34  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  9364  003A36  D7F8               	goto	u10845
  9365  003A38  0101               	movlb	1	; () banked
  9366  003A3A  511D               	movf	(??___ftmul+1)& (0+255),w,b
  9367  003A3C  0101               	movlb	1	; () banked
  9368  003A3E  0101               	movlb	1	; () banked
  9369  003A40  6F26               	movwf	___ftmul@sign& (0+255),b
  9370  003A42  0101               	movlb	1	; () banked
  9371  003A44  6726               	tstfsz	___ftmul@sign& (0+255),b
  9372  003A46  D00D               	goto	l11404
  9373  003A48                     u10850:
  9374                           
  9375                           ; BSR set to: 1
  9376  003A48  0E00               	movlw	0
  9377  003A4A  0101               	movlb	1	; () banked
  9378  003A4C  0101               	movlb	1	; () banked
  9379  003A4E  6F16               	movwf	?___ftmul& (0+255),b
  9380  003A50  0E00               	movlw	0
  9381  003A52  0101               	movlb	1	; () banked
  9382  003A54  0101               	movlb	1	; () banked
  9383  003A56  6F17               	movwf	(?___ftmul+1)& (0+255),b
  9384  003A58  0E00               	movlw	0
  9385  003A5A  0101               	movlb	1	; () banked
  9386  003A5C  0101               	movlb	1	; () banked
  9387  003A5E  6F18               	movwf	(?___ftmul+2)& (0+255),b
  9388  003A60  D0A6               	goto	l817
  9389  003A62                     l11404:
  9390                           
  9391                           ; BSR set to: 1
  9392  003A62  0101               	movlb	1	; () banked
  9393  003A64  0101               	movlb	1	; () banked
  9394  003A66  5126               	movf	___ftmul@sign& (0+255),w,b
  9395  003A68  0F7B               	addlw	123
  9396  003A6A  0101               	movlb	1	; () banked
  9397  003A6C  0101               	movlb	1	; () banked
  9398  003A6E  2721               	addwf	___ftmul@exp& (0+255),f,b
  9399                           
  9400                           ; BSR set to: 1
  9401  003A70  C118  F126         	movff	___ftmul@f1+2,___ftmul@sign
  9402  003A74  0101               	movlb	1	; () banked
  9403  003A76  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  9404  003A78  0101               	movlb	1	; () banked
  9405  003A7A  0101               	movlb	1	; () banked
  9406  003A7C  1B26               	xorwf	___ftmul@sign& (0+255),f,b
  9407  003A7E  0E80               	movlw	128
  9408  003A80  0101               	movlb	1	; () banked
  9409  003A82  0101               	movlb	1	; () banked
  9410  003A84  1726               	andwf	___ftmul@sign& (0+255),f,b
  9411                           
  9412                           ; BSR set to: 1
  9413  003A86  0101               	movlb	1	; () banked
  9414  003A88  0101               	movlb	1	; () banked
  9415  003A8A  8F17               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9416                           
  9417                           ; BSR set to: 1
  9418  003A8C  0101               	movlb	1	; () banked
  9419  003A8E  0101               	movlb	1	; () banked
  9420  003A90  8F1A               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9421                           
  9422                           ; BSR set to: 1
  9423  003A92  0EFF               	movlw	255
  9424  003A94  0101               	movlb	1	; () banked
  9425  003A96  0101               	movlb	1	; () banked
  9426  003A98  1719               	andwf	___ftmul@f2& (0+255),f,b
  9427  003A9A  0EFF               	movlw	255
  9428  003A9C  0101               	movlb	1	; () banked
  9429  003A9E  0101               	movlb	1	; () banked
  9430  003AA0  171A               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9431  003AA2  0E00               	movlw	0
  9432  003AA4  0101               	movlb	1	; () banked
  9433  003AA6  0101               	movlb	1	; () banked
  9434  003AA8  171B               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9435                           
  9436                           ; BSR set to: 1
  9437  003AAA  0E00               	movlw	0
  9438  003AAC  0101               	movlb	1	; () banked
  9439  003AAE  0101               	movlb	1	; () banked
  9440  003AB0  6F22               	movwf	___ftmul@f3_as_product& (0+255),b
  9441  003AB2  0E00               	movlw	0
  9442  003AB4  0101               	movlb	1	; () banked
  9443  003AB6  0101               	movlb	1	; () banked
  9444  003AB8  6F23               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9445  003ABA  0E00               	movlw	0
  9446  003ABC  0101               	movlb	1	; () banked
  9447  003ABE  0101               	movlb	1	; () banked
  9448  003AC0  6F24               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9449                           
  9450                           ; BSR set to: 1
  9451  003AC2  0101               	movlb	1	; () banked
  9452  003AC4  6F1C               	movwf	??___ftmul& (0+255),b
  9453  003AC6  0E07               	movlw	7
  9454  003AC8  0101               	movlb	1	; () banked
  9455  003ACA  0101               	movlb	1	; () banked
  9456  003ACC  6F25               	movwf	___ftmul@cntr& (0+255),b
  9457  003ACE  0101               	movlb	1	; () banked
  9458  003AD0  511C               	movf	??___ftmul& (0+255),w,b
  9459  003AD2                     l11418:
  9460                           
  9461                           ; BSR set to: 1
  9462  003AD2  0101               	movlb	1	; () banked
  9463  003AD4  0101               	movlb	1	; () banked
  9464  003AD6  A116               	btfss	___ftmul@f1& (0+255),0,b
  9465  003AD8  D012               	goto	l11422
  9466                           
  9467                           ; BSR set to: 1
  9468  003ADA  0101               	movlb	1	; () banked
  9469  003ADC  0101               	movlb	1	; () banked
  9470  003ADE  5119               	movf	___ftmul@f2& (0+255),w,b
  9471  003AE0  0101               	movlb	1	; () banked
  9472  003AE2  0101               	movlb	1	; () banked
  9473  003AE4  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9474  003AE6  0101               	movlb	1	; () banked
  9475  003AE8  0101               	movlb	1	; () banked
  9476  003AEA  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  9477  003AEC  0101               	movlb	1	; () banked
  9478  003AEE  0101               	movlb	1	; () banked
  9479  003AF0  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9480  003AF2  0101               	movlb	1	; () banked
  9481  003AF4  0101               	movlb	1	; () banked
  9482  003AF6  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  9483  003AF8  0101               	movlb	1	; () banked
  9484  003AFA  0101               	movlb	1	; () banked
  9485  003AFC  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9486  003AFE                     l11422:
  9487                           
  9488                           ; BSR set to: 1
  9489  003AFE  0101               	movlb	1	; () banked
  9490  003B00  90D8               	bcf	status,0,c
  9491  003B02  0101               	movlb	1	; () banked
  9492  003B04  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9493  003B06  0101               	movlb	1	; () banked
  9494  003B08  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9495  003B0A  0101               	movlb	1	; () banked
  9496  003B0C  3316               	rrcf	___ftmul@f1& (0+255),f,b
  9497  003B0E  0101               	movlb	1	; () banked
  9498  003B10  90D8               	bcf	status,0,c
  9499  003B12  0101               	movlb	1	; () banked
  9500  003B14  3719               	rlcf	___ftmul@f2& (0+255),f,b
  9501  003B16  0101               	movlb	1	; () banked
  9502  003B18  371A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9503  003B1A  0101               	movlb	1	; () banked
  9504  003B1C  371B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9505                           
  9506                           ; BSR set to: 1
  9507  003B1E  0101               	movlb	1	; () banked
  9508  003B20  0101               	movlb	1	; () banked
  9509  003B22  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  9510  003B24  D7D6               	goto	l11418
  9511                           
  9512                           ; BSR set to: 1
  9513                           
  9514                           ; BSR set to: 1
  9515  003B26  0101               	movlb	1	; () banked
  9516  003B28  6F1C               	movwf	??___ftmul& (0+255),b
  9517  003B2A  0E09               	movlw	9
  9518  003B2C  0101               	movlb	1	; () banked
  9519  003B2E  0101               	movlb	1	; () banked
  9520  003B30  6F25               	movwf	___ftmul@cntr& (0+255),b
  9521  003B32  0101               	movlb	1	; () banked
  9522  003B34  511C               	movf	??___ftmul& (0+255),w,b
  9523  003B36                     l11428:
  9524                           
  9525                           ; BSR set to: 1
  9526  003B36  0101               	movlb	1	; () banked
  9527  003B38  0101               	movlb	1	; () banked
  9528  003B3A  A116               	btfss	___ftmul@f1& (0+255),0,b
  9529  003B3C  D012               	goto	l11432
  9530                           
  9531                           ; BSR set to: 1
  9532  003B3E  0101               	movlb	1	; () banked
  9533  003B40  0101               	movlb	1	; () banked
  9534  003B42  5119               	movf	___ftmul@f2& (0+255),w,b
  9535  003B44  0101               	movlb	1	; () banked
  9536  003B46  0101               	movlb	1	; () banked
  9537  003B48  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9538  003B4A  0101               	movlb	1	; () banked
  9539  003B4C  0101               	movlb	1	; () banked
  9540  003B4E  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  9541  003B50  0101               	movlb	1	; () banked
  9542  003B52  0101               	movlb	1	; () banked
  9543  003B54  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9544  003B56  0101               	movlb	1	; () banked
  9545  003B58  0101               	movlb	1	; () banked
  9546  003B5A  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  9547  003B5C  0101               	movlb	1	; () banked
  9548  003B5E  0101               	movlb	1	; () banked
  9549  003B60  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9550  003B62                     l11432:
  9551                           
  9552                           ; BSR set to: 1
  9553  003B62  0101               	movlb	1	; () banked
  9554  003B64  90D8               	bcf	status,0,c
  9555  003B66  0101               	movlb	1	; () banked
  9556  003B68  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9557  003B6A  0101               	movlb	1	; () banked
  9558  003B6C  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9559  003B6E  0101               	movlb	1	; () banked
  9560  003B70  3316               	rrcf	___ftmul@f1& (0+255),f,b
  9561  003B72  0101               	movlb	1	; () banked
  9562  003B74  90D8               	bcf	status,0,c
  9563  003B76  0101               	movlb	1	; () banked
  9564  003B78  3324               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9565  003B7A  0101               	movlb	1	; () banked
  9566  003B7C  3323               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9567  003B7E  0101               	movlb	1	; () banked
  9568  003B80  3322               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9569                           
  9570                           ; BSR set to: 1
  9571  003B82  0101               	movlb	1	; () banked
  9572  003B84  0101               	movlb	1	; () banked
  9573  003B86  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  9574  003B88  D7D6               	goto	l11428
  9575                           
  9576                           ; BSR set to: 1
  9577                           
  9578                           ; BSR set to: 1
  9579  003B8A  C122  F100         	movff	___ftmul@f3_as_product,?___ftpack
  9580  003B8E  C123  F101         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  9581  003B92  C124  F102         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  9582  003B96  C121  F103         	movff	___ftmul@exp,?___ftpack+3
  9583  003B9A  C126  F104         	movff	___ftmul@sign,?___ftpack+4
  9584  003B9E  EC30  F022         	call	___ftpack	;wreg free
  9585  003BA2  C102  F118         	movff	?___ftpack+2,?___ftmul+2
  9586  003BA6  C101  F117         	movff	?___ftpack+1,?___ftmul+1
  9587  003BAA  C100  F116         	movff	?___ftpack,?___ftmul
  9588  003BAE                     l817:
  9589  003BAE  0012               	return	
  9590  003BB0                     __end_of___ftmul:
  9591                           	opt stack 0
  9592                           tblptru	equ	0xFF8
  9593                           tblptrh	equ	0xFF7
  9594                           tblptrl	equ	0xFF6
  9595                           tablat	equ	0xFF5
  9596                           prodh	equ	0xFF4
  9597                           prodl	equ	0xFF3
  9598                           intcon	equ	0xFF2
  9599                           postinc0	equ	0xFEE
  9600                           wreg	equ	0xFE8
  9601                           postdec1	equ	0xFE5
  9602                           fsr1l	equ	0xFE1
  9603                           indf2	equ	0xFDF
  9604                           postinc2	equ	0xFDE
  9605                           postdec2	equ	0xFDD
  9606                           fsr2h	equ	0xFDA
  9607                           fsr2l	equ	0xFD9
  9608                           status	equ	0xFD8
  9609                           
  9610 ;; *************** function _lcd_putc *****************
  9611 ;; Defined at:
  9612 ;;		line 135 in file "lcd.h"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;  a               2    4[BANK1 ] PTR unsigned char 
  9615 ;;		 -> LCD_Buffer(32), 
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;  i               2    6[BANK1 ] int 
  9618 ;; Return value:  Size  Location     Type
  9619 ;;		None               void
  9620 ;; Registers used:
  9621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9627 ;;      Params:         0       0       2       0       0       0       0       0       0
  9628 ;;      Locals:         0       0       2       0       0       0       0       0       0
  9629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9630 ;;      Totals:         0       0       4       0       0       0       0       0       0
  9631 ;;Total ram usage:        4 bytes
  9632 ;; Hardware stack levels used:    1
  9633 ;; Hardware stack levels required when called:   13
  9634 ;; This function calls:
  9635 ;;		_lcd_write_char
  9636 ;; This function is called by:
  9637 ;;		_Time_Bases
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           	psect	text32
  9642  005E4C                     __ptext32:
  9643                           	opt stack 0
  9644  005E4C                     _lcd_putc:
  9645                           	opt stack 15
  9646                           
  9647                           ;lcd.h: 136: int i;
  9648                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
  9649                           
  9650                           ;incstack = 0
  9651                           ;incstack = 0
  9652  005E4C  0E00               	movlw	0
  9653  005E4E  0101               	movlb	1	; () banked
  9654  005E50  0101               	movlb	1	; () banked
  9655  005E52  6F07               	movwf	(lcd_putc@i+1)& (0+255),b
  9656  005E54  0E00               	movlw	0
  9657  005E56  0101               	movlb	1	; () banked
  9658  005E58  6F06               	movwf	lcd_putc@i& (0+255),b
  9659  005E5A  D018               	goto	l10518
  9660  005E5C                     l10514:
  9661                           
  9662                           ; BSR set to: 1
  9663                           ;lcd.h: 138: lcd_write_char(a[i]);
  9664  005E5C  0101               	movlb	1	; () banked
  9665  005E5E  0101               	movlb	1	; () banked
  9666  005E60  5106               	movf	lcd_putc@i& (0+255),w,b
  9667  005E62  0101               	movlb	1	; () banked
  9668  005E64  0101               	movlb	1	; () banked
  9669  005E66  2504               	addwf	lcd_putc@a& (0+255),w,b
  9670  005E68  6ED9               	movwf	fsr2l,c
  9671  005E6A  0101               	movlb	1	; () banked
  9672  005E6C  0101               	movlb	1	; () banked
  9673  005E6E  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
  9674  005E70  0101               	movlb	1	; () banked
  9675  005E72  0101               	movlb	1	; () banked
  9676  005E74  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
  9677  005E76  6EDA               	movwf	fsr2h,c
  9678  005E78  50DF               	movf	indf2,w,c
  9679  005E7A  0101               	movlb	1	; () banked
  9680  005E7C  0101               	movlb	1	; () banked
  9681  005E7E  6F01               	movwf	?_lcd_write_char& (0+255),b
  9682  005E80  EC11  F030         	call	_lcd_write_char	;wreg free
  9683  005E84  0101               	movlb	1	; () banked
  9684  005E86  0101               	movlb	1	; () banked
  9685  005E88  4B06               	infsnz	lcd_putc@i& (0+255),f,b
  9686  005E8A  2B07               	incf	(lcd_putc@i+1)& (0+255),f,b
  9687  005E8C                     l10518:
  9688                           
  9689                           ; BSR set to: 1
  9690  005E8C  0101               	movlb	1	; () banked
  9691  005E8E  0101               	movlb	1	; () banked
  9692  005E90  5106               	movf	lcd_putc@i& (0+255),w,b
  9693  005E92  0101               	movlb	1	; () banked
  9694  005E94  0101               	movlb	1	; () banked
  9695  005E96  2504               	addwf	lcd_putc@a& (0+255),w,b
  9696  005E98  6ED9               	movwf	fsr2l,c
  9697  005E9A  0101               	movlb	1	; () banked
  9698  005E9C  0101               	movlb	1	; () banked
  9699  005E9E  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
  9700  005EA0  0101               	movlb	1	; () banked
  9701  005EA2  0101               	movlb	1	; () banked
  9702  005EA4  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
  9703  005EA6  6EDA               	movwf	fsr2h,c
  9704  005EA8  50DF               	movf	indf2,w,c
  9705  005EAA  B4D8               	btfsc	status,2,c
  9706                           
  9707                           ; BSR set to: 1
  9708                           
  9709                           ; BSR set to: 1
  9710  005EAC  0012               	return	
  9711  005EAE  D7D6               	goto	l10514
  9712  005EB0                     __end_of_lcd_putc:
  9713                           	opt stack 0
  9714                           tblptru	equ	0xFF8
  9715                           tblptrh	equ	0xFF7
  9716                           tblptrl	equ	0xFF6
  9717                           tablat	equ	0xFF5
  9718                           prodh	equ	0xFF4
  9719                           prodl	equ	0xFF3
  9720                           intcon	equ	0xFF2
  9721                           postinc0	equ	0xFEE
  9722                           wreg	equ	0xFE8
  9723                           postdec1	equ	0xFE5
  9724                           fsr1l	equ	0xFE1
  9725                           indf2	equ	0xFDF
  9726                           postinc2	equ	0xFDE
  9727                           postdec2	equ	0xFDD
  9728                           fsr2h	equ	0xFDA
  9729                           fsr2l	equ	0xFD9
  9730                           status	equ	0xFD8
  9731                           
  9732 ;; *************** function _lcd_write_char *****************
  9733 ;; Defined at:
  9734 ;;		line 117 in file "lcd.h"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  a               1    1[BANK1 ] unsigned char 
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;  y               1    3[BANK1 ] unsigned char 
  9739 ;;  temp            1    2[BANK1 ] unsigned char 
  9740 ;; Return value:  Size  Location     Type
  9741 ;;		None               void
  9742 ;; Registers used:
  9743 ;;		wreg, status,2, status,0, cstack
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9749 ;;      Params:         0       0       1       0       0       0       0       0       0
  9750 ;;      Locals:         0       0       2       0       0       0       0       0       0
  9751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9752 ;;      Totals:         0       0       3       0       0       0       0       0       0
  9753 ;;Total ram usage:        3 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:   12
  9756 ;; This function calls:
  9757 ;;		_Lcd_Port
  9758 ;; This function is called by:
  9759 ;;		_lcd_putc
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           	psect	text33
  9764  006022                     __ptext33:
  9765                           	opt stack 0
  9766  006022                     _lcd_write_char:
  9767                           	opt stack 15
  9768                           
  9769                           ;lcd.h: 118: char temp,y;
  9770                           ;lcd.h: 119: temp = a&0x0F;
  9771                           
  9772                           ; BSR set to: 1
  9773                           ;incstack = 0
  9774                           ;incstack = 0
  9775  006022  0101               	movlb	1	; () banked
  9776  006024  0101               	movlb	1	; () banked
  9777  006026  5101               	movf	lcd_write_char@a& (0+255),w,b
  9778  006028  0B0F               	andlw	15
  9779  00602A  0101               	movlb	1	; () banked
  9780  00602C  0101               	movlb	1	; () banked
  9781  00602E  6F02               	movwf	lcd_write_char@temp& (0+255),b
  9782                           
  9783                           ;lcd.h: 120: y = a&0xF0;
  9784  006030  0101               	movlb	1	; () banked
  9785  006032  0101               	movlb	1	; () banked
  9786  006034  5101               	movf	lcd_write_char@a& (0+255),w,b
  9787  006036  0BF0               	andlw	240
  9788  006038  0101               	movlb	1	; () banked
  9789  00603A  0101               	movlb	1	; () banked
  9790  00603C  6F03               	movwf	lcd_write_char@y& (0+255),b
  9791                           
  9792                           ; BSR set to: 1
  9793                           ;lcd.h: 121: RD2 = 1;
  9794  00603E  8483               	bsf	3971,2,c	;volatile
  9795                           
  9796                           ; BSR set to: 1
  9797                           ;lcd.h: 122: Lcd_Port(y>>4);
  9798  006040  0101               	movlb	1	; () banked
  9799  006042  0101               	movlb	1	; () banked
  9800  006044  3903               	swapf	lcd_write_char@y& (0+255),w,b
  9801  006046  0B0F               	andlw	15
  9802  006048  0101               	movlb	1	; () banked
  9803  00604A  0101               	movlb	1	; () banked
  9804  00604C  6F00               	movwf	?_Lcd_Port& (0+255),b
  9805  00604E  EC46  F032         	call	_Lcd_Port	;wreg free
  9806                           
  9807                           ;lcd.h: 123: RD3 = 1;
  9808  006052  8683               	bsf	3971,3,c	;volatile
  9809                           
  9810                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
  9811  006054  0E1A               	movlw	26
  9812  006056                     u11907:
  9813  006056  2EE8               	decfsz	wreg,f,c
  9814  006058  D7FE               	goto	u11907
  9815  00605A  D000               	nop2		;nop
  9816                           
  9817                           ;lcd.h: 125: RD3 = 0;
  9818  00605C  9683               	bcf	3971,3,c	;volatile
  9819                           
  9820                           ;lcd.h: 126: Lcd_Port(temp);
  9821  00605E  C102  F100         	movff	lcd_write_char@temp,?_Lcd_Port
  9822  006062  EC46  F032         	call	_Lcd_Port	;wreg free
  9823                           
  9824                           ;lcd.h: 127: RD3 = 1;
  9825  006066  8683               	bsf	3971,3,c	;volatile
  9826                           
  9827                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
  9828  006068  0E1A               	movlw	26
  9829  00606A                     u11917:
  9830  00606A  2EE8               	decfsz	wreg,f,c
  9831  00606C  D7FE               	goto	u11917
  9832  00606E  D000               	nop2		;nop
  9833                           
  9834                           ;lcd.h: 129: RD3 = 0;
  9835  006070  9683               	bcf	3971,3,c	;volatile
  9836  006072  0012               	return	
  9837  006074                     __end_of_lcd_write_char:
  9838                           	opt stack 0
  9839                           tblptru	equ	0xFF8
  9840                           tblptrh	equ	0xFF7
  9841                           tblptrl	equ	0xFF6
  9842                           tablat	equ	0xFF5
  9843                           prodh	equ	0xFF4
  9844                           prodl	equ	0xFF3
  9845                           intcon	equ	0xFF2
  9846                           postinc0	equ	0xFEE
  9847                           wreg	equ	0xFE8
  9848                           postdec1	equ	0xFE5
  9849                           fsr1l	equ	0xFE1
  9850                           indf2	equ	0xFDF
  9851                           postinc2	equ	0xFDE
  9852                           postdec2	equ	0xFDD
  9853                           fsr2h	equ	0xFDA
  9854                           fsr2l	equ	0xFD9
  9855                           status	equ	0xFD8
  9856                           
  9857 ;; *************** function _lcd_gotoxy *****************
  9858 ;; Defined at:
  9859 ;;		line 72 in file "lcd.h"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;  a               1    3[BANK1 ] unsigned char 
  9862 ;;  b               1    4[BANK1 ] unsigned char 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  temp            1    7[BANK1 ] unsigned char 
  9865 ;;  y               1    6[BANK1 ] unsigned char 
  9866 ;;  z               1    5[BANK1 ] unsigned char 
  9867 ;; Return value:  Size  Location     Type
  9868 ;;		None               void
  9869 ;; Registers used:
  9870 ;;		wreg, status,2, status,0, cstack
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9876 ;;      Params:         0       0       2       0       0       0       0       0       0
  9877 ;;      Locals:         0       0       3       0       0       0       0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9879 ;;      Totals:         0       0       5       0       0       0       0       0       0
  9880 ;;Total ram usage:        5 bytes
  9881 ;; Hardware stack levels used:    1
  9882 ;; Hardware stack levels required when called:   13
  9883 ;; This function calls:
  9884 ;;		_Lcd_Cmd
  9885 ;; This function is called by:
  9886 ;;		_Time_Bases
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text34
  9891  00595C                     __ptext34:
  9892                           	opt stack 0
  9893  00595C                     _lcd_gotoxy:
  9894                           	opt stack 15
  9895                           
  9896                           ;lcd.h: 73: char temp,z,y;
  9897                           ;lcd.h: 74: if(a == 1)
  9898                           
  9899                           ;incstack = 0
  9900                           ;incstack = 0
  9901  00595C  0101               	movlb	1	; () banked
  9902  00595E  0101               	movlb	1	; () banked
  9903  005960  0503               	decf	lcd_gotoxy@a& (0+255),w,b
  9904  005962  A4D8               	btfss	status,2,c
  9905  005964  D01E               	goto	l10456
  9906                           
  9907                           ; BSR set to: 1
  9908                           ;lcd.h: 75: {
  9909                           ;lcd.h: 76: temp = 0x80 + b - 1;
  9910  005966  0101               	movlb	1	; () banked
  9911  005968  0101               	movlb	1	; () banked
  9912  00596A  5104               	movf	lcd_gotoxy@b& (0+255),w,b
  9913  00596C  0F7F               	addlw	127
  9914  00596E  0101               	movlb	1	; () banked
  9915  005970  0101               	movlb	1	; () banked
  9916  005972  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
  9917                           
  9918                           ;lcd.h: 77: z = temp>>4;
  9919  005974  0101               	movlb	1	; () banked
  9920  005976  0101               	movlb	1	; () banked
  9921  005978  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
  9922  00597A  0B0F               	andlw	15
  9923  00597C  0101               	movlb	1	; () banked
  9924  00597E  0101               	movlb	1	; () banked
  9925  005980  6F05               	movwf	lcd_gotoxy@z& (0+255),b
  9926                           
  9927                           ;lcd.h: 78: y = temp & 0x0F;
  9928  005982  0101               	movlb	1	; () banked
  9929  005984  0101               	movlb	1	; () banked
  9930  005986  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
  9931  005988  0B0F               	andlw	15
  9932  00598A  0101               	movlb	1	; () banked
  9933  00598C  0101               	movlb	1	; () banked
  9934  00598E  6F06               	movwf	lcd_gotoxy@y& (0+255),b
  9935                           
  9936                           ; BSR set to: 1
  9937                           ;lcd.h: 79: Lcd_Cmd(z);
  9938  005990  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
  9939  005994  EC63  F033         	call	_Lcd_Cmd	;wreg free
  9940                           
  9941                           ;lcd.h: 80: Lcd_Cmd(y);
  9942  005998  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
  9943  00599C  EC63  F033         	call	_Lcd_Cmd	;wreg free
  9944                           
  9945                           ;lcd.h: 81: }
  9946  0059A0  D023               	goto	l137
  9947  0059A2                     l10456:
  9948                           
  9949                           ;lcd.h: 82: else if(a == 2)
  9950  0059A2  0101               	movlb	1	; () banked
  9951  0059A4  0101               	movlb	1	; () banked
  9952  0059A6  5103               	movf	lcd_gotoxy@a& (0+255),w,b
  9953  0059A8  0A02               	xorlw	2
  9954  0059AA  A4D8               	btfss	status,2,c
  9955  0059AC  D01D               	goto	l137
  9956                           
  9957                           ; BSR set to: 1
  9958                           ;lcd.h: 83: {
  9959                           ;lcd.h: 84: temp = 0xC0 + b - 1;
  9960  0059AE  0101               	movlb	1	; () banked
  9961  0059B0  0101               	movlb	1	; () banked
  9962  0059B2  5104               	movf	lcd_gotoxy@b& (0+255),w,b
  9963  0059B4  0FBF               	addlw	191
  9964  0059B6  0101               	movlb	1	; () banked
  9965  0059B8  0101               	movlb	1	; () banked
  9966  0059BA  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
  9967                           
  9968                           ;lcd.h: 85: z = temp>>4;
  9969  0059BC  0101               	movlb	1	; () banked
  9970  0059BE  0101               	movlb	1	; () banked
  9971  0059C0  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
  9972  0059C2  0B0F               	andlw	15
  9973  0059C4  0101               	movlb	1	; () banked
  9974  0059C6  0101               	movlb	1	; () banked
  9975  0059C8  6F05               	movwf	lcd_gotoxy@z& (0+255),b
  9976                           
  9977                           ;lcd.h: 86: y = temp & 0x0F;
  9978  0059CA  0101               	movlb	1	; () banked
  9979  0059CC  0101               	movlb	1	; () banked
  9980  0059CE  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
  9981  0059D0  0B0F               	andlw	15
  9982  0059D2  0101               	movlb	1	; () banked
  9983  0059D4  0101               	movlb	1	; () banked
  9984  0059D6  6F06               	movwf	lcd_gotoxy@y& (0+255),b
  9985                           
  9986                           ; BSR set to: 1
  9987                           ;lcd.h: 87: Lcd_Cmd(z);
  9988  0059D8  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
  9989  0059DC  EC63  F033         	call	_Lcd_Cmd	;wreg free
  9990                           
  9991                           ;lcd.h: 88: Lcd_Cmd(y);
  9992  0059E0  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
  9993  0059E4  EC63  F033         	call	_Lcd_Cmd	;wreg free
  9994  0059E8                     l137:
  9995  0059E8  0012               	return	
  9996  0059EA                     __end_of_lcd_gotoxy:
  9997                           	opt stack 0
  9998                           tblptru	equ	0xFF8
  9999                           tblptrh	equ	0xFF7
 10000                           tblptrl	equ	0xFF6
 10001                           tablat	equ	0xFF5
 10002                           prodh	equ	0xFF4
 10003                           prodl	equ	0xFF3
 10004                           intcon	equ	0xFF2
 10005                           postinc0	equ	0xFEE
 10006                           wreg	equ	0xFE8
 10007                           postdec1	equ	0xFE5
 10008                           fsr1l	equ	0xFE1
 10009                           indf2	equ	0xFDF
 10010                           postinc2	equ	0xFDE
 10011                           postdec2	equ	0xFDD
 10012                           fsr2h	equ	0xFDA
 10013                           fsr2l	equ	0xFD9
 10014                           status	equ	0xFD8
 10015                           
 10016 ;; *************** function _inicioInterrupcoes *****************
 10017 ;; Defined at:
 10018 ;;		line 236 in file "main.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;		None
 10021 ;; Auto vars:     Size  Location     Type
 10022 ;;		None
 10023 ;; Return value:  Size  Location     Type
 10024 ;;		None               void
 10025 ;; Registers used:
 10026 ;;		None
 10027 ;; Tracked objects:
 10028 ;;		On entry : 0/0
 10029 ;;		On exit  : 0/0
 10030 ;;		Unchanged: 0/0
 10031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10032 ;;      Params:         0       0       0       0       0       0       0       0       0
 10033 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10034 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10035 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10036 ;;Total ram usage:        0 bytes
 10037 ;; Hardware stack levels used:    1
 10038 ;; Hardware stack levels required when called:   11
 10039 ;; This function calls:
 10040 ;;		Nothing
 10041 ;; This function is called by:
 10042 ;;		_main
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           	psect	text35
 10047  006758                     __ptext35:
 10048                           	opt stack 0
 10049  006758                     _inicioInterrupcoes:
 10050                           	opt stack 19
 10051                           
 10052                           ;main.c: 237: IPEN = 1;
 10053                           
 10054                           ;incstack = 0
 10055                           ;incstack = 0
 10056  006758  8ED0               	bsf	4048,7,c	;volatile
 10057                           
 10058                           ;main.c: 238: ADIE = 1;
 10059  00675A  8C9D               	bsf	3997,6,c	;volatile
 10060                           
 10061                           ;main.c: 239: RCIE = 1;
 10062  00675C  8A9D               	bsf	3997,5,c	;volatile
 10063                           
 10064                           ;main.c: 241: GIEH = 1;
 10065  00675E  8EF2               	bsf	intcon,7,c	;volatile
 10066                           
 10067                           ;main.c: 242: GIEL = 1;
 10068  006760  8CF2               	bsf	intcon,6,c	;volatile
 10069                           
 10070                           ;main.c: 243: ADIP = 0;
 10071  006762  9C9F               	bcf	3999,6,c	;volatile
 10072                           
 10073                           ;main.c: 245: RCIP = 1;
 10074  006764  8A9F               	bsf	3999,5,c	;volatile
 10075  006766  0012               	return	
 10076  006768                     __end_of_inicioInterrupcoes:
 10077                           	opt stack 0
 10078                           tblptru	equ	0xFF8
 10079                           tblptrh	equ	0xFF7
 10080                           tblptrl	equ	0xFF6
 10081                           tablat	equ	0xFF5
 10082                           prodh	equ	0xFF4
 10083                           prodl	equ	0xFF3
 10084                           intcon	equ	0xFF2
 10085                           postinc0	equ	0xFEE
 10086                           wreg	equ	0xFE8
 10087                           postdec1	equ	0xFE5
 10088                           fsr1l	equ	0xFE1
 10089                           indf2	equ	0xFDF
 10090                           postinc2	equ	0xFDE
 10091                           postdec2	equ	0xFDD
 10092                           fsr2h	equ	0xFDA
 10093                           fsr2l	equ	0xFD9
 10094                           status	equ	0xFD8
 10095                           
 10096 ;; *************** function _USART_Init *****************
 10097 ;; Defined at:
 10098 ;;		line 222 in file "main.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;		None
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;  baud_rate       4   70[BANK1 ] long 
 10103 ;;  temp            3   74[BANK1 ] float 
 10104 ;; Return value:  Size  Location     Type
 10105 ;;		None               void
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0, cstack
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10113 ;;      Params:         0       0       0       0       0       0       0       0       0
 10114 ;;      Locals:         0       0       7       0       0       0       0       0       0
 10115 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10116 ;;      Totals:         0       0       7       0       0       0       0       0       0
 10117 ;;Total ram usage:        7 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; Hardware stack levels required when called:   13
 10120 ;; This function calls:
 10121 ;;		___altoft
 10122 ;;		___ftadd
 10123 ;;		___ftdiv
 10124 ;;		___fttol
 10125 ;; This function is called by:
 10126 ;;		_main
 10127 ;; This function uses a non-reentrant model
 10128 ;;
 10129                           
 10130                           	psect	text36
 10131  00564A                     __ptext36:
 10132                           	opt stack 0
 10133  00564A                     _USART_Init:
 10134                           	opt stack 17
 10135                           
 10136                           ;main.c: 223: long int baud_rate = 115200;
 10137                           
 10138                           ;incstack = 0
 10139                           ;incstack = 0
 10140  00564A  0E00               	movlw	0
 10141  00564C  0101               	movlb	1	; () banked
 10142  00564E  0101               	movlb	1	; () banked
 10143  005650  6F46               	movwf	USART_Init@baud_rate& (0+255),b
 10144  005652  0EC2               	movlw	194
 10145  005654  0101               	movlb	1	; () banked
 10146  005656  6F47               	movwf	(USART_Init@baud_rate+1)& (0+255),b
 10147  005658  0E01               	movlw	1
 10148  00565A  0101               	movlb	1	; () banked
 10149  00565C  6F48               	movwf	(USART_Init@baud_rate+2)& (0+255),b
 10150  00565E  0E00               	movlw	0
 10151  005660  0101               	movlb	1	; () banked
 10152  005662  6F49               	movwf	(USART_Init@baud_rate+3)& (0+255),b
 10153                           
 10154                           ; BSR set to: 1
 10155                           ;main.c: 224: float temp;
 10156                           ;main.c: 225: TRISC6=0;
 10157  005664  9C94               	bcf	3988,6,c	;volatile
 10158                           
 10159                           ; BSR set to: 1
 10160                           ;main.c: 226: TRISC7=1;
 10161  005666  8E94               	bsf	3988,7,c	;volatile
 10162                           
 10163                           ; BSR set to: 1
 10164                           ;main.c: 229: temp= (( (float) (200000/64) / (float) baud_rate ) - 1); ;
 10165  005668  C146  F108         	movff	USART_Init@baud_rate,?___altoft
 10166  00566C  C147  F109         	movff	USART_Init@baud_rate+1,?___altoft+1
 10167  005670  C148  F10A         	movff	USART_Init@baud_rate+2,?___altoft+2
 10168  005674  C149  F10B         	movff	USART_Init@baud_rate+3,?___altoft+3
 10169  005678  EC9B  F029         	call	___altoft	;wreg free
 10170  00567C  C10A  F12C         	movff	?___altoft+2,?___ftdiv+5
 10171  005680  C109  F12B         	movff	?___altoft+1,?___ftdiv+4
 10172  005684  C108  F12A         	movff	?___altoft,?___ftdiv+3
 10173  005688  0E50               	movlw	80
 10174  00568A  0101               	movlb	1	; () banked
 10175  00568C  0101               	movlb	1	; () banked
 10176  00568E  6F27               	movwf	?___ftdiv& (0+255),b
 10177  005690  0E43               	movlw	67
 10178  005692  0101               	movlb	1	; () banked
 10179  005694  0101               	movlb	1	; () banked
 10180  005696  6F28               	movwf	(?___ftdiv+1)& (0+255),b
 10181  005698  0E45               	movlw	69
 10182  00569A  0101               	movlb	1	; () banked
 10183  00569C  0101               	movlb	1	; () banked
 10184  00569E  6F29               	movwf	(?___ftdiv+2)& (0+255),b
 10185  0056A0  ECA8  F01F         	call	___ftdiv	;wreg free
 10186  0056A4  C129  F13A         	movff	?___ftdiv+2,?___ftadd+2
 10187  0056A8  C128  F139         	movff	?___ftdiv+1,?___ftadd+1
 10188  0056AC  C127  F138         	movff	?___ftdiv,?___ftadd
 10189  0056B0  0E00               	movlw	0
 10190  0056B2  0101               	movlb	1	; () banked
 10191  0056B4  0101               	movlb	1	; () banked
 10192  0056B6  6F3B               	movwf	(?___ftadd+3)& (0+255),b
 10193  0056B8  0E80               	movlw	128
 10194  0056BA  0101               	movlb	1	; () banked
 10195  0056BC  0101               	movlb	1	; () banked
 10196  0056BE  6F3C               	movwf	(?___ftadd+4)& (0+255),b
 10197  0056C0  0EBF               	movlw	191
 10198  0056C2  0101               	movlb	1	; () banked
 10199  0056C4  0101               	movlb	1	; () banked
 10200  0056C6  6F3D               	movwf	(?___ftadd+5)& (0+255),b
 10201  0056C8  ECF3  F018         	call	___ftadd	;wreg free
 10202  0056CC  C13A  F14C         	movff	?___ftadd+2,USART_Init@temp+2
 10203  0056D0  C139  F14B         	movff	?___ftadd+1,USART_Init@temp+1
 10204  0056D4  C138  F14A         	movff	?___ftadd,USART_Init@temp
 10205                           
 10206                           ;main.c: 230: SPBRG = (int) temp;
 10207  0056D8  C14A  F133         	movff	USART_Init@temp,?___fttol
 10208  0056DC  C14B  F134         	movff	USART_Init@temp+1,?___fttol+1
 10209  0056E0  C14C  F135         	movff	USART_Init@temp+2,?___fttol+2
 10210  0056E4  EC70  F021         	call	___fttol	;wreg free
 10211  0056E8  0101               	movlb	1	; () banked
 10212  0056EA  0101               	movlb	1	; () banked
 10213  0056EC  5133               	movf	?___fttol& (0+255),w,b
 10214  0056EE  6EAF               	movwf	4015,c	;volatile
 10215                           
 10216                           ;main.c: 232: RCSTA = 0x90;
 10217  0056F0  0E90               	movlw	144
 10218  0056F2  6EAB               	movwf	4011,c	;volatile
 10219                           
 10220                           ; BSR set to: 1
 10221  0056F4  0012               	return	
 10222  0056F6                     __end_of_USART_Init:
 10223                           	opt stack 0
 10224                           tblptru	equ	0xFF8
 10225                           tblptrh	equ	0xFF7
 10226                           tblptrl	equ	0xFF6
 10227                           tablat	equ	0xFF5
 10228                           prodh	equ	0xFF4
 10229                           prodl	equ	0xFF3
 10230                           intcon	equ	0xFF2
 10231                           postinc0	equ	0xFEE
 10232                           wreg	equ	0xFE8
 10233                           postdec1	equ	0xFE5
 10234                           fsr1l	equ	0xFE1
 10235                           indf2	equ	0xFDF
 10236                           postinc2	equ	0xFDE
 10237                           postdec2	equ	0xFDD
 10238                           fsr2h	equ	0xFDA
 10239                           fsr2l	equ	0xFD9
 10240                           status	equ	0xFD8
 10241                           
 10242 ;; *************** function ___fttol *****************
 10243 ;; Defined at:
 10244 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;  f1              3   51[BANK1 ] float 
 10247 ;; Auto vars:     Size  Location     Type
 10248 ;;  lval            4   61[BANK1 ] unsigned long 
 10249 ;;  exp1            1   65[BANK1 ] unsigned char 
 10250 ;;  sign1           1   60[BANK1 ] unsigned char 
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  4   51[BANK1 ] long 
 10253 ;; Registers used:
 10254 ;;		wreg, status,2, status,0
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10260 ;;      Params:         0       0       4       0       0       0       0       0       0
 10261 ;;      Locals:         0       0       6       0       0       0       0       0       0
 10262 ;;      Temps:          0       0       5       0       0       0       0       0       0
 10263 ;;      Totals:         0       0      15       0       0       0       0       0       0
 10264 ;;Total ram usage:       15 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:   11
 10267 ;; This function calls:
 10268 ;;		Nothing
 10269 ;; This function is called by:
 10270 ;;		_USART_Init
 10271 ;;		_sprintf
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           
 10275                           	psect	text37
 10276  0042E0                     __ptext37:
 10277                           	opt stack 0
 10278  0042E0                     ___fttol:
 10279                           	opt stack 16
 10280                           
 10281                           ; BSR set to: 1
 10282                           ;incstack = 0
 10283                           ;incstack = 0
 10284  0042E0  0E0F               	movlw	15
 10285  0042E2  0101               	movlb	1	; () banked
 10286  0042E4  6F37               	movwf	??___fttol& (0+255),b
 10287  0042E6  0101               	movlb	1	; () banked
 10288  0042E8  C133  F138         	movff	___fttol@f1,??___fttol+1
 10289  0042EC  0101               	movlb	1	; () banked
 10290  0042EE  C134  F139         	movff	___fttol@f1+1,??___fttol+2
 10291  0042F2  0101               	movlb	1	; () banked
 10292  0042F4  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
 10293  0042F8  0101               	movlb	1	; () banked
 10294  0042FA  2937               	incf	??___fttol& (0+255),w,b
 10295  0042FC  0101               	movlb	1	; () banked
 10296  0042FE  6F3B               	movwf	(??___fttol+4)& (0+255),b
 10297  004300  D005               	goto	u7310
 10298  004302                     u7315:
 10299  004302  0101               	movlb	1	; () banked
 10300  004304  90D8               	bcf	status,0,c
 10301  004306  333A               	rrcf	(??___fttol+3)& (0+255),f,b
 10302  004308  3339               	rrcf	(??___fttol+2)& (0+255),f,b
 10303  00430A  3338               	rrcf	(??___fttol+1)& (0+255),f,b
 10304  00430C                     u7310:
 10305  00430C  0101               	movlb	1	; () banked
 10306  00430E  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
 10307  004310  D7F8               	goto	u7315
 10308  004312  0101               	movlb	1	; () banked
 10309  004314  5138               	movf	(??___fttol+1)& (0+255),w,b
 10310  004316  0101               	movlb	1	; () banked
 10311  004318  0101               	movlb	1	; () banked
 10312  00431A  6F41               	movwf	___fttol@exp1& (0+255),b
 10313  00431C  0101               	movlb	1	; () banked
 10314  00431E  6741               	tstfsz	___fttol@exp1& (0+255),b
 10315  004320  D001               	goto	l8834
 10316  004322  D061               	goto	u7360
 10317  004324                     l8834:
 10318                           
 10319                           ; BSR set to: 1
 10320  004324  0E17               	movlw	23
 10321  004326  0101               	movlb	1	; () banked
 10322  004328  6F37               	movwf	??___fttol& (0+255),b
 10323  00432A  0101               	movlb	1	; () banked
 10324  00432C  C133  F138         	movff	___fttol@f1,??___fttol+1
 10325  004330  0101               	movlb	1	; () banked
 10326  004332  C134  F139         	movff	___fttol@f1+1,??___fttol+2
 10327  004336  0101               	movlb	1	; () banked
 10328  004338  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
 10329  00433C  0101               	movlb	1	; () banked
 10330  00433E  2937               	incf	??___fttol& (0+255),w,b
 10331  004340  0101               	movlb	1	; () banked
 10332  004342  6F3B               	movwf	(??___fttol+4)& (0+255),b
 10333  004344  D005               	goto	u7330
 10334  004346                     u7335:
 10335  004346  0101               	movlb	1	; () banked
 10336  004348  90D8               	bcf	status,0,c
 10337  00434A  333A               	rrcf	(??___fttol+3)& (0+255),f,b
 10338  00434C  3339               	rrcf	(??___fttol+2)& (0+255),f,b
 10339  00434E  3338               	rrcf	(??___fttol+1)& (0+255),f,b
 10340  004350                     u7330:
 10341  004350  0101               	movlb	1	; () banked
 10342  004352  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
 10343  004354  D7F8               	goto	u7335
 10344  004356  0101               	movlb	1	; () banked
 10345  004358  5138               	movf	(??___fttol+1)& (0+255),w,b
 10346  00435A  0101               	movlb	1	; () banked
 10347  00435C  0101               	movlb	1	; () banked
 10348  00435E  6F3C               	movwf	___fttol@sign1& (0+255),b
 10349                           
 10350                           ; BSR set to: 1
 10351  004360  0101               	movlb	1	; () banked
 10352  004362  0101               	movlb	1	; () banked
 10353  004364  8F34               	bsf	(___fttol@f1+1)& (0+255),7,b
 10354                           
 10355                           ; BSR set to: 1
 10356  004366  0EFF               	movlw	255
 10357  004368  0101               	movlb	1	; () banked
 10358  00436A  0101               	movlb	1	; () banked
 10359  00436C  1733               	andwf	___fttol@f1& (0+255),f,b
 10360  00436E  0EFF               	movlw	255
 10361  004370  0101               	movlb	1	; () banked
 10362  004372  0101               	movlb	1	; () banked
 10363  004374  1734               	andwf	(___fttol@f1+1)& (0+255),f,b
 10364  004376  0E00               	movlw	0
 10365  004378  0101               	movlb	1	; () banked
 10366  00437A  0101               	movlb	1	; () banked
 10367  00437C  1735               	andwf	(___fttol@f1+2)& (0+255),f,b
 10368                           
 10369                           ; BSR set to: 1
 10370  00437E  0101               	movlb	1	; () banked
 10371  004380  0101               	movlb	1	; () banked
 10372  004382  5133               	movf	___fttol@f1& (0+255),w,b
 10373  004384  0101               	movlb	1	; () banked
 10374  004386  0101               	movlb	1	; () banked
 10375  004388  6F3D               	movwf	___fttol@lval& (0+255),b
 10376  00438A  0101               	movlb	1	; () banked
 10377  00438C  0101               	movlb	1	; () banked
 10378  00438E  5134               	movf	(___fttol@f1+1)& (0+255),w,b
 10379  004390  0101               	movlb	1	; () banked
 10380  004392  6F3E               	movwf	(___fttol@lval+1)& (0+255),b
 10381  004394  0101               	movlb	1	; () banked
 10382  004396  5135               	movf	(___fttol@f1+2)& (0+255),w,b
 10383  004398  0101               	movlb	1	; () banked
 10384  00439A  6F3F               	movwf	(___fttol@lval+2)& (0+255),b
 10385  00439C  0101               	movlb	1	; () banked
 10386  00439E  6B40               	clrf	(___fttol@lval+3)& (0+255),b
 10387                           
 10388                           ; BSR set to: 1
 10389  0043A0  0E8E               	movlw	142
 10390  0043A2  0101               	movlb	1	; () banked
 10391  0043A4  0101               	movlb	1	; () banked
 10392  0043A6  5F41               	subwf	___fttol@exp1& (0+255),f,b
 10393                           
 10394                           ; BSR set to: 1
 10395  0043A8  0101               	movlb	1	; () banked
 10396  0043AA  0101               	movlb	1	; () banked
 10397  0043AC  AF41               	btfss	___fttol@exp1& (0+255),7,b
 10398  0043AE  D016               	goto	l8856
 10399                           
 10400                           ; BSR set to: 1
 10401  0043B0  0101               	movlb	1	; () banked
 10402  0043B2  0101               	movlb	1	; () banked
 10403  0043B4  5141               	movf	___fttol@exp1& (0+255),w,b
 10404  0043B6  0A80               	xorlw	128
 10405  0043B8  0F8F               	addlw	143
 10406  0043BA  A0D8               	btfss	status,0,c
 10407  0043BC  D014               	goto	u7360
 10408  0043BE                     l8852:
 10409                           
 10410                           ; BSR set to: 1
 10411  0043BE  0101               	movlb	1	; () banked
 10412  0043C0  90D8               	bcf	status,0,c
 10413  0043C2  0101               	movlb	1	; () banked
 10414  0043C4  3340               	rrcf	(___fttol@lval+3)& (0+255),f,b
 10415  0043C6  0101               	movlb	1	; () banked
 10416  0043C8  333F               	rrcf	(___fttol@lval+2)& (0+255),f,b
 10417  0043CA  0101               	movlb	1	; () banked
 10418  0043CC  333E               	rrcf	(___fttol@lval+1)& (0+255),f,b
 10419  0043CE  0101               	movlb	1	; () banked
 10420  0043D0  333D               	rrcf	___fttol@lval& (0+255),f,b
 10421                           
 10422                           ; BSR set to: 1
 10423  0043D2  0101               	movlb	1	; () banked
 10424  0043D4  0101               	movlb	1	; () banked
 10425  0043D6  3F41               	incfsz	___fttol@exp1& (0+255),f,b
 10426  0043D8  D7F2               	goto	l8852
 10427  0043DA  D024               	goto	l8866
 10428  0043DC                     l8856:
 10429                           
 10430                           ; BSR set to: 1
 10431  0043DC  0E17               	movlw	23
 10432  0043DE  0101               	movlb	1	; () banked
 10433  0043E0  0101               	movlb	1	; () banked
 10434  0043E2  6541               	cpfsgt	___fttol@exp1& (0+255),b
 10435  0043E4  D01B               	goto	l8864
 10436  0043E6                     u7360:
 10437                           
 10438                           ; BSR set to: 1
 10439  0043E6  0E00               	movlw	0
 10440  0043E8  0101               	movlb	1	; () banked
 10441  0043EA  0101               	movlb	1	; () banked
 10442  0043EC  6F33               	movwf	?___fttol& (0+255),b
 10443  0043EE  0E00               	movlw	0
 10444  0043F0  0101               	movlb	1	; () banked
 10445  0043F2  6F34               	movwf	(?___fttol+1)& (0+255),b
 10446  0043F4  0E00               	movlw	0
 10447  0043F6  0101               	movlb	1	; () banked
 10448  0043F8  6F35               	movwf	(?___fttol+2)& (0+255),b
 10449  0043FA  0E00               	movlw	0
 10450  0043FC  0101               	movlb	1	; () banked
 10451  0043FE  6F36               	movwf	(?___fttol+3)& (0+255),b
 10452  004400  D02E               	goto	l837
 10453  004402                     l8862:
 10454                           
 10455                           ; BSR set to: 1
 10456  004402  0101               	movlb	1	; () banked
 10457  004404  90D8               	bcf	status,0,c
 10458  004406  0101               	movlb	1	; () banked
 10459  004408  373D               	rlcf	___fttol@lval& (0+255),f,b
 10460  00440A  0101               	movlb	1	; () banked
 10461  00440C  373E               	rlcf	(___fttol@lval+1)& (0+255),f,b
 10462  00440E  0101               	movlb	1	; () banked
 10463  004410  373F               	rlcf	(___fttol@lval+2)& (0+255),f,b
 10464  004412  0101               	movlb	1	; () banked
 10465  004414  3740               	rlcf	(___fttol@lval+3)& (0+255),f,b
 10466  004416  0101               	movlb	1	; () banked
 10467  004418  0101               	movlb	1	; () banked
 10468  00441A  0741               	decf	___fttol@exp1& (0+255),f,b
 10469  00441C                     l8864:
 10470                           
 10471                           ; BSR set to: 1
 10472  00441C  0101               	movlb	1	; () banked
 10473  00441E  0101               	movlb	1	; () banked
 10474  004420  6741               	tstfsz	___fttol@exp1& (0+255),b
 10475  004422  D7EF               	goto	l8862
 10476  004424                     l8866:
 10477                           
 10478                           ; BSR set to: 1
 10479  004424  0101               	movlb	1	; () banked
 10480  004426  0101               	movlb	1	; () banked
 10481  004428  513C               	movf	___fttol@sign1& (0+255),w,b
 10482  00442A  B4D8               	btfsc	status,2,c
 10483  00442C  D010               	goto	l8870
 10484                           
 10485                           ; BSR set to: 1
 10486  00442E  0101               	movlb	1	; () banked
 10487  004430  0101               	movlb	1	; () banked
 10488  004432  1F40               	comf	(___fttol@lval+3)& (0+255),f,b
 10489  004434  0101               	movlb	1	; () banked
 10490  004436  1F3F               	comf	(___fttol@lval+2)& (0+255),f,b
 10491  004438  0101               	movlb	1	; () banked
 10492  00443A  1F3E               	comf	(___fttol@lval+1)& (0+255),f,b
 10493  00443C  0101               	movlb	1	; () banked
 10494  00443E  6D3D               	negf	___fttol@lval& (0+255),b
 10495  004440  0E00               	movlw	0
 10496  004442  0101               	movlb	1	; () banked
 10497  004444  233E               	addwfc	(___fttol@lval+1)& (0+255),f,b
 10498  004446  0101               	movlb	1	; () banked
 10499  004448  233F               	addwfc	(___fttol@lval+2)& (0+255),f,b
 10500  00444A  0101               	movlb	1	; () banked
 10501  00444C  2340               	addwfc	(___fttol@lval+3)& (0+255),f,b
 10502  00444E                     l8870:
 10503                           
 10504                           ; BSR set to: 1
 10505  00444E  C13D  F133         	movff	___fttol@lval,?___fttol
 10506  004452  C13E  F134         	movff	___fttol@lval+1,?___fttol+1
 10507  004456  C13F  F135         	movff	___fttol@lval+2,?___fttol+2
 10508  00445A  C140  F136         	movff	___fttol@lval+3,?___fttol+3
 10509  00445E                     l837:
 10510                           
 10511                           ; BSR set to: 1
 10512  00445E  0012               	return	
 10513  004460                     __end_of___fttol:
 10514                           	opt stack 0
 10515                           tblptru	equ	0xFF8
 10516                           tblptrh	equ	0xFF7
 10517                           tblptrl	equ	0xFF6
 10518                           tablat	equ	0xFF5
 10519                           prodh	equ	0xFF4
 10520                           prodl	equ	0xFF3
 10521                           intcon	equ	0xFF2
 10522                           postinc0	equ	0xFEE
 10523                           wreg	equ	0xFE8
 10524                           postdec1	equ	0xFE5
 10525                           fsr1l	equ	0xFE1
 10526                           indf2	equ	0xFDF
 10527                           postinc2	equ	0xFDE
 10528                           postdec2	equ	0xFDD
 10529                           fsr2h	equ	0xFDA
 10530                           fsr2l	equ	0xFD9
 10531                           status	equ	0xFD8
 10532                           
 10533 ;; *************** function ___ftdiv *****************
 10534 ;; Defined at:
 10535 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;  f1              3   39[BANK1 ] float 
 10538 ;;  f2              3   42[BANK1 ] float 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;  f3              3   51[BANK1 ] float 
 10541 ;;  sign            1   55[BANK1 ] unsigned char 
 10542 ;;  exp             1   54[BANK1 ] unsigned char 
 10543 ;;  cntr            1   50[BANK1 ] unsigned char 
 10544 ;; Return value:  Size  Location     Type
 10545 ;;                  3   39[BANK1 ] float 
 10546 ;; Registers used:
 10547 ;;		wreg, status,2, status,0, cstack
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10553 ;;      Params:         0       0       6       0       0       0       0       0       0
 10554 ;;      Locals:         0       0       6       0       0       0       0       0       0
 10555 ;;      Temps:          0       0       5       0       0       0       0       0       0
 10556 ;;      Totals:         0       0      17       0       0       0       0       0       0
 10557 ;;Total ram usage:       17 bytes
 10558 ;; Hardware stack levels used:    1
 10559 ;; Hardware stack levels required when called:   12
 10560 ;; This function calls:
 10561 ;;		___ftpack
 10562 ;; This function is called by:
 10563 ;;		_USART_Init
 10564 ;;		_Read_LDR
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text38
 10569  003F50                     __ptext38:
 10570                           	opt stack 0
 10571  003F50                     ___ftdiv:
 10572                           	opt stack 15
 10573                           
 10574                           ; BSR set to: 1
 10575                           ;incstack = 0
 10576                           ;incstack = 0
 10577  003F50  0E0F               	movlw	15
 10578  003F52  0101               	movlb	1	; () banked
 10579  003F54  6F2D               	movwf	??___ftdiv& (0+255),b
 10580  003F56  0101               	movlb	1	; () banked
 10581  003F58  C127  F12E         	movff	___ftdiv@f1,??___ftdiv+1
 10582  003F5C  0101               	movlb	1	; () banked
 10583  003F5E  C128  F12F         	movff	___ftdiv@f1+1,??___ftdiv+2
 10584  003F62  0101               	movlb	1	; () banked
 10585  003F64  C129  F130         	movff	___ftdiv@f1+2,??___ftdiv+3
 10586  003F68  0101               	movlb	1	; () banked
 10587  003F6A  292D               	incf	??___ftdiv& (0+255),w,b
 10588  003F6C  0101               	movlb	1	; () banked
 10589  003F6E  6F31               	movwf	(??___ftdiv+4)& (0+255),b
 10590  003F70  D005               	goto	u10770
 10591  003F72                     u10775:
 10592  003F72  0101               	movlb	1	; () banked
 10593  003F74  90D8               	bcf	status,0,c
 10594  003F76  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
 10595  003F78  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
 10596  003F7A  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
 10597  003F7C                     u10770:
 10598  003F7C  0101               	movlb	1	; () banked
 10599  003F7E  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
 10600  003F80  D7F8               	goto	u10775
 10601  003F82  0101               	movlb	1	; () banked
 10602  003F84  512E               	movf	(??___ftdiv+1)& (0+255),w,b
 10603  003F86  0101               	movlb	1	; () banked
 10604  003F88  0101               	movlb	1	; () banked
 10605  003F8A  6F36               	movwf	___ftdiv@exp& (0+255),b
 10606  003F8C  0101               	movlb	1	; () banked
 10607  003F8E  6736               	tstfsz	___ftdiv@exp& (0+255),b
 10608  003F90  D001               	goto	l11350
 10609  003F92  D021               	goto	u10800
 10610  003F94                     l11350:
 10611                           
 10612                           ; BSR set to: 1
 10613  003F94  0E0F               	movlw	15
 10614  003F96  0101               	movlb	1	; () banked
 10615  003F98  6F2D               	movwf	??___ftdiv& (0+255),b
 10616  003F9A  0101               	movlb	1	; () banked
 10617  003F9C  C12A  F12E         	movff	___ftdiv@f2,??___ftdiv+1
 10618  003FA0  0101               	movlb	1	; () banked
 10619  003FA2  C12B  F12F         	movff	___ftdiv@f2+1,??___ftdiv+2
 10620  003FA6  0101               	movlb	1	; () banked
 10621  003FA8  C12C  F130         	movff	___ftdiv@f2+2,??___ftdiv+3
 10622  003FAC  0101               	movlb	1	; () banked
 10623  003FAE  292D               	incf	??___ftdiv& (0+255),w,b
 10624  003FB0  0101               	movlb	1	; () banked
 10625  003FB2  6F31               	movwf	(??___ftdiv+4)& (0+255),b
 10626  003FB4  D005               	goto	u10790
 10627  003FB6                     u10795:
 10628  003FB6  0101               	movlb	1	; () banked
 10629  003FB8  90D8               	bcf	status,0,c
 10630  003FBA  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
 10631  003FBC  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
 10632  003FBE  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
 10633  003FC0                     u10790:
 10634  003FC0  0101               	movlb	1	; () banked
 10635  003FC2  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
 10636  003FC4  D7F8               	goto	u10795
 10637  003FC6  0101               	movlb	1	; () banked
 10638  003FC8  512E               	movf	(??___ftdiv+1)& (0+255),w,b
 10639  003FCA  0101               	movlb	1	; () banked
 10640  003FCC  0101               	movlb	1	; () banked
 10641  003FCE  6F37               	movwf	___ftdiv@sign& (0+255),b
 10642  003FD0  0101               	movlb	1	; () banked
 10643  003FD2  6737               	tstfsz	___ftdiv@sign& (0+255),b
 10644  003FD4  D00D               	goto	l11356
 10645  003FD6                     u10800:
 10646                           
 10647                           ; BSR set to: 1
 10648  003FD6  0E00               	movlw	0
 10649  003FD8  0101               	movlb	1	; () banked
 10650  003FDA  0101               	movlb	1	; () banked
 10651  003FDC  6F27               	movwf	?___ftdiv& (0+255),b
 10652  003FDE  0E00               	movlw	0
 10653  003FE0  0101               	movlb	1	; () banked
 10654  003FE2  0101               	movlb	1	; () banked
 10655  003FE4  6F28               	movwf	(?___ftdiv+1)& (0+255),b
 10656  003FE6  0E00               	movlw	0
 10657  003FE8  0101               	movlb	1	; () banked
 10658  003FEA  0101               	movlb	1	; () banked
 10659  003FEC  6F29               	movwf	(?___ftdiv+2)& (0+255),b
 10660  003FEE  D093               	goto	l785
 10661  003FF0                     l11356:
 10662                           
 10663                           ; BSR set to: 1
 10664  003FF0  0E00               	movlw	0
 10665  003FF2  0101               	movlb	1	; () banked
 10666  003FF4  0101               	movlb	1	; () banked
 10667  003FF6  6F33               	movwf	___ftdiv@f3& (0+255),b
 10668  003FF8  0E00               	movlw	0
 10669  003FFA  0101               	movlb	1	; () banked
 10670  003FFC  0101               	movlb	1	; () banked
 10671  003FFE  6F34               	movwf	(___ftdiv@f3+1)& (0+255),b
 10672  004000  0E00               	movlw	0
 10673  004002  0101               	movlb	1	; () banked
 10674  004004  0101               	movlb	1	; () banked
 10675  004006  6F35               	movwf	(___ftdiv@f3+2)& (0+255),b
 10676                           
 10677                           ; BSR set to: 1
 10678  004008  0101               	movlb	1	; () banked
 10679  00400A  0101               	movlb	1	; () banked
 10680  00400C  5137               	movf	___ftdiv@sign& (0+255),w,b
 10681  00400E  0F89               	addlw	137
 10682  004010  0101               	movlb	1	; () banked
 10683  004012  0101               	movlb	1	; () banked
 10684  004014  5F36               	subwf	___ftdiv@exp& (0+255),f,b
 10685                           
 10686                           ; BSR set to: 1
 10687  004016  C129  F137         	movff	___ftdiv@f1+2,___ftdiv@sign
 10688                           
 10689                           ; BSR set to: 1
 10690  00401A  0101               	movlb	1	; () banked
 10691  00401C  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10692  00401E  0101               	movlb	1	; () banked
 10693  004020  0101               	movlb	1	; () banked
 10694  004022  1B37               	xorwf	___ftdiv@sign& (0+255),f,b
 10695                           
 10696                           ; BSR set to: 1
 10697  004024  0E80               	movlw	128
 10698  004026  0101               	movlb	1	; () banked
 10699  004028  0101               	movlb	1	; () banked
 10700  00402A  1737               	andwf	___ftdiv@sign& (0+255),f,b
 10701                           
 10702                           ; BSR set to: 1
 10703  00402C  0101               	movlb	1	; () banked
 10704  00402E  0101               	movlb	1	; () banked
 10705  004030  8F28               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 10706                           
 10707                           ; BSR set to: 1
 10708  004032  0EFF               	movlw	255
 10709  004034  0101               	movlb	1	; () banked
 10710  004036  0101               	movlb	1	; () banked
 10711  004038  1727               	andwf	___ftdiv@f1& (0+255),f,b
 10712  00403A  0EFF               	movlw	255
 10713  00403C  0101               	movlb	1	; () banked
 10714  00403E  0101               	movlb	1	; () banked
 10715  004040  1728               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 10716  004042  0E00               	movlw	0
 10717  004044  0101               	movlb	1	; () banked
 10718  004046  0101               	movlb	1	; () banked
 10719  004048  1729               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 10720                           
 10721                           ; BSR set to: 1
 10722  00404A  0101               	movlb	1	; () banked
 10723  00404C  0101               	movlb	1	; () banked
 10724  00404E  8F2B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 10725                           
 10726                           ; BSR set to: 1
 10727  004050  0EFF               	movlw	255
 10728  004052  0101               	movlb	1	; () banked
 10729  004054  0101               	movlb	1	; () banked
 10730  004056  172A               	andwf	___ftdiv@f2& (0+255),f,b
 10731  004058  0EFF               	movlw	255
 10732  00405A  0101               	movlb	1	; () banked
 10733  00405C  0101               	movlb	1	; () banked
 10734  00405E  172B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 10735  004060  0E00               	movlw	0
 10736  004062  0101               	movlb	1	; () banked
 10737  004064  0101               	movlb	1	; () banked
 10738  004066  172C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 10739                           
 10740                           ; BSR set to: 1
 10741  004068  0101               	movlb	1	; () banked
 10742  00406A  6F2D               	movwf	??___ftdiv& (0+255),b
 10743  00406C  0E18               	movlw	24
 10744  00406E  0101               	movlb	1	; () banked
 10745  004070  0101               	movlb	1	; () banked
 10746  004072  6F32               	movwf	___ftdiv@cntr& (0+255),b
 10747  004074  0101               	movlb	1	; () banked
 10748  004076  512D               	movf	??___ftdiv& (0+255),w,b
 10749  004078                     l787:
 10750                           
 10751                           ; BSR set to: 1
 10752  004078  0101               	movlb	1	; () banked
 10753  00407A  90D8               	bcf	status,0,c
 10754  00407C  0101               	movlb	1	; () banked
 10755  00407E  3733               	rlcf	___ftdiv@f3& (0+255),f,b
 10756  004080  0101               	movlb	1	; () banked
 10757  004082  3734               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 10758  004084  0101               	movlb	1	; () banked
 10759  004086  3735               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 10760                           
 10761                           ; BSR set to: 1
 10762  004088  0101               	movlb	1	; () banked
 10763  00408A  0101               	movlb	1	; () banked
 10764  00408C  512A               	movf	___ftdiv@f2& (0+255),w,b
 10765  00408E  0101               	movlb	1	; () banked
 10766  004090  0101               	movlb	1	; () banked
 10767  004092  5D27               	subwf	___ftdiv@f1& (0+255),w,b
 10768  004094  0101               	movlb	1	; () banked
 10769  004096  0101               	movlb	1	; () banked
 10770  004098  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10771  00409A  0101               	movlb	1	; () banked
 10772  00409C  0101               	movlb	1	; () banked
 10773  00409E  5928               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 10774  0040A0  0101               	movlb	1	; () banked
 10775  0040A2  0101               	movlb	1	; () banked
 10776  0040A4  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10777  0040A6  0101               	movlb	1	; () banked
 10778  0040A8  0101               	movlb	1	; () banked
 10779  0040AA  5929               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 10780  0040AC  A0D8               	btfss	status,0,c
 10781  0040AE  D015               	goto	l788
 10782                           
 10783                           ; BSR set to: 1
 10784  0040B0  0101               	movlb	1	; () banked
 10785  0040B2  0101               	movlb	1	; () banked
 10786  0040B4  512A               	movf	___ftdiv@f2& (0+255),w,b
 10787  0040B6  0101               	movlb	1	; () banked
 10788  0040B8  0101               	movlb	1	; () banked
 10789  0040BA  5F27               	subwf	___ftdiv@f1& (0+255),f,b
 10790  0040BC  0101               	movlb	1	; () banked
 10791  0040BE  0101               	movlb	1	; () banked
 10792  0040C0  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10793  0040C2  0101               	movlb	1	; () banked
 10794  0040C4  0101               	movlb	1	; () banked
 10795  0040C6  5B28               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 10796  0040C8  0101               	movlb	1	; () banked
 10797  0040CA  0101               	movlb	1	; () banked
 10798  0040CC  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10799  0040CE  0101               	movlb	1	; () banked
 10800  0040D0  0101               	movlb	1	; () banked
 10801  0040D2  5B29               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 10802                           
 10803                           ; BSR set to: 1
 10804  0040D4  0101               	movlb	1	; () banked
 10805  0040D6  0101               	movlb	1	; () banked
 10806  0040D8  8133               	bsf	___ftdiv@f3& (0+255),0,b
 10807  0040DA                     l788:
 10808                           
 10809                           ; BSR set to: 1
 10810  0040DA  0101               	movlb	1	; () banked
 10811  0040DC  90D8               	bcf	status,0,c
 10812  0040DE  0101               	movlb	1	; () banked
 10813  0040E0  3727               	rlcf	___ftdiv@f1& (0+255),f,b
 10814  0040E2  0101               	movlb	1	; () banked
 10815  0040E4  3728               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 10816  0040E6  0101               	movlb	1	; () banked
 10817  0040E8  3729               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 10818                           
 10819                           ; BSR set to: 1
 10820  0040EA  0101               	movlb	1	; () banked
 10821  0040EC  0101               	movlb	1	; () banked
 10822  0040EE  2F32               	decfsz	___ftdiv@cntr& (0+255),f,b
 10823  0040F0  D7C3               	goto	l787
 10824                           
 10825                           ; BSR set to: 1
 10826                           
 10827                           ; BSR set to: 1
 10828  0040F2  C133  F100         	movff	___ftdiv@f3,?___ftpack
 10829  0040F6  C134  F101         	movff	___ftdiv@f3+1,?___ftpack+1
 10830  0040FA  C135  F102         	movff	___ftdiv@f3+2,?___ftpack+2
 10831  0040FE  C136  F103         	movff	___ftdiv@exp,?___ftpack+3
 10832  004102  C137  F104         	movff	___ftdiv@sign,?___ftpack+4
 10833  004106  EC30  F022         	call	___ftpack	;wreg free
 10834  00410A  C102  F129         	movff	?___ftpack+2,?___ftdiv+2
 10835  00410E  C101  F128         	movff	?___ftpack+1,?___ftdiv+1
 10836  004112  C100  F127         	movff	?___ftpack,?___ftdiv
 10837  004116                     l785:
 10838  004116  0012               	return	
 10839  004118                     __end_of___ftdiv:
 10840                           	opt stack 0
 10841                           tblptru	equ	0xFF8
 10842                           tblptrh	equ	0xFF7
 10843                           tblptrl	equ	0xFF6
 10844                           tablat	equ	0xFF5
 10845                           prodh	equ	0xFF4
 10846                           prodl	equ	0xFF3
 10847                           intcon	equ	0xFF2
 10848                           postinc0	equ	0xFEE
 10849                           wreg	equ	0xFE8
 10850                           postdec1	equ	0xFE5
 10851                           fsr1l	equ	0xFE1
 10852                           indf2	equ	0xFDF
 10853                           postinc2	equ	0xFDE
 10854                           postdec2	equ	0xFDD
 10855                           fsr2h	equ	0xFDA
 10856                           fsr2l	equ	0xFD9
 10857                           status	equ	0xFD8
 10858                           
 10859 ;; *************** function ___ftadd *****************
 10860 ;; Defined at:
 10861 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;  f1              3   56[BANK1 ] float 
 10864 ;;  f2              3   59[BANK1 ] float 
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;  exp1            1   69[BANK1 ] unsigned char 
 10867 ;;  exp2            1   68[BANK1 ] unsigned char 
 10868 ;;  sign            1   67[BANK1 ] unsigned char 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  3   56[BANK1 ] float 
 10871 ;; Registers used:
 10872 ;;		wreg, status,2, status,0, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10878 ;;      Params:         0       0       6       0       0       0       0       0       0
 10879 ;;      Locals:         0       0       3       0       0       0       0       0       0
 10880 ;;      Temps:          0       0       5       0       0       0       0       0       0
 10881 ;;      Totals:         0       0      14       0       0       0       0       0       0
 10882 ;;Total ram usage:       14 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:   12
 10885 ;; This function calls:
 10886 ;;		___ftpack
 10887 ;; This function is called by:
 10888 ;;		_USART_Init
 10889 ;;		___asftadd
 10890 ;;		___ftsub
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894                           	psect	text39
 10895  0031E6                     __ptext39:
 10896                           	opt stack 0
 10897  0031E6                     ___ftadd:
 10898                           	opt stack 13
 10899                           
 10900                           ;incstack = 0
 10901                           ;incstack = 0
 10902  0031E6  0E0F               	movlw	15
 10903  0031E8  0101               	movlb	1	; () banked
 10904  0031EA  6F3E               	movwf	??___ftadd& (0+255),b
 10905  0031EC  0101               	movlb	1	; () banked
 10906  0031EE  C138  F13F         	movff	___ftadd@f1,??___ftadd+1
 10907  0031F2  0101               	movlb	1	; () banked
 10908  0031F4  C139  F140         	movff	___ftadd@f1+1,??___ftadd+2
 10909  0031F8  0101               	movlb	1	; () banked
 10910  0031FA  C13A  F141         	movff	___ftadd@f1+2,??___ftadd+3
 10911  0031FE  0101               	movlb	1	; () banked
 10912  003200  293E               	incf	??___ftadd& (0+255),w,b
 10913  003202  0101               	movlb	1	; () banked
 10914  003204  6F42               	movwf	(??___ftadd+4)& (0+255),b
 10915  003206  D005               	goto	u10560
 10916  003208                     u10565:
 10917  003208  0101               	movlb	1	; () banked
 10918  00320A  90D8               	bcf	status,0,c
 10919  00320C  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
 10920  00320E  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
 10921  003210  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
 10922  003212                     u10560:
 10923  003212  0101               	movlb	1	; () banked
 10924  003214  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
 10925  003216  D7F8               	goto	u10565
 10926  003218  0101               	movlb	1	; () banked
 10927  00321A  513F               	movf	(??___ftadd+1)& (0+255),w,b
 10928  00321C  0101               	movlb	1	; () banked
 10929  00321E  0101               	movlb	1	; () banked
 10930  003220  6F45               	movwf	___ftadd@exp1& (0+255),b
 10931  003222  0E0F               	movlw	15
 10932  003224  0101               	movlb	1	; () banked
 10933  003226  6F3E               	movwf	??___ftadd& (0+255),b
 10934  003228  0101               	movlb	1	; () banked
 10935  00322A  C13B  F13F         	movff	___ftadd@f2,??___ftadd+1
 10936  00322E  0101               	movlb	1	; () banked
 10937  003230  C13C  F140         	movff	___ftadd@f2+1,??___ftadd+2
 10938  003234  0101               	movlb	1	; () banked
 10939  003236  C13D  F141         	movff	___ftadd@f2+2,??___ftadd+3
 10940  00323A  0101               	movlb	1	; () banked
 10941  00323C  293E               	incf	??___ftadd& (0+255),w,b
 10942  00323E  0101               	movlb	1	; () banked
 10943  003240  6F42               	movwf	(??___ftadd+4)& (0+255),b
 10944  003242  D005               	goto	u10570
 10945  003244                     u10575:
 10946  003244  0101               	movlb	1	; () banked
 10947  003246  90D8               	bcf	status,0,c
 10948  003248  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
 10949  00324A  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
 10950  00324C  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
 10951  00324E                     u10570:
 10952  00324E  0101               	movlb	1	; () banked
 10953  003250  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
 10954  003252  D7F8               	goto	u10575
 10955  003254  0101               	movlb	1	; () banked
 10956  003256  513F               	movf	(??___ftadd+1)& (0+255),w,b
 10957  003258  0101               	movlb	1	; () banked
 10958  00325A  0101               	movlb	1	; () banked
 10959  00325C  6F44               	movwf	___ftadd@exp2& (0+255),b
 10960                           
 10961                           ; BSR set to: 1
 10962  00325E  0101               	movlb	1	; () banked
 10963  003260  0101               	movlb	1	; () banked
 10964  003262  5145               	movf	___ftadd@exp1& (0+255),w,b
 10965  003264  B4D8               	btfsc	status,2,c
 10966  003266  D015               	goto	l753
 10967                           
 10968                           ; BSR set to: 1
 10969  003268  0101               	movlb	1	; () banked
 10970  00326A  0101               	movlb	1	; () banked
 10971  00326C  5144               	movf	___ftadd@exp2& (0+255),w,b
 10972  00326E  0101               	movlb	1	; () banked
 10973  003270  0101               	movlb	1	; () banked
 10974  003272  6145               	cpfslt	___ftadd@exp1& (0+255),b
 10975  003274  D015               	goto	l11282
 10976                           
 10977                           ; BSR set to: 1
 10978  003276  0101               	movlb	1	; () banked
 10979  003278  0101               	movlb	1	; () banked
 10980  00327A  5145               	movf	___ftadd@exp1& (0+255),w,b
 10981  00327C  0800               	sublw	0
 10982  00327E  0101               	movlb	1	; () banked
 10983  003280  0101               	movlb	1	; () banked
 10984  003282  2544               	addwf	___ftadd@exp2& (0+255),w,b
 10985  003284  0101               	movlb	1	; () banked
 10986  003286  6F3E               	movwf	??___ftadd& (0+255),b
 10987  003288  0E19               	movlw	25
 10988  00328A  0101               	movlb	1	; () banked
 10989  00328C  5D3E               	subwf	??___ftadd& (0+255),w,b
 10990  00328E  A0D8               	btfss	status,0,c
 10991  003290  D007               	goto	l11282
 10992  003292                     l753:
 10993                           
 10994                           ; BSR set to: 1
 10995  003292  C13B  F138         	movff	___ftadd@f2,?___ftadd
 10996  003296  C13C  F139         	movff	___ftadd@f2+1,?___ftadd+1
 10997  00329A  C13D  F13A         	movff	___ftadd@f2+2,?___ftadd+2
 10998  00329E  D148               	goto	l754
 10999  0032A0                     l11282:
 11000                           
 11001                           ; BSR set to: 1
 11002  0032A0  0101               	movlb	1	; () banked
 11003  0032A2  0101               	movlb	1	; () banked
 11004  0032A4  5144               	movf	___ftadd@exp2& (0+255),w,b
 11005  0032A6  B4D8               	btfsc	status,2,c
 11006  0032A8  D015               	goto	l757
 11007                           
 11008                           ; BSR set to: 1
 11009  0032AA  0101               	movlb	1	; () banked
 11010  0032AC  0101               	movlb	1	; () banked
 11011  0032AE  5145               	movf	___ftadd@exp1& (0+255),w,b
 11012  0032B0  0101               	movlb	1	; () banked
 11013  0032B2  0101               	movlb	1	; () banked
 11014  0032B4  6144               	cpfslt	___ftadd@exp2& (0+255),b
 11015  0032B6  D015               	goto	l11288
 11016                           
 11017                           ; BSR set to: 1
 11018  0032B8  0101               	movlb	1	; () banked
 11019  0032BA  0101               	movlb	1	; () banked
 11020  0032BC  5144               	movf	___ftadd@exp2& (0+255),w,b
 11021  0032BE  0800               	sublw	0
 11022  0032C0  0101               	movlb	1	; () banked
 11023  0032C2  0101               	movlb	1	; () banked
 11024  0032C4  2545               	addwf	___ftadd@exp1& (0+255),w,b
 11025  0032C6  0101               	movlb	1	; () banked
 11026  0032C8  6F3E               	movwf	??___ftadd& (0+255),b
 11027  0032CA  0E19               	movlw	25
 11028  0032CC  0101               	movlb	1	; () banked
 11029  0032CE  5D3E               	subwf	??___ftadd& (0+255),w,b
 11030  0032D0  A0D8               	btfss	status,0,c
 11031  0032D2  D007               	goto	l11288
 11032  0032D4                     l757:
 11033                           
 11034                           ; BSR set to: 1
 11035  0032D4  C138  F138         	movff	___ftadd@f1,?___ftadd
 11036  0032D8  C139  F139         	movff	___ftadd@f1+1,?___ftadd+1
 11037  0032DC  C13A  F13A         	movff	___ftadd@f1+2,?___ftadd+2
 11038  0032E0  D127               	goto	l754
 11039  0032E2                     l11288:
 11040                           
 11041                           ; BSR set to: 1
 11042  0032E2  0101               	movlb	1	; () banked
 11043  0032E4  6F3E               	movwf	??___ftadd& (0+255),b
 11044  0032E6  0E06               	movlw	6
 11045  0032E8  0101               	movlb	1	; () banked
 11046  0032EA  0101               	movlb	1	; () banked
 11047  0032EC  6F43               	movwf	___ftadd@sign& (0+255),b
 11048  0032EE  0101               	movlb	1	; () banked
 11049  0032F0  513E               	movf	??___ftadd& (0+255),w,b
 11050                           
 11051                           ; BSR set to: 1
 11052  0032F2  0101               	movlb	1	; () banked
 11053  0032F4  0101               	movlb	1	; () banked
 11054  0032F6  AF3A               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11055  0032F8  D003               	goto	l11294
 11056                           
 11057                           ; BSR set to: 1
 11058  0032FA  0101               	movlb	1	; () banked
 11059  0032FC  0101               	movlb	1	; () banked
 11060  0032FE  8F43               	bsf	___ftadd@sign& (0+255),7,b
 11061  003300                     l11294:
 11062                           
 11063                           ; BSR set to: 1
 11064  003300  0101               	movlb	1	; () banked
 11065  003302  0101               	movlb	1	; () banked
 11066  003304  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11067  003306  D003               	goto	l759
 11068                           
 11069                           ; BSR set to: 1
 11070  003308  0101               	movlb	1	; () banked
 11071  00330A  0101               	movlb	1	; () banked
 11072  00330C  8D43               	bsf	___ftadd@sign& (0+255),6,b
 11073  00330E                     l759:
 11074                           
 11075                           ; BSR set to: 1
 11076  00330E  0101               	movlb	1	; () banked
 11077  003310  0101               	movlb	1	; () banked
 11078  003312  8F39               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11079                           
 11080                           ; BSR set to: 1
 11081  003314  0EFF               	movlw	255
 11082  003316  0101               	movlb	1	; () banked
 11083  003318  0101               	movlb	1	; () banked
 11084  00331A  1738               	andwf	___ftadd@f1& (0+255),f,b
 11085  00331C  0EFF               	movlw	255
 11086  00331E  0101               	movlb	1	; () banked
 11087  003320  0101               	movlb	1	; () banked
 11088  003322  1739               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11089  003324  0E00               	movlw	0
 11090  003326  0101               	movlb	1	; () banked
 11091  003328  0101               	movlb	1	; () banked
 11092  00332A  173A               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11093  00332C  0101               	movlb	1	; () banked
 11094  00332E  0101               	movlb	1	; () banked
 11095  003330  8F3C               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11096                           
 11097                           ; BSR set to: 1
 11098  003332  0EFF               	movlw	255
 11099  003334  0101               	movlb	1	; () banked
 11100  003336  0101               	movlb	1	; () banked
 11101  003338  173B               	andwf	___ftadd@f2& (0+255),f,b
 11102  00333A  0EFF               	movlw	255
 11103  00333C  0101               	movlb	1	; () banked
 11104  00333E  0101               	movlb	1	; () banked
 11105  003340  173C               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11106  003342  0E00               	movlw	0
 11107  003344  0101               	movlb	1	; () banked
 11108  003346  0101               	movlb	1	; () banked
 11109  003348  173D               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11110                           
 11111                           ; BSR set to: 1
 11112  00334A  0101               	movlb	1	; () banked
 11113  00334C  0101               	movlb	1	; () banked
 11114  00334E  5144               	movf	___ftadd@exp2& (0+255),w,b
 11115  003350  0101               	movlb	1	; () banked
 11116  003352  0101               	movlb	1	; () banked
 11117  003354  6145               	cpfslt	___ftadd@exp1& (0+255),b
 11118  003356  D02F               	goto	l11314
 11119  003358                     l11304:
 11120                           
 11121                           ; BSR set to: 1
 11122  003358  0101               	movlb	1	; () banked
 11123  00335A  90D8               	bcf	status,0,c
 11124  00335C  0101               	movlb	1	; () banked
 11125  00335E  373B               	rlcf	___ftadd@f2& (0+255),f,b
 11126  003360  0101               	movlb	1	; () banked
 11127  003362  373C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11128  003364  0101               	movlb	1	; () banked
 11129  003366  373D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11130  003368  0101               	movlb	1	; () banked
 11131  00336A  0101               	movlb	1	; () banked
 11132  00336C  0744               	decf	___ftadd@exp2& (0+255),f,b
 11133                           
 11134                           ; BSR set to: 1
 11135  00336E  0101               	movlb	1	; () banked
 11136  003370  0101               	movlb	1	; () banked
 11137  003372  5144               	movf	___ftadd@exp2& (0+255),w,b
 11138  003374  0101               	movlb	1	; () banked
 11139  003376  0101               	movlb	1	; () banked
 11140  003378  1945               	xorwf	___ftadd@exp1& (0+255),w,b
 11141  00337A  B4D8               	btfsc	status,2,c
 11142  00337C  D014               	goto	l11312
 11143                           
 11144                           ; BSR set to: 1
 11145  00337E  0101               	movlb	1	; () banked
 11146  003380  0101               	movlb	1	; () banked
 11147  003382  0743               	decf	___ftadd@sign& (0+255),f,b
 11148  003384  0101               	movlb	1	; () banked
 11149  003386  5143               	movf	___ftadd@sign& (0+255),w,b
 11150  003388  0B07               	andlw	7
 11151  00338A  B4D8               	btfsc	status,2,c
 11152  00338C  D00C               	goto	l11312
 11153  00338E  D7E4               	goto	l11304
 11154  003390                     l11310:
 11155                           
 11156                           ; BSR set to: 1
 11157  003390  0101               	movlb	1	; () banked
 11158  003392  90D8               	bcf	status,0,c
 11159  003394  0101               	movlb	1	; () banked
 11160  003396  333A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11161  003398  0101               	movlb	1	; () banked
 11162  00339A  3339               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11163  00339C  0101               	movlb	1	; () banked
 11164  00339E  3338               	rrcf	___ftadd@f1& (0+255),f,b
 11165  0033A0  0101               	movlb	1	; () banked
 11166  0033A2  0101               	movlb	1	; () banked
 11167  0033A4  2B45               	incf	___ftadd@exp1& (0+255),f,b
 11168  0033A6                     l11312:
 11169                           
 11170                           ; BSR set to: 1
 11171  0033A6  0101               	movlb	1	; () banked
 11172  0033A8  0101               	movlb	1	; () banked
 11173  0033AA  5144               	movf	___ftadd@exp2& (0+255),w,b
 11174  0033AC  0101               	movlb	1	; () banked
 11175  0033AE  0101               	movlb	1	; () banked
 11176  0033B0  6345               	cpfseq	___ftadd@exp1& (0+255),b
 11177  0033B2  D7EE               	goto	l11310
 11178  0033B4  D035               	goto	l768
 11179  0033B6                     l11314:
 11180                           
 11181                           ; BSR set to: 1
 11182  0033B6  0101               	movlb	1	; () banked
 11183  0033B8  0101               	movlb	1	; () banked
 11184  0033BA  5145               	movf	___ftadd@exp1& (0+255),w,b
 11185  0033BC  0101               	movlb	1	; () banked
 11186  0033BE  0101               	movlb	1	; () banked
 11187  0033C0  6144               	cpfslt	___ftadd@exp2& (0+255),b
 11188  0033C2  D02E               	goto	l768
 11189  0033C4                     l11316:
 11190                           
 11191                           ; BSR set to: 1
 11192  0033C4  0101               	movlb	1	; () banked
 11193  0033C6  90D8               	bcf	status,0,c
 11194  0033C8  0101               	movlb	1	; () banked
 11195  0033CA  3738               	rlcf	___ftadd@f1& (0+255),f,b
 11196  0033CC  0101               	movlb	1	; () banked
 11197  0033CE  3739               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11198  0033D0  0101               	movlb	1	; () banked
 11199  0033D2  373A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11200  0033D4  0101               	movlb	1	; () banked
 11201  0033D6  0101               	movlb	1	; () banked
 11202  0033D8  0745               	decf	___ftadd@exp1& (0+255),f,b
 11203                           
 11204                           ; BSR set to: 1
 11205  0033DA  0101               	movlb	1	; () banked
 11206  0033DC  0101               	movlb	1	; () banked
 11207  0033DE  5144               	movf	___ftadd@exp2& (0+255),w,b
 11208  0033E0  0101               	movlb	1	; () banked
 11209  0033E2  0101               	movlb	1	; () banked
 11210  0033E4  1945               	xorwf	___ftadd@exp1& (0+255),w,b
 11211  0033E6  B4D8               	btfsc	status,2,c
 11212  0033E8  D014               	goto	l11324
 11213                           
 11214                           ; BSR set to: 1
 11215  0033EA  0101               	movlb	1	; () banked
 11216  0033EC  0101               	movlb	1	; () banked
 11217  0033EE  0743               	decf	___ftadd@sign& (0+255),f,b
 11218  0033F0  0101               	movlb	1	; () banked
 11219  0033F2  5143               	movf	___ftadd@sign& (0+255),w,b
 11220  0033F4  0B07               	andlw	7
 11221  0033F6  B4D8               	btfsc	status,2,c
 11222  0033F8  D00C               	goto	l11324
 11223  0033FA  D7E4               	goto	l11316
 11224  0033FC                     l11322:
 11225                           
 11226                           ; BSR set to: 1
 11227  0033FC  0101               	movlb	1	; () banked
 11228  0033FE  90D8               	bcf	status,0,c
 11229  003400  0101               	movlb	1	; () banked
 11230  003402  333D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 11231  003404  0101               	movlb	1	; () banked
 11232  003406  333C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 11233  003408  0101               	movlb	1	; () banked
 11234  00340A  333B               	rrcf	___ftadd@f2& (0+255),f,b
 11235  00340C  0101               	movlb	1	; () banked
 11236  00340E  0101               	movlb	1	; () banked
 11237  003410  2B44               	incf	___ftadd@exp2& (0+255),f,b
 11238  003412                     l11324:
 11239                           
 11240                           ; BSR set to: 1
 11241  003412  0101               	movlb	1	; () banked
 11242  003414  0101               	movlb	1	; () banked
 11243  003416  5144               	movf	___ftadd@exp2& (0+255),w,b
 11244  003418  0101               	movlb	1	; () banked
 11245  00341A  0101               	movlb	1	; () banked
 11246  00341C  6345               	cpfseq	___ftadd@exp1& (0+255),b
 11247  00341E  D7EE               	goto	l11322
 11248  003420                     l768:
 11249                           
 11250                           ; BSR set to: 1
 11251  003420  0101               	movlb	1	; () banked
 11252  003422  0101               	movlb	1	; () banked
 11253  003424  AF43               	btfss	___ftadd@sign& (0+255),7,b
 11254  003426  D018               	goto	l777
 11255                           
 11256                           ; BSR set to: 1
 11257  003428  0EFF               	movlw	255
 11258  00342A  0101               	movlb	1	; () banked
 11259  00342C  0101               	movlb	1	; () banked
 11260  00342E  1B38               	xorwf	___ftadd@f1& (0+255),f,b
 11261  003430  0EFF               	movlw	255
 11262  003432  0101               	movlb	1	; () banked
 11263  003434  0101               	movlb	1	; () banked
 11264  003436  1B39               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 11265  003438  0EFF               	movlw	255
 11266  00343A  0101               	movlb	1	; () banked
 11267  00343C  0101               	movlb	1	; () banked
 11268  00343E  1B3A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 11269  003440  0E01               	movlw	1
 11270  003442  0101               	movlb	1	; () banked
 11271  003444  0101               	movlb	1	; () banked
 11272  003446  2738               	addwf	___ftadd@f1& (0+255),f,b
 11273  003448  0E00               	movlw	0
 11274  00344A  0101               	movlb	1	; () banked
 11275  00344C  0101               	movlb	1	; () banked
 11276  00344E  2339               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 11277  003450  0E00               	movlw	0
 11278  003452  0101               	movlb	1	; () banked
 11279  003454  0101               	movlb	1	; () banked
 11280  003456  233A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 11281  003458                     l777:
 11282                           
 11283                           ; BSR set to: 1
 11284  003458  0101               	movlb	1	; () banked
 11285  00345A  0101               	movlb	1	; () banked
 11286  00345C  AD43               	btfss	___ftadd@sign& (0+255),6,b
 11287  00345E  D018               	goto	l11330
 11288                           
 11289                           ; BSR set to: 1
 11290  003460  0EFF               	movlw	255
 11291  003462  0101               	movlb	1	; () banked
 11292  003464  0101               	movlb	1	; () banked
 11293  003466  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 11294  003468  0EFF               	movlw	255
 11295  00346A  0101               	movlb	1	; () banked
 11296  00346C  0101               	movlb	1	; () banked
 11297  00346E  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11298  003470  0EFF               	movlw	255
 11299  003472  0101               	movlb	1	; () banked
 11300  003474  0101               	movlb	1	; () banked
 11301  003476  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11302  003478  0E01               	movlw	1
 11303  00347A  0101               	movlb	1	; () banked
 11304  00347C  0101               	movlb	1	; () banked
 11305  00347E  273B               	addwf	___ftadd@f2& (0+255),f,b
 11306  003480  0E00               	movlw	0
 11307  003482  0101               	movlb	1	; () banked
 11308  003484  0101               	movlb	1	; () banked
 11309  003486  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11310  003488  0E00               	movlw	0
 11311  00348A  0101               	movlb	1	; () banked
 11312  00348C  0101               	movlb	1	; () banked
 11313  00348E  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11314  003490                     l11330:
 11315                           
 11316                           ; BSR set to: 1
 11317  003490  0101               	movlb	1	; () banked
 11318  003492  6F3E               	movwf	??___ftadd& (0+255),b
 11319  003494  0E00               	movlw	0
 11320  003496  0101               	movlb	1	; () banked
 11321  003498  0101               	movlb	1	; () banked
 11322  00349A  6F43               	movwf	___ftadd@sign& (0+255),b
 11323  00349C  0101               	movlb	1	; () banked
 11324  00349E  513E               	movf	??___ftadd& (0+255),w,b
 11325                           
 11326                           ; BSR set to: 1
 11327  0034A0  0101               	movlb	1	; () banked
 11328  0034A2  0101               	movlb	1	; () banked
 11329  0034A4  5138               	movf	___ftadd@f1& (0+255),w,b
 11330  0034A6  0101               	movlb	1	; () banked
 11331  0034A8  0101               	movlb	1	; () banked
 11332  0034AA  273B               	addwf	___ftadd@f2& (0+255),f,b
 11333  0034AC  0101               	movlb	1	; () banked
 11334  0034AE  0101               	movlb	1	; () banked
 11335  0034B0  5139               	movf	(___ftadd@f1+1)& (0+255),w,b
 11336  0034B2  0101               	movlb	1	; () banked
 11337  0034B4  0101               	movlb	1	; () banked
 11338  0034B6  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11339  0034B8  0101               	movlb	1	; () banked
 11340  0034BA  0101               	movlb	1	; () banked
 11341  0034BC  513A               	movf	(___ftadd@f1+2)& (0+255),w,b
 11342  0034BE  0101               	movlb	1	; () banked
 11343  0034C0  0101               	movlb	1	; () banked
 11344  0034C2  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11345                           
 11346                           ; BSR set to: 1
 11347  0034C4  0101               	movlb	1	; () banked
 11348  0034C6  0101               	movlb	1	; () banked
 11349  0034C8  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11350  0034CA  D020               	goto	l11340
 11351                           
 11352                           ; BSR set to: 1
 11353  0034CC  0EFF               	movlw	255
 11354  0034CE  0101               	movlb	1	; () banked
 11355  0034D0  0101               	movlb	1	; () banked
 11356  0034D2  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 11357  0034D4  0EFF               	movlw	255
 11358  0034D6  0101               	movlb	1	; () banked
 11359  0034D8  0101               	movlb	1	; () banked
 11360  0034DA  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11361  0034DC  0EFF               	movlw	255
 11362  0034DE  0101               	movlb	1	; () banked
 11363  0034E0  0101               	movlb	1	; () banked
 11364  0034E2  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11365  0034E4  0E01               	movlw	1
 11366  0034E6  0101               	movlb	1	; () banked
 11367  0034E8  0101               	movlb	1	; () banked
 11368  0034EA  273B               	addwf	___ftadd@f2& (0+255),f,b
 11369  0034EC  0E00               	movlw	0
 11370  0034EE  0101               	movlb	1	; () banked
 11371  0034F0  0101               	movlb	1	; () banked
 11372  0034F2  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11373  0034F4  0E00               	movlw	0
 11374  0034F6  0101               	movlb	1	; () banked
 11375  0034F8  0101               	movlb	1	; () banked
 11376  0034FA  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11377                           
 11378                           ; BSR set to: 1
 11379  0034FC  0101               	movlb	1	; () banked
 11380  0034FE  6F3E               	movwf	??___ftadd& (0+255),b
 11381  003500  0E01               	movlw	1
 11382  003502  0101               	movlb	1	; () banked
 11383  003504  0101               	movlb	1	; () banked
 11384  003506  6F43               	movwf	___ftadd@sign& (0+255),b
 11385  003508  0101               	movlb	1	; () banked
 11386  00350A  513E               	movf	??___ftadd& (0+255),w,b
 11387  00350C                     l11340:
 11388                           
 11389                           ; BSR set to: 1
 11390  00350C  C13B  F100         	movff	___ftadd@f2,?___ftpack
 11391  003510  C13C  F101         	movff	___ftadd@f2+1,?___ftpack+1
 11392  003514  C13D  F102         	movff	___ftadd@f2+2,?___ftpack+2
 11393  003518  C145  F103         	movff	___ftadd@exp1,?___ftpack+3
 11394  00351C  C143  F104         	movff	___ftadd@sign,?___ftpack+4
 11395  003520  EC30  F022         	call	___ftpack	;wreg free
 11396  003524  C102  F13A         	movff	?___ftpack+2,?___ftadd+2
 11397  003528  C101  F139         	movff	?___ftpack+1,?___ftadd+1
 11398  00352C  C100  F138         	movff	?___ftpack,?___ftadd
 11399  003530                     l754:
 11400  003530  0012               	return	
 11401  003532                     __end_of___ftadd:
 11402                           	opt stack 0
 11403                           tblptru	equ	0xFF8
 11404                           tblptrh	equ	0xFF7
 11405                           tblptrl	equ	0xFF6
 11406                           tablat	equ	0xFF5
 11407                           prodh	equ	0xFF4
 11408                           prodl	equ	0xFF3
 11409                           intcon	equ	0xFF2
 11410                           postinc0	equ	0xFEE
 11411                           wreg	equ	0xFE8
 11412                           postdec1	equ	0xFE5
 11413                           fsr1l	equ	0xFE1
 11414                           indf2	equ	0xFDF
 11415                           postinc2	equ	0xFDE
 11416                           postdec2	equ	0xFDD
 11417                           fsr2h	equ	0xFDA
 11418                           fsr2l	equ	0xFD9
 11419                           status	equ	0xFD8
 11420                           
 11421 ;; *************** function ___altoft *****************
 11422 ;; Defined at:
 11423 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\altoft.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;  c               4    8[BANK1 ] long 
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;  sign            1   17[BANK1 ] unsigned char 
 11428 ;;  exp             1   16[BANK1 ] unsigned char 
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  3    8[BANK1 ] float 
 11431 ;; Registers used:
 11432 ;;		wreg, status,2, status,0, cstack
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11438 ;;      Params:         0       0       4       0       0       0       0       0       0
 11439 ;;      Locals:         0       0       2       0       0       0       0       0       0
 11440 ;;      Temps:          0       0       4       0       0       0       0       0       0
 11441 ;;      Totals:         0       0      10       0       0       0       0       0       0
 11442 ;;Total ram usage:       10 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; Hardware stack levels required when called:   12
 11445 ;; This function calls:
 11446 ;;		___ftpack
 11447 ;; This function is called by:
 11448 ;;		_USART_Init
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           	psect	text40
 11453  005336                     __ptext40:
 11454                           	opt stack 0
 11455  005336                     ___altoft:
 11456                           	opt stack 17
 11457                           
 11458                           ;incstack = 0
 11459                           ;incstack = 0
 11460  005336  0101               	movlb	1	; () banked
 11461  005338  6F0C               	movwf	??___altoft& (0+255),b
 11462  00533A  0E00               	movlw	0
 11463  00533C  0101               	movlb	1	; () banked
 11464  00533E  0101               	movlb	1	; () banked
 11465  005340  6F11               	movwf	___altoft@sign& (0+255),b
 11466  005342  0101               	movlb	1	; () banked
 11467  005344  510C               	movf	??___altoft& (0+255),w,b
 11468  005346  0101               	movlb	1	; () banked
 11469  005348  6F0C               	movwf	??___altoft& (0+255),b
 11470  00534A  0E8E               	movlw	142
 11471  00534C  0101               	movlb	1	; () banked
 11472  00534E  0101               	movlb	1	; () banked
 11473  005350  6F10               	movwf	___altoft@exp& (0+255),b
 11474  005352  0101               	movlb	1	; () banked
 11475  005354  510C               	movf	??___altoft& (0+255),w,b
 11476                           
 11477                           ; BSR set to: 1
 11478  005356  0101               	movlb	1	; () banked
 11479  005358  0101               	movlb	1	; () banked
 11480  00535A  AF0B               	btfss	(___altoft@c+3)& (0+255),7,b
 11481  00535C  D026               	goto	l11264
 11482                           
 11483                           ; BSR set to: 1
 11484  00535E  0101               	movlb	1	; () banked
 11485  005360  0101               	movlb	1	; () banked
 11486  005362  1F0B               	comf	(___altoft@c+3)& (0+255),f,b
 11487  005364  0101               	movlb	1	; () banked
 11488  005366  1F0A               	comf	(___altoft@c+2)& (0+255),f,b
 11489  005368  0101               	movlb	1	; () banked
 11490  00536A  1F09               	comf	(___altoft@c+1)& (0+255),f,b
 11491  00536C  0101               	movlb	1	; () banked
 11492  00536E  6D08               	negf	___altoft@c& (0+255),b
 11493  005370  0E00               	movlw	0
 11494  005372  0101               	movlb	1	; () banked
 11495  005374  2309               	addwfc	(___altoft@c+1)& (0+255),f,b
 11496  005376  0101               	movlb	1	; () banked
 11497  005378  230A               	addwfc	(___altoft@c+2)& (0+255),f,b
 11498  00537A  0101               	movlb	1	; () banked
 11499  00537C  230B               	addwfc	(___altoft@c+3)& (0+255),f,b
 11500                           
 11501                           ; BSR set to: 1
 11502  00537E  0101               	movlb	1	; () banked
 11503  005380  6F0C               	movwf	??___altoft& (0+255),b
 11504  005382  0E01               	movlw	1
 11505  005384  0101               	movlb	1	; () banked
 11506  005386  0101               	movlb	1	; () banked
 11507  005388  6F11               	movwf	___altoft@sign& (0+255),b
 11508  00538A  0101               	movlb	1	; () banked
 11509  00538C  510C               	movf	??___altoft& (0+255),w,b
 11510  00538E  D00D               	goto	l11264
 11511  005390                     l11262:
 11512                           
 11513                           ; BSR set to: 1
 11514  005390  0101               	movlb	1	; () banked
 11515  005392  90D8               	bcf	status,0,c
 11516  005394  0101               	movlb	1	; () banked
 11517  005396  330B               	rrcf	(___altoft@c+3)& (0+255),f,b
 11518  005398  0101               	movlb	1	; () banked
 11519  00539A  330A               	rrcf	(___altoft@c+2)& (0+255),f,b
 11520  00539C  0101               	movlb	1	; () banked
 11521  00539E  3309               	rrcf	(___altoft@c+1)& (0+255),f,b
 11522  0053A0  0101               	movlb	1	; () banked
 11523  0053A2  3308               	rrcf	___altoft@c& (0+255),f,b
 11524  0053A4  0101               	movlb	1	; () banked
 11525  0053A6  0101               	movlb	1	; () banked
 11526  0053A8  2B10               	incf	___altoft@exp& (0+255),f,b
 11527  0053AA                     l11264:
 11528                           
 11529                           ; BSR set to: 1
 11530  0053AA  0E00               	movlw	0
 11531  0053AC  0101               	movlb	1	; () banked
 11532  0053AE  0101               	movlb	1	; () banked
 11533  0053B0  1508               	andwf	___altoft@c& (0+255),w,b
 11534  0053B2  0101               	movlb	1	; () banked
 11535  0053B4  6F0C               	movwf	??___altoft& (0+255),b
 11536  0053B6  0E00               	movlw	0
 11537  0053B8  0101               	movlb	1	; () banked
 11538  0053BA  0101               	movlb	1	; () banked
 11539  0053BC  1509               	andwf	(___altoft@c+1)& (0+255),w,b
 11540  0053BE  0101               	movlb	1	; () banked
 11541  0053C0  6F0D               	movwf	(??___altoft+1)& (0+255),b
 11542  0053C2  0E00               	movlw	0
 11543  0053C4  0101               	movlb	1	; () banked
 11544  0053C6  0101               	movlb	1	; () banked
 11545  0053C8  150A               	andwf	(___altoft@c+2)& (0+255),w,b
 11546  0053CA  0101               	movlb	1	; () banked
 11547  0053CC  6F0E               	movwf	(??___altoft+2)& (0+255),b
 11548  0053CE  0EFF               	movlw	255
 11549  0053D0  0101               	movlb	1	; () banked
 11550  0053D2  0101               	movlb	1	; () banked
 11551  0053D4  150B               	andwf	(___altoft@c+3)& (0+255),w,b
 11552  0053D6  0101               	movlb	1	; () banked
 11553  0053D8  6F0F               	movwf	(??___altoft+3)& (0+255),b
 11554  0053DA  0101               	movlb	1	; () banked
 11555  0053DC  510F               	movf	(??___altoft+3)& (0+255),w,b
 11556  0053DE  110C               	iorwf	??___altoft& (0+255),w,b
 11557  0053E0  110D               	iorwf	(??___altoft+1)& (0+255),w,b
 11558  0053E2  110E               	iorwf	(??___altoft+2)& (0+255),w,b
 11559  0053E4  A4D8               	btfss	status,2,c
 11560  0053E6  D7D4               	goto	l11262
 11561                           
 11562                           ; BSR set to: 1
 11563                           
 11564                           ; BSR set to: 1
 11565  0053E8  C108  F100         	movff	___altoft@c,?___ftpack
 11566  0053EC  C109  F101         	movff	___altoft@c+1,?___ftpack+1
 11567  0053F0  C10A  F102         	movff	___altoft@c+2,?___ftpack+2
 11568  0053F4  C110  F103         	movff	___altoft@exp,?___ftpack+3
 11569  0053F8  C111  F104         	movff	___altoft@sign,?___ftpack+4
 11570  0053FC  EC30  F022         	call	___ftpack	;wreg free
 11571  005400  C102  F10A         	movff	?___ftpack+2,?___altoft+2
 11572  005404  C101  F109         	movff	?___ftpack+1,?___altoft+1
 11573  005408  C100  F108         	movff	?___ftpack,?___altoft
 11574  00540C  0012               	return	
 11575  00540E                     __end_of___altoft:
 11576                           	opt stack 0
 11577                           tblptru	equ	0xFF8
 11578                           tblptrh	equ	0xFF7
 11579                           tblptrl	equ	0xFF6
 11580                           tablat	equ	0xFF5
 11581                           prodh	equ	0xFF4
 11582                           prodl	equ	0xFF3
 11583                           intcon	equ	0xFF2
 11584                           postinc0	equ	0xFEE
 11585                           wreg	equ	0xFE8
 11586                           postdec1	equ	0xFE5
 11587                           fsr1l	equ	0xFE1
 11588                           indf2	equ	0xFDF
 11589                           postinc2	equ	0xFDE
 11590                           postdec2	equ	0xFDD
 11591                           fsr2h	equ	0xFDA
 11592                           fsr2l	equ	0xFD9
 11593                           status	equ	0xFD8
 11594                           
 11595 ;; *************** function ___ftpack *****************
 11596 ;; Defined at:
 11597 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;  arg             3    0[BANK1 ] unsigned um
 11600 ;;  exp             1    3[BANK1 ] unsigned char 
 11601 ;;  sign            1    4[BANK1 ] unsigned char 
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;		None
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  3    0[BANK1 ] float 
 11606 ;; Registers used:
 11607 ;;		wreg, status,2, status,0
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11613 ;;      Params:         0       0       5       0       0       0       0       0       0
 11614 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11615 ;;      Temps:          0       0       3       0       0       0       0       0       0
 11616 ;;      Totals:         0       0       8       0       0       0       0       0       0
 11617 ;;Total ram usage:        8 bytes
 11618 ;; Hardware stack levels used:    1
 11619 ;; Hardware stack levels required when called:   11
 11620 ;; This function calls:
 11621 ;;		Nothing
 11622 ;; This function is called by:
 11623 ;;		___altoft
 11624 ;;		___awtoft
 11625 ;;		___ftadd
 11626 ;;		___ftdiv
 11627 ;;		___ftmul
 11628 ;;		___lltoft
 11629 ;; This function uses a non-reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text41
 11633  004460                     __ptext41:
 11634                           	opt stack 0
 11635  004460                     ___ftpack:
 11636                           	opt stack 15
 11637                           
 11638                           ;incstack = 0
 11639                           ;incstack = 0
 11640  004460  0101               	movlb	1	; () banked
 11641  004462  0101               	movlb	1	; () banked
 11642  004464  5103               	movf	___ftpack@exp& (0+255),w,b
 11643  004466  B4D8               	btfsc	status,2,c
 11644  004468  D009               	goto	l11224
 11645                           
 11646                           ; BSR set to: 1
 11647  00446A  0101               	movlb	1	; () banked
 11648  00446C  0101               	movlb	1	; () banked
 11649  00446E  5100               	movf	___ftpack@arg& (0+255),w,b
 11650  004470  0101               	movlb	1	; () banked
 11651  004472  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 11652  004474  0101               	movlb	1	; () banked
 11653  004476  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 11654  004478  A4D8               	btfss	status,2,c
 11655  00447A  D018               	goto	l11230
 11656  00447C                     l11224:
 11657                           
 11658                           ; BSR set to: 1
 11659  00447C  0E00               	movlw	0
 11660  00447E  0101               	movlb	1	; () banked
 11661  004480  0101               	movlb	1	; () banked
 11662  004482  6F00               	movwf	?___ftpack& (0+255),b
 11663  004484  0E00               	movlw	0
 11664  004486  0101               	movlb	1	; () banked
 11665  004488  0101               	movlb	1	; () banked
 11666  00448A  6F01               	movwf	(?___ftpack+1)& (0+255),b
 11667  00448C  0E00               	movlw	0
 11668  00448E  0101               	movlb	1	; () banked
 11669  004490  0101               	movlb	1	; () banked
 11670  004492  6F02               	movwf	(?___ftpack+2)& (0+255),b
 11671  004494  D091               	goto	l716
 11672  004496                     l11228:
 11673                           
 11674                           ; BSR set to: 1
 11675  004496  0101               	movlb	1	; () banked
 11676  004498  0101               	movlb	1	; () banked
 11677  00449A  2B03               	incf	___ftpack@exp& (0+255),f,b
 11678  00449C  0101               	movlb	1	; () banked
 11679  00449E  90D8               	bcf	status,0,c
 11680  0044A0  0101               	movlb	1	; () banked
 11681  0044A2  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11682  0044A4  0101               	movlb	1	; () banked
 11683  0044A6  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11684  0044A8  0101               	movlb	1	; () banked
 11685  0044AA  3300               	rrcf	___ftpack@arg& (0+255),f,b
 11686  0044AC                     l11230:
 11687                           
 11688                           ; BSR set to: 1
 11689  0044AC  0E00               	movlw	0
 11690  0044AE  0101               	movlb	1	; () banked
 11691  0044B0  0101               	movlb	1	; () banked
 11692  0044B2  1500               	andwf	___ftpack@arg& (0+255),w,b
 11693  0044B4  0101               	movlb	1	; () banked
 11694  0044B6  6F05               	movwf	??___ftpack& (0+255),b
 11695  0044B8  0E00               	movlw	0
 11696  0044BA  0101               	movlb	1	; () banked
 11697  0044BC  0101               	movlb	1	; () banked
 11698  0044BE  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11699  0044C0  0101               	movlb	1	; () banked
 11700  0044C2  6F06               	movwf	(??___ftpack+1)& (0+255),b
 11701  0044C4  0EFE               	movlw	254
 11702  0044C6  0101               	movlb	1	; () banked
 11703  0044C8  0101               	movlb	1	; () banked
 11704  0044CA  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11705  0044CC  0101               	movlb	1	; () banked
 11706  0044CE  6F07               	movwf	(??___ftpack+2)& (0+255),b
 11707  0044D0  0101               	movlb	1	; () banked
 11708  0044D2  5105               	movf	??___ftpack& (0+255),w,b
 11709  0044D4  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 11710  0044D6  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 11711  0044D8  B4D8               	btfsc	status,2,c
 11712  0044DA  D018               	goto	l11236
 11713  0044DC  D7DC               	goto	l11228
 11714  0044DE                     l11232:
 11715                           
 11716                           ; BSR set to: 1
 11717  0044DE  0101               	movlb	1	; () banked
 11718  0044E0  0101               	movlb	1	; () banked
 11719  0044E2  2B03               	incf	___ftpack@exp& (0+255),f,b
 11720                           
 11721                           ; BSR set to: 1
 11722  0044E4  0E01               	movlw	1
 11723  0044E6  0101               	movlb	1	; () banked
 11724  0044E8  0101               	movlb	1	; () banked
 11725  0044EA  2700               	addwf	___ftpack@arg& (0+255),f,b
 11726  0044EC  0E00               	movlw	0
 11727  0044EE  0101               	movlb	1	; () banked
 11728  0044F0  0101               	movlb	1	; () banked
 11729  0044F2  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 11730  0044F4  0E00               	movlw	0
 11731  0044F6  0101               	movlb	1	; () banked
 11732  0044F8  0101               	movlb	1	; () banked
 11733  0044FA  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 11734  0044FC  0101               	movlb	1	; () banked
 11735  0044FE  90D8               	bcf	status,0,c
 11736  004500  0101               	movlb	1	; () banked
 11737  004502  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11738  004504  0101               	movlb	1	; () banked
 11739  004506  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11740  004508  0101               	movlb	1	; () banked
 11741  00450A  3300               	rrcf	___ftpack@arg& (0+255),f,b
 11742  00450C                     l11236:
 11743                           
 11744                           ; BSR set to: 1
 11745  00450C  0E00               	movlw	0
 11746  00450E  0101               	movlb	1	; () banked
 11747  004510  0101               	movlb	1	; () banked
 11748  004512  1500               	andwf	___ftpack@arg& (0+255),w,b
 11749  004514  0101               	movlb	1	; () banked
 11750  004516  6F05               	movwf	??___ftpack& (0+255),b
 11751  004518  0E00               	movlw	0
 11752  00451A  0101               	movlb	1	; () banked
 11753  00451C  0101               	movlb	1	; () banked
 11754  00451E  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11755  004520  0101               	movlb	1	; () banked
 11756  004522  6F06               	movwf	(??___ftpack+1)& (0+255),b
 11757  004524  0EFF               	movlw	255
 11758  004526  0101               	movlb	1	; () banked
 11759  004528  0101               	movlb	1	; () banked
 11760  00452A  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11761  00452C  0101               	movlb	1	; () banked
 11762  00452E  6F07               	movwf	(??___ftpack+2)& (0+255),b
 11763  004530  0101               	movlb	1	; () banked
 11764  004532  5105               	movf	??___ftpack& (0+255),w,b
 11765  004534  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 11766  004536  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 11767  004538  B4D8               	btfsc	status,2,c
 11768  00453A  D00C               	goto	l11240
 11769  00453C  D7D0               	goto	l11232
 11770  00453E                     l11238:
 11771                           
 11772                           ; BSR set to: 1
 11773  00453E  0101               	movlb	1	; () banked
 11774  004540  0101               	movlb	1	; () banked
 11775  004542  0703               	decf	___ftpack@exp& (0+255),f,b
 11776  004544  0101               	movlb	1	; () banked
 11777  004546  90D8               	bcf	status,0,c
 11778  004548  0101               	movlb	1	; () banked
 11779  00454A  3700               	rlcf	___ftpack@arg& (0+255),f,b
 11780  00454C  0101               	movlb	1	; () banked
 11781  00454E  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 11782  004550  0101               	movlb	1	; () banked
 11783  004552  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 11784  004554                     l11240:
 11785                           
 11786                           ; BSR set to: 1
 11787  004554  0101               	movlb	1	; () banked
 11788  004556  0101               	movlb	1	; () banked
 11789  004558  AF01               	btfss	(___ftpack@arg+1)& (0+255),7,b
 11790  00455A  D7F1               	goto	l11238
 11791                           
 11792                           ; BSR set to: 1
 11793  00455C  0101               	movlb	1	; () banked
 11794  00455E  0101               	movlb	1	; () banked
 11795  004560  B103               	btfsc	___ftpack@exp& (0+255),0,b
 11796  004562  D003               	goto	l11244
 11797                           
 11798                           ; BSR set to: 1
 11799  004564  0101               	movlb	1	; () banked
 11800  004566  0101               	movlb	1	; () banked
 11801  004568  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 11802  00456A                     l11244:
 11803                           
 11804                           ; BSR set to: 1
 11805  00456A  0101               	movlb	1	; () banked
 11806  00456C  90D8               	bcf	status,0,c
 11807  00456E  3303               	rrcf	___ftpack@exp& (0+255),f,b
 11808  004570  0101               	movlb	1	; () banked
 11809  004572  0101               	movlb	1	; () banked
 11810  004574  5103               	movf	___ftpack@exp& (0+255),w,b
 11811  004576  0101               	movlb	1	; () banked
 11812  004578  6F07               	movwf	(??___ftpack+2)& (0+255),b
 11813  00457A  6B06               	clrf	(??___ftpack+1)& (0+255),b
 11814  00457C  6B05               	clrf	??___ftpack& (0+255),b
 11815  00457E  0101               	movlb	1	; () banked
 11816  004580  5105               	movf	??___ftpack& (0+255),w,b
 11817  004582  0101               	movlb	1	; () banked
 11818  004584  0101               	movlb	1	; () banked
 11819  004586  1300               	iorwf	___ftpack@arg& (0+255),f,b
 11820  004588  0101               	movlb	1	; () banked
 11821  00458A  5106               	movf	(??___ftpack+1)& (0+255),w,b
 11822  00458C  0101               	movlb	1	; () banked
 11823  00458E  0101               	movlb	1	; () banked
 11824  004590  1301               	iorwf	(___ftpack@arg+1)& (0+255),f,b
 11825  004592  0101               	movlb	1	; () banked
 11826  004594  5107               	movf	(??___ftpack+2)& (0+255),w,b
 11827  004596  0101               	movlb	1	; () banked
 11828  004598  0101               	movlb	1	; () banked
 11829  00459A  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11830                           
 11831                           ; BSR set to: 1
 11832  00459C  0101               	movlb	1	; () banked
 11833  00459E  0101               	movlb	1	; () banked
 11834  0045A0  5104               	movf	___ftpack@sign& (0+255),w,b
 11835  0045A2  B4D8               	btfsc	status,2,c
 11836  0045A4  D003               	goto	l11250
 11837                           
 11838                           ; BSR set to: 1
 11839  0045A6  0101               	movlb	1	; () banked
 11840  0045A8  0101               	movlb	1	; () banked
 11841  0045AA  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11842  0045AC                     l11250:
 11843                           
 11844                           ; BSR set to: 1
 11845  0045AC  C100  F100         	movff	___ftpack@arg,?___ftpack
 11846  0045B0  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 11847  0045B4  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 11848  0045B8                     l716:
 11849                           
 11850                           ; BSR set to: 1
 11851  0045B8  0012               	return	
 11852  0045BA                     __end_of___ftpack:
 11853                           	opt stack 0
 11854                           tblptru	equ	0xFF8
 11855                           tblptrh	equ	0xFF7
 11856                           tblptrl	equ	0xFF6
 11857                           tablat	equ	0xFF5
 11858                           prodh	equ	0xFF4
 11859                           prodl	equ	0xFF3
 11860                           intcon	equ	0xFF2
 11861                           postinc0	equ	0xFEE
 11862                           wreg	equ	0xFE8
 11863                           postdec1	equ	0xFE5
 11864                           fsr1l	equ	0xFE1
 11865                           indf2	equ	0xFDF
 11866                           postinc2	equ	0xFDE
 11867                           postdec2	equ	0xFDD
 11868                           fsr2h	equ	0xFDA
 11869                           fsr2l	equ	0xFD9
 11870                           status	equ	0xFD8
 11871                           
 11872 ;; *************** function _Init_AD *****************
 11873 ;; Defined at:
 11874 ;;		line 321 in file "main.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;		None
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;		None               void
 11881 ;; Registers used:
 11882 ;;		wreg, status,2
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11891 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11892 ;;Total ram usage:        0 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:   11
 11895 ;; This function calls:
 11896 ;;		Nothing
 11897 ;; This function is called by:
 11898 ;;		_main
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           	psect	text42
 11903  00671E                     __ptext42:
 11904                           	opt stack 0
 11905  00671E                     _Init_AD:
 11906                           	opt stack 19
 11907                           
 11908                           ;main.c: 322: TRISA0 = 1;
 11909                           
 11910                           ; BSR set to: 1
 11911                           ;incstack = 0
 11912                           ;incstack = 0
 11913  00671E  8092               	bsf	3986,0,c	;volatile
 11914                           
 11915                           ;main.c: 323: ADCON1 = 0x0e;
 11916  006720  0E0E               	movlw	14
 11917  006722  6EC1               	movwf	4033,c	;volatile
 11918                           
 11919                           ;main.c: 324: ADCON2 = 0x92;
 11920  006724  0E92               	movlw	146
 11921  006726  6EC0               	movwf	4032,c	;volatile
 11922                           
 11923                           ;main.c: 325: ADRESH=0;
 11924  006728  0E00               	movlw	0
 11925  00672A  6EC4               	movwf	4036,c	;volatile
 11926                           
 11927                           ;main.c: 326: ADRESL=0;
 11928  00672C  0E00               	movlw	0
 11929  00672E  6EC3               	movwf	4035,c	;volatile
 11930  006730  0012               	return	
 11931  006732                     __end_of_Init_AD:
 11932                           	opt stack 0
 11933                           tblptru	equ	0xFF8
 11934                           tblptrh	equ	0xFF7
 11935                           tblptrl	equ	0xFF6
 11936                           tablat	equ	0xFF5
 11937                           prodh	equ	0xFF4
 11938                           prodl	equ	0xFF3
 11939                           intcon	equ	0xFF2
 11940                           postinc0	equ	0xFEE
 11941                           wreg	equ	0xFE8
 11942                           postdec1	equ	0xFE5
 11943                           fsr1l	equ	0xFE1
 11944                           indf2	equ	0xFDF
 11945                           postinc2	equ	0xFDE
 11946                           postdec2	equ	0xFDD
 11947                           fsr2h	equ	0xFDA
 11948                           fsr2l	equ	0xFD9
 11949                           status	equ	0xFD8
 11950                           
 11951 ;; *************** function _Timer0_Init *****************
 11952 ;; Defined at:
 11953 ;;		line 152 in file "main.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;		None
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;		None
 11958 ;; Return value:  Size  Location     Type
 11959 ;;		None               void
 11960 ;; Registers used:
 11961 ;;		wreg, status,2
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11967 ;;      Params:         0       0       0       0       0       0       0       0       0
 11968 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11970 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11971 ;;Total ram usage:        0 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:   11
 11974 ;; This function calls:
 11975 ;;		Nothing
 11976 ;; This function is called by:
 11977 ;;		_main
 11978 ;; This function uses a non-reentrant model
 11979 ;;
 11980                           
 11981                           	psect	text43
 11982  006708                     __ptext43:
 11983                           	opt stack 0
 11984  006708                     _Timer0_Init:
 11985                           	opt stack 19
 11986                           
 11987                           ;main.c: 153: TMR0H = 0xD8;
 11988                           
 11989                           ;incstack = 0
 11990                           ;incstack = 0
 11991  006708  0ED8               	movlw	216
 11992  00670A  6ED7               	movwf	4055,c	;volatile
 11993                           
 11994                           ;main.c: 154: TMR0L = 0xF0;
 11995  00670C  0EF0               	movlw	240
 11996  00670E  6ED6               	movwf	4054,c	;volatile
 11997                           
 11998                           ;main.c: 155: T0CONbits.T08BIT=0;
 11999  006710  9CD5               	bcf	4053,6,c	;volatile
 12000                           
 12001                           ;main.c: 156: T0CONbits.T0PS0=1;
 12002  006712  80D5               	bsf	4053,0,c	;volatile
 12003                           
 12004                           ;main.c: 157: T0CONbits.T0PS1=1;
 12005  006714  82D5               	bsf	4053,1,c	;volatile
 12006                           
 12007                           ;main.c: 158: T0CONbits.T0PS2=0;
 12008  006716  94D5               	bcf	4053,2,c	;volatile
 12009                           
 12010                           ;main.c: 161: T0CONbits.T0CS=0;
 12011  006718  9AD5               	bcf	4053,5,c	;volatile
 12012                           
 12013                           ;main.c: 162: T0CONbits.TMR0ON=1;
 12014  00671A  8ED5               	bsf	4053,7,c	;volatile
 12015  00671C  0012               	return	
 12016  00671E                     __end_of_Timer0_Init:
 12017                           	opt stack 0
 12018                           tblptru	equ	0xFF8
 12019                           tblptrh	equ	0xFF7
 12020                           tblptrl	equ	0xFF6
 12021                           tablat	equ	0xFF5
 12022                           prodh	equ	0xFF4
 12023                           prodl	equ	0xFF3
 12024                           intcon	equ	0xFF2
 12025                           postinc0	equ	0xFEE
 12026                           wreg	equ	0xFE8
 12027                           postdec1	equ	0xFE5
 12028                           fsr1l	equ	0xFE1
 12029                           indf2	equ	0xFDF
 12030                           postinc2	equ	0xFDE
 12031                           postdec2	equ	0xFDD
 12032                           fsr2h	equ	0xFDA
 12033                           fsr2l	equ	0xFD9
 12034                           status	equ	0xFD8
 12035                           
 12036 ;; *************** function _Timer1_Init *****************
 12037 ;; Defined at:
 12038 ;;		line 278 in file "main.c"
 12039 ;; Parameters:    Size  Location     Type
 12040 ;;		None
 12041 ;; Auto vars:     Size  Location     Type
 12042 ;;		None
 12043 ;; Return value:  Size  Location     Type
 12044 ;;		None               void
 12045 ;; Registers used:
 12046 ;;		wreg, status,2
 12047 ;; Tracked objects:
 12048 ;;		On entry : 0/0
 12049 ;;		On exit  : 0/0
 12050 ;;		Unchanged: 0/0
 12051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12052 ;;      Params:         0       0       0       0       0       0       0       0       0
 12053 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12054 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12055 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12056 ;;Total ram usage:        0 bytes
 12057 ;; Hardware stack levels used:    1
 12058 ;; Hardware stack levels required when called:   11
 12059 ;; This function calls:
 12060 ;;		Nothing
 12061 ;; This function is called by:
 12062 ;;		_main
 12063 ;; This function uses a non-reentrant model
 12064 ;;
 12065                           
 12066                           	psect	text44
 12067  006732                     __ptext44:
 12068                           	opt stack 0
 12069  006732                     _Timer1_Init:
 12070                           	opt stack 19
 12071                           
 12072                           ;main.c: 279: T1CONbits.RD16=1;
 12073                           
 12074                           ;incstack = 0
 12075                           ;incstack = 0
 12076  006732  8ECD               	bsf	4045,7,c	;volatile
 12077                           
 12078                           ;main.c: 280: T1CONbits.T1CKPS=0b00;
 12079  006734  0ECF               	movlw	-49
 12080  006736  16CD               	andwf	4045,f,c	;volatile
 12081                           
 12082                           ;main.c: 281: T1CONbits.TMR1CS=0;
 12083  006738  92CD               	bcf	4045,1,c	;volatile
 12084                           
 12085                           ;main.c: 282: TMR1=0;
 12086  00673A  0E00               	movlw	0
 12087  00673C  6ECF               	movwf	4047,c	;volatile
 12088  00673E  0E00               	movlw	0
 12089  006740  6ECE               	movwf	4046,c	;volatile
 12090                           
 12091                           ;main.c: 283: TMR1ON=0;
 12092  006742  90CD               	bcf	4045,0,c	;volatile
 12093  006744  0012               	return	
 12094  006746                     __end_of_Timer1_Init:
 12095                           	opt stack 0
 12096                           tblptru	equ	0xFF8
 12097                           tblptrh	equ	0xFF7
 12098                           tblptrl	equ	0xFF6
 12099                           tablat	equ	0xFF5
 12100                           prodh	equ	0xFF4
 12101                           prodl	equ	0xFF3
 12102                           intcon	equ	0xFF2
 12103                           postinc0	equ	0xFEE
 12104                           wreg	equ	0xFE8
 12105                           postdec1	equ	0xFE5
 12106                           fsr1l	equ	0xFE1
 12107                           indf2	equ	0xFDF
 12108                           postinc2	equ	0xFDE
 12109                           postdec2	equ	0xFDD
 12110                           fsr2h	equ	0xFDA
 12111                           fsr2l	equ	0xFD9
 12112                           status	equ	0xFD8
 12113                           
 12114 ;; *************** function _Configuracion_Registros *****************
 12115 ;; Defined at:
 12116 ;;		line 267 in file "main.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;		None
 12119 ;; Auto vars:     Size  Location     Type
 12120 ;;		None
 12121 ;; Return value:  Size  Location     Type
 12122 ;;		None               void
 12123 ;; Registers used:
 12124 ;;		wreg, status,2, status,0
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12130 ;;      Params:         0       0       0       0       0       0       0       0       0
 12131 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12132 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12133 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12134 ;;Total ram usage:        0 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; Hardware stack levels required when called:   11
 12137 ;; This function calls:
 12138 ;;		Nothing
 12139 ;; This function is called by:
 12140 ;;		_main
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text45
 12145  006746                     __ptext45:
 12146                           	opt stack 0
 12147  006746                     _Configuracion_Registros:
 12148                           	opt stack 19
 12149                           
 12150                           ;main.c: 268: ADCON1bits.PCFG=0b1111;
 12151                           
 12152                           ;incstack = 0
 12153                           ;incstack = 0
 12154  006746  80C1               	bsf	4033,0,c	;volatile
 12155  006748  82C1               	bsf	4033,1,c	;volatile
 12156  00674A  84C1               	bsf	4033,2,c	;volatile
 12157  00674C  86C1               	bsf	4033,3,c	;volatile
 12158                           
 12159                           ;main.c: 269: TRISA&=~(1<<1);
 12160  00674E  9292               	bcf	3986,1,c	;volatile
 12161                           
 12162                           ;main.c: 270: TRISA|=(1<<2);
 12163  006750  8492               	bsf	3986,2,c	;volatile
 12164                           
 12165                           ;main.c: 272: TRISB = 0;
 12166  006752  0E00               	movlw	0
 12167  006754  6E93               	movwf	3987,c	;volatile
 12168  006756  0012               	return	
 12169  006758                     __end_of_Configuracion_Registros:
 12170                           	opt stack 0
 12171                           tblptru	equ	0xFF8
 12172                           tblptrh	equ	0xFF7
 12173                           tblptrl	equ	0xFF6
 12174                           tablat	equ	0xFF5
 12175                           prodh	equ	0xFF4
 12176                           prodl	equ	0xFF3
 12177                           intcon	equ	0xFF2
 12178                           postinc0	equ	0xFEE
 12179                           wreg	equ	0xFE8
 12180                           postdec1	equ	0xFE5
 12181                           fsr1l	equ	0xFE1
 12182                           indf2	equ	0xFDF
 12183                           postinc2	equ	0xFDE
 12184                           postdec2	equ	0xFDD
 12185                           fsr2h	equ	0xFDA
 12186                           fsr2l	equ	0xFD9
 12187                           status	equ	0xFD8
 12188                           
 12189 ;; *************** function _lcd_init *****************
 12190 ;; Defined at:
 12191 ;;		line 95 in file "lcd.h"
 12192 ;; Parameters:    Size  Location     Type
 12193 ;;		None
 12194 ;; Auto vars:     Size  Location     Type
 12195 ;;		None
 12196 ;; Return value:  Size  Location     Type
 12197 ;;		None               void
 12198 ;; Registers used:
 12199 ;;		wreg, status,2, cstack
 12200 ;; Tracked objects:
 12201 ;;		On entry : 0/0
 12202 ;;		On exit  : 0/0
 12203 ;;		Unchanged: 0/0
 12204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12205 ;;      Params:         0       0       0       0       0       0       0       0       0
 12206 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12207 ;;      Temps:          0       0       1       0       0       0       0       0       0
 12208 ;;      Totals:         0       0       1       0       0       0       0       0       0
 12209 ;;Total ram usage:        1 bytes
 12210 ;; Hardware stack levels used:    1
 12211 ;; Hardware stack levels required when called:   13
 12212 ;; This function calls:
 12213 ;;		_Lcd_Port
 12214 ;;		_Lcd_Cmd
 12215 ;; This function is called by:
 12216 ;;		_main
 12217 ;; This function uses a non-reentrant model
 12218 ;;
 12219                           
 12220                           	psect	text46
 12221  004A5E                     __ptext46:
 12222                           	opt stack 0
 12223  004A5E                     _lcd_init:
 12224                           	opt stack 17
 12225                           
 12226                           ;lcd.h: 96: TRISD=0x00;
 12227                           
 12228                           ;incstack = 0
 12229                           ;incstack = 0
 12230  004A5E  0E00               	movlw	0
 12231  004A60  6E95               	movwf	3989,c	;volatile
 12232                           
 12233                           ;lcd.h: 97: Lcd_Port(0x00);
 12234  004A62  0101               	movlb	1	; () banked
 12235  004A64  6F03               	movwf	??_lcd_init& (0+255),b
 12236  004A66  0E00               	movlw	0
 12237  004A68  0101               	movlb	1	; () banked
 12238  004A6A  0101               	movlb	1	; () banked
 12239  004A6C  6F00               	movwf	?_Lcd_Port& (0+255),b
 12240  004A6E  0101               	movlb	1	; () banked
 12241  004A70  5103               	movf	??_lcd_init& (0+255),w,b
 12242  004A72  EC46  F032         	call	_Lcd_Port	;wreg free
 12243                           
 12244                           ;lcd.h: 98: _delay((unsigned long)((20)*(8000000/4000.0)));
 12245  004A76  0E34               	movlw	52
 12246  004A78  0101               	movlb	1	; () banked
 12247  004A7A  6F03               	movwf	??_lcd_init& (0+255),b
 12248  004A7C  0EF1               	movlw	241
 12249  004A7E                     u11927:
 12250  004A7E  2EE8               	decfsz	wreg,f,c
 12251  004A80  D7FE               	goto	u11927
 12252  004A82  2F03               	decfsz	??_lcd_init& (0+255),f,b
 12253  004A84  D7FC               	goto	u11927
 12254  004A86  D000               	nop2	
 12255                           
 12256                           ;lcd.h: 99: Lcd_Cmd(0x03);
 12257  004A88  0101               	movlb	1	; () banked
 12258  004A8A  6F03               	movwf	??_lcd_init& (0+255),b
 12259  004A8C  0E03               	movlw	3
 12260  004A8E  0101               	movlb	1	; () banked
 12261  004A90  0101               	movlb	1	; () banked
 12262  004A92  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12263  004A94  0101               	movlb	1	; () banked
 12264  004A96  5103               	movf	??_lcd_init& (0+255),w,b
 12265  004A98  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12266                           
 12267                           ;lcd.h: 100: _delay((unsigned long)((5)*(8000000/4000.0)));
 12268  004A9C  0E0D               	movlw	13
 12269  004A9E  0101               	movlb	1	; () banked
 12270  004AA0  6F03               	movwf	??_lcd_init& (0+255),b
 12271  004AA2  0EFB               	movlw	251
 12272  004AA4                     u11937:
 12273  004AA4  2EE8               	decfsz	wreg,f,c
 12274  004AA6  D7FE               	goto	u11937
 12275  004AA8  2F03               	decfsz	??_lcd_init& (0+255),f,b
 12276  004AAA  D7FC               	goto	u11937
 12277  004AAC  D000               	nop2	
 12278                           
 12279                           ;lcd.h: 101: Lcd_Cmd(0x03);
 12280  004AAE  0101               	movlb	1	; () banked
 12281  004AB0  6F03               	movwf	??_lcd_init& (0+255),b
 12282  004AB2  0E03               	movlw	3
 12283  004AB4  0101               	movlb	1	; () banked
 12284  004AB6  0101               	movlb	1	; () banked
 12285  004AB8  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12286  004ABA  0101               	movlb	1	; () banked
 12287  004ABC  5103               	movf	??_lcd_init& (0+255),w,b
 12288  004ABE  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12289                           
 12290                           ;lcd.h: 102: _delay((unsigned long)((11)*(8000000/4000.0)));
 12291  004AC2  0E1D               	movlw	29
 12292  004AC4  0101               	movlb	1	; () banked
 12293  004AC6  6F03               	movwf	??_lcd_init& (0+255),b
 12294  004AC8  0E91               	movlw	145
 12295  004ACA                     u11947:
 12296  004ACA  2EE8               	decfsz	wreg,f,c
 12297  004ACC  D7FE               	goto	u11947
 12298  004ACE  2F03               	decfsz	??_lcd_init& (0+255),f,b
 12299  004AD0  D7FC               	goto	u11947
 12300                           
 12301                           ;lcd.h: 103: Lcd_Cmd(0x03);
 12302  004AD2  0101               	movlb	1	; () banked
 12303  004AD4  6F03               	movwf	??_lcd_init& (0+255),b
 12304  004AD6  0E03               	movlw	3
 12305  004AD8  0101               	movlb	1	; () banked
 12306  004ADA  0101               	movlb	1	; () banked
 12307  004ADC  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12308  004ADE  0101               	movlb	1	; () banked
 12309  004AE0  5103               	movf	??_lcd_init& (0+255),w,b
 12310  004AE2  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12311                           
 12312                           ;lcd.h: 105: Lcd_Cmd(0x02);
 12313  004AE6  0101               	movlb	1	; () banked
 12314  004AE8  6F03               	movwf	??_lcd_init& (0+255),b
 12315  004AEA  0E02               	movlw	2
 12316  004AEC  0101               	movlb	1	; () banked
 12317  004AEE  0101               	movlb	1	; () banked
 12318  004AF0  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12319  004AF2  0101               	movlb	1	; () banked
 12320  004AF4  5103               	movf	??_lcd_init& (0+255),w,b
 12321  004AF6  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12322                           
 12323                           ;lcd.h: 106: Lcd_Cmd(0x02);
 12324  004AFA  0101               	movlb	1	; () banked
 12325  004AFC  6F03               	movwf	??_lcd_init& (0+255),b
 12326  004AFE  0E02               	movlw	2
 12327  004B00  0101               	movlb	1	; () banked
 12328  004B02  0101               	movlb	1	; () banked
 12329  004B04  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12330  004B06  0101               	movlb	1	; () banked
 12331  004B08  5103               	movf	??_lcd_init& (0+255),w,b
 12332  004B0A  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12333                           
 12334                           ;lcd.h: 107: Lcd_Cmd(0x08);
 12335  004B0E  0101               	movlb	1	; () banked
 12336  004B10  6F03               	movwf	??_lcd_init& (0+255),b
 12337  004B12  0E08               	movlw	8
 12338  004B14  0101               	movlb	1	; () banked
 12339  004B16  0101               	movlb	1	; () banked
 12340  004B18  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12341  004B1A  0101               	movlb	1	; () banked
 12342  004B1C  5103               	movf	??_lcd_init& (0+255),w,b
 12343  004B1E  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12344                           
 12345                           ;lcd.h: 108: Lcd_Cmd(0x00);
 12346  004B22  0101               	movlb	1	; () banked
 12347  004B24  6F03               	movwf	??_lcd_init& (0+255),b
 12348  004B26  0E00               	movlw	0
 12349  004B28  0101               	movlb	1	; () banked
 12350  004B2A  0101               	movlb	1	; () banked
 12351  004B2C  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12352  004B2E  0101               	movlb	1	; () banked
 12353  004B30  5103               	movf	??_lcd_init& (0+255),w,b
 12354  004B32  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12355                           
 12356                           ;lcd.h: 109: Lcd_Cmd(0x0C);
 12357  004B36  0101               	movlb	1	; () banked
 12358  004B38  6F03               	movwf	??_lcd_init& (0+255),b
 12359  004B3A  0E0C               	movlw	12
 12360  004B3C  0101               	movlb	1	; () banked
 12361  004B3E  0101               	movlb	1	; () banked
 12362  004B40  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12363  004B42  0101               	movlb	1	; () banked
 12364  004B44  5103               	movf	??_lcd_init& (0+255),w,b
 12365  004B46  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12366                           
 12367                           ;lcd.h: 110: Lcd_Cmd(0x00);
 12368  004B4A  0101               	movlb	1	; () banked
 12369  004B4C  6F03               	movwf	??_lcd_init& (0+255),b
 12370  004B4E  0E00               	movlw	0
 12371  004B50  0101               	movlb	1	; () banked
 12372  004B52  0101               	movlb	1	; () banked
 12373  004B54  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12374  004B56  0101               	movlb	1	; () banked
 12375  004B58  5103               	movf	??_lcd_init& (0+255),w,b
 12376  004B5A  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12377                           
 12378                           ;lcd.h: 111: Lcd_Cmd(0x06);
 12379  004B5E  0101               	movlb	1	; () banked
 12380  004B60  6F03               	movwf	??_lcd_init& (0+255),b
 12381  004B62  0E06               	movlw	6
 12382  004B64  0101               	movlb	1	; () banked
 12383  004B66  0101               	movlb	1	; () banked
 12384  004B68  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 12385  004B6A  0101               	movlb	1	; () banked
 12386  004B6C  5103               	movf	??_lcd_init& (0+255),w,b
 12387  004B6E  EC63  F033         	call	_Lcd_Cmd	;wreg free
 12388  004B72  0012               	return	
 12389  004B74                     __end_of_lcd_init:
 12390                           	opt stack 0
 12391                           tblptru	equ	0xFF8
 12392                           tblptrh	equ	0xFF7
 12393                           tblptrl	equ	0xFF6
 12394                           tablat	equ	0xFF5
 12395                           prodh	equ	0xFF4
 12396                           prodl	equ	0xFF3
 12397                           intcon	equ	0xFF2
 12398                           postinc0	equ	0xFEE
 12399                           wreg	equ	0xFE8
 12400                           postdec1	equ	0xFE5
 12401                           fsr1l	equ	0xFE1
 12402                           indf2	equ	0xFDF
 12403                           postinc2	equ	0xFDE
 12404                           postdec2	equ	0xFDD
 12405                           fsr2h	equ	0xFDA
 12406                           fsr2l	equ	0xFD9
 12407                           status	equ	0xFD8
 12408                           
 12409 ;; *************** function _Lcd_Cmd *****************
 12410 ;; Defined at:
 12411 ;;		line 53 in file "lcd.h"
 12412 ;; Parameters:    Size  Location     Type
 12413 ;;  a               1    1[BANK1 ] unsigned char 
 12414 ;; Auto vars:     Size  Location     Type
 12415 ;;		None
 12416 ;; Return value:  Size  Location     Type
 12417 ;;		None               void
 12418 ;; Registers used:
 12419 ;;		wreg, cstack
 12420 ;; Tracked objects:
 12421 ;;		On entry : 0/0
 12422 ;;		On exit  : 0/0
 12423 ;;		Unchanged: 0/0
 12424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12425 ;;      Params:         0       0       1       0       0       0       0       0       0
 12426 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12427 ;;      Temps:          0       0       1       0       0       0       0       0       0
 12428 ;;      Totals:         0       0       2       0       0       0       0       0       0
 12429 ;;Total ram usage:        2 bytes
 12430 ;; Hardware stack levels used:    1
 12431 ;; Hardware stack levels required when called:   12
 12432 ;; This function calls:
 12433 ;;		_Lcd_Port
 12434 ;; This function is called by:
 12435 ;;		_lcd_gotoxy
 12436 ;;		_lcd_init
 12437 ;;		_lcd_clear
 12438 ;;		_lcd_shift_right
 12439 ;;		_lcd_shift_left
 12440 ;; This function uses a non-reentrant model
 12441 ;;
 12442                           
 12443                           	psect	text47
 12444  0066C6                     __ptext47:
 12445                           	opt stack 0
 12446  0066C6                     _Lcd_Cmd:
 12447                           	opt stack 15
 12448                           
 12449                           ;lcd.h: 54: RD2 = 0;
 12450                           
 12451                           ;incstack = 0
 12452                           ;incstack = 0
 12453  0066C6  9483               	bcf	3971,2,c	;volatile
 12454                           
 12455                           ;lcd.h: 55: Lcd_Port(a);
 12456  0066C8  C101  F100         	movff	Lcd_Cmd@a,?_Lcd_Port
 12457  0066CC  EC46  F032         	call	_Lcd_Port	;wreg free
 12458                           
 12459                           ;lcd.h: 56: RD3 = 1;
 12460  0066D0  8683               	bsf	3971,3,c	;volatile
 12461                           
 12462                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 12463  0066D2  0E0B               	movlw	11
 12464  0066D4  0101               	movlb	1	; () banked
 12465  0066D6  6F02               	movwf	??_Lcd_Cmd& (0+255),b
 12466  0066D8  0E62               	movlw	98
 12467  0066DA                     u11957:
 12468  0066DA  2EE8               	decfsz	wreg,f,c
 12469  0066DC  D7FE               	goto	u11957
 12470  0066DE  2F02               	decfsz	??_Lcd_Cmd& (0+255),f,b
 12471  0066E0  D7FC               	goto	u11957
 12472  0066E2  F000               	nop	
 12473                           
 12474                           ;lcd.h: 58: RD3 = 0;
 12475  0066E4  9683               	bcf	3971,3,c	;volatile
 12476  0066E6  0012               	return	
 12477  0066E8                     __end_of_Lcd_Cmd:
 12478                           	opt stack 0
 12479                           tblptru	equ	0xFF8
 12480                           tblptrh	equ	0xFF7
 12481                           tblptrl	equ	0xFF6
 12482                           tablat	equ	0xFF5
 12483                           prodh	equ	0xFF4
 12484                           prodl	equ	0xFF3
 12485                           intcon	equ	0xFF2
 12486                           postinc0	equ	0xFEE
 12487                           wreg	equ	0xFE8
 12488                           postdec1	equ	0xFE5
 12489                           fsr1l	equ	0xFE1
 12490                           indf2	equ	0xFDF
 12491                           postinc2	equ	0xFDE
 12492                           postdec2	equ	0xFDD
 12493                           fsr2h	equ	0xFDA
 12494                           fsr2l	equ	0xFD9
 12495                           status	equ	0xFD8
 12496                           
 12497 ;; *************** function _Lcd_Port *****************
 12498 ;; Defined at:
 12499 ;;		line 28 in file "lcd.h"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;  a               1    0[BANK1 ] unsigned char 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;		None
 12504 ;; Return value:  Size  Location     Type
 12505 ;;		None               void
 12506 ;; Registers used:
 12507 ;;		None
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12513 ;;      Params:         0       0       1       0       0       0       0       0       0
 12514 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12515 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12516 ;;      Totals:         0       0       1       0       0       0       0       0       0
 12517 ;;Total ram usage:        1 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:   11
 12520 ;; This function calls:
 12521 ;;		Nothing
 12522 ;; This function is called by:
 12523 ;;		_Lcd_Cmd
 12524 ;;		_lcd_init
 12525 ;;		_lcd_write_char
 12526 ;; This function uses a non-reentrant model
 12527 ;;
 12528                           
 12529                           	psect	text48
 12530  00648C                     __ptext48:
 12531                           	opt stack 0
 12532  00648C                     _Lcd_Port:
 12533                           	opt stack 15
 12534                           
 12535                           ;lcd.h: 29: if(a & 1)
 12536                           
 12537                           ;incstack = 0
 12538                           ;incstack = 0
 12539  00648C  0101               	movlb	1	; () banked
 12540  00648E  0101               	movlb	1	; () banked
 12541  006490  A100               	btfss	Lcd_Port@a& (0+255),0,b
 12542  006492  D002               	goto	l117
 12543                           
 12544                           ; BSR set to: 1
 12545                           ;lcd.h: 30: RD4 = 1;
 12546  006494  8883               	bsf	3971,4,c	;volatile
 12547  006496  D001               	goto	l118
 12548  006498                     l117:
 12549                           
 12550                           ; BSR set to: 1
 12551                           ;lcd.h: 31: else
 12552                           ;lcd.h: 32: RD4 = 0;
 12553  006498  9883               	bcf	3971,4,c	;volatile
 12554  00649A                     l118:
 12555                           
 12556                           ; BSR set to: 1
 12557                           ;lcd.h: 34: if(a & 2)
 12558  00649A  0101               	movlb	1	; () banked
 12559  00649C  0101               	movlb	1	; () banked
 12560  00649E  A300               	btfss	Lcd_Port@a& (0+255),1,b
 12561  0064A0  D002               	goto	l119
 12562                           
 12563                           ; BSR set to: 1
 12564                           ;lcd.h: 35: RD5 = 1;
 12565  0064A2  8A83               	bsf	3971,5,c	;volatile
 12566  0064A4  D001               	goto	l120
 12567  0064A6                     l119:
 12568                           
 12569                           ; BSR set to: 1
 12570                           ;lcd.h: 36: else
 12571                           ;lcd.h: 37: RD5 = 0;
 12572  0064A6  9A83               	bcf	3971,5,c	;volatile
 12573  0064A8                     l120:
 12574                           
 12575                           ; BSR set to: 1
 12576                           ;lcd.h: 39: if(a & 4)
 12577  0064A8  0101               	movlb	1	; () banked
 12578  0064AA  0101               	movlb	1	; () banked
 12579  0064AC  A500               	btfss	Lcd_Port@a& (0+255),2,b
 12580  0064AE  D002               	goto	l121
 12581                           
 12582                           ; BSR set to: 1
 12583                           ;lcd.h: 40: RD6 = 1;
 12584  0064B0  8C83               	bsf	3971,6,c	;volatile
 12585  0064B2  D001               	goto	l122
 12586  0064B4                     l121:
 12587                           
 12588                           ; BSR set to: 1
 12589                           ;lcd.h: 41: else
 12590                           ;lcd.h: 42: RD6 = 0;
 12591  0064B4  9C83               	bcf	3971,6,c	;volatile
 12592  0064B6                     l122:
 12593                           
 12594                           ; BSR set to: 1
 12595                           ;lcd.h: 44: if(a & 8)
 12596  0064B6  0101               	movlb	1	; () banked
 12597  0064B8  0101               	movlb	1	; () banked
 12598  0064BA  A700               	btfss	Lcd_Port@a& (0+255),3,b
 12599  0064BC  D002               	goto	l123
 12600                           
 12601                           ; BSR set to: 1
 12602                           ;lcd.h: 45: RD7 = 1;
 12603  0064BE  8E83               	bsf	3971,7,c	;volatile
 12604  0064C0  D001               	goto	l125
 12605  0064C2                     l123:
 12606                           
 12607                           ; BSR set to: 1
 12608                           ;lcd.h: 46: else
 12609                           ;lcd.h: 47: RD7 = 0;
 12610  0064C2  9E83               	bcf	3971,7,c	;volatile
 12611  0064C4                     l125:
 12612                           
 12613                           ; BSR set to: 1
 12614  0064C4  0012               	return	
 12615  0064C6                     __end_of_Lcd_Port:
 12616                           	opt stack 0
 12617                           tblptru	equ	0xFF8
 12618                           tblptrh	equ	0xFF7
 12619                           tblptrl	equ	0xFF6
 12620                           tablat	equ	0xFF5
 12621                           prodh	equ	0xFF4
 12622                           prodl	equ	0xFF3
 12623                           intcon	equ	0xFF2
 12624                           postinc0	equ	0xFEE
 12625                           wreg	equ	0xFE8
 12626                           postdec1	equ	0xFE5
 12627                           fsr1l	equ	0xFE1
 12628                           indf2	equ	0xFDF
 12629                           postinc2	equ	0xFDE
 12630                           postdec2	equ	0xFDD
 12631                           fsr2h	equ	0xFDA
 12632                           fsr2l	equ	0xFD9
 12633                           status	equ	0xFD8
 12634                           
 12635 ;; *************** function _interrupcaoLOW *****************
 12636 ;; Defined at:
 12637 ;;		line 249 in file "main.c"
 12638 ;; Parameters:    Size  Location     Type
 12639 ;;		None
 12640 ;; Auto vars:     Size  Location     Type
 12641 ;;		None
 12642 ;; Return value:  Size  Location     Type
 12643 ;;		None               void
 12644 ;; Registers used:
 12645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12646 ;; Tracked objects:
 12647 ;;		On entry : 0/0
 12648 ;;		On exit  : 0/0
 12649 ;;		Unchanged: 0/0
 12650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12651 ;;      Params:         0       0       0       0       0       0       0       0       0
 12652 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12653 ;;      Temps:          0      17       0       0       0       0       0       0       0
 12654 ;;      Totals:         0      17       0       0       0       0       0       0       0
 12655 ;;Total ram usage:       17 bytes
 12656 ;; Hardware stack levels used:    1
 12657 ;; Hardware stack levels required when called:   10
 12658 ;; This function calls:
 12659 ;;		i1_mainLoop
 12660 ;; This function is called by:
 12661 ;;		Interrupt level 1
 12662 ;; This function uses a non-reentrant model
 12663 ;;
 12664                           
 12665                           	psect	intcodelo
 12666  000018                     __pintcodelo:
 12667                           	opt stack 0
 12668  000018                     _interrupcaoLOW:
 12669                           	opt stack 13
 12670                           
 12671                           ; BSR set to: 1
 12672                           ;incstack = 0
 12673  000018  CFD8 F0A1          	movff	status,??_interrupcaoLOW
 12674  00001C  CFE8 F0A2          	movff	wreg,??_interrupcaoLOW+1
 12675  000020  CFE0 F0A3          	movff	bsr,??_interrupcaoLOW+2
 12676  000024  CFFA F0A4          	movff	pclath,??_interrupcaoLOW+3
 12677  000028  CFFB F0A5          	movff	pclatu,??_interrupcaoLOW+4
 12678  00002C  CFE9 F0A6          	movff	fsr0l,??_interrupcaoLOW+5
 12679  000030  CFEA F0A7          	movff	fsr0h,??_interrupcaoLOW+6
 12680  000034  CFE1 F0A8          	movff	fsr1l,??_interrupcaoLOW+7
 12681  000038  CFE2 F0A9          	movff	fsr1h,??_interrupcaoLOW+8
 12682  00003C  CFD9 F0AA          	movff	fsr2l,??_interrupcaoLOW+9
 12683  000040  CFDA F0AB          	movff	fsr2h,??_interrupcaoLOW+10
 12684  000044  CFF3 F0AC          	movff	prodl,??_interrupcaoLOW+11
 12685  000048  CFF4 F0AD          	movff	prodh,??_interrupcaoLOW+12
 12686  00004C  CFF6 F0AE          	movff	tblptrl,??_interrupcaoLOW+13
 12687  000050  CFF7 F0AF          	movff	tblptrh,??_interrupcaoLOW+14
 12688  000054  CFF8 F0B0          	movff	tblptru,??_interrupcaoLOW+15
 12689  000058  CFF5 F0B1          	movff	tablat,??_interrupcaoLOW+16
 12690  00005C                     
 12691                           ;main.c: 250: mainLoop();
 12692  00005C  ECCA  F030         	call	i1_mainLoop	;wreg free
 12693  000060  C0B1  FFF5         	movff	??_interrupcaoLOW+16,tablat
 12694  000064  C0B0  FFF8         	movff	??_interrupcaoLOW+15,tblptru
 12695  000068  C0AF  FFF7         	movff	??_interrupcaoLOW+14,tblptrh
 12696  00006C  C0AE  FFF6         	movff	??_interrupcaoLOW+13,tblptrl
 12697  000070  C0AD  FFF4         	movff	??_interrupcaoLOW+12,prodh
 12698  000074  C0AC  FFF3         	movff	??_interrupcaoLOW+11,prodl
 12699  000078  C0AB  FFDA         	movff	??_interrupcaoLOW+10,fsr2h
 12700  00007C  C0AA  FFD9         	movff	??_interrupcaoLOW+9,fsr2l
 12701  000080  C0A9  FFE2         	movff	??_interrupcaoLOW+8,fsr1h
 12702  000084  C0A8  FFE1         	movff	??_interrupcaoLOW+7,fsr1l
 12703  000088  C0A7  FFEA         	movff	??_interrupcaoLOW+6,fsr0h
 12704  00008C  C0A6  FFE9         	movff	??_interrupcaoLOW+5,fsr0l
 12705  000090  C0A5  FFFB         	movff	??_interrupcaoLOW+4,pclatu
 12706  000094  C0A4  FFFA         	movff	??_interrupcaoLOW+3,pclath
 12707  000098  C0A3  FFE0         	movff	??_interrupcaoLOW+2,bsr
 12708  00009C  C0A2  FFE8         	movff	??_interrupcaoLOW+1,wreg
 12709  0000A0  C0A1  FFD8         	movff	??_interrupcaoLOW,status
 12710  0000A4  0010               	retfie	
 12711  0000A6                     __end_of_interrupcaoLOW:
 12712                           	opt stack 0
 12713                           pclatu	equ	0xFFB
 12714                           pclath	equ	0xFFA
 12715                           tblptru	equ	0xFF8
 12716                           tblptrh	equ	0xFF7
 12717                           tblptrl	equ	0xFF6
 12718                           tablat	equ	0xFF5
 12719                           prodh	equ	0xFF4
 12720                           prodl	equ	0xFF3
 12721                           intcon	equ	0xFF2
 12722                           postinc0	equ	0xFEE
 12723                           fsr0h	equ	0xFEA
 12724                           fsr0l	equ	0xFE9
 12725                           wreg	equ	0xFE8
 12726                           postdec1	equ	0xFE5
 12727                           fsr1h	equ	0xFE2
 12728                           fsr1l	equ	0xFE1
 12729                           bsr	equ	0xFE0
 12730                           indf2	equ	0xFDF
 12731                           postinc2	equ	0xFDE
 12732                           postdec2	equ	0xFDD
 12733                           fsr2h	equ	0xFDA
 12734                           fsr2l	equ	0xFD9
 12735                           status	equ	0xFD8
 12736                           
 12737 ;; *************** function i1_mainLoop *****************
 12738 ;; Defined at:
 12739 ;;		line 103 in file "main.c"
 12740 ;; Parameters:    Size  Location     Type
 12741 ;;		None
 12742 ;; Auto vars:     Size  Location     Type
 12743 ;;		None
 12744 ;; Return value:  Size  Location     Type
 12745 ;;		None               void
 12746 ;; Registers used:
 12747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12753 ;;      Params:         0       0       0       0       0       0       0       0       0
 12754 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12755 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12756 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12757 ;;Total ram usage:        0 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:    9
 12760 ;; This function calls:
 12761 ;;		i1_Time_Bases
 12762 ;;		i1_check_light
 12763 ;;		i1_check_movement
 12764 ;;		i1_FSM
 12765 ;; This function is called by:
 12766 ;;		_interrupcaoLOW
 12767 ;; This function uses a non-reentrant model
 12768 ;;
 12769                           
 12770                           	psect	text50
 12771  006194                     __ptext50:
 12772                           	opt stack 0
 12773  006194                     i1_mainLoop:
 12774                           	opt stack 13
 12775                           
 12776                           ;main.c: 105: if (INTCONbits.TMR0IF)
 12777                           
 12778                           ;incstack = 0
 12779                           ;incstack = 0
 12780  006194  A4F2               	btfss	intcon,2,c	;volatile
 12781  006196  D00F               	goto	i1l11652
 12782                           
 12783                           ;main.c: 106: {
 12784                           ;main.c: 107: INTCONbits.TMR0IF = 0x00;
 12785  006198  94F2               	bcf	intcon,2,c	;volatile
 12786                           
 12787                           ;main.c: 108: TMR0H = 0xD8;
 12788  00619A  0ED8               	movlw	216
 12789  00619C  6ED7               	movwf	4055,c	;volatile
 12790                           
 12791                           ;main.c: 109: TMR0L = 0xF0;
 12792  00619E  0EF0               	movlw	240
 12793  0061A0  6ED6               	movwf	4054,c	;volatile
 12794                           
 12795                           ;main.c: 110: baseT1 += 1;
 12796  0061A2  0101               	movlb	1	; () banked
 12797  0061A4  0101               	movlb	1	; () banked
 12798  0061A6  4B81               	infsnz	_baseT1& (0+255),f,b
 12799  0061A8  2B82               	incf	(_baseT1+1)& (0+255),f,b
 12800                           
 12801                           ; BSR set to: 1
 12802                           ;main.c: 111: baseT2 += 1;
 12803  0061AA  0101               	movlb	1	; () banked
 12804  0061AC  0101               	movlb	1	; () banked
 12805  0061AE  4B83               	infsnz	_baseT2& (0+255),f,b
 12806  0061B0  2B84               	incf	(_baseT2+1)& (0+255),f,b
 12807                           
 12808                           ; BSR set to: 1
 12809                           ;main.c: 112: Time_Bases();
 12810  0061B2  EC80  F023         	call	i1_Time_Bases	;wreg free
 12811  0061B6                     i1l11652:
 12812                           
 12813                           ;main.c: 113: }
 12814                           ;main.c: 124: check_light(LDR_value);;
 12815  0061B6  C0B2  F01A         	movff	_LDR_value,?i1_check_light
 12816  0061BA  C0B3  F01B         	movff	_LDR_value+1,?i1_check_light+1
 12817  0061BE  C0B4  F01C         	movff	_LDR_value+2,?i1_check_light+2
 12818  0061C2  ECB1  F031         	call	i1_check_light	;wreg free
 12819                           
 12820                           ;main.c: 125: check_movement(Distancia);
 12821  0061C6  C0B5  F011         	movff	_Distancia,?i1_check_movement
 12822  0061CA  C0B6  F012         	movff	_Distancia+1,?i1_check_movement+1
 12823  0061CE  ECEA  F032         	call	i1_check_movement	;wreg free
 12824                           
 12825                           ;main.c: 126: FSM();
 12826  0061D2  ECFC  F02D         	call	i1_FSM	;wreg free
 12827  0061D6  0012               	return	
 12828  0061D8                     __end_ofi1_mainLoop:
 12829                           	opt stack 0
 12830                           pclatu	equ	0xFFB
 12831                           pclath	equ	0xFFA
 12832                           tblptru	equ	0xFF8
 12833                           tblptrh	equ	0xFF7
 12834                           tblptrl	equ	0xFF6
 12835                           tablat	equ	0xFF5
 12836                           prodh	equ	0xFF4
 12837                           prodl	equ	0xFF3
 12838                           intcon	equ	0xFF2
 12839                           postinc0	equ	0xFEE
 12840                           fsr0h	equ	0xFEA
 12841                           fsr0l	equ	0xFE9
 12842                           wreg	equ	0xFE8
 12843                           postdec1	equ	0xFE5
 12844                           fsr1h	equ	0xFE2
 12845                           fsr1l	equ	0xFE1
 12846                           bsr	equ	0xFE0
 12847                           indf2	equ	0xFDF
 12848                           postinc2	equ	0xFDE
 12849                           postdec2	equ	0xFDD
 12850                           fsr2h	equ	0xFDA
 12851                           fsr2l	equ	0xFD9
 12852                           status	equ	0xFD8
 12853                           
 12854 ;; *************** function i1_FSM *****************
 12855 ;; Defined at:
 12856 ;;		line 189 in file "main.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;		None
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;		None               void
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, status,0, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12872 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12873 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12874 ;;Total ram usage:        0 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    4
 12877 ;; This function calls:
 12878 ;;		i1_led_off
 12879 ;;		i1_led_on
 12880 ;; This function is called by:
 12881 ;;		i1_mainLoop
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text51
 12886  005BF8                     __ptext51:
 12887                           	opt stack 0
 12888  005BF8                     i1_FSM:
 12889                           	opt stack 17
 12890                           
 12891                           ;main.c: 191: if(controlOn){
 12892                           
 12893                           ;incstack = 0
 12894                           ;incstack = 0
 12895  005BF8  504D               	movf	_controlOn+1,w,c
 12896  005BFA  104C               	iorwf	_controlOn,w,c
 12897  005BFC  B4D8               	btfsc	status,2,c
 12898  005BFE  D03A               	goto	i1l222
 12899                           
 12900                           ;main.c: 192: if(theresMovement && isBright){
 12901  005C00  0100               	movlb	0	; () banked
 12902  005C02  0100               	movlb	0	; () banked
 12903  005C04  51B8               	movf	(_theresMovement+1)& (0+255),w,b
 12904  005C06  11B7               	iorwf	_theresMovement& (0+255),w,b
 12905  005C08  B4D8               	btfsc	status,2,c
 12906  005C0A  D009               	goto	i1l9094
 12907                           
 12908                           ; BSR set to: 0
 12909  005C0C  0101               	movlb	1	; () banked
 12910  005C0E  0101               	movlb	1	; () banked
 12911  005C10  5186               	movf	(_isBright+1)& (0+255),w,b
 12912  005C12  1185               	iorwf	_isBright& (0+255),w,b
 12913  005C14  B4D8               	btfsc	status,2,c
 12914  005C16  D003               	goto	i1l9094
 12915                           
 12916                           ; BSR set to: 1
 12917                           ;main.c: 193: led_off();
 12918  005C18  ECBD  F033         	call	i1_led_off	;wreg free
 12919                           
 12920                           ;main.c: 194: }else if(!theresMovement && !isBright){
 12921  005C1C  D02B               	goto	i1l222
 12922  005C1E                     i1l9094:
 12923  005C1E  0100               	movlb	0	; () banked
 12924  005C20  0100               	movlb	0	; () banked
 12925  005C22  51B8               	movf	(_theresMovement+1)& (0+255),w,b
 12926  005C24  11B7               	iorwf	_theresMovement& (0+255),w,b
 12927  005C26  A4D8               	btfss	status,2,c
 12928  005C28  D009               	goto	i1l9100
 12929                           
 12930                           ; BSR set to: 0
 12931  005C2A  0101               	movlb	1	; () banked
 12932  005C2C  0101               	movlb	1	; () banked
 12933  005C2E  5186               	movf	(_isBright+1)& (0+255),w,b
 12934  005C30  1185               	iorwf	_isBright& (0+255),w,b
 12935  005C32  A4D8               	btfss	status,2,c
 12936  005C34  D003               	goto	i1l9100
 12937                           
 12938                           ; BSR set to: 1
 12939                           ;main.c: 195: led_off();
 12940  005C36  ECBD  F033         	call	i1_led_off	;wreg free
 12941                           
 12942                           ;main.c: 196: }else if(!theresMovement && isBright){
 12943  005C3A  D01C               	goto	i1l222
 12944  005C3C                     i1l9100:
 12945  005C3C  0100               	movlb	0	; () banked
 12946  005C3E  0100               	movlb	0	; () banked
 12947  005C40  51B8               	movf	(_theresMovement+1)& (0+255),w,b
 12948  005C42  11B7               	iorwf	_theresMovement& (0+255),w,b
 12949  005C44  A4D8               	btfss	status,2,c
 12950  005C46  D009               	goto	i1l9106
 12951                           
 12952                           ; BSR set to: 0
 12953  005C48  0101               	movlb	1	; () banked
 12954  005C4A  0101               	movlb	1	; () banked
 12955  005C4C  5186               	movf	(_isBright+1)& (0+255),w,b
 12956  005C4E  1185               	iorwf	_isBright& (0+255),w,b
 12957  005C50  B4D8               	btfsc	status,2,c
 12958  005C52  D003               	goto	i1l9106
 12959                           
 12960                           ; BSR set to: 1
 12961                           ;main.c: 197: led_off();
 12962  005C54  ECBD  F033         	call	i1_led_off	;wreg free
 12963                           
 12964                           ;main.c: 198: }else if(theresMovement && !isBright){
 12965  005C58  D00D               	goto	i1l222
 12966  005C5A                     i1l9106:
 12967  005C5A  0100               	movlb	0	; () banked
 12968  005C5C  0100               	movlb	0	; () banked
 12969  005C5E  51B8               	movf	(_theresMovement+1)& (0+255),w,b
 12970  005C60  11B7               	iorwf	_theresMovement& (0+255),w,b
 12971  005C62  B4D8               	btfsc	status,2,c
 12972  005C64  D007               	goto	i1l222
 12973                           
 12974                           ; BSR set to: 0
 12975  005C66  0101               	movlb	1	; () banked
 12976  005C68  0101               	movlb	1	; () banked
 12977  005C6A  5186               	movf	(_isBright+1)& (0+255),w,b
 12978  005C6C  1185               	iorwf	_isBright& (0+255),w,b
 12979  005C6E  B4D8               	btfsc	status,2,c
 12980                           
 12981                           ; BSR set to: 1
 12982                           ;main.c: 199: led_on();
 12983  005C70  ECBA  F033         	call	i1_led_on	;wreg free
 12984  005C74                     i1l222:
 12985  005C74  0012               	return	
 12986  005C76                     __end_ofi1_FSM:
 12987                           	opt stack 0
 12988                           pclatu	equ	0xFFB
 12989                           pclath	equ	0xFFA
 12990                           tblptru	equ	0xFF8
 12991                           tblptrh	equ	0xFF7
 12992                           tblptrl	equ	0xFF6
 12993                           tablat	equ	0xFF5
 12994                           prodh	equ	0xFF4
 12995                           prodl	equ	0xFF3
 12996                           intcon	equ	0xFF2
 12997                           postinc0	equ	0xFEE
 12998                           fsr0h	equ	0xFEA
 12999                           fsr0l	equ	0xFE9
 13000                           wreg	equ	0xFE8
 13001                           postdec1	equ	0xFE5
 13002                           fsr1h	equ	0xFE2
 13003                           fsr1l	equ	0xFE1
 13004                           bsr	equ	0xFE0
 13005                           indf2	equ	0xFDF
 13006                           postinc2	equ	0xFDE
 13007                           postdec2	equ	0xFDD
 13008                           fsr2h	equ	0xFDA
 13009                           fsr2l	equ	0xFD9
 13010                           status	equ	0xFD8
 13011                           
 13012 ;; *************** function i1_led_on *****************
 13013 ;; Defined at:
 13014 ;;		line 184 in file "main.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;		None
 13017 ;; Auto vars:     Size  Location     Type
 13018 ;;		None
 13019 ;; Return value:  Size  Location     Type
 13020 ;;		None               void
 13021 ;; Registers used:
 13022 ;;		wreg, status,2
 13023 ;; Tracked objects:
 13024 ;;		On entry : 0/0
 13025 ;;		On exit  : 0/0
 13026 ;;		Unchanged: 0/0
 13027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13028 ;;      Params:         0       0       0       0       0       0       0       0       0
 13029 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13030 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13031 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13032 ;;Total ram usage:        0 bytes
 13033 ;; Hardware stack levels used:    1
 13034 ;; Hardware stack levels required when called:    3
 13035 ;; This function calls:
 13036 ;;		Nothing
 13037 ;; This function is called by:
 13038 ;;		i1_FSM
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           	psect	text52
 13043  006774                     __ptext52:
 13044                           	opt stack 0
 13045  006774                     i1_led_on:
 13046                           	opt stack 17
 13047                           
 13048                           ;main.c: 185: LATB = 0x01;
 13049                           
 13050                           ;incstack = 0
 13051                           ;incstack = 0
 13052  006774  0E01               	movlw	1
 13053  006776  6E8A               	movwf	3978,c	;volatile
 13054  006778  0012               	return	
 13055  00677A                     __end_ofi1_led_on:
 13056                           	opt stack 0
 13057                           pclatu	equ	0xFFB
 13058                           pclath	equ	0xFFA
 13059                           tblptru	equ	0xFF8
 13060                           tblptrh	equ	0xFF7
 13061                           tblptrl	equ	0xFF6
 13062                           tablat	equ	0xFF5
 13063                           prodh	equ	0xFF4
 13064                           prodl	equ	0xFF3
 13065                           intcon	equ	0xFF2
 13066                           postinc0	equ	0xFEE
 13067                           fsr0h	equ	0xFEA
 13068                           fsr0l	equ	0xFE9
 13069                           wreg	equ	0xFE8
 13070                           postdec1	equ	0xFE5
 13071                           fsr1h	equ	0xFE2
 13072                           fsr1l	equ	0xFE1
 13073                           bsr	equ	0xFE0
 13074                           indf2	equ	0xFDF
 13075                           postinc2	equ	0xFDE
 13076                           postdec2	equ	0xFDD
 13077                           fsr2h	equ	0xFDA
 13078                           fsr2l	equ	0xFD9
 13079                           status	equ	0xFD8
 13080                           
 13081 ;; *************** function i1_led_off *****************
 13082 ;; Defined at:
 13083 ;;		line 181 in file "main.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;		None
 13086 ;; Auto vars:     Size  Location     Type
 13087 ;;		None
 13088 ;; Return value:  Size  Location     Type
 13089 ;;		None               void
 13090 ;; Registers used:
 13091 ;;		wreg, status,2
 13092 ;; Tracked objects:
 13093 ;;		On entry : 0/0
 13094 ;;		On exit  : 0/0
 13095 ;;		Unchanged: 0/0
 13096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13097 ;;      Params:         0       0       0       0       0       0       0       0       0
 13098 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13099 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13100 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13101 ;;Total ram usage:        0 bytes
 13102 ;; Hardware stack levels used:    1
 13103 ;; Hardware stack levels required when called:    3
 13104 ;; This function calls:
 13105 ;;		Nothing
 13106 ;; This function is called by:
 13107 ;;		i1_FSM
 13108 ;; This function uses a non-reentrant model
 13109 ;;
 13110                           
 13111                           	psect	text53
 13112  00677A                     __ptext53:
 13113                           	opt stack 0
 13114  00677A                     i1_led_off:
 13115                           	opt stack 17
 13116                           
 13117                           ;main.c: 182: LATB = 0x00;
 13118                           
 13119                           ;incstack = 0
 13120                           ;incstack = 0
 13121  00677A  0E00               	movlw	0
 13122  00677C  6E8A               	movwf	3978,c	;volatile
 13123  00677E  0012               	return	
 13124  006780                     __end_ofi1_led_off:
 13125                           	opt stack 0
 13126                           pclatu	equ	0xFFB
 13127                           pclath	equ	0xFFA
 13128                           tblptru	equ	0xFF8
 13129                           tblptrh	equ	0xFF7
 13130                           tblptrl	equ	0xFF6
 13131                           tablat	equ	0xFF5
 13132                           prodh	equ	0xFF4
 13133                           prodl	equ	0xFF3
 13134                           intcon	equ	0xFF2
 13135                           postinc0	equ	0xFEE
 13136                           fsr0h	equ	0xFEA
 13137                           fsr0l	equ	0xFE9
 13138                           wreg	equ	0xFE8
 13139                           postdec1	equ	0xFE5
 13140                           fsr1h	equ	0xFE2
 13141                           fsr1l	equ	0xFE1
 13142                           bsr	equ	0xFE0
 13143                           indf2	equ	0xFDF
 13144                           postinc2	equ	0xFDE
 13145                           postdec2	equ	0xFDD
 13146                           fsr2h	equ	0xFDA
 13147                           fsr2l	equ	0xFD9
 13148                           status	equ	0xFD8
 13149                           
 13150 ;; *************** function i1_check_movement *****************
 13151 ;; Defined at:
 13152 ;;		line 173 in file "main.c"
 13153 ;; Parameters:    Size  Location     Type
 13154 ;;		None
 13155 ;; Auto vars:     Size  Location     Type
 13156 ;;		None
 13157 ;; Return value:  Size  Location     Type
 13158 ;;		None               void
 13159 ;; Registers used:
 13160 ;;		wreg, status,2, status,0
 13161 ;; Tracked objects:
 13162 ;;		On entry : 0/0
 13163 ;;		On exit  : 0/0
 13164 ;;		Unchanged: 0/0
 13165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13166 ;;      Params:         2       0       0       0       0       0       0       0       0
 13167 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13168 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13169 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13170 ;;Total ram usage:        2 bytes
 13171 ;; Hardware stack levels used:    1
 13172 ;; Hardware stack levels required when called:    3
 13173 ;; This function calls:
 13174 ;;		Nothing
 13175 ;; This function is called by:
 13176 ;;		i1_mainLoop
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180                           	psect	text54
 13181  0065D4                     __ptext54:
 13182                           	opt stack 0
 13183  0065D4                     i1_check_movement:
 13184                           	opt stack 18
 13185                           
 13186                           ;main.c: 174: if(Distancia > 110) {
 13187                           
 13188                           ;incstack = 0
 13189                           ;incstack = 0
 13190  0065D4  0E6F               	movlw	111
 13191  0065D6  0100               	movlb	0	; () banked
 13192  0065D8  0100               	movlb	0	; () banked
 13193  0065DA  5DB5               	subwf	_Distancia& (0+255),w,b
 13194  0065DC  0E00               	movlw	0
 13195  0065DE  0100               	movlb	0	; () banked
 13196  0065E0  59B6               	subwfb	(_Distancia+1)& (0+255),w,b
 13197  0065E2  A0D8               	btfss	status,0,c
 13198  0065E4  D006               	goto	i1l9080
 13199                           
 13200                           ; BSR set to: 0
 13201                           ;main.c: 175: theresMovement = 0;
 13202  0065E6  0E00               	movlw	0
 13203  0065E8  0100               	movlb	0	; () banked
 13204  0065EA  0100               	movlb	0	; () banked
 13205  0065EC  6FB8               	movwf	(_theresMovement+1)& (0+255),b
 13206  0065EE  0E00               	movlw	0
 13207  0065F0  D005               	goto	L16
 13208  0065F2                     i1l9080:
 13209                           
 13210                           ; BSR set to: 0
 13211                           ;main.c: 177: theresMovement = 1;
 13212  0065F2  0E00               	movlw	0
 13213  0065F4  0100               	movlb	0	; () banked
 13214  0065F6  0100               	movlb	0	; () banked
 13215  0065F8  6FB8               	movwf	(_theresMovement+1)& (0+255),b
 13216  0065FA  0E01               	movlw	1
 13217  0065FC                     L16:
 13218  0065FC  0100               	movlb	0	; () banked
 13219  0065FE  6FB7               	movwf	_theresMovement& (0+255),b
 13220                           
 13221                           ; BSR set to: 0
 13222                           
 13223                           ; BSR set to: 0
 13224  006600  0012               	return	
 13225  006602                     __end_ofi1_check_movement:
 13226                           	opt stack 0
 13227                           pclatu	equ	0xFFB
 13228                           pclath	equ	0xFFA
 13229                           tblptru	equ	0xFF8
 13230                           tblptrh	equ	0xFF7
 13231                           tblptrl	equ	0xFF6
 13232                           tablat	equ	0xFF5
 13233                           prodh	equ	0xFF4
 13234                           prodl	equ	0xFF3
 13235                           intcon	equ	0xFF2
 13236                           postinc0	equ	0xFEE
 13237                           fsr0h	equ	0xFEA
 13238                           fsr0l	equ	0xFE9
 13239                           wreg	equ	0xFE8
 13240                           postdec1	equ	0xFE5
 13241                           fsr1h	equ	0xFE2
 13242                           fsr1l	equ	0xFE1
 13243                           bsr	equ	0xFE0
 13244                           indf2	equ	0xFDF
 13245                           postinc2	equ	0xFDE
 13246                           postdec2	equ	0xFDD
 13247                           fsr2h	equ	0xFDA
 13248                           fsr2l	equ	0xFD9
 13249                           status	equ	0xFD8
 13250                           
 13251 ;; *************** function i1_check_light *****************
 13252 ;; Defined at:
 13253 ;;		line 166 in file "main.c"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;		None
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;		None
 13258 ;; Return value:  Size  Location     Type
 13259 ;;		None               void
 13260 ;; Registers used:
 13261 ;;		wreg, status,2, status,0, cstack
 13262 ;; Tracked objects:
 13263 ;;		On entry : 0/0
 13264 ;;		On exit  : 0/0
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13267 ;;      Params:         3       0       0       0       0       0       0       0       0
 13268 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13269 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13270 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13271 ;;Total ram usage:        3 bytes
 13272 ;; Hardware stack levels used:    1
 13273 ;; Hardware stack levels required when called:    4
 13274 ;; This function calls:
 13275 ;;		i1___ftge
 13276 ;; This function is called by:
 13277 ;;		i1_mainLoop
 13278 ;; This function uses a non-reentrant model
 13279 ;;
 13280                           
 13281                           	psect	text55
 13282  006362                     __ptext55:
 13283                           	opt stack 0
 13284  006362                     i1_check_light:
 13285                           	opt stack 17
 13286                           
 13287                           ;main.c: 167: if (LDR_value > 4.0) {
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;incstack = 0
 13291                           ;incstack = 0
 13292  006362  0E00               	movlw	0
 13293  006364  6E11               	movwf	?i1___ftge,c
 13294  006366  0E80               	movlw	128
 13295  006368  6E12               	movwf	?i1___ftge+1,c
 13296  00636A  0E40               	movlw	64
 13297  00636C  6E13               	movwf	?i1___ftge+2,c
 13298  00636E  C0B2  F014         	movff	_LDR_value,?i1___ftge+3
 13299  006372  C0B3  F015         	movff	_LDR_value+1,?i1___ftge+4
 13300  006376  C0B4  F016         	movff	_LDR_value+2,?i1___ftge+5
 13301  00637A  EC1E  F02C         	call	i1___ftge	;wreg free
 13302  00637E  B0D8               	btfsc	status,0,c
 13303  006380  D006               	goto	i1l9074
 13304                           
 13305                           ;main.c: 168: isBright = 0;
 13306  006382  0E00               	movlw	0
 13307  006384  0101               	movlb	1	; () banked
 13308  006386  0101               	movlb	1	; () banked
 13309  006388  6F86               	movwf	(_isBright+1)& (0+255),b
 13310  00638A  0E00               	movlw	0
 13311  00638C  D005               	goto	L17
 13312  00638E                     i1l9074:
 13313                           
 13314                           ;main.c: 170: isBright = 1;
 13315  00638E  0E00               	movlw	0
 13316  006390  0101               	movlb	1	; () banked
 13317  006392  0101               	movlb	1	; () banked
 13318  006394  6F86               	movwf	(_isBright+1)& (0+255),b
 13319  006396  0E01               	movlw	1
 13320  006398                     L17:
 13321  006398  0101               	movlb	1	; () banked
 13322  00639A  6F85               	movwf	_isBright& (0+255),b
 13323                           
 13324                           ; BSR set to: 1
 13325                           
 13326                           ; BSR set to: 1
 13327  00639C  0012               	return	
 13328  00639E                     __end_ofi1_check_light:
 13329                           	opt stack 0
 13330                           pclatu	equ	0xFFB
 13331                           pclath	equ	0xFFA
 13332                           tblptru	equ	0xFF8
 13333                           tblptrh	equ	0xFF7
 13334                           tblptrl	equ	0xFF6
 13335                           tablat	equ	0xFF5
 13336                           prodh	equ	0xFF4
 13337                           prodl	equ	0xFF3
 13338                           intcon	equ	0xFF2
 13339                           postinc0	equ	0xFEE
 13340                           fsr0h	equ	0xFEA
 13341                           fsr0l	equ	0xFE9
 13342                           wreg	equ	0xFE8
 13343                           postdec1	equ	0xFE5
 13344                           fsr1h	equ	0xFE2
 13345                           fsr1l	equ	0xFE1
 13346                           bsr	equ	0xFE0
 13347                           indf2	equ	0xFDF
 13348                           postinc2	equ	0xFDE
 13349                           postdec2	equ	0xFDD
 13350                           fsr2h	equ	0xFDA
 13351                           fsr2l	equ	0xFD9
 13352                           status	equ	0xFD8
 13353                           
 13354 ;; *************** function i1_Time_Bases *****************
 13355 ;; Defined at:
 13356 ;;		line 129 in file "main.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;		None
 13359 ;; Auto vars:     Size  Location     Type
 13360 ;;		None
 13361 ;; Return value:  Size  Location     Type
 13362 ;;		None               void
 13363 ;; Registers used:
 13364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13370 ;;      Params:         0       0       0       0       0       0       0       0       0
 13371 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13372 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13373 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13374 ;;Total ram usage:        2 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:    8
 13377 ;; This function calls:
 13378 ;;		i1_lcd_gotoxy
 13379 ;;		i1_lcd_putc
 13380 ;;		i1_Obtener_Distancia
 13381 ;;		i1_Read_LDR
 13382 ;;		i1_sprintf
 13383 ;; This function is called by:
 13384 ;;		i1_mainLoop
 13385 ;; This function uses a non-reentrant model
 13386 ;;
 13387                           
 13388                           	psect	text56
 13389  004700                     __ptext56:
 13390                           	opt stack 0
 13391  004700                     i1_Time_Bases:
 13392                           	opt stack 13
 13393                           
 13394                           ;main.c: 130: if (baseT1 >= cycles[0])
 13395                           
 13396                           ; BSR set to: 1
 13397                           ;incstack = 0
 13398                           ;incstack = 0
 13399  004700  0101               	movlb	1	; () banked
 13400  004702  0101               	movlb	1	; () banked
 13401  004704  51A7               	movf	_cycles& (0+255),w,b
 13402  004706  0101               	movlb	1	; () banked
 13403  004708  0101               	movlb	1	; () banked
 13404  00470A  5D81               	subwf	_baseT1& (0+255),w,b
 13405  00470C  0101               	movlb	1	; () banked
 13406  00470E  0101               	movlb	1	; () banked
 13407  004710  51A8               	movf	(_cycles+1)& (0+255),w,b
 13408  004712  0101               	movlb	1	; () banked
 13409  004714  0101               	movlb	1	; () banked
 13410  004716  5982               	subwfb	(_baseT1+1)& (0+255),w,b
 13411  004718  A0D8               	btfss	status,0,c
 13412  00471A  D03D               	goto	i1l11670
 13413                           
 13414                           ; BSR set to: 1
 13415                           ;main.c: 131: {
 13416                           ;main.c: 132: baseT1 = 0x00;
 13417  00471C  0E00               	movlw	0
 13418  00471E  0101               	movlb	1	; () banked
 13419  004720  0101               	movlb	1	; () banked
 13420  004722  6F82               	movwf	(_baseT1+1)& (0+255),b
 13421  004724  0E00               	movlw	0
 13422  004726  0101               	movlb	1	; () banked
 13423  004728  6F81               	movwf	_baseT1& (0+255),b
 13424                           
 13425                           ; BSR set to: 1
 13426                           ;main.c: 133: LDR_value=Read_LDR();
 13427  00472A  EC3C  F028         	call	i1_Read_LDR	;wreg free
 13428  00472E  C049  F0B4         	movff	?i1_Read_LDR+2,_LDR_value+2
 13429  004732  C048  F0B3         	movff	?i1_Read_LDR+1,_LDR_value+1
 13430  004736  C047  F0B2         	movff	?i1_Read_LDR,_LDR_value
 13431                           
 13432                           ;main.c: 134: lcd_gotoxy(1,1);
 13433  00473A  0100               	movlb	0	; () banked
 13434  00473C  6F9F               	movwf	??i1_Time_Bases& (0+255),b
 13435  00473E  0E01               	movlw	1
 13436  004740  6E14               	movwf	?i1_lcd_gotoxy,c
 13437  004742  0100               	movlb	0	; () banked
 13438  004744  519F               	movf	??i1_Time_Bases& (0+255),w,b
 13439  004746  0100               	movlb	0	; () banked
 13440  004748  6FA0               	movwf	(??i1_Time_Bases+1)& (0+255),b
 13441  00474A  0E01               	movlw	1
 13442  00474C  6E15               	movwf	?i1_lcd_gotoxy+1,c
 13443  00474E  0100               	movlb	0	; () banked
 13444  004750  51A0               	movf	(??i1_Time_Bases+1)& (0+255),w,b
 13445  004752  ECE6  F02F         	call	i1_lcd_gotoxy	;wreg free
 13446                           
 13447                           ;main.c: 135: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
 13448  004756  0101               	movlb	1	; () banked
 13449  004758  0E01               	movlw	high _LCD_Buffer
 13450  00475A  0100               	movlb	0	; () banked
 13451  00475C  0100               	movlb	0	; () banked
 13452  00475E  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 13453  004760  0101               	movlb	1	; () banked
 13454  004762  0E87               	movlw	low _LCD_Buffer
 13455  004764  0100               	movlb	0	; () banked
 13456  004766  6F71               	movwf	?i1_sprintf& (0+255),b
 13457  004768  0E08               	movlw	high STR_1
 13458  00476A  0100               	movlb	0	; () banked
 13459  00476C  0100               	movlb	0	; () banked
 13460  00476E  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 13461  004770  0E88               	movlw	low STR_1
 13462  004772  0100               	movlb	0	; () banked
 13463  004774  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 13464  004776  C0B2  F075         	movff	_LDR_value,?i1_sprintf+4
 13465  00477A  C0B3  F076         	movff	_LDR_value+1,?i1_sprintf+5
 13466  00477E  C0B4  F077         	movff	_LDR_value+2,?i1_sprintf+6
 13467  004782  EC55  F00B         	call	i1_sprintf	;wreg free
 13468                           
 13469                           ;main.c: 136: lcd_putc(LCD_Buffer);
 13470  004786  0101               	movlb	1	; () banked
 13471  004788  0E01               	movlw	high _LCD_Buffer
 13472  00478A  6E16               	movwf	?i1_lcd_putc+1,c
 13473  00478C  0101               	movlb	1	; () banked
 13474  00478E  0E87               	movlw	low _LCD_Buffer
 13475  004790  6E15               	movwf	?i1_lcd_putc,c
 13476  004792  ECB8  F032         	call	i1_lcd_putc	;wreg free
 13477  004796                     i1l11670:
 13478                           
 13479                           ;main.c: 137: }
 13480                           ;main.c: 138: if (baseT2 >= cycles[1])
 13481  004796  0101               	movlb	1	; () banked
 13482  004798  0101               	movlb	1	; () banked
 13483  00479A  51A9               	movf	(_cycles+2)& (0+255),w,b
 13484  00479C  0101               	movlb	1	; () banked
 13485  00479E  0101               	movlb	1	; () banked
 13486  0047A0  5D83               	subwf	_baseT2& (0+255),w,b
 13487  0047A2  0101               	movlb	1	; () banked
 13488  0047A4  0101               	movlb	1	; () banked
 13489  0047A6  51AA               	movf	(_cycles+3)& (0+255),w,b
 13490  0047A8  0101               	movlb	1	; () banked
 13491  0047AA  0101               	movlb	1	; () banked
 13492  0047AC  5984               	subwfb	(_baseT2+1)& (0+255),w,b
 13493  0047AE  A0D8               	btfss	status,0,c
 13494  0047B0  D039               	goto	i1l192
 13495                           
 13496                           ; BSR set to: 1
 13497                           ;main.c: 139: {
 13498                           ;main.c: 140: baseT2 = 0x00;
 13499  0047B2  0E00               	movlw	0
 13500  0047B4  0101               	movlb	1	; () banked
 13501  0047B6  0101               	movlb	1	; () banked
 13502  0047B8  6F84               	movwf	(_baseT2+1)& (0+255),b
 13503  0047BA  0E00               	movlw	0
 13504  0047BC  0101               	movlb	1	; () banked
 13505  0047BE  6F83               	movwf	_baseT2& (0+255),b
 13506                           
 13507                           ; BSR set to: 1
 13508                           ;main.c: 141: Distancia=Obtener_Distancia();
 13509  0047C0  EC3B  F02E         	call	i1_Obtener_Distancia	;wreg free
 13510  0047C4  C019  F0B5         	movff	?i1_Obtener_Distancia,_Distancia
 13511  0047C8  C01A  F0B6         	movff	?i1_Obtener_Distancia+1,_Distancia+1
 13512                           
 13513                           ;main.c: 142: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
 13514  0047CC  0101               	movlb	1	; () banked
 13515  0047CE  0E01               	movlw	high _LCD_Buffer
 13516  0047D0  0100               	movlb	0	; () banked
 13517  0047D2  0100               	movlb	0	; () banked
 13518  0047D4  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 13519  0047D6  0101               	movlb	1	; () banked
 13520  0047D8  0E87               	movlw	low _LCD_Buffer
 13521  0047DA  0100               	movlb	0	; () banked
 13522  0047DC  6F71               	movwf	?i1_sprintf& (0+255),b
 13523  0047DE  0E08               	movlw	high STR_2
 13524  0047E0  0100               	movlb	0	; () banked
 13525  0047E2  0100               	movlb	0	; () banked
 13526  0047E4  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 13527  0047E6  0E76               	movlw	low STR_2
 13528  0047E8  0100               	movlb	0	; () banked
 13529  0047EA  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 13530  0047EC  C0B5  F075         	movff	_Distancia,?i1_sprintf+4
 13531  0047F0  C0B6  F076         	movff	_Distancia+1,?i1_sprintf+5
 13532  0047F4  EC55  F00B         	call	i1_sprintf	;wreg free
 13533                           
 13534                           ;main.c: 143: lcd_gotoxy(2,1);
 13535  0047F8  0100               	movlb	0	; () banked
 13536  0047FA  6F9F               	movwf	??i1_Time_Bases& (0+255),b
 13537  0047FC  0E02               	movlw	2
 13538  0047FE  6E14               	movwf	?i1_lcd_gotoxy,c
 13539  004800  0100               	movlb	0	; () banked
 13540  004802  519F               	movf	??i1_Time_Bases& (0+255),w,b
 13541  004804  0100               	movlb	0	; () banked
 13542  004806  6FA0               	movwf	(??i1_Time_Bases+1)& (0+255),b
 13543  004808  0E01               	movlw	1
 13544  00480A  6E15               	movwf	?i1_lcd_gotoxy+1,c
 13545  00480C  0100               	movlb	0	; () banked
 13546  00480E  51A0               	movf	(??i1_Time_Bases+1)& (0+255),w,b
 13547  004810  ECE6  F02F         	call	i1_lcd_gotoxy	;wreg free
 13548                           
 13549                           ;main.c: 144: lcd_putc(LCD_Buffer);
 13550  004814  0101               	movlb	1	; () banked
 13551  004816  0E01               	movlw	high _LCD_Buffer
 13552  004818  6E16               	movwf	?i1_lcd_putc+1,c
 13553  00481A  0101               	movlb	1	; () banked
 13554  00481C  0E87               	movlw	low _LCD_Buffer
 13555  00481E  6E15               	movwf	?i1_lcd_putc,c
 13556  004820  ECB8  F032         	call	i1_lcd_putc	;wreg free
 13557  004824                     i1l192:
 13558  004824  0012               	return	
 13559  004826                     __end_ofi1_Time_Bases:
 13560                           	opt stack 0
 13561                           pclatu	equ	0xFFB
 13562                           pclath	equ	0xFFA
 13563                           tblptru	equ	0xFF8
 13564                           tblptrh	equ	0xFF7
 13565                           tblptrl	equ	0xFF6
 13566                           tablat	equ	0xFF5
 13567                           prodh	equ	0xFF4
 13568                           prodl	equ	0xFF3
 13569                           intcon	equ	0xFF2
 13570                           postinc0	equ	0xFEE
 13571                           fsr0h	equ	0xFEA
 13572                           fsr0l	equ	0xFE9
 13573                           wreg	equ	0xFE8
 13574                           postdec1	equ	0xFE5
 13575                           fsr1h	equ	0xFE2
 13576                           fsr1l	equ	0xFE1
 13577                           bsr	equ	0xFE0
 13578                           indf2	equ	0xFDF
 13579                           postinc2	equ	0xFDE
 13580                           postdec2	equ	0xFDD
 13581                           fsr2h	equ	0xFDA
 13582                           fsr2l	equ	0xFD9
 13583                           status	equ	0xFD8
 13584                           
 13585 ;; *************** function i1_sprintf *****************
 13586 ;; Defined at:
 13587 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;  sprintf         2   17[BANK0 ] PTR unsigned char 
 13590 ;;		 -> LCD_Buffer(32), 
 13591 ;;  sprintf         2   19[BANK0 ] PTR const unsigned char 
 13592 ;;		 -> STR_2(18), STR_1(10), 
 13593 ;; Auto vars:     Size  Location     Type
 13594 ;;  sprintf         5   46[BANK0 ] struct .
 13595 ;;  sprintf         4   33[BANK0 ] unsigned long 
 13596 ;;  sprintf         3   57[BANK0 ] unsigned long 
 13597 ;;  sprintf         3   43[BANK0 ] unsigned long 
 13598 ;;  sprintf         3    0        unsigned long 
 13599 ;;  sprintf         3    0        unsigned long 
 13600 ;;  sprintf         2   60[BANK0 ] int 
 13601 ;;  sprintf         2   55[BANK0 ] int 
 13602 ;;  sprintf         2   53[BANK0 ] int 
 13603 ;;  sprintf         2   51[BANK0 ] unsigned short 
 13604 ;;  sprintf         2   41[BANK0 ] PTR void [1]
 13605 ;;		 -> ?_sprintf(2), 
 13606 ;;  sprintf         2   39[BANK0 ] unsigned int 
 13607 ;;  sprintf         2   37[BANK0 ] unsigned int 
 13608 ;;  sprintf         1   62[BANK0 ] char 
 13609 ;;  sprintf         1    0        unsigned char 
 13610 ;; Return value:  Size  Location     Type
 13611 ;;                  2   17[BANK0 ] int 
 13612 ;; Registers used:
 13613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13619 ;;      Params:         0       7       0       0       0       0       0       0       0
 13620 ;;      Locals:         0      33       0       0       0       0       0       0       0
 13621 ;;      Temps:          0       6       0       0       0       0       0       0       0
 13622 ;;      Totals:         0      46       0       0       0       0       0       0       0
 13623 ;;Total ram usage:       46 bytes
 13624 ;; Hardware stack levels used:    1
 13625 ;; Hardware stack levels required when called:    7
 13626 ;; This function calls:
 13627 ;;		i1_fround
 13628 ;;		i1_scale
 13629 ;;		i1___asftadd
 13630 ;;		i1___asftmul
 13631 ;;		i1___asftsub
 13632 ;;		i1___awdiv
 13633 ;;		i1__div_to_l_
 13634 ;;		i1__tdiv_to_l_
 13635 ;;		i1___ftge
 13636 ;;		i1___ftmul
 13637 ;;		i1___ftneg
 13638 ;;		i1___fttol
 13639 ;;		i1_isdigit
 13640 ;;		i1___lldiv
 13641 ;;		i1___llmod
 13642 ;;		i1___lltoft
 13643 ;;		i1___lwmod
 13644 ;;		i1___wmul
 13645 ;; This function is called by:
 13646 ;;		i1_Time_Bases
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650                           	psect	text57
 13651  0016AA                     __ptext57:
 13652                           	opt stack 0
 13653  0016AA                     i1_sprintf:
 13654                           	opt stack 13
 13655                           
 13656                           ;doprnt.c: 494: va_list ap;
 13657                           ;doprnt.c: 499: signed char c;
 13658                           ;doprnt.c: 501: int width;
 13659                           ;doprnt.c: 504: int prec;
 13660                           ;doprnt.c: 508: unsigned short flag;
 13661                           ;doprnt.c: 515: char d;
 13662                           ;doprnt.c: 516: double fval, integ;
 13663                           ;doprnt.c: 517: int exp;
 13664                           ;doprnt.c: 518: double ival;
 13665                           ;doprnt.c: 519: union {
 13666                           ;doprnt.c: 520: unsigned long _val;
 13667                           ;doprnt.c: 521: struct {
 13668                           ;doprnt.c: 522: const char * _cp;
 13669                           ;doprnt.c: 523: unsigned _len;
 13670                           ;doprnt.c: 524: } _str;
 13671                           ;doprnt.c: 525: } _val;
 13672                           ;doprnt.c: 542: *ap = __va_start();
 13673                           
 13674                           ;incstack = 0
 13675                           ;incstack = 0
 13676  0016AA  0100               	movlb	0	; () banked
 13677  0016AC  0E00               	movlw	high (?i1_sprintf+4)
 13678  0016AE  0100               	movlb	0	; () banked
 13679  0016B0  0100               	movlb	0	; () banked
 13680  0016B2  6F8A               	movwf	(i1sprintf@ap+1)& (0+255),b
 13681  0016B4  0100               	movlb	0	; () banked
 13682  0016B6  0E75               	movlw	low (?i1_sprintf+4)
 13683  0016B8  0100               	movlb	0	; () banked
 13684  0016BA  6F89               	movwf	i1sprintf@ap& (0+255),b
 13685                           
 13686                           ;doprnt.c: 545: while(c = *f++) {
 13687  0016BC  EFF1  F011         	goto	i1l12080
 13688  0016C0                     i1l11756:
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;doprnt.c: 547: if(c != '%')
 13692  0016C0  0100               	movlb	0	; () banked
 13693  0016C2  0100               	movlb	0	; () banked
 13694  0016C4  519E               	movf	i1sprintf@c& (0+255),w,b
 13695  0016C6  0A25               	xorlw	37
 13696  0016C8  B4D8               	btfsc	status,2,c
 13697  0016CA  D00D               	goto	i1l11762
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;doprnt.c: 549: {
 13701                           ;doprnt.c: 550: ((*sp++ = (c)));
 13702  0016CC  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13703  0016D0  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13704  0016D4  0100               	movlb	0	; () banked
 13705  0016D6  C09E  FFDF         	movff	i1sprintf@c,indf2
 13706                           
 13707                           ; BSR set to: 0
 13708  0016DA  0100               	movlb	0	; () banked
 13709  0016DC  0100               	movlb	0	; () banked
 13710  0016DE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13711  0016E0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13712                           
 13713                           ;doprnt.c: 551: continue;
 13714  0016E2  EFF1  F011         	goto	i1l12080
 13715  0016E6                     i1l11762:
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;doprnt.c: 552: }
 13719                           ;doprnt.c: 555: width = 0;
 13720  0016E6  0E00               	movlw	0
 13721  0016E8  0100               	movlb	0	; () banked
 13722  0016EA  0100               	movlb	0	; () banked
 13723  0016EC  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13724  0016EE  0E00               	movlw	0
 13725  0016F0  0100               	movlb	0	; () banked
 13726  0016F2  6F97               	movwf	i1sprintf@width& (0+255),b
 13727                           
 13728                           ;doprnt.c: 557: flag = 0;
 13729  0016F4  0E00               	movlw	0
 13730  0016F6  0100               	movlb	0	; () banked
 13731  0016F8  0100               	movlb	0	; () banked
 13732  0016FA  6F94               	movwf	(i1sprintf@flag+1)& (0+255),b
 13733  0016FC  0E00               	movlw	0
 13734  0016FE  0100               	movlb	0	; () banked
 13735  001700  6F93               	movwf	i1sprintf@flag& (0+255),b
 13736  001702  D007               	goto	i1l11768
 13737  001704                     i1l11764:
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;doprnt.c: 589: flag |= 0x04;
 13741  001704  0100               	movlb	0	; () banked
 13742  001706  0100               	movlb	0	; () banked
 13743  001708  8593               	bsf	i1sprintf@flag& (0+255),2,b
 13744                           
 13745                           ;doprnt.c: 590: f++;
 13746  00170A  0100               	movlb	0	; () banked
 13747  00170C  0100               	movlb	0	; () banked
 13748  00170E  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 13749  001710  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 13750  001712                     i1l11768:
 13751                           
 13752                           ; BSR set to: 0
 13753  001712  0100               	movlb	0	; () banked
 13754  001714  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13755  001718  0100               	movlb	0	; () banked
 13756  00171A  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13757  00171E  0008               	tblrd		*
 13758  001720  50F5               	movf	tablat,w,c
 13759                           
 13760                           ; Switch size 1, requested type "space"
 13761                           ; Number of cases is 1, Range of values is 48 to 48
 13762                           ; switch strategies available:
 13763                           ; Name         Instructions Cycles
 13764                           ; simple_byte            4     3 (average)
 13765                           ;	Chosen strategy is simple_byte
 13766  001722  0A30               	xorlw	48	; case 48
 13767  001724  B4D8               	btfsc	status,2,c
 13768  001726  D7EE               	goto	i1l11764
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 13772                           
 13773                           ; BSR set to: 0
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;doprnt.c: 595: }
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;doprnt.c: 594: break;
 13780  001728  0100               	movlb	0	; () banked
 13781  00172A  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13782  00172E  0100               	movlb	0	; () banked
 13783  001730  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13784  001734  0008               	tblrd		*
 13785  001736  CFF5 F011          	movff	tablat,?i1_isdigit
 13786  00173A  EC51  F033         	call	i1_isdigit	;wreg free
 13787  00173E  A0D8               	btfss	status,0,c
 13788  001740  D043               	goto	i1l11782
 13789                           
 13790                           ;doprnt.c: 607: width = 0;
 13791  001742  0E00               	movlw	0
 13792  001744  0100               	movlb	0	; () banked
 13793  001746  0100               	movlb	0	; () banked
 13794  001748  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13795  00174A  0E00               	movlw	0
 13796  00174C  0100               	movlb	0	; () banked
 13797  00174E  6F97               	movwf	i1sprintf@width& (0+255),b
 13798  001750                     i1l11774:
 13799                           
 13800                           ;doprnt.c: 609: width *= 10;
 13801  001750  C097  F021         	movff	i1sprintf@width,?i1___wmul
 13802  001754  C098  F022         	movff	i1sprintf@width+1,?i1___wmul+1
 13803  001758  0E00               	movlw	0
 13804  00175A  6E24               	movwf	?i1___wmul+3,c
 13805  00175C  0E0A               	movlw	10
 13806  00175E  6E23               	movwf	?i1___wmul+2,c
 13807  001760  EC63  F032         	call	i1___wmul	;wreg free
 13808  001764  C021  F097         	movff	?i1___wmul,i1sprintf@width
 13809  001768  C022  F098         	movff	?i1___wmul+1,i1sprintf@width+1
 13810                           
 13811                           ;doprnt.c: 610: width += *f++ - '0';
 13812  00176C  0100               	movlb	0	; () banked
 13813  00176E  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13814  001772  0100               	movlb	0	; () banked
 13815  001774  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13816  001778  0008               	tblrd		*
 13817  00177A  CFF5 F078          	movff	tablat,??i1_sprintf
 13818  00177E  0ED0               	movlw	208
 13819  001780  0100               	movlb	0	; () banked
 13820  001782  2578               	addwf	??i1_sprintf& (0+255),w,b
 13821  001784  0100               	movlb	0	; () banked
 13822  001786  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13823  001788  0100               	movlb	0	; () banked
 13824  00178A  0100               	movlb	0	; () banked
 13825  00178C  6B7A               	clrf	(??i1_sprintf+2)& (0+255),b
 13826  00178E  0EFF               	movlw	255
 13827  001790  237A               	addwfc	(??i1_sprintf+2)& (0+255),f,b
 13828  001792  0100               	movlb	0	; () banked
 13829  001794  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13830  001796  0100               	movlb	0	; () banked
 13831  001798  0100               	movlb	0	; () banked
 13832  00179A  2797               	addwf	i1sprintf@width& (0+255),f,b
 13833  00179C  0100               	movlb	0	; () banked
 13834  00179E  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 13835  0017A0  0100               	movlb	0	; () banked
 13836  0017A2  0100               	movlb	0	; () banked
 13837  0017A4  2398               	addwfc	(i1sprintf@width+1)& (0+255),f,b
 13838                           
 13839                           ; BSR set to: 0
 13840  0017A6  0100               	movlb	0	; () banked
 13841  0017A8  0100               	movlb	0	; () banked
 13842  0017AA  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 13843  0017AC  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 13847  0017AE  0100               	movlb	0	; () banked
 13848  0017B0  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13849  0017B4  0100               	movlb	0	; () banked
 13850  0017B6  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13851  0017BA  0008               	tblrd		*
 13852  0017BC  CFF5 F011          	movff	tablat,?i1_isdigit
 13853  0017C0  EC51  F033         	call	i1_isdigit	;wreg free
 13854  0017C4  B0D8               	btfsc	status,0,c
 13855  0017C6  D7C4               	goto	i1l11774
 13856  0017C8                     i1l11782:
 13857                           
 13858                           ;doprnt.c: 617: }
 13859                           ;doprnt.c: 620: if(*f == '.') {
 13860  0017C8  0100               	movlb	0	; () banked
 13861  0017CA  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13862  0017CE  0100               	movlb	0	; () banked
 13863  0017D0  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13864  0017D4  0008               	tblrd		*
 13865  0017D6  50F5               	movf	tablat,w,c
 13866  0017D8  0A2E               	xorlw	46
 13867  0017DA  A4D8               	btfss	status,2,c
 13868  0017DC  D03F               	goto	i1l11794
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;doprnt.c: 621: flag |= 0x4000;
 13872  0017DE  0100               	movlb	0	; () banked
 13873  0017E0  0100               	movlb	0	; () banked
 13874  0017E2  8D94               	bsf	(i1sprintf@flag+1)& (0+255),6,b
 13875                           
 13876                           ;doprnt.c: 622: f++;
 13877  0017E4  0100               	movlb	0	; () banked
 13878  0017E6  0100               	movlb	0	; () banked
 13879  0017E8  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 13880  0017EA  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;doprnt.c: 629: {
 13884                           ;doprnt.c: 630: prec = 0;
 13885  0017EC  0E00               	movlw	0
 13886  0017EE  0100               	movlb	0	; () banked
 13887  0017F0  0100               	movlb	0	; () banked
 13888  0017F2  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 13889  0017F4  0E00               	movlw	0
 13890  0017F6  0100               	movlb	0	; () banked
 13891  0017F8  6F9C               	movwf	i1sprintf@prec& (0+255),b
 13892                           
 13893                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 13894  0017FA  D022               	goto	i1l11792
 13895  0017FC                     i1l11788:
 13896                           
 13897                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 13898  0017FC  C09C  F021         	movff	i1sprintf@prec,?i1___wmul
 13899  001800  C09D  F022         	movff	i1sprintf@prec+1,?i1___wmul+1
 13900  001804  0E00               	movlw	0
 13901  001806  6E24               	movwf	?i1___wmul+3,c
 13902  001808  0E0A               	movlw	10
 13903  00180A  6E23               	movwf	?i1___wmul+2,c
 13904  00180C  EC63  F032         	call	i1___wmul	;wreg free
 13905  001810  0100               	movlb	0	; () banked
 13906  001812  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13907  001816  0100               	movlb	0	; () banked
 13908  001818  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13909  00181C  0008               	tblrd		*
 13910  00181E  50F5               	movf	tablat,w,c
 13911  001820  2621               	addwf	?i1___wmul,f,c
 13912  001822  0E00               	movlw	0
 13913  001824  2222               	addwfc	?i1___wmul+1,f,c
 13914  001826  0ED0               	movlw	208
 13915  001828  2421               	addwf	?i1___wmul,w,c
 13916  00182A  0100               	movlb	0	; () banked
 13917  00182C  0100               	movlb	0	; () banked
 13918  00182E  6F9C               	movwf	i1sprintf@prec& (0+255),b
 13919  001830  0EFF               	movlw	255
 13920  001832  2022               	addwfc	?i1___wmul+1,w,c
 13921  001834  0100               	movlb	0	; () banked
 13922  001836  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 13923                           
 13924                           ; BSR set to: 0
 13925  001838  0100               	movlb	0	; () banked
 13926  00183A  0100               	movlb	0	; () banked
 13927  00183C  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 13928  00183E  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 13929  001840                     i1l11792:
 13930                           
 13931                           ; BSR set to: 0
 13932  001840  0100               	movlb	0	; () banked
 13933  001842  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13934  001846  0100               	movlb	0	; () banked
 13935  001848  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13936  00184C  0008               	tblrd		*
 13937  00184E  CFF5 F011          	movff	tablat,?i1_isdigit
 13938  001852  EC51  F033         	call	i1_isdigit	;wreg free
 13939  001856  A0D8               	btfss	status,0,c
 13940  001858  D010               	goto	i1l11802
 13941  00185A  D7D0               	goto	i1l11788
 13942  00185C                     i1l11794:
 13943                           
 13944                           ;doprnt.c: 635: prec = 0;
 13945  00185C  0E00               	movlw	0
 13946  00185E  0100               	movlb	0	; () banked
 13947  001860  0100               	movlb	0	; () banked
 13948  001862  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 13949  001864  0E00               	movlw	0
 13950  001866  0100               	movlb	0	; () banked
 13951  001868  6F9C               	movwf	i1sprintf@prec& (0+255),b
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;doprnt.c: 637: flag |= 0x1000;
 13955  00186A  0100               	movlb	0	; () banked
 13956  00186C  0100               	movlb	0	; () banked
 13957  00186E  8994               	bsf	(i1sprintf@flag+1)& (0+255),4,b
 13958  001870  D004               	goto	i1l11802
 13959  001872                     i1l11798:
 13960                           
 13961                           ; BSR set to: 0
 13962                           ;doprnt.c: 672: flag |= 0x400;
 13963  001872  0100               	movlb	0	; () banked
 13964  001874  0100               	movlb	0	; () banked
 13965  001876  8594               	bsf	(i1sprintf@flag+1)& (0+255),2,b
 13966                           
 13967                           ;doprnt.c: 673: break;
 13968  001878  D01E               	goto	i1l11804
 13969  00187A                     i1l11802:
 13970  00187A  0100               	movlb	0	; () banked
 13971  00187C  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13972  001880  0100               	movlb	0	; () banked
 13973  001882  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13974  001886  0100               	movlb	0	; () banked
 13975  001888  0100               	movlb	0	; () banked
 13976  00188A  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 13977  00188C  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 13978  00188E  0008               	tblrd		*
 13979  001890  0100               	movlb	0	; () banked
 13980  001892  CFF5 F09E          	movff	tablat,i1sprintf@c
 13981  001896  0100               	movlb	0	; () banked
 13982  001898  519E               	movf	i1sprintf@c& (0+255),w,b
 13983                           
 13984                           ; Switch size 1, requested type "space"
 13985                           ; Number of cases is 4, Range of values is 0 to 105
 13986                           ; switch strategies available:
 13987                           ; Name         Instructions Cycles
 13988                           ; simple_byte           13     7 (average)
 13989                           ;	Chosen strategy is simple_byte
 13990  00189A  0A00               	xorlw	0	; case 0
 13991  00189C  B4D8               	btfsc	status,2,c
 13992  00189E  EF03  F012         	goto	i1l12082
 13993  0018A2  0A64               	xorlw	100	; case 100
 13994  0018A4  B4D8               	btfsc	status,2,c
 13995  0018A6  D007               	goto	i1l11804
 13996  0018A8  0A02               	xorlw	2	; case 102
 13997  0018AA  B4D8               	btfsc	status,2,c
 13998  0018AC  D7E2               	goto	i1l11798
 13999  0018AE  0A0F               	xorlw	15	; case 105
 14000  0018B0  A4D8               	btfss	status,2,c
 14001  0018B2  EFF1  F011         	goto	i1l12080
 14002  0018B6                     i1l11804:
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;doprnt.c: 834: if(flag & (0x700)) {
 14006  0018B6  0E07               	movlw	7
 14007  0018B8  0100               	movlb	0	; () banked
 14008  0018BA  0100               	movlb	0	; () banked
 14009  0018BC  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 14010  0018BE  B4D8               	btfsc	status,2,c
 14011  0018C0  D3B6               	goto	i1l11984
 14012                           
 14013                           ; BSR set to: 0
 14014                           ;doprnt.c: 836: if(flag & 0x1000)
 14015  0018C2  0100               	movlb	0	; () banked
 14016  0018C4  0100               	movlb	0	; () banked
 14017  0018C6  A994               	btfss	(i1sprintf@flag+1)& (0+255),4,b
 14018  0018C8  D007               	goto	i1l11810
 14019                           
 14020                           ; BSR set to: 0
 14021                           ;doprnt.c: 838: prec = 6;
 14022  0018CA  0E00               	movlw	0
 14023  0018CC  0100               	movlb	0	; () banked
 14024  0018CE  0100               	movlb	0	; () banked
 14025  0018D0  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 14026  0018D2  0E06               	movlw	6
 14027  0018D4  0100               	movlb	0	; () banked
 14028  0018D6  6F9C               	movwf	i1sprintf@prec& (0+255),b
 14029  0018D8                     i1l11810:
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 14033  0018D8  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 14034  0018DC  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 14035  0018E0  0100               	movlb	0	; () banked
 14036  0018E2  CFDE F099          	movff	postinc2,i1sprintf@fval
 14037  0018E6  0100               	movlb	0	; () banked
 14038  0018E8  CFDE F09A          	movff	postinc2,i1sprintf@fval+1
 14039  0018EC  0100               	movlb	0	; () banked
 14040  0018EE  CFDD F09B          	movff	postdec2,i1sprintf@fval+2
 14041                           
 14042                           ; BSR set to: 0
 14043  0018F2  0E03               	movlw	3
 14044  0018F4  0100               	movlb	0	; () banked
 14045  0018F6  0100               	movlb	0	; () banked
 14046  0018F8  2789               	addwf	i1sprintf@ap& (0+255),f,b
 14047  0018FA  0E00               	movlw	0
 14048  0018FC  0100               	movlb	0	; () banked
 14049  0018FE  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;doprnt.c: 840: if(fval < 0.0) {
 14053  001900  0100               	movlb	0	; () banked
 14054  001902  0100               	movlb	0	; () banked
 14055  001904  519B               	movf	(i1sprintf@fval+2)& (0+255),w,b
 14056  001906  0A80               	xorlw	128
 14057  001908  0F80               	addlw	128
 14058  00190A  E107               	bnz	i1u1135_25
 14059  00190C  0E00               	movlw	0
 14060  00190E  0100               	movlb	0	; () banked
 14061  001910  5D9A               	subwf	(i1sprintf@fval+1)& (0+255),w,b
 14062  001912  E103               	bnz	i1u1135_25
 14063  001914  0E00               	movlw	0
 14064  001916  0100               	movlb	0	; () banked
 14065  001918  5D99               	subwf	i1sprintf@fval& (0+255),w,b
 14066  00191A                     i1u1135_25:
 14067  00191A  B0D8               	btfsc	status,0,c
 14068  00191C  D012               	goto	i1l11820
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;doprnt.c: 841: fval = -fval;
 14072  00191E  C099  F011         	movff	i1sprintf@fval,?i1___ftneg
 14073  001922  C09A  F012         	movff	i1sprintf@fval+1,?i1___ftneg+1
 14074  001926  C09B  F013         	movff	i1sprintf@fval+2,?i1___ftneg+2
 14075  00192A  EC3E  F033         	call	i1___ftneg	;wreg free
 14076  00192E  C013  F09B         	movff	?i1___ftneg+2,i1sprintf@fval+2
 14077  001932  C012  F09A         	movff	?i1___ftneg+1,i1sprintf@fval+1
 14078  001936  C011  F099         	movff	?i1___ftneg,i1sprintf@fval
 14079                           
 14080                           ;doprnt.c: 842: flag |= 0x03;
 14081  00193A  0E03               	movlw	3
 14082  00193C  0100               	movlb	0	; () banked
 14083  00193E  0100               	movlb	0	; () banked
 14084  001940  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 14085  001942                     i1l11820:
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;doprnt.c: 843: }
 14089                           ;doprnt.c: 844: exp = 0;
 14090  001942  0E00               	movlw	0
 14091  001944  0100               	movlb	0	; () banked
 14092  001946  0100               	movlb	0	; () banked
 14093  001948  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 14094  00194A  0E00               	movlw	0
 14095  00194C  0100               	movlb	0	; () banked
 14096  00194E  6F95               	movwf	i1sprintf@exp& (0+255),b
 14097                           
 14098                           ; BSR set to: 0
 14099                           ;doprnt.c: 845: if( fval!=0) {
 14100  001950  0E7F               	movlw	127
 14101  001952  0100               	movlb	0	; () banked
 14102  001954  0100               	movlb	0	; () banked
 14103  001956  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 14104  001958  0100               	movlb	0	; () banked
 14105  00195A  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 14106  00195C  0100               	movlb	0	; () banked
 14107  00195E  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 14108  001960  B4D8               	btfsc	status,2,c
 14109  001962  D099               	goto	i1l11848
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 14113  001964  0E82               	movlw	130
 14114  001966  0100               	movlb	0	; () banked
 14115  001968  6F78               	movwf	??i1_sprintf& (0+255),b
 14116  00196A  0EFF               	movlw	255
 14117  00196C  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 14118  00196E  0100               	movlb	0	; () banked
 14119  001970  C099  F07A         	movff	i1sprintf@fval,??i1_sprintf+2
 14120  001974  0100               	movlb	0	; () banked
 14121  001976  C09A  F07B         	movff	i1sprintf@fval+1,??i1_sprintf+3
 14122  00197A  0100               	movlb	0	; () banked
 14123  00197C  C09B  F07C         	movff	i1sprintf@fval+2,??i1_sprintf+4
 14124  001980  0100               	movlb	0	; () banked
 14125  001982  C09C  F07D         	movff	i1sprintf@fval+3,??i1_sprintf+5
 14126  001986  0E10               	movlw	16
 14127  001988  D006               	goto	i1u1137_20
 14128  00198A                     i1u1137_25:
 14129  00198A  0100               	movlb	0	; () banked
 14130  00198C  90D8               	bcf	status,0,c
 14131  00198E  337D               	rrcf	(??i1_sprintf+5)& (0+255),f,b
 14132  001990  337C               	rrcf	(??i1_sprintf+4)& (0+255),f,b
 14133  001992  337B               	rrcf	(??i1_sprintf+3)& (0+255),f,b
 14134  001994  337A               	rrcf	(??i1_sprintf+2)& (0+255),f,b
 14135  001996                     i1u1137_20:
 14136  001996  2EE8               	decfsz	wreg,f,c
 14137  001998  D7F8               	goto	i1u1137_25
 14138  00199A  0100               	movlb	0	; () banked
 14139  00199C  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 14140  00199E  0100               	movlb	0	; () banked
 14141  0019A0  2578               	addwf	??i1_sprintf& (0+255),w,b
 14142  0019A2  0100               	movlb	0	; () banked
 14143  0019A4  0100               	movlb	0	; () banked
 14144  0019A6  6F95               	movwf	i1sprintf@exp& (0+255),b
 14145  0019A8  0100               	movlb	0	; () banked
 14146  0019AA  0100               	movlb	0	; () banked
 14147  0019AC  0E00               	movlw	0
 14148  0019AE  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 14149  0019B0  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;doprnt.c: 847: exp--;
 14153  0019B2  0100               	movlb	0	; () banked
 14154  0019B4  0100               	movlb	0	; () banked
 14155  0019B6  0795               	decf	i1sprintf@exp& (0+255),f,b
 14156  0019B8  A0D8               	btfss	status,0,c
 14157  0019BA  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;doprnt.c: 848: exp *= 3;
 14161  0019BC  C095  F021         	movff	i1sprintf@exp,?i1___wmul
 14162  0019C0  C096  F022         	movff	i1sprintf@exp+1,?i1___wmul+1
 14163  0019C4  0E00               	movlw	0
 14164  0019C6  6E24               	movwf	?i1___wmul+3,c
 14165  0019C8  0E03               	movlw	3
 14166  0019CA  6E23               	movwf	?i1___wmul+2,c
 14167  0019CC  EC63  F032         	call	i1___wmul	;wreg free
 14168  0019D0  C021  F095         	movff	?i1___wmul,i1sprintf@exp
 14169  0019D4  C022  F096         	movff	?i1___wmul+1,i1sprintf@exp+1
 14170                           
 14171                           ;doprnt.c: 849: exp /= 10;
 14172  0019D8  C095  F018         	movff	i1sprintf@exp,?i1___awdiv
 14173  0019DC  C096  F019         	movff	i1sprintf@exp+1,?i1___awdiv+1
 14174  0019E0  0E00               	movlw	0
 14175  0019E2  6E1B               	movwf	?i1___awdiv+3,c
 14176  0019E4  0E0A               	movlw	10
 14177  0019E6  6E1A               	movwf	?i1___awdiv+2,c
 14178  0019E8  EC66  F02C         	call	i1___awdiv	;wreg free
 14179  0019EC  C018  F095         	movff	?i1___awdiv,i1sprintf@exp
 14180  0019F0  C019  F096         	movff	?i1___awdiv+1,i1sprintf@exp+1
 14181                           
 14182                           ;doprnt.c: 850: if(exp < 0)
 14183  0019F4  0100               	movlb	0	; () banked
 14184  0019F6  0100               	movlb	0	; () banked
 14185  0019F8  AF96               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 14186  0019FA  D005               	goto	i1l11836
 14187                           
 14188                           ; BSR set to: 0
 14189                           ;doprnt.c: 851: exp--;
 14190  0019FC  0100               	movlb	0	; () banked
 14191  0019FE  0100               	movlb	0	; () banked
 14192  001A00  0795               	decf	i1sprintf@exp& (0+255),f,b
 14193  001A02  A0D8               	btfss	status,0,c
 14194  001A04  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 14195  001A06                     i1l11836:
 14196                           
 14197                           ; BSR set to: 0
 14198                           ;doprnt.c: 855: integ = scale(-exp);
 14199  001A06  0100               	movlb	0	; () banked
 14200  001A08  0100               	movlb	0	; () banked
 14201  001A0A  5195               	movf	i1sprintf@exp& (0+255),w,b
 14202  001A0C  0800               	sublw	0
 14203  001A0E  6E47               	movwf	?i1_scale,c
 14204  001A10  EC14  F015         	call	i1_scale	;wreg free
 14205  001A14  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 14206  001A18  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 14207  001A1C  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 14208                           
 14209                           ;doprnt.c: 856: integ *= fval;
 14210  001A20  0100               	movlb	0	; () banked
 14211  001A22  0E00               	movlw	high i1sprintf@integ
 14212  001A24  0100               	movlb	0	; () banked
 14213  001A26  0100               	movlb	0	; () banked
 14214  001A28  6F61               	movwf	(?i1___asftmul+1)& (0+255),b
 14215  001A2A  0100               	movlb	0	; () banked
 14216  001A2C  0E8B               	movlw	low i1sprintf@integ
 14217  001A2E  0100               	movlb	0	; () banked
 14218  001A30  6F60               	movwf	?i1___asftmul& (0+255),b
 14219  001A32  C099  F062         	movff	i1sprintf@fval,?i1___asftmul+2
 14220  001A36  C09A  F063         	movff	i1sprintf@fval+1,?i1___asftmul+3
 14221  001A3A  C09B  F064         	movff	i1sprintf@fval+2,?i1___asftmul+4
 14222  001A3E  ECED  F031         	call	i1___asftmul	;wreg free
 14223                           
 14224                           ;doprnt.c: 857: if(integ < 1.0)
 14225  001A42  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 14226  001A46  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 14227  001A4A  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 14228  001A4E  0E00               	movlw	0
 14229  001A50  6E14               	movwf	?i1___ftge+3,c
 14230  001A52  0E80               	movlw	128
 14231  001A54  6E15               	movwf	?i1___ftge+4,c
 14232  001A56  0E3F               	movlw	63
 14233  001A58  6E16               	movwf	?i1___ftge+5,c
 14234  001A5A  EC1E  F02C         	call	i1___ftge	;wreg free
 14235  001A5E  B0D8               	btfsc	status,0,c
 14236  001A60  D006               	goto	i1l11844
 14237                           
 14238                           ;doprnt.c: 858: exp--;
 14239  001A62  0100               	movlb	0	; () banked
 14240  001A64  0100               	movlb	0	; () banked
 14241  001A66  0795               	decf	i1sprintf@exp& (0+255),f,b
 14242  001A68  A0D8               	btfss	status,0,c
 14243  001A6A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 14244  001A6C  D014               	goto	i1l11848
 14245  001A6E                     i1l11844:
 14246                           
 14247                           ;doprnt.c: 859: else if(integ >= 10.0)
 14248  001A6E  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 14249  001A72  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 14250  001A76  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 14251  001A7A  0E00               	movlw	0
 14252  001A7C  6E14               	movwf	?i1___ftge+3,c
 14253  001A7E  0E20               	movlw	32
 14254  001A80  6E15               	movwf	?i1___ftge+4,c
 14255  001A82  0E41               	movlw	65
 14256  001A84  6E16               	movwf	?i1___ftge+5,c
 14257  001A86  EC1E  F02C         	call	i1___ftge	;wreg free
 14258  001A8A  A0D8               	btfss	status,0,c
 14259  001A8C  D004               	goto	i1l11848
 14260                           
 14261                           ;doprnt.c: 860: exp++;
 14262  001A8E  0100               	movlb	0	; () banked
 14263  001A90  0100               	movlb	0	; () banked
 14264  001A92  4B95               	infsnz	i1sprintf@exp& (0+255),f,b
 14265  001A94  2B96               	incf	(i1sprintf@exp+1)& (0+255),f,b
 14266  001A96                     i1l11848:
 14267                           
 14268                           ;doprnt.c: 861: }
 14269                           ;doprnt.c: 1121: if(prec <= 12)
 14270  001A96  0100               	movlb	0	; () banked
 14271  001A98  0100               	movlb	0	; () banked
 14272  001A9A  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 14273  001A9C  0A80               	xorlw	128
 14274  001A9E  0F80               	addlw	-128
 14275  001AA0  0E0D               	movlw	13
 14276  001AA2  B4D8               	btfsc	status,2,c
 14277  001AA4  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 14278  001AA6  B0D8               	btfsc	status,0,c
 14279  001AA8  D015               	goto	i1l11852
 14280                           
 14281                           ; BSR set to: 0
 14282                           ;doprnt.c: 1122: fval += fround(prec);
 14283  001AAA  0100               	movlb	0	; () banked
 14284  001AAC  0E00               	movlw	high i1sprintf@fval
 14285  001AAE  0100               	movlb	0	; () banked
 14286  001AB0  0100               	movlb	0	; () banked
 14287  001AB2  6F6D               	movwf	(?i1___asftadd+1)& (0+255),b
 14288  001AB4  0100               	movlb	0	; () banked
 14289  001AB6  0E99               	movlw	low i1sprintf@fval
 14290  001AB8  0100               	movlb	0	; () banked
 14291  001ABA  6F6C               	movwf	?i1___asftadd& (0+255),b
 14292  001ABC  C09C  F047         	movff	i1sprintf@prec,?i1_fround
 14293  001AC0  EC99  F01A         	call	i1_fround	;wreg free
 14294  001AC4  C049  F070         	movff	?i1_fround+2,?i1___asftadd+4
 14295  001AC8  C048  F06F         	movff	?i1_fround+1,?i1___asftadd+3
 14296  001ACC  C047  F06E         	movff	?i1_fround,?i1___asftadd+2
 14297  001AD0  EC0B  F032         	call	i1___asftadd	;wreg free
 14298  001AD4                     i1l11852:
 14299                           
 14300                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 14301  001AD4  0100               	movlb	0	; () banked
 14302  001AD6  0100               	movlb	0	; () banked
 14303  001AD8  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 14304  001ADA  0A80               	xorlw	128
 14305  001ADC  0F80               	addlw	-128
 14306  001ADE  0E0A               	movlw	10
 14307  001AE0  B4D8               	btfsc	status,2,c
 14308  001AE2  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 14309  001AE4  B0D8               	btfsc	status,0,c
 14310  001AE6  D022               	goto	i1l11860
 14311                           
 14312                           ; BSR set to: 0
 14313  001AE8  0E7F               	movlw	127
 14314  001AEA  0100               	movlb	0	; () banked
 14315  001AEC  0100               	movlb	0	; () banked
 14316  001AEE  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 14317  001AF0  0100               	movlb	0	; () banked
 14318  001AF2  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 14319  001AF4  0100               	movlb	0	; () banked
 14320  001AF6  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 14321  001AF8  B4D8               	btfsc	status,2,c
 14322  001AFA  D067               	goto	i1l11876
 14323                           
 14324                           ; BSR set to: 0
 14325  001AFC  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 14326  001B00  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 14327  001B04  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 14328  001B08  EC2B  F029         	call	i1___fttol	;wreg free
 14329  001B0C  502A               	movf	?i1___fttol+3,w,c
 14330  001B0E  1027               	iorwf	?i1___fttol,w,c
 14331  001B10  1028               	iorwf	?i1___fttol+1,w,c
 14332  001B12  1029               	iorwf	?i1___fttol+2,w,c
 14333  001B14  A4D8               	btfss	status,2,c
 14334  001B16  D059               	goto	i1l11876
 14335  001B18  0100               	movlb	0	; () banked
 14336  001B1A  0100               	movlb	0	; () banked
 14337  001B1C  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 14338  001B1E  0A80               	xorlw	128
 14339  001B20  0F80               	addlw	-128
 14340  001B22  0E02               	movlw	2
 14341  001B24  B4D8               	btfsc	status,2,c
 14342  001B26  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 14343  001B28  A0D8               	btfss	status,0,c
 14344  001B2A  D04F               	goto	i1l11876
 14345  001B2C                     i1l11860:
 14346                           
 14347                           ; BSR set to: 0
 14348                           ;doprnt.c: 1129: if(integ < 4.294967296){
 14349  001B2C  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 14350  001B30  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 14351  001B34  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 14352  001B38  0E70               	movlw	112
 14353  001B3A  6E14               	movwf	?i1___ftge+3,c
 14354  001B3C  0E89               	movlw	137
 14355  001B3E  6E15               	movwf	?i1___ftge+4,c
 14356  001B40  0E40               	movlw	64
 14357  001B42  6E16               	movwf	?i1___ftge+5,c
 14358  001B44  EC1E  F02C         	call	i1___ftge	;wreg free
 14359  001B48  B0D8               	btfsc	status,0,c
 14360  001B4A  D003               	goto	i1l11864
 14361                           
 14362                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 14363  001B4C  0100               	movlb	0	; () banked
 14364  001B4E  0EF7               	movlw	247
 14365  001B50  D002               	goto	L18
 14366  001B52                     i1l11864:
 14367                           
 14368                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 14369  001B52  0100               	movlb	0	; () banked
 14370  001B54  0EF8               	movlw	248
 14371  001B56                     L18:
 14372  001B56  0100               	movlb	0	; () banked
 14373  001B58  2795               	addwf	i1sprintf@exp& (0+255),f,b
 14374  001B5A  0EFF               	movlw	255
 14375  001B5C  0100               	movlb	0	; () banked
 14376  001B5E  2396               	addwfc	(i1sprintf@exp+1)& (0+255),f,b
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;doprnt.c: 1133: }
 14380                           ;doprnt.c: 1134: integ = scale(exp);
 14381                           
 14382                           ; BSR set to: 0
 14383  001B60  C095  F047         	movff	i1sprintf@exp,?i1_scale
 14384  001B64  EC14  F015         	call	i1_scale	;wreg free
 14385  001B68  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 14386  001B6C  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 14387  001B70  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 14388                           
 14389                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 14390  001B74  C099  F011         	movff	i1sprintf@fval,?i1__tdiv_to_l_
 14391  001B78  C09A  F012         	movff	i1sprintf@fval+1,?i1__tdiv_to_l_+1
 14392  001B7C  C09B  F013         	movff	i1sprintf@fval+2,?i1__tdiv_to_l_+2
 14393  001B80  C08B  F014         	movff	i1sprintf@integ,?i1__tdiv_to_l_+3
 14394  001B84  C08C  F015         	movff	i1sprintf@integ+1,?i1__tdiv_to_l_+4
 14395  001B88  C08D  F016         	movff	i1sprintf@integ+2,?i1__tdiv_to_l_+5
 14396  001B8C  EC13  F024         	call	i1__tdiv_to_l_	;wreg free
 14397  001B90  C014  F084         	movff	?i1__tdiv_to_l_+3,i1_sprintf$723+3
 14398  001B94  C013  F083         	movff	?i1__tdiv_to_l_+2,i1_sprintf$723+2
 14399  001B98  C012  F082         	movff	?i1__tdiv_to_l_+1,i1_sprintf$723+1
 14400  001B9C  C011  F081         	movff	?i1__tdiv_to_l_,i1_sprintf$723
 14401  001BA0  C081  F08E         	movff	i1_sprintf$723,i1sprintf@_val
 14402  001BA4  C082  F08F         	movff	i1_sprintf$723+1,i1sprintf@_val+1
 14403  001BA8  C083  F090         	movff	i1_sprintf$723+2,i1sprintf@_val+2
 14404  001BAC  C084  F091         	movff	i1_sprintf$723+3,i1sprintf@_val+3
 14405                           
 14406                           ;doprnt.c: 1138: fval = 0.0;
 14407  001BB0  0E00               	movlw	0
 14408  001BB2  0100               	movlb	0	; () banked
 14409  001BB4  0100               	movlb	0	; () banked
 14410  001BB6  6F99               	movwf	i1sprintf@fval& (0+255),b
 14411  001BB8  0E00               	movlw	0
 14412  001BBA  0100               	movlb	0	; () banked
 14413  001BBC  0100               	movlb	0	; () banked
 14414  001BBE  6F9A               	movwf	(i1sprintf@fval+1)& (0+255),b
 14415  001BC0  0E00               	movlw	0
 14416  001BC2  0100               	movlb	0	; () banked
 14417  001BC4  0100               	movlb	0	; () banked
 14418  001BC6  6F9B               	movwf	(i1sprintf@fval+2)& (0+255),b
 14419                           
 14420                           ;doprnt.c: 1139: } else {
 14421  001BC8  D02F               	goto	i1l11882
 14422  001BCA                     i1l11876:
 14423                           
 14424                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 14425  001BCA  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 14426  001BCE  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 14427  001BD2  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 14428  001BD6  EC2B  F029         	call	i1___fttol	;wreg free
 14429  001BDA  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 14430  001BDE  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 14431  001BE2  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 14432  001BE6  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 14433                           
 14434                           ;doprnt.c: 1141: fval -= (double)_val._val;
 14435  001BEA  0100               	movlb	0	; () banked
 14436  001BEC  0E00               	movlw	high i1sprintf@fval
 14437  001BEE  6E2E               	movwf	?i1___asftsub+1,c
 14438  001BF0  0100               	movlb	0	; () banked
 14439  001BF2  0E99               	movlw	low i1sprintf@fval
 14440  001BF4  6E2D               	movwf	?i1___asftsub,c
 14441  001BF6  C08E  F019         	movff	i1sprintf@_val,?i1___lltoft
 14442  001BFA  C08F  F01A         	movff	i1sprintf@_val+1,?i1___lltoft+1
 14443  001BFE  C090  F01B         	movff	i1sprintf@_val+2,?i1___lltoft+2
 14444  001C02  C091  F01C         	movff	i1sprintf@_val+3,?i1___lltoft+3
 14445  001C06  EC58  F02F         	call	i1___lltoft	;wreg free
 14446  001C0A  C01B  F031         	movff	?i1___lltoft+2,?i1___asftsub+4
 14447  001C0E  C01A  F030         	movff	?i1___lltoft+1,?i1___asftsub+3
 14448  001C12  C019  F02F         	movff	?i1___lltoft,?i1___asftsub+2
 14449  001C16  ECCF  F031         	call	i1___asftsub	;wreg free
 14450                           
 14451                           ;doprnt.c: 1142: exp = 0;
 14452  001C1A  0E00               	movlw	0
 14453  001C1C  0100               	movlb	0	; () banked
 14454  001C1E  0100               	movlb	0	; () banked
 14455  001C20  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 14456  001C22  0E00               	movlw	0
 14457  001C24  0100               	movlb	0	; () banked
 14458  001C26  6F95               	movwf	i1sprintf@exp& (0+255),b
 14459  001C28                     i1l11882:
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;doprnt.c: 1143: }
 14463                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 14464  001C28  0100               	movlb	0	; () banked
 14465  001C2A  6F78               	movwf	??i1_sprintf& (0+255),b
 14466  001C2C  0E01               	movlw	1
 14467  001C2E  0100               	movlb	0	; () banked
 14468  001C30  0100               	movlb	0	; () banked
 14469  001C32  6F9E               	movwf	i1sprintf@c& (0+255),b
 14470  001C34  0100               	movlb	0	; () banked
 14471  001C36  5178               	movf	??i1_sprintf& (0+255),w,b
 14472  001C38                     
 14473                           ; BSR set to: 0
 14474  001C38  0100               	movlb	0	; () banked
 14475  001C3A  0100               	movlb	0	; () banked
 14476  001C3C  519E               	movf	i1sprintf@c& (0+255),w,b
 14477  001C3E  0A0A               	xorlw	10
 14478  001C40  B4D8               	btfsc	status,2,c
 14479  001C42  D021               	goto	i1l11896
 14480                           
 14481                           ; BSR set to: 0
 14482                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 14483                           
 14484                           ; BSR set to: 0
 14485                           
 14486                           ; BSR set to: 0
 14487  001C44  0100               	movlb	0	; () banked
 14488  001C46  0100               	movlb	0	; () banked
 14489  001C48  519E               	movf	i1sprintf@c& (0+255),w,b
 14490  001C4A  0D04               	mullw	4
 14491  001C4C  0E00               	movlw	low _dpowers
 14492  001C4E  24F3               	addwf	prodl,w,c
 14493  001C50  6EF6               	movwf	tblptrl,c
 14494  001C52  0E08               	movlw	high _dpowers
 14495  001C54  20F4               	addwfc	prodh,w,c
 14496  001C56  6EF7               	movwf	tblptrh,c
 14497  001C58  0009               	tblrd		*+
 14498  001C5A  50F5               	movf	tablat,w,c
 14499  001C5C  0100               	movlb	0	; () banked
 14500  001C5E  0100               	movlb	0	; () banked
 14501  001C60  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 14502  001C62  0009               	tblrd		*+
 14503  001C64  50F5               	movf	tablat,w,c
 14504  001C66  0100               	movlb	0	; () banked
 14505  001C68  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 14506  001C6A  0009               	tblrd		*+
 14507  001C6C  50F5               	movf	tablat,w,c
 14508  001C6E  0100               	movlb	0	; () banked
 14509  001C70  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 14510  001C72  0009               	tblrd		*+
 14511  001C74  50F5               	movf	tablat,w,c
 14512  001C76  0100               	movlb	0	; () banked
 14513  001C78  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 14514  001C7A  A0D8               	btfss	status,0,c
 14515  001C7C  D004               	goto	i1l11896
 14516                           
 14517                           ; BSR set to: 0
 14518                           
 14519                           ; BSR set to: 0
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;doprnt.c: 1147: break;
 14523  001C7E  0100               	movlb	0	; () banked
 14524  001C80  0100               	movlb	0	; () banked
 14525  001C82  2B9E               	incf	i1sprintf@c& (0+255),f,b
 14526  001C84  D7D9               	goto	L19
 14527  001C86                     i1l11896:
 14528                           
 14529                           ; BSR set to: 0
 14530                           ;doprnt.c: 1151: width -= prec + c + exp;
 14531  001C86  0100               	movlb	0	; () banked
 14532  001C88  C09E  F078         	movff	i1sprintf@c,??i1_sprintf
 14533  001C8C  0100               	movlb	0	; () banked
 14534  001C8E  6B79               	clrf	(??i1_sprintf+1)& (0+255),b
 14535  001C90  BF78               	btfsc	??i1_sprintf& (0+255),7,b
 14536  001C92  0779               	decf	(??i1_sprintf+1)& (0+255),f,b
 14537  001C94  0100               	movlb	0	; () banked
 14538  001C96  0100               	movlb	0	; () banked
 14539  001C98  519C               	movf	i1sprintf@prec& (0+255),w,b
 14540  001C9A  0100               	movlb	0	; () banked
 14541  001C9C  2778               	addwf	??i1_sprintf& (0+255),f,b
 14542  001C9E  0100               	movlb	0	; () banked
 14543  001CA0  0100               	movlb	0	; () banked
 14544  001CA2  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 14545  001CA4  0100               	movlb	0	; () banked
 14546  001CA6  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 14547  001CA8  0100               	movlb	0	; () banked
 14548  001CAA  0100               	movlb	0	; () banked
 14549  001CAC  5195               	movf	i1sprintf@exp& (0+255),w,b
 14550  001CAE  0100               	movlb	0	; () banked
 14551  001CB0  2778               	addwf	??i1_sprintf& (0+255),f,b
 14552  001CB2  0100               	movlb	0	; () banked
 14553  001CB4  0100               	movlb	0	; () banked
 14554  001CB6  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 14555  001CB8  0100               	movlb	0	; () banked
 14556  001CBA  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 14557  001CBC  0100               	movlb	0	; () banked
 14558  001CBE  5178               	movf	??i1_sprintf& (0+255),w,b
 14559  001CC0  0100               	movlb	0	; () banked
 14560  001CC2  0100               	movlb	0	; () banked
 14561  001CC4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 14562  001CC6  0100               	movlb	0	; () banked
 14563  001CC8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 14564  001CCA  0100               	movlb	0	; () banked
 14565  001CCC  0100               	movlb	0	; () banked
 14566  001CCE  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 14567                           
 14568                           ;doprnt.c: 1152: if(
 14569                           ;doprnt.c: 1156: prec)
 14570  001CD0  0100               	movlb	0	; () banked
 14571  001CD2  0100               	movlb	0	; () banked
 14572  001CD4  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 14573  001CD6  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 14574  001CD8  B4D8               	btfsc	status,2,c
 14575  001CDA  D005               	goto	i1l11900
 14576                           
 14577                           ; BSR set to: 0
 14578                           ;doprnt.c: 1157: width--;
 14579  001CDC  0100               	movlb	0	; () banked
 14580  001CDE  0100               	movlb	0	; () banked
 14581  001CE0  0797               	decf	i1sprintf@width& (0+255),f,b
 14582  001CE2  A0D8               	btfss	status,0,c
 14583  001CE4  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 14584  001CE6                     i1l11900:
 14585                           
 14586                           ; BSR set to: 0
 14587                           ;doprnt.c: 1158: if(flag & 0x03)
 14588  001CE6  0E03               	movlw	3
 14589  001CE8  0100               	movlb	0	; () banked
 14590  001CEA  0100               	movlb	0	; () banked
 14591  001CEC  1593               	andwf	i1sprintf@flag& (0+255),w,b
 14592  001CEE  0100               	movlb	0	; () banked
 14593  001CF0  6F78               	movwf	??i1_sprintf& (0+255),b
 14594  001CF2  0E00               	movlw	0
 14595  001CF4  0100               	movlb	0	; () banked
 14596  001CF6  0100               	movlb	0	; () banked
 14597  001CF8  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 14598  001CFA  0100               	movlb	0	; () banked
 14599  001CFC  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 14600  001CFE  0100               	movlb	0	; () banked
 14601  001D00  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 14602  001D02  1178               	iorwf	??i1_sprintf& (0+255),w,b
 14603  001D04  B4D8               	btfsc	status,2,c
 14604  001D06  D005               	goto	i1l11904
 14605                           
 14606                           ; BSR set to: 0
 14607                           ;doprnt.c: 1159: width--;
 14608  001D08  0100               	movlb	0	; () banked
 14609  001D0A  0100               	movlb	0	; () banked
 14610  001D0C  0797               	decf	i1sprintf@width& (0+255),f,b
 14611  001D0E  A0D8               	btfss	status,0,c
 14612  001D10  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 14613  001D12                     i1l11904:
 14614                           
 14615                           ; BSR set to: 0
 14616                           ;doprnt.c: 1162: if(flag & 0x04) {
 14617  001D12  0100               	movlb	0	; () banked
 14618  001D14  0100               	movlb	0	; () banked
 14619  001D16  B593               	btfsc	i1sprintf@flag& (0+255),2,b
 14620  001D18  D010               	goto	i1l11914
 14621  001D1A  D029               	goto	i1l11922
 14622  001D1C                     i1l11908:
 14623                           
 14624                           ; BSR set to: 0
 14625                           ;doprnt.c: 1176: ((*sp++ = ('0')));
 14626  001D1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 14627  001D20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 14628  001D24  0E30               	movlw	48
 14629  001D26  6EDF               	movwf	indf2,c
 14630                           
 14631                           ; BSR set to: 0
 14632  001D28  0100               	movlb	0	; () banked
 14633  001D2A  0100               	movlb	0	; () banked
 14634  001D2C  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 14635  001D2E  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;doprnt.c: 1177: width--;
 14639  001D30  0100               	movlb	0	; () banked
 14640  001D32  0100               	movlb	0	; () banked
 14641  001D34  0797               	decf	i1sprintf@width& (0+255),f,b
 14642  001D36  A0D8               	btfss	status,0,c
 14643  001D38  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 14644  001D3A                     i1l11914:
 14645                           
 14646                           ; BSR set to: 0
 14647  001D3A  0100               	movlb	0	; () banked
 14648  001D3C  0100               	movlb	0	; () banked
 14649  001D3E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 14650  001D40  0A80               	xorlw	128
 14651  001D42  0F80               	addlw	-128
 14652  001D44  0E01               	movlw	1
 14653  001D46  B4D8               	btfsc	status,2,c
 14654  001D48  5D97               	subwf	i1sprintf@width& (0+255),w,b
 14655  001D4A  A0D8               	btfss	status,0,c
 14656  001D4C  D070               	goto	i1l11938
 14657  001D4E  D7E6               	goto	i1l11908
 14658  001D50                     i1l11916:
 14659                           
 14660                           ; BSR set to: 0
 14661                           ;doprnt.c: 1188: ((*sp++ = (' ')));
 14662  001D50  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 14663  001D54  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 14664  001D58  0E20               	movlw	32
 14665  001D5A  6EDF               	movwf	indf2,c
 14666                           
 14667                           ; BSR set to: 0
 14668  001D5C  0100               	movlb	0	; () banked
 14669  001D5E  0100               	movlb	0	; () banked
 14670  001D60  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 14671  001D62  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;doprnt.c: 1189: width--;
 14675  001D64  0100               	movlb	0	; () banked
 14676  001D66  0100               	movlb	0	; () banked
 14677  001D68  0797               	decf	i1sprintf@width& (0+255),f,b
 14678  001D6A  A0D8               	btfss	status,0,c
 14679  001D6C  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 14680  001D6E                     i1l11922:
 14681                           
 14682                           ; BSR set to: 0
 14683  001D6E  0100               	movlb	0	; () banked
 14684  001D70  0100               	movlb	0	; () banked
 14685  001D72  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 14686  001D74  0A80               	xorlw	128
 14687  001D76  0F80               	addlw	-128
 14688  001D78  0E01               	movlw	1
 14689  001D7A  B4D8               	btfsc	status,2,c
 14690  001D7C  5D97               	subwf	i1sprintf@width& (0+255),w,b
 14691  001D7E  B0D8               	btfsc	status,0,c
 14692  001D80  D7E7               	goto	i1l11916
 14693                           
 14694                           ; BSR set to: 0
 14695                           ;doprnt.c: 1190: }
 14696                           ;doprnt.c: 1195: if(flag & 0x03)
 14697                           
 14698                           ; BSR set to: 0
 14699  001D82  0E03               	movlw	3
 14700  001D84  0100               	movlb	0	; () banked
 14701  001D86  0100               	movlb	0	; () banked
 14702  001D88  1593               	andwf	i1sprintf@flag& (0+255),w,b
 14703  001D8A  0100               	movlb	0	; () banked
 14704  001D8C  6F78               	movwf	??i1_sprintf& (0+255),b
 14705  001D8E  0E00               	movlw	0
 14706  001D90  0100               	movlb	0	; () banked
 14707  001D92  0100               	movlb	0	; () banked
 14708  001D94  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 14709  001D96  0100               	movlb	0	; () banked
 14710  001D98  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 14711  001D9A  0100               	movlb	0	; () banked
 14712  001D9C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 14713  001D9E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 14714  001DA0  B4D8               	btfsc	status,2,c
 14715  001DA2  D045               	goto	i1l11938
 14716                           
 14717                           ; BSR set to: 0
 14718                           ;doprnt.c: 1197: ((*sp++ = ('-')));
 14719  001DA4  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 14720  001DA8  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 14721  001DAC  0E2D               	movlw	45
 14722  001DAE  D03A               	goto	L20
 14723  001DB0                     i1l11930:
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;doprnt.c: 1207: {
 14727                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
 14728  001DB0  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 14729  001DB4  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 14730  001DB8  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 14731  001DBC  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 14732  001DC0  0100               	movlb	0	; () banked
 14733  001DC2  0100               	movlb	0	; () banked
 14734  001DC4  519E               	movf	i1sprintf@c& (0+255),w,b
 14735  001DC6  0D04               	mullw	4
 14736  001DC8  0E00               	movlw	low _dpowers
 14737  001DCA  24F3               	addwf	prodl,w,c
 14738  001DCC  6EF6               	movwf	tblptrl,c
 14739  001DCE  0E08               	movlw	high _dpowers
 14740  001DD0  20F4               	addwfc	prodh,w,c
 14741  001DD2  6EF7               	movwf	tblptrh,c
 14742  001DD4  0009               	tblrd		*+
 14743  001DD6  CFF5 F015          	movff	tablat,?i1___lldiv+4
 14744  001DDA  0009               	tblrd		*+
 14745  001DDC  CFF5 F016          	movff	tablat,?i1___lldiv+5
 14746  001DE0  0009               	tblrd		*+
 14747  001DE2  CFF5 F017          	movff	tablat,?i1___lldiv+6
 14748  001DE6  000A               	tblrd		*-
 14749  001DE8  CFF5 F018          	movff	tablat,?i1___lldiv+7
 14750  001DEC  EC3A  F02D         	call	i1___lldiv	;wreg free
 14751  001DF0  C011  F085         	movff	?i1___lldiv,i1sprintf@vd
 14752  001DF4  C012  F086         	movff	?i1___lldiv+1,i1sprintf@vd+1
 14753                           
 14754                           ;doprnt.c: 1209: vd %= 10;
 14755  001DF8  C085  F011         	movff	i1sprintf@vd,?i1___lwmod
 14756  001DFC  C086  F012         	movff	i1sprintf@vd+1,?i1___lwmod+1
 14757  001E00  0E00               	movlw	0
 14758  001E02  6E14               	movwf	?i1___lwmod+3,c
 14759  001E04  0E0A               	movlw	10
 14760  001E06  6E13               	movwf	?i1___lwmod+2,c
 14761  001E08  EC85  F030         	call	i1___lwmod	;wreg free
 14762  001E0C  C011  F085         	movff	?i1___lwmod,i1sprintf@vd
 14763  001E10  C012  F086         	movff	?i1___lwmod+1,i1sprintf@vd+1
 14764                           
 14765                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
 14766  001E14  0100               	movlb	0	; () banked
 14767  001E16  0100               	movlb	0	; () banked
 14768  001E18  5185               	movf	i1sprintf@vd& (0+255),w,b
 14769  001E1A  0F30               	addlw	48
 14770  001E1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 14771  001E20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 14772  001E24                     L20:
 14773  001E24  6EDF               	movwf	indf2,c
 14774                           
 14775                           ; BSR set to: 0
 14776  001E26  0100               	movlb	0	; () banked
 14777  001E28  0100               	movlb	0	; () banked
 14778  001E2A  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 14779  001E2C  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 14780  001E2E                     i1l11938:
 14781                           
 14782                           ; BSR set to: 0
 14783  001E2E  0100               	movlb	0	; () banked
 14784  001E30  0100               	movlb	0	; () banked
 14785  001E32  079E               	decf	i1sprintf@c& (0+255),f,b
 14786  001E34  0100               	movlb	0	; () banked
 14787  001E36  299E               	incf	i1sprintf@c& (0+255),w,b
 14788  001E38  B4D8               	btfsc	status,2,c
 14789  001E3A  D010               	goto	i1l11946
 14790  001E3C  D7B9               	goto	i1l11930
 14791  001E3E                     i1l11940:
 14792                           
 14793                           ; BSR set to: 0
 14794                           ;doprnt.c: 1215: ((*sp++ = ('0')));
 14795  001E3E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 14796  001E42  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 14797  001E46  0E30               	movlw	48
 14798  001E48  6EDF               	movwf	indf2,c
 14799                           
 14800                           ; BSR set to: 0
 14801  001E4A  0100               	movlb	0	; () banked
 14802  001E4C  0100               	movlb	0	; () banked
 14803  001E4E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 14804  001E50  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;doprnt.c: 1216: exp--;
 14808  001E52  0100               	movlb	0	; () banked
 14809  001E54  0100               	movlb	0	; () banked
 14810  001E56  0795               	decf	i1sprintf@exp& (0+255),f,b
 14811  001E58  A0D8               	btfss	status,0,c
 14812  001E5A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 14813  001E5C                     i1l11946:
 14814                           
 14815                           ; BSR set to: 0
 14816  001E5C  0100               	movlb	0	; () banked
 14817  001E5E  0100               	movlb	0	; () banked
 14818  001E60  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 14819  001E62  0A80               	xorlw	128
 14820  001E64  0F80               	addlw	-128
 14821  001E66  0E01               	movlw	1
 14822  001E68  B4D8               	btfsc	status,2,c
 14823  001E6A  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 14824  001E6C  B0D8               	btfsc	status,0,c
 14825  001E6E  D7E7               	goto	i1l11940
 14826                           
 14827                           ; BSR set to: 0
 14828                           ;doprnt.c: 1217: }
 14829                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 14830                           
 14831                           ; BSR set to: 0
 14832  001E70  0100               	movlb	0	; () banked
 14833  001E72  0100               	movlb	0	; () banked
 14834  001E74  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 14835  001E76  0A80               	xorlw	128
 14836  001E78  0F80               	addlw	-128
 14837  001E7A  0E09               	movlw	9
 14838  001E7C  B4D8               	btfsc	status,2,c
 14839  001E7E  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 14840  001E80  A0D8               	btfss	status,0,c
 14841  001E82  D009               	goto	i1l368
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
 14845  001E84  0100               	movlb	0	; () banked
 14846  001E86  6F78               	movwf	??i1_sprintf& (0+255),b
 14847  001E88  0E08               	movlw	8
 14848  001E8A  0100               	movlb	0	; () banked
 14849  001E8C  0100               	movlb	0	; () banked
 14850  001E8E  6F9E               	movwf	i1sprintf@c& (0+255),b
 14851  001E90  0100               	movlb	0	; () banked
 14852  001E92  5178               	movf	??i1_sprintf& (0+255),w,b
 14853  001E94  D002               	goto	i1l11952
 14854  001E96                     i1l368:
 14855                           
 14856                           ; BSR set to: 0
 14857                           ;doprnt.c: 1220: else
 14858                           ;doprnt.c: 1221: c = prec;
 14859  001E96  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 14860  001E9A                     i1l11952:
 14861                           
 14862                           ; BSR set to: 0
 14863                           ;doprnt.c: 1222: prec -= c;
 14864  001E9A  0100               	movlb	0	; () banked
 14865  001E9C  0100               	movlb	0	; () banked
 14866  001E9E  519E               	movf	i1sprintf@c& (0+255),w,b
 14867  001EA0  0100               	movlb	0	; () banked
 14868  001EA2  0100               	movlb	0	; () banked
 14869  001EA4  5F9C               	subwf	i1sprintf@prec& (0+255),f,b
 14870  001EA6  0E00               	movlw	0
 14871  001EA8  0100               	movlb	0	; () banked
 14872  001EAA  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 14873  001EAC  0EFF               	movlw	255
 14874  001EAE  0100               	movlb	0	; () banked
 14875  001EB0  0100               	movlb	0	; () banked
 14876  001EB2  5B9D               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;doprnt.c: 1226: if(c)
 14880  001EB4  0100               	movlb	0	; () banked
 14881  001EB6  0100               	movlb	0	; () banked
 14882  001EB8  519E               	movf	i1sprintf@c& (0+255),w,b
 14883  001EBA  B4D8               	btfsc	status,2,c
 14884  001EBC  D00A               	goto	i1l11960
 14885                           
 14886                           ; BSR set to: 0
 14887                           ;doprnt.c: 1228: ((*sp++ = ('.')));
 14888  001EBE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 14889  001EC2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 14890  001EC6  0E2E               	movlw	46
 14891  001EC8  6EDF               	movwf	indf2,c
 14892                           
 14893                           ; BSR set to: 0
 14894  001ECA  0100               	movlb	0	; () banked
 14895  001ECC  0100               	movlb	0	; () banked
 14896  001ECE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 14897  001ED0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 14898  001ED2                     i1l11960:
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 14902  001ED2  C09E  F047         	movff	i1sprintf@c,?i1_scale
 14903  001ED6  EC14  F015         	call	i1_scale	;wreg free
 14904  001EDA  C049  F080         	movff	?i1_scale+2,i1_sprintf$2022+2
 14905  001EDE  C048  F07F         	movff	?i1_scale+1,i1_sprintf$2022+1
 14906  001EE2  C047  F07E         	movff	?i1_scale,i1_sprintf$2022
 14907                           
 14908                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 14909  001EE6  C099  F039         	movff	i1sprintf@fval,?i1___ftmul+3
 14910  001EEA  C09A  F03A         	movff	i1sprintf@fval+1,?i1___ftmul+4
 14911  001EEE  C09B  F03B         	movff	i1sprintf@fval+2,?i1___ftmul+5
 14912  001EF2  C07E  F036         	movff	i1_sprintf$2022,?i1___ftmul
 14913  001EF6  C07F  F037         	movff	i1_sprintf$2022+1,?i1___ftmul+1
 14914  001EFA  C080  F038         	movff	i1_sprintf$2022+2,?i1___ftmul+2
 14915  001EFE  ECBA  F025         	call	i1___ftmul	;wreg free
 14916  001F02  C038  F029         	movff	?i1___ftmul+2,?i1___fttol+2
 14917  001F06  C037  F028         	movff	?i1___ftmul+1,?i1___fttol+1
 14918  001F0A  C036  F027         	movff	?i1___ftmul,?i1___fttol
 14919  001F0E  EC2B  F029         	call	i1___fttol	;wreg free
 14920  001F12  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 14921  001F16  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 14922  001F1A  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 14923  001F1E  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 14924                           
 14925                           ;doprnt.c: 1235: while(c--) {
 14926  001F22  D067               	goto	i1l11974
 14927  001F24                     i1l11964:
 14928                           
 14929                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
 14930  001F24  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 14931  001F28  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 14932  001F2C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 14933  001F30  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 14934  001F34  0100               	movlb	0	; () banked
 14935  001F36  0100               	movlb	0	; () banked
 14936  001F38  519E               	movf	i1sprintf@c& (0+255),w,b
 14937  001F3A  0D04               	mullw	4
 14938  001F3C  0E00               	movlw	low _dpowers
 14939  001F3E  24F3               	addwf	prodl,w,c
 14940  001F40  6EF6               	movwf	tblptrl,c
 14941  001F42  0E08               	movlw	high _dpowers
 14942  001F44  20F4               	addwfc	prodh,w,c
 14943  001F46  6EF7               	movwf	tblptrh,c
 14944  001F48  0009               	tblrd		*+
 14945  001F4A  CFF5 F015          	movff	tablat,?i1___lldiv+4
 14946  001F4E  0009               	tblrd		*+
 14947  001F50  CFF5 F016          	movff	tablat,?i1___lldiv+5
 14948  001F54  0009               	tblrd		*+
 14949  001F56  CFF5 F017          	movff	tablat,?i1___lldiv+6
 14950  001F5A  000A               	tblrd		*-
 14951  001F5C  CFF5 F018          	movff	tablat,?i1___lldiv+7
 14952  001F60  EC3A  F02D         	call	i1___lldiv	;wreg free
 14953  001F64  C011  F087         	movff	?i1___lldiv,i1sprintf@vd_725
 14954  001F68  C012  F088         	movff	?i1___lldiv+1,i1sprintf@vd_725+1
 14955                           
 14956                           ;doprnt.c: 1237: vd %= 10;
 14957  001F6C  C087  F011         	movff	i1sprintf@vd_725,?i1___lwmod
 14958  001F70  C088  F012         	movff	i1sprintf@vd_725+1,?i1___lwmod+1
 14959  001F74  0E00               	movlw	0
 14960  001F76  6E14               	movwf	?i1___lwmod+3,c
 14961  001F78  0E0A               	movlw	10
 14962  001F7A  6E13               	movwf	?i1___lwmod+2,c
 14963  001F7C  EC85  F030         	call	i1___lwmod	;wreg free
 14964  001F80  C011  F087         	movff	?i1___lwmod,i1sprintf@vd_725
 14965  001F84  C012  F088         	movff	?i1___lwmod+1,i1sprintf@vd_725+1
 14966                           
 14967                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
 14968  001F88  0100               	movlb	0	; () banked
 14969  001F8A  0100               	movlb	0	; () banked
 14970  001F8C  5187               	movf	i1sprintf@vd_725& (0+255),w,b
 14971  001F8E  0F30               	addlw	48
 14972  001F90  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 14973  001F94  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 14974  001F98  6EDF               	movwf	indf2,c
 14975                           
 14976                           ; BSR set to: 0
 14977  001F9A  0100               	movlb	0	; () banked
 14978  001F9C  0100               	movlb	0	; () banked
 14979  001F9E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 14980  001FA0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 14981                           
 14982                           ; BSR set to: 0
 14983                           ;doprnt.c: 1239: _val._val %= dpowers[c];
 14984  001FA2  C08E  F01F         	movff	i1sprintf@_val,?i1___llmod
 14985  001FA6  C08F  F020         	movff	i1sprintf@_val+1,?i1___llmod+1
 14986  001FAA  C090  F021         	movff	i1sprintf@_val+2,?i1___llmod+2
 14987  001FAE  C091  F022         	movff	i1sprintf@_val+3,?i1___llmod+3
 14988  001FB2  0100               	movlb	0	; () banked
 14989  001FB4  0100               	movlb	0	; () banked
 14990  001FB6  519E               	movf	i1sprintf@c& (0+255),w,b
 14991  001FB8  0D04               	mullw	4
 14992  001FBA  0E00               	movlw	low _dpowers
 14993  001FBC  24F3               	addwf	prodl,w,c
 14994  001FBE  6EF6               	movwf	tblptrl,c
 14995  001FC0  0E08               	movlw	high _dpowers
 14996  001FC2  20F4               	addwfc	prodh,w,c
 14997  001FC4  6EF7               	movwf	tblptrh,c
 14998  001FC6  0009               	tblrd		*+
 14999  001FC8  CFF5 F023          	movff	tablat,?i1___llmod+4
 15000  001FCC  0009               	tblrd		*+
 15001  001FCE  CFF5 F024          	movff	tablat,?i1___llmod+5
 15002  001FD2  0009               	tblrd		*+
 15003  001FD4  CFF5 F025          	movff	tablat,?i1___llmod+6
 15004  001FD8  000A               	tblrd		*-
 15005  001FDA  CFF5 F026          	movff	tablat,?i1___llmod+7
 15006  001FDE  ECF1  F02E         	call	i1___llmod	;wreg free
 15007  001FE2  C022  F091         	movff	?i1___llmod+3,i1sprintf@_val+3
 15008  001FE6  C021  F090         	movff	?i1___llmod+2,i1sprintf@_val+2
 15009  001FEA  C020  F08F         	movff	?i1___llmod+1,i1sprintf@_val+1
 15010  001FEE  C01F  F08E         	movff	?i1___llmod,i1sprintf@_val
 15011  001FF2                     i1l11974:
 15012  001FF2  0100               	movlb	0	; () banked
 15013  001FF4  0100               	movlb	0	; () banked
 15014  001FF6  079E               	decf	i1sprintf@c& (0+255),f,b
 15015  001FF8  0100               	movlb	0	; () banked
 15016  001FFA  299E               	incf	i1sprintf@c& (0+255),w,b
 15017  001FFC  B4D8               	btfsc	status,2,c
 15018  001FFE  D010               	goto	i1l11982
 15019  002000  D791               	goto	i1l11964
 15020  002002                     i1l11976:
 15021                           
 15022                           ; BSR set to: 0
 15023                           ;doprnt.c: 1243: ((*sp++ = ('0')));
 15024  002002  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 15025  002006  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 15026  00200A  0E30               	movlw	48
 15027  00200C  6EDF               	movwf	indf2,c
 15028                           
 15029                           ; BSR set to: 0
 15030  00200E  0100               	movlb	0	; () banked
 15031  002010  0100               	movlb	0	; () banked
 15032  002012  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 15033  002014  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 15034                           
 15035                           ; BSR set to: 0
 15036                           ;doprnt.c: 1244: prec--;
 15037  002016  0100               	movlb	0	; () banked
 15038  002018  0100               	movlb	0	; () banked
 15039  00201A  079C               	decf	i1sprintf@prec& (0+255),f,b
 15040  00201C  A0D8               	btfss	status,0,c
 15041  00201E  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 15042  002020                     i1l11982:
 15043                           
 15044                           ; BSR set to: 0
 15045  002020  0100               	movlb	0	; () banked
 15046  002022  0100               	movlb	0	; () banked
 15047  002024  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 15048  002026  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 15049  002028  B4D8               	btfsc	status,2,c
 15050  00202A  D1DB               	goto	i1l12080
 15051  00202C  D7EA               	goto	i1l11976
 15052  00202E                     i1l11984:
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;doprnt.c: 1253: }
 15056                           ;doprnt.c: 1260: {
 15057                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 15058  00202E  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 15059  002032  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 15060  002036  0100               	movlb	0	; () banked
 15061  002038  CFDE F08E          	movff	postinc2,i1sprintf@_val
 15062  00203C  0100               	movlb	0	; () banked
 15063  00203E  CFDD F08F          	movff	postdec2,i1sprintf@_val+1
 15064  002042  0100               	movlb	0	; () banked
 15065  002044  0E00               	movlw	0
 15066  002046  0100               	movlb	0	; () banked
 15067  002048  BF8F               	btfsc	(i1sprintf@_val+1)& (0+255),7,b
 15068  00204A  0EFF               	movlw	-1
 15069  00204C  0100               	movlb	0	; () banked
 15070  00204E  6F90               	movwf	(i1sprintf@_val+2)& (0+255),b
 15071  002050  0100               	movlb	0	; () banked
 15072  002052  6F91               	movwf	(i1sprintf@_val+3)& (0+255),b
 15073                           
 15074                           ; BSR set to: 0
 15075  002054  0E02               	movlw	2
 15076  002056  0100               	movlb	0	; () banked
 15077  002058  0100               	movlb	0	; () banked
 15078  00205A  2789               	addwf	i1sprintf@ap& (0+255),f,b
 15079  00205C  0E00               	movlw	0
 15080  00205E  0100               	movlb	0	; () banked
 15081  002060  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 15082                           
 15083                           ; BSR set to: 0
 15084                           ;doprnt.c: 1268: if((long)_val._val < 0) {
 15085  002062  0100               	movlb	0	; () banked
 15086  002064  0100               	movlb	0	; () banked
 15087  002066  AF91               	btfss	(i1sprintf@_val+3)& (0+255),7,b
 15088  002068  D014               	goto	i1l11994
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;doprnt.c: 1269: flag |= 0x03;
 15092  00206A  0E03               	movlw	3
 15093  00206C  0100               	movlb	0	; () banked
 15094  00206E  0100               	movlb	0	; () banked
 15095  002070  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 15096                           
 15097                           ; BSR set to: 0
 15098                           ;doprnt.c: 1270: _val._val = -_val._val;
 15099  002072  0100               	movlb	0	; () banked
 15100  002074  0100               	movlb	0	; () banked
 15101  002076  1F91               	comf	(i1sprintf@_val+3)& (0+255),f,b
 15102  002078  0100               	movlb	0	; () banked
 15103  00207A  1F90               	comf	(i1sprintf@_val+2)& (0+255),f,b
 15104  00207C  0100               	movlb	0	; () banked
 15105  00207E  1F8F               	comf	(i1sprintf@_val+1)& (0+255),f,b
 15106  002080  0100               	movlb	0	; () banked
 15107  002082  6D8E               	negf	i1sprintf@_val& (0+255),b
 15108  002084  0E00               	movlw	0
 15109  002086  0100               	movlb	0	; () banked
 15110  002088  238F               	addwfc	(i1sprintf@_val+1)& (0+255),f,b
 15111  00208A  0100               	movlb	0	; () banked
 15112  00208C  2390               	addwfc	(i1sprintf@_val+2)& (0+255),f,b
 15113  00208E  0100               	movlb	0	; () banked
 15114  002090  2391               	addwfc	(i1sprintf@_val+3)& (0+255),f,b
 15115  002092                     i1l11994:
 15116                           
 15117                           ; BSR set to: 0
 15118                           ;doprnt.c: 1271: }
 15119                           ;doprnt.c: 1273: }
 15120                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
 15121  002092  0100               	movlb	0	; () banked
 15122  002094  0100               	movlb	0	; () banked
 15123  002096  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 15124  002098  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 15125  00209A  A4D8               	btfss	status,2,c
 15126  00209C  D00C               	goto	i1l12000
 15127                           
 15128                           ; BSR set to: 0
 15129  00209E  0100               	movlb	0	; () banked
 15130  0020A0  0100               	movlb	0	; () banked
 15131  0020A2  5191               	movf	(i1sprintf@_val+3)& (0+255),w,b
 15132  0020A4  118E               	iorwf	i1sprintf@_val& (0+255),w,b
 15133  0020A6  118F               	iorwf	(i1sprintf@_val+1)& (0+255),w,b
 15134  0020A8  1190               	iorwf	(i1sprintf@_val+2)& (0+255),w,b
 15135  0020AA  A4D8               	btfss	status,2,c
 15136  0020AC  D004               	goto	i1l12000
 15137                           
 15138                           ; BSR set to: 0
 15139                           ;doprnt.c: 1298: prec++;
 15140  0020AE  0100               	movlb	0	; () banked
 15141  0020B0  0100               	movlb	0	; () banked
 15142  0020B2  4B9C               	infsnz	i1sprintf@prec& (0+255),f,b
 15143  0020B4  2B9D               	incf	(i1sprintf@prec+1)& (0+255),f,b
 15144  0020B6                     i1l12000:
 15145                           
 15146                           ; BSR set to: 0
 15147                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15148  0020B6  0100               	movlb	0	; () banked
 15149  0020B8  6F78               	movwf	??i1_sprintf& (0+255),b
 15150  0020BA  0E01               	movlw	1
 15151  0020BC  0100               	movlb	0	; () banked
 15152  0020BE  0100               	movlb	0	; () banked
 15153  0020C0  6F9E               	movwf	i1sprintf@c& (0+255),b
 15154  0020C2  0100               	movlb	0	; () banked
 15155  0020C4  5178               	movf	??i1_sprintf& (0+255),w,b
 15156  0020C6                     
 15157                           ; BSR set to: 0
 15158  0020C6  0100               	movlb	0	; () banked
 15159  0020C8  0100               	movlb	0	; () banked
 15160  0020CA  519E               	movf	i1sprintf@c& (0+255),w,b
 15161  0020CC  0A0A               	xorlw	10
 15162  0020CE  B4D8               	btfsc	status,2,c
 15163  0020D0  D021               	goto	i1l12014
 15164                           
 15165                           ; BSR set to: 0
 15166                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 15167                           
 15168                           ; BSR set to: 0
 15169                           
 15170                           ; BSR set to: 0
 15171  0020D2  0100               	movlb	0	; () banked
 15172  0020D4  0100               	movlb	0	; () banked
 15173  0020D6  519E               	movf	i1sprintf@c& (0+255),w,b
 15174  0020D8  0D04               	mullw	4
 15175  0020DA  0E00               	movlw	low _dpowers
 15176  0020DC  24F3               	addwf	prodl,w,c
 15177  0020DE  6EF6               	movwf	tblptrl,c
 15178  0020E0  0E08               	movlw	high _dpowers
 15179  0020E2  20F4               	addwfc	prodh,w,c
 15180  0020E4  6EF7               	movwf	tblptrh,c
 15181  0020E6  0009               	tblrd		*+
 15182  0020E8  50F5               	movf	tablat,w,c
 15183  0020EA  0100               	movlb	0	; () banked
 15184  0020EC  0100               	movlb	0	; () banked
 15185  0020EE  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 15186  0020F0  0009               	tblrd		*+
 15187  0020F2  50F5               	movf	tablat,w,c
 15188  0020F4  0100               	movlb	0	; () banked
 15189  0020F6  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 15190  0020F8  0009               	tblrd		*+
 15191  0020FA  50F5               	movf	tablat,w,c
 15192  0020FC  0100               	movlb	0	; () banked
 15193  0020FE  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 15194  002100  0009               	tblrd		*+
 15195  002102  50F5               	movf	tablat,w,c
 15196  002104  0100               	movlb	0	; () banked
 15197  002106  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 15198  002108  A0D8               	btfss	status,0,c
 15199  00210A  D004               	goto	i1l12014
 15200                           
 15201                           ; BSR set to: 0
 15202                           
 15203                           ; BSR set to: 0
 15204                           
 15205                           ; BSR set to: 0
 15206                           ;doprnt.c: 1314: break;
 15207  00210C  0100               	movlb	0	; () banked
 15208  00210E  0100               	movlb	0	; () banked
 15209  002110  2B9E               	incf	i1sprintf@c& (0+255),f,b
 15210  002112  D7D9               	goto	L21
 15211  002114                     i1l12014:
 15212                           
 15213                           ; BSR set to: 0
 15214                           ;doprnt.c: 1346: if(c < prec)
 15215  002114  0E80               	movlw	128
 15216  002116  0100               	movlb	0	; () banked
 15217  002118  0100               	movlb	0	; () banked
 15218  00211A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 15219  00211C  0E7F               	movlw	127
 15220  00211E  6F78               	movwf	??i1_sprintf& (0+255),b
 15221  002120  0100               	movlb	0	; () banked
 15222  002122  0100               	movlb	0	; () banked
 15223  002124  519C               	movf	i1sprintf@prec& (0+255),w,b
 15224  002126  0100               	movlb	0	; () banked
 15225  002128  0100               	movlb	0	; () banked
 15226  00212A  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 15227  00212C  0100               	movlb	0	; () banked
 15228  00212E  0100               	movlb	0	; () banked
 15229  002130  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 15230  002132  0A80               	xorlw	128
 15231  002134  0100               	movlb	0	; () banked
 15232  002136  5978               	subwfb	??i1_sprintf& (0+255),w,b
 15233  002138  B0D8               	btfsc	status,0,c
 15234  00213A  D003               	goto	i1l12018
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;doprnt.c: 1347: c = prec;
 15238  00213C  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 15239  002140  D020               	goto	i1l12022
 15240  002142                     i1l12018:
 15241                           
 15242                           ; BSR set to: 0
 15243                           ;doprnt.c: 1348: else if(prec < c)
 15244  002142  0100               	movlb	0	; () banked
 15245  002144  0100               	movlb	0	; () banked
 15246  002146  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 15247  002148  0A80               	xorlw	128
 15248  00214A  0100               	movlb	0	; () banked
 15249  00214C  6F78               	movwf	??i1_sprintf& (0+255),b
 15250  00214E  0100               	movlb	0	; () banked
 15251  002150  0100               	movlb	0	; () banked
 15252  002152  519E               	movf	i1sprintf@c& (0+255),w,b
 15253  002154  0100               	movlb	0	; () banked
 15254  002156  0100               	movlb	0	; () banked
 15255  002158  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 15256  00215A  0E80               	movlw	128
 15257  00215C  0100               	movlb	0	; () banked
 15258  00215E  0100               	movlb	0	; () banked
 15259  002160  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 15260  002162  0E7F               	movlw	127
 15261  002164  0100               	movlb	0	; () banked
 15262  002166  5978               	subwfb	??i1_sprintf& (0+255),w,b
 15263  002168  B0D8               	btfsc	status,0,c
 15264  00216A  D00B               	goto	i1l12022
 15265                           
 15266                           ; BSR set to: 0
 15267                           ;doprnt.c: 1349: prec = c;
 15268  00216C  0100               	movlb	0	; () banked
 15269  00216E  0100               	movlb	0	; () banked
 15270  002170  519E               	movf	i1sprintf@c& (0+255),w,b
 15271  002172  0100               	movlb	0	; () banked
 15272  002174  0100               	movlb	0	; () banked
 15273  002176  6F9C               	movwf	i1sprintf@prec& (0+255),b
 15274  002178  0100               	movlb	0	; () banked
 15275  00217A  6B9D               	clrf	(i1sprintf@prec+1)& (0+255),b
 15276  00217C  0100               	movlb	0	; () banked
 15277  00217E  BF9C               	btfsc	i1sprintf@prec& (0+255),7,b
 15278  002180  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 15279  002182                     i1l12022:
 15280                           
 15281                           ; BSR set to: 0
 15282                           ;doprnt.c: 1352: if(width && flag & 0x03)
 15283  002182  0100               	movlb	0	; () banked
 15284  002184  0100               	movlb	0	; () banked
 15285  002186  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 15286  002188  1197               	iorwf	i1sprintf@width& (0+255),w,b
 15287  00218A  B4D8               	btfsc	status,2,c
 15288  00218C  D016               	goto	i1l12028
 15289                           
 15290                           ; BSR set to: 0
 15291  00218E  0E03               	movlw	3
 15292  002190  0100               	movlb	0	; () banked
 15293  002192  0100               	movlb	0	; () banked
 15294  002194  1593               	andwf	i1sprintf@flag& (0+255),w,b
 15295  002196  0100               	movlb	0	; () banked
 15296  002198  6F78               	movwf	??i1_sprintf& (0+255),b
 15297  00219A  0E00               	movlw	0
 15298  00219C  0100               	movlb	0	; () banked
 15299  00219E  0100               	movlb	0	; () banked
 15300  0021A0  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 15301  0021A2  0100               	movlb	0	; () banked
 15302  0021A4  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 15303  0021A6  0100               	movlb	0	; () banked
 15304  0021A8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 15305  0021AA  1178               	iorwf	??i1_sprintf& (0+255),w,b
 15306  0021AC  B4D8               	btfsc	status,2,c
 15307  0021AE  D005               	goto	i1l12028
 15308                           
 15309                           ; BSR set to: 0
 15310                           ;doprnt.c: 1353: width--;
 15311  0021B0  0100               	movlb	0	; () banked
 15312  0021B2  0100               	movlb	0	; () banked
 15313  0021B4  0797               	decf	i1sprintf@width& (0+255),f,b
 15314  0021B6  A0D8               	btfss	status,0,c
 15315  0021B8  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 15316  0021BA                     i1l12028:
 15317                           
 15318                           ; BSR set to: 0
 15319                           ;doprnt.c: 1355: if(flag & 0x4000) {
 15320  0021BA  0100               	movlb	0	; () banked
 15321  0021BC  0100               	movlb	0	; () banked
 15322  0021BE  AD94               	btfss	(i1sprintf@flag+1)& (0+255),6,b
 15323  0021C0  D028               	goto	i1l12036
 15324                           
 15325                           ; BSR set to: 0
 15326                           ;doprnt.c: 1356: if(width > prec)
 15327  0021C2  0100               	movlb	0	; () banked
 15328  0021C4  0100               	movlb	0	; () banked
 15329  0021C6  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 15330  0021C8  0A80               	xorlw	128
 15331  0021CA  0100               	movlb	0	; () banked
 15332  0021CC  6F78               	movwf	??i1_sprintf& (0+255),b
 15333  0021CE  0100               	movlb	0	; () banked
 15334  0021D0  0100               	movlb	0	; () banked
 15335  0021D2  5197               	movf	i1sprintf@width& (0+255),w,b
 15336  0021D4  0100               	movlb	0	; () banked
 15337  0021D6  0100               	movlb	0	; () banked
 15338  0021D8  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 15339  0021DA  0100               	movlb	0	; () banked
 15340  0021DC  0100               	movlb	0	; () banked
 15341  0021DE  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 15342  0021E0  0A80               	xorlw	128
 15343  0021E2  0100               	movlb	0	; () banked
 15344  0021E4  5978               	subwfb	??i1_sprintf& (0+255),w,b
 15345  0021E6  B0D8               	btfsc	status,0,c
 15346  0021E8  D00D               	goto	i1l12034
 15347                           
 15348                           ; BSR set to: 0
 15349                           ;doprnt.c: 1357: width -= prec;
 15350  0021EA  0100               	movlb	0	; () banked
 15351  0021EC  0100               	movlb	0	; () banked
 15352  0021EE  519C               	movf	i1sprintf@prec& (0+255),w,b
 15353  0021F0  0100               	movlb	0	; () banked
 15354  0021F2  0100               	movlb	0	; () banked
 15355  0021F4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 15356  0021F6  0100               	movlb	0	; () banked
 15357  0021F8  0100               	movlb	0	; () banked
 15358  0021FA  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 15359  0021FC  0100               	movlb	0	; () banked
 15360  0021FE  0100               	movlb	0	; () banked
 15361  002200  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 15362  002202  D007               	goto	i1l12036
 15363  002204                     i1l12034:
 15364                           
 15365                           ; BSR set to: 0
 15366                           ;doprnt.c: 1358: else
 15367                           ;doprnt.c: 1359: width = 0;
 15368  002204  0E00               	movlw	0
 15369  002206  0100               	movlb	0	; () banked
 15370  002208  0100               	movlb	0	; () banked
 15371  00220A  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 15372  00220C  0E00               	movlw	0
 15373  00220E  0100               	movlb	0	; () banked
 15374  002210  6F97               	movwf	i1sprintf@width& (0+255),b
 15375  002212                     i1l12036:
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;doprnt.c: 1360: }
 15379                           ;doprnt.c: 1388: if(width > c)
 15380  002212  0E80               	movlw	128
 15381  002214  0100               	movlb	0	; () banked
 15382  002216  0100               	movlb	0	; () banked
 15383  002218  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 15384  00221A  0E7F               	movlw	127
 15385  00221C  6F78               	movwf	??i1_sprintf& (0+255),b
 15386  00221E  0100               	movlb	0	; () banked
 15387  002220  0100               	movlb	0	; () banked
 15388  002222  5197               	movf	i1sprintf@width& (0+255),w,b
 15389  002224  0100               	movlb	0	; () banked
 15390  002226  0100               	movlb	0	; () banked
 15391  002228  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 15392  00222A  0100               	movlb	0	; () banked
 15393  00222C  0100               	movlb	0	; () banked
 15394  00222E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 15395  002230  0A80               	xorlw	128
 15396  002232  0100               	movlb	0	; () banked
 15397  002234  5978               	subwfb	??i1_sprintf& (0+255),w,b
 15398  002236  B0D8               	btfsc	status,0,c
 15399  002238  D00E               	goto	i1l12040
 15400                           
 15401                           ; BSR set to: 0
 15402                           ;doprnt.c: 1389: width -= c;
 15403  00223A  0100               	movlb	0	; () banked
 15404  00223C  0100               	movlb	0	; () banked
 15405  00223E  519E               	movf	i1sprintf@c& (0+255),w,b
 15406  002240  0100               	movlb	0	; () banked
 15407  002242  0100               	movlb	0	; () banked
 15408  002244  5F97               	subwf	i1sprintf@width& (0+255),f,b
 15409  002246  0E00               	movlw	0
 15410  002248  0100               	movlb	0	; () banked
 15411  00224A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 15412  00224C  0EFF               	movlw	255
 15413  00224E  0100               	movlb	0	; () banked
 15414  002250  0100               	movlb	0	; () banked
 15415  002252  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 15416  002254  D007               	goto	i1l12042
 15417  002256                     i1l12040:
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;doprnt.c: 1390: else
 15421                           ;doprnt.c: 1391: width = 0;
 15422  002256  0E00               	movlw	0
 15423  002258  0100               	movlb	0	; () banked
 15424  00225A  0100               	movlb	0	; () banked
 15425  00225C  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 15426  00225E  0E00               	movlw	0
 15427  002260  0100               	movlb	0	; () banked
 15428  002262  6F97               	movwf	i1sprintf@width& (0+255),b
 15429  002264                     i1l12042:
 15430                           
 15431                           ; BSR set to: 0
 15432                           ;doprnt.c: 1394: if(flag & 0x04) {
 15433  002264  0100               	movlb	0	; () banked
 15434  002266  0100               	movlb	0	; () banked
 15435  002268  A593               	btfss	i1sprintf@flag& (0+255),2,b
 15436  00226A  D031               	goto	i1l12058
 15437                           
 15438                           ; BSR set to: 0
 15439                           ;doprnt.c: 1399: if(flag & 0x03)
 15440  00226C  0E03               	movlw	3
 15441  00226E  0100               	movlb	0	; () banked
 15442  002270  0100               	movlb	0	; () banked
 15443  002272  1593               	andwf	i1sprintf@flag& (0+255),w,b
 15444  002274  0100               	movlb	0	; () banked
 15445  002276  6F78               	movwf	??i1_sprintf& (0+255),b
 15446  002278  0E00               	movlw	0
 15447  00227A  0100               	movlb	0	; () banked
 15448  00227C  0100               	movlb	0	; () banked
 15449  00227E  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 15450  002280  0100               	movlb	0	; () banked
 15451  002282  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 15452  002284  0100               	movlb	0	; () banked
 15453  002286  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 15454  002288  1178               	iorwf	??i1_sprintf& (0+255),w,b
 15455  00228A  B4D8               	btfsc	status,2,c
 15456  00228C  D00A               	goto	i1l12050
 15457                           
 15458                           ; BSR set to: 0
 15459                           ;doprnt.c: 1400: ((*sp++ = ('-')));
 15460  00228E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 15461  002292  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 15462  002296  0E2D               	movlw	45
 15463  002298  6EDF               	movwf	indf2,c
 15464                           
 15465                           ; BSR set to: 0
 15466  00229A  0100               	movlb	0	; () banked
 15467  00229C  0100               	movlb	0	; () banked
 15468  00229E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 15469  0022A0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 15470  0022A2                     i1l12050:
 15471                           
 15472                           ; BSR set to: 0
 15473                           ;doprnt.c: 1422: if(width)
 15474  0022A2  0100               	movlb	0	; () banked
 15475  0022A4  0100               	movlb	0	; () banked
 15476  0022A6  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 15477  0022A8  1197               	iorwf	i1sprintf@width& (0+255),w,b
 15478  0022AA  B4D8               	btfsc	status,2,c
 15479  0022AC  D08F               	goto	i1l12078
 15480                           
 15481                           ; BSR set to: 0
 15482                           ;doprnt.c: 1424: ((*sp++ = ('0')));
 15483                           
 15484                           ; BSR set to: 0
 15485                           
 15486                           ;doprnt.c: 1423: do
 15487  0022AE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 15488  0022B2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 15489  0022B6  0E30               	movlw	48
 15490  0022B8  6EDF               	movwf	indf2,c
 15491                           
 15492                           ; BSR set to: 0
 15493  0022BA  0100               	movlb	0	; () banked
 15494  0022BC  0100               	movlb	0	; () banked
 15495  0022BE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 15496  0022C0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 15497                           
 15498                           ; BSR set to: 0
 15499                           ;doprnt.c: 1425: while(--width);
 15500  0022C2  0100               	movlb	0	; () banked
 15501  0022C4  0100               	movlb	0	; () banked
 15502  0022C6  0797               	decf	i1sprintf@width& (0+255),f,b
 15503  0022C8  A0D8               	btfss	status,0,c
 15504  0022CA  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 15505  0022CC  D7EB               	goto	L23
 15506  0022CE                     i1l12058:
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;doprnt.c: 1429: {
 15510                           ;doprnt.c: 1431: if(width
 15511                           ;doprnt.c: 1435: )
 15512  0022CE  0100               	movlb	0	; () banked
 15513  0022D0  0100               	movlb	0	; () banked
 15514  0022D2  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 15515  0022D4  1197               	iorwf	i1sprintf@width& (0+255),w,b
 15516  0022D6  B4D8               	btfsc	status,2,c
 15517  0022D8  D014               	goto	i1l12066
 15518  0022DA                     i1l12060:
 15519                           
 15520                           ; BSR set to: 0
 15521                           ;doprnt.c: 1437: ((*sp++ = (' ')));
 15522  0022DA  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 15523  0022DE  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 15524  0022E2  0E20               	movlw	32
 15525  0022E4  6EDF               	movwf	indf2,c
 15526                           
 15527                           ; BSR set to: 0
 15528  0022E6  0100               	movlb	0	; () banked
 15529  0022E8  0100               	movlb	0	; () banked
 15530  0022EA  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 15531  0022EC  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 15532                           
 15533                           ; BSR set to: 0
 15534                           ;doprnt.c: 1438: while(--width);
 15535  0022EE  0100               	movlb	0	; () banked
 15536  0022F0  0100               	movlb	0	; () banked
 15537  0022F2  0797               	decf	i1sprintf@width& (0+255),f,b
 15538  0022F4  A0D8               	btfss	status,0,c
 15539  0022F6  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 15540  0022F8  0100               	movlb	0	; () banked
 15541  0022FA  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 15542  0022FC  1197               	iorwf	i1sprintf@width& (0+255),w,b
 15543  0022FE  A4D8               	btfss	status,2,c
 15544  002300  D7EC               	goto	i1l12060
 15545  002302                     i1l12066:
 15546                           
 15547                           ; BSR set to: 0
 15548                           ;doprnt.c: 1445: if(flag & 0x03)
 15549  002302  0E03               	movlw	3
 15550  002304  0100               	movlb	0	; () banked
 15551  002306  0100               	movlb	0	; () banked
 15552  002308  1593               	andwf	i1sprintf@flag& (0+255),w,b
 15553  00230A  0100               	movlb	0	; () banked
 15554  00230C  6F78               	movwf	??i1_sprintf& (0+255),b
 15555  00230E  0E00               	movlw	0
 15556  002310  0100               	movlb	0	; () banked
 15557  002312  0100               	movlb	0	; () banked
 15558  002314  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 15559  002316  0100               	movlb	0	; () banked
 15560  002318  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 15561  00231A  0100               	movlb	0	; () banked
 15562  00231C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 15563  00231E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 15564  002320  B4D8               	btfsc	status,2,c
 15565  002322  D054               	goto	i1l12078
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 15569  002324  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 15570  002328  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 15571  00232C  0E2D               	movlw	45
 15572  00232E  6EDF               	movwf	indf2,c
 15573  002330  D049               	goto	L22
 15574  002332                     i1l12072:
 15575                           
 15576                           ; BSR set to: 0
 15577                           ;doprnt.c: 1485: {
 15578                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 15579  002332  0100               	movlb	0	; () banked
 15580  002334  C09C  F078         	movff	i1sprintf@prec,??i1_sprintf
 15581  002338  0100               	movlb	0	; () banked
 15582  00233A  C09D  F079         	movff	i1sprintf@prec+1,??i1_sprintf+1
 15583  00233E  0100               	movlb	0	; () banked
 15584  002340  90D8               	bcf	status,0,c
 15585  002342  3778               	rlcf	??i1_sprintf& (0+255),f,b
 15586  002344  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 15587  002346  0100               	movlb	0	; () banked
 15588  002348  90D8               	bcf	status,0,c
 15589  00234A  3778               	rlcf	??i1_sprintf& (0+255),f,b
 15590  00234C  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 15591  00234E  0E00               	movlw	low _dpowers
 15592  002350  0100               	movlb	0	; () banked
 15593  002352  2578               	addwf	??i1_sprintf& (0+255),w,b
 15594  002354  6EF6               	movwf	tblptrl,c
 15595  002356  0E08               	movlw	high _dpowers
 15596  002358  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 15597  00235A  6EF7               	movwf	tblptrh,c
 15598  00235C  0009               	tblrd		*+
 15599  00235E  CFF5 F015          	movff	tablat,?i1___lldiv+4
 15600  002362  0009               	tblrd		*+
 15601  002364  CFF5 F016          	movff	tablat,?i1___lldiv+5
 15602  002368  0009               	tblrd		*+
 15603  00236A  CFF5 F017          	movff	tablat,?i1___lldiv+6
 15604  00236E  000A               	tblrd		*-
 15605  002370  CFF5 F018          	movff	tablat,?i1___lldiv+7
 15606  002374  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 15607  002378  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 15608  00237C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 15609  002380  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 15610  002384  EC3A  F02D         	call	i1___lldiv	;wreg free
 15611  002388  C014  F022         	movff	?i1___lldiv+3,?i1___llmod+3
 15612  00238C  C013  F021         	movff	?i1___lldiv+2,?i1___llmod+2
 15613  002390  C012  F020         	movff	?i1___lldiv+1,?i1___llmod+1
 15614  002394  C011  F01F         	movff	?i1___lldiv,?i1___llmod
 15615  002398  0E0A               	movlw	10
 15616  00239A  6E23               	movwf	?i1___llmod+4,c
 15617  00239C  0E00               	movlw	0
 15618  00239E  6E24               	movwf	?i1___llmod+5,c
 15619  0023A0  0E00               	movlw	0
 15620  0023A2  6E25               	movwf	?i1___llmod+6,c
 15621  0023A4  0E00               	movlw	0
 15622  0023A6  6E26               	movwf	?i1___llmod+7,c
 15623  0023A8  ECF1  F02E         	call	i1___llmod	;wreg free
 15624  0023AC  501F               	movf	?i1___llmod,w,c
 15625  0023AE  0F30               	addlw	48
 15626  0023B0  0100               	movlb	0	; () banked
 15627  0023B2  0100               	movlb	0	; () banked
 15628  0023B4  6F9E               	movwf	i1sprintf@c& (0+255),b
 15629                           
 15630                           ; BSR set to: 0
 15631                           ;doprnt.c: 1530: }
 15632                           ;doprnt.c: 1531: ((*sp++ = (c)));
 15633  0023B6  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 15634  0023BA  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 15635  0023BE  0100               	movlb	0	; () banked
 15636  0023C0  C09E  FFDF         	movff	i1sprintf@c,indf2
 15637  0023C4                     L22:
 15638                           
 15639                           ; BSR set to: 0
 15640  0023C4  0100               	movlb	0	; () banked
 15641  0023C6  0100               	movlb	0	; () banked
 15642  0023C8  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 15643  0023CA  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 15644  0023CC                     i1l12078:
 15645                           
 15646                           ; BSR set to: 0
 15647  0023CC  0100               	movlb	0	; () banked
 15648  0023CE  0100               	movlb	0	; () banked
 15649  0023D0  079C               	decf	i1sprintf@prec& (0+255),f,b
 15650  0023D2  A0D8               	btfss	status,0,c
 15651  0023D4  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 15652  0023D6  0100               	movlb	0	; () banked
 15653  0023D8  299C               	incf	i1sprintf@prec& (0+255),w,b
 15654  0023DA  B4D8               	btfsc	status,2,c
 15655  0023DC  299D               	incf	(i1sprintf@prec+1)& (0+255),w,b
 15656  0023DE  A4D8               	btfss	status,2,c
 15657  0023E0  D7A8               	goto	i1l12072
 15658  0023E2                     i1l12080:
 15659                           
 15660                           ; BSR set to: 0
 15661  0023E2  0100               	movlb	0	; () banked
 15662  0023E4  C073  FFF6         	movff	i1sprintf@f,tblptrl
 15663  0023E8  0100               	movlb	0	; () banked
 15664  0023EA  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 15665  0023EE  0100               	movlb	0	; () banked
 15666  0023F0  0100               	movlb	0	; () banked
 15667  0023F2  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 15668  0023F4  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 15669  0023F6  0008               	tblrd		*
 15670  0023F8  0100               	movlb	0	; () banked
 15671  0023FA  CFF5 F09E          	movff	tablat,i1sprintf@c
 15672  0023FE  0100               	movlb	0	; () banked
 15673  002400  679E               	tstfsz	i1sprintf@c& (0+255),b
 15674  002402  EF60  F00B         	goto	i1l11756
 15675  002406                     i1l12082:
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;doprnt.c: 1545: *sp = 0;
 15679  002406  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 15680  00240A  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 15681  00240E  0E00               	movlw	0
 15682  002410  6EDF               	movwf	indf2,c
 15683                           
 15684                           ; BSR set to: 0
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;doprnt.c: 1547: return 0;
 15688                           ;	Return value of i1_sprintf is never used
 15689  002412  0012               	return	
 15690  002414                     __end_ofi1_sprintf:
 15691                           	opt stack 0
 15692                           pclatu	equ	0xFFB
 15693                           pclath	equ	0xFFA
 15694                           tblptru	equ	0xFF8
 15695                           tblptrh	equ	0xFF7
 15696                           tblptrl	equ	0xFF6
 15697                           tablat	equ	0xFF5
 15698                           prodh	equ	0xFF4
 15699                           prodl	equ	0xFF3
 15700                           intcon	equ	0xFF2
 15701                           postinc0	equ	0xFEE
 15702                           fsr0h	equ	0xFEA
 15703                           fsr0l	equ	0xFE9
 15704                           wreg	equ	0xFE8
 15705                           postdec1	equ	0xFE5
 15706                           fsr1h	equ	0xFE2
 15707                           fsr1l	equ	0xFE1
 15708                           bsr	equ	0xFE0
 15709                           indf2	equ	0xFDF
 15710                           postinc2	equ	0xFDE
 15711                           postdec2	equ	0xFDD
 15712                           fsr2h	equ	0xFDA
 15713                           fsr2l	equ	0xFD9
 15714                           status	equ	0xFD8
 15715                           
 15716 ;; *************** function i1___lwmod *****************
 15717 ;; Defined at:
 15718 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
 15719 ;; Parameters:    Size  Location     Type
 15720 ;;  __lwmod         2   16[COMRAM] unsigned int 
 15721 ;;  __lwmod         2   18[COMRAM] unsigned int 
 15722 ;; Auto vars:     Size  Location     Type
 15723 ;;  __lwmod         1   21[COMRAM] unsigned char 
 15724 ;; Return value:  Size  Location     Type
 15725 ;;                  2   16[COMRAM] unsigned int 
 15726 ;; Registers used:
 15727 ;;		wreg, status,2, status,0
 15728 ;; Tracked objects:
 15729 ;;		On entry : 0/0
 15730 ;;		On exit  : 0/0
 15731 ;;		Unchanged: 0/0
 15732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15733 ;;      Params:         4       0       0       0       0       0       0       0       0
 15734 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15735 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15736 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15737 ;;Total ram usage:        6 bytes
 15738 ;; Hardware stack levels used:    1
 15739 ;; Hardware stack levels required when called:    3
 15740 ;; This function calls:
 15741 ;;		Nothing
 15742 ;; This function is called by:
 15743 ;;		i1_sprintf
 15744 ;; This function uses a non-reentrant model
 15745 ;;
 15746                           
 15747                           	psect	text58
 15748  00610A                     __ptext58:
 15749                           	opt stack 0
 15750  00610A                     i1___lwmod:
 15751                           	opt stack 16
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;incstack = 0
 15755                           ;incstack = 0
 15756  00610A  5014               	movf	i1___lwmod@divisor+1,w,c
 15757  00610C  1013               	iorwf	i1___lwmod@divisor,w,c
 15758  00610E  B4D8               	btfsc	status,2,c
 15759  006110  D01A               	goto	i1l960
 15760  006112  6E15               	movwf	??i1___lwmod& (0+255),c
 15761  006114  0E01               	movlw	1
 15762  006116  6E16               	movwf	i1___lwmod@counter,c
 15763  006118  5015               	movf	??i1___lwmod& (0+255),w,c
 15764  00611A  D004               	goto	i1l10110
 15765  00611C                     i1l10108:
 15766  00611C  90D8               	bcf	status,0,c
 15767  00611E  3613               	rlcf	i1___lwmod@divisor,f,c
 15768  006120  3614               	rlcf	i1___lwmod@divisor+1,f,c
 15769  006122  2A16               	incf	i1___lwmod@counter,f,c
 15770  006124                     i1l10110:
 15771  006124  AE14               	btfss	i1___lwmod@divisor+1,7,c
 15772  006126  D7FA               	goto	i1l10108
 15773  006128                     i1l10112:
 15774  006128  5013               	movf	i1___lwmod@divisor,w,c
 15775  00612A  5C11               	subwf	i1___lwmod@dividend,w,c
 15776  00612C  5014               	movf	i1___lwmod@divisor+1,w,c
 15777  00612E  5812               	subwfb	i1___lwmod@dividend+1,w,c
 15778  006130  A0D8               	btfss	status,0,c
 15779  006132  D004               	goto	i1l10116
 15780  006134  5013               	movf	i1___lwmod@divisor,w,c
 15781  006136  5E11               	subwf	i1___lwmod@dividend,f,c
 15782  006138  5014               	movf	i1___lwmod@divisor+1,w,c
 15783  00613A  5A12               	subwfb	i1___lwmod@dividend+1,f,c
 15784  00613C                     i1l10116:
 15785  00613C  90D8               	bcf	status,0,c
 15786  00613E  3214               	rrcf	i1___lwmod@divisor+1,f,c
 15787  006140  3213               	rrcf	i1___lwmod@divisor,f,c
 15788  006142  2E16               	decfsz	i1___lwmod@counter,f,c
 15789  006144  D7F1               	goto	i1l10112
 15790  006146                     i1l960:
 15791  006146  C011  F011         	movff	i1___lwmod@dividend,?i1___lwmod
 15792  00614A  C012  F012         	movff	i1___lwmod@dividend+1,?i1___lwmod+1
 15793  00614E  0012               	return	
 15794  006150                     __end_ofi1___lwmod:
 15795                           	opt stack 0
 15796                           pclatu	equ	0xFFB
 15797                           pclath	equ	0xFFA
 15798                           tblptru	equ	0xFF8
 15799                           tblptrh	equ	0xFF7
 15800                           tblptrl	equ	0xFF6
 15801                           tablat	equ	0xFF5
 15802                           prodh	equ	0xFF4
 15803                           prodl	equ	0xFF3
 15804                           intcon	equ	0xFF2
 15805                           postinc0	equ	0xFEE
 15806                           fsr0h	equ	0xFEA
 15807                           fsr0l	equ	0xFE9
 15808                           wreg	equ	0xFE8
 15809                           postdec1	equ	0xFE5
 15810                           fsr1h	equ	0xFE2
 15811                           fsr1l	equ	0xFE1
 15812                           bsr	equ	0xFE0
 15813                           indf2	equ	0xFDF
 15814                           postinc2	equ	0xFDE
 15815                           postdec2	equ	0xFDD
 15816                           fsr2h	equ	0xFDA
 15817                           fsr2l	equ	0xFD9
 15818                           status	equ	0xFD8
 15819                           
 15820 ;; *************** function i1___lltoft *****************
 15821 ;; Defined at:
 15822 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
 15823 ;; Parameters:    Size  Location     Type
 15824 ;;  __lltoft        4   24[COMRAM] unsigned long 
 15825 ;; Auto vars:     Size  Location     Type
 15826 ;;  __lltoft        1   32[COMRAM] unsigned char 
 15827 ;; Return value:  Size  Location     Type
 15828 ;;                  3   24[COMRAM] float 
 15829 ;; Registers used:
 15830 ;;		wreg, status,2, status,0, cstack
 15831 ;; Tracked objects:
 15832 ;;		On entry : 0/0
 15833 ;;		On exit  : 0/0
 15834 ;;		Unchanged: 0/0
 15835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15836 ;;      Params:         4       0       0       0       0       0       0       0       0
 15837 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15838 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15839 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15840 ;;Total ram usage:        9 bytes
 15841 ;; Hardware stack levels used:    1
 15842 ;; Hardware stack levels required when called:    4
 15843 ;; This function calls:
 15844 ;;		i1___ftpack
 15845 ;; This function is called by:
 15846 ;;		i1_sprintf
 15847 ;; This function uses a non-reentrant model
 15848 ;;
 15849                           
 15850                           	psect	text59
 15851  005EB0                     __ptext59:
 15852                           	opt stack 0
 15853  005EB0                     i1___lltoft:
 15854                           	opt stack 15
 15855                           
 15856                           ;incstack = 0
 15857                           ;incstack = 0
 15858  005EB0  6E1D               	movwf	??i1___lltoft& (0+255),c
 15859  005EB2  0E8E               	movlw	142
 15860  005EB4  6E21               	movwf	i1___lltoft@exp,c
 15861  005EB6  501D               	movf	??i1___lltoft& (0+255),w,c
 15862  005EB8  D006               	goto	i1l10076
 15863  005EBA                     i1l10074:
 15864  005EBA  90D8               	bcf	status,0,c
 15865  005EBC  321C               	rrcf	i1___lltoft@c+3,f,c
 15866  005EBE  321B               	rrcf	i1___lltoft@c+2,f,c
 15867  005EC0  321A               	rrcf	i1___lltoft@c+1,f,c
 15868  005EC2  3219               	rrcf	i1___lltoft@c,f,c
 15869  005EC4  2A21               	incf	i1___lltoft@exp,f,c
 15870  005EC6                     i1l10076:
 15871  005EC6  0E00               	movlw	0
 15872  005EC8  1419               	andwf	i1___lltoft@c,w,c
 15873  005ECA  6E1D               	movwf	??i1___lltoft& (0+255),c
 15874  005ECC  0E00               	movlw	0
 15875  005ECE  141A               	andwf	i1___lltoft@c+1,w,c
 15876  005ED0  6E1E               	movwf	(??i1___lltoft+1)& (0+255),c
 15877  005ED2  0E00               	movlw	0
 15878  005ED4  141B               	andwf	i1___lltoft@c+2,w,c
 15879  005ED6  6E1F               	movwf	(??i1___lltoft+2)& (0+255),c
 15880  005ED8  0EFF               	movlw	255
 15881  005EDA  141C               	andwf	i1___lltoft@c+3,w,c
 15882  005EDC  6E20               	movwf	(??i1___lltoft+3)& (0+255),c
 15883  005EDE  5020               	movf	??i1___lltoft+3,w,c
 15884  005EE0  101D               	iorwf	??i1___lltoft,w,c
 15885  005EE2  101E               	iorwf	??i1___lltoft+1,w,c
 15886  005EE4  101F               	iorwf	??i1___lltoft+2,w,c
 15887  005EE6  A4D8               	btfss	status,2,c
 15888  005EE8  D7E8               	goto	i1l10074
 15889  005EEA  C019  F011         	movff	i1___lltoft@c,?i1___ftpack
 15890  005EEE  C01A  F012         	movff	i1___lltoft@c+1,?i1___ftpack+1
 15891  005EF2  C01B  F013         	movff	i1___lltoft@c+2,?i1___ftpack+2
 15892  005EF6  C021  F014         	movff	i1___lltoft@exp,?i1___ftpack+3
 15893  005EFA  6E1D               	movwf	??i1___lltoft& (0+255),c
 15894  005EFC  0E00               	movlw	0
 15895  005EFE  6E15               	movwf	?i1___ftpack+4,c
 15896  005F00  501D               	movf	??i1___lltoft& (0+255),w,c
 15897  005F02  EC72  F02A         	call	i1___ftpack	;wreg free
 15898  005F06  C013  F01B         	movff	?i1___ftpack+2,?i1___lltoft+2
 15899  005F0A  C012  F01A         	movff	?i1___ftpack+1,?i1___lltoft+1
 15900  005F0E  C011  F019         	movff	?i1___ftpack,?i1___lltoft
 15901  005F12  0012               	return	
 15902  005F14                     __end_ofi1___lltoft:
 15903                           	opt stack 0
 15904                           pclatu	equ	0xFFB
 15905                           pclath	equ	0xFFA
 15906                           tblptru	equ	0xFF8
 15907                           tblptrh	equ	0xFF7
 15908                           tblptrl	equ	0xFF6
 15909                           tablat	equ	0xFF5
 15910                           prodh	equ	0xFF4
 15911                           prodl	equ	0xFF3
 15912                           intcon	equ	0xFF2
 15913                           postinc0	equ	0xFEE
 15914                           fsr0h	equ	0xFEA
 15915                           fsr0l	equ	0xFE9
 15916                           wreg	equ	0xFE8
 15917                           postdec1	equ	0xFE5
 15918                           fsr1h	equ	0xFE2
 15919                           fsr1l	equ	0xFE1
 15920                           bsr	equ	0xFE0
 15921                           indf2	equ	0xFDF
 15922                           postinc2	equ	0xFDE
 15923                           postdec2	equ	0xFDD
 15924                           fsr2h	equ	0xFDA
 15925                           fsr2l	equ	0xFD9
 15926                           status	equ	0xFD8
 15927                           
 15928 ;; *************** function i1___llmod *****************
 15929 ;; Defined at:
 15930 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
 15931 ;; Parameters:    Size  Location     Type
 15932 ;;  __llmod         4   30[COMRAM] unsigned long 
 15933 ;;  __llmod         4   34[COMRAM] unsigned long 
 15934 ;; Auto vars:     Size  Location     Type
 15935 ;;  __llmod         1   39[COMRAM] unsigned char 
 15936 ;; Return value:  Size  Location     Type
 15937 ;;                  4   30[COMRAM] unsigned long 
 15938 ;; Registers used:
 15939 ;;		wreg, status,2, status,0
 15940 ;; Tracked objects:
 15941 ;;		On entry : 0/0
 15942 ;;		On exit  : 0/0
 15943 ;;		Unchanged: 0/0
 15944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15945 ;;      Params:         8       0       0       0       0       0       0       0       0
 15946 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15947 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15948 ;;      Totals:        10       0       0       0       0       0       0       0       0
 15949 ;;Total ram usage:       10 bytes
 15950 ;; Hardware stack levels used:    1
 15951 ;; Hardware stack levels required when called:    3
 15952 ;; This function calls:
 15953 ;;		Nothing
 15954 ;; This function is called by:
 15955 ;;		i1_sprintf
 15956 ;; This function uses a non-reentrant model
 15957 ;;
 15958                           
 15959                           	psect	text60
 15960  005DE2                     __ptext60:
 15961                           	opt stack 0
 15962  005DE2                     i1___llmod:
 15963                           	opt stack 16
 15964                           
 15965                           ;incstack = 0
 15966                           ;incstack = 0
 15967  005DE2  5026               	movf	i1___llmod@divisor+3,w,c
 15968  005DE4  1023               	iorwf	i1___llmod@divisor,w,c
 15969  005DE6  1024               	iorwf	i1___llmod@divisor+1,w,c
 15970  005DE8  1025               	iorwf	i1___llmod@divisor+2,w,c
 15971  005DEA  B4D8               	btfsc	status,2,c
 15972  005DEC  D026               	goto	i1l891
 15973  005DEE  6E27               	movwf	??i1___llmod& (0+255),c
 15974  005DF0  0E01               	movlw	1
 15975  005DF2  6E28               	movwf	i1___llmod@counter,c
 15976  005DF4  5027               	movf	??i1___llmod& (0+255),w,c
 15977  005DF6  D006               	goto	i1l10062
 15978  005DF8                     i1l10060:
 15979  005DF8  90D8               	bcf	status,0,c
 15980  005DFA  3623               	rlcf	i1___llmod@divisor,f,c
 15981  005DFC  3624               	rlcf	i1___llmod@divisor+1,f,c
 15982  005DFE  3625               	rlcf	i1___llmod@divisor+2,f,c
 15983  005E00  3626               	rlcf	i1___llmod@divisor+3,f,c
 15984  005E02  2A28               	incf	i1___llmod@counter,f,c
 15985  005E04                     i1l10062:
 15986  005E04  AE26               	btfss	i1___llmod@divisor+3,7,c
 15987  005E06  D7F8               	goto	i1l10060
 15988  005E08                     i1l10064:
 15989  005E08  5023               	movf	i1___llmod@divisor,w,c
 15990  005E0A  5C1F               	subwf	i1___llmod@dividend,w,c
 15991  005E0C  5024               	movf	i1___llmod@divisor+1,w,c
 15992  005E0E  5820               	subwfb	i1___llmod@dividend+1,w,c
 15993  005E10  5025               	movf	i1___llmod@divisor+2,w,c
 15994  005E12  5821               	subwfb	i1___llmod@dividend+2,w,c
 15995  005E14  5026               	movf	i1___llmod@divisor+3,w,c
 15996  005E16  5822               	subwfb	i1___llmod@dividend+3,w,c
 15997  005E18  A0D8               	btfss	status,0,c
 15998  005E1A  D008               	goto	i1l10068
 15999  005E1C  5023               	movf	i1___llmod@divisor,w,c
 16000  005E1E  5E1F               	subwf	i1___llmod@dividend,f,c
 16001  005E20  5024               	movf	i1___llmod@divisor+1,w,c
 16002  005E22  5A20               	subwfb	i1___llmod@dividend+1,f,c
 16003  005E24  5025               	movf	i1___llmod@divisor+2,w,c
 16004  005E26  5A21               	subwfb	i1___llmod@dividend+2,f,c
 16005  005E28  5026               	movf	i1___llmod@divisor+3,w,c
 16006  005E2A  5A22               	subwfb	i1___llmod@dividend+3,f,c
 16007  005E2C                     i1l10068:
 16008  005E2C  90D8               	bcf	status,0,c
 16009  005E2E  3226               	rrcf	i1___llmod@divisor+3,f,c
 16010  005E30  3225               	rrcf	i1___llmod@divisor+2,f,c
 16011  005E32  3224               	rrcf	i1___llmod@divisor+1,f,c
 16012  005E34  3223               	rrcf	i1___llmod@divisor,f,c
 16013  005E36  2E28               	decfsz	i1___llmod@counter,f,c
 16014  005E38  D7E7               	goto	i1l10064
 16015  005E3A                     i1l891:
 16016  005E3A  C01F  F01F         	movff	i1___llmod@dividend,?i1___llmod
 16017  005E3E  C020  F020         	movff	i1___llmod@dividend+1,?i1___llmod+1
 16018  005E42  C021  F021         	movff	i1___llmod@dividend+2,?i1___llmod+2
 16019  005E46  C022  F022         	movff	i1___llmod@dividend+3,?i1___llmod+3
 16020  005E4A  0012               	return	
 16021  005E4C                     __end_ofi1___llmod:
 16022                           	opt stack 0
 16023                           pclatu	equ	0xFFB
 16024                           pclath	equ	0xFFA
 16025                           tblptru	equ	0xFF8
 16026                           tblptrh	equ	0xFF7
 16027                           tblptrl	equ	0xFF6
 16028                           tablat	equ	0xFF5
 16029                           prodh	equ	0xFF4
 16030                           prodl	equ	0xFF3
 16031                           intcon	equ	0xFF2
 16032                           postinc0	equ	0xFEE
 16033                           fsr0h	equ	0xFEA
 16034                           fsr0l	equ	0xFE9
 16035                           wreg	equ	0xFE8
 16036                           postdec1	equ	0xFE5
 16037                           fsr1h	equ	0xFE2
 16038                           fsr1l	equ	0xFE1
 16039                           bsr	equ	0xFE0
 16040                           indf2	equ	0xFDF
 16041                           postinc2	equ	0xFDE
 16042                           postdec2	equ	0xFDD
 16043                           fsr2h	equ	0xFDA
 16044                           fsr2l	equ	0xFD9
 16045                           status	equ	0xFD8
 16046                           
 16047 ;; *************** function i1___lldiv *****************
 16048 ;; Defined at:
 16049 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
 16050 ;; Parameters:    Size  Location     Type
 16051 ;;  __lldiv         4   16[COMRAM] unsigned long 
 16052 ;;  __lldiv         4   20[COMRAM] unsigned long 
 16053 ;; Auto vars:     Size  Location     Type
 16054 ;;  __lldiv         4   25[COMRAM] unsigned long 
 16055 ;;  __lldiv         1   29[COMRAM] unsigned char 
 16056 ;; Return value:  Size  Location     Type
 16057 ;;                  4   16[COMRAM] unsigned long 
 16058 ;; Registers used:
 16059 ;;		wreg, status,2, status,0
 16060 ;; Tracked objects:
 16061 ;;		On entry : 0/0
 16062 ;;		On exit  : 0/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16065 ;;      Params:         8       0       0       0       0       0       0       0       0
 16066 ;;      Locals:         5       0       0       0       0       0       0       0       0
 16067 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16068 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16069 ;;Total ram usage:       14 bytes
 16070 ;; Hardware stack levels used:    1
 16071 ;; Hardware stack levels required when called:    3
 16072 ;; This function calls:
 16073 ;;		Nothing
 16074 ;; This function is called by:
 16075 ;;		i1_sprintf
 16076 ;; This function uses a non-reentrant model
 16077 ;;
 16078                           
 16079                           	psect	text61
 16080  005A74                     __ptext61:
 16081                           	opt stack 0
 16082  005A74                     i1___lldiv:
 16083                           	opt stack 16
 16084                           
 16085                           ;incstack = 0
 16086                           ;incstack = 0
 16087  005A74  0E00               	movlw	0
 16088  005A76  6E1A               	movwf	i1___lldiv@quotient,c
 16089  005A78  0E00               	movlw	0
 16090  005A7A  6E1B               	movwf	i1___lldiv@quotient+1,c
 16091  005A7C  0E00               	movlw	0
 16092  005A7E  6E1C               	movwf	i1___lldiv@quotient+2,c
 16093  005A80  0E00               	movlw	0
 16094  005A82  6E1D               	movwf	i1___lldiv@quotient+3,c
 16095  005A84  5018               	movf	i1___lldiv@divisor+3,w,c
 16096  005A86  1015               	iorwf	i1___lldiv@divisor,w,c
 16097  005A88  1016               	iorwf	i1___lldiv@divisor+1,w,c
 16098  005A8A  1017               	iorwf	i1___lldiv@divisor+2,w,c
 16099  005A8C  B4D8               	btfsc	status,2,c
 16100  005A8E  D02C               	goto	i1l881
 16101  005A90  6E19               	movwf	??i1___lldiv& (0+255),c
 16102  005A92  0E01               	movlw	1
 16103  005A94  6E1E               	movwf	i1___lldiv@counter,c
 16104  005A96  5019               	movf	??i1___lldiv& (0+255),w,c
 16105  005A98  D006               	goto	i1l10042
 16106  005A9A                     i1l10040:
 16107  005A9A  90D8               	bcf	status,0,c
 16108  005A9C  3615               	rlcf	i1___lldiv@divisor,f,c
 16109  005A9E  3616               	rlcf	i1___lldiv@divisor+1,f,c
 16110  005AA0  3617               	rlcf	i1___lldiv@divisor+2,f,c
 16111  005AA2  3618               	rlcf	i1___lldiv@divisor+3,f,c
 16112  005AA4  2A1E               	incf	i1___lldiv@counter,f,c
 16113  005AA6                     i1l10042:
 16114  005AA6  AE18               	btfss	i1___lldiv@divisor+3,7,c
 16115  005AA8  D7F8               	goto	i1l10040
 16116  005AAA                     i1l10044:
 16117  005AAA  90D8               	bcf	status,0,c
 16118  005AAC  361A               	rlcf	i1___lldiv@quotient,f,c
 16119  005AAE  361B               	rlcf	i1___lldiv@quotient+1,f,c
 16120  005AB0  361C               	rlcf	i1___lldiv@quotient+2,f,c
 16121  005AB2  361D               	rlcf	i1___lldiv@quotient+3,f,c
 16122  005AB4  5015               	movf	i1___lldiv@divisor,w,c
 16123  005AB6  5C11               	subwf	i1___lldiv@dividend,w,c
 16124  005AB8  5016               	movf	i1___lldiv@divisor+1,w,c
 16125  005ABA  5812               	subwfb	i1___lldiv@dividend+1,w,c
 16126  005ABC  5017               	movf	i1___lldiv@divisor+2,w,c
 16127  005ABE  5813               	subwfb	i1___lldiv@dividend+2,w,c
 16128  005AC0  5018               	movf	i1___lldiv@divisor+3,w,c
 16129  005AC2  5814               	subwfb	i1___lldiv@dividend+3,w,c
 16130  005AC4  A0D8               	btfss	status,0,c
 16131  005AC6  D009               	goto	i1l10052
 16132  005AC8  5015               	movf	i1___lldiv@divisor,w,c
 16133  005ACA  5E11               	subwf	i1___lldiv@dividend,f,c
 16134  005ACC  5016               	movf	i1___lldiv@divisor+1,w,c
 16135  005ACE  5A12               	subwfb	i1___lldiv@dividend+1,f,c
 16136  005AD0  5017               	movf	i1___lldiv@divisor+2,w,c
 16137  005AD2  5A13               	subwfb	i1___lldiv@dividend+2,f,c
 16138  005AD4  5018               	movf	i1___lldiv@divisor+3,w,c
 16139  005AD6  5A14               	subwfb	i1___lldiv@dividend+3,f,c
 16140  005AD8  801A               	bsf	i1___lldiv@quotient,0,c
 16141  005ADA                     i1l10052:
 16142  005ADA  90D8               	bcf	status,0,c
 16143  005ADC  3218               	rrcf	i1___lldiv@divisor+3,f,c
 16144  005ADE  3217               	rrcf	i1___lldiv@divisor+2,f,c
 16145  005AE0  3216               	rrcf	i1___lldiv@divisor+1,f,c
 16146  005AE2  3215               	rrcf	i1___lldiv@divisor,f,c
 16147  005AE4  2E1E               	decfsz	i1___lldiv@counter,f,c
 16148  005AE6  D7E1               	goto	i1l10044
 16149  005AE8                     i1l881:
 16150  005AE8  C01A  F011         	movff	i1___lldiv@quotient,?i1___lldiv
 16151  005AEC  C01B  F012         	movff	i1___lldiv@quotient+1,?i1___lldiv+1
 16152  005AF0  C01C  F013         	movff	i1___lldiv@quotient+2,?i1___lldiv+2
 16153  005AF4  C01D  F014         	movff	i1___lldiv@quotient+3,?i1___lldiv+3
 16154  005AF8  0012               	return	
 16155  005AFA                     __end_ofi1___lldiv:
 16156                           	opt stack 0
 16157                           pclatu	equ	0xFFB
 16158                           pclath	equ	0xFFA
 16159                           tblptru	equ	0xFF8
 16160                           tblptrh	equ	0xFF7
 16161                           tblptrl	equ	0xFF6
 16162                           tablat	equ	0xFF5
 16163                           prodh	equ	0xFF4
 16164                           prodl	equ	0xFF3
 16165                           intcon	equ	0xFF2
 16166                           postinc0	equ	0xFEE
 16167                           fsr0h	equ	0xFEA
 16168                           fsr0l	equ	0xFE9
 16169                           wreg	equ	0xFE8
 16170                           postdec1	equ	0xFE5
 16171                           fsr1h	equ	0xFE2
 16172                           fsr1l	equ	0xFE1
 16173                           bsr	equ	0xFE0
 16174                           indf2	equ	0xFDF
 16175                           postinc2	equ	0xFDE
 16176                           postdec2	equ	0xFDD
 16177                           fsr2h	equ	0xFDA
 16178                           fsr2l	equ	0xFD9
 16179                           status	equ	0xFD8
 16180                           
 16181 ;; *************** function i1_isdigit *****************
 16182 ;; Defined at:
 16183 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
 16184 ;; Parameters:    Size  Location     Type
 16185 ;;  isdigit         1   16[COMRAM] unsigned char 
 16186 ;; Auto vars:     Size  Location     Type
 16187 ;;  isdigit         1   18[COMRAM] unsigned char 
 16188 ;; Return value:  Size  Location     Type
 16189 ;;		None               void
 16190 ;; Registers used:
 16191 ;;		wreg, status,2, status,0
 16192 ;; Tracked objects:
 16193 ;;		On entry : 0/0
 16194 ;;		On exit  : 0/0
 16195 ;;		Unchanged: 0/0
 16196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16197 ;;      Params:         1       0       0       0       0       0       0       0       0
 16198 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16199 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16200 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16201 ;;Total ram usage:        3 bytes
 16202 ;; Hardware stack levels used:    1
 16203 ;; Hardware stack levels required when called:    3
 16204 ;; This function calls:
 16205 ;;		Nothing
 16206 ;; This function is called by:
 16207 ;;		i1_sprintf
 16208 ;; This function uses a non-reentrant model
 16209 ;;
 16210                           
 16211                           	psect	text62
 16212  0066A2                     __ptext62:
 16213                           	opt stack 0
 16214  0066A2                     i1_isdigit:
 16215                           	opt stack 16
 16216                           
 16217                           ;incstack = 0
 16218                           ;incstack = 0
 16219  0066A2  6E12               	movwf	??i1_isdigit& (0+255),c
 16220  0066A4  0E00               	movlw	0
 16221  0066A6  6E13               	movwf	i1_isdigit$998,c
 16222  0066A8  5012               	movf	??i1_isdigit& (0+255),w,c
 16223  0066AA  0E3A               	movlw	58
 16224  0066AC  6011               	cpfslt	i1isdigit@c,c
 16225  0066AE  D007               	goto	i1l10030
 16226  0066B0  0E2F               	movlw	47
 16227  0066B2  6411               	cpfsgt	i1isdigit@c,c
 16228  0066B4  D004               	goto	i1l10030
 16229  0066B6  6E12               	movwf	??i1_isdigit& (0+255),c
 16230  0066B8  0E01               	movlw	1
 16231  0066BA  6E13               	movwf	i1_isdigit$998,c
 16232  0066BC  5012               	movf	??i1_isdigit& (0+255),w,c
 16233  0066BE                     i1l10030:
 16234  0066BE  C013  F012         	movff	i1_isdigit$998,??i1_isdigit
 16235  0066C2  3012               	rrcf	??i1_isdigit,w,c
 16236  0066C4  0012               	return	
 16237  0066C6                     __end_ofi1_isdigit:
 16238                           	opt stack 0
 16239                           pclatu	equ	0xFFB
 16240                           pclath	equ	0xFFA
 16241                           tblptru	equ	0xFF8
 16242                           tblptrh	equ	0xFF7
 16243                           tblptrl	equ	0xFF6
 16244                           tablat	equ	0xFF5
 16245                           prodh	equ	0xFF4
 16246                           prodl	equ	0xFF3
 16247                           intcon	equ	0xFF2
 16248                           postinc0	equ	0xFEE
 16249                           fsr0h	equ	0xFEA
 16250                           fsr0l	equ	0xFE9
 16251                           wreg	equ	0xFE8
 16252                           postdec1	equ	0xFE5
 16253                           fsr1h	equ	0xFE2
 16254                           fsr1l	equ	0xFE1
 16255                           bsr	equ	0xFE0
 16256                           indf2	equ	0xFDF
 16257                           postinc2	equ	0xFDE
 16258                           postdec2	equ	0xFDD
 16259                           fsr2h	equ	0xFDA
 16260                           fsr2l	equ	0xFD9
 16261                           status	equ	0xFD8
 16262                           
 16263 ;; *************** function i1___fttol *****************
 16264 ;; Defined at:
 16265 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
 16266 ;; Parameters:    Size  Location     Type
 16267 ;;  __fttol         3   38[COMRAM] float 
 16268 ;; Auto vars:     Size  Location     Type
 16269 ;;  __fttol         4   48[COMRAM] unsigned long 
 16270 ;;  __fttol         1   52[COMRAM] unsigned char 
 16271 ;;  __fttol         1   47[COMRAM] unsigned char 
 16272 ;; Return value:  Size  Location     Type
 16273 ;;                  4   38[COMRAM] long 
 16274 ;; Registers used:
 16275 ;;		wreg, status,2, status,0
 16276 ;; Tracked objects:
 16277 ;;		On entry : 0/0
 16278 ;;		On exit  : 0/0
 16279 ;;		Unchanged: 0/0
 16280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16281 ;;      Params:         4       0       0       0       0       0       0       0       0
 16282 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16283 ;;      Temps:          5       0       0       0       0       0       0       0       0
 16284 ;;      Totals:        15       0       0       0       0       0       0       0       0
 16285 ;;Total ram usage:       15 bytes
 16286 ;; Hardware stack levels used:    1
 16287 ;; Hardware stack levels required when called:    3
 16288 ;; This function calls:
 16289 ;;		Nothing
 16290 ;; This function is called by:
 16291 ;;		i1_sprintf
 16292 ;; This function uses a non-reentrant model
 16293 ;;
 16294                           
 16295                           	psect	text63
 16296  005256                     __ptext63:
 16297                           	opt stack 0
 16298  005256                     i1___fttol:
 16299                           	opt stack 16
 16300                           
 16301                           ;incstack = 0
 16302                           ;incstack = 0
 16303  005256  0E0F               	movlw	15
 16304  005258  6E2B               	movwf	??i1___fttol& (0+255),c
 16305  00525A  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 16306  00525E  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 16307  005262  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 16308  005266  282B               	incf	??i1___fttol,w,c
 16309  005268  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 16310  00526A  D004               	goto	i1u915_20
 16311  00526C                     i1u915_25:
 16312  00526C  90D8               	bcf	status,0,c
 16313  00526E  322E               	rrcf	??i1___fttol+3,f,c
 16314  005270  322D               	rrcf	??i1___fttol+2,f,c
 16315  005272  322C               	rrcf	??i1___fttol+1,f,c
 16316  005274                     i1u915_20:
 16317  005274  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 16318  005276  D7FA               	goto	i1u915_25
 16319  005278  502C               	movf	??i1___fttol+1,w,c
 16320  00527A  6E35               	movwf	i1___fttol@exp1,c
 16321  00527C  6635               	tstfsz	i1___fttol@exp1& (0+255),c
 16322  00527E  D001               	goto	i1l9982
 16323  005280  D035               	goto	i1u920_20
 16324  005282                     i1l9982:
 16325  005282  0E17               	movlw	23
 16326  005284  6E2B               	movwf	??i1___fttol& (0+255),c
 16327  005286  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 16328  00528A  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 16329  00528E  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 16330  005292  282B               	incf	??i1___fttol,w,c
 16331  005294  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 16332  005296  D004               	goto	i1u917_20
 16333  005298                     i1u917_25:
 16334  005298  90D8               	bcf	status,0,c
 16335  00529A  322E               	rrcf	??i1___fttol+3,f,c
 16336  00529C  322D               	rrcf	??i1___fttol+2,f,c
 16337  00529E  322C               	rrcf	??i1___fttol+1,f,c
 16338  0052A0                     i1u917_20:
 16339  0052A0  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 16340  0052A2  D7FA               	goto	i1u917_25
 16341  0052A4  502C               	movf	??i1___fttol+1,w,c
 16342  0052A6  6E30               	movwf	i1___fttol@sign1,c
 16343  0052A8  8E28               	bsf	i1___fttol@f1+1,7,c
 16344  0052AA  0EFF               	movlw	255
 16345  0052AC  1627               	andwf	i1___fttol@f1,f,c
 16346  0052AE  0EFF               	movlw	255
 16347  0052B0  1628               	andwf	i1___fttol@f1+1,f,c
 16348  0052B2  0E00               	movlw	0
 16349  0052B4  1629               	andwf	i1___fttol@f1+2,f,c
 16350  0052B6  5027               	movf	i1___fttol@f1,w,c
 16351  0052B8  6E31               	movwf	i1___fttol@lval,c
 16352  0052BA  5028               	movf	i1___fttol@f1+1,w,c
 16353  0052BC  6E32               	movwf	i1___fttol@lval+1,c
 16354  0052BE  5029               	movf	i1___fttol@f1+2,w,c
 16355  0052C0  6E33               	movwf	i1___fttol@lval+2,c
 16356  0052C2  6A34               	clrf	i1___fttol@lval+3,c
 16357  0052C4  0E8E               	movlw	142
 16358  0052C6  5E35               	subwf	i1___fttol@exp1,f,c
 16359  0052C8  AE35               	btfss	i1___fttol@exp1,7,c
 16360  0052CA  D00D               	goto	i1l10004
 16361  0052CC  5035               	movf	i1___fttol@exp1,w,c
 16362  0052CE  0A80               	xorlw	128
 16363  0052D0  0F8F               	addlw	143
 16364  0052D2  A0D8               	btfss	status,0,c
 16365  0052D4  D00B               	goto	i1u920_20
 16366  0052D6                     i1l10000:
 16367  0052D6  90D8               	bcf	status,0,c
 16368  0052D8  3234               	rrcf	i1___fttol@lval+3,f,c
 16369  0052DA  3233               	rrcf	i1___fttol@lval+2,f,c
 16370  0052DC  3232               	rrcf	i1___fttol@lval+1,f,c
 16371  0052DE  3231               	rrcf	i1___fttol@lval,f,c
 16372  0052E0  3E35               	incfsz	i1___fttol@exp1,f,c
 16373  0052E2  D7F9               	goto	i1l10000
 16374  0052E4  D014               	goto	i1l10014
 16375  0052E6                     i1l10004:
 16376  0052E6  0E17               	movlw	23
 16377  0052E8  6435               	cpfsgt	i1___fttol@exp1,c
 16378  0052EA  D00F               	goto	i1l10012
 16379  0052EC                     i1u920_20:
 16380  0052EC  0E00               	movlw	0
 16381  0052EE  6E27               	movwf	?i1___fttol,c
 16382  0052F0  0E00               	movlw	0
 16383  0052F2  6E28               	movwf	?i1___fttol+1,c
 16384  0052F4  0E00               	movlw	0
 16385  0052F6  6E29               	movwf	?i1___fttol+2,c
 16386  0052F8  0E00               	movlw	0
 16387  0052FA  6E2A               	movwf	?i1___fttol+3,c
 16388  0052FC  D01B               	goto	i1l837
 16389  0052FE                     i1l10010:
 16390  0052FE  90D8               	bcf	status,0,c
 16391  005300  3631               	rlcf	i1___fttol@lval,f,c
 16392  005302  3632               	rlcf	i1___fttol@lval+1,f,c
 16393  005304  3633               	rlcf	i1___fttol@lval+2,f,c
 16394  005306  3634               	rlcf	i1___fttol@lval+3,f,c
 16395  005308  0635               	decf	i1___fttol@exp1,f,c
 16396  00530A                     i1l10012:
 16397  00530A  6635               	tstfsz	i1___fttol@exp1,c
 16398  00530C  D7F8               	goto	i1l10010
 16399  00530E                     i1l10014:
 16400  00530E  5030               	movf	i1___fttol@sign1,w,c
 16401  005310  B4D8               	btfsc	status,2,c
 16402  005312  D008               	goto	i1l10018
 16403  005314  1E34               	comf	i1___fttol@lval+3,f,c
 16404  005316  1E33               	comf	i1___fttol@lval+2,f,c
 16405  005318  1E32               	comf	i1___fttol@lval+1,f,c
 16406  00531A  6C31               	negf	i1___fttol@lval,c
 16407  00531C  0E00               	movlw	0
 16408  00531E  2232               	addwfc	i1___fttol@lval+1,f,c
 16409  005320  2233               	addwfc	i1___fttol@lval+2,f,c
 16410  005322  2234               	addwfc	i1___fttol@lval+3,f,c
 16411  005324                     i1l10018:
 16412  005324  C031  F027         	movff	i1___fttol@lval,?i1___fttol
 16413  005328  C032  F028         	movff	i1___fttol@lval+1,?i1___fttol+1
 16414  00532C  C033  F029         	movff	i1___fttol@lval+2,?i1___fttol+2
 16415  005330  C034  F02A         	movff	i1___fttol@lval+3,?i1___fttol+3
 16416  005334                     i1l837:
 16417  005334  0012               	return	
 16418  005336                     __end_ofi1___fttol:
 16419                           	opt stack 0
 16420                           pclatu	equ	0xFFB
 16421                           pclath	equ	0xFFA
 16422                           tblptru	equ	0xFF8
 16423                           tblptrh	equ	0xFF7
 16424                           tblptrl	equ	0xFF6
 16425                           tablat	equ	0xFF5
 16426                           prodh	equ	0xFF4
 16427                           prodl	equ	0xFF3
 16428                           intcon	equ	0xFF2
 16429                           postinc0	equ	0xFEE
 16430                           fsr0h	equ	0xFEA
 16431                           fsr0l	equ	0xFE9
 16432                           wreg	equ	0xFE8
 16433                           postdec1	equ	0xFE5
 16434                           fsr1h	equ	0xFE2
 16435                           fsr1l	equ	0xFE1
 16436                           bsr	equ	0xFE0
 16437                           indf2	equ	0xFDF
 16438                           postinc2	equ	0xFDE
 16439                           postdec2	equ	0xFDD
 16440                           fsr2h	equ	0xFDA
 16441                           fsr2l	equ	0xFD9
 16442                           status	equ	0xFD8
 16443                           
 16444 ;; *************** function i1___ftneg *****************
 16445 ;; Defined at:
 16446 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
 16447 ;; Parameters:    Size  Location     Type
 16448 ;;  __ftneg         3   16[COMRAM] float 
 16449 ;; Auto vars:     Size  Location     Type
 16450 ;;		None
 16451 ;; Return value:  Size  Location     Type
 16452 ;;                  3   16[COMRAM] float 
 16453 ;; Registers used:
 16454 ;;		wreg, status,2, status,0
 16455 ;; Tracked objects:
 16456 ;;		On entry : 0/0
 16457 ;;		On exit  : 0/0
 16458 ;;		Unchanged: 0/0
 16459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16460 ;;      Params:         3       0       0       0       0       0       0       0       0
 16461 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16462 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16463 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16464 ;;Total ram usage:        3 bytes
 16465 ;; Hardware stack levels used:    1
 16466 ;; Hardware stack levels required when called:    3
 16467 ;; This function calls:
 16468 ;;		Nothing
 16469 ;; This function is called by:
 16470 ;;		i1_sprintf
 16471 ;; This function uses a non-reentrant model
 16472 ;;
 16473                           
 16474                           	psect	text64
 16475  00667C                     __ptext64:
 16476                           	opt stack 0
 16477  00667C                     i1___ftneg:
 16478                           	opt stack 16
 16479                           
 16480                           ;incstack = 0
 16481                           ;incstack = 0
 16482  00667C  0E7F               	movlw	127
 16483  00667E  1413               	andwf	i1___ftneg@f1+2,w,c
 16484  006680  1012               	iorwf	i1___ftneg@f1+1,w,c
 16485  006682  1011               	iorwf	i1___ftneg@f1,w,c
 16486  006684  B4D8               	btfsc	status,2,c
 16487  006686  D006               	goto	i1l827
 16488  006688  0E00               	movlw	0
 16489  00668A  1A11               	xorwf	i1___ftneg@f1,f,c
 16490  00668C  0E00               	movlw	0
 16491  00668E  1A12               	xorwf	i1___ftneg@f1+1,f,c
 16492  006690  0E80               	movlw	128
 16493  006692  1A13               	xorwf	i1___ftneg@f1+2,f,c
 16494  006694                     i1l827:
 16495  006694  C011  F011         	movff	i1___ftneg@f1,?i1___ftneg
 16496  006698  C012  F012         	movff	i1___ftneg@f1+1,?i1___ftneg+1
 16497  00669C  C013  F013         	movff	i1___ftneg@f1+2,?i1___ftneg+2
 16498  0066A0  0012               	return	
 16499  0066A2                     __end_ofi1___ftneg:
 16500                           	opt stack 0
 16501                           pclatu	equ	0xFFB
 16502                           pclath	equ	0xFFA
 16503                           tblptru	equ	0xFF8
 16504                           tblptrh	equ	0xFF7
 16505                           tblptrl	equ	0xFF6
 16506                           tablat	equ	0xFF5
 16507                           prodh	equ	0xFF4
 16508                           prodl	equ	0xFF3
 16509                           intcon	equ	0xFF2
 16510                           postinc0	equ	0xFEE
 16511                           fsr0h	equ	0xFEA
 16512                           fsr0l	equ	0xFE9
 16513                           wreg	equ	0xFE8
 16514                           postdec1	equ	0xFE5
 16515                           fsr1h	equ	0xFE2
 16516                           fsr1l	equ	0xFE1
 16517                           bsr	equ	0xFE0
 16518                           indf2	equ	0xFDF
 16519                           postinc2	equ	0xFDE
 16520                           postdec2	equ	0xFDD
 16521                           fsr2h	equ	0xFDA
 16522                           fsr2l	equ	0xFD9
 16523                           status	equ	0xFD8
 16524                           
 16525 ;; *************** function i1___ftge *****************
 16526 ;; Defined at:
 16527 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
 16528 ;; Parameters:    Size  Location     Type
 16529 ;;  __ftge          3   16[COMRAM] float 
 16530 ;;  __ftge          3   19[COMRAM] float 
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;		None
 16533 ;; Return value:  Size  Location     Type
 16534 ;;		None               void
 16535 ;; Registers used:
 16536 ;;		wreg, status,2, status,0
 16537 ;; Tracked objects:
 16538 ;;		On entry : 0/0
 16539 ;;		On exit  : 0/0
 16540 ;;		Unchanged: 0/0
 16541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16542 ;;      Params:         6       0       0       0       0       0       0       0       0
 16543 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16544 ;;      Temps:          3       0       0       0       0       0       0       0       0
 16545 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16546 ;;Total ram usage:        9 bytes
 16547 ;; Hardware stack levels used:    1
 16548 ;; Hardware stack levels required when called:    3
 16549 ;; This function calls:
 16550 ;;		Nothing
 16551 ;; This function is called by:
 16552 ;;		i1_check_light
 16553 ;;		i1_sprintf
 16554 ;; This function uses a non-reentrant model
 16555 ;;
 16556                           
 16557                           	psect	text65
 16558  00583C                     __ptext65:
 16559                           	opt stack 0
 16560  00583C                     i1___ftge:
 16561                           	opt stack 17
 16562                           
 16563                           ;incstack = 0
 16564                           ;incstack = 0
 16565  00583C  AE13               	btfss	i1___ftge@ff1+2,7,c
 16566  00583E  D016               	goto	i1l9904
 16567  005840  C011  F017         	movff	i1___ftge@ff1,??i1___ftge
 16568  005844  C012  F018         	movff	i1___ftge@ff1+1,??i1___ftge+1
 16569  005848  C013  F019         	movff	i1___ftge@ff1+2,??i1___ftge+2
 16570  00584C  1E17               	comf	??i1___ftge,f,c
 16571  00584E  1E18               	comf	??i1___ftge+1,f,c
 16572  005850  1E19               	comf	??i1___ftge+2,f,c
 16573  005852  2A17               	incf	??i1___ftge,f,c
 16574  005854  0E00               	movlw	0
 16575  005856  2218               	addwfc	??i1___ftge+1,f,c
 16576  005858  2219               	addwfc	??i1___ftge+2,f,c
 16577  00585A  0E00               	movlw	0
 16578  00585C  2417               	addwf	??i1___ftge,w,c
 16579  00585E  6E11               	movwf	i1___ftge@ff1,c
 16580  005860  0E00               	movlw	0
 16581  005862  2018               	addwfc	??i1___ftge+1,w,c
 16582  005864  6E12               	movwf	i1___ftge@ff1+1,c
 16583  005866  0E80               	movlw	128
 16584  005868  2019               	addwfc	??i1___ftge+2,w,c
 16585  00586A  6E13               	movwf	i1___ftge@ff1+2,c
 16586  00586C                     i1l9904:
 16587  00586C  AE16               	btfss	i1___ftge@ff2+2,7,c
 16588  00586E  D016               	goto	i1l9908
 16589  005870  C014  F017         	movff	i1___ftge@ff2,??i1___ftge
 16590  005874  C015  F018         	movff	i1___ftge@ff2+1,??i1___ftge+1
 16591  005878  C016  F019         	movff	i1___ftge@ff2+2,??i1___ftge+2
 16592  00587C  1E17               	comf	??i1___ftge,f,c
 16593  00587E  1E18               	comf	??i1___ftge+1,f,c
 16594  005880  1E19               	comf	??i1___ftge+2,f,c
 16595  005882  2A17               	incf	??i1___ftge,f,c
 16596  005884  0E00               	movlw	0
 16597  005886  2218               	addwfc	??i1___ftge+1,f,c
 16598  005888  2219               	addwfc	??i1___ftge+2,f,c
 16599  00588A  0E00               	movlw	0
 16600  00588C  2417               	addwf	??i1___ftge,w,c
 16601  00588E  6E14               	movwf	i1___ftge@ff2,c
 16602  005890  0E00               	movlw	0
 16603  005892  2018               	addwfc	??i1___ftge+1,w,c
 16604  005894  6E15               	movwf	i1___ftge@ff2+1,c
 16605  005896  0E80               	movlw	128
 16606  005898  2019               	addwfc	??i1___ftge+2,w,c
 16607  00589A  6E16               	movwf	i1___ftge@ff2+2,c
 16608  00589C                     i1l9908:
 16609  00589C  0E00               	movlw	0
 16610  00589E  1A11               	xorwf	i1___ftge@ff1,f,c
 16611  0058A0  0E00               	movlw	0
 16612  0058A2  1A12               	xorwf	i1___ftge@ff1+1,f,c
 16613  0058A4  0E80               	movlw	128
 16614  0058A6  1A13               	xorwf	i1___ftge@ff1+2,f,c
 16615  0058A8  0E00               	movlw	0
 16616  0058AA  1A14               	xorwf	i1___ftge@ff2,f,c
 16617  0058AC  0E00               	movlw	0
 16618  0058AE  1A15               	xorwf	i1___ftge@ff2+1,f,c
 16619  0058B0  0E80               	movlw	128
 16620  0058B2  1A16               	xorwf	i1___ftge@ff2+2,f,c
 16621  0058B4  5014               	movf	i1___ftge@ff2,w,c
 16622  0058B6  5C11               	subwf	i1___ftge@ff1,w,c
 16623  0058B8  5015               	movf	i1___ftge@ff2+1,w,c
 16624  0058BA  5812               	subwfb	i1___ftge@ff1+1,w,c
 16625  0058BC  5016               	movf	i1___ftge@ff2+2,w,c
 16626  0058BE  5813               	subwfb	i1___ftge@ff1+2,w,c
 16627  0058C0  B0D8               	btfsc	status,0,c
 16628  0058C2  D002               	goto	i1l9914
 16629  0058C4  90D8               	bcf	status,0,c
 16630  0058C6  D001               	goto	i1l811
 16631  0058C8                     i1l9914:
 16632  0058C8  80D8               	bsf	status,0,c
 16633  0058CA                     i1l811:
 16634  0058CA  0012               	return	
 16635  0058CC                     __end_ofi1___ftge:
 16636                           	opt stack 0
 16637                           pclatu	equ	0xFFB
 16638                           pclath	equ	0xFFA
 16639                           tblptru	equ	0xFF8
 16640                           tblptrh	equ	0xFF7
 16641                           tblptrl	equ	0xFF6
 16642                           tablat	equ	0xFF5
 16643                           prodh	equ	0xFF4
 16644                           prodl	equ	0xFF3
 16645                           intcon	equ	0xFF2
 16646                           postinc0	equ	0xFEE
 16647                           fsr0h	equ	0xFEA
 16648                           fsr0l	equ	0xFE9
 16649                           wreg	equ	0xFE8
 16650                           postdec1	equ	0xFE5
 16651                           fsr1h	equ	0xFE2
 16652                           fsr1l	equ	0xFE1
 16653                           bsr	equ	0xFE0
 16654                           indf2	equ	0xFDF
 16655                           postinc2	equ	0xFDE
 16656                           postdec2	equ	0xFDD
 16657                           fsr2h	equ	0xFDA
 16658                           fsr2l	equ	0xFD9
 16659                           status	equ	0xFD8
 16660                           
 16661 ;; *************** function i1__tdiv_to_l_ *****************
 16662 ;; Defined at:
 16663 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
 16664 ;; Parameters:    Size  Location     Type
 16665 ;;  _tdiv_to_l_     3   16[COMRAM] float 
 16666 ;;  _tdiv_to_l_     3   19[COMRAM] float 
 16667 ;; Auto vars:     Size  Location     Type
 16668 ;;  _tdiv_to_l_     4   27[COMRAM] unsigned long 
 16669 ;;  _tdiv_to_l_     1   32[COMRAM] unsigned char 
 16670 ;;  _tdiv_to_l_     1   31[COMRAM] unsigned char 
 16671 ;; Return value:  Size  Location     Type
 16672 ;;                  4   16[COMRAM] unsigned long 
 16673 ;; Registers used:
 16674 ;;		wreg, status,2, status,0
 16675 ;; Tracked objects:
 16676 ;;		On entry : 0/0
 16677 ;;		On exit  : 0/0
 16678 ;;		Unchanged: 0/0
 16679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16680 ;;      Params:         6       0       0       0       0       0       0       0       0
 16681 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16682 ;;      Temps:          5       0       0       0       0       0       0       0       0
 16683 ;;      Totals:        17       0       0       0       0       0       0       0       0
 16684 ;;Total ram usage:       17 bytes
 16685 ;; Hardware stack levels used:    1
 16686 ;; Hardware stack levels required when called:    3
 16687 ;; This function calls:
 16688 ;;		Nothing
 16689 ;; This function is called by:
 16690 ;;		i1_sprintf
 16691 ;; This function uses a non-reentrant model
 16692 ;;
 16693                           
 16694                           	psect	text66
 16695  004826                     __ptext66:
 16696                           	opt stack 0
 16697  004826                     i1__tdiv_to_l_:
 16698                           	opt stack 16
 16699                           
 16700                           ;incstack = 0
 16701                           ;incstack = 0
 16702  004826  0E0F               	movlw	15
 16703  004828  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 16704  00482A  C011  F018         	movff	i1__tdiv_to_l_@f1,??i1__tdiv_to_l_+1
 16705  00482E  C012  F019         	movff	i1__tdiv_to_l_@f1+1,??i1__tdiv_to_l_+2
 16706  004832  C013  F01A         	movff	i1__tdiv_to_l_@f1+2,??i1__tdiv_to_l_+3
 16707  004836  2817               	incf	??i1__tdiv_to_l_,w,c
 16708  004838  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 16709  00483A  D004               	goto	i1u896_20
 16710  00483C                     i1u896_25:
 16711  00483C  90D8               	bcf	status,0,c
 16712  00483E  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 16713  004840  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 16714  004842  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 16715  004844                     i1u896_20:
 16716  004844  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 16717  004846  D7FA               	goto	i1u896_25
 16718  004848  5018               	movf	??i1__tdiv_to_l_+1,w,c
 16719  00484A  6E21               	movwf	i1__tdiv_to_l_@exp1,c
 16720  00484C  6621               	tstfsz	i1__tdiv_to_l_@exp1& (0+255),c
 16721  00484E  D001               	goto	i1l9850
 16722  004850  D061               	goto	i1u903_20
 16723  004852                     i1l9850:
 16724  004852  0E0F               	movlw	15
 16725  004854  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 16726  004856  C014  F018         	movff	i1__tdiv_to_l_@f2,??i1__tdiv_to_l_+1
 16727  00485A  C015  F019         	movff	i1__tdiv_to_l_@f2+1,??i1__tdiv_to_l_+2
 16728  00485E  C016  F01A         	movff	i1__tdiv_to_l_@f2+2,??i1__tdiv_to_l_+3
 16729  004862  2817               	incf	??i1__tdiv_to_l_,w,c
 16730  004864  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 16731  004866  D004               	goto	i1u898_20
 16732  004868                     i1u898_25:
 16733  004868  90D8               	bcf	status,0,c
 16734  00486A  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 16735  00486C  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 16736  00486E  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 16737  004870                     i1u898_20:
 16738  004870  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 16739  004872  D7FA               	goto	i1u898_25
 16740  004874  5018               	movf	??i1__tdiv_to_l_+1,w,c
 16741  004876  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 16742  004878  6620               	tstfsz	i1__tdiv_to_l_@cntr& (0+255),c
 16743  00487A  D001               	goto	i1l9856
 16744  00487C  D04B               	goto	i1u903_20
 16745  00487E                     i1l9856:
 16746  00487E  8E12               	bsf	i1__tdiv_to_l_@f1+1,7,c
 16747  004880  0EFF               	movlw	255
 16748  004882  1611               	andwf	i1__tdiv_to_l_@f1,f,c
 16749  004884  0EFF               	movlw	255
 16750  004886  1612               	andwf	i1__tdiv_to_l_@f1+1,f,c
 16751  004888  0E00               	movlw	0
 16752  00488A  1613               	andwf	i1__tdiv_to_l_@f1+2,f,c
 16753  00488C  8E15               	bsf	i1__tdiv_to_l_@f2+1,7,c
 16754  00488E  0EFF               	movlw	255
 16755  004890  1614               	andwf	i1__tdiv_to_l_@f2,f,c
 16756  004892  0EFF               	movlw	255
 16757  004894  1615               	andwf	i1__tdiv_to_l_@f2+1,f,c
 16758  004896  0E00               	movlw	0
 16759  004898  1616               	andwf	i1__tdiv_to_l_@f2+2,f,c
 16760  00489A  0E00               	movlw	0
 16761  00489C  6E1C               	movwf	i1__tdiv_to_l_@quot,c
 16762  00489E  0E00               	movlw	0
 16763  0048A0  6E1D               	movwf	i1__tdiv_to_l_@quot+1,c
 16764  0048A2  0E00               	movlw	0
 16765  0048A4  6E1E               	movwf	i1__tdiv_to_l_@quot+2,c
 16766  0048A6  0E00               	movlw	0
 16767  0048A8  6E1F               	movwf	i1__tdiv_to_l_@quot+3,c
 16768  0048AA  0E7F               	movlw	127
 16769  0048AC  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 16770  0048AE  5020               	movf	i1__tdiv_to_l_@cntr,w,c
 16771  0048B0  0F98               	addlw	152
 16772  0048B2  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 16773  0048B4  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 16774  0048B6  0E18               	movlw	24
 16775  0048B8  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 16776  0048BA  5017               	movf	??i1__tdiv_to_l_& (0+255),w,c
 16777  0048BC                     i1l9870:
 16778  0048BC  90D8               	bcf	status,0,c
 16779  0048BE  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 16780  0048C0  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 16781  0048C2  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 16782  0048C4  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 16783  0048C6  5014               	movf	i1__tdiv_to_l_@f2,w,c
 16784  0048C8  5C11               	subwf	i1__tdiv_to_l_@f1,w,c
 16785  0048CA  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 16786  0048CC  5812               	subwfb	i1__tdiv_to_l_@f1+1,w,c
 16787  0048CE  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 16788  0048D0  5813               	subwfb	i1__tdiv_to_l_@f1+2,w,c
 16789  0048D2  A0D8               	btfss	status,0,c
 16790  0048D4  D007               	goto	i1l796
 16791  0048D6  5014               	movf	i1__tdiv_to_l_@f2,w,c
 16792  0048D8  5E11               	subwf	i1__tdiv_to_l_@f1,f,c
 16793  0048DA  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 16794  0048DC  5A12               	subwfb	i1__tdiv_to_l_@f1+1,f,c
 16795  0048DE  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 16796  0048E0  5A13               	subwfb	i1__tdiv_to_l_@f1+2,f,c
 16797  0048E2  801C               	bsf	i1__tdiv_to_l_@quot,0,c
 16798  0048E4                     i1l796:
 16799  0048E4  90D8               	bcf	status,0,c
 16800  0048E6  3611               	rlcf	i1__tdiv_to_l_@f1,f,c
 16801  0048E8  3612               	rlcf	i1__tdiv_to_l_@f1+1,f,c
 16802  0048EA  3613               	rlcf	i1__tdiv_to_l_@f1+2,f,c
 16803  0048EC  2E20               	decfsz	i1__tdiv_to_l_@cntr,f,c
 16804  0048EE  D7E6               	goto	i1l9870
 16805  0048F0  AE21               	btfss	i1__tdiv_to_l_@exp1,7,c
 16806  0048F2  D00D               	goto	i1l9890
 16807  0048F4  5021               	movf	i1__tdiv_to_l_@exp1,w,c
 16808  0048F6  0A80               	xorlw	128
 16809  0048F8  0F97               	addlw	151
 16810  0048FA  A0D8               	btfss	status,0,c
 16811  0048FC  D00B               	goto	i1u903_20
 16812  0048FE                     i1l9886:
 16813  0048FE  90D8               	bcf	status,0,c
 16814  004900  321F               	rrcf	i1__tdiv_to_l_@quot+3,f,c
 16815  004902  321E               	rrcf	i1__tdiv_to_l_@quot+2,f,c
 16816  004904  321D               	rrcf	i1__tdiv_to_l_@quot+1,f,c
 16817  004906  321C               	rrcf	i1__tdiv_to_l_@quot,f,c
 16818  004908  3E21               	incfsz	i1__tdiv_to_l_@exp1,f,c
 16819  00490A  D7F9               	goto	i1l9886
 16820  00490C  D014               	goto	i1l802
 16821  00490E                     i1l9890:
 16822  00490E  0E17               	movlw	23
 16823  004910  6421               	cpfsgt	i1__tdiv_to_l_@exp1,c
 16824  004912  D00F               	goto	i1l9898
 16825  004914                     i1u903_20:
 16826  004914  0E00               	movlw	0
 16827  004916  6E11               	movwf	?i1__tdiv_to_l_,c
 16828  004918  0E00               	movlw	0
 16829  00491A  6E12               	movwf	?i1__tdiv_to_l_+1,c
 16830  00491C  0E00               	movlw	0
 16831  00491E  6E13               	movwf	?i1__tdiv_to_l_+2,c
 16832  004920  0E00               	movlw	0
 16833  004922  6E14               	movwf	?i1__tdiv_to_l_+3,c
 16834  004924  D010               	goto	i1l793
 16835  004926                     i1l9896:
 16836  004926  90D8               	bcf	status,0,c
 16837  004928  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 16838  00492A  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 16839  00492C  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 16840  00492E  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 16841  004930  0621               	decf	i1__tdiv_to_l_@exp1,f,c
 16842  004932                     i1l9898:
 16843  004932  6621               	tstfsz	i1__tdiv_to_l_@exp1,c
 16844  004934  D7F8               	goto	i1l9896
 16845  004936                     i1l802:
 16846  004936  C01C  F011         	movff	i1__tdiv_to_l_@quot,?i1__tdiv_to_l_
 16847  00493A  C01D  F012         	movff	i1__tdiv_to_l_@quot+1,?i1__tdiv_to_l_+1
 16848  00493E  C01E  F013         	movff	i1__tdiv_to_l_@quot+2,?i1__tdiv_to_l_+2
 16849  004942  C01F  F014         	movff	i1__tdiv_to_l_@quot+3,?i1__tdiv_to_l_+3
 16850  004946                     i1l793:
 16851  004946  0012               	return	
 16852  004948                     __end_ofi1__tdiv_to_l_:
 16853                           	opt stack 0
 16854                           pclatu	equ	0xFFB
 16855                           pclath	equ	0xFFA
 16856                           tblptru	equ	0xFF8
 16857                           tblptrh	equ	0xFF7
 16858                           tblptrl	equ	0xFF6
 16859                           tablat	equ	0xFF5
 16860                           prodh	equ	0xFF4
 16861                           prodl	equ	0xFF3
 16862                           intcon	equ	0xFF2
 16863                           postinc0	equ	0xFEE
 16864                           fsr0h	equ	0xFEA
 16865                           fsr0l	equ	0xFE9
 16866                           wreg	equ	0xFE8
 16867                           postdec1	equ	0xFE5
 16868                           fsr1h	equ	0xFE2
 16869                           fsr1l	equ	0xFE1
 16870                           bsr	equ	0xFE0
 16871                           indf2	equ	0xFDF
 16872                           postinc2	equ	0xFDE
 16873                           postdec2	equ	0xFDD
 16874                           fsr2h	equ	0xFDA
 16875                           fsr2l	equ	0xFD9
 16876                           status	equ	0xFD8
 16877                           
 16878 ;; *************** function i1__div_to_l_ *****************
 16879 ;; Defined at:
 16880 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
 16881 ;; Parameters:    Size  Location     Type
 16882 ;;  _div_to_l_      3   16[COMRAM] unsigned long 
 16883 ;;  _div_to_l_      3   19[COMRAM] unsigned long 
 16884 ;; Auto vars:     Size  Location     Type
 16885 ;;  _div_to_l_      4   23[COMRAM] unsigned long 
 16886 ;;  _div_to_l_      1   28[COMRAM] unsigned char 
 16887 ;;  _div_to_l_      1   27[COMRAM] unsigned char 
 16888 ;; Return value:  Size  Location     Type
 16889 ;;                  4   16[COMRAM] unsigned long 
 16890 ;; Registers used:
 16891 ;;		wreg, status,2, status,0
 16892 ;; Tracked objects:
 16893 ;;		On entry : 0/0
 16894 ;;		On exit  : 0/0
 16895 ;;		Unchanged: 0/0
 16896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16897 ;;      Params:         6       0       0       0       0       0       0       0       0
 16898 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16899 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16900 ;;      Totals:        13       0       0       0       0       0       0       0       0
 16901 ;;Total ram usage:       13 bytes
 16902 ;; Hardware stack levels used:    1
 16903 ;; Hardware stack levels required when called:    3
 16904 ;; This function calls:
 16905 ;;		Nothing
 16906 ;; This function is called by:
 16907 ;;		i1_sprintf
 16908 ;; This function uses a non-reentrant model
 16909 ;;
 16910                           
 16911                           	psect	text67
 16912  004F84                     __ptext67:
 16913                           	opt stack 0
 16914  004F84                     i1__div_to_l_:
 16915                           	opt stack 16
 16916                           
 16917                           ;incstack = 0
 16918                           ;incstack = 0
 16919  004F84  3413               	rlcf	(i1__div_to_l_@f1+2)& (0+255),w,c
 16920  004F86  3414               	rlcf	(i1__div_to_l_@f1+3)& (0+255),w,c
 16921  004F88  6E1D               	movwf	i1__div_to_l_@exp1,c
 16922  004F8A  661D               	tstfsz	i1__div_to_l_@exp1& (0+255),c
 16923  004F8C  D001               	goto	i1l9646
 16924  004F8E  D05A               	goto	i1u861_20
 16925  004F90                     i1l9646:
 16926  004F90  3416               	rlcf	(i1__div_to_l_@f2+2)& (0+255),w,c
 16927  004F92  3417               	rlcf	(i1__div_to_l_@f2+3)& (0+255),w,c
 16928  004F94  6E1C               	movwf	i1__div_to_l_@cntr,c
 16929  004F96  661C               	tstfsz	i1__div_to_l_@cntr& (0+255),c
 16930  004F98  D001               	goto	i1l9652
 16931  004F9A  D054               	goto	i1u861_20
 16932  004F9C                     i1l9652:
 16933  004F9C  8E13               	bsf	i1__div_to_l_@f1+2,7,c
 16934  004F9E  0EFF               	movlw	255
 16935  004FA0  1611               	andwf	i1__div_to_l_@f1,f,c
 16936  004FA2  0EFF               	movlw	255
 16937  004FA4  1612               	andwf	i1__div_to_l_@f1+1,f,c
 16938  004FA6  0EFF               	movlw	255
 16939  004FA8  1613               	andwf	i1__div_to_l_@f1+2,f,c
 16940  004FAA  0E00               	movlw	0
 16941  004FAC  1614               	andwf	i1__div_to_l_@f1+3,f,c
 16942  004FAE  8E16               	bsf	i1__div_to_l_@f2+2,7,c
 16943  004FB0  0EFF               	movlw	255
 16944  004FB2  1614               	andwf	i1__div_to_l_@f2,f,c
 16945  004FB4  0EFF               	movlw	255
 16946  004FB6  1615               	andwf	i1__div_to_l_@f2+1,f,c
 16947  004FB8  0EFF               	movlw	255
 16948  004FBA  1616               	andwf	i1__div_to_l_@f2+2,f,c
 16949  004FBC  0E00               	movlw	0
 16950  004FBE  1617               	andwf	i1__div_to_l_@f2+3,f,c
 16951  004FC0  0E00               	movlw	0
 16952  004FC2  6E18               	movwf	i1__div_to_l_@quot,c
 16953  004FC4  0E00               	movlw	0
 16954  004FC6  6E19               	movwf	i1__div_to_l_@quot+1,c
 16955  004FC8  0E00               	movlw	0
 16956  004FCA  6E1A               	movwf	i1__div_to_l_@quot+2,c
 16957  004FCC  0E00               	movlw	0
 16958  004FCE  6E1B               	movwf	i1__div_to_l_@quot+3,c
 16959  004FD0  0E7F               	movlw	127
 16960  004FD2  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 16961  004FD4  501C               	movf	i1__div_to_l_@cntr,w,c
 16962  004FD6  0FA0               	addlw	160
 16963  004FD8  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 16964  004FDA  6E17               	movwf	??i1__div_to_l_& (0+255),c
 16965  004FDC  0E20               	movlw	32
 16966  004FDE  6E1C               	movwf	i1__div_to_l_@cntr,c
 16967  004FE0  5017               	movf	??i1__div_to_l_& (0+255),w,c
 16968  004FE2                     i1l677:
 16969  004FE2  90D8               	bcf	status,0,c
 16970  004FE4  3618               	rlcf	i1__div_to_l_@quot,f,c
 16971  004FE6  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 16972  004FE8  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 16973  004FEA  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 16974  004FEC  5014               	movf	i1__div_to_l_@f2,w,c
 16975  004FEE  5C11               	subwf	i1__div_to_l_@f1,w,c
 16976  004FF0  5015               	movf	i1__div_to_l_@f2+1,w,c
 16977  004FF2  5812               	subwfb	i1__div_to_l_@f1+1,w,c
 16978  004FF4  5016               	movf	i1__div_to_l_@f2+2,w,c
 16979  004FF6  5813               	subwfb	i1__div_to_l_@f1+2,w,c
 16980  004FF8  5017               	movf	i1__div_to_l_@f2+3,w,c
 16981  004FFA  5814               	subwfb	i1__div_to_l_@f1+3,w,c
 16982  004FFC  A0D8               	btfss	status,0,c
 16983  004FFE  D009               	goto	i1l9672
 16984  005000  5014               	movf	i1__div_to_l_@f2,w,c
 16985  005002  5E11               	subwf	i1__div_to_l_@f1,f,c
 16986  005004  5015               	movf	i1__div_to_l_@f2+1,w,c
 16987  005006  5A12               	subwfb	i1__div_to_l_@f1+1,f,c
 16988  005008  5016               	movf	i1__div_to_l_@f2+2,w,c
 16989  00500A  5A13               	subwfb	i1__div_to_l_@f1+2,f,c
 16990  00500C  5017               	movf	i1__div_to_l_@f2+3,w,c
 16991  00500E  5A14               	subwfb	i1__div_to_l_@f1+3,f,c
 16992  005010  8018               	bsf	i1__div_to_l_@quot,0,c
 16993  005012                     i1l9672:
 16994  005012  90D8               	bcf	status,0,c
 16995  005014  3611               	rlcf	i1__div_to_l_@f1,f,c
 16996  005016  3612               	rlcf	i1__div_to_l_@f1+1,f,c
 16997  005018  3613               	rlcf	i1__div_to_l_@f1+2,f,c
 16998  00501A  3614               	rlcf	i1__div_to_l_@f1+3,f,c
 16999  00501C  2E1C               	decfsz	i1__div_to_l_@cntr,f,c
 17000  00501E  D7E1               	goto	i1l677
 17001  005020  AE1D               	btfss	i1__div_to_l_@exp1,7,c
 17002  005022  D00D               	goto	i1l9686
 17003  005024  501D               	movf	i1__div_to_l_@exp1,w,c
 17004  005026  0A80               	xorlw	128
 17005  005028  0F9F               	addlw	159
 17006  00502A  A0D8               	btfss	status,0,c
 17007  00502C  D00B               	goto	i1u861_20
 17008  00502E                     i1l9682:
 17009  00502E  90D8               	bcf	status,0,c
 17010  005030  321B               	rrcf	i1__div_to_l_@quot+3,f,c
 17011  005032  321A               	rrcf	i1__div_to_l_@quot+2,f,c
 17012  005034  3219               	rrcf	i1__div_to_l_@quot+1,f,c
 17013  005036  3218               	rrcf	i1__div_to_l_@quot,f,c
 17014  005038  3E1D               	incfsz	i1__div_to_l_@exp1,f,c
 17015  00503A  D7F9               	goto	i1l9682
 17016  00503C  D014               	goto	i1l684
 17017  00503E                     i1l9686:
 17018  00503E  0E1F               	movlw	31
 17019  005040  641D               	cpfsgt	i1__div_to_l_@exp1,c
 17020  005042  D00F               	goto	i1l9694
 17021  005044                     i1u861_20:
 17022  005044  0E00               	movlw	0
 17023  005046  6E11               	movwf	?i1__div_to_l_,c
 17024  005048  0E00               	movlw	0
 17025  00504A  6E12               	movwf	?i1__div_to_l_+1,c
 17026  00504C  0E00               	movlw	0
 17027  00504E  6E13               	movwf	?i1__div_to_l_+2,c
 17028  005050  0E00               	movlw	0
 17029  005052  6E14               	movwf	?i1__div_to_l_+3,c
 17030  005054  D010               	goto	i1l675
 17031  005056                     i1l9692:
 17032  005056  90D8               	bcf	status,0,c
 17033  005058  3618               	rlcf	i1__div_to_l_@quot,f,c
 17034  00505A  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 17035  00505C  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 17036  00505E  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 17037  005060  061D               	decf	i1__div_to_l_@exp1,f,c
 17038  005062                     i1l9694:
 17039  005062  661D               	tstfsz	i1__div_to_l_@exp1,c
 17040  005064  D7F8               	goto	i1l9692
 17041  005066                     i1l684:
 17042  005066  C018  F011         	movff	i1__div_to_l_@quot,?i1__div_to_l_
 17043  00506A  C019  F012         	movff	i1__div_to_l_@quot+1,?i1__div_to_l_+1
 17044  00506E  C01A  F013         	movff	i1__div_to_l_@quot+2,?i1__div_to_l_+2
 17045  005072  C01B  F014         	movff	i1__div_to_l_@quot+3,?i1__div_to_l_+3
 17046  005076                     i1l675:
 17047  005076  0012               	return	
 17048  005078                     __end_ofi1__div_to_l_:
 17049                           	opt stack 0
 17050                           pclatu	equ	0xFFB
 17051                           pclath	equ	0xFFA
 17052                           tblptru	equ	0xFF8
 17053                           tblptrh	equ	0xFF7
 17054                           tblptrl	equ	0xFF6
 17055                           tablat	equ	0xFF5
 17056                           prodh	equ	0xFF4
 17057                           prodl	equ	0xFF3
 17058                           intcon	equ	0xFF2
 17059                           postinc0	equ	0xFEE
 17060                           fsr0h	equ	0xFEA
 17061                           fsr0l	equ	0xFE9
 17062                           wreg	equ	0xFE8
 17063                           postdec1	equ	0xFE5
 17064                           fsr1h	equ	0xFE2
 17065                           fsr1l	equ	0xFE1
 17066                           bsr	equ	0xFE0
 17067                           indf2	equ	0xFDF
 17068                           postinc2	equ	0xFDE
 17069                           postdec2	equ	0xFDD
 17070                           fsr2h	equ	0xFDA
 17071                           fsr2l	equ	0xFD9
 17072                           status	equ	0xFD8
 17073                           
 17074 ;; *************** function i1___asftsub *****************
 17075 ;; Defined at:
 17076 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
 17077 ;; Parameters:    Size  Location     Type
 17078 ;;  __asftsub       2   44[COMRAM] PTR float 
 17079 ;;		 -> sprintf@fval(3), 
 17080 ;;  __asftsub       3   46[COMRAM] float 
 17081 ;; Auto vars:     Size  Location     Type
 17082 ;;		None
 17083 ;; Return value:  Size  Location     Type
 17084 ;;                  3   44[COMRAM] float 
 17085 ;; Registers used:
 17086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17087 ;; Tracked objects:
 17088 ;;		On entry : 0/0
 17089 ;;		On exit  : 0/0
 17090 ;;		Unchanged: 0/0
 17091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17092 ;;      Params:         5       0       0       0       0       0       0       0       0
 17093 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17094 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17095 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17096 ;;Total ram usage:        5 bytes
 17097 ;; Hardware stack levels used:    1
 17098 ;; Hardware stack levels required when called:    6
 17099 ;; This function calls:
 17100 ;;		i1___ftsub
 17101 ;; This function is called by:
 17102 ;;		i1_sprintf
 17103 ;; This function uses a non-reentrant model
 17104 ;;
 17105                           
 17106                           	psect	text68
 17107  00639E                     __ptext68:
 17108                           	opt stack 0
 17109  00639E                     i1___asftsub:
 17110                           	opt stack 13
 17111                           
 17112                           ;	Return value of i1___asftsub is never used
 17113                           
 17114                           ;incstack = 0
 17115                           ;incstack = 0
 17116  00639E  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 17117  0063A2  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 17118  0063A6  CFDE F027          	movff	postinc2,?i1___ftsub
 17119  0063AA  CFDE F028          	movff	postinc2,?i1___ftsub+1
 17120  0063AE  CFDD F029          	movff	postdec2,?i1___ftsub+2
 17121  0063B2  C02F  F02A         	movff	i1___asftsub@f2,?i1___ftsub+3
 17122  0063B6  C030  F02B         	movff	i1___asftsub@f2+1,?i1___ftsub+4
 17123  0063BA  C031  F02C         	movff	i1___asftsub@f2+2,?i1___ftsub+5
 17124  0063BE  EC9D  F032         	call	i1___ftsub	;wreg free
 17125  0063C2  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 17126  0063C6  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 17127  0063CA  C027  FFDE         	movff	?i1___ftsub,postinc2
 17128  0063CE  C028  FFDE         	movff	?i1___ftsub+1,postinc2
 17129  0063D2  C029  FFDD         	movff	?i1___ftsub+2,postdec2
 17130  0063D6  52DD               	movf	postdec2,f,c
 17131  0063D8  0012               	return	
 17132  0063DA                     __end_ofi1___asftsub:
 17133                           	opt stack 0
 17134                           pclatu	equ	0xFFB
 17135                           pclath	equ	0xFFA
 17136                           tblptru	equ	0xFF8
 17137                           tblptrh	equ	0xFF7
 17138                           tblptrl	equ	0xFF6
 17139                           tablat	equ	0xFF5
 17140                           prodh	equ	0xFF4
 17141                           prodl	equ	0xFF3
 17142                           intcon	equ	0xFF2
 17143                           postinc0	equ	0xFEE
 17144                           fsr0h	equ	0xFEA
 17145                           fsr0l	equ	0xFE9
 17146                           wreg	equ	0xFE8
 17147                           postdec1	equ	0xFE5
 17148                           fsr1h	equ	0xFE2
 17149                           fsr1l	equ	0xFE1
 17150                           bsr	equ	0xFE0
 17151                           indf2	equ	0xFDF
 17152                           postinc2	equ	0xFDE
 17153                           postdec2	equ	0xFDD
 17154                           fsr2h	equ	0xFDA
 17155                           fsr2l	equ	0xFD9
 17156                           status	equ	0xFD8
 17157                           
 17158 ;; *************** function i1___ftsub *****************
 17159 ;; Defined at:
 17160 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
 17161 ;; Parameters:    Size  Location     Type
 17162 ;;  __ftsub         3   38[COMRAM] float 
 17163 ;;  __ftsub         3   41[COMRAM] float 
 17164 ;; Auto vars:     Size  Location     Type
 17165 ;;		None
 17166 ;; Return value:  Size  Location     Type
 17167 ;;                  3   38[COMRAM] float 
 17168 ;; Registers used:
 17169 ;;		wreg, status,2, status,0, cstack
 17170 ;; Tracked objects:
 17171 ;;		On entry : 0/0
 17172 ;;		On exit  : 0/0
 17173 ;;		Unchanged: 0/0
 17174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17175 ;;      Params:         6       0       0       0       0       0       0       0       0
 17176 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17177 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17178 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17179 ;;Total ram usage:        6 bytes
 17180 ;; Hardware stack levels used:    1
 17181 ;; Hardware stack levels required when called:    5
 17182 ;; This function calls:
 17183 ;;		i1___ftadd
 17184 ;; This function is called by:
 17185 ;;		i1___asftsub
 17186 ;; This function uses a non-reentrant model
 17187 ;;
 17188                           
 17189                           	psect	text69
 17190  00653A                     __ptext69:
 17191                           	opt stack 0
 17192  00653A                     i1___ftsub:
 17193                           	opt stack 13
 17194                           
 17195                           ;incstack = 0
 17196                           ;incstack = 0
 17197  00653A  0E00               	movlw	0
 17198  00653C  1A2A               	xorwf	i1___ftsub@f2,f,c
 17199  00653E  0E00               	movlw	0
 17200  006540  1A2B               	xorwf	i1___ftsub@f2+1,f,c
 17201  006542  0E80               	movlw	128
 17202  006544  1A2C               	xorwf	i1___ftsub@f2+2,f,c
 17203  006546  C027  F019         	movff	i1___ftsub@f1,?i1___ftadd
 17204  00654A  C028  F01A         	movff	i1___ftsub@f1+1,?i1___ftadd+1
 17205  00654E  C029  F01B         	movff	i1___ftsub@f1+2,?i1___ftadd+2
 17206  006552  C02A  F01C         	movff	i1___ftsub@f2,?i1___ftadd+3
 17207  006556  C02B  F01D         	movff	i1___ftsub@f2+1,?i1___ftadd+4
 17208  00655A  C02C  F01E         	movff	i1___ftsub@f2+2,?i1___ftadd+5
 17209  00655E  ECC2  F01E         	call	i1___ftadd	;wreg free
 17210  006562  C01B  F029         	movff	?i1___ftadd+2,?i1___ftsub+2
 17211  006566  C01A  F028         	movff	?i1___ftadd+1,?i1___ftsub+1
 17212  00656A  C019  F027         	movff	?i1___ftadd,?i1___ftsub
 17213  00656E  0012               	return	
 17214  006570                     __end_ofi1___ftsub:
 17215                           	opt stack 0
 17216                           pclatu	equ	0xFFB
 17217                           pclath	equ	0xFFA
 17218                           tblptru	equ	0xFF8
 17219                           tblptrh	equ	0xFF7
 17220                           tblptrl	equ	0xFF6
 17221                           tablat	equ	0xFF5
 17222                           prodh	equ	0xFF4
 17223                           prodl	equ	0xFF3
 17224                           intcon	equ	0xFF2
 17225                           postinc0	equ	0xFEE
 17226                           fsr0h	equ	0xFEA
 17227                           fsr0l	equ	0xFE9
 17228                           wreg	equ	0xFE8
 17229                           postdec1	equ	0xFE5
 17230                           fsr1h	equ	0xFE2
 17231                           fsr1l	equ	0xFE1
 17232                           bsr	equ	0xFE0
 17233                           indf2	equ	0xFDF
 17234                           postinc2	equ	0xFDE
 17235                           postdec2	equ	0xFDD
 17236                           fsr2h	equ	0xFDA
 17237                           fsr2l	equ	0xFD9
 17238                           status	equ	0xFD8
 17239                           
 17240 ;; *************** function i1___asftmul *****************
 17241 ;; Defined at:
 17242 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
 17243 ;; Parameters:    Size  Location     Type
 17244 ;;  __asftmul       2    0[BANK0 ] PTR float 
 17245 ;;		 -> sprintf@integ(3), 
 17246 ;;  __asftmul       3    2[BANK0 ] float 
 17247 ;; Auto vars:     Size  Location     Type
 17248 ;;		None
 17249 ;; Return value:  Size  Location     Type
 17250 ;;                  3    0[BANK0 ] float 
 17251 ;; Registers used:
 17252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17253 ;; Tracked objects:
 17254 ;;		On entry : 0/0
 17255 ;;		On exit  : 0/0
 17256 ;;		Unchanged: 0/0
 17257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17258 ;;      Params:         0       5       0       0       0       0       0       0       0
 17259 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17260 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17261 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17262 ;;Total ram usage:        5 bytes
 17263 ;; Hardware stack levels used:    1
 17264 ;; Hardware stack levels required when called:    5
 17265 ;; This function calls:
 17266 ;;		i1___ftmul
 17267 ;; This function is called by:
 17268 ;;		i1_sprintf
 17269 ;; This function uses a non-reentrant model
 17270 ;;
 17271                           
 17272                           	psect	text70
 17273  0063DA                     __ptext70:
 17274                           	opt stack 0
 17275  0063DA                     i1___asftmul:
 17276                           	opt stack 14
 17277                           
 17278                           ;	Return value of i1___asftmul is never used
 17279                           
 17280                           ;incstack = 0
 17281                           ;incstack = 0
 17282  0063DA  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 17283  0063DE  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 17284  0063E2  CFDE F036          	movff	postinc2,?i1___ftmul
 17285  0063E6  CFDE F037          	movff	postinc2,?i1___ftmul+1
 17286  0063EA  CFDD F038          	movff	postdec2,?i1___ftmul+2
 17287  0063EE  C062  F039         	movff	i1___asftmul@f2,?i1___ftmul+3
 17288  0063F2  C063  F03A         	movff	i1___asftmul@f2+1,?i1___ftmul+4
 17289  0063F6  C064  F03B         	movff	i1___asftmul@f2+2,?i1___ftmul+5
 17290  0063FA  ECBA  F025         	call	i1___ftmul	;wreg free
 17291  0063FE  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 17292  006402  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 17293  006406  C036  FFDE         	movff	?i1___ftmul,postinc2
 17294  00640A  C037  FFDE         	movff	?i1___ftmul+1,postinc2
 17295  00640E  C038  FFDD         	movff	?i1___ftmul+2,postdec2
 17296  006412  52DD               	movf	postdec2,f,c
 17297  006414  0012               	return	
 17298  006416                     __end_ofi1___asftmul:
 17299                           	opt stack 0
 17300                           pclatu	equ	0xFFB
 17301                           pclath	equ	0xFFA
 17302                           tblptru	equ	0xFF8
 17303                           tblptrh	equ	0xFF7
 17304                           tblptrl	equ	0xFF6
 17305                           tablat	equ	0xFF5
 17306                           prodh	equ	0xFF4
 17307                           prodl	equ	0xFF3
 17308                           intcon	equ	0xFF2
 17309                           postinc0	equ	0xFEE
 17310                           fsr0h	equ	0xFEA
 17311                           fsr0l	equ	0xFE9
 17312                           wreg	equ	0xFE8
 17313                           postdec1	equ	0xFE5
 17314                           fsr1h	equ	0xFE2
 17315                           fsr1l	equ	0xFE1
 17316                           bsr	equ	0xFE0
 17317                           indf2	equ	0xFDF
 17318                           postinc2	equ	0xFDE
 17319                           postdec2	equ	0xFDD
 17320                           fsr2h	equ	0xFDA
 17321                           fsr2l	equ	0xFD9
 17322                           status	equ	0xFD8
 17323                           
 17324 ;; *************** function i1___asftadd *****************
 17325 ;; Defined at:
 17326 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  __asftadd       2   12[BANK0 ] PTR float 
 17329 ;;		 -> sprintf@fval(3), 
 17330 ;;  __asftadd       3   14[BANK0 ] float 
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;		None
 17333 ;; Return value:  Size  Location     Type
 17334 ;;                  3   12[BANK0 ] float 
 17335 ;; Registers used:
 17336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17337 ;; Tracked objects:
 17338 ;;		On entry : 0/0
 17339 ;;		On exit  : 0/0
 17340 ;;		Unchanged: 0/0
 17341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17342 ;;      Params:         0       5       0       0       0       0       0       0       0
 17343 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17344 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17345 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17346 ;;Total ram usage:        5 bytes
 17347 ;; Hardware stack levels used:    1
 17348 ;; Hardware stack levels required when called:    5
 17349 ;; This function calls:
 17350 ;;		i1___ftadd
 17351 ;; This function is called by:
 17352 ;;		i1_sprintf
 17353 ;; This function uses a non-reentrant model
 17354 ;;
 17355                           
 17356                           	psect	text71
 17357  006416                     __ptext71:
 17358                           	opt stack 0
 17359  006416                     i1___asftadd:
 17360                           	opt stack 14
 17361                           
 17362                           ;	Return value of i1___asftadd is never used
 17363                           
 17364                           ;incstack = 0
 17365                           ;incstack = 0
 17366  006416  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 17367  00641A  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 17368  00641E  CFDE F019          	movff	postinc2,?i1___ftadd
 17369  006422  CFDE F01A          	movff	postinc2,?i1___ftadd+1
 17370  006426  CFDD F01B          	movff	postdec2,?i1___ftadd+2
 17371  00642A  C06E  F01C         	movff	i1___asftadd@f2,?i1___ftadd+3
 17372  00642E  C06F  F01D         	movff	i1___asftadd@f2+1,?i1___ftadd+4
 17373  006432  C070  F01E         	movff	i1___asftadd@f2+2,?i1___ftadd+5
 17374  006436  ECC2  F01E         	call	i1___ftadd	;wreg free
 17375  00643A  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 17376  00643E  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 17377  006442  C019  FFDE         	movff	?i1___ftadd,postinc2
 17378  006446  C01A  FFDE         	movff	?i1___ftadd+1,postinc2
 17379  00644A  C01B  FFDD         	movff	?i1___ftadd+2,postdec2
 17380  00644E  52DD               	movf	postdec2,f,c
 17381  006450  0012               	return	
 17382  006452                     __end_ofi1___asftadd:
 17383                           	opt stack 0
 17384                           pclatu	equ	0xFFB
 17385                           pclath	equ	0xFFA
 17386                           tblptru	equ	0xFF8
 17387                           tblptrh	equ	0xFF7
 17388                           tblptrl	equ	0xFF6
 17389                           tablat	equ	0xFF5
 17390                           prodh	equ	0xFF4
 17391                           prodl	equ	0xFF3
 17392                           intcon	equ	0xFF2
 17393                           postinc0	equ	0xFEE
 17394                           fsr0h	equ	0xFEA
 17395                           fsr0l	equ	0xFE9
 17396                           wreg	equ	0xFE8
 17397                           postdec1	equ	0xFE5
 17398                           fsr1h	equ	0xFE2
 17399                           fsr1l	equ	0xFE1
 17400                           bsr	equ	0xFE0
 17401                           indf2	equ	0xFDF
 17402                           postinc2	equ	0xFDE
 17403                           postdec2	equ	0xFDD
 17404                           fsr2h	equ	0xFDA
 17405                           fsr2l	equ	0xFD9
 17406                           status	equ	0xFD8
 17407                           
 17408 ;; *************** function i1___ftadd *****************
 17409 ;; Defined at:
 17410 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
 17411 ;; Parameters:    Size  Location     Type
 17412 ;;  __ftadd         3   24[COMRAM] float 
 17413 ;;  __ftadd         3   27[COMRAM] float 
 17414 ;; Auto vars:     Size  Location     Type
 17415 ;;  __ftadd         1   37[COMRAM] unsigned char 
 17416 ;;  __ftadd         1   36[COMRAM] unsigned char 
 17417 ;;  __ftadd         1   35[COMRAM] unsigned char 
 17418 ;; Return value:  Size  Location     Type
 17419 ;;                  3   24[COMRAM] float 
 17420 ;; Registers used:
 17421 ;;		wreg, status,2, status,0, cstack
 17422 ;; Tracked objects:
 17423 ;;		On entry : 0/0
 17424 ;;		On exit  : 0/0
 17425 ;;		Unchanged: 0/0
 17426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17427 ;;      Params:         6       0       0       0       0       0       0       0       0
 17428 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17429 ;;      Temps:          5       0       0       0       0       0       0       0       0
 17430 ;;      Totals:        14       0       0       0       0       0       0       0       0
 17431 ;;Total ram usage:       14 bytes
 17432 ;; Hardware stack levels used:    1
 17433 ;; Hardware stack levels required when called:    4
 17434 ;; This function calls:
 17435 ;;		i1___ftpack
 17436 ;; This function is called by:
 17437 ;;		i1___asftadd
 17438 ;;		i1___ftsub
 17439 ;; This function uses a non-reentrant model
 17440 ;;
 17441                           
 17442                           	psect	text72
 17443  003D84                     __ptext72:
 17444                           	opt stack 0
 17445  003D84                     i1___ftadd:
 17446                           	opt stack 13
 17447                           
 17448                           ;incstack = 0
 17449                           ;incstack = 0
 17450  003D84  0E0F               	movlw	15
 17451  003D86  6E1F               	movwf	??i1___ftadd& (0+255),c
 17452  003D88  C019  F020         	movff	i1___ftadd@f1,??i1___ftadd+1
 17453  003D8C  C01A  F021         	movff	i1___ftadd@f1+1,??i1___ftadd+2
 17454  003D90  C01B  F022         	movff	i1___ftadd@f1+2,??i1___ftadd+3
 17455  003D94  281F               	incf	??i1___ftadd,w,c
 17456  003D96  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 17457  003D98  D004               	goto	i1u870_20
 17458  003D9A                     i1u870_25:
 17459  003D9A  90D8               	bcf	status,0,c
 17460  003D9C  3222               	rrcf	??i1___ftadd+3,f,c
 17461  003D9E  3221               	rrcf	??i1___ftadd+2,f,c
 17462  003DA0  3220               	rrcf	??i1___ftadd+1,f,c
 17463  003DA2                     i1u870_20:
 17464  003DA2  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 17465  003DA4  D7FA               	goto	i1u870_25
 17466  003DA6  5020               	movf	??i1___ftadd+1,w,c
 17467  003DA8  6E26               	movwf	i1___ftadd@exp1,c
 17468  003DAA  0E0F               	movlw	15
 17469  003DAC  6E1F               	movwf	??i1___ftadd& (0+255),c
 17470  003DAE  C01C  F020         	movff	i1___ftadd@f2,??i1___ftadd+1
 17471  003DB2  C01D  F021         	movff	i1___ftadd@f2+1,??i1___ftadd+2
 17472  003DB6  C01E  F022         	movff	i1___ftadd@f2+2,??i1___ftadd+3
 17473  003DBA  281F               	incf	??i1___ftadd,w,c
 17474  003DBC  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 17475  003DBE  D004               	goto	i1u871_20
 17476  003DC0                     i1u871_25:
 17477  003DC0  90D8               	bcf	status,0,c
 17478  003DC2  3222               	rrcf	??i1___ftadd+3,f,c
 17479  003DC4  3221               	rrcf	??i1___ftadd+2,f,c
 17480  003DC6  3220               	rrcf	??i1___ftadd+1,f,c
 17481  003DC8                     i1u871_20:
 17482  003DC8  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 17483  003DCA  D7FA               	goto	i1u871_25
 17484  003DCC  5020               	movf	??i1___ftadd+1,w,c
 17485  003DCE  6E25               	movwf	i1___ftadd@exp2,c
 17486  003DD0  5026               	movf	i1___ftadd@exp1,w,c
 17487  003DD2  B4D8               	btfsc	status,2,c
 17488  003DD4  D00B               	goto	i1l753
 17489  003DD6  5025               	movf	i1___ftadd@exp2,w,c
 17490  003DD8  6026               	cpfslt	i1___ftadd@exp1,c
 17491  003DDA  D00F               	goto	i1l9738
 17492  003DDC  5026               	movf	i1___ftadd@exp1,w,c
 17493  003DDE  0800               	sublw	0
 17494  003DE0  2425               	addwf	i1___ftadd@exp2,w,c
 17495  003DE2  6E1F               	movwf	??i1___ftadd& (0+255),c
 17496  003DE4  0E19               	movlw	25
 17497  003DE6  5C1F               	subwf	??i1___ftadd,w,c
 17498  003DE8  A0D8               	btfss	status,0,c
 17499  003DEA  D007               	goto	i1l9738
 17500  003DEC                     i1l753:
 17501  003DEC  C01C  F019         	movff	i1___ftadd@f2,?i1___ftadd
 17502  003DF0  C01D  F01A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 17503  003DF4  C01E  F01B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 17504  003DF8  D0AA               	goto	i1l754
 17505  003DFA                     i1l9738:
 17506  003DFA  5025               	movf	i1___ftadd@exp2,w,c
 17507  003DFC  B4D8               	btfsc	status,2,c
 17508  003DFE  D00B               	goto	i1l757
 17509  003E00  5026               	movf	i1___ftadd@exp1,w,c
 17510  003E02  6025               	cpfslt	i1___ftadd@exp2,c
 17511  003E04  D00F               	goto	i1l9744
 17512  003E06  5025               	movf	i1___ftadd@exp2,w,c
 17513  003E08  0800               	sublw	0
 17514  003E0A  2426               	addwf	i1___ftadd@exp1,w,c
 17515  003E0C  6E1F               	movwf	??i1___ftadd& (0+255),c
 17516  003E0E  0E19               	movlw	25
 17517  003E10  5C1F               	subwf	??i1___ftadd,w,c
 17518  003E12  A0D8               	btfss	status,0,c
 17519  003E14  D007               	goto	i1l9744
 17520  003E16                     i1l757:
 17521  003E16  C019  F019         	movff	i1___ftadd@f1,?i1___ftadd
 17522  003E1A  C01A  F01A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 17523  003E1E  C01B  F01B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 17524  003E22  D095               	goto	i1l754
 17525  003E24                     i1l9744:
 17526  003E24  6E1F               	movwf	??i1___ftadd& (0+255),c
 17527  003E26  0E06               	movlw	6
 17528  003E28  6E24               	movwf	i1___ftadd@sign,c
 17529  003E2A  501F               	movf	??i1___ftadd& (0+255),w,c
 17530  003E2C  BE1B               	btfsc	i1___ftadd@f1+2,7,c
 17531  003E2E  8E24               	bsf	i1___ftadd@sign,7,c
 17532  003E30  BE1E               	btfsc	i1___ftadd@f2+2,7,c
 17533  003E32  8C24               	bsf	i1___ftadd@sign,6,c
 17534  003E34  8E1A               	bsf	i1___ftadd@f1+1,7,c
 17535  003E36  0EFF               	movlw	255
 17536  003E38  1619               	andwf	i1___ftadd@f1,f,c
 17537  003E3A  0EFF               	movlw	255
 17538  003E3C  161A               	andwf	i1___ftadd@f1+1,f,c
 17539  003E3E  0E00               	movlw	0
 17540  003E40  161B               	andwf	i1___ftadd@f1+2,f,c
 17541  003E42  8E1D               	bsf	i1___ftadd@f2+1,7,c
 17542  003E44  0EFF               	movlw	255
 17543  003E46  161C               	andwf	i1___ftadd@f2,f,c
 17544  003E48  0EFF               	movlw	255
 17545  003E4A  161D               	andwf	i1___ftadd@f2+1,f,c
 17546  003E4C  0E00               	movlw	0
 17547  003E4E  161E               	andwf	i1___ftadd@f2+2,f,c
 17548  003E50  5025               	movf	i1___ftadd@exp2,w,c
 17549  003E52  6026               	cpfslt	i1___ftadd@exp1,c
 17550  003E54  D018               	goto	i1l9770
 17551  003E56                     i1l9760:
 17552  003E56  90D8               	bcf	status,0,c
 17553  003E58  361C               	rlcf	i1___ftadd@f2,f,c
 17554  003E5A  361D               	rlcf	i1___ftadd@f2+1,f,c
 17555  003E5C  361E               	rlcf	i1___ftadd@f2+2,f,c
 17556  003E5E  0625               	decf	i1___ftadd@exp2,f,c
 17557  003E60  5025               	movf	i1___ftadd@exp2,w,c
 17558  003E62  1826               	xorwf	i1___ftadd@exp1,w,c
 17559  003E64  B4D8               	btfsc	status,2,c
 17560  003E66  D00B               	goto	i1l9768
 17561  003E68  0624               	decf	i1___ftadd@sign,f,c
 17562  003E6A  5024               	movf	i1___ftadd@sign& (0+255),w,c
 17563  003E6C  0B07               	andlw	7
 17564  003E6E  B4D8               	btfsc	status,2,c
 17565  003E70  D006               	goto	i1l9768
 17566  003E72  D7F1               	goto	i1l9760
 17567  003E74                     i1l9766:
 17568  003E74  90D8               	bcf	status,0,c
 17569  003E76  321B               	rrcf	i1___ftadd@f1+2,f,c
 17570  003E78  321A               	rrcf	i1___ftadd@f1+1,f,c
 17571  003E7A  3219               	rrcf	i1___ftadd@f1,f,c
 17572  003E7C  2A26               	incf	i1___ftadd@exp1,f,c
 17573  003E7E                     i1l9768:
 17574  003E7E  5025               	movf	i1___ftadd@exp2,w,c
 17575  003E80  6226               	cpfseq	i1___ftadd@exp1,c
 17576  003E82  D7F8               	goto	i1l9766
 17577  003E84  D01A               	goto	i1l768
 17578  003E86                     i1l9770:
 17579  003E86  5026               	movf	i1___ftadd@exp1,w,c
 17580  003E88  6025               	cpfslt	i1___ftadd@exp2,c
 17581  003E8A  D017               	goto	i1l768
 17582  003E8C                     i1l9772:
 17583  003E8C  90D8               	bcf	status,0,c
 17584  003E8E  3619               	rlcf	i1___ftadd@f1,f,c
 17585  003E90  361A               	rlcf	i1___ftadd@f1+1,f,c
 17586  003E92  361B               	rlcf	i1___ftadd@f1+2,f,c
 17587  003E94  0626               	decf	i1___ftadd@exp1,f,c
 17588  003E96  5025               	movf	i1___ftadd@exp2,w,c
 17589  003E98  1826               	xorwf	i1___ftadd@exp1,w,c
 17590  003E9A  B4D8               	btfsc	status,2,c
 17591  003E9C  D00B               	goto	i1l9780
 17592  003E9E  0624               	decf	i1___ftadd@sign,f,c
 17593  003EA0  5024               	movf	i1___ftadd@sign& (0+255),w,c
 17594  003EA2  0B07               	andlw	7
 17595  003EA4  B4D8               	btfsc	status,2,c
 17596  003EA6  D006               	goto	i1l9780
 17597  003EA8  D7F1               	goto	i1l9772
 17598  003EAA                     i1l9778:
 17599  003EAA  90D8               	bcf	status,0,c
 17600  003EAC  321E               	rrcf	i1___ftadd@f2+2,f,c
 17601  003EAE  321D               	rrcf	i1___ftadd@f2+1,f,c
 17602  003EB0  321C               	rrcf	i1___ftadd@f2,f,c
 17603  003EB2  2A25               	incf	i1___ftadd@exp2,f,c
 17604  003EB4                     i1l9780:
 17605  003EB4  5025               	movf	i1___ftadd@exp2,w,c
 17606  003EB6  6226               	cpfseq	i1___ftadd@exp1,c
 17607  003EB8  D7F8               	goto	i1l9778
 17608  003EBA                     i1l768:
 17609  003EBA  AE24               	btfss	i1___ftadd@sign,7,c
 17610  003EBC  D00C               	goto	i1l777
 17611  003EBE  0EFF               	movlw	255
 17612  003EC0  1A19               	xorwf	i1___ftadd@f1,f,c
 17613  003EC2  0EFF               	movlw	255
 17614  003EC4  1A1A               	xorwf	i1___ftadd@f1+1,f,c
 17615  003EC6  0EFF               	movlw	255
 17616  003EC8  1A1B               	xorwf	i1___ftadd@f1+2,f,c
 17617  003ECA  0E01               	movlw	1
 17618  003ECC  2619               	addwf	i1___ftadd@f1,f,c
 17619  003ECE  0E00               	movlw	0
 17620  003ED0  221A               	addwfc	i1___ftadd@f1+1,f,c
 17621  003ED2  0E00               	movlw	0
 17622  003ED4  221B               	addwfc	i1___ftadd@f1+2,f,c
 17623  003ED6                     i1l777:
 17624  003ED6  AC24               	btfss	i1___ftadd@sign,6,c
 17625  003ED8  D00C               	goto	i1l9786
 17626  003EDA  0EFF               	movlw	255
 17627  003EDC  1A1C               	xorwf	i1___ftadd@f2,f,c
 17628  003EDE  0EFF               	movlw	255
 17629  003EE0  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 17630  003EE2  0EFF               	movlw	255
 17631  003EE4  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 17632  003EE6  0E01               	movlw	1
 17633  003EE8  261C               	addwf	i1___ftadd@f2,f,c
 17634  003EEA  0E00               	movlw	0
 17635  003EEC  221D               	addwfc	i1___ftadd@f2+1,f,c
 17636  003EEE  0E00               	movlw	0
 17637  003EF0  221E               	addwfc	i1___ftadd@f2+2,f,c
 17638  003EF2                     i1l9786:
 17639  003EF2  6E1F               	movwf	??i1___ftadd& (0+255),c
 17640  003EF4  0E00               	movlw	0
 17641  003EF6  6E24               	movwf	i1___ftadd@sign,c
 17642  003EF8  501F               	movf	??i1___ftadd& (0+255),w,c
 17643  003EFA  5019               	movf	i1___ftadd@f1,w,c
 17644  003EFC  261C               	addwf	i1___ftadd@f2,f,c
 17645  003EFE  501A               	movf	i1___ftadd@f1+1,w,c
 17646  003F00  221D               	addwfc	i1___ftadd@f2+1,f,c
 17647  003F02  501B               	movf	i1___ftadd@f1+2,w,c
 17648  003F04  221E               	addwfc	i1___ftadd@f2+2,f,c
 17649  003F06  AE1E               	btfss	i1___ftadd@f2+2,7,c
 17650  003F08  D010               	goto	i1l9796
 17651  003F0A  0EFF               	movlw	255
 17652  003F0C  1A1C               	xorwf	i1___ftadd@f2,f,c
 17653  003F0E  0EFF               	movlw	255
 17654  003F10  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 17655  003F12  0EFF               	movlw	255
 17656  003F14  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 17657  003F16  0E01               	movlw	1
 17658  003F18  261C               	addwf	i1___ftadd@f2,f,c
 17659  003F1A  0E00               	movlw	0
 17660  003F1C  221D               	addwfc	i1___ftadd@f2+1,f,c
 17661  003F1E  0E00               	movlw	0
 17662  003F20  221E               	addwfc	i1___ftadd@f2+2,f,c
 17663  003F22  6E1F               	movwf	??i1___ftadd& (0+255),c
 17664  003F24  0E01               	movlw	1
 17665  003F26  6E24               	movwf	i1___ftadd@sign,c
 17666  003F28  501F               	movf	??i1___ftadd& (0+255),w,c
 17667  003F2A                     i1l9796:
 17668  003F2A  C01C  F011         	movff	i1___ftadd@f2,?i1___ftpack
 17669  003F2E  C01D  F012         	movff	i1___ftadd@f2+1,?i1___ftpack+1
 17670  003F32  C01E  F013         	movff	i1___ftadd@f2+2,?i1___ftpack+2
 17671  003F36  C026  F014         	movff	i1___ftadd@exp1,?i1___ftpack+3
 17672  003F3A  C024  F015         	movff	i1___ftadd@sign,?i1___ftpack+4
 17673  003F3E  EC72  F02A         	call	i1___ftpack	;wreg free
 17674  003F42  C013  F01B         	movff	?i1___ftpack+2,?i1___ftadd+2
 17675  003F46  C012  F01A         	movff	?i1___ftpack+1,?i1___ftadd+1
 17676  003F4A  C011  F019         	movff	?i1___ftpack,?i1___ftadd
 17677  003F4E                     i1l754:
 17678  003F4E  0012               	return	
 17679  003F50                     __end_ofi1___ftadd:
 17680                           	opt stack 0
 17681                           pclatu	equ	0xFFB
 17682                           pclath	equ	0xFFA
 17683                           tblptru	equ	0xFF8
 17684                           tblptrh	equ	0xFF7
 17685                           tblptrl	equ	0xFF6
 17686                           tablat	equ	0xFF5
 17687                           prodh	equ	0xFF4
 17688                           prodl	equ	0xFF3
 17689                           intcon	equ	0xFF2
 17690                           postinc0	equ	0xFEE
 17691                           fsr0h	equ	0xFEA
 17692                           fsr0l	equ	0xFE9
 17693                           wreg	equ	0xFE8
 17694                           postdec1	equ	0xFE5
 17695                           fsr1h	equ	0xFE2
 17696                           fsr1l	equ	0xFE1
 17697                           bsr	equ	0xFE0
 17698                           indf2	equ	0xFDF
 17699                           postinc2	equ	0xFDE
 17700                           postdec2	equ	0xFDD
 17701                           fsr2h	equ	0xFDA
 17702                           fsr2l	equ	0xFD9
 17703                           status	equ	0xFD8
 17704                           
 17705 ;; *************** function i1_scale *****************
 17706 ;; Defined at:
 17707 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 17708 ;; Parameters:    Size  Location     Type
 17709 ;;  scale           1   70[COMRAM] char 
 17710 ;; Auto vars:     Size  Location     Type
 17711 ;;  scale           3    0        float 
 17712 ;;  scale           3    0        float 
 17713 ;; Return value:  Size  Location     Type
 17714 ;;                  3   70[COMRAM] float 
 17715 ;; Registers used:
 17716 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17717 ;; Tracked objects:
 17718 ;;		On entry : 0/0
 17719 ;;		On exit  : 0/0
 17720 ;;		Unchanged: 0/0
 17721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17722 ;;      Params:         3       0       0       0       0       0       0       0       0
 17723 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17724 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17725 ;;      Totals:         3       9       0       0       0       0       0       0       0
 17726 ;;Total ram usage:       12 bytes
 17727 ;; Hardware stack levels used:    1
 17728 ;; Hardware stack levels required when called:    5
 17729 ;; This function calls:
 17730 ;;		i1___awdiv
 17731 ;;		i1___awmod
 17732 ;;		i1___ftmul
 17733 ;;		i1___wmul
 17734 ;; This function is called by:
 17735 ;;		i1_sprintf
 17736 ;; This function uses a non-reentrant model
 17737 ;;
 17738                           
 17739                           	psect	text73
 17740  002A28                     __ptext73:
 17741                           	opt stack 0
 17742  002A28                     i1_scale:
 17743                           	opt stack 14
 17744                           
 17745                           ;doprnt.c: 428: if(scl < 0) {
 17746                           
 17747                           ;incstack = 0
 17748                           ;incstack = 0
 17749  002A28  AE47               	btfss	i1scale@scl,7,c
 17750  002A2A  D108               	goto	i1l11736
 17751                           
 17752                           ;doprnt.c: 429: scl = -scl;
 17753  002A2C  6C47               	negf	i1scale@scl,c
 17754                           
 17755                           ;doprnt.c: 430: if(scl>=110)
 17756  002A2E  5047               	movf	i1scale@scl,w,c
 17757  002A30  0A80               	xorlw	128
 17758  002A32  0F12               	addlw	-238
 17759  002A34  A0D8               	btfss	status,0,c
 17760  002A36  D09D               	goto	i1l11726
 17761                           
 17762                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17763  002A38  0E00               	movlw	0
 17764  002A3A  6E24               	movwf	?i1___wmul+3,c
 17765  002A3C  0E03               	movlw	3
 17766  002A3E  6E23               	movwf	?i1___wmul+2,c
 17767  002A40  0E00               	movlw	0
 17768  002A42  6E1B               	movwf	?i1___awdiv+3,c
 17769  002A44  0E0A               	movlw	10
 17770  002A46  6E1A               	movwf	?i1___awdiv+2,c
 17771  002A48  0E00               	movlw	0
 17772  002A4A  6E14               	movwf	?i1___awmod+3,c
 17773  002A4C  0E64               	movlw	100
 17774  002A4E  6E13               	movwf	?i1___awmod+2,c
 17775  002A50  5047               	movf	i1scale@scl,w,c
 17776  002A52  6E11               	movwf	?i1___awmod,c
 17777  002A54  6A12               	clrf	?i1___awmod+1,c
 17778  002A56  BE11               	btfsc	?i1___awmod,7,c
 17779  002A58  0612               	decf	?i1___awmod+1,f,c
 17780  002A5A  EC7A  F02E         	call	i1___awmod	;wreg free
 17781  002A5E  C011  F018         	movff	?i1___awmod,?i1___awdiv
 17782  002A62  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 17783  002A66  EC66  F02C         	call	i1___awdiv	;wreg free
 17784  002A6A  0E09               	movlw	9
 17785  002A6C  2418               	addwf	?i1___awdiv,w,c
 17786  002A6E  6E21               	movwf	?i1___wmul,c
 17787  002A70  0E00               	movlw	0
 17788  002A72  2019               	addwfc	?i1___awdiv+1,w,c
 17789  002A74  6E22               	movwf	?i1___wmul+1,c
 17790  002A76  EC63  F032         	call	i1___wmul	;wreg free
 17791  002A7A  0E28               	movlw	low __npowers_
 17792  002A7C  2421               	addwf	?i1___wmul,w,c
 17793  002A7E  6EF6               	movwf	tblptrl,c
 17794  002A80  0E08               	movlw	high __npowers_
 17795  002A82  2022               	addwfc	?i1___wmul+1,w,c
 17796  002A84  6EF7               	movwf	tblptrh,c
 17797  002A86  0009               	tblrd		*+
 17798  002A88  CFF5 F060          	movff	tablat,??i1_scale
 17799  002A8C  0009               	tblrd		*+
 17800  002A8E  CFF5 F061          	movff	tablat,??i1_scale+1
 17801  002A92  0009               	tblrd		*+
 17802  002A94  CFF5 F062          	movff	tablat,??i1_scale+2
 17803  002A98  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 17804  002A9C  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 17805  002AA0  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 17806  002AA4  0E00               	movlw	0
 17807  002AA6  6E24               	movwf	?i1___wmul+3,c
 17808  002AA8  0E03               	movlw	3
 17809  002AAA  6E23               	movwf	?i1___wmul+2,c
 17810  002AAC  0E00               	movlw	0
 17811  002AAE  6E1B               	movwf	?i1___awdiv+3,c
 17812  002AB0  0E64               	movlw	100
 17813  002AB2  6E1A               	movwf	?i1___awdiv+2,c
 17814  002AB4  5047               	movf	i1scale@scl,w,c
 17815  002AB6  6E18               	movwf	?i1___awdiv,c
 17816  002AB8  6A19               	clrf	?i1___awdiv+1,c
 17817  002ABA  BE18               	btfsc	?i1___awdiv,7,c
 17818  002ABC  0619               	decf	?i1___awdiv+1,f,c
 17819  002ABE  EC66  F02C         	call	i1___awdiv	;wreg free
 17820  002AC2  0E12               	movlw	18
 17821  002AC4  2418               	addwf	?i1___awdiv,w,c
 17822  002AC6  6E21               	movwf	?i1___wmul,c
 17823  002AC8  0E00               	movlw	0
 17824  002ACA  2019               	addwfc	?i1___awdiv+1,w,c
 17825  002ACC  6E22               	movwf	?i1___wmul+1,c
 17826  002ACE  EC63  F032         	call	i1___wmul	;wreg free
 17827  002AD2  0E28               	movlw	low __npowers_
 17828  002AD4  2421               	addwf	?i1___wmul,w,c
 17829  002AD6  6EF6               	movwf	tblptrl,c
 17830  002AD8  0E08               	movlw	high __npowers_
 17831  002ADA  2022               	addwfc	?i1___wmul+1,w,c
 17832  002ADC  6EF7               	movwf	tblptrh,c
 17833  002ADE  0009               	tblrd		*+
 17834  002AE0  CFF5 F063          	movff	tablat,??i1_scale+3
 17835  002AE4  0009               	tblrd		*+
 17836  002AE6  CFF5 F064          	movff	tablat,??i1_scale+4
 17837  002AEA  0009               	tblrd		*+
 17838  002AEC  CFF5 F065          	movff	tablat,??i1_scale+5
 17839  002AF0  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 17840  002AF4  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 17841  002AF8  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 17842  002AFC  ECBA  F025         	call	i1___ftmul	;wreg free
 17843  002B00  C038  F068         	movff	?i1___ftmul+2,i1_scale$2021+2
 17844  002B04  C037  F067         	movff	?i1___ftmul+1,i1_scale$2021+1
 17845  002B08  C036  F066         	movff	?i1___ftmul,i1_scale$2021
 17846                           
 17847                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17848  002B0C  C066  F036         	movff	i1_scale$2021,?i1___ftmul
 17849  002B10  C067  F037         	movff	i1_scale$2021+1,?i1___ftmul+1
 17850  002B14  C068  F038         	movff	i1_scale$2021+2,?i1___ftmul+2
 17851  002B18  0E00               	movlw	0
 17852  002B1A  6E24               	movwf	?i1___wmul+3,c
 17853  002B1C  0E03               	movlw	3
 17854  002B1E  6E23               	movwf	?i1___wmul+2,c
 17855  002B20  0E00               	movlw	0
 17856  002B22  6E14               	movwf	?i1___awmod+3,c
 17857  002B24  0E0A               	movlw	10
 17858  002B26  6E13               	movwf	?i1___awmod+2,c
 17859  002B28  5047               	movf	i1scale@scl,w,c
 17860  002B2A  6E11               	movwf	?i1___awmod,c
 17861  002B2C  6A12               	clrf	?i1___awmod+1,c
 17862  002B2E  BE11               	btfsc	?i1___awmod,7,c
 17863  002B30  0612               	decf	?i1___awmod+1,f,c
 17864  002B32  EC7A  F02E         	call	i1___awmod	;wreg free
 17865  002B36  C011  F021         	movff	?i1___awmod,?i1___wmul
 17866  002B3A  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17867  002B3E  EC63  F032         	call	i1___wmul	;wreg free
 17868  002B42  0E28               	movlw	low __npowers_
 17869  002B44  2421               	addwf	?i1___wmul,w,c
 17870  002B46  6EF6               	movwf	tblptrl,c
 17871  002B48  0E08               	movlw	high __npowers_
 17872  002B4A  2022               	addwfc	?i1___wmul+1,w,c
 17873  002B4C  6EF7               	movwf	tblptrh,c
 17874  002B4E  0009               	tblrd		*+
 17875  002B50  CFF5 F060          	movff	tablat,??i1_scale
 17876  002B54  0009               	tblrd		*+
 17877  002B56  CFF5 F061          	movff	tablat,??i1_scale+1
 17878  002B5A  0009               	tblrd		*+
 17879  002B5C  CFF5 F062          	movff	tablat,??i1_scale+2
 17880  002B60  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 17881  002B64  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 17882  002B68  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 17883  002B6C  ECBA  F025         	call	i1___ftmul	;wreg free
 17884  002B70  D164               	goto	L28
 17885  002B72                     i1l11726:
 17886                           
 17887                           ;doprnt.c: 432: else if(scl > 10)
 17888  002B72  5047               	movf	i1scale@scl,w,c
 17889  002B74  0A80               	xorlw	128
 17890  002B76  0F75               	addlw	-139
 17891  002B78  A0D8               	btfss	status,0,c
 17892  002B7A  D059               	goto	i1l11732
 17893                           
 17894                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 17895  002B7C  0E00               	movlw	0
 17896  002B7E  6E24               	movwf	?i1___wmul+3,c
 17897  002B80  0E03               	movlw	3
 17898  002B82  6E23               	movwf	?i1___wmul+2,c
 17899  002B84  0E00               	movlw	0
 17900  002B86  6E1B               	movwf	?i1___awdiv+3,c
 17901  002B88  0E0A               	movlw	10
 17902  002B8A  6E1A               	movwf	?i1___awdiv+2,c
 17903  002B8C  5047               	movf	i1scale@scl,w,c
 17904  002B8E  6E18               	movwf	?i1___awdiv,c
 17905  002B90  6A19               	clrf	?i1___awdiv+1,c
 17906  002B92  BE18               	btfsc	?i1___awdiv,7,c
 17907  002B94  0619               	decf	?i1___awdiv+1,f,c
 17908  002B96  EC66  F02C         	call	i1___awdiv	;wreg free
 17909  002B9A  0E09               	movlw	9
 17910  002B9C  2418               	addwf	?i1___awdiv,w,c
 17911  002B9E  6E21               	movwf	?i1___wmul,c
 17912  002BA0  0E00               	movlw	0
 17913  002BA2  2019               	addwfc	?i1___awdiv+1,w,c
 17914  002BA4  6E22               	movwf	?i1___wmul+1,c
 17915  002BA6  EC63  F032         	call	i1___wmul	;wreg free
 17916  002BAA  0E28               	movlw	low __npowers_
 17917  002BAC  2421               	addwf	?i1___wmul,w,c
 17918  002BAE  6EF6               	movwf	tblptrl,c
 17919  002BB0  0E08               	movlw	high __npowers_
 17920  002BB2  2022               	addwfc	?i1___wmul+1,w,c
 17921  002BB4  6EF7               	movwf	tblptrh,c
 17922  002BB6  0009               	tblrd		*+
 17923  002BB8  CFF5 F060          	movff	tablat,??i1_scale
 17924  002BBC  0009               	tblrd		*+
 17925  002BBE  CFF5 F061          	movff	tablat,??i1_scale+1
 17926  002BC2  0009               	tblrd		*+
 17927  002BC4  CFF5 F062          	movff	tablat,??i1_scale+2
 17928  002BC8  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 17929  002BCC  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 17930  002BD0  C060  F036         	movff	??i1_scale,?i1___ftmul
 17931  002BD4  0E00               	movlw	0
 17932  002BD6  6E24               	movwf	?i1___wmul+3,c
 17933  002BD8  0E03               	movlw	3
 17934  002BDA  6E23               	movwf	?i1___wmul+2,c
 17935  002BDC  0E00               	movlw	0
 17936  002BDE  6E14               	movwf	?i1___awmod+3,c
 17937  002BE0  0E0A               	movlw	10
 17938  002BE2  6E13               	movwf	?i1___awmod+2,c
 17939  002BE4  5047               	movf	i1scale@scl,w,c
 17940  002BE6  6E11               	movwf	?i1___awmod,c
 17941  002BE8  6A12               	clrf	?i1___awmod+1,c
 17942  002BEA  BE11               	btfsc	?i1___awmod,7,c
 17943  002BEC  0612               	decf	?i1___awmod+1,f,c
 17944  002BEE  EC7A  F02E         	call	i1___awmod	;wreg free
 17945  002BF2  C011  F021         	movff	?i1___awmod,?i1___wmul
 17946  002BF6  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17947  002BFA  EC63  F032         	call	i1___wmul	;wreg free
 17948  002BFE  0E28               	movlw	low __npowers_
 17949  002C00  2421               	addwf	?i1___wmul,w,c
 17950  002C02  6EF6               	movwf	tblptrl,c
 17951  002C04  0E08               	movlw	high __npowers_
 17952  002C06  2022               	addwfc	?i1___wmul+1,w,c
 17953  002C08  6EF7               	movwf	tblptrh,c
 17954  002C0A  0009               	tblrd		*+
 17955  002C0C  CFF5 F063          	movff	tablat,??i1_scale+3
 17956  002C10  0009               	tblrd		*+
 17957  002C12  CFF5 F064          	movff	tablat,??i1_scale+4
 17958  002C16  0009               	tblrd		*+
 17959  002C18  CFF5 F065          	movff	tablat,??i1_scale+5
 17960  002C1C  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 17961  002C20  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 17962  002C24  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 17963  002C28  ECBA  F025         	call	i1___ftmul	;wreg free
 17964  002C2C  D106               	goto	L28
 17965  002C2E                     i1l11732:
 17966                           
 17967                           ;doprnt.c: 434: return _npowers_[scl];
 17968  002C2E  5047               	movf	i1scale@scl,w,c
 17969  002C30  0D03               	mullw	3
 17970  002C32  0E28               	movlw	low __npowers_
 17971  002C34  24F3               	addwf	prodl,w,c
 17972  002C36  6EF6               	movwf	tblptrl,c
 17973  002C38  0E08               	movlw	high __npowers_
 17974  002C3A  D10C               	goto	L27
 17975  002C3C                     i1l11736:
 17976                           
 17977                           ;doprnt.c: 435: }
 17978                           ;doprnt.c: 436: if(scl>=110)
 17979  002C3C  5047               	movf	i1scale@scl,w,c
 17980  002C3E  0A80               	xorlw	128
 17981  002C40  0F12               	addlw	-238
 17982  002C42  A0D8               	btfss	status,0,c
 17983  002C44  D09D               	goto	i1l11744
 17984                           
 17985                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 17986  002C46  0E00               	movlw	0
 17987  002C48  6E24               	movwf	?i1___wmul+3,c
 17988  002C4A  0E03               	movlw	3
 17989  002C4C  6E23               	movwf	?i1___wmul+2,c
 17990  002C4E  0E00               	movlw	0
 17991  002C50  6E1B               	movwf	?i1___awdiv+3,c
 17992  002C52  0E0A               	movlw	10
 17993  002C54  6E1A               	movwf	?i1___awdiv+2,c
 17994  002C56  0E00               	movlw	0
 17995  002C58  6E14               	movwf	?i1___awmod+3,c
 17996  002C5A  0E64               	movlw	100
 17997  002C5C  6E13               	movwf	?i1___awmod+2,c
 17998  002C5E  5047               	movf	i1scale@scl,w,c
 17999  002C60  6E11               	movwf	?i1___awmod,c
 18000  002C62  6A12               	clrf	?i1___awmod+1,c
 18001  002C64  BE11               	btfsc	?i1___awmod,7,c
 18002  002C66  0612               	decf	?i1___awmod+1,f,c
 18003  002C68  EC7A  F02E         	call	i1___awmod	;wreg free
 18004  002C6C  C011  F018         	movff	?i1___awmod,?i1___awdiv
 18005  002C70  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 18006  002C74  EC66  F02C         	call	i1___awdiv	;wreg free
 18007  002C78  0E09               	movlw	9
 18008  002C7A  2418               	addwf	?i1___awdiv,w,c
 18009  002C7C  6E21               	movwf	?i1___wmul,c
 18010  002C7E  0E00               	movlw	0
 18011  002C80  2019               	addwfc	?i1___awdiv+1,w,c
 18012  002C82  6E22               	movwf	?i1___wmul+1,c
 18013  002C84  EC63  F032         	call	i1___wmul	;wreg free
 18014  002C88  0E4F               	movlw	low __powers_
 18015  002C8A  2421               	addwf	?i1___wmul,w,c
 18016  002C8C  6EF6               	movwf	tblptrl,c
 18017  002C8E  0E08               	movlw	high __powers_
 18018  002C90  2022               	addwfc	?i1___wmul+1,w,c
 18019  002C92  6EF7               	movwf	tblptrh,c
 18020  002C94  0009               	tblrd		*+
 18021  002C96  CFF5 F060          	movff	tablat,??i1_scale
 18022  002C9A  0009               	tblrd		*+
 18023  002C9C  CFF5 F061          	movff	tablat,??i1_scale+1
 18024  002CA0  0009               	tblrd		*+
 18025  002CA2  CFF5 F062          	movff	tablat,??i1_scale+2
 18026  002CA6  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 18027  002CAA  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 18028  002CAE  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 18029  002CB2  0E00               	movlw	0
 18030  002CB4  6E24               	movwf	?i1___wmul+3,c
 18031  002CB6  0E03               	movlw	3
 18032  002CB8  6E23               	movwf	?i1___wmul+2,c
 18033  002CBA  0E00               	movlw	0
 18034  002CBC  6E1B               	movwf	?i1___awdiv+3,c
 18035  002CBE  0E64               	movlw	100
 18036  002CC0  6E1A               	movwf	?i1___awdiv+2,c
 18037  002CC2  5047               	movf	i1scale@scl,w,c
 18038  002CC4  6E18               	movwf	?i1___awdiv,c
 18039  002CC6  6A19               	clrf	?i1___awdiv+1,c
 18040  002CC8  BE18               	btfsc	?i1___awdiv,7,c
 18041  002CCA  0619               	decf	?i1___awdiv+1,f,c
 18042  002CCC  EC66  F02C         	call	i1___awdiv	;wreg free
 18043  002CD0  0E12               	movlw	18
 18044  002CD2  2418               	addwf	?i1___awdiv,w,c
 18045  002CD4  6E21               	movwf	?i1___wmul,c
 18046  002CD6  0E00               	movlw	0
 18047  002CD8  2019               	addwfc	?i1___awdiv+1,w,c
 18048  002CDA  6E22               	movwf	?i1___wmul+1,c
 18049  002CDC  EC63  F032         	call	i1___wmul	;wreg free
 18050  002CE0  0E4F               	movlw	low __powers_
 18051  002CE2  2421               	addwf	?i1___wmul,w,c
 18052  002CE4  6EF6               	movwf	tblptrl,c
 18053  002CE6  0E08               	movlw	high __powers_
 18054  002CE8  2022               	addwfc	?i1___wmul+1,w,c
 18055  002CEA  6EF7               	movwf	tblptrh,c
 18056  002CEC  0009               	tblrd		*+
 18057  002CEE  CFF5 F063          	movff	tablat,??i1_scale+3
 18058  002CF2  0009               	tblrd		*+
 18059  002CF4  CFF5 F064          	movff	tablat,??i1_scale+4
 18060  002CF8  0009               	tblrd		*+
 18061  002CFA  CFF5 F065          	movff	tablat,??i1_scale+5
 18062  002CFE  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 18063  002D02  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 18064  002D06  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 18065  002D0A  ECBA  F025         	call	i1___ftmul	;wreg free
 18066  002D0E  C038  F068         	movff	?i1___ftmul+2,i1_scale$2021+2
 18067  002D12  C037  F067         	movff	?i1___ftmul+1,i1_scale$2021+1
 18068  002D16  C036  F066         	movff	?i1___ftmul,i1_scale$2021
 18069                           
 18070                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 18071  002D1A  C066  F036         	movff	i1_scale$2021,?i1___ftmul
 18072  002D1E  C067  F037         	movff	i1_scale$2021+1,?i1___ftmul+1
 18073  002D22  C068  F038         	movff	i1_scale$2021+2,?i1___ftmul+2
 18074  002D26  0E00               	movlw	0
 18075  002D28  6E24               	movwf	?i1___wmul+3,c
 18076  002D2A  0E03               	movlw	3
 18077  002D2C  6E23               	movwf	?i1___wmul+2,c
 18078  002D2E  0E00               	movlw	0
 18079  002D30  6E14               	movwf	?i1___awmod+3,c
 18080  002D32  0E0A               	movlw	10
 18081  002D34  6E13               	movwf	?i1___awmod+2,c
 18082  002D36  5047               	movf	i1scale@scl,w,c
 18083  002D38  6E11               	movwf	?i1___awmod,c
 18084  002D3A  6A12               	clrf	?i1___awmod+1,c
 18085  002D3C  BE11               	btfsc	?i1___awmod,7,c
 18086  002D3E  0612               	decf	?i1___awmod+1,f,c
 18087  002D40  EC7A  F02E         	call	i1___awmod	;wreg free
 18088  002D44  C011  F021         	movff	?i1___awmod,?i1___wmul
 18089  002D48  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 18090  002D4C  EC63  F032         	call	i1___wmul	;wreg free
 18091  002D50  0E4F               	movlw	low __powers_
 18092  002D52  2421               	addwf	?i1___wmul,w,c
 18093  002D54  6EF6               	movwf	tblptrl,c
 18094  002D56  0E08               	movlw	high __powers_
 18095  002D58  2022               	addwfc	?i1___wmul+1,w,c
 18096  002D5A  6EF7               	movwf	tblptrh,c
 18097  002D5C  0009               	tblrd		*+
 18098  002D5E  CFF5 F060          	movff	tablat,??i1_scale
 18099  002D62  0009               	tblrd		*+
 18100  002D64  CFF5 F061          	movff	tablat,??i1_scale+1
 18101  002D68  0009               	tblrd		*+
 18102  002D6A  CFF5 F062          	movff	tablat,??i1_scale+2
 18103  002D6E  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 18104  002D72  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 18105  002D76  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 18106  002D7A  ECBA  F025         	call	i1___ftmul	;wreg free
 18107  002D7E  D05D               	goto	L28
 18108  002D80                     i1l11744:
 18109                           
 18110                           ;doprnt.c: 438: else if(scl > 10)
 18111  002D80  5047               	movf	i1scale@scl,w,c
 18112  002D82  0A80               	xorlw	128
 18113  002D84  0F75               	addlw	-139
 18114  002D86  A0D8               	btfss	status,0,c
 18115  002D88  D05F               	goto	i1l11750
 18116                           
 18117                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 18118  002D8A  0E00               	movlw	0
 18119  002D8C  6E24               	movwf	?i1___wmul+3,c
 18120  002D8E  0E03               	movlw	3
 18121  002D90  6E23               	movwf	?i1___wmul+2,c
 18122  002D92  0E00               	movlw	0
 18123  002D94  6E1B               	movwf	?i1___awdiv+3,c
 18124  002D96  0E0A               	movlw	10
 18125  002D98  6E1A               	movwf	?i1___awdiv+2,c
 18126  002D9A  5047               	movf	i1scale@scl,w,c
 18127  002D9C  6E18               	movwf	?i1___awdiv,c
 18128  002D9E  6A19               	clrf	?i1___awdiv+1,c
 18129  002DA0  BE18               	btfsc	?i1___awdiv,7,c
 18130  002DA2  0619               	decf	?i1___awdiv+1,f,c
 18131  002DA4  EC66  F02C         	call	i1___awdiv	;wreg free
 18132  002DA8  0E09               	movlw	9
 18133  002DAA  2418               	addwf	?i1___awdiv,w,c
 18134  002DAC  6E21               	movwf	?i1___wmul,c
 18135  002DAE  0E00               	movlw	0
 18136  002DB0  2019               	addwfc	?i1___awdiv+1,w,c
 18137  002DB2  6E22               	movwf	?i1___wmul+1,c
 18138  002DB4  EC63  F032         	call	i1___wmul	;wreg free
 18139  002DB8  0E4F               	movlw	low __powers_
 18140  002DBA  2421               	addwf	?i1___wmul,w,c
 18141  002DBC  6EF6               	movwf	tblptrl,c
 18142  002DBE  0E08               	movlw	high __powers_
 18143  002DC0  2022               	addwfc	?i1___wmul+1,w,c
 18144  002DC2  6EF7               	movwf	tblptrh,c
 18145  002DC4  0009               	tblrd		*+
 18146  002DC6  CFF5 F060          	movff	tablat,??i1_scale
 18147  002DCA  0009               	tblrd		*+
 18148  002DCC  CFF5 F061          	movff	tablat,??i1_scale+1
 18149  002DD0  0009               	tblrd		*+
 18150  002DD2  CFF5 F062          	movff	tablat,??i1_scale+2
 18151  002DD6  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 18152  002DDA  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 18153  002DDE  C060  F036         	movff	??i1_scale,?i1___ftmul
 18154  002DE2  0E00               	movlw	0
 18155  002DE4  6E24               	movwf	?i1___wmul+3,c
 18156  002DE6  0E03               	movlw	3
 18157  002DE8  6E23               	movwf	?i1___wmul+2,c
 18158  002DEA  0E00               	movlw	0
 18159  002DEC  6E14               	movwf	?i1___awmod+3,c
 18160  002DEE  0E0A               	movlw	10
 18161  002DF0  6E13               	movwf	?i1___awmod+2,c
 18162  002DF2  5047               	movf	i1scale@scl,w,c
 18163  002DF4  6E11               	movwf	?i1___awmod,c
 18164  002DF6  6A12               	clrf	?i1___awmod+1,c
 18165  002DF8  BE11               	btfsc	?i1___awmod,7,c
 18166  002DFA  0612               	decf	?i1___awmod+1,f,c
 18167  002DFC  EC7A  F02E         	call	i1___awmod	;wreg free
 18168  002E00  C011  F021         	movff	?i1___awmod,?i1___wmul
 18169  002E04  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 18170  002E08  EC63  F032         	call	i1___wmul	;wreg free
 18171  002E0C  0E4F               	movlw	low __powers_
 18172  002E0E  2421               	addwf	?i1___wmul,w,c
 18173  002E10  6EF6               	movwf	tblptrl,c
 18174  002E12  0E08               	movlw	high __powers_
 18175  002E14  2022               	addwfc	?i1___wmul+1,w,c
 18176  002E16  6EF7               	movwf	tblptrh,c
 18177  002E18  0009               	tblrd		*+
 18178  002E1A  CFF5 F063          	movff	tablat,??i1_scale+3
 18179  002E1E  0009               	tblrd		*+
 18180  002E20  CFF5 F064          	movff	tablat,??i1_scale+4
 18181  002E24  0009               	tblrd		*+
 18182  002E26  CFF5 F065          	movff	tablat,??i1_scale+5
 18183  002E2A  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 18184  002E2E  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 18185  002E32  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 18186  002E36  ECBA  F025         	call	i1___ftmul	;wreg free
 18187  002E3A                     L28:
 18188  002E3A  C038  F049         	movff	?i1___ftmul+2,?i1_scale+2
 18189  002E3E  C037  F048         	movff	?i1___ftmul+1,?i1_scale+1
 18190  002E42  C036  F047         	movff	?i1___ftmul,?i1_scale
 18191  002E46  D017               	goto	i1l296
 18192  002E48                     i1l11750:
 18193                           
 18194                           ;doprnt.c: 440: return _powers_[scl];
 18195  002E48  5047               	movf	i1scale@scl,w,c
 18196  002E4A  0D03               	mullw	3
 18197  002E4C  0E4F               	movlw	low __powers_
 18198  002E4E  24F3               	addwf	prodl,w,c
 18199  002E50  6EF6               	movwf	tblptrl,c
 18200  002E52  0E08               	movlw	high __powers_
 18201  002E54                     L27:
 18202  002E54  20F4               	addwfc	prodh,w,c
 18203  002E56  6EF7               	movwf	tblptrh,c
 18204  002E58  0009               	tblrd		*+
 18205  002E5A  CFF5 F060          	movff	tablat,??i1_scale
 18206  002E5E  0009               	tblrd		*+
 18207  002E60  CFF5 F061          	movff	tablat,??i1_scale+1
 18208  002E64  0009               	tblrd		*+
 18209  002E66  CFF5 F062          	movff	tablat,??i1_scale+2
 18210  002E6A  C062  F049         	movff	??i1_scale+2,?i1_scale+2
 18211  002E6E  C061  F048         	movff	??i1_scale+1,?i1_scale+1
 18212  002E72  C060  F047         	movff	??i1_scale,?i1_scale
 18213  002E76                     i1l296:
 18214  002E76  0012               	return	
 18215  002E78                     __end_ofi1_scale:
 18216                           	opt stack 0
 18217                           pclatu	equ	0xFFB
 18218                           pclath	equ	0xFFA
 18219                           tblptru	equ	0xFF8
 18220                           tblptrh	equ	0xFF7
 18221                           tblptrl	equ	0xFF6
 18222                           tablat	equ	0xFF5
 18223                           prodh	equ	0xFF4
 18224                           prodl	equ	0xFF3
 18225                           intcon	equ	0xFF2
 18226                           postinc0	equ	0xFEE
 18227                           fsr0h	equ	0xFEA
 18228                           fsr0l	equ	0xFE9
 18229                           wreg	equ	0xFE8
 18230                           postdec1	equ	0xFE5
 18231                           fsr1h	equ	0xFE2
 18232                           fsr1l	equ	0xFE1
 18233                           bsr	equ	0xFE0
 18234                           indf2	equ	0xFDF
 18235                           postinc2	equ	0xFDE
 18236                           postdec2	equ	0xFDD
 18237                           fsr2h	equ	0xFDA
 18238                           fsr2l	equ	0xFD9
 18239                           status	equ	0xFD8
 18240                           
 18241 ;; *************** function i1___wmul *****************
 18242 ;; Defined at:
 18243 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
 18244 ;; Parameters:    Size  Location     Type
 18245 ;;  __wmul          2   32[COMRAM] unsigned int 
 18246 ;;  __wmul          2   34[COMRAM] unsigned int 
 18247 ;; Auto vars:     Size  Location     Type
 18248 ;;  __wmul          2   36[COMRAM] unsigned int 
 18249 ;; Return value:  Size  Location     Type
 18250 ;;                  2   32[COMRAM] unsigned int 
 18251 ;; Registers used:
 18252 ;;		wreg, status,2, status,0, prodl, prodh
 18253 ;; Tracked objects:
 18254 ;;		On entry : 0/0
 18255 ;;		On exit  : 0/0
 18256 ;;		Unchanged: 0/0
 18257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18258 ;;      Params:         4       0       0       0       0       0       0       0       0
 18259 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18260 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18261 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18262 ;;Total ram usage:        6 bytes
 18263 ;; Hardware stack levels used:    1
 18264 ;; Hardware stack levels required when called:    3
 18265 ;; This function calls:
 18266 ;;		Nothing
 18267 ;; This function is called by:
 18268 ;;		i1_fround
 18269 ;;		i1_scale
 18270 ;;		i1_sprintf
 18271 ;; This function uses a non-reentrant model
 18272 ;;
 18273                           
 18274                           	psect	text74
 18275  0064C6                     __ptext74:
 18276                           	opt stack 0
 18277  0064C6                     i1___wmul:
 18278                           	opt stack 16
 18279                           
 18280                           ;incstack = 0
 18281                           ;incstack = 0
 18282  0064C6  5021               	movf	i1___wmul@multiplier,w,c
 18283  0064C8  0223               	mulwf	i1___wmul@multiplicand,c
 18284  0064CA  CFF3 F025          	movff	prodl,i1___wmul@product
 18285  0064CE  CFF4 F026          	movff	prodh,i1___wmul@product+1
 18286  0064D2  5021               	movf	i1___wmul@multiplier,w,c
 18287  0064D4  0224               	mulwf	i1___wmul@multiplicand+1,c
 18288  0064D6  CFF3 FFF4          	movff	prodl,prodh
 18289  0064DA  6AF3               	clrf	prodl,c
 18290  0064DC  50F3               	movf	prodl,w,c
 18291  0064DE  2625               	addwf	i1___wmul@product,f,c
 18292  0064E0  50F4               	movf	prodh,w,c
 18293  0064E2  2226               	addwfc	i1___wmul@product+1,f,c
 18294  0064E4  5022               	movf	i1___wmul@multiplier+1,w,c
 18295  0064E6  0223               	mulwf	i1___wmul@multiplicand,c
 18296  0064E8  CFF3 FFF4          	movff	prodl,prodh
 18297  0064EC  6AF3               	clrf	prodl,c
 18298  0064EE  50F3               	movf	prodl,w,c
 18299  0064F0  2625               	addwf	i1___wmul@product,f,c
 18300  0064F2  50F4               	movf	prodh,w,c
 18301  0064F4  2226               	addwfc	i1___wmul@product+1,f,c
 18302  0064F6  C025  F021         	movff	i1___wmul@product,?i1___wmul
 18303  0064FA  C026  F022         	movff	i1___wmul@product+1,?i1___wmul+1
 18304  0064FE  0012               	return	
 18305  006500                     __end_ofi1___wmul:
 18306                           	opt stack 0
 18307                           pclatu	equ	0xFFB
 18308                           pclath	equ	0xFFA
 18309                           tblptru	equ	0xFF8
 18310                           tblptrh	equ	0xFF7
 18311                           tblptrl	equ	0xFF6
 18312                           tablat	equ	0xFF5
 18313                           prodh	equ	0xFF4
 18314                           prodl	equ	0xFF3
 18315                           intcon	equ	0xFF2
 18316                           postinc0	equ	0xFEE
 18317                           fsr0h	equ	0xFEA
 18318                           fsr0l	equ	0xFE9
 18319                           wreg	equ	0xFE8
 18320                           postdec1	equ	0xFE5
 18321                           fsr1h	equ	0xFE2
 18322                           fsr1l	equ	0xFE1
 18323                           bsr	equ	0xFE0
 18324                           indf2	equ	0xFDF
 18325                           postinc2	equ	0xFDE
 18326                           postdec2	equ	0xFDD
 18327                           fsr2h	equ	0xFDA
 18328                           fsr2l	equ	0xFD9
 18329                           status	equ	0xFD8
 18330                           
 18331 ;; *************** function i1___awmod *****************
 18332 ;; Defined at:
 18333 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
 18334 ;; Parameters:    Size  Location     Type
 18335 ;;  __awmod         2   16[COMRAM] int 
 18336 ;;  __awmod         2   18[COMRAM] int 
 18337 ;; Auto vars:     Size  Location     Type
 18338 ;;  __awmod         1   22[COMRAM] unsigned char 
 18339 ;;  __awmod         1   21[COMRAM] unsigned char 
 18340 ;; Return value:  Size  Location     Type
 18341 ;;                  2   16[COMRAM] int 
 18342 ;; Registers used:
 18343 ;;		wreg, status,2, status,0
 18344 ;; Tracked objects:
 18345 ;;		On entry : 0/0
 18346 ;;		On exit  : 0/0
 18347 ;;		Unchanged: 0/0
 18348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18349 ;;      Params:         4       0       0       0       0       0       0       0       0
 18350 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18351 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18352 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18353 ;;Total ram usage:        7 bytes
 18354 ;; Hardware stack levels used:    1
 18355 ;; Hardware stack levels required when called:    3
 18356 ;; This function calls:
 18357 ;;		Nothing
 18358 ;; This function is called by:
 18359 ;;		i1_fround
 18360 ;;		i1_scale
 18361 ;; This function uses a non-reentrant model
 18362 ;;
 18363                           
 18364                           	psect	text75
 18365  005CF4                     __ptext75:
 18366                           	opt stack 0
 18367  005CF4                     i1___awmod:
 18368                           	opt stack 15
 18369                           
 18370                           ;incstack = 0
 18371                           ;incstack = 0
 18372  005CF4  6E15               	movwf	??i1___awmod& (0+255),c
 18373  005CF6  0E00               	movlw	0
 18374  005CF8  6E17               	movwf	i1___awmod@sign,c
 18375  005CFA  5015               	movf	??i1___awmod& (0+255),w,c
 18376  005CFC  AE12               	btfss	i1___awmod@dividend+1,7,c
 18377  005CFE  D008               	goto	i1l9600
 18378  005D00  6C11               	negf	i1___awmod@dividend,c
 18379  005D02  1E12               	comf	i1___awmod@dividend+1,f,c
 18380  005D04  B0D8               	btfsc	status,0,c
 18381  005D06  2A12               	incf	i1___awmod@dividend+1,f,c
 18382  005D08  6E15               	movwf	??i1___awmod& (0+255),c
 18383  005D0A  0E01               	movlw	1
 18384  005D0C  6E17               	movwf	i1___awmod@sign,c
 18385  005D0E  5015               	movf	??i1___awmod& (0+255),w,c
 18386  005D10                     i1l9600:
 18387  005D10  AE14               	btfss	i1___awmod@divisor+1,7,c
 18388  005D12  D004               	goto	i1l9604
 18389  005D14  6C13               	negf	i1___awmod@divisor,c
 18390  005D16  1E14               	comf	i1___awmod@divisor+1,f,c
 18391  005D18  B0D8               	btfsc	status,0,c
 18392  005D1A  2A14               	incf	i1___awmod@divisor+1,f,c
 18393  005D1C                     i1l9604:
 18394  005D1C  5014               	movf	i1___awmod@divisor+1,w,c
 18395  005D1E  1013               	iorwf	i1___awmod@divisor,w,c
 18396  005D20  B4D8               	btfsc	status,2,c
 18397  005D22  D01A               	goto	i1l9620
 18398  005D24  6E15               	movwf	??i1___awmod& (0+255),c
 18399  005D26  0E01               	movlw	1
 18400  005D28  6E16               	movwf	i1___awmod@counter,c
 18401  005D2A  5015               	movf	??i1___awmod& (0+255),w,c
 18402  005D2C  D004               	goto	i1l9610
 18403  005D2E                     i1l9608:
 18404  005D2E  90D8               	bcf	status,0,c
 18405  005D30  3613               	rlcf	i1___awmod@divisor,f,c
 18406  005D32  3614               	rlcf	i1___awmod@divisor+1,f,c
 18407  005D34  2A16               	incf	i1___awmod@counter,f,c
 18408  005D36                     i1l9610:
 18409  005D36  AE14               	btfss	i1___awmod@divisor+1,7,c
 18410  005D38  D7FA               	goto	i1l9608
 18411  005D3A                     i1l9612:
 18412  005D3A  5013               	movf	i1___awmod@divisor,w,c
 18413  005D3C  5C11               	subwf	i1___awmod@dividend,w,c
 18414  005D3E  5014               	movf	i1___awmod@divisor+1,w,c
 18415  005D40  5812               	subwfb	i1___awmod@dividend+1,w,c
 18416  005D42  A0D8               	btfss	status,0,c
 18417  005D44  D004               	goto	i1l9616
 18418  005D46  5013               	movf	i1___awmod@divisor,w,c
 18419  005D48  5E11               	subwf	i1___awmod@dividend,f,c
 18420  005D4A  5014               	movf	i1___awmod@divisor+1,w,c
 18421  005D4C  5A12               	subwfb	i1___awmod@dividend+1,f,c
 18422  005D4E                     i1l9616:
 18423  005D4E  90D8               	bcf	status,0,c
 18424  005D50  3214               	rrcf	i1___awmod@divisor+1,f,c
 18425  005D52  3213               	rrcf	i1___awmod@divisor,f,c
 18426  005D54  2E16               	decfsz	i1___awmod@counter,f,c
 18427  005D56  D7F1               	goto	i1l9612
 18428  005D58                     i1l9620:
 18429  005D58  5017               	movf	i1___awmod@sign,w,c
 18430  005D5A  B4D8               	btfsc	status,2,c
 18431  005D5C  D004               	goto	i1l9624
 18432  005D5E  6C11               	negf	i1___awmod@dividend,c
 18433  005D60  1E12               	comf	i1___awmod@dividend+1,f,c
 18434  005D62  B0D8               	btfsc	status,0,c
 18435  005D64  2A12               	incf	i1___awmod@dividend+1,f,c
 18436  005D66                     i1l9624:
 18437  005D66  C011  F011         	movff	i1___awmod@dividend,?i1___awmod
 18438  005D6A  C012  F012         	movff	i1___awmod@dividend+1,?i1___awmod+1
 18439  005D6E  0012               	return	
 18440  005D70                     __end_ofi1___awmod:
 18441                           	opt stack 0
 18442                           pclatu	equ	0xFFB
 18443                           pclath	equ	0xFFA
 18444                           tblptru	equ	0xFF8
 18445                           tblptrh	equ	0xFF7
 18446                           tblptrl	equ	0xFF6
 18447                           tablat	equ	0xFF5
 18448                           prodh	equ	0xFF4
 18449                           prodl	equ	0xFF3
 18450                           intcon	equ	0xFF2
 18451                           postinc0	equ	0xFEE
 18452                           fsr0h	equ	0xFEA
 18453                           fsr0l	equ	0xFE9
 18454                           wreg	equ	0xFE8
 18455                           postdec1	equ	0xFE5
 18456                           fsr1h	equ	0xFE2
 18457                           fsr1l	equ	0xFE1
 18458                           bsr	equ	0xFE0
 18459                           indf2	equ	0xFDF
 18460                           postinc2	equ	0xFDE
 18461                           postdec2	equ	0xFDD
 18462                           fsr2h	equ	0xFDA
 18463                           fsr2l	equ	0xFD9
 18464                           status	equ	0xFD8
 18465                           
 18466 ;; *************** function i1___awdiv *****************
 18467 ;; Defined at:
 18468 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
 18469 ;; Parameters:    Size  Location     Type
 18470 ;;  __awdiv         2   23[COMRAM] int 
 18471 ;;  __awdiv         2   25[COMRAM] int 
 18472 ;; Auto vars:     Size  Location     Type
 18473 ;;  __awdiv         2   30[COMRAM] int 
 18474 ;;  __awdiv         1   29[COMRAM] unsigned char 
 18475 ;;  __awdiv         1   28[COMRAM] unsigned char 
 18476 ;; Return value:  Size  Location     Type
 18477 ;;                  2   23[COMRAM] int 
 18478 ;; Registers used:
 18479 ;;		wreg, status,2, status,0
 18480 ;; Tracked objects:
 18481 ;;		On entry : 0/0
 18482 ;;		On exit  : 0/0
 18483 ;;		Unchanged: 0/0
 18484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18485 ;;      Params:         4       0       0       0       0       0       0       0       0
 18486 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18487 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18488 ;;      Totals:         9       0       0       0       0       0       0       0       0
 18489 ;;Total ram usage:        9 bytes
 18490 ;; Hardware stack levels used:    1
 18491 ;; Hardware stack levels required when called:    3
 18492 ;; This function calls:
 18493 ;;		Nothing
 18494 ;; This function is called by:
 18495 ;;		i1_fround
 18496 ;;		i1_scale
 18497 ;;		i1_sprintf
 18498 ;; This function uses a non-reentrant model
 18499 ;;
 18500                           
 18501                           	psect	text76
 18502  0058CC                     __ptext76:
 18503                           	opt stack 0
 18504  0058CC                     i1___awdiv:
 18505                           	opt stack 16
 18506                           
 18507                           ;incstack = 0
 18508                           ;incstack = 0
 18509  0058CC  6E1C               	movwf	??i1___awdiv& (0+255),c
 18510  0058CE  0E00               	movlw	0
 18511  0058D0  6E1E               	movwf	i1___awdiv@sign,c
 18512  0058D2  501C               	movf	??i1___awdiv& (0+255),w,c
 18513  0058D4  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 18514  0058D6  D008               	goto	i1l9556
 18515  0058D8  6C1A               	negf	i1___awdiv@divisor,c
 18516  0058DA  1E1B               	comf	i1___awdiv@divisor+1,f,c
 18517  0058DC  B0D8               	btfsc	status,0,c
 18518  0058DE  2A1B               	incf	i1___awdiv@divisor+1,f,c
 18519  0058E0  6E1C               	movwf	??i1___awdiv& (0+255),c
 18520  0058E2  0E01               	movlw	1
 18521  0058E4  6E1E               	movwf	i1___awdiv@sign,c
 18522  0058E6  501C               	movf	??i1___awdiv& (0+255),w,c
 18523  0058E8                     i1l9556:
 18524  0058E8  AE19               	btfss	i1___awdiv@dividend+1,7,c
 18525  0058EA  D006               	goto	i1l9562
 18526  0058EC  6C18               	negf	i1___awdiv@dividend,c
 18527  0058EE  1E19               	comf	i1___awdiv@dividend+1,f,c
 18528  0058F0  B0D8               	btfsc	status,0,c
 18529  0058F2  2A19               	incf	i1___awdiv@dividend+1,f,c
 18530  0058F4  0E01               	movlw	1
 18531  0058F6  1A1E               	xorwf	i1___awdiv@sign,f,c
 18532  0058F8                     i1l9562:
 18533  0058F8  0E00               	movlw	0
 18534  0058FA  6E20               	movwf	i1___awdiv@quotient+1,c
 18535  0058FC  0E00               	movlw	0
 18536  0058FE  6E1F               	movwf	i1___awdiv@quotient,c
 18537  005900  501B               	movf	i1___awdiv@divisor+1,w,c
 18538  005902  101A               	iorwf	i1___awdiv@divisor,w,c
 18539  005904  B4D8               	btfsc	status,2,c
 18540  005906  D01E               	goto	i1l9584
 18541  005908  6E1C               	movwf	??i1___awdiv& (0+255),c
 18542  00590A  0E01               	movlw	1
 18543  00590C  6E1D               	movwf	i1___awdiv@counter,c
 18544  00590E  501C               	movf	??i1___awdiv& (0+255),w,c
 18545  005910  D004               	goto	i1l9570
 18546  005912                     i1l9568:
 18547  005912  90D8               	bcf	status,0,c
 18548  005914  361A               	rlcf	i1___awdiv@divisor,f,c
 18549  005916  361B               	rlcf	i1___awdiv@divisor+1,f,c
 18550  005918  2A1D               	incf	i1___awdiv@counter,f,c
 18551  00591A                     i1l9570:
 18552  00591A  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 18553  00591C  D7FA               	goto	i1l9568
 18554  00591E                     i1l9572:
 18555  00591E  90D8               	bcf	status,0,c
 18556  005920  361F               	rlcf	i1___awdiv@quotient,f,c
 18557  005922  3620               	rlcf	i1___awdiv@quotient+1,f,c
 18558  005924  501A               	movf	i1___awdiv@divisor,w,c
 18559  005926  5C18               	subwf	i1___awdiv@dividend,w,c
 18560  005928  501B               	movf	i1___awdiv@divisor+1,w,c
 18561  00592A  5819               	subwfb	i1___awdiv@dividend+1,w,c
 18562  00592C  A0D8               	btfss	status,0,c
 18563  00592E  D005               	goto	i1l9580
 18564  005930  501A               	movf	i1___awdiv@divisor,w,c
 18565  005932  5E18               	subwf	i1___awdiv@dividend,f,c
 18566  005934  501B               	movf	i1___awdiv@divisor+1,w,c
 18567  005936  5A19               	subwfb	i1___awdiv@dividend+1,f,c
 18568  005938  801F               	bsf	i1___awdiv@quotient,0,c
 18569  00593A                     i1l9580:
 18570  00593A  90D8               	bcf	status,0,c
 18571  00593C  321B               	rrcf	i1___awdiv@divisor+1,f,c
 18572  00593E  321A               	rrcf	i1___awdiv@divisor,f,c
 18573  005940  2E1D               	decfsz	i1___awdiv@counter,f,c
 18574  005942  D7ED               	goto	i1l9572
 18575  005944                     i1l9584:
 18576  005944  501E               	movf	i1___awdiv@sign,w,c
 18577  005946  B4D8               	btfsc	status,2,c
 18578  005948  D004               	goto	i1l9588
 18579  00594A  6C1F               	negf	i1___awdiv@quotient,c
 18580  00594C  1E20               	comf	i1___awdiv@quotient+1,f,c
 18581  00594E  B0D8               	btfsc	status,0,c
 18582  005950  2A20               	incf	i1___awdiv@quotient+1,f,c
 18583  005952                     i1l9588:
 18584  005952  C01F  F018         	movff	i1___awdiv@quotient,?i1___awdiv
 18585  005956  C020  F019         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
 18586  00595A  0012               	return	
 18587  00595C                     __end_ofi1___awdiv:
 18588                           	opt stack 0
 18589                           pclatu	equ	0xFFB
 18590                           pclath	equ	0xFFA
 18591                           tblptru	equ	0xFF8
 18592                           tblptrh	equ	0xFF7
 18593                           tblptrl	equ	0xFF6
 18594                           tablat	equ	0xFF5
 18595                           prodh	equ	0xFF4
 18596                           prodl	equ	0xFF3
 18597                           intcon	equ	0xFF2
 18598                           postinc0	equ	0xFEE
 18599                           fsr0h	equ	0xFEA
 18600                           fsr0l	equ	0xFE9
 18601                           wreg	equ	0xFE8
 18602                           postdec1	equ	0xFE5
 18603                           fsr1h	equ	0xFE2
 18604                           fsr1l	equ	0xFE1
 18605                           bsr	equ	0xFE0
 18606                           indf2	equ	0xFDF
 18607                           postinc2	equ	0xFDE
 18608                           postdec2	equ	0xFDD
 18609                           fsr2h	equ	0xFDA
 18610                           fsr2l	equ	0xFD9
 18611                           status	equ	0xFD8
 18612                           
 18613 ;; *************** function i1_fround *****************
 18614 ;; Defined at:
 18615 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 18616 ;; Parameters:    Size  Location     Type
 18617 ;;  fround          1   70[COMRAM] unsigned char 
 18618 ;; Auto vars:     Size  Location     Type
 18619 ;;  fround          3    0        float 
 18620 ;;  fround          3    0        float 
 18621 ;;  fround          3    0        float 
 18622 ;; Return value:  Size  Location     Type
 18623 ;;                  3   70[COMRAM] float 
 18624 ;; Registers used:
 18625 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18626 ;; Tracked objects:
 18627 ;;		On entry : 0/0
 18628 ;;		On exit  : 0/0
 18629 ;;		Unchanged: 0/0
 18630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18631 ;;      Params:         3       0       0       0       0       0       0       0       0
 18632 ;;      Locals:         0       6       0       0       0       0       0       0       0
 18633 ;;      Temps:          0       6       0       0       0       0       0       0       0
 18634 ;;      Totals:         3      12       0       0       0       0       0       0       0
 18635 ;;Total ram usage:       15 bytes
 18636 ;; Hardware stack levels used:    1
 18637 ;; Hardware stack levels required when called:    5
 18638 ;; This function calls:
 18639 ;;		i1___awdiv
 18640 ;;		i1___awmod
 18641 ;;		i1___ftmul
 18642 ;;		i1___wmul
 18643 ;; This function is called by:
 18644 ;;		i1_sprintf
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           
 18648                           	psect	text77
 18649  003532                     __ptext77:
 18650                           	opt stack 0
 18651  003532                     i1_fround:
 18652                           	opt stack 14
 18653                           
 18654                           ;doprnt.c: 413: if(prec>=110)
 18655                           
 18656                           ;incstack = 0
 18657                           ;incstack = 0
 18658  003532  0E6D               	movlw	109
 18659  003534  6447               	cpfsgt	i1fround@prec,c
 18660  003536  D0AB               	goto	i1l11702
 18661                           
 18662                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18663  003538  0E00               	movlw	0
 18664  00353A  6E24               	movwf	?i1___wmul+3,c
 18665  00353C  0E03               	movlw	3
 18666  00353E  6E23               	movwf	?i1___wmul+2,c
 18667  003540  0E00               	movlw	0
 18668  003542  6E1B               	movwf	?i1___awdiv+3,c
 18669  003544  0E0A               	movlw	10
 18670  003546  6E1A               	movwf	?i1___awdiv+2,c
 18671  003548  0E00               	movlw	0
 18672  00354A  6E14               	movwf	?i1___awmod+3,c
 18673  00354C  0E64               	movlw	100
 18674  00354E  6E13               	movwf	?i1___awmod+2,c
 18675  003550  C047  F011         	movff	i1fround@prec,?i1___awmod
 18676  003554  6A12               	clrf	?i1___awmod+1,c
 18677  003556  EC7A  F02E         	call	i1___awmod	;wreg free
 18678  00355A  C011  F018         	movff	?i1___awmod,?i1___awdiv
 18679  00355E  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 18680  003562  EC66  F02C         	call	i1___awdiv	;wreg free
 18681  003566  0E09               	movlw	9
 18682  003568  2418               	addwf	?i1___awdiv,w,c
 18683  00356A  6E21               	movwf	?i1___wmul,c
 18684  00356C  0E00               	movlw	0
 18685  00356E  2019               	addwfc	?i1___awdiv+1,w,c
 18686  003570  6E22               	movwf	?i1___wmul+1,c
 18687  003572  EC63  F032         	call	i1___wmul	;wreg free
 18688  003576  0E28               	movlw	low __npowers_
 18689  003578  2421               	addwf	?i1___wmul,w,c
 18690  00357A  6EF6               	movwf	tblptrl,c
 18691  00357C  0E08               	movlw	high __npowers_
 18692  00357E  2022               	addwfc	?i1___wmul+1,w,c
 18693  003580  6EF7               	movwf	tblptrh,c
 18694  003582  0009               	tblrd		*+
 18695  003584  CFF5 F060          	movff	tablat,??i1_fround
 18696  003588  0009               	tblrd		*+
 18697  00358A  CFF5 F061          	movff	tablat,??i1_fround+1
 18698  00358E  0009               	tblrd		*+
 18699  003590  CFF5 F062          	movff	tablat,??i1_fround+2
 18700  003594  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 18701  003598  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 18702  00359C  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 18703  0035A0  0E00               	movlw	0
 18704  0035A2  6E24               	movwf	?i1___wmul+3,c
 18705  0035A4  0E03               	movlw	3
 18706  0035A6  6E23               	movwf	?i1___wmul+2,c
 18707  0035A8  0E00               	movlw	0
 18708  0035AA  6E1B               	movwf	?i1___awdiv+3,c
 18709  0035AC  0E64               	movlw	100
 18710  0035AE  6E1A               	movwf	?i1___awdiv+2,c
 18711  0035B0  C047  F018         	movff	i1fround@prec,?i1___awdiv
 18712  0035B4  6A19               	clrf	?i1___awdiv+1,c
 18713  0035B6  EC66  F02C         	call	i1___awdiv	;wreg free
 18714  0035BA  0E12               	movlw	18
 18715  0035BC  2418               	addwf	?i1___awdiv,w,c
 18716  0035BE  6E21               	movwf	?i1___wmul,c
 18717  0035C0  0E00               	movlw	0
 18718  0035C2  2019               	addwfc	?i1___awdiv+1,w,c
 18719  0035C4  6E22               	movwf	?i1___wmul+1,c
 18720  0035C6  EC63  F032         	call	i1___wmul	;wreg free
 18721  0035CA  0E28               	movlw	low __npowers_
 18722  0035CC  2421               	addwf	?i1___wmul,w,c
 18723  0035CE  6EF6               	movwf	tblptrl,c
 18724  0035D0  0E08               	movlw	high __npowers_
 18725  0035D2  2022               	addwfc	?i1___wmul+1,w,c
 18726  0035D4  6EF7               	movwf	tblptrh,c
 18727  0035D6  0009               	tblrd		*+
 18728  0035D8  CFF5 F063          	movff	tablat,??i1_fround+3
 18729  0035DC  0009               	tblrd		*+
 18730  0035DE  CFF5 F064          	movff	tablat,??i1_fround+4
 18731  0035E2  0009               	tblrd		*+
 18732  0035E4  CFF5 F065          	movff	tablat,??i1_fround+5
 18733  0035E8  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 18734  0035EC  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 18735  0035F0  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 18736  0035F4  ECBA  F025         	call	i1___ftmul	;wreg free
 18737  0035F8  C038  F06B         	movff	?i1___ftmul+2,i1_fround$2019+2
 18738  0035FC  C037  F06A         	movff	?i1___ftmul+1,i1_fround$2019+1
 18739  003600  C036  F069         	movff	?i1___ftmul,i1_fround$2019
 18740                           
 18741                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18742  003604  0E00               	movlw	0
 18743  003606  6E24               	movwf	?i1___wmul+3,c
 18744  003608  0E03               	movlw	3
 18745  00360A  6E23               	movwf	?i1___wmul+2,c
 18746  00360C  0E00               	movlw	0
 18747  00360E  6E14               	movwf	?i1___awmod+3,c
 18748  003610  0E0A               	movlw	10
 18749  003612  6E13               	movwf	?i1___awmod+2,c
 18750  003614  C047  F011         	movff	i1fround@prec,?i1___awmod
 18751  003618  6A12               	clrf	?i1___awmod+1,c
 18752  00361A  EC7A  F02E         	call	i1___awmod	;wreg free
 18753  00361E  C011  F021         	movff	?i1___awmod,?i1___wmul
 18754  003622  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 18755  003626  EC63  F032         	call	i1___wmul	;wreg free
 18756  00362A  0E28               	movlw	low __npowers_
 18757  00362C  2421               	addwf	?i1___wmul,w,c
 18758  00362E  6EF6               	movwf	tblptrl,c
 18759  003630  0E08               	movlw	high __npowers_
 18760  003632  2022               	addwfc	?i1___wmul+1,w,c
 18761  003634  6EF7               	movwf	tblptrh,c
 18762  003636  0009               	tblrd		*+
 18763  003638  CFF5 F060          	movff	tablat,??i1_fround
 18764  00363C  0009               	tblrd		*+
 18765  00363E  CFF5 F061          	movff	tablat,??i1_fround+1
 18766  003642  0009               	tblrd		*+
 18767  003644  CFF5 F062          	movff	tablat,??i1_fround+2
 18768  003648  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 18769  00364C  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 18770  003650  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 18771  003654  C069  F036         	movff	i1_fround$2019,?i1___ftmul
 18772  003658  C06A  F037         	movff	i1_fround$2019+1,?i1___ftmul+1
 18773  00365C  C06B  F038         	movff	i1_fround$2019+2,?i1___ftmul+2
 18774  003660  ECBA  F025         	call	i1___ftmul	;wreg free
 18775  003664  C038  F068         	movff	?i1___ftmul+2,i1_fround$2020+2
 18776  003668  C037  F067         	movff	?i1___ftmul+1,i1_fround$2020+1
 18777  00366C  C036  F066         	movff	?i1___ftmul,i1_fround$2020
 18778                           
 18779                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18780  003670  C066  F036         	movff	i1_fround$2020,?i1___ftmul
 18781  003674  C067  F037         	movff	i1_fround$2020+1,?i1___ftmul+1
 18782  003678  C068  F038         	movff	i1_fround$2020+2,?i1___ftmul+2
 18783  00367C  0E00               	movlw	0
 18784  00367E  6E39               	movwf	?i1___ftmul+3,c
 18785  003680  0E00               	movlw	0
 18786  003682  6E3A               	movwf	?i1___ftmul+4,c
 18787  003684  0E3F               	movlw	63
 18788  003686  6E3B               	movwf	?i1___ftmul+5,c
 18789  003688  ECBA  F025         	call	i1___ftmul	;wreg free
 18790  00368C  D08B               	goto	L30
 18791  00368E                     i1l11702:
 18792                           
 18793                           ;doprnt.c: 415: else if(prec > 10)
 18794  00368E  0E0A               	movlw	10
 18795  003690  6447               	cpfsgt	i1fround@prec,c
 18796  003692  D069               	goto	i1l11710
 18797                           
 18798                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18799  003694  0E00               	movlw	0
 18800  003696  6E24               	movwf	?i1___wmul+3,c
 18801  003698  0E03               	movlw	3
 18802  00369A  6E23               	movwf	?i1___wmul+2,c
 18803  00369C  0E00               	movlw	0
 18804  00369E  6E14               	movwf	?i1___awmod+3,c
 18805  0036A0  0E0A               	movlw	10
 18806  0036A2  6E13               	movwf	?i1___awmod+2,c
 18807  0036A4  C047  F011         	movff	i1fround@prec,?i1___awmod
 18808  0036A8  6A12               	clrf	?i1___awmod+1,c
 18809  0036AA  EC7A  F02E         	call	i1___awmod	;wreg free
 18810  0036AE  C011  F021         	movff	?i1___awmod,?i1___wmul
 18811  0036B2  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 18812  0036B6  EC63  F032         	call	i1___wmul	;wreg free
 18813  0036BA  0E28               	movlw	low __npowers_
 18814  0036BC  2421               	addwf	?i1___wmul,w,c
 18815  0036BE  6EF6               	movwf	tblptrl,c
 18816  0036C0  0E08               	movlw	high __npowers_
 18817  0036C2  2022               	addwfc	?i1___wmul+1,w,c
 18818  0036C4  6EF7               	movwf	tblptrh,c
 18819  0036C6  0009               	tblrd		*+
 18820  0036C8  CFF5 F060          	movff	tablat,??i1_fround
 18821  0036CC  0009               	tblrd		*+
 18822  0036CE  CFF5 F061          	movff	tablat,??i1_fround+1
 18823  0036D2  0009               	tblrd		*+
 18824  0036D4  CFF5 F062          	movff	tablat,??i1_fround+2
 18825  0036D8  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 18826  0036DC  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 18827  0036E0  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 18828  0036E4  0E00               	movlw	0
 18829  0036E6  6E24               	movwf	?i1___wmul+3,c
 18830  0036E8  0E03               	movlw	3
 18831  0036EA  6E23               	movwf	?i1___wmul+2,c
 18832  0036EC  0E00               	movlw	0
 18833  0036EE  6E1B               	movwf	?i1___awdiv+3,c
 18834  0036F0  0E0A               	movlw	10
 18835  0036F2  6E1A               	movwf	?i1___awdiv+2,c
 18836  0036F4  C047  F018         	movff	i1fround@prec,?i1___awdiv
 18837  0036F8  6A19               	clrf	?i1___awdiv+1,c
 18838  0036FA  EC66  F02C         	call	i1___awdiv	;wreg free
 18839  0036FE  0E09               	movlw	9
 18840  003700  2418               	addwf	?i1___awdiv,w,c
 18841  003702  6E21               	movwf	?i1___wmul,c
 18842  003704  0E00               	movlw	0
 18843  003706  2019               	addwfc	?i1___awdiv+1,w,c
 18844  003708  6E22               	movwf	?i1___wmul+1,c
 18845  00370A  EC63  F032         	call	i1___wmul	;wreg free
 18846  00370E  0E28               	movlw	low __npowers_
 18847  003710  2421               	addwf	?i1___wmul,w,c
 18848  003712  6EF6               	movwf	tblptrl,c
 18849  003714  0E08               	movlw	high __npowers_
 18850  003716  2022               	addwfc	?i1___wmul+1,w,c
 18851  003718  6EF7               	movwf	tblptrh,c
 18852  00371A  0009               	tblrd		*+
 18853  00371C  CFF5 F063          	movff	tablat,??i1_fround+3
 18854  003720  0009               	tblrd		*+
 18855  003722  CFF5 F064          	movff	tablat,??i1_fround+4
 18856  003726  0009               	tblrd		*+
 18857  003728  CFF5 F065          	movff	tablat,??i1_fround+5
 18858  00372C  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 18859  003730  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 18860  003734  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 18861  003738  ECBA  F025         	call	i1___ftmul	;wreg free
 18862  00373C  C038  F06B         	movff	?i1___ftmul+2,i1_fround$2019+2
 18863  003740  C037  F06A         	movff	?i1___ftmul+1,i1_fround$2019+1
 18864  003744  C036  F069         	movff	?i1___ftmul,i1_fround$2019
 18865                           
 18866                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18867  003748  C069  F036         	movff	i1_fround$2019,?i1___ftmul
 18868  00374C  C06A  F037         	movff	i1_fround$2019+1,?i1___ftmul+1
 18869  003750  C06B  F038         	movff	i1_fround$2019+2,?i1___ftmul+2
 18870  003754  0E00               	movlw	0
 18871  003756  6E39               	movwf	?i1___ftmul+3,c
 18872  003758  0E00               	movlw	0
 18873  00375A  6E3A               	movwf	?i1___ftmul+4,c
 18874  00375C  0E3F               	movlw	63
 18875  00375E  6E3B               	movwf	?i1___ftmul+5,c
 18876  003760  ECBA  F025         	call	i1___ftmul	;wreg free
 18877  003764  D01F               	goto	L30
 18878  003766                     i1l11710:
 18879                           
 18880                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 18881  003766  5047               	movf	i1fround@prec,w,c
 18882  003768  0D03               	mullw	3
 18883  00376A  0E28               	movlw	low __npowers_
 18884  00376C  24F3               	addwf	prodl,w,c
 18885  00376E  6EF6               	movwf	tblptrl,c
 18886  003770  0E08               	movlw	high __npowers_
 18887  003772  20F4               	addwfc	prodh,w,c
 18888  003774  6EF7               	movwf	tblptrh,c
 18889  003776  0009               	tblrd		*+
 18890  003778  CFF5 F060          	movff	tablat,??i1_fround
 18891  00377C  0009               	tblrd		*+
 18892  00377E  CFF5 F061          	movff	tablat,??i1_fround+1
 18893  003782  0009               	tblrd		*+
 18894  003784  CFF5 F062          	movff	tablat,??i1_fround+2
 18895  003788  C062  F038         	movff	??i1_fround+2,?i1___ftmul+2
 18896  00378C  C061  F037         	movff	??i1_fround+1,?i1___ftmul+1
 18897  003790  C060  F036         	movff	??i1_fround,?i1___ftmul
 18898  003794  0E00               	movlw	0
 18899  003796  6E39               	movwf	?i1___ftmul+3,c
 18900  003798  0E00               	movlw	0
 18901  00379A  6E3A               	movwf	?i1___ftmul+4,c
 18902  00379C  0E3F               	movlw	63
 18903  00379E  6E3B               	movwf	?i1___ftmul+5,c
 18904  0037A0  ECBA  F025         	call	i1___ftmul	;wreg free
 18905  0037A4                     L30:
 18906  0037A4  C038  F049         	movff	?i1___ftmul+2,?i1_fround+2
 18907  0037A8  C037  F048         	movff	?i1___ftmul+1,?i1_fround+1
 18908  0037AC  C036  F047         	movff	?i1___ftmul,?i1_fround
 18909  0037B0  0012               	return	
 18910  0037B2                     __end_ofi1_fround:
 18911                           	opt stack 0
 18912                           pclatu	equ	0xFFB
 18913                           pclath	equ	0xFFA
 18914                           tblptru	equ	0xFF8
 18915                           tblptrh	equ	0xFF7
 18916                           tblptrl	equ	0xFF6
 18917                           tablat	equ	0xFF5
 18918                           prodh	equ	0xFF4
 18919                           prodl	equ	0xFF3
 18920                           intcon	equ	0xFF2
 18921                           postinc0	equ	0xFEE
 18922                           fsr0h	equ	0xFEA
 18923                           fsr0l	equ	0xFE9
 18924                           wreg	equ	0xFE8
 18925                           postdec1	equ	0xFE5
 18926                           fsr1h	equ	0xFE2
 18927                           fsr1l	equ	0xFE1
 18928                           bsr	equ	0xFE0
 18929                           indf2	equ	0xFDF
 18930                           postinc2	equ	0xFDE
 18931                           postdec2	equ	0xFDD
 18932                           fsr2h	equ	0xFDA
 18933                           fsr2l	equ	0xFD9
 18934                           status	equ	0xFD8
 18935                           
 18936 ;; *************** function i1_Read_LDR *****************
 18937 ;; Defined at:
 18938 ;;		line 329 in file "main.c"
 18939 ;; Parameters:    Size  Location     Type
 18940 ;;		None
 18941 ;; Auto vars:     Size  Location     Type
 18942 ;;  Read_LDR        3   21[BANK0 ] float 
 18943 ;; Return value:  Size  Location     Type
 18944 ;;                  3   70[COMRAM] float 
 18945 ;; Registers used:
 18946 ;;		wreg, status,2, status,0, cstack
 18947 ;; Tracked objects:
 18948 ;;		On entry : 0/0
 18949 ;;		On exit  : 0/0
 18950 ;;		Unchanged: 0/0
 18951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18952 ;;      Params:         3       0       0       0       0       0       0       0       0
 18953 ;;      Locals:         0       3       0       0       0       0       0       0       0
 18954 ;;      Temps:          0       4       0       0       0       0       0       0       0
 18955 ;;      Totals:         3       7       0       0       0       0       0       0       0
 18956 ;;Total ram usage:       10 bytes
 18957 ;; Hardware stack levels used:    1
 18958 ;; Hardware stack levels required when called:    5
 18959 ;; This function calls:
 18960 ;;		i1___awtoft
 18961 ;;		i1___ftdiv
 18962 ;;		i1___ftmul
 18963 ;; This function is called by:
 18964 ;;		i1_Time_Bases
 18965 ;; This function uses a non-reentrant model
 18966 ;;
 18967                           
 18968                           	psect	text78
 18969  005078                     __ptext78:
 18970                           	opt stack 0
 18971  005078                     i1_Read_LDR:
 18972                           	opt stack 15
 18973                           
 18974                           ;main.c: 330: float analog_reading = 0;
 18975                           
 18976                           ;incstack = 0
 18977                           ;incstack = 0
 18978  005078  0E00               	movlw	0
 18979  00507A  0100               	movlb	0	; () banked
 18980  00507C  0100               	movlb	0	; () banked
 18981  00507E  6F75               	movwf	i1Read_LDR@analog_reading& (0+255),b
 18982  005080  0E00               	movlw	0
 18983  005082  0100               	movlb	0	; () banked
 18984  005084  0100               	movlb	0	; () banked
 18985  005086  6F76               	movwf	(i1Read_LDR@analog_reading+1)& (0+255),b
 18986  005088  0E00               	movlw	0
 18987  00508A  0100               	movlb	0	; () banked
 18988  00508C  0100               	movlb	0	; () banked
 18989  00508E  6F77               	movwf	(i1Read_LDR@analog_reading+2)& (0+255),b
 18990                           
 18991                           ; BSR set to: 0
 18992                           ;main.c: 331: ADCON0 |= ((1 << ADON) | (1 << GO));
 18993  005090  0E00               	movlw	0
 18994  005092  B2C2               	btfsc	4034,1,c	;volatile
 18995  005094  0E01               	movlw	1
 18996  005096  0100               	movlb	0	; () banked
 18997  005098  6F71               	movwf	??i1_Read_LDR& (0+255),b
 18998  00509A  0E01               	movlw	1
 18999  00509C  0100               	movlb	0	; () banked
 19000  00509E  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 19001  0050A0  0100               	movlb	0	; () banked
 19002  0050A2  2B71               	incf	??i1_Read_LDR& (0+255),f,b
 19003  0050A4  D003               	goto	i1u1118_24
 19004  0050A6                     i1u1118_25:
 19005  0050A6  0100               	movlb	0	; () banked
 19006  0050A8  90D8               	bcf	status,0,c
 19007  0050AA  3772               	rlcf	(??i1_Read_LDR+1)& (0+255),f,b
 19008  0050AC                     i1u1118_24:
 19009  0050AC  0100               	movlb	0	; () banked
 19010  0050AE  2F71               	decfsz	??i1_Read_LDR& (0+255),f,b
 19011  0050B0  D7FA               	goto	i1u1118_25
 19012  0050B2  0E00               	movlw	0
 19013  0050B4  B0C2               	btfsc	4034,0,c	;volatile
 19014  0050B6  0E01               	movlw	1
 19015  0050B8  0100               	movlb	0	; () banked
 19016  0050BA  6F73               	movwf	(??i1_Read_LDR+2)& (0+255),b
 19017  0050BC  0E01               	movlw	1
 19018  0050BE  0100               	movlb	0	; () banked
 19019  0050C0  6F74               	movwf	(??i1_Read_LDR+3)& (0+255),b
 19020  0050C2  0100               	movlb	0	; () banked
 19021  0050C4  2B73               	incf	(??i1_Read_LDR+2)& (0+255),f,b
 19022  0050C6  D003               	goto	i1u1119_24
 19023  0050C8                     i1u1119_25:
 19024  0050C8  0100               	movlb	0	; () banked
 19025  0050CA  90D8               	bcf	status,0,c
 19026  0050CC  3774               	rlcf	(??i1_Read_LDR+3)& (0+255),f,b
 19027  0050CE                     i1u1119_24:
 19028  0050CE  0100               	movlb	0	; () banked
 19029  0050D0  2F73               	decfsz	(??i1_Read_LDR+2)& (0+255),f,b
 19030  0050D2  D7FA               	goto	i1u1119_25
 19031  0050D4  0100               	movlb	0	; () banked
 19032  0050D6  5174               	movf	(??i1_Read_LDR+3)& (0+255),w,b
 19033  0050D8  0100               	movlb	0	; () banked
 19034  0050DA  1172               	iorwf	(??i1_Read_LDR+1)& (0+255),w,b
 19035  0050DC  12C2               	iorwf	4034,f,c	;volatile
 19036  0050DE                     i1l266:
 19037  0050DE  B2C2               	btfsc	4034,1,c	;volatile
 19038  0050E0  D7FE               	goto	i1l266
 19039                           
 19040                           ;main.c: 333: analog_reading = (ADRESH * 256) + (ADRESL);
 19041  0050E2  50C4               	movf	4036,w,c	;volatile
 19042  0050E4  0100               	movlb	0	; () banked
 19043  0050E6  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 19044  0050E8  6B71               	clrf	??i1_Read_LDR& (0+255),b
 19045  0050EA  50C3               	movf	4035,w,c	;volatile
 19046  0050EC  0100               	movlb	0	; () banked
 19047  0050EE  2571               	addwf	??i1_Read_LDR& (0+255),w,b
 19048  0050F0  6E19               	movwf	?i1___awtoft,c
 19049  0050F2  0E00               	movlw	0
 19050  0050F4  0100               	movlb	0	; () banked
 19051  0050F6  2172               	addwfc	(??i1_Read_LDR+1)& (0+255),w,b
 19052  0050F8  6E1A               	movwf	?i1___awtoft+1,c
 19053  0050FA  ECEC  F030         	call	i1___awtoft	;wreg free
 19054  0050FE  C01B  F077         	movff	?i1___awtoft+2,i1Read_LDR@analog_reading+2
 19055  005102  C01A  F076         	movff	?i1___awtoft+1,i1Read_LDR@analog_reading+1
 19056  005106  C019  F075         	movff	?i1___awtoft,i1Read_LDR@analog_reading
 19057                           
 19058                           ;main.c: 334: analog_reading = analog_reading*5/1023;
 19059  00510A  0E00               	movlw	0
 19060  00510C  6E39               	movwf	?i1___ftmul+3,c
 19061  00510E  0EA0               	movlw	160
 19062  005110  6E3A               	movwf	?i1___ftmul+4,c
 19063  005112  0E40               	movlw	64
 19064  005114  6E3B               	movwf	?i1___ftmul+5,c
 19065  005116  C075  F036         	movff	i1Read_LDR@analog_reading,?i1___ftmul
 19066  00511A  C076  F037         	movff	i1Read_LDR@analog_reading+1,?i1___ftmul+1
 19067  00511E  C077  F038         	movff	i1Read_LDR@analog_reading+2,?i1___ftmul+2
 19068  005122  ECBA  F025         	call	i1___ftmul	;wreg free
 19069  005126  C038  F062         	movff	?i1___ftmul+2,?i1___ftdiv+2
 19070  00512A  C037  F061         	movff	?i1___ftmul+1,?i1___ftdiv+1
 19071  00512E  C036  F060         	movff	?i1___ftmul,?i1___ftdiv
 19072  005132  0EC0               	movlw	192
 19073  005134  0100               	movlb	0	; () banked
 19074  005136  0100               	movlb	0	; () banked
 19075  005138  6F63               	movwf	(?i1___ftdiv+3)& (0+255),b
 19076  00513A  0E7F               	movlw	127
 19077  00513C  0100               	movlb	0	; () banked
 19078  00513E  0100               	movlb	0	; () banked
 19079  005140  6F64               	movwf	(?i1___ftdiv+4)& (0+255),b
 19080  005142  0E44               	movlw	68
 19081  005144  0100               	movlb	0	; () banked
 19082  005146  0100               	movlb	0	; () banked
 19083  005148  6F65               	movwf	(?i1___ftdiv+5)& (0+255),b
 19084  00514A  EC8C  F020         	call	i1___ftdiv	;wreg free
 19085  00514E  C062  F077         	movff	?i1___ftdiv+2,i1Read_LDR@analog_reading+2
 19086  005152  C061  F076         	movff	?i1___ftdiv+1,i1Read_LDR@analog_reading+1
 19087  005156  C060  F075         	movff	?i1___ftdiv,i1Read_LDR@analog_reading
 19088                           
 19089                           ;main.c: 335: return analog_reading;
 19090  00515A  C075  F047         	movff	i1Read_LDR@analog_reading,?i1_Read_LDR
 19091  00515E  C076  F048         	movff	i1Read_LDR@analog_reading+1,?i1_Read_LDR+1
 19092  005162  C077  F049         	movff	i1Read_LDR@analog_reading+2,?i1_Read_LDR+2
 19093  005166  0012               	return	
 19094  005168                     __end_ofi1_Read_LDR:
 19095                           	opt stack 0
 19096                           pclatu	equ	0xFFB
 19097                           pclath	equ	0xFFA
 19098                           tblptru	equ	0xFF8
 19099                           tblptrh	equ	0xFF7
 19100                           tblptrl	equ	0xFF6
 19101                           tablat	equ	0xFF5
 19102                           prodh	equ	0xFF4
 19103                           prodl	equ	0xFF3
 19104                           intcon	equ	0xFF2
 19105                           postinc0	equ	0xFEE
 19106                           fsr0h	equ	0xFEA
 19107                           fsr0l	equ	0xFE9
 19108                           wreg	equ	0xFE8
 19109                           postdec1	equ	0xFE5
 19110                           fsr1h	equ	0xFE2
 19111                           fsr1l	equ	0xFE1
 19112                           bsr	equ	0xFE0
 19113                           indf2	equ	0xFDF
 19114                           postinc2	equ	0xFDE
 19115                           postdec2	equ	0xFDD
 19116                           fsr2h	equ	0xFDA
 19117                           fsr2l	equ	0xFD9
 19118                           status	equ	0xFD8
 19119                           
 19120 ;; *************** function i1___ftmul *****************
 19121 ;; Defined at:
 19122 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
 19123 ;; Parameters:    Size  Location     Type
 19124 ;;  __ftmul         3   53[COMRAM] float 
 19125 ;;  __ftmul         3   56[COMRAM] float 
 19126 ;; Auto vars:     Size  Location     Type
 19127 ;;  __ftmul         3   65[COMRAM] unsigned um
 19128 ;;  __ftmul         1   69[COMRAM] unsigned char 
 19129 ;;  __ftmul         1   68[COMRAM] unsigned char 
 19130 ;;  __ftmul         1   64[COMRAM] unsigned char 
 19131 ;; Return value:  Size  Location     Type
 19132 ;;                  3   53[COMRAM] float 
 19133 ;; Registers used:
 19134 ;;		wreg, status,2, status,0, cstack
 19135 ;; Tracked objects:
 19136 ;;		On entry : 0/0
 19137 ;;		On exit  : 0/0
 19138 ;;		Unchanged: 0/0
 19139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19140 ;;      Params:         6       0       0       0       0       0       0       0       0
 19141 ;;      Locals:         6       0       0       0       0       0       0       0       0
 19142 ;;      Temps:          5       0       0       0       0       0       0       0       0
 19143 ;;      Totals:        17       0       0       0       0       0       0       0       0
 19144 ;;Total ram usage:       17 bytes
 19145 ;; Hardware stack levels used:    1
 19146 ;; Hardware stack levels required when called:    4
 19147 ;; This function calls:
 19148 ;;		i1___ftpack
 19149 ;; This function is called by:
 19150 ;;		i1_Read_LDR
 19151 ;;		i1_fround
 19152 ;;		i1_scale
 19153 ;;		i1_sprintf
 19154 ;;		i1___asftmul
 19155 ;; This function uses a non-reentrant model
 19156 ;;
 19157                           
 19158                           	psect	text79
 19159  004B74                     __ptext79:
 19160                           	opt stack 0
 19161  004B74                     i1___ftmul:
 19162                           	opt stack 15
 19163                           
 19164                           ;incstack = 0
 19165                           ;incstack = 0
 19166  004B74  0E0F               	movlw	15
 19167  004B76  6E3C               	movwf	??i1___ftmul& (0+255),c
 19168  004B78  C036  F03D         	movff	i1___ftmul@f1,??i1___ftmul+1
 19169  004B7C  C037  F03E         	movff	i1___ftmul@f1+1,??i1___ftmul+2
 19170  004B80  C038  F03F         	movff	i1___ftmul@f1+2,??i1___ftmul+3
 19171  004B84  283C               	incf	??i1___ftmul,w,c
 19172  004B86  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 19173  004B88  D004               	goto	i1u908_20
 19174  004B8A                     i1u908_25:
 19175  004B8A  90D8               	bcf	status,0,c
 19176  004B8C  323F               	rrcf	??i1___ftmul+3,f,c
 19177  004B8E  323E               	rrcf	??i1___ftmul+2,f,c
 19178  004B90  323D               	rrcf	??i1___ftmul+1,f,c
 19179  004B92                     i1u908_20:
 19180  004B92  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 19181  004B94  D7FA               	goto	i1u908_25
 19182  004B96  503D               	movf	??i1___ftmul+1,w,c
 19183  004B98  6E41               	movwf	i1___ftmul@exp,c
 19184  004B9A  6641               	tstfsz	i1___ftmul@exp& (0+255),c
 19185  004B9C  D001               	goto	i1l9924
 19186  004B9E  D015               	goto	i1u911_20
 19187  004BA0                     i1l9924:
 19188  004BA0  0E0F               	movlw	15
 19189  004BA2  6E3C               	movwf	??i1___ftmul& (0+255),c
 19190  004BA4  C039  F03D         	movff	i1___ftmul@f2,??i1___ftmul+1
 19191  004BA8  C03A  F03E         	movff	i1___ftmul@f2+1,??i1___ftmul+2
 19192  004BAC  C03B  F03F         	movff	i1___ftmul@f2+2,??i1___ftmul+3
 19193  004BB0  283C               	incf	??i1___ftmul,w,c
 19194  004BB2  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 19195  004BB4  D004               	goto	i1u910_20
 19196  004BB6                     i1u910_25:
 19197  004BB6  90D8               	bcf	status,0,c
 19198  004BB8  323F               	rrcf	??i1___ftmul+3,f,c
 19199  004BBA  323E               	rrcf	??i1___ftmul+2,f,c
 19200  004BBC  323D               	rrcf	??i1___ftmul+1,f,c
 19201  004BBE                     i1u910_20:
 19202  004BBE  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 19203  004BC0  D7FA               	goto	i1u910_25
 19204  004BC2  503D               	movf	??i1___ftmul+1,w,c
 19205  004BC4  6E46               	movwf	i1___ftmul@sign,c
 19206  004BC6  6646               	tstfsz	i1___ftmul@sign& (0+255),c
 19207  004BC8  D007               	goto	i1l9930
 19208  004BCA                     i1u911_20:
 19209  004BCA  0E00               	movlw	0
 19210  004BCC  6E36               	movwf	?i1___ftmul,c
 19211  004BCE  0E00               	movlw	0
 19212  004BD0  6E37               	movwf	?i1___ftmul+1,c
 19213  004BD2  0E00               	movlw	0
 19214  004BD4  6E38               	movwf	?i1___ftmul+2,c
 19215  004BD6  D055               	goto	i1l817
 19216  004BD8                     i1l9930:
 19217  004BD8  5046               	movf	i1___ftmul@sign,w,c
 19218  004BDA  0F7B               	addlw	123
 19219  004BDC  2641               	addwf	i1___ftmul@exp,f,c
 19220  004BDE  C038  F046         	movff	i1___ftmul@f1+2,i1___ftmul@sign
 19221  004BE2  503B               	movf	(i1___ftmul@f2+2)& (0+255),w,c
 19222  004BE4  1A46               	xorwf	i1___ftmul@sign,f,c
 19223  004BE6  0E80               	movlw	128
 19224  004BE8  1646               	andwf	i1___ftmul@sign,f,c
 19225  004BEA  8E37               	bsf	i1___ftmul@f1+1,7,c
 19226  004BEC  8E3A               	bsf	i1___ftmul@f2+1,7,c
 19227  004BEE  0EFF               	movlw	255
 19228  004BF0  1639               	andwf	i1___ftmul@f2,f,c
 19229  004BF2  0EFF               	movlw	255
 19230  004BF4  163A               	andwf	i1___ftmul@f2+1,f,c
 19231  004BF6  0E00               	movlw	0
 19232  004BF8  163B               	andwf	i1___ftmul@f2+2,f,c
 19233  004BFA  0E00               	movlw	0
 19234  004BFC  6E42               	movwf	i1___ftmul@f3_as_product,c
 19235  004BFE  0E00               	movlw	0
 19236  004C00  6E43               	movwf	i1___ftmul@f3_as_product+1,c
 19237  004C02  0E00               	movlw	0
 19238  004C04  6E44               	movwf	i1___ftmul@f3_as_product+2,c
 19239  004C06  6E3C               	movwf	??i1___ftmul& (0+255),c
 19240  004C08  0E07               	movlw	7
 19241  004C0A  6E45               	movwf	i1___ftmul@cntr,c
 19242  004C0C  503C               	movf	??i1___ftmul& (0+255),w,c
 19243  004C0E                     i1l9944:
 19244  004C0E  A036               	btfss	i1___ftmul@f1,0,c
 19245  004C10  D006               	goto	i1l9948
 19246  004C12  5039               	movf	i1___ftmul@f2,w,c
 19247  004C14  2642               	addwf	i1___ftmul@f3_as_product,f,c
 19248  004C16  503A               	movf	i1___ftmul@f2+1,w,c
 19249  004C18  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 19250  004C1A  503B               	movf	i1___ftmul@f2+2,w,c
 19251  004C1C  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 19252  004C1E                     i1l9948:
 19253  004C1E  90D8               	bcf	status,0,c
 19254  004C20  3238               	rrcf	i1___ftmul@f1+2,f,c
 19255  004C22  3237               	rrcf	i1___ftmul@f1+1,f,c
 19256  004C24  3236               	rrcf	i1___ftmul@f1,f,c
 19257  004C26  90D8               	bcf	status,0,c
 19258  004C28  3639               	rlcf	i1___ftmul@f2,f,c
 19259  004C2A  363A               	rlcf	i1___ftmul@f2+1,f,c
 19260  004C2C  363B               	rlcf	i1___ftmul@f2+2,f,c
 19261  004C2E  2E45               	decfsz	i1___ftmul@cntr,f,c
 19262  004C30  D7EE               	goto	i1l9944
 19263  004C32  6E3C               	movwf	??i1___ftmul& (0+255),c
 19264  004C34  0E09               	movlw	9
 19265  004C36  6E45               	movwf	i1___ftmul@cntr,c
 19266  004C38  503C               	movf	??i1___ftmul& (0+255),w,c
 19267  004C3A                     i1l9954:
 19268  004C3A  A036               	btfss	i1___ftmul@f1,0,c
 19269  004C3C  D006               	goto	i1l9958
 19270  004C3E  5039               	movf	i1___ftmul@f2,w,c
 19271  004C40  2642               	addwf	i1___ftmul@f3_as_product,f,c
 19272  004C42  503A               	movf	i1___ftmul@f2+1,w,c
 19273  004C44  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 19274  004C46  503B               	movf	i1___ftmul@f2+2,w,c
 19275  004C48  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 19276  004C4A                     i1l9958:
 19277  004C4A  90D8               	bcf	status,0,c
 19278  004C4C  3238               	rrcf	i1___ftmul@f1+2,f,c
 19279  004C4E  3237               	rrcf	i1___ftmul@f1+1,f,c
 19280  004C50  3236               	rrcf	i1___ftmul@f1,f,c
 19281  004C52  90D8               	bcf	status,0,c
 19282  004C54  3244               	rrcf	i1___ftmul@f3_as_product+2,f,c
 19283  004C56  3243               	rrcf	i1___ftmul@f3_as_product+1,f,c
 19284  004C58  3242               	rrcf	i1___ftmul@f3_as_product,f,c
 19285  004C5A  2E45               	decfsz	i1___ftmul@cntr,f,c
 19286  004C5C  D7EE               	goto	i1l9954
 19287  004C5E  C042  F011         	movff	i1___ftmul@f3_as_product,?i1___ftpack
 19288  004C62  C043  F012         	movff	i1___ftmul@f3_as_product+1,?i1___ftpack+1
 19289  004C66  C044  F013         	movff	i1___ftmul@f3_as_product+2,?i1___ftpack+2
 19290  004C6A  C041  F014         	movff	i1___ftmul@exp,?i1___ftpack+3
 19291  004C6E  C046  F015         	movff	i1___ftmul@sign,?i1___ftpack+4
 19292  004C72  EC72  F02A         	call	i1___ftpack	;wreg free
 19293  004C76  C013  F038         	movff	?i1___ftpack+2,?i1___ftmul+2
 19294  004C7A  C012  F037         	movff	?i1___ftpack+1,?i1___ftmul+1
 19295  004C7E  C011  F036         	movff	?i1___ftpack,?i1___ftmul
 19296  004C82                     i1l817:
 19297  004C82  0012               	return	
 19298  004C84                     __end_ofi1___ftmul:
 19299                           	opt stack 0
 19300                           pclatu	equ	0xFFB
 19301                           pclath	equ	0xFFA
 19302                           tblptru	equ	0xFF8
 19303                           tblptrh	equ	0xFF7
 19304                           tblptrl	equ	0xFF6
 19305                           tablat	equ	0xFF5
 19306                           prodh	equ	0xFF4
 19307                           prodl	equ	0xFF3
 19308                           intcon	equ	0xFF2
 19309                           postinc0	equ	0xFEE
 19310                           fsr0h	equ	0xFEA
 19311                           fsr0l	equ	0xFE9
 19312                           wreg	equ	0xFE8
 19313                           postdec1	equ	0xFE5
 19314                           fsr1h	equ	0xFE2
 19315                           fsr1l	equ	0xFE1
 19316                           bsr	equ	0xFE0
 19317                           indf2	equ	0xFDF
 19318                           postinc2	equ	0xFDE
 19319                           postdec2	equ	0xFDD
 19320                           fsr2h	equ	0xFDA
 19321                           fsr2l	equ	0xFD9
 19322                           status	equ	0xFD8
 19323                           
 19324 ;; *************** function i1___ftdiv *****************
 19325 ;; Defined at:
 19326 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
 19327 ;; Parameters:    Size  Location     Type
 19328 ;;  __ftdiv         3    0[BANK0 ] float 
 19329 ;;  __ftdiv         3    3[BANK0 ] float 
 19330 ;; Auto vars:     Size  Location     Type
 19331 ;;  __ftdiv         3   13[BANK0 ] float 
 19332 ;;  __ftdiv         1   16[BANK0 ] unsigned char 
 19333 ;;  __ftdiv         1   12[BANK0 ] unsigned char 
 19334 ;;  __ftdiv         1   11[BANK0 ] unsigned char 
 19335 ;; Return value:  Size  Location     Type
 19336 ;;                  3    0[BANK0 ] float 
 19337 ;; Registers used:
 19338 ;;		wreg, status,2, status,0, cstack
 19339 ;; Tracked objects:
 19340 ;;		On entry : 0/0
 19341 ;;		On exit  : 0/0
 19342 ;;		Unchanged: 0/0
 19343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19344 ;;      Params:         0       6       0       0       0       0       0       0       0
 19345 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19346 ;;      Temps:          0       5       0       0       0       0       0       0       0
 19347 ;;      Totals:         0      17       0       0       0       0       0       0       0
 19348 ;;Total ram usage:       17 bytes
 19349 ;; Hardware stack levels used:    1
 19350 ;; Hardware stack levels required when called:    4
 19351 ;; This function calls:
 19352 ;;		i1___ftpack
 19353 ;; This function is called by:
 19354 ;;		i1_Read_LDR
 19355 ;; This function uses a non-reentrant model
 19356 ;;
 19357                           
 19358                           	psect	text80
 19359  004118                     __ptext80:
 19360                           	opt stack 0
 19361  004118                     i1___ftdiv:
 19362                           	opt stack 15
 19363                           
 19364                           ;incstack = 0
 19365                           ;incstack = 0
 19366  004118  0E0F               	movlw	15
 19367  00411A  0100               	movlb	0	; () banked
 19368  00411C  6F66               	movwf	??i1___ftdiv& (0+255),b
 19369  00411E  0100               	movlb	0	; () banked
 19370  004120  C060  F067         	movff	i1___ftdiv@f1,??i1___ftdiv+1
 19371  004124  0100               	movlb	0	; () banked
 19372  004126  C061  F068         	movff	i1___ftdiv@f1+1,??i1___ftdiv+2
 19373  00412A  0100               	movlb	0	; () banked
 19374  00412C  C062  F069         	movff	i1___ftdiv@f1+2,??i1___ftdiv+3
 19375  004130  0100               	movlb	0	; () banked
 19376  004132  2966               	incf	??i1___ftdiv& (0+255),w,b
 19377  004134  0100               	movlb	0	; () banked
 19378  004136  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 19379  004138  D005               	goto	i1u1184_20
 19380  00413A                     i1u1184_25:
 19381  00413A  0100               	movlb	0	; () banked
 19382  00413C  90D8               	bcf	status,0,c
 19383  00413E  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 19384  004140  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 19385  004142  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 19386  004144                     i1u1184_20:
 19387  004144  0100               	movlb	0	; () banked
 19388  004146  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 19389  004148  D7F8               	goto	i1u1184_25
 19390  00414A  0100               	movlb	0	; () banked
 19391  00414C  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 19392  00414E  0100               	movlb	0	; () banked
 19393  004150  0100               	movlb	0	; () banked
 19394  004152  6F6C               	movwf	i1___ftdiv@exp& (0+255),b
 19395  004154  0100               	movlb	0	; () banked
 19396  004156  676C               	tstfsz	i1___ftdiv@exp& (0+255),b
 19397  004158  D001               	goto	i1l12096
 19398  00415A  D021               	goto	i1u1187_20
 19399  00415C                     i1l12096:
 19400                           
 19401                           ; BSR set to: 0
 19402  00415C  0E0F               	movlw	15
 19403  00415E  0100               	movlb	0	; () banked
 19404  004160  6F66               	movwf	??i1___ftdiv& (0+255),b
 19405  004162  0100               	movlb	0	; () banked
 19406  004164  C063  F067         	movff	i1___ftdiv@f2,??i1___ftdiv+1
 19407  004168  0100               	movlb	0	; () banked
 19408  00416A  C064  F068         	movff	i1___ftdiv@f2+1,??i1___ftdiv+2
 19409  00416E  0100               	movlb	0	; () banked
 19410  004170  C065  F069         	movff	i1___ftdiv@f2+2,??i1___ftdiv+3
 19411  004174  0100               	movlb	0	; () banked
 19412  004176  2966               	incf	??i1___ftdiv& (0+255),w,b
 19413  004178  0100               	movlb	0	; () banked
 19414  00417A  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 19415  00417C  D005               	goto	i1u1186_20
 19416  00417E                     i1u1186_25:
 19417  00417E  0100               	movlb	0	; () banked
 19418  004180  90D8               	bcf	status,0,c
 19419  004182  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 19420  004184  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 19421  004186  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 19422  004188                     i1u1186_20:
 19423  004188  0100               	movlb	0	; () banked
 19424  00418A  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 19425  00418C  D7F8               	goto	i1u1186_25
 19426  00418E  0100               	movlb	0	; () banked
 19427  004190  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 19428  004192  0100               	movlb	0	; () banked
 19429  004194  0100               	movlb	0	; () banked
 19430  004196  6F70               	movwf	i1___ftdiv@sign& (0+255),b
 19431  004198  0100               	movlb	0	; () banked
 19432  00419A  6770               	tstfsz	i1___ftdiv@sign& (0+255),b
 19433  00419C  D00D               	goto	i1l12102
 19434  00419E                     i1u1187_20:
 19435                           
 19436                           ; BSR set to: 0
 19437  00419E  0E00               	movlw	0
 19438  0041A0  0100               	movlb	0	; () banked
 19439  0041A2  0100               	movlb	0	; () banked
 19440  0041A4  6F60               	movwf	?i1___ftdiv& (0+255),b
 19441  0041A6  0E00               	movlw	0
 19442  0041A8  0100               	movlb	0	; () banked
 19443  0041AA  0100               	movlb	0	; () banked
 19444  0041AC  6F61               	movwf	(?i1___ftdiv+1)& (0+255),b
 19445  0041AE  0E00               	movlw	0
 19446  0041B0  0100               	movlb	0	; () banked
 19447  0041B2  0100               	movlb	0	; () banked
 19448  0041B4  6F62               	movwf	(?i1___ftdiv+2)& (0+255),b
 19449  0041B6  D093               	goto	i1l785
 19450  0041B8                     i1l12102:
 19451                           
 19452                           ; BSR set to: 0
 19453  0041B8  0E00               	movlw	0
 19454  0041BA  0100               	movlb	0	; () banked
 19455  0041BC  0100               	movlb	0	; () banked
 19456  0041BE  6F6D               	movwf	i1___ftdiv@f3& (0+255),b
 19457  0041C0  0E00               	movlw	0
 19458  0041C2  0100               	movlb	0	; () banked
 19459  0041C4  0100               	movlb	0	; () banked
 19460  0041C6  6F6E               	movwf	(i1___ftdiv@f3+1)& (0+255),b
 19461  0041C8  0E00               	movlw	0
 19462  0041CA  0100               	movlb	0	; () banked
 19463  0041CC  0100               	movlb	0	; () banked
 19464  0041CE  6F6F               	movwf	(i1___ftdiv@f3+2)& (0+255),b
 19465                           
 19466                           ; BSR set to: 0
 19467  0041D0  0100               	movlb	0	; () banked
 19468  0041D2  0100               	movlb	0	; () banked
 19469  0041D4  5170               	movf	i1___ftdiv@sign& (0+255),w,b
 19470  0041D6  0F89               	addlw	137
 19471  0041D8  0100               	movlb	0	; () banked
 19472  0041DA  0100               	movlb	0	; () banked
 19473  0041DC  5F6C               	subwf	i1___ftdiv@exp& (0+255),f,b
 19474                           
 19475                           ; BSR set to: 0
 19476  0041DE  C062  F070         	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
 19477                           
 19478                           ; BSR set to: 0
 19479  0041E2  0100               	movlb	0	; () banked
 19480  0041E4  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 19481  0041E6  0100               	movlb	0	; () banked
 19482  0041E8  0100               	movlb	0	; () banked
 19483  0041EA  1B70               	xorwf	i1___ftdiv@sign& (0+255),f,b
 19484                           
 19485                           ; BSR set to: 0
 19486  0041EC  0E80               	movlw	128
 19487  0041EE  0100               	movlb	0	; () banked
 19488  0041F0  0100               	movlb	0	; () banked
 19489  0041F2  1770               	andwf	i1___ftdiv@sign& (0+255),f,b
 19490                           
 19491                           ; BSR set to: 0
 19492  0041F4  0100               	movlb	0	; () banked
 19493  0041F6  0100               	movlb	0	; () banked
 19494  0041F8  8F61               	bsf	(i1___ftdiv@f1+1)& (0+255),7,b
 19495                           
 19496                           ; BSR set to: 0
 19497  0041FA  0EFF               	movlw	255
 19498  0041FC  0100               	movlb	0	; () banked
 19499  0041FE  0100               	movlb	0	; () banked
 19500  004200  1760               	andwf	i1___ftdiv@f1& (0+255),f,b
 19501  004202  0EFF               	movlw	255
 19502  004204  0100               	movlb	0	; () banked
 19503  004206  0100               	movlb	0	; () banked
 19504  004208  1761               	andwf	(i1___ftdiv@f1+1)& (0+255),f,b
 19505  00420A  0E00               	movlw	0
 19506  00420C  0100               	movlb	0	; () banked
 19507  00420E  0100               	movlb	0	; () banked
 19508  004210  1762               	andwf	(i1___ftdiv@f1+2)& (0+255),f,b
 19509                           
 19510                           ; BSR set to: 0
 19511  004212  0100               	movlb	0	; () banked
 19512  004214  0100               	movlb	0	; () banked
 19513  004216  8F64               	bsf	(i1___ftdiv@f2+1)& (0+255),7,b
 19514                           
 19515                           ; BSR set to: 0
 19516  004218  0EFF               	movlw	255
 19517  00421A  0100               	movlb	0	; () banked
 19518  00421C  0100               	movlb	0	; () banked
 19519  00421E  1763               	andwf	i1___ftdiv@f2& (0+255),f,b
 19520  004220  0EFF               	movlw	255
 19521  004222  0100               	movlb	0	; () banked
 19522  004224  0100               	movlb	0	; () banked
 19523  004226  1764               	andwf	(i1___ftdiv@f2+1)& (0+255),f,b
 19524  004228  0E00               	movlw	0
 19525  00422A  0100               	movlb	0	; () banked
 19526  00422C  0100               	movlb	0	; () banked
 19527  00422E  1765               	andwf	(i1___ftdiv@f2+2)& (0+255),f,b
 19528                           
 19529                           ; BSR set to: 0
 19530  004230  0100               	movlb	0	; () banked
 19531  004232  6F66               	movwf	??i1___ftdiv& (0+255),b
 19532  004234  0E18               	movlw	24
 19533  004236  0100               	movlb	0	; () banked
 19534  004238  0100               	movlb	0	; () banked
 19535  00423A  6F6B               	movwf	i1___ftdiv@cntr& (0+255),b
 19536  00423C  0100               	movlb	0	; () banked
 19537  00423E  5166               	movf	??i1___ftdiv& (0+255),w,b
 19538  004240                     i1l787:
 19539                           
 19540                           ; BSR set to: 0
 19541  004240  0100               	movlb	0	; () banked
 19542  004242  90D8               	bcf	status,0,c
 19543  004244  0100               	movlb	0	; () banked
 19544  004246  376D               	rlcf	i1___ftdiv@f3& (0+255),f,b
 19545  004248  0100               	movlb	0	; () banked
 19546  00424A  376E               	rlcf	(i1___ftdiv@f3+1)& (0+255),f,b
 19547  00424C  0100               	movlb	0	; () banked
 19548  00424E  376F               	rlcf	(i1___ftdiv@f3+2)& (0+255),f,b
 19549                           
 19550                           ; BSR set to: 0
 19551  004250  0100               	movlb	0	; () banked
 19552  004252  0100               	movlb	0	; () banked
 19553  004254  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 19554  004256  0100               	movlb	0	; () banked
 19555  004258  0100               	movlb	0	; () banked
 19556  00425A  5D60               	subwf	i1___ftdiv@f1& (0+255),w,b
 19557  00425C  0100               	movlb	0	; () banked
 19558  00425E  0100               	movlb	0	; () banked
 19559  004260  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 19560  004262  0100               	movlb	0	; () banked
 19561  004264  0100               	movlb	0	; () banked
 19562  004266  5961               	subwfb	(i1___ftdiv@f1+1)& (0+255),w,b
 19563  004268  0100               	movlb	0	; () banked
 19564  00426A  0100               	movlb	0	; () banked
 19565  00426C  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 19566  00426E  0100               	movlb	0	; () banked
 19567  004270  0100               	movlb	0	; () banked
 19568  004272  5962               	subwfb	(i1___ftdiv@f1+2)& (0+255),w,b
 19569  004274  A0D8               	btfss	status,0,c
 19570  004276  D015               	goto	i1l788
 19571                           
 19572                           ; BSR set to: 0
 19573  004278  0100               	movlb	0	; () banked
 19574  00427A  0100               	movlb	0	; () banked
 19575  00427C  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 19576  00427E  0100               	movlb	0	; () banked
 19577  004280  0100               	movlb	0	; () banked
 19578  004282  5F60               	subwf	i1___ftdiv@f1& (0+255),f,b
 19579  004284  0100               	movlb	0	; () banked
 19580  004286  0100               	movlb	0	; () banked
 19581  004288  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 19582  00428A  0100               	movlb	0	; () banked
 19583  00428C  0100               	movlb	0	; () banked
 19584  00428E  5B61               	subwfb	(i1___ftdiv@f1+1)& (0+255),f,b
 19585  004290  0100               	movlb	0	; () banked
 19586  004292  0100               	movlb	0	; () banked
 19587  004294  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 19588  004296  0100               	movlb	0	; () banked
 19589  004298  0100               	movlb	0	; () banked
 19590  00429A  5B62               	subwfb	(i1___ftdiv@f1+2)& (0+255),f,b
 19591                           
 19592                           ; BSR set to: 0
 19593  00429C  0100               	movlb	0	; () banked
 19594  00429E  0100               	movlb	0	; () banked
 19595  0042A0  816D               	bsf	i1___ftdiv@f3& (0+255),0,b
 19596  0042A2                     i1l788:
 19597                           
 19598                           ; BSR set to: 0
 19599  0042A2  0100               	movlb	0	; () banked
 19600  0042A4  90D8               	bcf	status,0,c
 19601  0042A6  0100               	movlb	0	; () banked
 19602  0042A8  3760               	rlcf	i1___ftdiv@f1& (0+255),f,b
 19603  0042AA  0100               	movlb	0	; () banked
 19604  0042AC  3761               	rlcf	(i1___ftdiv@f1+1)& (0+255),f,b
 19605  0042AE  0100               	movlb	0	; () banked
 19606  0042B0  3762               	rlcf	(i1___ftdiv@f1+2)& (0+255),f,b
 19607                           
 19608                           ; BSR set to: 0
 19609  0042B2  0100               	movlb	0	; () banked
 19610  0042B4  0100               	movlb	0	; () banked
 19611  0042B6  2F6B               	decfsz	i1___ftdiv@cntr& (0+255),f,b
 19612  0042B8  D7C3               	goto	i1l787
 19613                           
 19614                           ; BSR set to: 0
 19615                           
 19616                           ; BSR set to: 0
 19617  0042BA  C06D  F011         	movff	i1___ftdiv@f3,?i1___ftpack
 19618  0042BE  C06E  F012         	movff	i1___ftdiv@f3+1,?i1___ftpack+1
 19619  0042C2  C06F  F013         	movff	i1___ftdiv@f3+2,?i1___ftpack+2
 19620  0042C6  C06C  F014         	movff	i1___ftdiv@exp,?i1___ftpack+3
 19621  0042CA  C070  F015         	movff	i1___ftdiv@sign,?i1___ftpack+4
 19622  0042CE  EC72  F02A         	call	i1___ftpack	;wreg free
 19623  0042D2  C013  F062         	movff	?i1___ftpack+2,?i1___ftdiv+2
 19624  0042D6  C012  F061         	movff	?i1___ftpack+1,?i1___ftdiv+1
 19625  0042DA  C011  F060         	movff	?i1___ftpack,?i1___ftdiv
 19626  0042DE                     i1l785:
 19627  0042DE  0012               	return	
 19628  0042E0                     __end_ofi1___ftdiv:
 19629                           	opt stack 0
 19630                           pclatu	equ	0xFFB
 19631                           pclath	equ	0xFFA
 19632                           tblptru	equ	0xFF8
 19633                           tblptrh	equ	0xFF7
 19634                           tblptrl	equ	0xFF6
 19635                           tablat	equ	0xFF5
 19636                           prodh	equ	0xFF4
 19637                           prodl	equ	0xFF3
 19638                           intcon	equ	0xFF2
 19639                           postinc0	equ	0xFEE
 19640                           fsr0h	equ	0xFEA
 19641                           fsr0l	equ	0xFE9
 19642                           wreg	equ	0xFE8
 19643                           postdec1	equ	0xFE5
 19644                           fsr1h	equ	0xFE2
 19645                           fsr1l	equ	0xFE1
 19646                           bsr	equ	0xFE0
 19647                           indf2	equ	0xFDF
 19648                           postinc2	equ	0xFDE
 19649                           postdec2	equ	0xFDD
 19650                           fsr2h	equ	0xFDA
 19651                           fsr2l	equ	0xFD9
 19652                           status	equ	0xFD8
 19653                           
 19654 ;; *************** function i1___ftpack *****************
 19655 ;; Defined at:
 19656 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 19657 ;; Parameters:    Size  Location     Type
 19658 ;;  __ftpack        3   16[COMRAM] unsigned um
 19659 ;;  __ftpack        1   19[COMRAM] unsigned char 
 19660 ;;  __ftpack        1   20[COMRAM] unsigned char 
 19661 ;; Auto vars:     Size  Location     Type
 19662 ;;		None
 19663 ;; Return value:  Size  Location     Type
 19664 ;;                  3   16[COMRAM] float 
 19665 ;; Registers used:
 19666 ;;		wreg, status,2, status,0
 19667 ;; Tracked objects:
 19668 ;;		On entry : 0/0
 19669 ;;		On exit  : 0/0
 19670 ;;		Unchanged: 0/0
 19671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19672 ;;      Params:         5       0       0       0       0       0       0       0       0
 19673 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19674 ;;      Temps:          3       0       0       0       0       0       0       0       0
 19675 ;;      Totals:         8       0       0       0       0       0       0       0       0
 19676 ;;Total ram usage:        8 bytes
 19677 ;; Hardware stack levels used:    1
 19678 ;; Hardware stack levels required when called:    3
 19679 ;; This function calls:
 19680 ;;		Nothing
 19681 ;; This function is called by:
 19682 ;;		i1___awtoft
 19683 ;;		i1___ftadd
 19684 ;;		i1___ftdiv
 19685 ;;		i1___ftmul
 19686 ;;		i1___lltoft
 19687 ;; This function uses a non-reentrant model
 19688 ;;
 19689                           
 19690                           	psect	text81
 19691  0054E4                     __ptext81:
 19692                           	opt stack 0
 19693  0054E4                     i1___ftpack:
 19694                           	opt stack 15
 19695                           
 19696                           ;incstack = 0
 19697                           ;incstack = 0
 19698  0054E4  5014               	movf	i1___ftpack@exp,w,c
 19699  0054E6  B4D8               	btfsc	status,2,c
 19700  0054E8  D005               	goto	i1l9700
 19701  0054EA  5011               	movf	i1___ftpack@arg,w,c
 19702  0054EC  1012               	iorwf	i1___ftpack@arg+1,w,c
 19703  0054EE  1013               	iorwf	i1___ftpack@arg+2,w,c
 19704  0054F0  A4D8               	btfss	status,2,c
 19705  0054F2  D00C               	goto	i1l9706
 19706  0054F4                     i1l9700:
 19707  0054F4  0E00               	movlw	0
 19708  0054F6  6E11               	movwf	?i1___ftpack,c
 19709  0054F8  0E00               	movlw	0
 19710  0054FA  6E12               	movwf	?i1___ftpack+1,c
 19711  0054FC  0E00               	movlw	0
 19712  0054FE  6E13               	movwf	?i1___ftpack+2,c
 19713  005500  D04C               	goto	i1l716
 19714  005502                     i1l9704:
 19715  005502  2A14               	incf	i1___ftpack@exp,f,c
 19716  005504  90D8               	bcf	status,0,c
 19717  005506  3213               	rrcf	i1___ftpack@arg+2,f,c
 19718  005508  3212               	rrcf	i1___ftpack@arg+1,f,c
 19719  00550A  3211               	rrcf	i1___ftpack@arg,f,c
 19720  00550C                     i1l9706:
 19721  00550C  0E00               	movlw	0
 19722  00550E  1411               	andwf	i1___ftpack@arg,w,c
 19723  005510  6E16               	movwf	??i1___ftpack& (0+255),c
 19724  005512  0E00               	movlw	0
 19725  005514  1412               	andwf	i1___ftpack@arg+1,w,c
 19726  005516  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 19727  005518  0EFE               	movlw	254
 19728  00551A  1413               	andwf	i1___ftpack@arg+2,w,c
 19729  00551C  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 19730  00551E  5016               	movf	??i1___ftpack,w,c
 19731  005520  1017               	iorwf	??i1___ftpack+1,w,c
 19732  005522  1018               	iorwf	??i1___ftpack+2,w,c
 19733  005524  B4D8               	btfsc	status,2,c
 19734  005526  D00C               	goto	i1l9712
 19735  005528  D7EC               	goto	i1l9704
 19736  00552A                     i1l9708:
 19737  00552A  2A14               	incf	i1___ftpack@exp,f,c
 19738  00552C  0E01               	movlw	1
 19739  00552E  2611               	addwf	i1___ftpack@arg,f,c
 19740  005530  0E00               	movlw	0
 19741  005532  2212               	addwfc	i1___ftpack@arg+1,f,c
 19742  005534  0E00               	movlw	0
 19743  005536  2213               	addwfc	i1___ftpack@arg+2,f,c
 19744  005538  90D8               	bcf	status,0,c
 19745  00553A  3213               	rrcf	i1___ftpack@arg+2,f,c
 19746  00553C  3212               	rrcf	i1___ftpack@arg+1,f,c
 19747  00553E  3211               	rrcf	i1___ftpack@arg,f,c
 19748  005540                     i1l9712:
 19749  005540  0E00               	movlw	0
 19750  005542  1411               	andwf	i1___ftpack@arg,w,c
 19751  005544  6E16               	movwf	??i1___ftpack& (0+255),c
 19752  005546  0E00               	movlw	0
 19753  005548  1412               	andwf	i1___ftpack@arg+1,w,c
 19754  00554A  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 19755  00554C  0EFF               	movlw	255
 19756  00554E  1413               	andwf	i1___ftpack@arg+2,w,c
 19757  005550  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 19758  005552  5016               	movf	??i1___ftpack,w,c
 19759  005554  1017               	iorwf	??i1___ftpack+1,w,c
 19760  005556  1018               	iorwf	??i1___ftpack+2,w,c
 19761  005558  B4D8               	btfsc	status,2,c
 19762  00555A  D006               	goto	i1l9716
 19763  00555C  D7E6               	goto	i1l9708
 19764  00555E                     i1l9714:
 19765  00555E  0614               	decf	i1___ftpack@exp,f,c
 19766  005560  90D8               	bcf	status,0,c
 19767  005562  3611               	rlcf	i1___ftpack@arg,f,c
 19768  005564  3612               	rlcf	i1___ftpack@arg+1,f,c
 19769  005566  3613               	rlcf	i1___ftpack@arg+2,f,c
 19770  005568                     i1l9716:
 19771  005568  AE12               	btfss	i1___ftpack@arg+1,7,c
 19772  00556A  D7F9               	goto	i1l9714
 19773  00556C  A014               	btfss	i1___ftpack@exp,0,c
 19774  00556E  9E12               	bcf	i1___ftpack@arg+1,7,c
 19775  005570  90D8               	bcf	status,0,c
 19776  005572  3214               	rrcf	i1___ftpack@exp,f,c
 19777  005574  5014               	movf	i1___ftpack@exp,w,c
 19778  005576  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 19779  005578  6A17               	clrf	(??i1___ftpack+1)& (0+255),c
 19780  00557A  6A16               	clrf	??i1___ftpack& (0+255),c
 19781  00557C  5016               	movf	??i1___ftpack,w,c
 19782  00557E  1211               	iorwf	i1___ftpack@arg,f,c
 19783  005580  5017               	movf	??i1___ftpack+1,w,c
 19784  005582  1212               	iorwf	i1___ftpack@arg+1,f,c
 19785  005584  5018               	movf	??i1___ftpack+2,w,c
 19786  005586  1213               	iorwf	i1___ftpack@arg+2,f,c
 19787  005588  5015               	movf	i1___ftpack@sign,w,c
 19788  00558A  A4D8               	btfss	status,2,c
 19789  00558C  8E13               	bsf	i1___ftpack@arg+2,7,c
 19790  00558E  C011  F011         	movff	i1___ftpack@arg,?i1___ftpack
 19791  005592  C012  F012         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 19792  005596  C013  F013         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 19793  00559A                     i1l716:
 19794  00559A  0012               	return	
 19795  00559C                     __end_ofi1___ftpack:
 19796                           	opt stack 0
 19797                           pclatu	equ	0xFFB
 19798                           pclath	equ	0xFFA
 19799                           tblptru	equ	0xFF8
 19800                           tblptrh	equ	0xFF7
 19801                           tblptrl	equ	0xFF6
 19802                           tablat	equ	0xFF5
 19803                           prodh	equ	0xFF4
 19804                           prodl	equ	0xFF3
 19805                           intcon	equ	0xFF2
 19806                           postinc0	equ	0xFEE
 19807                           fsr0h	equ	0xFEA
 19808                           fsr0l	equ	0xFE9
 19809                           wreg	equ	0xFE8
 19810                           postdec1	equ	0xFE5
 19811                           fsr1h	equ	0xFE2
 19812                           fsr1l	equ	0xFE1
 19813                           bsr	equ	0xFE0
 19814                           indf2	equ	0xFDF
 19815                           postinc2	equ	0xFDE
 19816                           postdec2	equ	0xFDD
 19817                           fsr2h	equ	0xFDA
 19818                           fsr2l	equ	0xFD9
 19819                           status	equ	0xFD8
 19820                           
 19821 ;; *************** function i1___awtoft *****************
 19822 ;; Defined at:
 19823 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
 19824 ;; Parameters:    Size  Location     Type
 19825 ;;  __awtoft        2   24[COMRAM] int 
 19826 ;; Auto vars:     Size  Location     Type
 19827 ;;  __awtoft        1   28[COMRAM] unsigned char 
 19828 ;; Return value:  Size  Location     Type
 19829 ;;                  3   24[COMRAM] float 
 19830 ;; Registers used:
 19831 ;;		wreg, status,2, status,0, cstack
 19832 ;; Tracked objects:
 19833 ;;		On entry : 0/0
 19834 ;;		On exit  : 0/0
 19835 ;;		Unchanged: 0/0
 19836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19837 ;;      Params:         3       0       0       0       0       0       0       0       0
 19838 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19839 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19840 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19841 ;;Total ram usage:        5 bytes
 19842 ;; Hardware stack levels used:    1
 19843 ;; Hardware stack levels required when called:    4
 19844 ;; This function calls:
 19845 ;;		i1___ftpack
 19846 ;; This function is called by:
 19847 ;;		i1_Read_LDR
 19848 ;; This function uses a non-reentrant model
 19849 ;;
 19850                           
 19851                           	psect	text82
 19852  0061D8                     __ptext82:
 19853                           	opt stack 0
 19854  0061D8                     i1___awtoft:
 19855                           	opt stack 15
 19856                           
 19857                           ;incstack = 0
 19858                           ;incstack = 0
 19859  0061D8  6E1C               	movwf	??i1___awtoft& (0+255),c
 19860  0061DA  0E00               	movlw	0
 19861  0061DC  6E1D               	movwf	i1___awtoft@sign,c
 19862  0061DE  501C               	movf	??i1___awtoft& (0+255),w,c
 19863  0061E0  AE1A               	btfss	i1___awtoft@c+1,7,c
 19864  0061E2  D008               	goto	i1l9636
 19865  0061E4  6C19               	negf	i1___awtoft@c,c
 19866  0061E6  1E1A               	comf	i1___awtoft@c+1,f,c
 19867  0061E8  B0D8               	btfsc	status,0,c
 19868  0061EA  2A1A               	incf	i1___awtoft@c+1,f,c
 19869  0061EC  6E1C               	movwf	??i1___awtoft& (0+255),c
 19870  0061EE  0E01               	movlw	1
 19871  0061F0  6E1D               	movwf	i1___awtoft@sign,c
 19872  0061F2  501C               	movf	??i1___awtoft& (0+255),w,c
 19873  0061F4                     i1l9636:
 19874  0061F4  C019  F011         	movff	i1___awtoft@c,?i1___ftpack
 19875  0061F8  C01A  F012         	movff	i1___awtoft@c+1,?i1___ftpack+1
 19876  0061FC  6A13               	clrf	?i1___ftpack+2,c
 19877  0061FE  6E1C               	movwf	??i1___awtoft& (0+255),c
 19878  006200  0E8E               	movlw	142
 19879  006202  6E14               	movwf	?i1___ftpack+3,c
 19880  006204  501C               	movf	??i1___awtoft& (0+255),w,c
 19881  006206  C01D  F015         	movff	i1___awtoft@sign,?i1___ftpack+4
 19882  00620A  EC72  F02A         	call	i1___ftpack	;wreg free
 19883  00620E  C013  F01B         	movff	?i1___ftpack+2,?i1___awtoft+2
 19884  006212  C012  F01A         	movff	?i1___ftpack+1,?i1___awtoft+1
 19885  006216  C011  F019         	movff	?i1___ftpack,?i1___awtoft
 19886  00621A  0012               	return	
 19887  00621C                     __end_ofi1___awtoft:
 19888                           	opt stack 0
 19889                           pclatu	equ	0xFFB
 19890                           pclath	equ	0xFFA
 19891                           tblptru	equ	0xFF8
 19892                           tblptrh	equ	0xFF7
 19893                           tblptrl	equ	0xFF6
 19894                           tablat	equ	0xFF5
 19895                           prodh	equ	0xFF4
 19896                           prodl	equ	0xFF3
 19897                           intcon	equ	0xFF2
 19898                           postinc0	equ	0xFEE
 19899                           fsr0h	equ	0xFEA
 19900                           fsr0l	equ	0xFE9
 19901                           wreg	equ	0xFE8
 19902                           postdec1	equ	0xFE5
 19903                           fsr1h	equ	0xFE2
 19904                           fsr1l	equ	0xFE1
 19905                           bsr	equ	0xFE0
 19906                           indf2	equ	0xFDF
 19907                           postinc2	equ	0xFDE
 19908                           postdec2	equ	0xFDD
 19909                           fsr2h	equ	0xFDA
 19910                           fsr2l	equ	0xFD9
 19911                           status	equ	0xFD8
 19912                           
 19913 ;; *************** function i1_Obtener_Distancia *****************
 19914 ;; Defined at:
 19915 ;;		line 289 in file "main.c"
 19916 ;; Parameters:    Size  Location     Type
 19917 ;;		None
 19918 ;; Auto vars:     Size  Location     Type
 19919 ;;  Obtener_Dist    2   30[COMRAM] unsigned int 
 19920 ;;  Obtener_Dist    2   28[COMRAM] unsigned int 
 19921 ;;  Obtener_Dist    2   26[COMRAM] unsigned int 
 19922 ;; Return value:  Size  Location     Type
 19923 ;;                  2   24[COMRAM] unsigned int 
 19924 ;; Registers used:
 19925 ;;		wreg, status,2, status,0, cstack
 19926 ;; Tracked objects:
 19927 ;;		On entry : 0/0
 19928 ;;		On exit  : 0/0
 19929 ;;		Unchanged: 0/0
 19930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19931 ;;      Params:         2       0       0       0       0       0       0       0       0
 19932 ;;      Locals:         6       0       0       0       0       0       0       0       0
 19933 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19934 ;;      Totals:         8       0       0       0       0       0       0       0       0
 19935 ;;Total ram usage:        8 bytes
 19936 ;; Hardware stack levels used:    1
 19937 ;; Hardware stack levels required when called:    4
 19938 ;; This function calls:
 19939 ;;		i1___lwdiv
 19940 ;; This function is called by:
 19941 ;;		i1_Time_Bases
 19942 ;; This function uses a non-reentrant model
 19943 ;;
 19944                           
 19945                           	psect	text83
 19946  005C76                     __ptext83:
 19947                           	opt stack 0
 19948  005C76                     i1_Obtener_Distancia:
 19949                           	opt stack 16
 19950                           
 19951                           ;main.c: 290: uint16_t Duracion;
 19952                           ;main.c: 291: uint16_t Distancia;
 19953                           ;main.c: 292: uint16_t Timer_1;
 19954                           ;main.c: 294: LATAbits.LATA1=1;
 19955                           
 19956                           ;incstack = 0
 19957                           ;incstack = 0
 19958  005C76  8289               	bsf	3977,1,c	;volatile
 19959                           
 19960                           ;main.c: 295: _delay((unsigned long)((10)*(8000000/4000000.0)));
 19961  005C78  0E06               	movlw	6
 19962  005C7A                     i1u1196_27:
 19963  005C7A  2EE8               	decfsz	wreg,f,c
 19964  005C7C  D7FE               	goto	i1u1196_27
 19965  005C7E  D000               	nop2		;nop
 19966                           
 19967                           ;main.c: 296: LATAbits.LATA1=0;
 19968  005C80  9289               	bcf	3977,1,c	;volatile
 19969  005C82                     i1l250:
 19970  005C82  A480               	btfss	3968,2,c	;volatile
 19971  005C84  D7FE               	goto	i1l250
 19972                           
 19973                           ;main.c: 298: T1CONbits.TMR1ON=1;
 19974  005C86  80CD               	bsf	4045,0,c	;volatile
 19975  005C88                     i1l253:
 19976  005C88  B480               	btfsc	3968,2,c	;volatile
 19977  005C8A  D7FE               	goto	i1l253
 19978                           
 19979                           ;main.c: 300: T1CONbits.TMR1ON=0;
 19980  005C8C  90CD               	bcf	4045,0,c	;volatile
 19981                           
 19982                           ;main.c: 301: Timer_1=TMR1;
 19983  005C8E  CFCE F01B          	movff	4046,i1Obtener_Distancia@Timer_1	;volatile
 19984  005C92  CFCF F01C          	movff	4047,i1Obtener_Distancia@Timer_1+1	;volatile
 19985                           
 19986                           ;main.c: 302: Duracion=Timer_1/2;
 19987  005C96  90D8               	bcf	status,0,c
 19988  005C98  301C               	rrcf	i1Obtener_Distancia@Timer_1+1,w,c
 19989  005C9A  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 19990  005C9C  301B               	rrcf	i1Obtener_Distancia@Timer_1,w,c
 19991  005C9E  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 19992                           
 19993                           ;main.c: 303: if(Duracion<=23200)
 19994  005CA0  0EA1               	movlw	161
 19995  005CA2  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 19996  005CA4  0E5A               	movlw	90
 19997  005CA6  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 19998  005CA8  B0D8               	btfsc	status,0,c
 19999  005CAA  D00F               	goto	i1l9122
 20000                           
 20001                           ;main.c: 304: {
 20002                           ;main.c: 305: Distancia=Duracion/58;
 20003  005CAC  C01F  F011         	movff	i1Obtener_Distancia@Duracion,?i1___lwdiv
 20004  005CB0  C020  F012         	movff	i1Obtener_Distancia@Duracion+1,?i1___lwdiv+1
 20005  005CB4  0E00               	movlw	0
 20006  005CB6  6E14               	movwf	?i1___lwdiv+3,c
 20007  005CB8  0E3A               	movlw	58
 20008  005CBA  6E13               	movwf	?i1___lwdiv+2,c
 20009  005CBC  ECBB  F02F         	call	i1___lwdiv	;wreg free
 20010  005CC0  C011  F01D         	movff	?i1___lwdiv,i1Obtener_Distancia@Distancia
 20011  005CC4  C012  F01E         	movff	?i1___lwdiv+1,i1Obtener_Distancia@Distancia+1
 20012                           
 20013                           ;main.c: 306: }
 20014  005CC8  D008               	goto	i1l257
 20015  005CCA                     i1l9122:
 20016                           
 20017                           ;main.c: 307: else if(Duracion<116)
 20018  005CCA  0E74               	movlw	116
 20019  005CCC  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 20020  005CCE  0E00               	movlw	0
 20021  005CD0  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 20022                           
 20023                           ;main.c: 311: else
 20024                           ;main.c: 312: {
 20025                           ;main.c: 313: Distancia=0;
 20026                           
 20027                           ;main.c: 310: }
 20028                           
 20029                           ;main.c: 308: {
 20030                           ;main.c: 309: Distancia=0;
 20031  005CD2  0E00               	movlw	0
 20032  005CD4  6E1E               	movwf	i1Obtener_Distancia@Distancia+1,c
 20033  005CD6  0E00               	movlw	0
 20034  005CD8  6E1D               	movwf	i1Obtener_Distancia@Distancia,c
 20035  005CDA                     i1l257:
 20036                           
 20037                           ;main.c: 314: }
 20038                           ;main.c: 315: Duracion=0;
 20039  005CDA  0E00               	movlw	0
 20040  005CDC  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 20041  005CDE  0E00               	movlw	0
 20042  005CE0  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 20043                           
 20044                           ;main.c: 316: TMR1=0;
 20045  005CE2  0E00               	movlw	0
 20046  005CE4  6ECF               	movwf	4047,c	;volatile
 20047  005CE6  0E00               	movlw	0
 20048  005CE8  6ECE               	movwf	4046,c	;volatile
 20049                           
 20050                           ;main.c: 318: return Distancia;
 20051  005CEA  C01D  F019         	movff	i1Obtener_Distancia@Distancia,?i1_Obtener_Distancia
 20052  005CEE  C01E  F01A         	movff	i1Obtener_Distancia@Distancia+1,?i1_Obtener_Distancia+1
 20053  005CF2  0012               	return	
 20054  005CF4                     __end_ofi1_Obtener_Distancia:
 20055                           	opt stack 0
 20056                           pclatu	equ	0xFFB
 20057                           pclath	equ	0xFFA
 20058                           tblptru	equ	0xFF8
 20059                           tblptrh	equ	0xFF7
 20060                           tblptrl	equ	0xFF6
 20061                           tablat	equ	0xFF5
 20062                           prodh	equ	0xFF4
 20063                           prodl	equ	0xFF3
 20064                           intcon	equ	0xFF2
 20065                           postinc0	equ	0xFEE
 20066                           fsr0h	equ	0xFEA
 20067                           fsr0l	equ	0xFE9
 20068                           wreg	equ	0xFE8
 20069                           postdec1	equ	0xFE5
 20070                           fsr1h	equ	0xFE2
 20071                           fsr1l	equ	0xFE1
 20072                           bsr	equ	0xFE0
 20073                           indf2	equ	0xFDF
 20074                           postinc2	equ	0xFDE
 20075                           postdec2	equ	0xFDD
 20076                           fsr2h	equ	0xFDA
 20077                           fsr2l	equ	0xFD9
 20078                           status	equ	0xFD8
 20079                           
 20080 ;; *************** function i1___lwdiv *****************
 20081 ;; Defined at:
 20082 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
 20083 ;; Parameters:    Size  Location     Type
 20084 ;;  __lwdiv         2   16[COMRAM] unsigned int 
 20085 ;;  __lwdiv         2   18[COMRAM] unsigned int 
 20086 ;; Auto vars:     Size  Location     Type
 20087 ;;  __lwdiv         2   22[COMRAM] unsigned int 
 20088 ;;  __lwdiv         1   21[COMRAM] unsigned char 
 20089 ;; Return value:  Size  Location     Type
 20090 ;;                  2   16[COMRAM] unsigned int 
 20091 ;; Registers used:
 20092 ;;		wreg, status,2, status,0
 20093 ;; Tracked objects:
 20094 ;;		On entry : 0/0
 20095 ;;		On exit  : 0/0
 20096 ;;		Unchanged: 0/0
 20097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20098 ;;      Params:         4       0       0       0       0       0       0       0       0
 20099 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20100 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20101 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20102 ;;Total ram usage:        8 bytes
 20103 ;; Hardware stack levels used:    1
 20104 ;; Hardware stack levels required when called:    3
 20105 ;; This function calls:
 20106 ;;		Nothing
 20107 ;; This function is called by:
 20108 ;;		i1_Obtener_Distancia
 20109 ;; This function uses a non-reentrant model
 20110 ;;
 20111                           
 20112                           	psect	text84
 20113  005F76                     __ptext84:
 20114                           	opt stack 0
 20115  005F76                     i1___lwdiv:
 20116                           	opt stack 16
 20117                           
 20118                           ;incstack = 0
 20119                           ;incstack = 0
 20120  005F76  0E00               	movlw	0
 20121  005F78  6E18               	movwf	i1___lwdiv@quotient+1,c
 20122  005F7A  0E00               	movlw	0
 20123  005F7C  6E17               	movwf	i1___lwdiv@quotient,c
 20124  005F7E  5014               	movf	i1___lwdiv@divisor+1,w,c
 20125  005F80  1013               	iorwf	i1___lwdiv@divisor,w,c
 20126  005F82  B4D8               	btfsc	status,2,c
 20127  005F84  D01E               	goto	i1l950
 20128  005F86  6E15               	movwf	??i1___lwdiv& (0+255),c
 20129  005F88  0E01               	movlw	1
 20130  005F8A  6E16               	movwf	i1___lwdiv@counter,c
 20131  005F8C  5015               	movf	??i1___lwdiv& (0+255),w,c
 20132  005F8E  D004               	goto	i1l10090
 20133  005F90                     i1l10088:
 20134  005F90  90D8               	bcf	status,0,c
 20135  005F92  3613               	rlcf	i1___lwdiv@divisor,f,c
 20136  005F94  3614               	rlcf	i1___lwdiv@divisor+1,f,c
 20137  005F96  2A16               	incf	i1___lwdiv@counter,f,c
 20138  005F98                     i1l10090:
 20139  005F98  AE14               	btfss	i1___lwdiv@divisor+1,7,c
 20140  005F9A  D7FA               	goto	i1l10088
 20141  005F9C                     i1l10092:
 20142  005F9C  90D8               	bcf	status,0,c
 20143  005F9E  3617               	rlcf	i1___lwdiv@quotient,f,c
 20144  005FA0  3618               	rlcf	i1___lwdiv@quotient+1,f,c
 20145  005FA2  5013               	movf	i1___lwdiv@divisor,w,c
 20146  005FA4  5C11               	subwf	i1___lwdiv@dividend,w,c
 20147  005FA6  5014               	movf	i1___lwdiv@divisor+1,w,c
 20148  005FA8  5812               	subwfb	i1___lwdiv@dividend+1,w,c
 20149  005FAA  A0D8               	btfss	status,0,c
 20150  005FAC  D005               	goto	i1l10100
 20151  005FAE  5013               	movf	i1___lwdiv@divisor,w,c
 20152  005FB0  5E11               	subwf	i1___lwdiv@dividend,f,c
 20153  005FB2  5014               	movf	i1___lwdiv@divisor+1,w,c
 20154  005FB4  5A12               	subwfb	i1___lwdiv@dividend+1,f,c
 20155  005FB6  8017               	bsf	i1___lwdiv@quotient,0,c
 20156  005FB8                     i1l10100:
 20157  005FB8  90D8               	bcf	status,0,c
 20158  005FBA  3214               	rrcf	i1___lwdiv@divisor+1,f,c
 20159  005FBC  3213               	rrcf	i1___lwdiv@divisor,f,c
 20160  005FBE  2E16               	decfsz	i1___lwdiv@counter,f,c
 20161  005FC0  D7ED               	goto	i1l10092
 20162  005FC2                     i1l950:
 20163  005FC2  C017  F011         	movff	i1___lwdiv@quotient,?i1___lwdiv
 20164  005FC6  C018  F012         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
 20165  005FCA  0012               	return	
 20166  005FCC                     __end_ofi1___lwdiv:
 20167                           	opt stack 0
 20168                           pclatu	equ	0xFFB
 20169                           pclath	equ	0xFFA
 20170                           tblptru	equ	0xFF8
 20171                           tblptrh	equ	0xFF7
 20172                           tblptrl	equ	0xFF6
 20173                           tablat	equ	0xFF5
 20174                           prodh	equ	0xFF4
 20175                           prodl	equ	0xFF3
 20176                           intcon	equ	0xFF2
 20177                           postinc0	equ	0xFEE
 20178                           fsr0h	equ	0xFEA
 20179                           fsr0l	equ	0xFE9
 20180                           wreg	equ	0xFE8
 20181                           postdec1	equ	0xFE5
 20182                           fsr1h	equ	0xFE2
 20183                           fsr1l	equ	0xFE1
 20184                           bsr	equ	0xFE0
 20185                           indf2	equ	0xFDF
 20186                           postinc2	equ	0xFDE
 20187                           postdec2	equ	0xFDD
 20188                           fsr2h	equ	0xFDA
 20189                           fsr2l	equ	0xFD9
 20190                           status	equ	0xFD8
 20191                           
 20192 ;; *************** function i1_lcd_putc *****************
 20193 ;; Defined at:
 20194 ;;		line 135 in file "lcd.h"
 20195 ;; Parameters:    Size  Location     Type
 20196 ;;  lcd_putc        2   20[COMRAM] PTR unsigned char 
 20197 ;;		 -> LCD_Buffer(32), 
 20198 ;; Auto vars:     Size  Location     Type
 20199 ;;  lcd_putc        2   22[COMRAM] int 
 20200 ;; Return value:  Size  Location     Type
 20201 ;;		None               void
 20202 ;; Registers used:
 20203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20204 ;; Tracked objects:
 20205 ;;		On entry : 0/0
 20206 ;;		On exit  : 0/0
 20207 ;;		Unchanged: 0/0
 20208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20209 ;;      Params:         2       0       0       0       0       0       0       0       0
 20210 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20211 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20212 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20213 ;;Total ram usage:        4 bytes
 20214 ;; Hardware stack levels used:    1
 20215 ;; Hardware stack levels required when called:    5
 20216 ;; This function calls:
 20217 ;;		i1_lcd_write_char
 20218 ;; This function is called by:
 20219 ;;		i1_Time_Bases
 20220 ;; This function uses a non-reentrant model
 20221 ;;
 20222                           
 20223                           	psect	text85
 20224  006570                     __ptext85:
 20225                           	opt stack 0
 20226  006570                     i1_lcd_putc:
 20227                           	opt stack 15
 20228                           
 20229                           ;lcd.h: 136: int i;
 20230                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
 20231                           
 20232                           ;incstack = 0
 20233                           ;incstack = 0
 20234  006570  0E00               	movlw	0
 20235  006572  6E18               	movwf	i1lcd_putc@i+1,c
 20236  006574  0E00               	movlw	0
 20237  006576  6E17               	movwf	i1lcd_putc@i,c
 20238  006578  D00C               	goto	i1l9026
 20239  00657A                     i1l9022:
 20240                           
 20241                           ;lcd.h: 138: lcd_write_char(a[i]);
 20242  00657A  5017               	movf	i1lcd_putc@i,w,c
 20243  00657C  2415               	addwf	i1lcd_putc@a,w,c
 20244  00657E  6ED9               	movwf	fsr2l,c
 20245  006580  5018               	movf	i1lcd_putc@i+1,w,c
 20246  006582  2016               	addwfc	i1lcd_putc@a+1,w,c
 20247  006584  6EDA               	movwf	fsr2h,c
 20248  006586  50DF               	movf	indf2,w,c
 20249  006588  6E12               	movwf	?i1_lcd_write_char,c
 20250  00658A  EC80  F032         	call	i1_lcd_write_char	;wreg free
 20251  00658E  4A17               	infsnz	i1lcd_putc@i,f,c
 20252  006590  2A18               	incf	i1lcd_putc@i+1,f,c
 20253  006592                     i1l9026:
 20254  006592  5017               	movf	i1lcd_putc@i,w,c
 20255  006594  2415               	addwf	i1lcd_putc@a,w,c
 20256  006596  6ED9               	movwf	fsr2l,c
 20257  006598  5018               	movf	i1lcd_putc@i+1,w,c
 20258  00659A  2016               	addwfc	i1lcd_putc@a+1,w,c
 20259  00659C  6EDA               	movwf	fsr2h,c
 20260  00659E  50DF               	movf	indf2,w,c
 20261  0065A0  B4D8               	btfsc	status,2,c
 20262  0065A2  0012               	return	
 20263  0065A4  D7EA               	goto	i1l9022
 20264  0065A6                     __end_ofi1_lcd_putc:
 20265                           	opt stack 0
 20266                           pclatu	equ	0xFFB
 20267                           pclath	equ	0xFFA
 20268                           tblptru	equ	0xFF8
 20269                           tblptrh	equ	0xFF7
 20270                           tblptrl	equ	0xFF6
 20271                           tablat	equ	0xFF5
 20272                           prodh	equ	0xFF4
 20273                           prodl	equ	0xFF3
 20274                           intcon	equ	0xFF2
 20275                           postinc0	equ	0xFEE
 20276                           fsr0h	equ	0xFEA
 20277                           fsr0l	equ	0xFE9
 20278                           wreg	equ	0xFE8
 20279                           postdec1	equ	0xFE5
 20280                           fsr1h	equ	0xFE2
 20281                           fsr1l	equ	0xFE1
 20282                           bsr	equ	0xFE0
 20283                           indf2	equ	0xFDF
 20284                           postinc2	equ	0xFDE
 20285                           postdec2	equ	0xFDD
 20286                           fsr2h	equ	0xFDA
 20287                           fsr2l	equ	0xFD9
 20288                           status	equ	0xFD8
 20289                           
 20290 ;; *************** function i1_lcd_write_char *****************
 20291 ;; Defined at:
 20292 ;;		line 117 in file "lcd.h"
 20293 ;; Parameters:    Size  Location     Type
 20294 ;;  lcd_write_ch    1   17[COMRAM] unsigned char 
 20295 ;; Auto vars:     Size  Location     Type
 20296 ;;  lcd_write_ch    1   19[COMRAM] unsigned char 
 20297 ;;  lcd_write_ch    1   18[COMRAM] unsigned char 
 20298 ;; Return value:  Size  Location     Type
 20299 ;;		None               void
 20300 ;; Registers used:
 20301 ;;		wreg, status,2, status,0, cstack
 20302 ;; Tracked objects:
 20303 ;;		On entry : 0/0
 20304 ;;		On exit  : 0/0
 20305 ;;		Unchanged: 0/0
 20306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20307 ;;      Params:         1       0       0       0       0       0       0       0       0
 20308 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20309 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20310 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20311 ;;Total ram usage:        3 bytes
 20312 ;; Hardware stack levels used:    1
 20313 ;; Hardware stack levels required when called:    4
 20314 ;; This function calls:
 20315 ;;		i1_Lcd_Port
 20316 ;; This function is called by:
 20317 ;;		i1_lcd_putc
 20318 ;; This function uses a non-reentrant model
 20319 ;;
 20320                           
 20321                           	psect	text86
 20322  006500                     __ptext86:
 20323                           	opt stack 0
 20324  006500                     i1_lcd_write_char:
 20325                           	opt stack 15
 20326                           
 20327                           ;lcd.h: 118: char temp,y;
 20328                           ;lcd.h: 119: temp = a&0x0F;
 20329                           
 20330                           ;incstack = 0
 20331                           ;incstack = 0
 20332  006500  5012               	movf	i1lcd_write_char@a,w,c
 20333  006502  0B0F               	andlw	15
 20334  006504  6E13               	movwf	i1lcd_write_char@temp,c
 20335                           
 20336                           ;lcd.h: 120: y = a&0xF0;
 20337  006506  5012               	movf	i1lcd_write_char@a,w,c
 20338  006508  0BF0               	andlw	240
 20339  00650A  6E14               	movwf	i1lcd_write_char@y,c
 20340                           
 20341                           ;lcd.h: 121: RD2 = 1;
 20342  00650C  8483               	bsf	3971,2,c	;volatile
 20343                           
 20344                           ;lcd.h: 122: Lcd_Port(y>>4);
 20345  00650E  3814               	swapf	i1lcd_write_char@y,w,c
 20346  006510  0B0F               	andlw	15
 20347  006512  6E11               	movwf	?i1_Lcd_Port,c
 20348  006514  EC01  F033         	call	i1_Lcd_Port	;wreg free
 20349                           
 20350                           ;lcd.h: 123: RD3 = 1;
 20351  006518  8683               	bsf	3971,3,c	;volatile
 20352                           
 20353                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
 20354  00651A  0E1A               	movlw	26
 20355  00651C                     i1u1197_27:
 20356  00651C  2EE8               	decfsz	wreg,f,c
 20357  00651E  D7FE               	goto	i1u1197_27
 20358  006520  D000               	nop2		;nop
 20359                           
 20360                           ;lcd.h: 125: RD3 = 0;
 20361  006522  9683               	bcf	3971,3,c	;volatile
 20362                           
 20363                           ;lcd.h: 126: Lcd_Port(temp);
 20364  006524  C013  F011         	movff	i1lcd_write_char@temp,?i1_Lcd_Port
 20365  006528  EC01  F033         	call	i1_Lcd_Port	;wreg free
 20366                           
 20367                           ;lcd.h: 127: RD3 = 1;
 20368  00652C  8683               	bsf	3971,3,c	;volatile
 20369                           
 20370                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
 20371  00652E  0E1A               	movlw	26
 20372  006530                     i1u1198_27:
 20373  006530  2EE8               	decfsz	wreg,f,c
 20374  006532  D7FE               	goto	i1u1198_27
 20375  006534  D000               	nop2		;nop
 20376                           
 20377                           ;lcd.h: 129: RD3 = 0;
 20378  006536  9683               	bcf	3971,3,c	;volatile
 20379  006538  0012               	return	
 20380  00653A                     __end_ofi1_lcd_write_char:
 20381                           	opt stack 0
 20382                           pclatu	equ	0xFFB
 20383                           pclath	equ	0xFFA
 20384                           tblptru	equ	0xFF8
 20385                           tblptrh	equ	0xFF7
 20386                           tblptrl	equ	0xFF6
 20387                           tablat	equ	0xFF5
 20388                           prodh	equ	0xFF4
 20389                           prodl	equ	0xFF3
 20390                           intcon	equ	0xFF2
 20391                           postinc0	equ	0xFEE
 20392                           fsr0h	equ	0xFEA
 20393                           fsr0l	equ	0xFE9
 20394                           wreg	equ	0xFE8
 20395                           postdec1	equ	0xFE5
 20396                           fsr1h	equ	0xFE2
 20397                           fsr1l	equ	0xFE1
 20398                           bsr	equ	0xFE0
 20399                           indf2	equ	0xFDF
 20400                           postinc2	equ	0xFDE
 20401                           postdec2	equ	0xFDD
 20402                           fsr2h	equ	0xFDA
 20403                           fsr2l	equ	0xFD9
 20404                           status	equ	0xFD8
 20405                           
 20406 ;; *************** function i1_lcd_gotoxy *****************
 20407 ;; Defined at:
 20408 ;;		line 72 in file "lcd.h"
 20409 ;; Parameters:    Size  Location     Type
 20410 ;;  lcd_gotoxy      1   19[COMRAM] unsigned char 
 20411 ;;  lcd_gotoxy      1   20[COMRAM] unsigned char 
 20412 ;; Auto vars:     Size  Location     Type
 20413 ;;  lcd_gotoxy      1   23[COMRAM] unsigned char 
 20414 ;;  lcd_gotoxy      1   22[COMRAM] unsigned char 
 20415 ;;  lcd_gotoxy      1   21[COMRAM] unsigned char 
 20416 ;; Return value:  Size  Location     Type
 20417 ;;		None               void
 20418 ;; Registers used:
 20419 ;;		wreg, status,2, status,0, cstack
 20420 ;; Tracked objects:
 20421 ;;		On entry : 0/0
 20422 ;;		On exit  : 0/0
 20423 ;;		Unchanged: 0/0
 20424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20425 ;;      Params:         2       0       0       0       0       0       0       0       0
 20426 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20427 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20428 ;;      Totals:         5       0       0       0       0       0       0       0       0
 20429 ;;Total ram usage:        5 bytes
 20430 ;; Hardware stack levels used:    1
 20431 ;; Hardware stack levels required when called:    5
 20432 ;; This function calls:
 20433 ;;		i1_Lcd_Cmd
 20434 ;; This function is called by:
 20435 ;;		i1_Time_Bases
 20436 ;; This function uses a non-reentrant model
 20437 ;;
 20438                           
 20439                           	psect	text87
 20440  005FCC                     __ptext87:
 20441                           	opt stack 0
 20442  005FCC                     i1_lcd_gotoxy:
 20443                           	opt stack 15
 20444                           
 20445                           ;lcd.h: 73: char temp,z,y;
 20446                           ;lcd.h: 74: if(a == 1)
 20447                           
 20448                           ;incstack = 0
 20449                           ;incstack = 0
 20450  005FCC  0414               	decf	i1lcd_gotoxy@a,w,c
 20451  005FCE  A4D8               	btfss	status,2,c
 20452  005FD0  D012               	goto	i1l8994
 20453                           
 20454                           ;lcd.h: 75: {
 20455                           ;lcd.h: 76: temp = 0x80 + b - 1;
 20456  005FD2  5015               	movf	i1lcd_gotoxy@b,w,c
 20457  005FD4  0F7F               	addlw	127
 20458  005FD6  6E18               	movwf	i1lcd_gotoxy@temp,c
 20459                           
 20460                           ;lcd.h: 77: z = temp>>4;
 20461  005FD8  3818               	swapf	i1lcd_gotoxy@temp,w,c
 20462  005FDA  0B0F               	andlw	15
 20463  005FDC  6E16               	movwf	i1lcd_gotoxy@z,c
 20464                           
 20465                           ;lcd.h: 78: y = temp & 0x0F;
 20466  005FDE  5018               	movf	i1lcd_gotoxy@temp,w,c
 20467  005FE0  0B0F               	andlw	15
 20468  005FE2  6E17               	movwf	i1lcd_gotoxy@y,c
 20469                           
 20470                           ;lcd.h: 79: Lcd_Cmd(z);
 20471  005FE4  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 20472  005FE8  EC74  F033         	call	i1_Lcd_Cmd	;wreg free
 20473                           
 20474                           ;lcd.h: 80: Lcd_Cmd(y);
 20475  005FEC  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 20476  005FF0  EC74  F033         	call	i1_Lcd_Cmd	;wreg free
 20477                           
 20478                           ;lcd.h: 81: }
 20479  005FF4  D015               	goto	i1l137
 20480  005FF6                     i1l8994:
 20481                           
 20482                           ;lcd.h: 82: else if(a == 2)
 20483  005FF6  5014               	movf	i1lcd_gotoxy@a,w,c
 20484  005FF8  0A02               	xorlw	2
 20485  005FFA  A4D8               	btfss	status,2,c
 20486  005FFC  D011               	goto	i1l137
 20487                           
 20488                           ;lcd.h: 83: {
 20489                           ;lcd.h: 84: temp = 0xC0 + b - 1;
 20490  005FFE  5015               	movf	i1lcd_gotoxy@b,w,c
 20491  006000  0FBF               	addlw	191
 20492  006002  6E18               	movwf	i1lcd_gotoxy@temp,c
 20493                           
 20494                           ;lcd.h: 85: z = temp>>4;
 20495  006004  3818               	swapf	i1lcd_gotoxy@temp,w,c
 20496  006006  0B0F               	andlw	15
 20497  006008  6E16               	movwf	i1lcd_gotoxy@z,c
 20498                           
 20499                           ;lcd.h: 86: y = temp & 0x0F;
 20500  00600A  5018               	movf	i1lcd_gotoxy@temp,w,c
 20501  00600C  0B0F               	andlw	15
 20502  00600E  6E17               	movwf	i1lcd_gotoxy@y,c
 20503                           
 20504                           ;lcd.h: 87: Lcd_Cmd(z);
 20505  006010  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 20506  006014  EC74  F033         	call	i1_Lcd_Cmd	;wreg free
 20507                           
 20508                           ;lcd.h: 88: Lcd_Cmd(y);
 20509  006018  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 20510  00601C  EC74  F033         	call	i1_Lcd_Cmd	;wreg free
 20511  006020                     i1l137:
 20512  006020  0012               	return	
 20513  006022                     __end_ofi1_lcd_gotoxy:
 20514                           	opt stack 0
 20515                           pclatu	equ	0xFFB
 20516                           pclath	equ	0xFFA
 20517                           tblptru	equ	0xFF8
 20518                           tblptrh	equ	0xFF7
 20519                           tblptrl	equ	0xFF6
 20520                           tablat	equ	0xFF5
 20521                           prodh	equ	0xFF4
 20522                           prodl	equ	0xFF3
 20523                           intcon	equ	0xFF2
 20524                           postinc0	equ	0xFEE
 20525                           fsr0h	equ	0xFEA
 20526                           fsr0l	equ	0xFE9
 20527                           wreg	equ	0xFE8
 20528                           postdec1	equ	0xFE5
 20529                           fsr1h	equ	0xFE2
 20530                           fsr1l	equ	0xFE1
 20531                           bsr	equ	0xFE0
 20532                           indf2	equ	0xFDF
 20533                           postinc2	equ	0xFDE
 20534                           postdec2	equ	0xFDD
 20535                           fsr2h	equ	0xFDA
 20536                           fsr2l	equ	0xFD9
 20537                           status	equ	0xFD8
 20538                           
 20539 ;; *************** function i1_Lcd_Cmd *****************
 20540 ;; Defined at:
 20541 ;;		line 53 in file "lcd.h"
 20542 ;; Parameters:    Size  Location     Type
 20543 ;;  Lcd_Cmd         1   17[COMRAM] unsigned char 
 20544 ;; Auto vars:     Size  Location     Type
 20545 ;;		None
 20546 ;; Return value:  Size  Location     Type
 20547 ;;		None               void
 20548 ;; Registers used:
 20549 ;;		wreg, cstack
 20550 ;; Tracked objects:
 20551 ;;		On entry : 0/0
 20552 ;;		On exit  : 0/0
 20553 ;;		Unchanged: 0/0
 20554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20555 ;;      Params:         1       0       0       0       0       0       0       0       0
 20556 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20557 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20558 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20559 ;;Total ram usage:        2 bytes
 20560 ;; Hardware stack levels used:    1
 20561 ;; Hardware stack levels required when called:    4
 20562 ;; This function calls:
 20563 ;;		i1_Lcd_Port
 20564 ;; This function is called by:
 20565 ;;		i1_lcd_gotoxy
 20566 ;; This function uses a non-reentrant model
 20567 ;;
 20568                           
 20569                           	psect	text88
 20570  0066E8                     __ptext88:
 20571                           	opt stack 0
 20572  0066E8                     i1_Lcd_Cmd:
 20573                           	opt stack 15
 20574                           
 20575                           ;lcd.h: 54: RD2 = 0;
 20576                           
 20577                           ;incstack = 0
 20578                           ;incstack = 0
 20579  0066E8  9483               	bcf	3971,2,c	;volatile
 20580                           
 20581                           ;lcd.h: 55: Lcd_Port(a);
 20582  0066EA  C012  F011         	movff	i1Lcd_Cmd@a,?i1_Lcd_Port
 20583  0066EE  EC01  F033         	call	i1_Lcd_Port	;wreg free
 20584                           
 20585                           ;lcd.h: 56: RD3 = 1;
 20586  0066F2  8683               	bsf	3971,3,c	;volatile
 20587                           
 20588                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 20589  0066F4  0E0B               	movlw	11
 20590  0066F6  6E13               	movwf	??i1_Lcd_Cmd& (0+255),c
 20591  0066F8  0E62               	movlw	98
 20592  0066FA                     i1u1199_27:
 20593  0066FA  2EE8               	decfsz	wreg,f,c
 20594  0066FC  D7FE               	goto	i1u1199_27
 20595  0066FE  2E13               	decfsz	??i1_Lcd_Cmd& (0+255),f,c
 20596  006700  D7FC               	goto	i1u1199_27
 20597  006702  F000               	nop	
 20598                           
 20599                           ;lcd.h: 58: RD3 = 0;
 20600  006704  9683               	bcf	3971,3,c	;volatile
 20601  006706  0012               	return	
 20602  006708                     __end_ofi1_Lcd_Cmd:
 20603                           	opt stack 0
 20604                           pclatu	equ	0xFFB
 20605                           pclath	equ	0xFFA
 20606                           tblptru	equ	0xFF8
 20607                           tblptrh	equ	0xFF7
 20608                           tblptrl	equ	0xFF6
 20609                           tablat	equ	0xFF5
 20610                           prodh	equ	0xFF4
 20611                           prodl	equ	0xFF3
 20612                           intcon	equ	0xFF2
 20613                           postinc0	equ	0xFEE
 20614                           fsr0h	equ	0xFEA
 20615                           fsr0l	equ	0xFE9
 20616                           wreg	equ	0xFE8
 20617                           postdec1	equ	0xFE5
 20618                           fsr1h	equ	0xFE2
 20619                           fsr1l	equ	0xFE1
 20620                           bsr	equ	0xFE0
 20621                           indf2	equ	0xFDF
 20622                           postinc2	equ	0xFDE
 20623                           postdec2	equ	0xFDD
 20624                           fsr2h	equ	0xFDA
 20625                           fsr2l	equ	0xFD9
 20626                           status	equ	0xFD8
 20627                           
 20628 ;; *************** function i1_Lcd_Port *****************
 20629 ;; Defined at:
 20630 ;;		line 28 in file "lcd.h"
 20631 ;; Parameters:    Size  Location     Type
 20632 ;;  Lcd_Port        1   16[COMRAM] unsigned char 
 20633 ;; Auto vars:     Size  Location     Type
 20634 ;;		None
 20635 ;; Return value:  Size  Location     Type
 20636 ;;		None               void
 20637 ;; Registers used:
 20638 ;;		None
 20639 ;; Tracked objects:
 20640 ;;		On entry : 0/0
 20641 ;;		On exit  : 0/0
 20642 ;;		Unchanged: 0/0
 20643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20644 ;;      Params:         1       0       0       0       0       0       0       0       0
 20645 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20646 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20647 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20648 ;;Total ram usage:        1 bytes
 20649 ;; Hardware stack levels used:    1
 20650 ;; Hardware stack levels required when called:    3
 20651 ;; This function calls:
 20652 ;;		Nothing
 20653 ;; This function is called by:
 20654 ;;		i1_Lcd_Cmd
 20655 ;;		i1_lcd_write_char
 20656 ;; This function uses a non-reentrant model
 20657 ;;
 20658                           
 20659                           	psect	text89
 20660  006602                     __ptext89:
 20661                           	opt stack 0
 20662  006602                     i1_Lcd_Port:
 20663                           	opt stack 15
 20664                           
 20665                           ;lcd.h: 29: if(a & 1)
 20666                           
 20667                           ;incstack = 0
 20668                           ;incstack = 0
 20669  006602  A011               	btfss	i1Lcd_Port@a,0,c
 20670  006604  D002               	goto	i1l117
 20671                           
 20672                           ;lcd.h: 30: RD4 = 1;
 20673  006606  8883               	bsf	3971,4,c	;volatile
 20674  006608  D001               	goto	i1l118
 20675  00660A                     i1l117:
 20676                           
 20677                           ;lcd.h: 31: else
 20678                           ;lcd.h: 32: RD4 = 0;
 20679  00660A  9883               	bcf	3971,4,c	;volatile
 20680  00660C                     i1l118:
 20681                           
 20682                           ;lcd.h: 34: if(a & 2)
 20683  00660C  A211               	btfss	i1Lcd_Port@a,1,c
 20684  00660E  D002               	goto	i1l119
 20685                           
 20686                           ;lcd.h: 35: RD5 = 1;
 20687  006610  8A83               	bsf	3971,5,c	;volatile
 20688  006612  D001               	goto	i1l120
 20689  006614                     i1l119:
 20690                           
 20691                           ;lcd.h: 36: else
 20692                           ;lcd.h: 37: RD5 = 0;
 20693  006614  9A83               	bcf	3971,5,c	;volatile
 20694  006616                     i1l120:
 20695                           
 20696                           ;lcd.h: 39: if(a & 4)
 20697  006616  A411               	btfss	i1Lcd_Port@a,2,c
 20698  006618  D002               	goto	i1l121
 20699                           
 20700                           ;lcd.h: 40: RD6 = 1;
 20701  00661A  8C83               	bsf	3971,6,c	;volatile
 20702  00661C  D001               	goto	i1l122
 20703  00661E                     i1l121:
 20704                           
 20705                           ;lcd.h: 41: else
 20706                           ;lcd.h: 42: RD6 = 0;
 20707  00661E  9C83               	bcf	3971,6,c	;volatile
 20708  006620                     i1l122:
 20709                           
 20710                           ;lcd.h: 44: if(a & 8)
 20711  006620  A611               	btfss	i1Lcd_Port@a,3,c
 20712  006622  D002               	goto	i1l123
 20713                           
 20714                           ;lcd.h: 45: RD7 = 1;
 20715  006624  8E83               	bsf	3971,7,c	;volatile
 20716  006626  D001               	goto	i1l125
 20717  006628                     i1l123:
 20718                           
 20719                           ;lcd.h: 46: else
 20720                           ;lcd.h: 47: RD7 = 0;
 20721  006628  9E83               	bcf	3971,7,c	;volatile
 20722  00662A                     i1l125:
 20723  00662A  0012               	return	
 20724  00662C                     __end_ofi1_Lcd_Port:
 20725                           	opt stack 0
 20726                           pclatu	equ	0xFFB
 20727                           pclath	equ	0xFFA
 20728                           tblptru	equ	0xFF8
 20729                           tblptrh	equ	0xFF7
 20730                           tblptrl	equ	0xFF6
 20731                           tablat	equ	0xFF5
 20732                           prodh	equ	0xFF4
 20733                           prodl	equ	0xFF3
 20734                           intcon	equ	0xFF2
 20735                           postinc0	equ	0xFEE
 20736                           fsr0h	equ	0xFEA
 20737                           fsr0l	equ	0xFE9
 20738                           wreg	equ	0xFE8
 20739                           postdec1	equ	0xFE5
 20740                           fsr1h	equ	0xFE2
 20741                           fsr1l	equ	0xFE1
 20742                           bsr	equ	0xFE0
 20743                           indf2	equ	0xFDF
 20744                           postinc2	equ	0xFDE
 20745                           postdec2	equ	0xFDD
 20746                           fsr2h	equ	0xFDA
 20747                           fsr2l	equ	0xFD9
 20748                           status	equ	0xFD8
 20749                           
 20750 ;; *************** function _interrupcaoHIGH *****************
 20751 ;; Defined at:
 20752 ;;		line 254 in file "main.c"
 20753 ;; Parameters:    Size  Location     Type
 20754 ;;		None
 20755 ;; Auto vars:     Size  Location     Type
 20756 ;;  esp_server_d    1   15[COMRAM] unsigned char 
 20757 ;; Return value:  Size  Location     Type
 20758 ;;		None               void
 20759 ;; Registers used:
 20760 ;;		wreg, status,2, status,0, cstack
 20761 ;; Tracked objects:
 20762 ;;		On entry : 0/0
 20763 ;;		On exit  : 0/0
 20764 ;;		Unchanged: 0/0
 20765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20766 ;;      Params:         0       0       0       0       0       0       0       0       0
 20767 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20768 ;;      Temps:         14       0       0       0       0       0       0       0       0
 20769 ;;      Totals:        15       0       0       0       0       0       0       0       0
 20770 ;;Total ram usage:       15 bytes
 20771 ;; Hardware stack levels used:    1
 20772 ;; Hardware stack levels required when called:    2
 20773 ;; This function calls:
 20774 ;;		_control_LED
 20775 ;; This function is called by:
 20776 ;;		Interrupt level 2
 20777 ;; This function uses a non-reentrant model
 20778 ;;
 20779                           
 20780                           	psect	intcode
 20781  000008                     __pintcode:
 20782                           	opt stack 0
 20783  000008                     _interrupcaoHIGH:
 20784                           	opt stack 13
 20785                           
 20786                           ;incstack = 0
 20787  000008  CFFA F002          	movff	pclath,??_interrupcaoHIGH
 20788  00000C  CFFB F003          	movff	pclatu,??_interrupcaoHIGH+1
 20789  000010  CFE9 F004          	movff	fsr0l,??_interrupcaoHIGH+2
 20790  000014  ED7D  F02D         	call	int_func,f	;refresh shadow registers
 20791                           pclatu	equ	0xFFB
 20792                           pclath	equ	0xFFA
 20793                           tblptru	equ	0xFF8
 20794                           tblptrh	equ	0xFF7
 20795                           tblptrl	equ	0xFF6
 20796                           tablat	equ	0xFF5
 20797                           prodh	equ	0xFF4
 20798                           prodl	equ	0xFF3
 20799                           intcon	equ	0xFF2
 20800                           postinc0	equ	0xFEE
 20801                           fsr0h	equ	0xFEA
 20802                           fsr0l	equ	0xFE9
 20803                           wreg	equ	0xFE8
 20804                           postdec1	equ	0xFE5
 20805                           fsr1h	equ	0xFE2
 20806                           fsr1l	equ	0xFE1
 20807                           bsr	equ	0xFE0
 20808                           indf2	equ	0xFDF
 20809                           postinc2	equ	0xFDE
 20810                           postdec2	equ	0xFDD
 20811                           fsr2h	equ	0xFDA
 20812                           fsr2l	equ	0xFD9
 20813                           status	equ	0xFD8
 20814                           
 20815                           	psect	intcode_body
 20816  005AFA                     __pintcode_body:
 20817                           	opt stack 13
 20818  005AFA                     int_func:
 20819                           	opt stack 13
 20820  005AFA  0006               	pop		; remove dummy address from shadow register refresh
 20821  005AFC  CFEA F005          	movff	fsr0h,??_interrupcaoHIGH+3
 20822  005B00  CFE1 F006          	movff	fsr1l,??_interrupcaoHIGH+4
 20823  005B04  CFE2 F007          	movff	fsr1h,??_interrupcaoHIGH+5
 20824  005B08  CFD9 F008          	movff	fsr2l,??_interrupcaoHIGH+6
 20825  005B0C  CFDA F009          	movff	fsr2h,??_interrupcaoHIGH+7
 20826  005B10  CFF3 F00A          	movff	prodl,??_interrupcaoHIGH+8
 20827  005B14  CFF4 F00B          	movff	prodh,??_interrupcaoHIGH+9
 20828  005B18  CFF6 F00C          	movff	tblptrl,??_interrupcaoHIGH+10
 20829  005B1C  CFF7 F00D          	movff	tblptrh,??_interrupcaoHIGH+11
 20830  005B20  CFF8 F00E          	movff	tblptru,??_interrupcaoHIGH+12
 20831  005B24  CFF5 F00F          	movff	tablat,??_interrupcaoHIGH+13
 20832  005B28                     
 20833                           ;main.c: 255: char esp_server_data;
 20834                           ;main.c: 256: if (RCIF == 1)
 20835  005B28  AA9E               	btfss	3998,5,c	;volatile
 20836  005B2A  D001               	goto	i2u563_41
 20837  005B2C  D001               	goto	i2u563_40
 20838  005B2E                     i2u563_41:
 20839  005B2E  D008               	goto	i2l241
 20840  005B30                     i2u563_40:
 20841  005B30                     
 20842                           ;main.c: 257: {
 20843                           ;main.c: 258: esp_server_data = RCREG;
 20844  005B30  CFAE F010          	movff	4014,interrupcaoHIGH@esp_server_data	;volatile
 20845  005B34                     
 20846                           ;main.c: 259: control_LED(esp_server_data);
 20847  005B34  C010  F001         	movff	interrupcaoHIGH@esp_server_data,?_control_LED
 20848  005B38  EC16  F033         	call	_control_LED	;wreg free
 20849  005B3C                     
 20850                           ;main.c: 260: RCIF =0 ;
 20851  005B3C  9A9E               	bcf	3998,5,c	;volatile
 20852  005B3E  D000               	goto	i2l241
 20853  005B40                     i2l241:
 20854  005B40  C00F  FFF5         	movff	??_interrupcaoHIGH+13,tablat
 20855  005B44  C00E  FFF8         	movff	??_interrupcaoHIGH+12,tblptru
 20856  005B48  C00D  FFF7         	movff	??_interrupcaoHIGH+11,tblptrh
 20857  005B4C  C00C  FFF6         	movff	??_interrupcaoHIGH+10,tblptrl
 20858  005B50  C00B  FFF4         	movff	??_interrupcaoHIGH+9,prodh
 20859  005B54  C00A  FFF3         	movff	??_interrupcaoHIGH+8,prodl
 20860  005B58  C009  FFDA         	movff	??_interrupcaoHIGH+7,fsr2h
 20861  005B5C  C008  FFD9         	movff	??_interrupcaoHIGH+6,fsr2l
 20862  005B60  C007  FFE2         	movff	??_interrupcaoHIGH+5,fsr1h
 20863  005B64  C006  FFE1         	movff	??_interrupcaoHIGH+4,fsr1l
 20864  005B68  C005  FFEA         	movff	??_interrupcaoHIGH+3,fsr0h
 20865  005B6C  C004  FFE9         	movff	??_interrupcaoHIGH+2,fsr0l
 20866  005B70  C003  FFFB         	movff	??_interrupcaoHIGH+1,pclatu
 20867  005B74  C002  FFFA         	movff	??_interrupcaoHIGH,pclath
 20868  005B78  0011               	retfie		f
 20869  005B7A                     __end_of_interrupcaoHIGH:
 20870                           	opt stack 0
 20871                           pclatu	equ	0xFFB
 20872                           pclath	equ	0xFFA
 20873                           tblptru	equ	0xFF8
 20874                           tblptrh	equ	0xFF7
 20875                           tblptrl	equ	0xFF6
 20876                           tablat	equ	0xFF5
 20877                           prodh	equ	0xFF4
 20878                           prodl	equ	0xFF3
 20879                           intcon	equ	0xFF2
 20880                           postinc0	equ	0xFEE
 20881                           fsr0h	equ	0xFEA
 20882                           fsr0l	equ	0xFE9
 20883                           wreg	equ	0xFE8
 20884                           postdec1	equ	0xFE5
 20885                           fsr1h	equ	0xFE2
 20886                           fsr1l	equ	0xFE1
 20887                           bsr	equ	0xFE0
 20888                           indf2	equ	0xFDF
 20889                           postinc2	equ	0xFDE
 20890                           postdec2	equ	0xFDD
 20891                           fsr2h	equ	0xFDA
 20892                           fsr2l	equ	0xFD9
 20893                           status	equ	0xFD8
 20894                           
 20895 ;; *************** function _control_LED *****************
 20896 ;; Defined at:
 20897 ;;		line 206 in file "main.c"
 20898 ;; Parameters:    Size  Location     Type
 20899 ;;  data            1    0[COMRAM] unsigned char 
 20900 ;; Auto vars:     Size  Location     Type
 20901 ;;		None
 20902 ;; Return value:  Size  Location     Type
 20903 ;;		None               void
 20904 ;; Registers used:
 20905 ;;		wreg, status,2, status,0, cstack
 20906 ;; Tracked objects:
 20907 ;;		On entry : 0/0
 20908 ;;		On exit  : 0/0
 20909 ;;		Unchanged: 0/0
 20910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20911 ;;      Params:         1       0       0       0       0       0       0       0       0
 20912 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20913 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20914 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20915 ;;Total ram usage:        1 bytes
 20916 ;; Hardware stack levels used:    1
 20917 ;; Hardware stack levels required when called:    1
 20918 ;; This function calls:
 20919 ;;		i2_led_off
 20920 ;;		i2_led_on
 20921 ;; This function is called by:
 20922 ;;		_interrupcaoHIGH
 20923 ;; This function uses a non-reentrant model
 20924 ;;
 20925                           
 20926                           	psect	text91
 20927  00662C                     __ptext91:
 20928                           	opt stack 0
 20929  00662C                     _control_LED:
 20930                           	opt stack 13
 20931                           
 20932                           ;main.c: 207: if(data == 174){
 20933                           
 20934                           ;incstack = 0
 20935                           ;incstack = 0
 20936  00662C  5001               	movf	control_LED@data,w,c
 20937  00662E  0AAE               	xorlw	174
 20938  006630  A4D8               	btfss	status,2,c
 20939  006632  D006               	goto	i2l7368
 20940                           
 20941                           ;main.c: 208: led_on();
 20942  006634  ECC0  F033         	call	i2_led_on	;wreg free
 20943                           
 20944                           ;main.c: 209: controlOn = 1;
 20945  006638  0E00               	movlw	0
 20946  00663A  6E4D               	movwf	_controlOn+1,c
 20947  00663C  0E01               	movlw	1
 20948  00663E  D009               	goto	L31
 20949  006640                     i2l7368:
 20950  006640  5001               	movf	control_LED@data,w,c
 20951  006642  0AAA               	xorlw	170
 20952  006644  A4D8               	btfss	status,2,c
 20953  006646  D006               	goto	i2l228
 20954                           
 20955                           ;main.c: 212: led_off();
 20956  006648  ECC3  F033         	call	i2_led_off	;wreg free
 20957                           
 20958                           ;main.c: 213: controlOn = 0;
 20959  00664C  0E00               	movlw	0
 20960  00664E  6E4D               	movwf	_controlOn+1,c
 20961  006650  0E00               	movlw	0
 20962  006652                     L31:
 20963  006652  6E4C               	movwf	_controlOn,c
 20964  006654                     i2l228:
 20965  006654  0012               	return	
 20966  006656                     __end_of_control_LED:
 20967                           	opt stack 0
 20968                           pclatu	equ	0xFFB
 20969                           pclath	equ	0xFFA
 20970                           tblptru	equ	0xFF8
 20971                           tblptrh	equ	0xFF7
 20972                           tblptrl	equ	0xFF6
 20973                           tablat	equ	0xFF5
 20974                           prodh	equ	0xFF4
 20975                           prodl	equ	0xFF3
 20976                           intcon	equ	0xFF2
 20977                           postinc0	equ	0xFEE
 20978                           fsr0h	equ	0xFEA
 20979                           fsr0l	equ	0xFE9
 20980                           wreg	equ	0xFE8
 20981                           postdec1	equ	0xFE5
 20982                           fsr1h	equ	0xFE2
 20983                           fsr1l	equ	0xFE1
 20984                           bsr	equ	0xFE0
 20985                           indf2	equ	0xFDF
 20986                           postinc2	equ	0xFDE
 20987                           postdec2	equ	0xFDD
 20988                           fsr2h	equ	0xFDA
 20989                           fsr2l	equ	0xFD9
 20990                           status	equ	0xFD8
 20991                           
 20992 ;; *************** function i2_led_on *****************
 20993 ;; Defined at:
 20994 ;;		line 184 in file "main.c"
 20995 ;; Parameters:    Size  Location     Type
 20996 ;;		None
 20997 ;; Auto vars:     Size  Location     Type
 20998 ;;		None
 20999 ;; Return value:  Size  Location     Type
 21000 ;;		None               void
 21001 ;; Registers used:
 21002 ;;		wreg, status,2
 21003 ;; Tracked objects:
 21004 ;;		On entry : 0/0
 21005 ;;		On exit  : 0/0
 21006 ;;		Unchanged: 0/0
 21007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21008 ;;      Params:         0       0       0       0       0       0       0       0       0
 21009 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21010 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21011 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21012 ;;Total ram usage:        0 bytes
 21013 ;; Hardware stack levels used:    1
 21014 ;; This function calls:
 21015 ;;		Nothing
 21016 ;; This function is called by:
 21017 ;;		_control_LED
 21018 ;; This function uses a non-reentrant model
 21019 ;;
 21020                           
 21021                           	psect	text92
 21022  006780                     __ptext92:
 21023                           	opt stack 0
 21024  006780                     i2_led_on:
 21025                           	opt stack 13
 21026                           
 21027                           ;main.c: 185: LATB = 0x01;
 21028                           
 21029                           ;incstack = 0
 21030                           ;incstack = 0
 21031  006780  0E01               	movlw	1
 21032  006782  6E8A               	movwf	3978,c	;volatile
 21033  006784  0012               	return	
 21034  006786                     __end_ofi2_led_on:
 21035                           	opt stack 0
 21036                           pclatu	equ	0xFFB
 21037                           pclath	equ	0xFFA
 21038                           tblptru	equ	0xFF8
 21039                           tblptrh	equ	0xFF7
 21040                           tblptrl	equ	0xFF6
 21041                           tablat	equ	0xFF5
 21042                           prodh	equ	0xFF4
 21043                           prodl	equ	0xFF3
 21044                           intcon	equ	0xFF2
 21045                           postinc0	equ	0xFEE
 21046                           fsr0h	equ	0xFEA
 21047                           fsr0l	equ	0xFE9
 21048                           wreg	equ	0xFE8
 21049                           postdec1	equ	0xFE5
 21050                           fsr1h	equ	0xFE2
 21051                           fsr1l	equ	0xFE1
 21052                           bsr	equ	0xFE0
 21053                           indf2	equ	0xFDF
 21054                           postinc2	equ	0xFDE
 21055                           postdec2	equ	0xFDD
 21056                           fsr2h	equ	0xFDA
 21057                           fsr2l	equ	0xFD9
 21058                           status	equ	0xFD8
 21059                           
 21060 ;; *************** function i2_led_off *****************
 21061 ;; Defined at:
 21062 ;;		line 181 in file "main.c"
 21063 ;; Parameters:    Size  Location     Type
 21064 ;;		None
 21065 ;; Auto vars:     Size  Location     Type
 21066 ;;		None
 21067 ;; Return value:  Size  Location     Type
 21068 ;;		None               void
 21069 ;; Registers used:
 21070 ;;		wreg, status,2
 21071 ;; Tracked objects:
 21072 ;;		On entry : 0/0
 21073 ;;		On exit  : 0/0
 21074 ;;		Unchanged: 0/0
 21075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21076 ;;      Params:         0       0       0       0       0       0       0       0       0
 21077 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21078 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21079 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21080 ;;Total ram usage:        0 bytes
 21081 ;; Hardware stack levels used:    1
 21082 ;; This function calls:
 21083 ;;		Nothing
 21084 ;; This function is called by:
 21085 ;;		_control_LED
 21086 ;; This function uses a non-reentrant model
 21087 ;;
 21088                           
 21089                           	psect	text93
 21090  006786                     __ptext93:
 21091                           	opt stack 0
 21092  006786                     i2_led_off:
 21093                           	opt stack 13
 21094                           
 21095                           ;main.c: 182: LATB = 0x00;
 21096                           
 21097                           ;incstack = 0
 21098                           ;incstack = 0
 21099  006786  0E00               	movlw	0
 21100  006788  6E8A               	movwf	3978,c	;volatile
 21101  00678A  0012               	return	
 21102  00678C                     __end_ofi2_led_off:
 21103                           	opt stack 0
 21104                           pclatu	equ	0xFFB
 21105                           pclath	equ	0xFFA
 21106                           tblptru	equ	0xFF8
 21107                           tblptrh	equ	0xFF7
 21108                           tblptrl	equ	0xFF6
 21109                           tablat	equ	0xFF5
 21110                           prodh	equ	0xFF4
 21111                           prodl	equ	0xFF3
 21112                           intcon	equ	0xFF2
 21113                           postinc0	equ	0xFEE
 21114                           fsr0h	equ	0xFEA
 21115                           fsr0l	equ	0xFE9
 21116                           wreg	equ	0xFE8
 21117                           postdec1	equ	0xFE5
 21118                           fsr1h	equ	0xFE2
 21119                           fsr1l	equ	0xFE1
 21120                           bsr	equ	0xFE0
 21121                           indf2	equ	0xFDF
 21122                           postinc2	equ	0xFDE
 21123                           postdec2	equ	0xFDD
 21124                           fsr2h	equ	0xFDA
 21125                           fsr2l	equ	0xFD9
 21126                           status	equ	0xFD8
 21127                           pclatu	equ	0xFFB
 21128                           pclath	equ	0xFFA
 21129                           tblptru	equ	0xFF8
 21130                           tblptrh	equ	0xFF7
 21131                           tblptrl	equ	0xFF6
 21132                           tablat	equ	0xFF5
 21133                           prodh	equ	0xFF4
 21134                           prodl	equ	0xFF3
 21135                           intcon	equ	0xFF2
 21136                           postinc0	equ	0xFEE
 21137                           fsr0h	equ	0xFEA
 21138                           fsr0l	equ	0xFE9
 21139                           wreg	equ	0xFE8
 21140                           postdec1	equ	0xFE5
 21141                           fsr1h	equ	0xFE2
 21142                           fsr1l	equ	0xFE1
 21143                           bsr	equ	0xFE0
 21144                           indf2	equ	0xFDF
 21145                           postinc2	equ	0xFDE
 21146                           postdec2	equ	0xFDD
 21147                           fsr2h	equ	0xFDA
 21148                           fsr2l	equ	0xFD9
 21149                           status	equ	0xFD8
 21150                           
 21151                           	psect	rparam
 21152  0000                     pclatu	equ	0xFFB
 21153                           pclath	equ	0xFFA
 21154                           tblptru	equ	0xFF8
 21155                           tblptrh	equ	0xFF7
 21156                           tblptrl	equ	0xFF6
 21157                           tablat	equ	0xFF5
 21158                           prodh	equ	0xFF4
 21159                           prodl	equ	0xFF3
 21160                           intcon	equ	0xFF2
 21161                           postinc0	equ	0xFEE
 21162                           fsr0h	equ	0xFEA
 21163                           fsr0l	equ	0xFE9
 21164                           wreg	equ	0xFE8
 21165                           postdec1	equ	0xFE5
 21166                           fsr1h	equ	0xFE2
 21167                           fsr1l	equ	0xFE1
 21168                           bsr	equ	0xFE0
 21169                           indf2	equ	0xFDF
 21170                           postinc2	equ	0xFDE
 21171                           postdec2	equ	0xFDD
 21172                           fsr2h	equ	0xFDA
 21173                           fsr2l	equ	0xFD9
 21174                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    118
    Data        4
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      79
    BANK0           160     82      89
    BANK1           256    129     171
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?___ftsub	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___asftsub	float  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?__tdiv_to_l_	unsigned long  size(2) Largest target is 0

    ?__div_to_l_	unsigned long  size(2) Largest target is 0

    ?___asftadd	float  size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 0

    ?_scale	float  size(2) Largest target is 0

    ?_fround	float  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awmod	int  size(2) Largest target is 0

    ?_Read_LDR	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?_Obtener_Distancia	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 4
		 -> USART_Init@baud_rate(BANK1[4]), 

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___altoft	float  size(2) Largest target is 0

    ?_check_movement	void  size(2) Largest target is 0

    ?_check_light	void  size(2) Largest target is 0

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK1[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S712$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupcaoLOW in COMRAM

    i1_check_light->i1___ftge
    i1_Time_Bases->i1_Read_LDR
    i1_sprintf->i1_fround
    i1_sprintf->i1_scale
    i1___lltoft->i1___ftpack
    i1___llmod->i1___lldiv
    i1___fttol->i1___wmul
    i1___asftsub->i1___ftsub
    i1___ftsub->i1___ftadd
    i1___asftmul->i1___ftmul
    i1___asftadd->i1_fround
    i1___ftadd->i1___ftpack
    i1_scale->i1___ftmul
    i1___wmul->i1___awdiv
    i1___awdiv->i1___awmod
    i1_fround->i1___ftmul
    i1_Read_LDR->i1___ftmul
    i1___ftmul->i1___fttol
    i1___ftdiv->i1___ftmul
    i1___awtoft->i1___ftpack
    i1_Obtener_Distancia->i1___lwdiv
    i1_lcd_putc->i1_lcd_write_char
    i1_lcd_write_char->i1_Lcd_Port
    i1_lcd_gotoxy->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _interrupcaoHIGH->_control_LED

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcaoLOW in BANK0

    i1_mainLoop->i1_Time_Bases
    i1_Time_Bases->i1_sprintf
    i1_sprintf->i1___asftadd
    i1___asftadd->i1_fround
    i1_Read_LDR->i1___ftdiv

Critical Paths under _main in BANK1

    _mainLoop->_Time_Bases
    _check_light->___ftge
    _Time_Bases->_sprintf
    _Obtener_Distancia->___lwdiv
    _sprintf->___asftsub
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___asftadd->___ftadd
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    _Read_LDR->___ftdiv
    ___awtoft->___ftpack
    ___ftmul->___wmul
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_gotoxy->_Lcd_Cmd
    _USART_Init->___ftadd
    ___fttol->_scale
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___altoft->___ftpack
    _lcd_init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcaoLOW in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcaoLOW in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcaoLOW in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcaoLOW in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcaoLOW in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcaoLOW in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcaoLOW in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24854
                           _lcd_init
            _Configuracion_Registros
                        _Timer1_Init
                        _Timer0_Init
                            _Init_AD
                         _USART_Init
                 _inicioInterrupcoes
                           _mainLoop
 ---------------------------------------------------------------------------------
 (1) _mainLoop                                             0     0      0   21470
                         _Time_Bases
                        _check_light
                     _check_movement
                                _FSM
 ---------------------------------------------------------------------------------
 (2) _FSM                                                  0     0      0       0
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (3) _led_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_movement                                       2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_light                                          3     0      3     198
                                              9 BANK1      3     0      3
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _Time_Bases                                           2     2      0   21272
                                            127 BANK1      2     2      0
                         _lcd_gotoxy
                           _lcd_putc
                           _Read_LDR
                            _sprintf
                  _Obtener_Distancia
 ---------------------------------------------------------------------------------
 (3) _Obtener_Distancia                                    8     6      2     414
                                              8 BANK1      8     6      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     241
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             50    43      7   17881
                                             81 BANK1     46    39      7
                             _fround
                              _scale
                            _isdigit
                        __tdiv_to_l_
                         __div_to_l_
                          ___asftadd
                          ___asftmul
                            ___ftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     232
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4     414
                                              8 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     159
                                             14 BANK1     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     241
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      65
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     198
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (4) ___asftsub                                            5     0      5    1695
                                             76 BANK1      5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    1602
                                             70 BANK1      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___asftmul                                            5     0      5     893
                                             39 BANK1      5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___asftadd                                            5     0      5    1630
                                             70 BANK1      5     0      5
                             _fround (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          13     7      6     758
                                              0 BANK1     13     7      6
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17    11      6     454
                                              0 BANK1     17    11      6
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     2      1      99
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (4) _scale                                               15    12      3    2617
                                             39 BANK1     12     9      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _fround                                              18    15      3    2338
                                             39 BANK1     15    12      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     242
                                             16 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     433
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     445
                                              7 BANK1      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _Read_LDR                                            10     7      3    2048
                                             56 BANK1     10     7      3
                            ___ftdiv
                            ___ftmul
                           ___awtoft
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             5     2      3     445
                                              8 BANK1      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             17    11      6     800
                                             22 BANK1     17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             4     2      2     384
                                              4 BANK1      4     2      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (4) _lcd_write_char                                       3     2      1     254
                                              1 BANK1      3     2      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           5     3      2     545
                                              3 BANK1      5     3      2
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _inicioInterrupcoes                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     7      0    3105
                                             70 BANK1      7     7      0
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     252
                                             51 BANK1     15    11      4
                              _scale (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             17    11      6     732
                                             39 BANK1     17    11      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             14     8      6    1537
                                             56 BANK1     14     8      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4     516
                                              8 BANK1     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     312
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_AD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion_Registros                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     279
                                              3 BANK1      1     1      0
                           _Lcd_Port
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     1      1     155
                                              1 BANK1      2     1      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     0      1     124
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _interrupcaoLOW                                      17    17      0   50726
                                             65 BANK0     17    17      0
                         i1_mainLoop
 ---------------------------------------------------------------------------------
 (9) i1_mainLoop                                           0     0      0   50726
                       i1_Time_Bases
                      i1_check_light
                   i1_check_movement
                              i1_FSM
 ---------------------------------------------------------------------------------
 (10) i1_FSM                                               0     0      0       0
                          i1_led_off
                           i1_led_on
 ---------------------------------------------------------------------------------
 (11) i1_led_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_led_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_check_movement                                    2     0      2       0
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_check_light                                       3     0      3     446
                                             25 COMRAM     3     0      3
                           i1___ftge
 ---------------------------------------------------------------------------------
 (10) i1_Time_Bases                                        2     2      0   50280
                                             63 BANK0      2     2      0
                       i1_lcd_gotoxy
                         i1_lcd_putc
                i1_Obtener_Distancia
                         i1_Read_LDR
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (11) i1_sprintf                                          53    46      7   42519
                                             17 BANK0     46    39      7
                           i1_fround
                            i1_scale
                        i1___asftadd
                        i1___asftmul
                        i1___asftsub
                          i1___awdiv
                       i1__div_to_l_
                      i1__tdiv_to_l_
                           i1___ftge
                          i1___ftmul
                          i1___ftneg
                          i1___fttol
                          i1_isdigit
                          i1___lldiv
                          i1___llmod
                         i1___lltoft
                          i1___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (12) i1___lwmod                                           6     2      4     521
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i1___lltoft                                          9     5      4     904
                                             24 COMRAM     9     5      4
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (12) i1___llmod                                          10     2      8     521
                                             30 COMRAM    10     2      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___lldiv                                          14     6      8     527
                                             16 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (12) i1_isdigit                                           3     2      1     223
                                             16 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (12) i1___fttol                                          15    11      4     823
                                             38 COMRAM    15    11      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___ftneg                                           3     0      3     148
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (11) i1___ftge                                            9     3      6     446
                                             16 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (12) i1__tdiv_to_l_                                      17    11      6     983
                                             16 COMRAM    17    11      6
 ---------------------------------------------------------------------------------
 (12) i1__div_to_l_                                       13     7      6    1409
                                             16 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (12) i1___asftsub                                         5     0      5    3799
                                             44 COMRAM     5     0      5
                          i1___ftsub
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___ftsub                                           6     0      6    3580
                                             38 COMRAM     6     0      6
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (12) i1___asftmul                                         5     0      5    2001
                                              0 BANK0      5     0      5
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (12) i1___asftadd                                         5     0      5    3651
                                             12 BANK0      5     0      5
                           i1_fround (ARG)
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (14) i1___ftadd                                          14     8      6    3432
                                             24 COMRAM    14     8      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (12) i1_scale                                            21    18      3    6161
                                             70 COMRAM     3     0      3
                                              0 BANK0      9     9      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                          i1___fttol (ARG)
                           i1___wmul
 ---------------------------------------------------------------------------------
 (12) i1___wmul                                            6     2      4     517
                                             32 COMRAM     6     2      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___awmod                                           7     3      4     969
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i1___awdiv                                           9     5      4     977
                                             23 COMRAM     9     5      4
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (12) i1_fround                                           27    24      3    5369
                                             70 COMRAM     3     0      3
                                              0 BANK0     12    12      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) i1_Read_LDR                                         10     7      3    4720
                                             70 COMRAM     3     0      3
                                             17 BANK0      7     7      0
                         i1___awtoft
                          i1___ftdiv
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (12) i1___ftmul                                          17    11      6    1737
                                             53 COMRAM    17    11      6
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack
                          i1___fttol (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___ftdiv                                          17    11      6    1815
                                              0 BANK0     17    11      6
                         i1___ftpack
                          i1___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___ftpack                                          8     3      5     679
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (12) i1___awtoft                                          5     2      3     977
                                             24 COMRAM     5     2      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (11) i1_Obtener_Distancia                                 8     6      2     904
                                             24 COMRAM     8     6      2
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (12) i1___lwdiv                                           8     4      4     527
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) i1_lcd_putc                                          4     2      2     884
                                             20 COMRAM     4     2      2
                   i1_lcd_write_char
 ---------------------------------------------------------------------------------
 (12) i1_lcd_write_char                                    3     2      1     588
                                             17 COMRAM     3     2      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (11) i1_lcd_gotoxy                                        5     3      2    1253
                                             19 COMRAM     5     3      2
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (12) i1_Lcd_Cmd                                           2     1      1     365
                                             17 COMRAM     2     1      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (13) i1_Lcd_Port                                          1     0      1     292
                                             16 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (16) _interrupcaoHIGH                                    15    15      0      45
                                              1 COMRAM    15    15      0
                        _control_LED
 ---------------------------------------------------------------------------------
 (17) _control_LED                                         1     0      1      30
                                              0 COMRAM     1     0      1
                          i2_led_off
                           i2_led_on
 ---------------------------------------------------------------------------------
 (18) i2_led_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_led_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _Lcd_Port
     _Lcd_Cmd
       _Lcd_Port
   _Configuracion_Registros
   _Timer1_Init
   _Timer0_Init
   _Init_AD
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fttol
       _scale (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _inicioInterrupcoes
   _mainLoop
     _Time_Bases
       _lcd_gotoxy
         _Lcd_Cmd
           _Lcd_Port
       _lcd_putc
         _lcd_write_char
           _Lcd_Port
       _Read_LDR
         ___ftdiv
           ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awtoft
           ___ftpack
       _sprintf
         _fround
           ___ftmul
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale
           ___ftmul
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         __tdiv_to_l_
         __div_to_l_
         ___asftadd
           _fround (ARG)
             ___ftmul
               ___ftpack
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___asftmul
           ___ftmul
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___asftsub
           ___ftsub
             ___ftadd
               ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___awdiv
           ___awmod (ARG)
         ___ftge
         ___ftneg
         ___fttol
           _scale (ARG)
             ___ftmul
               ___ftpack
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___lwmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _Obtener_Distancia
         ___lwdiv
     _check_light
       ___ftge
     _check_movement
     _FSM
       _led_off
       _led_on

 _interrupcaoLOW (ROOT)
   i1_mainLoop
     i1_Time_Bases
       i1_lcd_gotoxy
         i1_Lcd_Cmd
           i1_Lcd_Port
       i1_lcd_putc
         i1_lcd_write_char
           i1_Lcd_Port
       i1_Obtener_Distancia
         i1___lwdiv
       i1_Read_LDR
         i1___awtoft
           i1___ftpack
         i1___ftdiv
           i1___ftpack
           i1___ftmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
         i1___ftmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
       i1_sprintf
         i1_fround
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1_scale
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___asftadd
           i1_fround (ARG)
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftadd (ARG)
             i1___ftpack
         i1___asftmul
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
         i1___asftsub
           i1___ftsub
             i1___ftadd
               i1___ftpack
           i1___lltoft (ARG)
             i1___ftpack
         i1___awdiv
           i1___awmod (ARG)
         i1__div_to_l_
         i1__tdiv_to_l_
         i1___ftge
         i1___ftmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___ftneg
         i1___fttol
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1_isdigit
         i1___lldiv
         i1___llmod
           i1___lldiv (ARG)
         i1___lltoft
           i1___ftpack
         i1___lwmod
         i1___wmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
     i1_check_light
       i1___ftge
     i1_check_movement
     i1_FSM
       i1_led_off
       i1_led_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     81      AB       7       66.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      59       5       55.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      4F       1       83.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      23       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     153      20        0.0%
DATA                 0      0     176       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Jun 10 02:06:53 2022

              _inicioInterrupcoes 6758                      ___asftadd@f2 0148  
                    ___altoft@exp 0110                        i1___awtoft 61D8  
                      i1___ftpack 54E4                     ___asftadd@f1p 0146  
          __end_of_interrupcaoLOW 00A6                       i1___asftadd 6416  
           __size_ofi1__div_to_l_ 00F4                     ___altoft@sign 0111  
                      i1___lltoft 5EB0         __end_of_Obtener_Distancia 564A  
                              _GO 007E11                       i1___asftmul 63DA  
                     i1___asftsub 639E                      ___awdiv@sign 010D  
                              bsr 000FE0               ___wmul@multiplicand 0112  
                     __CFG_BORV$3 000000                  i1___wmul@product 0025  
                    ___asftmul@f2 0129           __end_of_interrupcaoHIGH 5B7A  
                    __CFG_CP0$OFF 000000                      ___asftsub@f2 014E  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                      ___ftadd@exp1 0145  
                    ___ftadd@exp2 0144               ?_inicioInterrupcoes 0001  
                    ___ftadd@sign 0143                               l120 64A8  
                             l121 64B4                               l122 64B6  
                             l123 64C2                               l125 64C4  
                             l117 6498                               l118 649A  
                             l222 5BF6                               l119 64A6  
                             l137 59E8                               l250 55A8  
                             l253 55AE                               l192 46FE  
                             l257 562A                               l266 4DF4  
                             l296 2A26                               l368 10FC  
                             l802 39B0                               l811 4F82  
                             l716 45B8                               l753 3292  
                             l817 3BAE                               l754 3530  
                             l675 3D82                               l827 647E  
                             l684 3D72                               l757 32D4  
                             l837 445E                               l677 3C5C  
                             l950 5796                               l759 330E  
                             l768 3420                               l960 5A6A  
                             l777 3458                               l785 4116  
                             l793 39C0                               l881 4D7C  
                    i1___ftadd@f1 0019                      i1___ftadd@f2 001C  
                             l787 4078                               l891 54D2  
                             l788 40DA                               l796 391C  
                    __CFG_CPB$OFF 000000                               _RD2 007C1A  
                             _RD3 007C1B                               _RD4 007C1C  
                             _RD5 007C1D                               _RD6 007C1E  
                             _RD7 007C1F                               _FSM 5B7A  
                    __CFG_CPD$OFF 000000                      i1___ftge@ff1 0011  
                    i1___ftge@ff2 0014                      __CFG_BOR$OFF 000000  
                    i1___ftdiv@f1 0060                      i1___ftdiv@f2 0063  
                    i1___ftdiv@f3 006D                      ___awmod@sign 0106  
      i1Obtener_Distancia@Timer_1 001B                      i1___ftneg@f1 0011  
                             wreg 000FE8                      i1___awtoft@c 0019  
                    __CFG_FOSC$HS 000000                     ___asftmul@f1p 0127  
                     _sprintf$723 0161                      i1___ftmul@f1 0036  
                    i1___ftmul@f2 0039                        i1_lcd_putc 6570  
                   ___asftsub@f1p 014C                       lcd_gotoxy@a 0103  
                     lcd_gotoxy@b 0104                      i1___ftsub@f1 0027  
                    i1___ftsub@f2 002A                      i1___fttol@f1 0027  
                     lcd_gotoxy@y 0106                       lcd_gotoxy@z 0105  
                      i1_mainLoop 6194                      ?_control_LED 0001  
                    __CFG_LVP$OFF 000000                              ?_FSM 0001  
                    ___ftdiv@cntr 0132                      ___ftdiv@sign 0137  
                    __CFG_WDT$OFF 000000                      i1___lltoft@c 0019  
                            _ADIE 007CEE                              _ADIP 007CFE  
                            l8900 5430                              _ADON 007E10  
                            l8902 544A                              l8904 5452  
                            l8834 4324                              l8852 43BE  
                            l8908 54B6                              l8870 444E  
                            l8862 4402                              l8864 441C  
                            l8856 43DC                              l8866 4424  
                            STR_1 0888                              STR_2 0876  
                            _GIEH 007F97                              _GIEL 007F96  
                            _LATB 000F8A                              _IPEN 007E87  
                            _RCIE 007CED                              _RCIF 007CF5  
                            u7310 430C                              u7330 4350  
                            u7315 4302                              _RCIP 007CFD  
                            u7335 4346                              u7360 43E6  
                            u9604 4DE4                              u9605 4DDE  
                            u9710 0BA4                              u9715 0B98  
                            u9594 4DC2                              u9595 4DBC  
                            u9695 0B28                              _TMR1 000FCE  
                  _check_movement 65A6                   lcd_write_char@a 0101  
                 lcd_write_char@y 0103            __end_of_lcd_write_char 6074  
      Obtener_Distancia@Distancia 010C              ??_inicioInterrupcoes 0100  
               i1___lldiv@divisor 0015                              _main 6656  
                    ___ftpack@arg 0100                      ___ftpack@exp 0103  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                 i1___lldiv@counter 001E  
                            pclat 000FFA                     i1___ftdiv@exp 006C  
                            prodh 000FF4                              prodl 000FF3  
                            start 00A6                      i1__div_to_l_ 4F84  
                   __CFG_IESO$OFF 000000                   __end_ofi1_scale 2E78  
                    _sprintf$1356 015E                   __end_of_Lcd_Cmd 66E8  
                   __CFG_MCLRE$ON 000000            __size_ofi1_check_light 003C  
                    ___ftmul@cntr 0125                      ___ftmul@sign 0126  
                   i1___ftmul@exp 0041                   __end_of_Init_AD 6732  
                           ??_FSM 0100                      ___fttol@exp1 0141  
                    ___fttol@lval 013D                   ?_interrupcaoLOW 0001  
                  i1___asftadd@f2 006E                     __CFG_PLLDIV$1 000000  
         i1___ftmul@f3_as_product 0042                    __CFG_CCP2MX$ON 000000  
                           l11000 1662                             l11002 1678  
                           l11004 169C                             l11104 6358  
                           l11120 383A                             l11114 37F6  
                           l11210 3D2A                             l11018 560E  
                           l11052 318A                             l11044 305C  
                           l11230 44AC                             l11310 3390  
                           l11150 394A                             l11134 38B6  
                           l11206 3D0C                             l11240 4554  
                           l11232 44DE                             l11224 447C  
                           l11312 33A6                             l11304 3358  
                           l11160 398E                             l11216 3D50  
                           l11250 45AC                             l11330 3490  
                           l11322 33FC                             l11314 33B6  
                           l10514 5E5C                             l11074 26FC  
                           l11162 39A8                             l11154 3968  
                           l11218 3D6A                             l11170 3BC6  
                           l11244 456A                             l11236 450C  
                           l11228 4496                             l11340 350C  
                           l11324 3412                             l11316 33C4  
                           l11404 3A62                             l11092 29F4  
                           l11068 25EE                             l10540 6676  
                           l11238 453E                             l11262 5390  
                           l11350 3F94                             l10518 5E8C  
                           l11422 3AFE                             l11510 51D2  
                           l11502 519E                             l11086 28DA  
                           l11078 270E                             l10710 09F4  
                           l11264 53AA                             l10456 59A2  
                           l11432 3B62                             l11512 51E4  
                           l11176 3BDC                             l10720 0A80  
                           l10704 09C0                             l10616 465E  
                           l10632 60FA                             l11282 32A0  
                           l11418 3AD2                             l11514 51EC  
                           l11522 5234                             l11506 51B4  
                           l10714 0A4C                             l11602 5722  
                           l11356 3FF0                             l11428 3B36  
                           l11196 3CDA                             l10804 0E7C  
                           l10732 0AE6                             l10724 0A88  
                           l10716 0A6A                             l11604 5734  
                           l10660 5BDC                             l11294 3300  
                           l11470 49C8                             l11526 524C  
                           l11518 5220                             l11550 4F24  
                           l11630 5A56                             l11622 5A08  
                           l10830 0F70                             l10822 0F3A  
                           l10742 0B50                             l10726 0AC4  
                           l11614 5782                             l11606 573C  
                           l10638 65C4                             l10654 5BBE  
                           l11288 32E2                             l11472 49DA  
                           l11464 499C                             l11624 5A1A  
                           l10904 12A0                             l10648 5BA0  
                           l11538 5DA6                             l11490 4A54  
                           l11482 4A28                             l11474 49E2  
                           l11458 497E                             l11546 4EDA  
                           l11570 4CC0                             l11626 5A22  
                           l10922 1336                             l10826 0F66  
                           l10818 0EDA                             l10770 0CD4  
                           l10906 12AE                             l10690 08FC  
                           l11556 4F80                             l11572 4CDA  
                           l10940 13C2                             l10916 1312  
                           l10852 1004                             l10860 1094  
                           l10836 0F8E                             l10844 0FC2  
                           l10684 08D0                             l11398 3A06  
                           l11486 4A3C                             l11582 4D60  
                           l11574 4CE2                             l11590 57CC  
                           l10950 143A                             l10862 10A4  
                           l10838 0FA4                             l10782 0D6E  
                           l10774 0D12                             l10766 0CA0  
                           l10758 0C28                             l10686 08EE  
                           l10678 08AA                             l10598 6172  
                           l10944 1402                             l10936 1394  
                           l10696 093C                             l10962 14D6  
                           l10882 1138                             l10874 1100  
                           l10786 0DA0                             l11588 57B2  
                           l10972 1522                             l10980 154E  
                           l10964 14E4                             l10956 1484  
                           l10868 10C2                             l10982 155A  
                           l10958 1492                             l10886 118A  
                           l10798 0E18                             l10896 1272  
                           l10994 15B2                             l10898 1282  
                           l10988 1582      __size_ofi1_Obtener_Distancia 007E  
                           ?_main 0001                    i1___awdiv@sign 001E  
           __size_ofi1_lcd_gotoxy 0056                   __end_of___awdiv 4A5E  
                 __end_of___ftadd 3532                   __end_of___awmod 5256  
                 __end_of___ftdiv 4118                   __end_of___ftneg 648C  
                 __end_of___lldiv 4D8E         __size_ofi1_lcd_write_char 003A  
                           u10310 37DE                             u10330 3822  
                           u10315 37D4                   __end_of___ftmul 3BB0  
                           u10335 3818                             u10450 3D34  
                           u10380 3972                   ___awdiv@divisor 0109  
                           u10560 3212                             u10800 3FD6  
                 __end_of___llmod 54E4                             u10570 324E  
                 __end_of___ftsub 62A0                             u10820 39EE  
                           u10565 3208                   __end_of___fttol 4460  
                           u10575 3244                             u10840 3A32  
                           u10825 39E4                             u10770 3F7C  
                           u10850 3A48                             u10845 3A28  
                           u10790 3FC0                             u10775 3F72  
                           u10795 3FB6                             u11907 6056  
                           u11917 606A                             u11927 4A7E  
                           u11937 4AA4                             u11947 4ACA  
                           u11957 66DA                             u11897 55A0  
                 __end_of___lwdiv 57A0                    i1___asftmul@f2 0062  
                           i1l120 6616                             i1l121 661E  
                           i1l122 6620                             i1l123 6628  
                           i1l125 662A                             i1l117 660A  
                           i1l118 660C                             i1l222 5C74  
                           i1l119 6614                             i1l137 6020  
                           i1l250 5C82                             i1l253 5C88  
                           i1l237 0060                             i1l192 4824  
                           i1l257 5CDA                   __end_of___lwmod 5A74  
                           i1l266 50DE                             i2l240 5B40  
                           i1l296 2E76                             i1l368 1E96  
                           i2l241 5B40                             i1l802 4936  
                           i1l811 58CA                             i2l228 6654  
                           i1l716 559A                             i1l817 4C82  
                           i1l753 3DEC                             i1l754 3F4E  
                           i1l675 5076                             i1l827 6694  
                           i1l684 5066                             i1l757 3E16  
                           i1l677 4FE2                             i1l837 5334  
                           i1l950 5FC2                             i1l768 3EBA  
                           i1l960 6146                             i1l785 42DE  
                           i1l777 3ED6                             i1l793 4946  
                           i1l881 5AE8                             i1l787 4240  
                           i1l891 5E3A                             i1l788 42A2  
                           i1l796 48E4                   ___awdiv@counter 010C  
                           _RCREG 000FAE                             i1_FSM 5BF8  
                           _RCSTA 000FAB                    i1___asftsub@f2 002F  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                     __CFG_USBDIV$1 000000  
                  i1___ftadd@exp1 0026                    i1___ftadd@exp2 0025  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISD 000F95                    i1___ftadd@sign 0024  
                      i1isdigit@c 0011                     __CFG_PWRT$OFF 000000  
                     ?i1_Lcd_Port 0011                i1__tdiv_to_l_@exp1 0021  
              i1__tdiv_to_l_@cntr 0020                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                        i1scale@scl 0047  
                    ___lltoft@exp 0110                i1__tdiv_to_l_@quot 001C  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
              __size_ofi1_Lcd_Cmd 0020                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                i1___lwmod@dividend 0011  
                   __CFG_WRTC$OFF 000000                   __end_of_led_off 6774  
                   __CFG_WRTD$OFF 000000                    i1___awmod@sign 0017  
              i1___lldiv@dividend 0011                    __CFG_EBTRB$OFF 000000  
                   ___awtoft@sign 010C              __size_of_check_light 0048  
                 __end_of_dpowers 0828            __end_of_check_movement 65D4  
                           _scale 2414                   __end_of_isdigit 6362  
                     ?i1_Read_LDR 0047                     ___ftpack@sign 0104  
                __end_ofi1___ftge 58CC                             tablat 000FF5  
                __end_ofi1___wmul 6500                    i1___ftdiv@cntr 006B  
            i1lcd_write_char@temp 0013                    i1___ftdiv@sign 0070  
                 ?_lcd_write_char 0101                  __end_ofi1_led_on 677A  
                           status 000FD8               i1___wmul@multiplier 0021  
                 __end_of_sprintf 16AA                  __end_ofi2_led_on 6786  
              __size_ofi1___awdiv 0090                __size_ofi1___ftadd 01CC  
              __size_ofi1___awmod 007C                  __end_ofi1_fround 37B2  
              __size_ofi1___ftdiv 01C8                __size_ofi1___ftneg 0026  
              __size_ofi1___lldiv 0086                    __CFG_ICPRT$OFF 000000  
          __size_ofi1__tdiv_to_l_ 0122                __size_ofi1___ftmul 0110  
              __size_ofi1___llmod 006A                __size_ofi1___ftsub 0036  
              __size_ofi1___fttol 00E0                __size_ofi1___lwdiv 0056  
              __size_ofi1___lwmod 0046                    __CFG_PBADEN$ON 000000  
                  i1___ftpack@arg 0011                    i1___ftpack@exp 0014  
                     ?_USART_Init 0001                  __end_of_Lcd_Port 64C6  
                 __initialization 6074                      i1_lcd_gotoxy 5FCC  
              __size_ofi1_led_off 0006                    i1_sprintf$2022 007E  
                    __end_of_main 667C                __size_ofi2_led_off 0006  
                     ?i1___awtoft 0019                       ?i1___ftpack 0011  
                  i1___ftmul@cntr 0045                __size_ofi1_isdigit 0024  
                  i1___ftmul@sign 0046                i1___lldiv@quotient 001A  
       __size_ofi1_check_movement 002E                  __end_of_Read_LDR 4E90  
                     ?i1___lltoft 0019        __size_of_Obtener_Distancia 00AE  
                     i1lcd_putc@a 0015                       i1lcd_putc@i 0017  
                      i1sprintf@c 009E                        i1sprintf@f 0073  
                  i1___fttol@exp1 0035                    i1___fttol@lval 0031  
                ?_interrupcaoHIGH 0001                            ??_main 0181  
                   ___fttol@sign1 013C                __size_ofi1_sprintf 0D6A  
                   __activetblptr 000002                   i1___asftadd@f1p 006C  
                          ?i1_FSM 0001              __size_of__tdiv_to_l_ 0210  
                    i1_scale$2021 0066                     i1_check_light 6362  
                     ?i1_lcd_putc 0015                       ?i1_mainLoop 0001  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                    i1___lltoft@exp 0021  
                 ?_check_movement 0100                  __end_of___altoft 540E  
                ___llmod@dividend 010E                            ?_scale 0127  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                ___awdiv@dividend 0107                  __end_of___awtoft 5DE2  
                __end_of___ftpack 45BA                  __end_of___lltoft 583C  
               i1___llmod@divisor 0023                   i1___asftmul@f1p 0060  
                          i1l9100 5C3C                            i1l9022 657A  
                          i1l9026 6592                            i1l9122 5CCA  
                          i1l9106 5C5A                            i1l9080 65F2  
                          i1l9074 638E                            i1l9094 5C1E  
                          i1l9600 5D10                            i1l9610 5D36  
                          i1l9700 54F4                            i1l9612 5D3A  
                          i1l9620 5D58                            i1l9604 5D1C  
                          i1l9712 5540                            i1l9704 5502  
                          i1l9624 5D66                            i1l9616 5D4E  
                          i1l9608 5D2E                            i1l9714 555E  
                          i1l9706 550C                            i1l9570 591A  
                          i1l9562 58F8                            i1l9636 61F4  
                          i1l9716 5568                            i1l9708 552A  
                          i1l9580 593A                            i1l9572 591E  
                          i1l9556 58E8                            i1l9652 4F9C  
                       ??i1_scale 0060                            i1l9646 4F90  
                          i1l9568 5912                            i1l9584 5944  
                          i1l9760 3E56                            i1l9744 3E24  
                          i1l9672 5012                            i1l9904 586C  
                          i1l9930 4BD8                            i1l9770 3E86  
                          i1l9738 3DFA                            i1l9682 502E  
                          i1l9850 4852                            i1l9914 58C8  
                          i2l7380 5B3C                            i1l9924 4BA0  
                          i1l9588 5952                            i1l9780 3EB4  
                          i1l9772 3E8C                            i1l9692 5056  
                          i1l9908 589C                            i2l7374 5B28  
                          i1l9766 3E74                            i1l9694 5062  
                          i1l9686 503E                            i1l9870 48BC  
                          i2l7368 6640                            i2l7376 5B30  
                          i1l9944 4C0E                            i1l9768 3E7E  
                          i1l9856 487E                            i2l7378 5B34  
                          i1l8994 5FF6                            i1l9954 4C3A  
                          i1l9786 3EF2                            i1l9778 3EAA  
                          i1l9890 490E                            i1l9948 4C1E  
                          i1l9796 3F2A                            i1l9958 4C4A  
                          i1l9886 48FE                            i1l9982 5282  
                          i1l9896 4926                            i1l9898 4932  
               i1___llmod@counter 0028                   i1___asftsub@f1p 002D  
                       ??_Lcd_Cmd 0102                            _TMR1ON 007E68  
                          _TRISA0 007C90                            _TRISC6 007CA6  
                          _TRISC7 007CA7                     i1sprintf@_val 008E  
                   i1sprintf@flag 0093                     i1sprintf@fval 0099  
                       ??_Init_AD 0100                     i1sprintf@prec 009C  
                   ??_Timer0_Init 0100                     ??_Timer1_Init 0100  
                      _Time_Bases 45BA                    __CFG_XINST$OFF 000000  
                __end_of__powers_ 0876               __size_ofi1_Lcd_Port 002A  
               __end_ofi1_Lcd_Cmd 6708                  __end_of_lcd_init 4B74  
                __end_of_lcd_putc 5EB0                            ___ftge 4E90  
                __end_of_mainLoop 6194                            _baseT1 0181  
                          _baseT2 0183                            ___wmul 5F14  
                       ??___awdiv 010B                         ??___ftadd 013E  
                  __CFG_STVREN$ON 000000                         ??___awmod 0104  
                       ??___ftdiv 012D                         ??___ftneg 0103  
                       ??___lldiv 0108                         ??___ftmul 011C  
                       ??___llmod 0116                         ??___ftsub 014C  
                       ??___fttol 0137                         ??___lwdiv 0104  
                       ??___lwmod 0104                            _led_on 6768  
                          _cycles 01A7               __size_ofi1_Read_LDR 00F0  
                          _fround 2E78                            clear_0 607A  
                          clear_1 6086                  ___awdiv@quotient 010E  
                 ___awmod@divisor 0102                   ___awmod@counter 0105  
                       ??_led_off 0100                     i1__tdiv_to_l_ 4826  
           ___ftmul@f3_as_product 0122                 __end_ofi1___awdiv 595C  
               __end_ofi1___ftadd 3F50                 __end_ofi1___awmod 5D70  
               __end_ofi1___ftdiv 42E0                 __end_ofi1___ftneg 66A2  
               __end_ofi1___lldiv 5AFA                 __end_ofi1___ftmul 4C84  
               __end_ofi1___llmod 5E4C                 __end_ofi1___ftsub 6570  
               __end_ofi1___fttol 5336                 __end_ofi1___lwdiv 5FCC  
               __end_ofi1___lwmod 6150                         ??_isdigit 0101  
                  ?i1_check_light 001A                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8               __size_of_USART_Init 00AC  
               __end_ofi1_led_off 6780                         ??_sprintf 0158  
               __end_ofi2_led_off 678C                 __end_ofi1_isdigit 66C6  
              __size_of___asftadd 0042               __size_ofi1___awtoft 0044  
             __size_ofi1___ftpack 00B8      i1Obtener_Distancia@Distancia 001D  
              __size_of___asftmul 0042                __size_of___asftsub 0042  
            __size_of_control_LED 002A               __size_ofi1___lltoft 0064  
        ?_Configuracion_Registros 0001                        __accesstop 0060  
         __end_of__initialization 60B8                        ___altoft@c 0108  
                 i1___awtoft@sign 001D                        ___ftadd@f1 0138  
                      ___ftadd@f2 013B                        ___ftge@ff1 0100  
                      ___ftge@ff2 0103                   i1___ftpack@sign 0015  
               __end_ofi1_sprintf 2414                        ___ftdiv@f1 0127  
                      ___ftdiv@f2 012A                        ___ftdiv@f3 0133  
                      ___ftneg@f1 0100                     __end_ofi1_FSM 5C76  
                      ___awtoft@c 0108                        ___ftmul@f1 0116  
                      ___ftmul@f2 0119                        ___ftsub@f1 0146  
                      ___ftsub@f2 0149                        ___fttol@f1 0133  
                  __pcstackCOMRAM 0001    interrupcaoHIGH@esp_server_data 0010  
                    __pidataBANK1 678C               __size_ofi1_lcd_putc 0036  
             __size_ofi1_mainLoop 0044                        ___lltoft@c 0108  
                    ?i1___asftadd 006C                     __end_of_scale 2A28  
                    ?i1___asftmul 0060                      ?i1___asftsub 002D  
             __end_of_Timer0_Init 671E               __end_of_Timer1_Init 6746  
          Read_LDR@analog_reading 013F                    ?i1__tdiv_to_l_ 0011  
                       ?i1___ftge 0011                         ?i1___wmul 0021  
                i1_lcd_write_char 6500                    lcd_gotoxy@temp 0107  
                      __div_to_l_ 3BB0                           ??i1_FSM 0011  
                   _buttonClicked 004A                         ?i1_led_on 0001  
                       ?i2_led_on 0001                         ?i1_fround 0047  
                     i1sprintf@ap 0089                       i1sprintf@vd 0085  
                     i1sprintf@sp 0071                   i1___fttol@sign1 0030  
                       ?_Lcd_Port 0100                   __div_to_l_@exp1 010C  
                 __div_to_l_@cntr 010B                      sprintf@integ 016B  
                         ??_scale 012A                   __div_to_l_@quot 0107  
                    sprintf@width 0177                        __pbssBANK0 00B2  
                      __pbssBANK1 0181                         ?_Read_LDR 0138  
             i1_Obtener_Distancia 5C76                     __div_to_l_@f1 0100  
                   __div_to_l_@f2 0103                       ?_Time_Bases 0001  
                ??_interrupcaoLOW 00A1                           ?___ftge 0100  
                         ?___wmul 0110                  i1_check_movement 65D4  
                         ?_led_on 0001                         ?___altoft 0108  
               __end_of___asftadd 6324                           ?_fround 0127  
               __end_of___asftmul 62E2                 __end_of___asftsub 625E  
                       ?___awtoft 0108                         ?___ftpack 0100  
            ?i1_Obtener_Distancia 0019                        ??i1___ftge 0017  
                       ?___lltoft 0108                        ??i1___wmul 0025  
                   i1_fround$2020 0066                     i1_fround$2019 0069  
                 ??i1_check_light 001D                i1___llmod@dividend 001F  
                   i1_isdigit$998 0013                           i1l10000 52D6  
                         i1l10010 52FE                           i1l10100 5FB8  
                         i1l10012 530A                           i1l10004 52E6  
                         i1l10014 530E                           i1l10030 66BE  
                         i1l10110 6124                           i1l10040 5A9A  
                         i1l10112 6128                           i1l10018 5324  
                         i1l10042 5AA6                           i1l10052 5ADA  
                         i1l10044 5AAA                           i1l10060 5DF8  
                         i1l10116 613C                           i1l10108 611C  
                         i1l10062 5E04                           i1l10064 5E08  
                         i1l12000 20B6                           i1l11032 005C  
                         i1l10090 5F98                           i1l10074 5EBA  
                         i1l10092 5F9C                           i1l10068 5E2C  
                         i1l10076 5EC6                           i1l12102 41B8  
                         i1l12022 2182                           i1l12014 2114  
              i1___awdiv@dividend 0018                           i1l10088 5F90  
                         i1l12040 2256                           i1l12050 22A2  
                         i1l12042 2264                           i1l12034 2204  
                         i1l12018 2142                           i1l12060 22DA  
                         i1l12036 2212                           i1l12028 21BA  
                         i1l12072 2332                           i1l12080 23E2  
                         i1l12066 2302                           i1l12058 22CE  
                         i1l12082 2406                           i1l11710 3766  
                         i1l11702 368E                           i1l12078 23CC  
                         i1l12096 415C                           i1l11810 18D8  
                         i1l11802 187A                           i1l11732 2C2E  
                         i1l11900 1CE6                           i1l11820 1942  
                         i1l11804 18B6                           i1l11652 61B6  
                         i1l11750 2E48                           i1l11726 2B72  
                         i1l11670 4796                           i1l11744 2D80  
                         i1l11736 2C3C                           i1l11904 1D12  
                         i1l11930 1DB0                           i1l11914 1D3A  
                         i1l11922 1D6E                           i1l11762 16E6  
                         i1l11940 1E3E                           i1l11916 1D50  
                         i1l11908 1D1C                           i1l11860 1B2C  
                         i1l11852 1AD4                           i1l11844 1A6E  
                         i1l11836 1A06                           i1l11764 1704  
                         i1l11756 16C0                           i1l11774 1750  
                         i1l11782 17C8                           i1l11960 1ED2  
                         i1l11952 1E9A                           i1l11864 1B52  
                         i1l11848 1A96                           i1l11792 1840  
                         i1l11768 1712                           i1l11946 1E5C  
                         i1l11938 1E2E                           i1l11882 1C28  
                         i1l11794 185C                           i1l11964 1F24  
                         i1l11876 1BCA                           i1l11788 17FC  
                         i1l11982 2020                           i1l11974 1FF2  
                         i1l11798 1872                        ??i1_led_on 0011  
                         i1l11976 2002                           i1l11896 1C86  
                         i1l11984 202E                           i1l11994 2092  
                      ??i2_led_on 0001                      ??i1_Lcd_Port 0012  
                      ??i1_fround 0060                        _lcd_gotoxy 595C  
 __end_of_Configuracion_Registros 6758                  ??_lcd_write_char 0102  
                      ??_Lcd_Port 0101                      ??i1_Read_LDR 0071  
                       ?_lcd_init 0001                         ?_lcd_putc 0104  
                       ?_mainLoop 0001                    i1sprintf@integ 008B  
                         i1_scale 2A28                        ??_Read_LDR 013B  
                  i1sprintf@width 0097                   __CFG_VREGEN$OFF 000000  
              lcd_write_char@temp 0102                           _Lcd_Cmd 66C6  
     __size_of_inicioInterrupcoes 0010                           _Init_AD 671E  
                    i1fround@prec 0047                      ??_USART_Init 0146  
               __end_of__npowers_ 084F                           __Hparam 0000  
                     _Timer0_Init 6708                        _scale$1355 0130  
                     _Timer1_Init 6732                           __Lparam 0000  
              i1___awdiv@quotient 001F                __end_ofi1_Lcd_Port 662C  
                 __size_of___ftge 00F4                      ??i1___awtoft 001C  
                    ??i1___ftpack 0016                           ___awdiv 4948  
                         ___ftadd 31E6                           ___awmod 5168  
                         ___ftdiv 3F50                           ___ftneg 6452  
                         ___lldiv 4C84                   __size_of___wmul 0062  
                         ___ftmul 39C2                           ___llmod 540E  
                         ___ftsub 625E                           ___fttol 42E0  
                    ??i1___lltoft 001D                           ___lwdiv 56F6  
                         ___lwmod 59EA                   ??i1__tdiv_to_l_ 0017  
                    __psmallconst 0800                        ??___altoft 010C  
                 __size_of_led_on 0006             ??i1_Obtener_Distancia 001B  
                         __pcinit 6074                        ??___awtoft 010B  
                      ??___ftpack 0105                __end_ofi1_Read_LDR 5168  
                 __size_of_fround 036E                           __ramtop 0800  
                      ??___lltoft 010C                           __ptext0 6656  
                         __ptext1 6150                           __ptext2 5B7A  
                         __ptext3 6768                           __ptext4 676E  
                         __ptext5 65A6                           __ptext6 60C2  
                         __ptext7 45BA                           __ptext8 559C  
                         __ptext9 56F6                         _T0CONbits 000FD5  
                         _led_off 676E                      __size_of_FSM 007E  
                       _T1CONbits 000FCD                       ?__div_to_l_ 0100  
                ??_check_movement 0102                    USART_Init@temp 014A  
                         _dpowers 0800                 i1___lwdiv@divisor 0013  
                   ??_check_light 010C                           _isdigit 6324  
               i1___lwdiv@counter 0016                  ___awmod@dividend 0100  
                         _numBase 004E               __size_of_Time_Bases 0146  
                    ??i1_lcd_putc 0017                      ??i1_mainLoop 004A  
              __end_of_USART_Init 56F6                           _sprintf 0894  
                      ??_lcd_init 0103                    __pintcode_body 5AFA  
                      ??_lcd_putc 0106              end_of_initialization 60B8  
                      ??_mainLoop 0181                __end_ofi1___awtoft 621C  
              __end_ofi1___ftpack 559C                __end_ofi1___lltoft 5F14  
                       i1u1118_24 50AC                         i1u1118_25 50A6  
                       i1u1119_24 50CE                         i1u1119_25 50C8  
                       i1u1135_25 191A                         i1u1137_20 1996  
                       i1u1137_25 198A                     __Lmediumconst 0000  
                         int_func 5AFA                         i1u1184_20 4144  
                       i1u1184_25 413A                         i1u1186_20 4188  
                       i1u1186_25 417E                         i1u1187_20 419E  
                       i1u1196_27 5C7A                         i1u1197_27 651C  
                       i1u1198_27 6530                         i1u1199_27 66FA  
                 ___lldiv@divisor 0104                   ___lldiv@counter 010D  
                       _LDR_value 00B2                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                   i1__div_to_l_@f1 0011  
                 i1__div_to_l_@f2 0014                         Lcd_Port@a 0100  
              __end_ofi1_lcd_putc 65A6                    __tdiv_to_l_@f1 0100  
                  __tdiv_to_l_@f2 0103                __end_ofi1_mainLoop 61D8  
           i1___wmul@multiplicand 0023                         i1_Lcd_Cmd 66E8  
                   ??__tdiv_to_l_ 0106                         _PORTAbits 000F80  
            __size_ofi1___asftadd 003C              __size_ofi1___asftmul 003C  
            __size_ofi1___asftsub 003C                     ?i1_Time_Bases 0001  
                     ?_lcd_gotoxy 0103                         i1___awdiv 58CC  
                       i1___ftadd 3D84                         i1___awmod 5CF4  
                       i1___ftdiv 4118                         i1___ftneg 667C  
                       i1___lldiv 5A74                         i1___ftmul 4B74  
                       i1___llmod 5DE2                         i1___ftsub 653A  
                       i1___fttol 5256          __size_of_interrupcaoHIGH 5B72  
                       i1___lwdiv 5F76                         i1___lwmod 610A  
             __end_of_check_light 610A               USART_Init@baud_rate 0146  
                       i1_led_off 677A                       ___ftdiv@exp 0136  
        __end_ofi1_lcd_write_char 653A                         i2_led_off 6786  
                       i1_isdigit 66A2               __size_of__div_to_l_ 01D4  
       Obtener_Distancia@Duracion 010E                       ___ftmul@exp 0121  
                       i1_sprintf 16AA  __size_of_Configuracion_Registros 0012  
                  __end_of___ftge 4F84                    __end_of___wmul 5F76  
                      ?i1_Lcd_Cmd 0012                         _Distancia 00B5  
                  __end_of_led_on 676E                 i1___lwmod@divisor 0013  
                  __end_of_fround 31E6                 i1___lwmod@counter 0016  
                  ??i1_Time_Bases 009F                 __size_ofi1___ftge 0090  
             start_initialization 6074                 __size_ofi1___wmul 003A  
                     __end_of_FSM 5BF8               __end_of__tdiv_to_l_ 39C2  
               __size_ofi1_led_on 0006                    _theresMovement 00B7  
                      ?i1___awdiv 0018                        ?i1___ftadd 0019  
                   i1_sprintf$723 0081                        ?i1___awmod 0011  
                      ?i1___ftdiv 0060                     ??_control_LED 0002  
               __size_ofi2_led_on 0006                        ?i1___ftneg 0011  
                      ?i1___lldiv 0011                        ?i1___ftmul 0036  
                      ?i1___llmod 001F                        ?i1___ftsub 0027  
                      ?i1___fttol 0027                 __size_ofi1_fround 0280  
                      ?i1___lwdiv 0011                        ?i1___lwmod 0011  
                   i1lcd_gotoxy@a 0014                     i1lcd_gotoxy@b 0015  
                   i1lcd_gotoxy@y 0017                     i1lcd_gotoxy@z 0016  
        __end_ofi1_check_movement 6602                 __size_of_Lcd_Port 003A  
                      ?i1_led_off 0001                  i1lcd_gotoxy@temp 0018  
                 ___llmod@divisor 0112                        ?i2_led_off 0001  
                      ?i1_isdigit 0011                   ___llmod@counter 0117  
                   ?i1__div_to_l_ 0011                 __size_of_Read_LDR 0102  
                    ??_Time_Bases 017F                      i1sprintf@exp 0095  
                      ?i1_sprintf 0071                          ??___ftge 0106  
             __size_of_lcd_gotoxy 008E                          ??___wmul 0114  
                   sprintf@vd_725 0167                          ??_led_on 0100  
                     __pdataBANK1 01A7                i1___awmod@dividend 0011  
                __CFG_LPT1OSC$OFF 000000                          ??_fround 012A  
               __size_of___altoft 00D8                        fround@prec 0127  
               __size_of___awtoft 0072                 __size_of___ftpack 015A  
                       ___asftadd 62E2                         ___asftmul 62A0  
                       ___asftsub 621C                 __size_of___lltoft 009C  
                     _check_light 60C2                       __pbssCOMRAM 004A  
     i1Obtener_Distancia@Duracion 001F                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100               __end_of__stringdata 0892  
              __end_of_Time_Bases 4700                 i1lcd_write_char@a 0012  
               i1lcd_write_char@y 0014                          ?i1_scale 0047  
                        ?_Lcd_Cmd 0101                 __size_of_lcd_init 0116  
                     sprintf@_val 016E                       sprintf@flag 0173  
               __size_of_lcd_putc 0064                       sprintf@fval 0179  
                     sprintf@prec 017C                 __size_of_mainLoop 0044  
                  ??i1__div_to_l_ 0017               __end_of_control_LED 6656  
               ??_interrupcaoHIGH 0002                          ?_Init_AD 0001  
                    ?_Timer0_Init 0001                      ?_Timer1_Init 0001  
                ___lwdiv@dividend 0100                     ?i1_lcd_gotoxy 0014  
                       __pintcode 0008                          ?___awdiv 0107  
                        ?___ftadd 0138                          ?___awmod 0100  
                        ?___ftdiv 0127                          ?___ftneg 0100  
                        ?___lldiv 0100                          ?___ftmul 0116  
                        ?___llmod 010E                          ?___ftsub 0146  
                       __npowers_ 0828                          ?___fttol 0133  
                        ?___lwdiv 0100                          ?___lwmod 0100  
                     ??i1_Lcd_Cmd 0013                 i1___awdiv@divisor 001A  
                     __pintcodelo 0018                 i1___awdiv@counter 001D  
                     __tdiv_to_l_ 37B2                          ?_led_off 0001  
                    ??__div_to_l_ 0106                       __smallconst 0800  
                      ?___asftadd 0146                    __size_ofi1_FSM 007E  
                       _controlOn 004C                          ?_isdigit 0100  
                      ?___asftmul 0127                        ?___asftsub 014C  
           __end_ofi1_check_light 639E                       ??i1___awdiv 001C  
                     ??i1___ftadd 001F                       ??i1___awmod 0015  
                     ??i1___ftdiv 0066                       ??i1___ftneg 0014  
                     ??i1___lldiv 0019                       ??i1___ftmul 003C  
                     ??i1___llmod 0027                       ??i1___ftsub 002D  
                     ??i1___fttol 002B                  ___lwdiv@quotient 0106  
                     ??i1___lwdiv 0015                       ??i1___lwmod 0015  
                        ?_sprintf 0151                    __size_of_scale 0614  
      __end_of_inicioInterrupcoes 6768                       ??i1_led_off 0011  
                  ___wmul@product 0114                          _LATAbits 000F89  
                     ??i2_led_off 0001                       ??i1_isdigit 0012  
            __end_ofi1_Time_Bases 4826                    ??i1_lcd_gotoxy 0016  
                        Lcd_Cmd@a 0101                          i1u910_20 4BBE  
                        i1u910_25 4BB6                          i1u911_20 4BCA  
                        i1u903_20 4914                          i1u920_20 52EC  
              __end_of__div_to_l_ 3D84                          i1u915_20 5274  
                        i1u915_25 526C                          i1u908_20 4B92  
                        i1u908_25 4B8A                          i1u861_20 5044  
                        i1u917_20 52A0                          i1u917_25 5298  
                        i1u870_20 3DA2                          i1u870_25 3D9A  
                        i1u871_20 3DC8                          i1u871_25 3DC0  
                        i2u563_40 5B30                          i2u563_41 5B2E  
     __end_ofi1_Obtener_Distancia 5CF4                          i1u896_20 4844  
                        i1u896_25 483C                          i1u898_20 4870  
                        i1u898_25 4868                       ??i1_sprintf 0078  
                __CFG_WDTPS$32768 000000           _Configuracion_Registros 6746  
           __end_ofi1__tdiv_to_l_ 4948                          i1___ftge 583C  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                     __stringdata 0876           __size_of_interrupcaoLOW 008E  
               ___wmul@multiplier 0110                          i1___wmul 64C6  
                 i1sprintf@vd_725 0087                          i1_led_on 6774  
                        i2_led_on 6780                          i1_fround 3532  
                       lcd_putc@a 0104                         lcd_putc@i 0106  
                    ??_lcd_gotoxy 0105                          _Lcd_Port 648C  
                i1__tdiv_to_l_@f1 0011                       _control_LED 662C  
                i1__tdiv_to_l_@f2 0014                         copy_data0 60AC  
                        _Read_LDR 4D8E                  __size_ofi1_scale 0450  
                __size_of_Lcd_Cmd 0022                 ?i1_lcd_write_char 0012  
         __size_of_lcd_write_char 0052                  __size_of_Init_AD 0014  
                        __Hrparam 0000                ??i1_lcd_write_char 0013  
                        __Lrparam 0000                 i1___awmod@divisor 0013  
                   ??i1___asftadd 004A                __end_of_lcd_gotoxy 59EA  
                 control_LED@data 0001                     ??i1___asftmul 0047  
                   ??i1___asftsub 0032                 i1___awmod@counter 0016  
                __size_of___awdiv 0116                  __size_of___ftadd 034C  
                __size_of___awmod 00EE                  __size_of___ftdiv 01C8  
                __size_of___ftneg 003A                  __size_of___lldiv 010A  
                        ___altoft 5336                  __size_of___ftmul 01EE  
                __size_of___llmod 00D6                  __size_of___ftsub 0042  
                __size_of___fttol 0180                  __size_of___lwdiv 00AA  
                __size_of___lwmod 008A                          ___awtoft 5D70  
                        ___ftpack 4460                       _fround$1353 0133  
                     _fround$1354 0130                          ___lltoft 57A0  
                     _isdigit$998 0102              __end_ofi1__div_to_l_ 5078  
                     ??___asftadd 014B                  __size_of_led_off 0006  
                      sprintf@exp 0175                       ??___asftmul 012C  
                     ??___asftsub 0151                  __size_of_isdigit 003E  
                 ___lwdiv@divisor 0102                   ___lwdiv@counter 0105  
                        __ptext10 0894                          __ptext11 59EA  
                        __ptext20 62E2                          __ptext12 57A0  
                        __ptext21 3BB0                          __ptext13 540E  
                        __ptext30 5D70                          __ptext22 37B2  
                        __ptext14 4C84                          __ptext31 39C2  
                        __ptext23 6324                          __ptext15 6452  
                        __ptext40 5336                          __ptext32 5E4C  
                        __ptext24 2414                          __ptext16 4E90  
                        __ptext41 4460                          __ptext33 6022  
                        __ptext25 2E78                          __ptext17 621C  
                        __ptext50 6194                          __ptext42 671E  
                        __ptext34 595C                          __ptext26 5F14  
                        __ptext18 625E                          __ptext51 5BF8  
                        __ptext43 6708                          __ptext35 6758  
                        __ptext27 5168                          __ptext19 62A0  
                        __ptext60 5DE2                          __ptext52 6774  
                        __ptext44 6732                          __ptext36 564A  
                        __ptext28 4948                          __ptext61 5A74  
                        __ptext53 677A                          __ptext45 6746  
                        __ptext37 42E0                          __ptext29 4D8E  
                        __ptext70 63DA                          __ptext62 66A2  
                        __ptext54 65D4                          __ptext46 4A5E  
                        __ptext38 3F50                          __ptext71 6416  
                        __ptext63 5256                          __ptext55 6362  
                        __ptext47 66C6                          __ptext39 31E6  
                        __ptext80 4118                          __ptext72 3D84  
                        __ptext64 667C                          __ptext56 4700  
                        __ptext48 648C                          __ptext81 54E4  
                        __ptext73 2A28                          __ptext65 583C  
                        __ptext57 16AA                          __ptext82 61D8  
                        __ptext74 64C6                          __ptext66 4826  
                        __ptext58 610A                          __ptext91 662C  
                        __ptext83 5C76                          __ptext75 5CF4  
                        __ptext67 4F84                          __ptext59 5EB0  
                        __ptext92 6780                          __ptext84 5F76  
                        __ptext76 58CC                          __ptext68 639E  
                        __ptext93 6786                          __ptext85 6570  
                        __ptext77 3532                          __ptext69 653A  
                        __ptext86 6500                          __ptext78 5078  
                        __ptext87 5FCC                          __ptext79 4B74  
                        __ptext88 66E8                          __ptext89 6602  
                        _isBright 0185                          __powers_ 084F  
                        _lcd_init 4A5E                          _lcd_putc 5E4C  
                        _mainLoop 6150                  __size_of_sprintf 0E16  
               ?i1_check_movement 0011                i1___lwdiv@dividend 0011  
         __size_of_check_movement 002E                     __size_of_main 0026  
              ??i1_check_movement 0013                       i1Lcd_Port@a 0011  
       ??_Configuracion_Registros 0100              __size_of_Timer0_Init 0016  
                      _LCD_Buffer 0187              __size_of_Timer1_Init 0014  
           __CFG_CPUDIV$OSC1_PLL2 000000                i1___lwdiv@quotient 0017  
             __end_ofi1___asftadd 6452               __end_ofi1___asftmul 6416  
             __end_ofi1___asftsub 63DA                        _INTCONbits 000FF2  
                    ?_check_light 0109                 i1__div_to_l_@exp1 001D  
               i1__div_to_l_@cntr 001C                 i1__div_to_l_@quot 0018  
                 _interrupcaoHIGH 0008              __end_ofi1_lcd_gotoxy 6022  
                        isdigit@c 0100                          scale@scl 0127  
                        intlevel1 0000                          intlevel2 0000  
                       sprintf@ap 0169                  __tdiv_to_l_@exp1 0110  
                       sprintf@vd 0165                         sprintf@sp 0151  
                __tdiv_to_l_@cntr 010F             __size_ofi1_Time_Bases 0126  
                __tdiv_to_l_@quot 010B                  ___lwmod@dividend 0100  
                ___lldiv@dividend 0100                        i1Lcd_Cmd@a 0012  
                    ?__tdiv_to_l_ 0100                    _interrupcaoLOW 0018  
               _Obtener_Distancia 559C                          sprintf@c 017E  
                        sprintf@f 0153                  ___lldiv@quotient 0109  
                 ___lwmod@divisor 0102                ?_Obtener_Distancia 0108  
                 ___lwmod@counter 0105                        i1_Lcd_Port 6602  
                    i1_Time_Bases 4700                        i1_Read_LDR 5078  
             ??_Obtener_Distancia 010A          Obtener_Distancia@Timer_1 010A  
                  _lcd_write_char 6022                        _USART_Init 564A  
        i1Read_LDR@analog_reading 0075  
