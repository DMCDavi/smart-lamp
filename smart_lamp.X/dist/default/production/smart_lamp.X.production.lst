

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Jun 10 00:50:01 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	opt stack 0
    98  000800                     _dpowers:
    99                           	opt stack 0
   100  000800  0001               	dw	1
   101  000802  0000               	dw	0
   102  000804  000A               	dw	10
   103  000806  0000               	dw	0
   104  000808  0064               	dw	100
   105  00080A  0000               	dw	0
   106  00080C  03E8               	dw	1000
   107  00080E  0000               	dw	0
   108  000810  2710               	dw	10000
   109  000812  0000               	dw	0
   110  000814  86A0               	dw	34464
   111  000816  0001               	dw	1
   112  000818  4240               	dw	16960
   113  00081A  000F               	dw	15
   114  00081C  9680               	dw	38528
   115  00081E  0098               	dw	152
   116  000820  E100               	dw	57600
   117  000822  05F5               	dw	1525
   118  000824  CA00               	dw	51712
   119  000826  3B9A               	dw	15258
   120  000828                     __end_of_dpowers:
   121                           	opt stack 0
   122  000828                     __npowers_:
   123                           	opt stack 0
   124  000828  00                 	db	0
   125  000829  80                 	db	128
   126  00082A  3F                 	db	63
   127  00082B  CD                 	db	205
   128  00082C  CC                 	db	204
   129  00082D  3D                 	db	61
   130  00082E  D7                 	db	215
   131  00082F  23                 	db	35
   132  000830  3C                 	db	60
   133  000831  12                 	db	18
   134  000832  83                 	db	131
   135  000833  3A                 	db	58
   136  000834  B7                 	db	183
   137  000835  D1                 	db	209
   138  000836  38                 	db	56
   139  000837  C6                 	db	198
   140  000838  27                 	db	39
   141  000839  37                 	db	55
   142  00083A  38                 	db	56
   143  00083B  86                 	db	134
   144  00083C  35                 	db	53
   145  00083D  C0                 	db	192
   146  00083E  D6                 	db	214
   147  00083F  33                 	db	51
   148  000840  CC                 	db	204
   149  000841  2B                 	db	43
   150  000842  32                 	db	50
   151  000843  70                 	db	112
   152  000844  89                 	db	137
   153  000845  30                 	db	48
   154  000846  E7                 	db	231
   155  000847  DB                 	db	219
   156  000848  2E                 	db	46
   157  000849  E5                 	db	229
   158  00084A  3C                 	db	60
   159  00084B  1E                 	db	30
   160  00084C  42                 	db	66
   161  00084D  A2                 	db	162
   162  00084E  0D                 	db	13
   163  00084F                     __end_of__npowers_:
   164                           	opt stack 0
   165  00084F                     __powers_:
   166                           	opt stack 0
   167  00084F  00                 	db	0
   168  000850  80                 	db	128
   169  000851  3F                 	db	63
   170  000852  00                 	db	0
   171  000853  20                 	db	32
   172  000854  41                 	db	65
   173  000855  00                 	db	0
   174  000856  C8                 	db	200
   175  000857  42                 	db	66
   176  000858  00                 	db	0
   177  000859  7A                 	db	122
   178  00085A  44                 	db	68
   179  00085B  40                 	db	64
   180  00085C  1C                 	db	28
   181  00085D  46                 	db	70
   182  00085E  50                 	db	80
   183  00085F  C3                 	db	195
   184  000860  47                 	db	71
   185  000861  24                 	db	36
   186  000862  74                 	db	116
   187  000863  49                 	db	73
   188  000864  97                 	db	151
   189  000865  18                 	db	24
   190  000866  4B                 	db	75
   191  000867  BC                 	db	188
   192  000868  BE                 	db	190
   193  000869  4C                 	db	76
   194  00086A  6B                 	db	107
   195  00086B  6E                 	db	110
   196  00086C  4E                 	db	78
   197  00086D  03                 	db	3
   198  00086E  15                 	db	21
   199  00086F  50                 	db	80
   200  000870  79                 	db	121
   201  000871  AD                 	db	173
   202  000872  60                 	db	96
   203  000873  F3                 	db	243
   204  000874  49                 	db	73
   205  000875  71                 	db	113
   206  000876                     __end_of__powers_:
   207                           	opt stack 0
   208  0000                     _TMR1	set	4046
   209  0000                     _ADCON0	set	4034
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _ADCON1	set	4033
   212  0000                     _ADCON1bits	set	4033
   213  0000                     _ADCON2	set	4032
   214  0000                     _ADRESH	set	4036
   215  0000                     _ADRESL	set	4035
   216  0000                     _LATAbits	set	3977
   217  0000                     _LATB	set	3978
   218  0000                     _PORTAbits	set	3968
   219  0000                     _RCREG	set	4014
   220  0000                     _RCSTA	set	4011
   221  0000                     _SPBRG	set	4015
   222  0000                     _T1CONbits	set	4045
   223  0000                     _TRISA	set	3986
   224  0000                     _TRISB	set	3987
   225  0000                     _TRISD	set	3989
   226  0000                     _ADIE	set	31982
   227  0000                     _ADIP	set	31998
   228  0000                     _ADON	set	32272
   229  0000                     _GIEH	set	32663
   230  0000                     _GIEL	set	32662
   231  0000                     _GO	set	32273
   232  0000                     _IPEN	set	32391
   233  0000                     _RCIE	set	31981
   234  0000                     _RCIF	set	31989
   235  0000                     _RCIP	set	31997
   236  0000                     _RD2	set	31770
   237  0000                     _RD3	set	31771
   238  0000                     _RD4	set	31772
   239  0000                     _RD5	set	31773
   240  0000                     _RD6	set	31774
   241  0000                     _RD7	set	31775
   242  0000                     _TMR0IE	set	32661
   243  0000                     _TMR0IP	set	32650
   244  0000                     _TMR1ON	set	32360
   245  0000                     _TRISA0	set	31888
   246  0000                     _TRISC6	set	31910
   247  0000                     _TRISC7	set	31911
   248  000876                     __stringdata:
   249                           	opt stack 0
   250  000876                     STR_2:
   251  000876  44                 	db	68	;'D'
   252  000877  69                 	db	105	;'i'
   253  000878  73                 	db	115	;'s'
   254  000879  74                 	db	116	;'t'
   255  00087A  61                 	db	97	;'a'
   256  00087B  6E                 	db	110	;'n'
   257  00087C  63                 	db	99	;'c'
   258  00087D  69                 	db	105	;'i'
   259  00087E  61                 	db	97	;'a'
   260  00087F  3A                 	db	58	;':'
   261  000880  20                 	db	32
   262  000881  25                 	db	37
   263  000882  30                 	db	48	;'0'
   264  000883  33                 	db	51	;'3'
   265  000884  64                 	db	100	;'d'
   266  000885  63                 	db	99	;'c'
   267  000886  6D                 	db	109	;'m'
   268  000887  00                 	db	0
   269  000888                     STR_1:
   270  000888  4C                 	db	76	;'L'
   271  000889  44                 	db	68	;'D'
   272  00088A  52                 	db	82	;'R'
   273  00088B  3A                 	db	58	;':'
   274  00088C  20                 	db	32
   275  00088D  25                 	db	37
   276  00088E  2E                 	db	46
   277  00088F  32                 	db	50	;'2'
   278  000890  66                 	db	102	;'f'
   279  000891  00                 	db	0
   280  000892                     __end_of__stringdata:
   281                           	opt stack 0
   282                           
   283                           ; #config settings
   284  000892  00                 	db	0	; dummy byte at the end
   285  0000                     
   286                           	psect	cinit
   287  00626A                     __pcinit:
   288                           	opt stack 0
   289  00626A                     start_initialization:
   290                           	opt stack 0
   291  00626A                     __initialization:
   292                           	opt stack 0
   293                           
   294                           ; Clear objects allocated to BANK1 (37 bytes)
   295  00626A  EE01  F081         	lfsr	0,__pbssBANK1
   296  00626E  0E25               	movlw	37
   297  006270                     clear_0:
   298  006270  6AEE               	clrf	postinc0,c
   299  006272  06E8               	decf	wreg,f,c
   300  006274  E1FD               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to COMRAM (6 bytes)
   303  006276  6A4F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   304  006278  6A4E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   305  00627A  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   306  00627C  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   307  00627E  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   308  006280  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   309  006282                     end_of_initialization:
   310                           	opt stack 0
   311  006282                     __end_of__initialization:
   312                           	opt stack 0
   313  006282  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314  006284  6EF8               	movwf	tblptru,c
   315  006286  0100               	movlb	0
   316  006288  EF84  F024         	goto	_main	;jump to C main() function
   317                           tblptru	equ	0xFF8
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           
   321                           	psect	bssCOMRAM
   322  00004A                     __pbssCOMRAM:
   323                           	opt stack 0
   324  00004A                     _contControl:
   325                           	opt stack 0
   326  00004A                     	ds	2
   327  00004C                     _isBright:
   328                           	opt stack 0
   329  00004C                     	ds	2
   330  00004E                     _theresMovement:
   331                           	opt stack 0
   332  00004E                     	ds	2
   333                           tblptru	equ	0xFF8
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           
   337                           	psect	bssBANK1
   338  000181                     __pbssBANK1:
   339                           	opt stack 0
   340  000181                     _LDR_value:
   341                           	opt stack 0
   342  000181                     	ds	3
   343  000184                     _Distancia:
   344                           	opt stack 0
   345  000184                     	ds	2
   346  000186                     _LCD_Buffer:
   347                           	opt stack 0
   348  000186                     	ds	32
   349                           tblptru	equ	0xFF8
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           
   353                           	psect	cstackBANK1
   354  000100                     __pcstackBANK1:
   355                           	opt stack 0
   356  000100                     ?_isdigit:
   357                           	opt stack 0
   358  000100                     ?_Lcd_Port:
   359                           	opt stack 0
   360  000100                     ?___ftge:
   361                           	opt stack 0
   362  000100                     ?___awmod:
   363                           	opt stack 0
   364  000100                     ?___lwdiv:
   365                           	opt stack 0
   366  000100                     ?___lwmod:
   367                           	opt stack 0
   368  000100                     ?___ftpack:
   369                           	opt stack 0
   370  000100                     ?___ftneg:
   371                           	opt stack 0
   372  000100                     ?__tdiv_to_l_:
   373                           	opt stack 0
   374  000100                     ?__div_to_l_:
   375                           	opt stack 0
   376  000100                     ?___lldiv:
   377                           	opt stack 0
   378  000100                     Lcd_Port@a:
   379                           	opt stack 0
   380  000100                     isdigit@c:
   381                           	opt stack 0
   382  000100                     ___awmod@dividend:
   383                           	opt stack 0
   384  000100                     ___lwdiv@dividend:
   385                           	opt stack 0
   386  000100                     ___lwmod@dividend:
   387                           	opt stack 0
   388  000100                     __div_to_l_@f1:
   389                           	opt stack 0
   390  000100                     ___ftpack@arg:
   391                           	opt stack 0
   392  000100                     __tdiv_to_l_@f1:
   393                           	opt stack 0
   394  000100                     ___ftge@ff1:
   395                           	opt stack 0
   396  000100                     ___ftneg@f1:
   397                           	opt stack 0
   398  000100                     ___lldiv@dividend:
   399                           	opt stack 0
   400                           
   401                           ; 4 bytes @ 0x0
   402  000100                     	ds	1
   403  000101                     ??_isdigit:
   404  000101                     ?_Lcd_Cmd:
   405                           	opt stack 0
   406  000101                     ?_lcd_write_char:
   407                           	opt stack 0
   408  000101                     Lcd_Cmd@a:
   409                           	opt stack 0
   410  000101                     lcd_write_char@a:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414  000101                     	ds	1
   415  000102                     ??_Lcd_Cmd:
   416  000102                     lcd_write_char@temp:
   417                           	opt stack 0
   418  000102                     _isdigit$838:
   419                           	opt stack 0
   420  000102                     ___awmod@divisor:
   421                           	opt stack 0
   422  000102                     ___lwdiv@divisor:
   423                           	opt stack 0
   424  000102                     ___lwmod@divisor:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x2
   428  000102                     	ds	1
   429  000103                     ?_lcd_gotoxy:
   430                           	opt stack 0
   431  000103                     ??_lcd_init:
   432  000103                     lcd_gotoxy@a:
   433                           	opt stack 0
   434  000103                     lcd_write_char@y:
   435                           	opt stack 0
   436  000103                     ___ftpack@exp:
   437                           	opt stack 0
   438  000103                     __div_to_l_@f2:
   439                           	opt stack 0
   440  000103                     __tdiv_to_l_@f2:
   441                           	opt stack 0
   442  000103                     ___ftge@ff2:
   443                           	opt stack 0
   444                           
   445                           ; 3 bytes @ 0x3
   446  000103                     	ds	1
   447  000104                     ?_lcd_putc:
   448                           	opt stack 0
   449  000104                     ??___awmod:
   450  000104                     ??___lwdiv:
   451  000104                     ??___lwmod:
   452  000104                     lcd_gotoxy@b:
   453                           	opt stack 0
   454  000104                     ___ftpack@sign:
   455                           	opt stack 0
   456  000104                     lcd_putc@a:
   457                           	opt stack 0
   458  000104                     ___lldiv@divisor:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0x4
   462  000104                     	ds	1
   463  000105                     ??___ftpack:
   464  000105                     lcd_gotoxy@z:
   465                           	opt stack 0
   466  000105                     ___awmod@counter:
   467                           	opt stack 0
   468  000105                     ___lwdiv@counter:
   469                           	opt stack 0
   470  000105                     ___lwmod@counter:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x5
   474  000105                     	ds	1
   475  000106                     ??__tdiv_to_l_:
   476  000106                     ??__div_to_l_:
   477  000106                     ??___ftge:
   478  000106                     lcd_gotoxy@y:
   479                           	opt stack 0
   480  000106                     ___awmod@sign:
   481                           	opt stack 0
   482  000106                     lcd_putc@i:
   483                           	opt stack 0
   484  000106                     ___lwdiv@quotient:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x6
   488  000106                     	ds	1
   489  000107                     ?___awdiv:
   490                           	opt stack 0
   491  000107                     lcd_gotoxy@temp:
   492                           	opt stack 0
   493  000107                     ___awdiv@dividend:
   494                           	opt stack 0
   495  000107                     __div_to_l_@quot:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x7
   499  000107                     	ds	1
   500  000108                     ??___lldiv:
   501  000108                     ?_Obtener_Distancia:
   502                           	opt stack 0
   503  000108                     ?___altoft:
   504                           	opt stack 0
   505  000108                     ?___awtoft:
   506                           	opt stack 0
   507  000108                     ?___lltoft:
   508                           	opt stack 0
   509  000108                     ___awtoft@c:
   510                           	opt stack 0
   511  000108                     ___altoft@c:
   512                           	opt stack 0
   513  000108                     ___lltoft@c:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0x8
   517  000108                     	ds	1
   518  000109                     ___awdiv@divisor:
   519                           	opt stack 0
   520  000109                     ___lldiv@quotient:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x9
   524  000109                     	ds	1
   525  00010A                     Obtener_Distancia@Timer_1:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0xA
   529  00010A                     	ds	1
   530  00010B                     ??___awdiv:
   531  00010B                     ??___awtoft:
   532  00010B                     __div_to_l_@cntr:
   533                           	opt stack 0
   534  00010B                     __tdiv_to_l_@quot:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0xB
   538  00010B                     	ds	1
   539  00010C                     ??___altoft:
   540  00010C                     ??___lltoft:
   541  00010C                     ___awdiv@counter:
   542                           	opt stack 0
   543  00010C                     ___awtoft@sign:
   544                           	opt stack 0
   545  00010C                     __div_to_l_@exp1:
   546                           	opt stack 0
   547  00010C                     Obtener_Distancia@Distancia:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xC
   551  00010C                     	ds	1
   552  00010D                     ___awdiv@sign:
   553                           	opt stack 0
   554  00010D                     ___lldiv@counter:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0xD
   558  00010D                     	ds	1
   559  00010E                     ?___llmod:
   560                           	opt stack 0
   561  00010E                     Obtener_Distancia@Duracion:
   562                           	opt stack 0
   563  00010E                     ___awdiv@quotient:
   564                           	opt stack 0
   565  00010E                     ___llmod@dividend:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0xE
   569  00010E                     	ds	1
   570  00010F                     __tdiv_to_l_@cntr:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0xF
   574  00010F                     	ds	1
   575  000110                     ?___wmul:
   576                           	opt stack 0
   577  000110                     ___altoft@exp:
   578                           	opt stack 0
   579  000110                     __tdiv_to_l_@exp1:
   580                           	opt stack 0
   581  000110                     ___lltoft@exp:
   582                           	opt stack 0
   583  000110                     ___wmul@multiplier:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x10
   587  000110                     	ds	1
   588  000111                     ___altoft@sign:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x11
   592  000111                     	ds	1
   593  000112                     ___wmul@multiplicand:
   594                           	opt stack 0
   595  000112                     ___llmod@divisor:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x12
   599  000112                     	ds	2
   600  000114                     ___wmul@product:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x14
   604  000114                     	ds	2
   605  000116                     ??___llmod:
   606  000116                     ?___ftmul:
   607                           	opt stack 0
   608  000116                     ___ftmul@f1:
   609                           	opt stack 0
   610                           
   611                           ; 3 bytes @ 0x16
   612  000116                     	ds	1
   613  000117                     ___llmod@counter:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x17
   617  000117                     	ds	2
   618  000119                     ___ftmul@f2:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x19
   622  000119                     	ds	3
   623  00011C                     ??___ftmul:
   624                           
   625                           ; 0 bytes @ 0x1C
   626  00011C                     	ds	5
   627  000121                     ___ftmul@exp:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x21
   631  000121                     	ds	1
   632  000122                     ___ftmul@f3_as_product:
   633                           	opt stack 0
   634                           
   635                           ; 3 bytes @ 0x22
   636  000122                     	ds	3
   637  000125                     ___ftmul@cntr:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x25
   641  000125                     	ds	1
   642  000126                     ___ftmul@sign:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x26
   646  000126                     	ds	1
   647  000127                     ?___ftdiv:
   648                           	opt stack 0
   649  000127                     ?_fround:
   650                           	opt stack 0
   651  000127                     ?_scale:
   652                           	opt stack 0
   653  000127                     ?___asftmul:
   654                           	opt stack 0
   655  000127                     fround@prec:
   656                           	opt stack 0
   657  000127                     scale@scl:
   658                           	opt stack 0
   659  000127                     ___asftmul@f1p:
   660                           	opt stack 0
   661  000127                     ___ftdiv@f1:
   662                           	opt stack 0
   663                           
   664                           ; 3 bytes @ 0x27
   665  000127                     	ds	2
   666  000129                     ___asftmul@f2:
   667                           	opt stack 0
   668                           
   669                           ; 3 bytes @ 0x29
   670  000129                     	ds	1
   671  00012A                     ??_fround:
   672  00012A                     ??_scale:
   673  00012A                     ___ftdiv@f2:
   674                           	opt stack 0
   675                           
   676                           ; 3 bytes @ 0x2A
   677  00012A                     	ds	2
   678  00012C                     
   679                           ; 0 bytes @ 0x2C
   680  00012C                     	ds	1
   681  00012D                     ??___ftdiv:
   682                           
   683                           ; 0 bytes @ 0x2D
   684  00012D                     	ds	3
   685  000130                     _fround$1202:
   686                           	opt stack 0
   687  000130                     _scale$1203:
   688                           	opt stack 0
   689                           
   690                           ; 3 bytes @ 0x30
   691  000130                     	ds	2
   692  000132                     ___ftdiv@cntr:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x32
   696  000132                     	ds	1
   697  000133                     ?___fttol:
   698                           	opt stack 0
   699  000133                     ___ftdiv@f3:
   700                           	opt stack 0
   701  000133                     ___fttol@f1:
   702                           	opt stack 0
   703  000133                     _fround$1201:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x33
   707  000133                     	ds	3
   708  000136                     ___ftdiv@exp:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x36
   712  000136                     	ds	1
   713  000137                     ??___fttol:
   714  000137                     ___ftdiv@sign:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x37
   718  000137                     	ds	1
   719  000138                     ?_Read_LDR:
   720                           	opt stack 0
   721  000138                     ?___ftadd:
   722                           	opt stack 0
   723  000138                     ___ftadd@f1:
   724                           	opt stack 0
   725                           
   726                           ; 3 bytes @ 0x38
   727  000138                     	ds	3
   728  00013B                     ??_Read_LDR:
   729  00013B                     ___ftadd@f2:
   730                           	opt stack 0
   731                           
   732                           ; 3 bytes @ 0x3B
   733  00013B                     	ds	1
   734  00013C                     ___fttol@sign1:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x3C
   738  00013C                     	ds	1
   739  00013D                     ___fttol@lval:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x3D
   743  00013D                     	ds	1
   744  00013E                     ??___ftadd:
   745                           
   746                           ; 0 bytes @ 0x3E
   747  00013E                     	ds	1
   748  00013F                     Read_LDR@analog_reading:
   749                           	opt stack 0
   750                           
   751                           ; 3 bytes @ 0x3F
   752  00013F                     	ds	2
   753  000141                     ___fttol@exp1:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x41
   757  000141                     	ds	2
   758  000143                     ___ftadd@sign:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x43
   762  000143                     	ds	1
   763  000144                     ___ftadd@exp2:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x44
   767  000144                     	ds	1
   768  000145                     ___ftadd@exp1:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x45
   772  000145                     	ds	1
   773  000146                     ?___ftsub:
   774                           	opt stack 0
   775  000146                     ?___asftadd:
   776                           	opt stack 0
   777  000146                     ___asftadd@f1p:
   778                           	opt stack 0
   779  000146                     ___ftsub@f1:
   780                           	opt stack 0
   781  000146                     USART_Init@baud_rate:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x46
   785  000146                     	ds	2
   786  000148                     ___asftadd@f2:
   787                           	opt stack 0
   788                           
   789                           ; 3 bytes @ 0x48
   790  000148                     	ds	1
   791  000149                     ___ftsub@f2:
   792                           	opt stack 0
   793                           
   794                           ; 3 bytes @ 0x49
   795  000149                     	ds	1
   796  00014A                     USART_Init@temp:
   797                           	opt stack 0
   798                           
   799                           ; 3 bytes @ 0x4A
   800  00014A                     	ds	1
   801  00014B                     
   802                           ; 0 bytes @ 0x4B
   803  00014B                     	ds	1
   804  00014C                     ?___asftsub:
   805                           	opt stack 0
   806  00014C                     ___asftsub@f1p:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x4C
   810  00014C                     	ds	2
   811  00014E                     ___asftsub@f2:
   812                           	opt stack 0
   813                           
   814                           ; 3 bytes @ 0x4E
   815  00014E                     	ds	3
   816  000151                     ?_sprintf:
   817                           	opt stack 0
   818  000151                     sprintf@sp:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x51
   822  000151                     	ds	2
   823  000153                     sprintf@f:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x53
   827  000153                     	ds	5
   828  000158                     ??_sprintf:
   829                           
   830                           ; 0 bytes @ 0x58
   831  000158                     	ds	6
   832  00015E                     _sprintf$1204:
   833                           	opt stack 0
   834                           
   835                           ; 3 bytes @ 0x5E
   836  00015E                     	ds	3
   837  000161                     _sprintf$563:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x61
   841  000161                     	ds	4
   842  000165                     sprintf@vd:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x65
   846  000165                     	ds	2
   847  000167                     sprintf@vd_565:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x67
   851  000167                     	ds	2
   852  000169                     sprintf@ap:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x69
   856  000169                     	ds	2
   857  00016B                     sprintf@integ:
   858                           	opt stack 0
   859                           
   860                           ; 3 bytes @ 0x6B
   861  00016B                     	ds	3
   862  00016E                     sprintf@_val:
   863                           	opt stack 0
   864                           
   865                           ; 5 bytes @ 0x6E
   866  00016E                     	ds	5
   867  000173                     sprintf@flag:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x73
   871  000173                     	ds	2
   872  000175                     sprintf@exp:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x75
   876  000175                     	ds	2
   877  000177                     sprintf@width:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x77
   881  000177                     	ds	2
   882  000179                     sprintf@fval:
   883                           	opt stack 0
   884                           
   885                           ; 3 bytes @ 0x79
   886  000179                     	ds	3
   887  00017C                     sprintf@prec:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x7C
   891  00017C                     	ds	2
   892  00017E                     sprintf@c:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x7E
   896  00017E                     	ds	1
   897  00017F                     ??_main:
   898                           
   899                           ; 0 bytes @ 0x7F
   900  00017F                     	ds	2
   901                           tblptru	equ	0xFF8
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           
   905                           	psect	cstackBANK0
   906  000060                     __pcstackBANK0:
   907                           	opt stack 0
   908  000060                     ??i1_fround:
   909  000060                     ??i1_scale:
   910  000060                     ?i1___asftmul:
   911                           	opt stack 0
   912  000060                     ?i1___ftdiv:
   913                           	opt stack 0
   914  000060                     i1___asftmul@f1p:
   915                           	opt stack 0
   916  000060                     i1___ftdiv@f1:
   917                           	opt stack 0
   918                           
   919                           ; 3 bytes @ 0x0
   920  000060                     	ds	2
   921  000062                     i1___asftmul@f2:
   922                           	opt stack 0
   923                           
   924                           ; 3 bytes @ 0x2
   925  000062                     	ds	1
   926  000063                     i1___ftdiv@f2:
   927                           	opt stack 0
   928                           
   929                           ; 3 bytes @ 0x3
   930  000063                     	ds	3
   931  000066                     ??i1___ftdiv:
   932  000066                     i1_fround$1827:
   933                           	opt stack 0
   934  000066                     i1_scale$1828:
   935                           	opt stack 0
   936                           
   937                           ; 3 bytes @ 0x6
   938  000066                     	ds	3
   939  000069                     i1_fround$1826:
   940                           	opt stack 0
   941                           
   942                           ; 3 bytes @ 0x9
   943  000069                     	ds	2
   944  00006B                     i1___ftdiv@cntr:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0xB
   948  00006B                     	ds	1
   949  00006C                     ?i1___asftadd:
   950                           	opt stack 0
   951  00006C                     i1___ftdiv@exp:
   952                           	opt stack 0
   953  00006C                     i1___asftadd@f1p:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0xC
   957  00006C                     	ds	1
   958  00006D                     i1___ftdiv@f3:
   959                           	opt stack 0
   960                           
   961                           ; 3 bytes @ 0xD
   962  00006D                     	ds	1
   963  00006E                     i1___asftadd@f2:
   964                           	opt stack 0
   965                           
   966                           ; 3 bytes @ 0xE
   967  00006E                     	ds	2
   968  000070                     i1___ftdiv@sign:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x10
   972  000070                     	ds	1
   973  000071                     ??i1_Read_LDR:
   974  000071                     ?i1_sprintf:
   975                           	opt stack 0
   976  000071                     i1sprintf@sp:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x11
   980  000071                     	ds	2
   981  000073                     i1sprintf@f:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x13
   985  000073                     	ds	2
   986  000075                     i1Read_LDR@analog_reading:
   987                           	opt stack 0
   988                           
   989                           ; 3 bytes @ 0x15
   990  000075                     	ds	3
   991  000078                     ??i1_sprintf:
   992                           
   993                           ; 0 bytes @ 0x18
   994  000078                     	ds	6
   995  00007E                     i1_sprintf$1829:
   996                           	opt stack 0
   997                           
   998                           ; 3 bytes @ 0x1E
   999  00007E                     	ds	3
  1000  000081                     i1_sprintf$563:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x21
  1004  000081                     	ds	4
  1005  000085                     i1sprintf@vd:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x25
  1009  000085                     	ds	2
  1010  000087                     i1sprintf@vd_565:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x27
  1014  000087                     	ds	2
  1015  000089                     i1sprintf@ap:
  1016                           	opt stack 0
  1017                           
  1018                           ; 2 bytes @ 0x29
  1019  000089                     	ds	2
  1020  00008B                     i1sprintf@integ:
  1021                           	opt stack 0
  1022                           
  1023                           ; 3 bytes @ 0x2B
  1024  00008B                     	ds	3
  1025  00008E                     i1sprintf@_val:
  1026                           	opt stack 0
  1027                           
  1028                           ; 5 bytes @ 0x2E
  1029  00008E                     	ds	5
  1030  000093                     i1sprintf@flag:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x33
  1034  000093                     	ds	2
  1035  000095                     i1sprintf@exp:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x35
  1039  000095                     	ds	2
  1040  000097                     i1sprintf@width:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x37
  1044  000097                     	ds	2
  1045  000099                     i1sprintf@fval:
  1046                           	opt stack 0
  1047                           
  1048                           ; 3 bytes @ 0x39
  1049  000099                     	ds	3
  1050  00009C                     i1sprintf@prec:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x3C
  1054  00009C                     	ds	2
  1055  00009E                     i1sprintf@c:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x3E
  1059  00009E                     	ds	1
  1060  00009F                     ??_interrupcaoLOW:
  1061                           
  1062                           ; 0 bytes @ 0x3F
  1063  00009F                     	ds	19
  1064                           tblptru	equ	0xFF8
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           
  1068                           	psect	cstackCOMRAM
  1069  000001                     __pcstackCOMRAM:
  1070                           	opt stack 0
  1071  000001                     ?_control_LED:
  1072                           	opt stack 0
  1073  000001                     control_LED@data:
  1074                           	opt stack 0
  1075                           
  1076                           ; 1 bytes @ 0x0
  1077  000001                     	ds	1
  1078  000002                     ??_interrupcaoHIGH:
  1079                           
  1080                           ; 0 bytes @ 0x1
  1081  000002                     	ds	14
  1082  000010                     interrupcaoHIGH@esp_server_data:
  1083                           	opt stack 0
  1084                           
  1085                           ; 1 bytes @ 0xF
  1086  000010                     	ds	1
  1087  000011                     ?i1_Lcd_Port:
  1088                           	opt stack 0
  1089  000011                     ?i1___ftge:
  1090                           	opt stack 0
  1091  000011                     ?i1_isdigit:
  1092                           	opt stack 0
  1093  000011                     ?i1___awmod:
  1094                           	opt stack 0
  1095  000011                     ?i1___lwdiv:
  1096                           	opt stack 0
  1097  000011                     ?i1___lwmod:
  1098                           	opt stack 0
  1099  000011                     ?i1___ftpack:
  1100                           	opt stack 0
  1101  000011                     ?i1___ftneg:
  1102                           	opt stack 0
  1103  000011                     ?i1__div_to_l_:
  1104                           	opt stack 0
  1105  000011                     ?i1__tdiv_to_l_:
  1106                           	opt stack 0
  1107  000011                     ?i1___lldiv:
  1108                           	opt stack 0
  1109  000011                     i1Lcd_Port@a:
  1110                           	opt stack 0
  1111  000011                     i1isdigit@c:
  1112                           	opt stack 0
  1113  000011                     i1___awmod@dividend:
  1114                           	opt stack 0
  1115  000011                     i1___lwdiv@dividend:
  1116                           	opt stack 0
  1117  000011                     i1___lwmod@dividend:
  1118                           	opt stack 0
  1119  000011                     i1__div_to_l_@f1:
  1120                           	opt stack 0
  1121  000011                     i1___ftpack@arg:
  1122                           	opt stack 0
  1123  000011                     i1__tdiv_to_l_@f1:
  1124                           	opt stack 0
  1125  000011                     i1___ftge@ff1:
  1126                           	opt stack 0
  1127  000011                     i1___ftneg@f1:
  1128                           	opt stack 0
  1129  000011                     i1___lldiv@dividend:
  1130                           	opt stack 0
  1131                           
  1132                           ; 4 bytes @ 0x10
  1133  000011                     	ds	1
  1134  000012                     ?i1_Lcd_Cmd:
  1135                           	opt stack 0
  1136  000012                     ?i1_lcd_write_char:
  1137                           	opt stack 0
  1138  000012                     ??i1_isdigit:
  1139  000012                     i1Lcd_Cmd@a:
  1140                           	opt stack 0
  1141  000012                     i1lcd_write_char@a:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x11
  1145  000012                     	ds	1
  1146  000013                     ??i1_Lcd_Cmd:
  1147  000013                     i1lcd_write_char@temp:
  1148                           	opt stack 0
  1149  000013                     i1_isdigit$838:
  1150                           	opt stack 0
  1151  000013                     i1___awmod@divisor:
  1152                           	opt stack 0
  1153  000013                     i1___lwdiv@divisor:
  1154                           	opt stack 0
  1155  000013                     i1___lwmod@divisor:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x12
  1159  000013                     	ds	1
  1160  000014                     ?i1_lcd_gotoxy:
  1161                           	opt stack 0
  1162  000014                     i1lcd_gotoxy@a:
  1163                           	opt stack 0
  1164  000014                     i1lcd_write_char@y:
  1165                           	opt stack 0
  1166  000014                     i1___ftpack@exp:
  1167                           	opt stack 0
  1168  000014                     i1__div_to_l_@f2:
  1169                           	opt stack 0
  1170  000014                     i1__tdiv_to_l_@f2:
  1171                           	opt stack 0
  1172  000014                     i1___ftge@ff2:
  1173                           	opt stack 0
  1174                           
  1175                           ; 3 bytes @ 0x13
  1176  000014                     	ds	1
  1177  000015                     ?i1_lcd_putc:
  1178                           	opt stack 0
  1179  000015                     ??i1___awmod:
  1180  000015                     ??i1___lwdiv:
  1181  000015                     ??i1___lwmod:
  1182  000015                     i1lcd_gotoxy@b:
  1183                           	opt stack 0
  1184  000015                     i1___ftpack@sign:
  1185                           	opt stack 0
  1186  000015                     i1lcd_putc@a:
  1187                           	opt stack 0
  1188  000015                     i1___lldiv@divisor:
  1189                           	opt stack 0
  1190                           
  1191                           ; 4 bytes @ 0x14
  1192  000015                     	ds	1
  1193  000016                     ??i1___ftpack:
  1194  000016                     i1lcd_gotoxy@z:
  1195                           	opt stack 0
  1196  000016                     i1___awmod@counter:
  1197                           	opt stack 0
  1198  000016                     i1___lwdiv@counter:
  1199                           	opt stack 0
  1200  000016                     i1___lwmod@counter:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x15
  1204  000016                     	ds	1
  1205  000017                     ??i1__div_to_l_:
  1206  000017                     ??i1__tdiv_to_l_:
  1207  000017                     ??i1___ftge:
  1208  000017                     i1lcd_gotoxy@y:
  1209                           	opt stack 0
  1210  000017                     i1___awmod@sign:
  1211                           	opt stack 0
  1212  000017                     i1lcd_putc@i:
  1213                           	opt stack 0
  1214  000017                     i1___lwdiv@quotient:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x16
  1218  000017                     	ds	1
  1219  000018                     ?i1___awdiv:
  1220                           	opt stack 0
  1221  000018                     i1lcd_gotoxy@temp:
  1222                           	opt stack 0
  1223  000018                     i1___awdiv@dividend:
  1224                           	opt stack 0
  1225  000018                     i1__div_to_l_@quot:
  1226                           	opt stack 0
  1227                           
  1228                           ; 4 bytes @ 0x17
  1229  000018                     	ds	1
  1230  000019                     ??i1___lldiv:
  1231  000019                     ?i1_Obtener_Distancia:
  1232                           	opt stack 0
  1233  000019                     ?i1___awtoft:
  1234                           	opt stack 0
  1235  000019                     ?i1___ftadd:
  1236                           	opt stack 0
  1237  000019                     ?i1___lltoft:
  1238                           	opt stack 0
  1239  000019                     i1___awtoft@c:
  1240                           	opt stack 0
  1241  000019                     i1___ftadd@f1:
  1242                           	opt stack 0
  1243  000019                     i1___lltoft@c:
  1244                           	opt stack 0
  1245                           
  1246                           ; 4 bytes @ 0x18
  1247  000019                     	ds	1
  1248  00001A                     i1___awdiv@divisor:
  1249                           	opt stack 0
  1250  00001A                     i1___lldiv@quotient:
  1251                           	opt stack 0
  1252                           
  1253                           ; 4 bytes @ 0x19
  1254  00001A                     	ds	1
  1255  00001B                     i1Obtener_Distancia@Timer_1:
  1256                           	opt stack 0
  1257                           
  1258                           ; 2 bytes @ 0x1A
  1259  00001B                     	ds	1
  1260  00001C                     ??i1___awdiv:
  1261  00001C                     ??i1___awtoft:
  1262  00001C                     i1__div_to_l_@cntr:
  1263                           	opt stack 0
  1264  00001C                     i1___ftadd@f2:
  1265                           	opt stack 0
  1266  00001C                     i1__tdiv_to_l_@quot:
  1267                           	opt stack 0
  1268                           
  1269                           ; 4 bytes @ 0x1B
  1270  00001C                     	ds	1
  1271  00001D                     ??i1___lltoft:
  1272  00001D                     i1___awdiv@counter:
  1273                           	opt stack 0
  1274  00001D                     i1___awtoft@sign:
  1275                           	opt stack 0
  1276  00001D                     i1__div_to_l_@exp1:
  1277                           	opt stack 0
  1278  00001D                     i1Obtener_Distancia@Distancia:
  1279                           	opt stack 0
  1280                           
  1281                           ; 2 bytes @ 0x1C
  1282  00001D                     	ds	1
  1283  00001E                     i1___awdiv@sign:
  1284                           	opt stack 0
  1285  00001E                     i1___lldiv@counter:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x1D
  1289  00001E                     	ds	1
  1290  00001F                     ??i1___ftadd:
  1291  00001F                     ?i1___llmod:
  1292                           	opt stack 0
  1293  00001F                     i1Obtener_Distancia@Duracion:
  1294                           	opt stack 0
  1295  00001F                     i1___awdiv@quotient:
  1296                           	opt stack 0
  1297  00001F                     i1___llmod@dividend:
  1298                           	opt stack 0
  1299                           
  1300                           ; 4 bytes @ 0x1E
  1301  00001F                     	ds	1
  1302  000020                     i1__tdiv_to_l_@cntr:
  1303                           	opt stack 0
  1304                           
  1305                           ; 1 bytes @ 0x1F
  1306  000020                     	ds	1
  1307  000021                     ?i1___wmul:
  1308                           	opt stack 0
  1309  000021                     i1__tdiv_to_l_@exp1:
  1310                           	opt stack 0
  1311  000021                     i1___lltoft@exp:
  1312                           	opt stack 0
  1313  000021                     i1___wmul@multiplier:
  1314                           	opt stack 0
  1315                           
  1316                           ; 2 bytes @ 0x20
  1317  000021                     	ds	2
  1318  000023                     i1___wmul@multiplicand:
  1319                           	opt stack 0
  1320  000023                     i1___llmod@divisor:
  1321                           	opt stack 0
  1322                           
  1323                           ; 4 bytes @ 0x22
  1324  000023                     	ds	1
  1325  000024                     i1___ftadd@sign:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x23
  1329  000024                     	ds	1
  1330  000025                     i1___ftadd@exp2:
  1331                           	opt stack 0
  1332  000025                     i1___wmul@product:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x24
  1336  000025                     	ds	1
  1337  000026                     i1___ftadd@exp1:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x25
  1341  000026                     	ds	1
  1342  000027                     ??i1___llmod:
  1343  000027                     ?i1___ftsub:
  1344                           	opt stack 0
  1345  000027                     ?i1___fttol:
  1346                           	opt stack 0
  1347  000027                     i1___ftsub@f1:
  1348                           	opt stack 0
  1349  000027                     i1___fttol@f1:
  1350                           	opt stack 0
  1351                           
  1352                           ; 3 bytes @ 0x26
  1353  000027                     	ds	1
  1354  000028                     i1___llmod@counter:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0x27
  1358  000028                     	ds	2
  1359  00002A                     i1___ftsub@f2:
  1360                           	opt stack 0
  1361                           
  1362                           ; 3 bytes @ 0x29
  1363  00002A                     	ds	1
  1364  00002B                     ??i1___fttol:
  1365                           
  1366                           ; 0 bytes @ 0x2A
  1367  00002B                     	ds	2
  1368  00002D                     ?i1___asftsub:
  1369                           	opt stack 0
  1370  00002D                     i1___asftsub@f1p:
  1371                           	opt stack 0
  1372                           
  1373                           ; 2 bytes @ 0x2C
  1374  00002D                     	ds	2
  1375  00002F                     i1___asftsub@f2:
  1376                           	opt stack 0
  1377                           
  1378                           ; 3 bytes @ 0x2E
  1379  00002F                     	ds	1
  1380  000030                     i1___fttol@sign1:
  1381                           	opt stack 0
  1382                           
  1383                           ; 1 bytes @ 0x2F
  1384  000030                     	ds	1
  1385  000031                     i1___fttol@lval:
  1386                           	opt stack 0
  1387                           
  1388                           ; 4 bytes @ 0x30
  1389  000031                     	ds	1
  1390  000032                     
  1391                           ; 0 bytes @ 0x31
  1392  000032                     	ds	3
  1393  000035                     i1___fttol@exp1:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x34
  1397  000035                     	ds	1
  1398  000036                     ?i1___ftmul:
  1399                           	opt stack 0
  1400  000036                     i1___ftmul@f1:
  1401                           	opt stack 0
  1402                           
  1403                           ; 3 bytes @ 0x35
  1404  000036                     	ds	3
  1405  000039                     i1___ftmul@f2:
  1406                           	opt stack 0
  1407                           
  1408                           ; 3 bytes @ 0x38
  1409  000039                     	ds	3
  1410  00003C                     ??i1___ftmul:
  1411                           
  1412                           ; 0 bytes @ 0x3B
  1413  00003C                     	ds	5
  1414  000041                     i1___ftmul@exp:
  1415                           	opt stack 0
  1416                           
  1417                           ; 1 bytes @ 0x40
  1418  000041                     	ds	1
  1419  000042                     i1___ftmul@f3_as_product:
  1420                           	opt stack 0
  1421                           
  1422                           ; 3 bytes @ 0x41
  1423  000042                     	ds	3
  1424  000045                     i1___ftmul@cntr:
  1425                           	opt stack 0
  1426                           
  1427                           ; 1 bytes @ 0x44
  1428  000045                     	ds	1
  1429  000046                     i1___ftmul@sign:
  1430                           	opt stack 0
  1431                           
  1432                           ; 1 bytes @ 0x45
  1433  000046                     	ds	1
  1434  000047                     ?i1_Read_LDR:
  1435                           	opt stack 0
  1436  000047                     ?i1_fround:
  1437                           	opt stack 0
  1438  000047                     ?i1_scale:
  1439                           	opt stack 0
  1440  000047                     i1fround@prec:
  1441                           	opt stack 0
  1442  000047                     i1scale@scl:
  1443                           	opt stack 0
  1444                           
  1445                           ; 1 bytes @ 0x46
  1446  000047                     	ds	3
  1447  00004A                     tblptru	equ	0xFF8
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           
  1451                           ; 0 bytes @ 0x49
  1452 ;;
  1453 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1454 ;;
  1455 ;; *************** function _main *****************
  1456 ;; Defined at:
  1457 ;;		line 74 in file "main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;		None               void
  1464 ;; Registers used:
  1465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1473 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1474 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1475 ;;Total ram usage:        2 bytes
  1476 ;; Hardware stack levels required when called:   14
  1477 ;; This function calls:
  1478 ;;		_lcd_gotoxy
  1479 ;;		_lcd_init
  1480 ;;		_lcd_putc
  1481 ;;		_Configuracion_Registros
  1482 ;;		_Timer1_Init
  1483 ;;		_Init_AD
  1484 ;;		_USART_Init
  1485 ;;		_inicioInterrupcoes
  1486 ;;		_Obtener_Distancia
  1487 ;;		_Read_LDR
  1488 ;;		_sprintf
  1489 ;; This function is called by:
  1490 ;;		Startup code after reset
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text0
  1495  004908                     __ptext0:
  1496                           	opt stack 0
  1497  004908                     _main:
  1498                           	opt stack 17
  1499                           
  1500                           ;main.c: 77: Configuracion_Registros();
  1501                           
  1502                           ;incstack = 0
  1503                           ;incstack = 0
  1504  004908  EC92  F031         	call	_Configuracion_Registros	;wreg free
  1505                           
  1506                           ;main.c: 78: Timer1_Init();
  1507  00490C  EC88  F031         	call	_Timer1_Init	;wreg free
  1508                           
  1509                           ;main.c: 79: lcd_init();
  1510  004910  ECF9  F023         	call	_lcd_init	;wreg free
  1511                           
  1512                           ;main.c: 80: Init_AD();
  1513  004914  EC7E  F031         	call	_Init_AD	;wreg free
  1514                           
  1515                           ;main.c: 82: USART_Init();
  1516  004918  EC77  F02A         	call	_USART_Init	;wreg free
  1517                           
  1518                           ;main.c: 83: inicioInterrupcoes();
  1519  00491C  EC74  F031         	call	_inicioInterrupcoes	;wreg free
  1520  004920                     l154:
  1521                           
  1522                           ;main.c: 86: LATB = 0x0;
  1523  004920  0E00               	movlw	0
  1524  004922  6E8A               	movwf	3978,c	;volatile
  1525                           
  1526                           ;main.c: 87: Distancia=Obtener_Distancia();
  1527  004924  EC20  F02A         	call	_Obtener_Distancia	;wreg free
  1528  004928  0101               	movlb	1	; () banked
  1529  00492A  C108  F184         	movff	?_Obtener_Distancia,_Distancia
  1530  00492E  0101               	movlb	1	; () banked
  1531  004930  C109  F185         	movff	?_Obtener_Distancia+1,_Distancia+1
  1532                           
  1533                           ; BSR set to: 1
  1534                           ;main.c: 88: LDR_value=Read_LDR();
  1535  004934  EC19  F026         	call	_Read_LDR	;wreg free
  1536  004938  C13A  F183         	movff	?_Read_LDR+2,_LDR_value+2
  1537  00493C  C139  F182         	movff	?_Read_LDR+1,_LDR_value+1
  1538  004940  C138  F181         	movff	?_Read_LDR,_LDR_value
  1539                           
  1540                           ;main.c: 89: lcd_gotoxy(1,1);
  1541  004944  0101               	movlb	1	; () banked
  1542  004946  6F7F               	movwf	??_main& (0+255),b
  1543  004948  0E01               	movlw	1
  1544  00494A  0101               	movlb	1	; () banked
  1545  00494C  0101               	movlb	1	; () banked
  1546  00494E  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  1547  004950  0101               	movlb	1	; () banked
  1548  004952  517F               	movf	??_main& (0+255),w,b
  1549  004954  0101               	movlb	1	; () banked
  1550  004956  6F80               	movwf	(??_main+1)& (0+255),b
  1551  004958  0E01               	movlw	1
  1552  00495A  0101               	movlb	1	; () banked
  1553  00495C  0101               	movlb	1	; () banked
  1554  00495E  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  1555  004960  0101               	movlb	1	; () banked
  1556  004962  5180               	movf	(??_main+1)& (0+255),w,b
  1557  004964  EC00  F02C         	call	_lcd_gotoxy	;wreg free
  1558                           
  1559                           ;main.c: 90: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
  1560  004968  0101               	movlb	1	; () banked
  1561  00496A  0E01               	movlw	high _LCD_Buffer
  1562  00496C  0101               	movlb	1	; () banked
  1563  00496E  0101               	movlb	1	; () banked
  1564  004970  6F52               	movwf	(?_sprintf+1)& (0+255),b
  1565  004972  0101               	movlb	1	; () banked
  1566  004974  0E86               	movlw	low _LCD_Buffer
  1567  004976  0101               	movlb	1	; () banked
  1568  004978  6F51               	movwf	?_sprintf& (0+255),b
  1569  00497A  0E08               	movlw	high STR_1
  1570  00497C  0101               	movlb	1	; () banked
  1571  00497E  0101               	movlb	1	; () banked
  1572  004980  6F54               	movwf	(?_sprintf+3)& (0+255),b
  1573  004982  0E88               	movlw	low STR_1
  1574  004984  0101               	movlb	1	; () banked
  1575  004986  6F53               	movwf	(?_sprintf+2)& (0+255),b
  1576  004988  C181  F155         	movff	_LDR_value,?_sprintf+4
  1577  00498C  C182  F156         	movff	_LDR_value+1,?_sprintf+5
  1578  004990  C183  F157         	movff	_LDR_value+2,?_sprintf+6
  1579  004994  EC4A  F004         	call	_sprintf	;wreg free
  1580                           
  1581                           ;main.c: 91: lcd_putc(LCD_Buffer);
  1582  004998  0101               	movlb	1	; () banked
  1583  00499A  0E01               	movlw	high _LCD_Buffer
  1584  00499C  0101               	movlb	1	; () banked
  1585  00499E  0101               	movlb	1	; () banked
  1586  0049A0  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  1587  0049A2  0101               	movlb	1	; () banked
  1588  0049A4  0E86               	movlw	low _LCD_Buffer
  1589  0049A6  0101               	movlb	1	; () banked
  1590  0049A8  6F04               	movwf	?_lcd_putc& (0+255),b
  1591  0049AA  ECFB  F02D         	call	_lcd_putc	;wreg free
  1592                           
  1593                           ;main.c: 92: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
  1594  0049AE  0101               	movlb	1	; () banked
  1595  0049B0  0E01               	movlw	high _LCD_Buffer
  1596  0049B2  0101               	movlb	1	; () banked
  1597  0049B4  0101               	movlb	1	; () banked
  1598  0049B6  6F52               	movwf	(?_sprintf+1)& (0+255),b
  1599  0049B8  0101               	movlb	1	; () banked
  1600  0049BA  0E86               	movlw	low _LCD_Buffer
  1601  0049BC  0101               	movlb	1	; () banked
  1602  0049BE  6F51               	movwf	?_sprintf& (0+255),b
  1603  0049C0  0E08               	movlw	high STR_2
  1604  0049C2  0101               	movlb	1	; () banked
  1605  0049C4  0101               	movlb	1	; () banked
  1606  0049C6  6F54               	movwf	(?_sprintf+3)& (0+255),b
  1607  0049C8  0E76               	movlw	low STR_2
  1608  0049CA  0101               	movlb	1	; () banked
  1609  0049CC  6F53               	movwf	(?_sprintf+2)& (0+255),b
  1610  0049CE  C184  F155         	movff	_Distancia,?_sprintf+4
  1611  0049D2  C185  F156         	movff	_Distancia+1,?_sprintf+5
  1612  0049D6  EC4A  F004         	call	_sprintf	;wreg free
  1613                           
  1614                           ;main.c: 93: lcd_gotoxy(2,1);
  1615  0049DA  0101               	movlb	1	; () banked
  1616  0049DC  6F7F               	movwf	??_main& (0+255),b
  1617  0049DE  0E02               	movlw	2
  1618  0049E0  0101               	movlb	1	; () banked
  1619  0049E2  0101               	movlb	1	; () banked
  1620  0049E4  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  1621  0049E6  0101               	movlb	1	; () banked
  1622  0049E8  517F               	movf	??_main& (0+255),w,b
  1623  0049EA  0101               	movlb	1	; () banked
  1624  0049EC  6F80               	movwf	(??_main+1)& (0+255),b
  1625  0049EE  0E01               	movlw	1
  1626  0049F0  0101               	movlb	1	; () banked
  1627  0049F2  0101               	movlb	1	; () banked
  1628  0049F4  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  1629  0049F6  0101               	movlb	1	; () banked
  1630  0049F8  5180               	movf	(??_main+1)& (0+255),w,b
  1631  0049FA  EC00  F02C         	call	_lcd_gotoxy	;wreg free
  1632                           
  1633                           ;main.c: 94: lcd_putc(LCD_Buffer);
  1634  0049FE  0101               	movlb	1	; () banked
  1635  004A00  0E01               	movlw	high _LCD_Buffer
  1636  004A02  0101               	movlb	1	; () banked
  1637  004A04  0101               	movlb	1	; () banked
  1638  004A06  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  1639  004A08  0101               	movlb	1	; () banked
  1640  004A0A  0E86               	movlw	low _LCD_Buffer
  1641  004A0C  0101               	movlb	1	; () banked
  1642  004A0E  6F04               	movwf	?_lcd_putc& (0+255),b
  1643  004A10  ECFB  F02D         	call	_lcd_putc	;wreg free
  1644                           
  1645                           ;main.c: 95: RCIE = 1;
  1646  004A14  8A9D               	bsf	3997,5,c	;volatile
  1647  004A16  D784               	goto	l154
  1648  004A18                     __end_of_main:
  1649                           	opt stack 0
  1650                           tblptru	equ	0xFF8
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           
  1654 ;; *************** function _sprintf *****************
  1655 ;; Defined at:
  1656 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  sp              2   81[BANK1 ] PTR unsigned char 
  1659 ;;		 -> LCD_Buffer(32), 
  1660 ;;  f               2   83[BANK1 ] PTR const unsigned char 
  1661 ;;		 -> STR_4(18), STR_3(10), STR_2(18), STR_1(10), 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  vd              2  101[BANK1 ] unsigned int 
  1664 ;;  vd              2  103[BANK1 ] unsigned int 
  1665 ;;  _val            5  110[BANK1 ] struct .
  1666 ;;  fval            3  121[BANK1 ] struct .
  1667 ;;  integ           3  107[BANK1 ] struct .
  1668 ;;  ival            3    0        struct .
  1669 ;;  prec            2  124[BANK1 ] int 
  1670 ;;  width           2  119[BANK1 ] int 
  1671 ;;  exp             2  117[BANK1 ] int 
  1672 ;;  flag            2  115[BANK1 ] unsigned short 
  1673 ;;  ap              2  105[BANK1 ] PTR void [1]
  1674 ;;		 -> ?_sprintf(2), 
  1675 ;;  c               1  126[BANK1 ] char 
  1676 ;;  d               1    0        unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  2   81[BANK1 ] int 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1686 ;;      Params:         0       0       7       0       0       0       0       0       0
  1687 ;;      Locals:         0       0      33       0       0       0       0       0       0
  1688 ;;      Temps:          0       0       6       0       0       0       0       0       0
  1689 ;;      Totals:         0       0      46       0       0       0       0       0       0
  1690 ;;Total ram usage:       46 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:   13
  1693 ;; This function calls:
  1694 ;;		_fround
  1695 ;;		_scale
  1696 ;;		_isdigit
  1697 ;;		__tdiv_to_l_
  1698 ;;		__div_to_l_
  1699 ;;		___asftadd
  1700 ;;		___asftmul
  1701 ;;		___ftmul
  1702 ;;		___asftsub
  1703 ;;		___awdiv
  1704 ;;		___ftge
  1705 ;;		___ftneg
  1706 ;;		___fttol
  1707 ;;		___lldiv
  1708 ;;		___llmod
  1709 ;;		___lltoft
  1710 ;;		___lwmod
  1711 ;;		___wmul
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text1
  1718  000894                     __ptext1:
  1719                           	opt stack 0
  1720  000894                     _sprintf:
  1721                           	opt stack 17
  1722                           
  1723                           ;doprnt.c: 494: va_list ap;
  1724                           ;doprnt.c: 499: signed char c;
  1725                           ;doprnt.c: 501: int width;
  1726                           ;doprnt.c: 504: int prec;
  1727                           ;doprnt.c: 508: unsigned short flag;
  1728                           ;doprnt.c: 515: char d;
  1729                           ;doprnt.c: 516: double fval, integ;
  1730                           ;doprnt.c: 517: int exp;
  1731                           ;doprnt.c: 518: double ival;
  1732                           ;doprnt.c: 519: union {
  1733                           ;doprnt.c: 520: unsigned long _val;
  1734                           ;doprnt.c: 521: struct {
  1735                           ;doprnt.c: 522: const char * _cp;
  1736                           ;doprnt.c: 523: unsigned _len;
  1737                           ;doprnt.c: 524: } _str;
  1738                           ;doprnt.c: 525: } _val;
  1739                           ;doprnt.c: 542: *ap = __va_start();
  1740                           
  1741                           ;incstack = 0
  1742                           ;incstack = 0
  1743  000894  0101               	movlb	1	; () banked
  1744  000896  0E01               	movlw	high (?_sprintf+4)
  1745  000898  0101               	movlb	1	; () banked
  1746  00089A  0101               	movlb	1	; () banked
  1747  00089C  6F6A               	movwf	(sprintf@ap+1)& (0+255),b
  1748  00089E  0101               	movlb	1	; () banked
  1749  0008A0  0E55               	movlw	low (?_sprintf+4)
  1750  0008A2  0101               	movlb	1	; () banked
  1751  0008A4  6F69               	movwf	sprintf@ap& (0+255),b
  1752                           
  1753                           ;doprnt.c: 545: while(c = *f++) {
  1754  0008A6  EF3C  F00B         	goto	l10477
  1755  0008AA                     l10153:
  1756                           
  1757                           ; BSR set to: 1
  1758                           ;doprnt.c: 547: if(c != '%')
  1759  0008AA  0101               	movlb	1	; () banked
  1760  0008AC  0101               	movlb	1	; () banked
  1761  0008AE  517E               	movf	sprintf@c& (0+255),w,b
  1762  0008B0  0A25               	xorlw	37
  1763  0008B2  B4D8               	btfsc	status,2,c
  1764  0008B4  D00D               	goto	l10159
  1765                           
  1766                           ; BSR set to: 1
  1767                           ;doprnt.c: 549: {
  1768                           ;doprnt.c: 550: ((*sp++ = (c)));
  1769  0008B6  C151  FFD9         	movff	sprintf@sp,fsr2l
  1770  0008BA  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  1771  0008BE  0101               	movlb	1	; () banked
  1772  0008C0  C17E  FFDF         	movff	sprintf@c,indf2
  1773                           
  1774                           ; BSR set to: 1
  1775  0008C4  0101               	movlb	1	; () banked
  1776  0008C6  0101               	movlb	1	; () banked
  1777  0008C8  4B51               	infsnz	sprintf@sp& (0+255),f,b
  1778  0008CA  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  1779                           
  1780                           ;doprnt.c: 551: continue;
  1781  0008CC  EF3C  F00B         	goto	l10477
  1782  0008D0                     l10159:
  1783                           
  1784                           ; BSR set to: 1
  1785                           ;doprnt.c: 552: }
  1786                           ;doprnt.c: 555: width = 0;
  1787  0008D0  0E00               	movlw	0
  1788  0008D2  0101               	movlb	1	; () banked
  1789  0008D4  0101               	movlb	1	; () banked
  1790  0008D6  6F78               	movwf	(sprintf@width+1)& (0+255),b
  1791  0008D8  0E00               	movlw	0
  1792  0008DA  0101               	movlb	1	; () banked
  1793  0008DC  6F77               	movwf	sprintf@width& (0+255),b
  1794                           
  1795                           ;doprnt.c: 557: flag = 0;
  1796  0008DE  0E00               	movlw	0
  1797  0008E0  0101               	movlb	1	; () banked
  1798  0008E2  0101               	movlb	1	; () banked
  1799  0008E4  6F74               	movwf	(sprintf@flag+1)& (0+255),b
  1800  0008E6  0E00               	movlw	0
  1801  0008E8  0101               	movlb	1	; () banked
  1802  0008EA  6F73               	movwf	sprintf@flag& (0+255),b
  1803  0008EC  D007               	goto	l10165
  1804  0008EE                     l10161:
  1805                           
  1806                           ; BSR set to: 1
  1807                           ;doprnt.c: 589: flag |= 0x04;
  1808  0008EE  0101               	movlb	1	; () banked
  1809  0008F0  0101               	movlb	1	; () banked
  1810  0008F2  8573               	bsf	sprintf@flag& (0+255),2,b
  1811                           
  1812                           ;doprnt.c: 590: f++;
  1813  0008F4  0101               	movlb	1	; () banked
  1814  0008F6  0101               	movlb	1	; () banked
  1815  0008F8  4B53               	infsnz	sprintf@f& (0+255),f,b
  1816  0008FA  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1817  0008FC                     l10165:
  1818                           
  1819                           ; BSR set to: 1
  1820  0008FC  0101               	movlb	1	; () banked
  1821  0008FE  C153  FFF6         	movff	sprintf@f,tblptrl
  1822  000902  0101               	movlb	1	; () banked
  1823  000904  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1824  000908  0008               	tblrd		*
  1825  00090A  50F5               	movf	tablat,w,c
  1826                           
  1827                           ; Switch size 1, requested type "space"
  1828                           ; Number of cases is 1, Range of values is 48 to 48
  1829                           ; switch strategies available:
  1830                           ; Name         Instructions Cycles
  1831                           ; simple_byte            4     3 (average)
  1832                           ;	Chosen strategy is simple_byte
  1833  00090C  0A30               	xorlw	48	; case 48
  1834  00090E  B4D8               	btfsc	status,2,c
  1835  000910  D7EE               	goto	l10161
  1836                           
  1837                           ; BSR set to: 1
  1838                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1839                           
  1840                           ; BSR set to: 1
  1841                           
  1842                           ; BSR set to: 1
  1843                           ;doprnt.c: 595: }
  1844                           
  1845                           ; BSR set to: 1
  1846                           ;doprnt.c: 594: break;
  1847  000912  0101               	movlb	1	; () banked
  1848  000914  C153  FFF6         	movff	sprintf@f,tblptrl
  1849  000918  0101               	movlb	1	; () banked
  1850  00091A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1851  00091E  0008               	tblrd		*
  1852  000920  0101               	movlb	1	; () banked
  1853  000922  CFF5 F100          	movff	tablat,?_isdigit
  1854  000926  ECD8  F02F         	call	_isdigit	;wreg free
  1855  00092A  A0D8               	btfss	status,0,c
  1856  00092C  D049               	goto	l10179
  1857                           
  1858                           ;doprnt.c: 607: width = 0;
  1859  00092E  0E00               	movlw	0
  1860  000930  0101               	movlb	1	; () banked
  1861  000932  0101               	movlb	1	; () banked
  1862  000934  6F78               	movwf	(sprintf@width+1)& (0+255),b
  1863  000936  0E00               	movlw	0
  1864  000938  0101               	movlb	1	; () banked
  1865  00093A  6F77               	movwf	sprintf@width& (0+255),b
  1866  00093C                     l10171:
  1867                           
  1868                           ;doprnt.c: 609: width *= 10;
  1869  00093C  C177  F110         	movff	sprintf@width,?___wmul
  1870  000940  C178  F111         	movff	sprintf@width+1,?___wmul+1
  1871  000944  0E00               	movlw	0
  1872  000946  0101               	movlb	1	; () banked
  1873  000948  0101               	movlb	1	; () banked
  1874  00094A  6F13               	movwf	(?___wmul+3)& (0+255),b
  1875  00094C  0E0A               	movlw	10
  1876  00094E  0101               	movlb	1	; () banked
  1877  000950  6F12               	movwf	(?___wmul+2)& (0+255),b
  1878  000952  EC5F  F02E         	call	___wmul	;wreg free
  1879  000956  0101               	movlb	1	; () banked
  1880  000958  C110  F177         	movff	?___wmul,sprintf@width
  1881  00095C  0101               	movlb	1	; () banked
  1882  00095E  C111  F178         	movff	?___wmul+1,sprintf@width+1
  1883                           
  1884                           ; BSR set to: 1
  1885                           ;doprnt.c: 610: width += *f++ - '0';
  1886  000962  0101               	movlb	1	; () banked
  1887  000964  C153  FFF6         	movff	sprintf@f,tblptrl
  1888  000968  0101               	movlb	1	; () banked
  1889  00096A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1890  00096E  0008               	tblrd		*
  1891  000970  CFF5 F158          	movff	tablat,??_sprintf
  1892  000974  0ED0               	movlw	208
  1893  000976  0101               	movlb	1	; () banked
  1894  000978  2558               	addwf	??_sprintf& (0+255),w,b
  1895  00097A  0101               	movlb	1	; () banked
  1896  00097C  6F59               	movwf	(??_sprintf+1)& (0+255),b
  1897  00097E  0101               	movlb	1	; () banked
  1898  000980  0101               	movlb	1	; () banked
  1899  000982  6B5A               	clrf	(??_sprintf+2)& (0+255),b
  1900  000984  0EFF               	movlw	255
  1901  000986  235A               	addwfc	(??_sprintf+2)& (0+255),f,b
  1902  000988  0101               	movlb	1	; () banked
  1903  00098A  5159               	movf	(??_sprintf+1)& (0+255),w,b
  1904  00098C  0101               	movlb	1	; () banked
  1905  00098E  0101               	movlb	1	; () banked
  1906  000990  2777               	addwf	sprintf@width& (0+255),f,b
  1907  000992  0101               	movlb	1	; () banked
  1908  000994  515A               	movf	(??_sprintf+2)& (0+255),w,b
  1909  000996  0101               	movlb	1	; () banked
  1910  000998  0101               	movlb	1	; () banked
  1911  00099A  2378               	addwfc	(sprintf@width+1)& (0+255),f,b
  1912                           
  1913                           ; BSR set to: 1
  1914  00099C  0101               	movlb	1	; () banked
  1915  00099E  0101               	movlb	1	; () banked
  1916  0009A0  4B53               	infsnz	sprintf@f& (0+255),f,b
  1917  0009A2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1918                           
  1919                           ; BSR set to: 1
  1920                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1921  0009A4  0101               	movlb	1	; () banked
  1922  0009A6  C153  FFF6         	movff	sprintf@f,tblptrl
  1923  0009AA  0101               	movlb	1	; () banked
  1924  0009AC  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1925  0009B0  0008               	tblrd		*
  1926  0009B2  0101               	movlb	1	; () banked
  1927  0009B4  CFF5 F100          	movff	tablat,?_isdigit
  1928  0009B8  ECD8  F02F         	call	_isdigit	;wreg free
  1929  0009BC  B0D8               	btfsc	status,0,c
  1930  0009BE  D7BE               	goto	l10171
  1931  0009C0                     l10179:
  1932                           
  1933                           ;doprnt.c: 617: }
  1934                           ;doprnt.c: 620: if(*f == '.') {
  1935  0009C0  0101               	movlb	1	; () banked
  1936  0009C2  C153  FFF6         	movff	sprintf@f,tblptrl
  1937  0009C6  0101               	movlb	1	; () banked
  1938  0009C8  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1939  0009CC  0008               	tblrd		*
  1940  0009CE  50F5               	movf	tablat,w,c
  1941  0009D0  0A2E               	xorlw	46
  1942  0009D2  A4D8               	btfss	status,2,c
  1943  0009D4  D04A               	goto	l10191
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;doprnt.c: 621: flag |= 0x4000;
  1947  0009D6  0101               	movlb	1	; () banked
  1948  0009D8  0101               	movlb	1	; () banked
  1949  0009DA  8D74               	bsf	(sprintf@flag+1)& (0+255),6,b
  1950                           
  1951                           ;doprnt.c: 622: f++;
  1952  0009DC  0101               	movlb	1	; () banked
  1953  0009DE  0101               	movlb	1	; () banked
  1954  0009E0  4B53               	infsnz	sprintf@f& (0+255),f,b
  1955  0009E2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1956                           
  1957                           ; BSR set to: 1
  1958                           ;doprnt.c: 629: {
  1959                           ;doprnt.c: 630: prec = 0;
  1960  0009E4  0E00               	movlw	0
  1961  0009E6  0101               	movlb	1	; () banked
  1962  0009E8  0101               	movlb	1	; () banked
  1963  0009EA  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  1964  0009EC  0E00               	movlw	0
  1965  0009EE  0101               	movlb	1	; () banked
  1966  0009F0  6F7C               	movwf	sprintf@prec& (0+255),b
  1967                           
  1968                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1969  0009F2  D02C               	goto	l10189
  1970  0009F4                     l10185:
  1971                           
  1972                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1973  0009F4  C17C  F110         	movff	sprintf@prec,?___wmul
  1974  0009F8  C17D  F111         	movff	sprintf@prec+1,?___wmul+1
  1975  0009FC  0E00               	movlw	0
  1976  0009FE  0101               	movlb	1	; () banked
  1977  000A00  0101               	movlb	1	; () banked
  1978  000A02  6F13               	movwf	(?___wmul+3)& (0+255),b
  1979  000A04  0E0A               	movlw	10
  1980  000A06  0101               	movlb	1	; () banked
  1981  000A08  6F12               	movwf	(?___wmul+2)& (0+255),b
  1982  000A0A  EC5F  F02E         	call	___wmul	;wreg free
  1983  000A0E  0101               	movlb	1	; () banked
  1984  000A10  C153  FFF6         	movff	sprintf@f,tblptrl
  1985  000A14  0101               	movlb	1	; () banked
  1986  000A16  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1987  000A1A  0008               	tblrd		*
  1988  000A1C  50F5               	movf	tablat,w,c
  1989  000A1E  0101               	movlb	1	; () banked
  1990  000A20  0101               	movlb	1	; () banked
  1991  000A22  2710               	addwf	?___wmul& (0+255),f,b
  1992  000A24  0E00               	movlw	0
  1993  000A26  0101               	movlb	1	; () banked
  1994  000A28  2311               	addwfc	(?___wmul+1)& (0+255),f,b
  1995  000A2A  0ED0               	movlw	208
  1996  000A2C  0101               	movlb	1	; () banked
  1997  000A2E  0101               	movlb	1	; () banked
  1998  000A30  2510               	addwf	?___wmul& (0+255),w,b
  1999  000A32  0101               	movlb	1	; () banked
  2000  000A34  0101               	movlb	1	; () banked
  2001  000A36  6F7C               	movwf	sprintf@prec& (0+255),b
  2002  000A38  0EFF               	movlw	255
  2003  000A3A  0101               	movlb	1	; () banked
  2004  000A3C  0101               	movlb	1	; () banked
  2005  000A3E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  2006  000A40  0101               	movlb	1	; () banked
  2007  000A42  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2008                           
  2009                           ; BSR set to: 1
  2010  000A44  0101               	movlb	1	; () banked
  2011  000A46  0101               	movlb	1	; () banked
  2012  000A48  4B53               	infsnz	sprintf@f& (0+255),f,b
  2013  000A4A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2014  000A4C                     l10189:
  2015                           
  2016                           ; BSR set to: 1
  2017  000A4C  0101               	movlb	1	; () banked
  2018  000A4E  C153  FFF6         	movff	sprintf@f,tblptrl
  2019  000A52  0101               	movlb	1	; () banked
  2020  000A54  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2021  000A58  0008               	tblrd		*
  2022  000A5A  0101               	movlb	1	; () banked
  2023  000A5C  CFF5 F100          	movff	tablat,?_isdigit
  2024  000A60  ECD8  F02F         	call	_isdigit	;wreg free
  2025  000A64  A0D8               	btfss	status,0,c
  2026  000A66  D010               	goto	l10199
  2027  000A68  D7C5               	goto	l10185
  2028  000A6A                     l10191:
  2029                           
  2030                           ;doprnt.c: 635: prec = 0;
  2031  000A6A  0E00               	movlw	0
  2032  000A6C  0101               	movlb	1	; () banked
  2033  000A6E  0101               	movlb	1	; () banked
  2034  000A70  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2035  000A72  0E00               	movlw	0
  2036  000A74  0101               	movlb	1	; () banked
  2037  000A76  6F7C               	movwf	sprintf@prec& (0+255),b
  2038                           
  2039                           ; BSR set to: 1
  2040                           ;doprnt.c: 637: flag |= 0x1000;
  2041  000A78  0101               	movlb	1	; () banked
  2042  000A7A  0101               	movlb	1	; () banked
  2043  000A7C  8974               	bsf	(sprintf@flag+1)& (0+255),4,b
  2044  000A7E  D004               	goto	l10199
  2045  000A80                     l10195:
  2046                           
  2047                           ; BSR set to: 1
  2048                           ;doprnt.c: 672: flag |= 0x400;
  2049  000A80  0101               	movlb	1	; () banked
  2050  000A82  0101               	movlb	1	; () banked
  2051  000A84  8574               	bsf	(sprintf@flag+1)& (0+255),2,b
  2052                           
  2053                           ;doprnt.c: 673: break;
  2054  000A86  D01E               	goto	l10201
  2055  000A88                     l10199:
  2056  000A88  0101               	movlb	1	; () banked
  2057  000A8A  C153  FFF6         	movff	sprintf@f,tblptrl
  2058  000A8E  0101               	movlb	1	; () banked
  2059  000A90  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2060  000A94  0101               	movlb	1	; () banked
  2061  000A96  0101               	movlb	1	; () banked
  2062  000A98  4B53               	infsnz	sprintf@f& (0+255),f,b
  2063  000A9A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2064  000A9C  0008               	tblrd		*
  2065  000A9E  0101               	movlb	1	; () banked
  2066  000AA0  CFF5 F17E          	movff	tablat,sprintf@c
  2067  000AA4  0101               	movlb	1	; () banked
  2068  000AA6  517E               	movf	sprintf@c& (0+255),w,b
  2069                           
  2070                           ; Switch size 1, requested type "space"
  2071                           ; Number of cases is 4, Range of values is 0 to 105
  2072                           ; switch strategies available:
  2073                           ; Name         Instructions Cycles
  2074                           ; simple_byte           13     7 (average)
  2075                           ;	Chosen strategy is simple_byte
  2076  000AA8  0A00               	xorlw	0	; case 0
  2077  000AAA  B4D8               	btfsc	status,2,c
  2078  000AAC  EF4E  F00B         	goto	l10479
  2079  000AB0  0A64               	xorlw	100	; case 100
  2080  000AB2  B4D8               	btfsc	status,2,c
  2081  000AB4  D007               	goto	l10201
  2082  000AB6  0A02               	xorlw	2	; case 102
  2083  000AB8  B4D8               	btfsc	status,2,c
  2084  000ABA  D7E2               	goto	l10195
  2085  000ABC  0A0F               	xorlw	15	; case 105
  2086  000ABE  A4D8               	btfss	status,2,c
  2087  000AC0  EF3C  F00B         	goto	l10477
  2088  000AC4                     l10201:
  2089                           
  2090                           ; BSR set to: 1
  2091                           ;doprnt.c: 834: if(flag & (0x700)) {
  2092  000AC4  0E07               	movlw	7
  2093  000AC6  0101               	movlb	1	; () banked
  2094  000AC8  0101               	movlb	1	; () banked
  2095  000ACA  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2096  000ACC  B4D8               	btfsc	status,2,c
  2097  000ACE  D3EF               	goto	l10381
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;doprnt.c: 836: if(flag & 0x1000)
  2101  000AD0  0101               	movlb	1	; () banked
  2102  000AD2  0101               	movlb	1	; () banked
  2103  000AD4  A974               	btfss	(sprintf@flag+1)& (0+255),4,b
  2104  000AD6  D007               	goto	l10207
  2105                           
  2106                           ; BSR set to: 1
  2107                           ;doprnt.c: 838: prec = 6;
  2108  000AD8  0E00               	movlw	0
  2109  000ADA  0101               	movlb	1	; () banked
  2110  000ADC  0101               	movlb	1	; () banked
  2111  000ADE  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2112  000AE0  0E06               	movlw	6
  2113  000AE2  0101               	movlb	1	; () banked
  2114  000AE4  6F7C               	movwf	sprintf@prec& (0+255),b
  2115  000AE6                     l10207:
  2116                           
  2117                           ; BSR set to: 1
  2118                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2119  000AE6  C169  FFD9         	movff	sprintf@ap,fsr2l
  2120  000AEA  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  2121  000AEE  0101               	movlb	1	; () banked
  2122  000AF0  CFDE F179          	movff	postinc2,sprintf@fval
  2123  000AF4  0101               	movlb	1	; () banked
  2124  000AF6  CFDE F17A          	movff	postinc2,sprintf@fval+1
  2125  000AFA  0101               	movlb	1	; () banked
  2126  000AFC  CFDD F17B          	movff	postdec2,sprintf@fval+2
  2127                           
  2128                           ; BSR set to: 1
  2129  000B00  0E03               	movlw	3
  2130  000B02  0101               	movlb	1	; () banked
  2131  000B04  0101               	movlb	1	; () banked
  2132  000B06  2769               	addwf	sprintf@ap& (0+255),f,b
  2133  000B08  0E00               	movlw	0
  2134  000B0A  0101               	movlb	1	; () banked
  2135  000B0C  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2136                           
  2137                           ; BSR set to: 1
  2138                           ;doprnt.c: 840: if(fval < 0.0) {
  2139  000B0E  0101               	movlb	1	; () banked
  2140  000B10  0101               	movlb	1	; () banked
  2141  000B12  517B               	movf	(sprintf@fval+2)& (0+255),w,b
  2142  000B14  0A80               	xorlw	128
  2143  000B16  0F80               	addlw	128
  2144  000B18  E107               	bnz	u8975
  2145  000B1A  0E00               	movlw	0
  2146  000B1C  0101               	movlb	1	; () banked
  2147  000B1E  5D7A               	subwf	(sprintf@fval+1)& (0+255),w,b
  2148  000B20  E103               	bnz	u8975
  2149  000B22  0E00               	movlw	0
  2150  000B24  0101               	movlb	1	; () banked
  2151  000B26  5D79               	subwf	sprintf@fval& (0+255),w,b
  2152  000B28                     u8975:
  2153  000B28  B0D8               	btfsc	status,0,c
  2154  000B2A  D012               	goto	l10217
  2155                           
  2156                           ; BSR set to: 1
  2157                           ;doprnt.c: 841: fval = -fval;
  2158  000B2C  C179  F100         	movff	sprintf@fval,?___ftneg
  2159  000B30  C17A  F101         	movff	sprintf@fval+1,?___ftneg+1
  2160  000B34  C17B  F102         	movff	sprintf@fval+2,?___ftneg+2
  2161  000B38  EC51  F030         	call	___ftneg	;wreg free
  2162  000B3C  C102  F17B         	movff	?___ftneg+2,sprintf@fval+2
  2163  000B40  C101  F17A         	movff	?___ftneg+1,sprintf@fval+1
  2164  000B44  C100  F179         	movff	?___ftneg,sprintf@fval
  2165                           
  2166                           ;doprnt.c: 842: flag |= 0x03;
  2167  000B48  0E03               	movlw	3
  2168  000B4A  0101               	movlb	1	; () banked
  2169  000B4C  0101               	movlb	1	; () banked
  2170  000B4E  1373               	iorwf	sprintf@flag& (0+255),f,b
  2171  000B50                     l10217:
  2172                           
  2173                           ; BSR set to: 1
  2174                           ;doprnt.c: 843: }
  2175                           ;doprnt.c: 844: exp = 0;
  2176  000B50  0E00               	movlw	0
  2177  000B52  0101               	movlb	1	; () banked
  2178  000B54  0101               	movlb	1	; () banked
  2179  000B56  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2180  000B58  0E00               	movlw	0
  2181  000B5A  0101               	movlb	1	; () banked
  2182  000B5C  6F75               	movwf	sprintf@exp& (0+255),b
  2183                           
  2184                           ; BSR set to: 1
  2185                           ;doprnt.c: 845: if( fval!=0) {
  2186  000B5E  0E7F               	movlw	127
  2187  000B60  0101               	movlb	1	; () banked
  2188  000B62  0101               	movlb	1	; () banked
  2189  000B64  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  2190  000B66  0101               	movlb	1	; () banked
  2191  000B68  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2192  000B6A  0101               	movlb	1	; () banked
  2193  000B6C  1179               	iorwf	sprintf@fval& (0+255),w,b
  2194  000B6E  B4D8               	btfsc	status,2,c
  2195  000B70  D0B1               	goto	l10245
  2196                           
  2197                           ; BSR set to: 1
  2198                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2199  000B72  0E82               	movlw	130
  2200  000B74  0101               	movlb	1	; () banked
  2201  000B76  6F58               	movwf	??_sprintf& (0+255),b
  2202  000B78  0EFF               	movlw	255
  2203  000B7A  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2204  000B7C  0101               	movlb	1	; () banked
  2205  000B7E  C179  F15A         	movff	sprintf@fval,??_sprintf+2
  2206  000B82  0101               	movlb	1	; () banked
  2207  000B84  C17A  F15B         	movff	sprintf@fval+1,??_sprintf+3
  2208  000B88  0101               	movlb	1	; () banked
  2209  000B8A  C17B  F15C         	movff	sprintf@fval+2,??_sprintf+4
  2210  000B8E  0101               	movlb	1	; () banked
  2211  000B90  C17C  F15D         	movff	sprintf@fval+3,??_sprintf+5
  2212  000B94  0E10               	movlw	16
  2213  000B96  D006               	goto	u8990
  2214  000B98                     u8995:
  2215  000B98  0101               	movlb	1	; () banked
  2216  000B9A  90D8               	bcf	status,0,c
  2217  000B9C  335D               	rrcf	(??_sprintf+5)& (0+255),f,b
  2218  000B9E  335C               	rrcf	(??_sprintf+4)& (0+255),f,b
  2219  000BA0  335B               	rrcf	(??_sprintf+3)& (0+255),f,b
  2220  000BA2  335A               	rrcf	(??_sprintf+2)& (0+255),f,b
  2221  000BA4                     u8990:
  2222  000BA4  2EE8               	decfsz	wreg,f,c
  2223  000BA6  D7F8               	goto	u8995
  2224  000BA8  0101               	movlb	1	; () banked
  2225  000BAA  515A               	movf	(??_sprintf+2)& (0+255),w,b
  2226  000BAC  0101               	movlb	1	; () banked
  2227  000BAE  2558               	addwf	??_sprintf& (0+255),w,b
  2228  000BB0  0101               	movlb	1	; () banked
  2229  000BB2  0101               	movlb	1	; () banked
  2230  000BB4  6F75               	movwf	sprintf@exp& (0+255),b
  2231  000BB6  0101               	movlb	1	; () banked
  2232  000BB8  0101               	movlb	1	; () banked
  2233  000BBA  0E00               	movlw	0
  2234  000BBC  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  2235  000BBE  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2236                           
  2237                           ; BSR set to: 1
  2238                           ;doprnt.c: 847: exp--;
  2239  000BC0  0101               	movlb	1	; () banked
  2240  000BC2  0101               	movlb	1	; () banked
  2241  000BC4  0775               	decf	sprintf@exp& (0+255),f,b
  2242  000BC6  A0D8               	btfss	status,0,c
  2243  000BC8  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2244                           
  2245                           ; BSR set to: 1
  2246                           ;doprnt.c: 848: exp *= 3;
  2247  000BCA  C175  F110         	movff	sprintf@exp,?___wmul
  2248  000BCE  C176  F111         	movff	sprintf@exp+1,?___wmul+1
  2249  000BD2  0E00               	movlw	0
  2250  000BD4  0101               	movlb	1	; () banked
  2251  000BD6  0101               	movlb	1	; () banked
  2252  000BD8  6F13               	movwf	(?___wmul+3)& (0+255),b
  2253  000BDA  0E03               	movlw	3
  2254  000BDC  0101               	movlb	1	; () banked
  2255  000BDE  6F12               	movwf	(?___wmul+2)& (0+255),b
  2256  000BE0  EC5F  F02E         	call	___wmul	;wreg free
  2257  000BE4  0101               	movlb	1	; () banked
  2258  000BE6  C110  F175         	movff	?___wmul,sprintf@exp
  2259  000BEA  0101               	movlb	1	; () banked
  2260  000BEC  C111  F176         	movff	?___wmul+1,sprintf@exp+1
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;doprnt.c: 849: exp /= 10;
  2264  000BF0  C175  F107         	movff	sprintf@exp,?___awdiv
  2265  000BF4  C176  F108         	movff	sprintf@exp+1,?___awdiv+1
  2266  000BF8  0E00               	movlw	0
  2267  000BFA  0101               	movlb	1	; () banked
  2268  000BFC  0101               	movlb	1	; () banked
  2269  000BFE  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  2270  000C00  0E0A               	movlw	10
  2271  000C02  0101               	movlb	1	; () banked
  2272  000C04  6F09               	movwf	(?___awdiv+2)& (0+255),b
  2273  000C06  EC6E  F023         	call	___awdiv	;wreg free
  2274  000C0A  0101               	movlb	1	; () banked
  2275  000C0C  C107  F175         	movff	?___awdiv,sprintf@exp
  2276  000C10  0101               	movlb	1	; () banked
  2277  000C12  C108  F176         	movff	?___awdiv+1,sprintf@exp+1
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;doprnt.c: 850: if(exp < 0)
  2281  000C16  0101               	movlb	1	; () banked
  2282  000C18  0101               	movlb	1	; () banked
  2283  000C1A  AF76               	btfss	(sprintf@exp+1)& (0+255),7,b
  2284  000C1C  D005               	goto	l10233
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;doprnt.c: 851: exp--;
  2288  000C1E  0101               	movlb	1	; () banked
  2289  000C20  0101               	movlb	1	; () banked
  2290  000C22  0775               	decf	sprintf@exp& (0+255),f,b
  2291  000C24  A0D8               	btfss	status,0,c
  2292  000C26  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2293  000C28                     l10233:
  2294                           
  2295                           ; BSR set to: 1
  2296                           ;doprnt.c: 855: integ = scale(-exp);
  2297  000C28  0101               	movlb	1	; () banked
  2298  000C2A  0101               	movlb	1	; () banked
  2299  000C2C  5175               	movf	sprintf@exp& (0+255),w,b
  2300  000C2E  0800               	sublw	0
  2301  000C30  0101               	movlb	1	; () banked
  2302  000C32  0101               	movlb	1	; () banked
  2303  000C34  6F27               	movwf	?_scale& (0+255),b
  2304  000C36  EC0A  F012         	call	_scale	;wreg free
  2305  000C3A  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  2306  000C3E  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  2307  000C42  C127  F16B         	movff	?_scale,sprintf@integ
  2308                           
  2309                           ;doprnt.c: 856: integ *= fval;
  2310  000C46  0101               	movlb	1	; () banked
  2311  000C48  0E01               	movlw	high sprintf@integ
  2312  000C4A  0101               	movlb	1	; () banked
  2313  000C4C  0101               	movlb	1	; () banked
  2314  000C4E  6F28               	movwf	(?___asftmul+1)& (0+255),b
  2315  000C50  0101               	movlb	1	; () banked
  2316  000C52  0E6B               	movlw	low sprintf@integ
  2317  000C54  0101               	movlb	1	; () banked
  2318  000C56  6F27               	movwf	?___asftmul& (0+255),b
  2319  000C58  C179  F129         	movff	sprintf@fval,?___asftmul+2
  2320  000C5C  C17A  F12A         	movff	sprintf@fval+1,?___asftmul+3
  2321  000C60  C17B  F12B         	movff	sprintf@fval+2,?___asftmul+4
  2322  000C64  EC96  F02F         	call	___asftmul	;wreg free
  2323                           
  2324                           ;doprnt.c: 857: if(integ < 1.0)
  2325  000C68  C16B  F100         	movff	sprintf@integ,?___ftge
  2326  000C6C  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2327  000C70  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2328  000C74  0E00               	movlw	0
  2329  000C76  0101               	movlb	1	; () banked
  2330  000C78  0101               	movlb	1	; () banked
  2331  000C7A  6F03               	movwf	(?___ftge+3)& (0+255),b
  2332  000C7C  0E80               	movlw	128
  2333  000C7E  0101               	movlb	1	; () banked
  2334  000C80  0101               	movlb	1	; () banked
  2335  000C82  6F04               	movwf	(?___ftge+4)& (0+255),b
  2336  000C84  0E3F               	movlw	63
  2337  000C86  0101               	movlb	1	; () banked
  2338  000C88  0101               	movlb	1	; () banked
  2339  000C8A  6F05               	movwf	(?___ftge+5)& (0+255),b
  2340  000C8C  EC9A  F026         	call	___ftge	;wreg free
  2341  000C90  B0D8               	btfsc	status,0,c
  2342  000C92  D006               	goto	l10241
  2343                           
  2344                           ;doprnt.c: 858: exp--;
  2345  000C94  0101               	movlb	1	; () banked
  2346  000C96  0101               	movlb	1	; () banked
  2347  000C98  0775               	decf	sprintf@exp& (0+255),f,b
  2348  000C9A  A0D8               	btfss	status,0,c
  2349  000C9C  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2350  000C9E  D01A               	goto	l10245
  2351  000CA0                     l10241:
  2352                           
  2353                           ;doprnt.c: 859: else if(integ >= 10.0)
  2354  000CA0  C16B  F100         	movff	sprintf@integ,?___ftge
  2355  000CA4  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2356  000CA8  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2357  000CAC  0E00               	movlw	0
  2358  000CAE  0101               	movlb	1	; () banked
  2359  000CB0  0101               	movlb	1	; () banked
  2360  000CB2  6F03               	movwf	(?___ftge+3)& (0+255),b
  2361  000CB4  0E20               	movlw	32
  2362  000CB6  0101               	movlb	1	; () banked
  2363  000CB8  0101               	movlb	1	; () banked
  2364  000CBA  6F04               	movwf	(?___ftge+4)& (0+255),b
  2365  000CBC  0E41               	movlw	65
  2366  000CBE  0101               	movlb	1	; () banked
  2367  000CC0  0101               	movlb	1	; () banked
  2368  000CC2  6F05               	movwf	(?___ftge+5)& (0+255),b
  2369  000CC4  EC9A  F026         	call	___ftge	;wreg free
  2370  000CC8  A0D8               	btfss	status,0,c
  2371  000CCA  D004               	goto	l10245
  2372                           
  2373                           ;doprnt.c: 860: exp++;
  2374  000CCC  0101               	movlb	1	; () banked
  2375  000CCE  0101               	movlb	1	; () banked
  2376  000CD0  4B75               	infsnz	sprintf@exp& (0+255),f,b
  2377  000CD2  2B76               	incf	(sprintf@exp+1)& (0+255),f,b
  2378  000CD4                     l10245:
  2379                           
  2380                           ;doprnt.c: 861: }
  2381                           ;doprnt.c: 1121: if(prec <= 12)
  2382  000CD4  0101               	movlb	1	; () banked
  2383  000CD6  0101               	movlb	1	; () banked
  2384  000CD8  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2385  000CDA  0A80               	xorlw	128
  2386  000CDC  0F80               	addlw	-128
  2387  000CDE  0E0D               	movlw	13
  2388  000CE0  B4D8               	btfsc	status,2,c
  2389  000CE2  5D7C               	subwf	sprintf@prec& (0+255),w,b
  2390  000CE4  B0D8               	btfsc	status,0,c
  2391  000CE6  D015               	goto	l10249
  2392                           
  2393                           ; BSR set to: 1
  2394                           ;doprnt.c: 1122: fval += fround(prec);
  2395  000CE8  0101               	movlb	1	; () banked
  2396  000CEA  0E01               	movlw	high sprintf@fval
  2397  000CEC  0101               	movlb	1	; () banked
  2398  000CEE  0101               	movlb	1	; () banked
  2399  000CF0  6F47               	movwf	(?___asftadd+1)& (0+255),b
  2400  000CF2  0101               	movlb	1	; () banked
  2401  000CF4  0E79               	movlw	low sprintf@fval
  2402  000CF6  0101               	movlb	1	; () banked
  2403  000CF8  6F46               	movwf	?___asftadd& (0+255),b
  2404  000CFA  C17C  F127         	movff	sprintf@prec,?_fround
  2405  000CFE  EC3C  F017         	call	_fround	;wreg free
  2406  000D02  C129  F14A         	movff	?_fround+2,?___asftadd+4
  2407  000D06  C128  F149         	movff	?_fround+1,?___asftadd+3
  2408  000D0A  C127  F148         	movff	?_fround,?___asftadd+2
  2409  000D0E  ECB7  F02F         	call	___asftadd	;wreg free
  2410  000D12                     l10249:
  2411                           
  2412                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2413  000D12  0101               	movlb	1	; () banked
  2414  000D14  0101               	movlb	1	; () banked
  2415  000D16  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2416  000D18  0A80               	xorlw	128
  2417  000D1A  0F80               	addlw	-128
  2418  000D1C  0E0A               	movlw	10
  2419  000D1E  B4D8               	btfsc	status,2,c
  2420  000D20  5D75               	subwf	sprintf@exp& (0+255),w,b
  2421  000D22  B0D8               	btfsc	status,0,c
  2422  000D24  D024               	goto	l10257
  2423                           
  2424                           ; BSR set to: 1
  2425  000D26  0E7F               	movlw	127
  2426  000D28  0101               	movlb	1	; () banked
  2427  000D2A  0101               	movlb	1	; () banked
  2428  000D2C  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  2429  000D2E  0101               	movlb	1	; () banked
  2430  000D30  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2431  000D32  0101               	movlb	1	; () banked
  2432  000D34  1179               	iorwf	sprintf@fval& (0+255),w,b
  2433  000D36  B4D8               	btfsc	status,2,c
  2434  000D38  D06F               	goto	l10273
  2435                           
  2436                           ; BSR set to: 1
  2437  000D3A  C179  F133         	movff	sprintf@fval,?___fttol
  2438  000D3E  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  2439  000D42  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  2440  000D46  EC70  F021         	call	___fttol	;wreg free
  2441  000D4A  0101               	movlb	1	; () banked
  2442  000D4C  0101               	movlb	1	; () banked
  2443  000D4E  5136               	movf	(?___fttol+3)& (0+255),w,b
  2444  000D50  1133               	iorwf	?___fttol& (0+255),w,b
  2445  000D52  1134               	iorwf	(?___fttol+1)& (0+255),w,b
  2446  000D54  1135               	iorwf	(?___fttol+2)& (0+255),w,b
  2447  000D56  A4D8               	btfss	status,2,c
  2448  000D58  D05F               	goto	l10273
  2449                           
  2450                           ; BSR set to: 1
  2451  000D5A  0101               	movlb	1	; () banked
  2452  000D5C  0101               	movlb	1	; () banked
  2453  000D5E  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2454  000D60  0A80               	xorlw	128
  2455  000D62  0F80               	addlw	-128
  2456  000D64  0E02               	movlw	2
  2457  000D66  B4D8               	btfsc	status,2,c
  2458  000D68  5D75               	subwf	sprintf@exp& (0+255),w,b
  2459  000D6A  A0D8               	btfss	status,0,c
  2460  000D6C  D055               	goto	l10273
  2461  000D6E                     l10257:
  2462                           
  2463                           ; BSR set to: 1
  2464                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2465  000D6E  C16B  F100         	movff	sprintf@integ,?___ftge
  2466  000D72  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2467  000D76  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2468  000D7A  0E70               	movlw	112
  2469  000D7C  0101               	movlb	1	; () banked
  2470  000D7E  0101               	movlb	1	; () banked
  2471  000D80  6F03               	movwf	(?___ftge+3)& (0+255),b
  2472  000D82  0E89               	movlw	137
  2473  000D84  0101               	movlb	1	; () banked
  2474  000D86  0101               	movlb	1	; () banked
  2475  000D88  6F04               	movwf	(?___ftge+4)& (0+255),b
  2476  000D8A  0E40               	movlw	64
  2477  000D8C  0101               	movlb	1	; () banked
  2478  000D8E  0101               	movlb	1	; () banked
  2479  000D90  6F05               	movwf	(?___ftge+5)& (0+255),b
  2480  000D92  EC9A  F026         	call	___ftge	;wreg free
  2481  000D96  B0D8               	btfsc	status,0,c
  2482  000D98  D003               	goto	l10261
  2483                           
  2484                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2485  000D9A  0101               	movlb	1	; () banked
  2486  000D9C  0EF7               	movlw	247
  2487  000D9E  D002               	goto	L1
  2488  000DA0                     l10261:
  2489                           
  2490                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2491  000DA0  0101               	movlb	1	; () banked
  2492  000DA2  0EF8               	movlw	248
  2493  000DA4                     L1:
  2494  000DA4  0101               	movlb	1	; () banked
  2495  000DA6  2775               	addwf	sprintf@exp& (0+255),f,b
  2496  000DA8  0EFF               	movlw	255
  2497  000DAA  0101               	movlb	1	; () banked
  2498  000DAC  2376               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2499                           
  2500                           ; BSR set to: 1
  2501                           ;doprnt.c: 1133: }
  2502                           ;doprnt.c: 1134: integ = scale(exp);
  2503                           
  2504                           ; BSR set to: 1
  2505  000DAE  C175  F127         	movff	sprintf@exp,?_scale
  2506  000DB2  EC0A  F012         	call	_scale	;wreg free
  2507  000DB6  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  2508  000DBA  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  2509  000DBE  C127  F16B         	movff	?_scale,sprintf@integ
  2510                           
  2511                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2512  000DC2  C179  F100         	movff	sprintf@fval,?__tdiv_to_l_
  2513  000DC6  C17A  F101         	movff	sprintf@fval+1,?__tdiv_to_l_+1
  2514  000DCA  C17B  F102         	movff	sprintf@fval+2,?__tdiv_to_l_+2
  2515  000DCE  C16B  F103         	movff	sprintf@integ,?__tdiv_to_l_+3
  2516  000DD2  C16C  F104         	movff	sprintf@integ+1,?__tdiv_to_l_+4
  2517  000DD6  C16D  F105         	movff	sprintf@integ+2,?__tdiv_to_l_+5
  2518  000DDA  ECD9  F01B         	call	__tdiv_to_l_	;wreg free
  2519  000DDE  C103  F164         	movff	?__tdiv_to_l_+3,_sprintf$563+3
  2520  000DE2  C102  F163         	movff	?__tdiv_to_l_+2,_sprintf$563+2
  2521  000DE6  C101  F162         	movff	?__tdiv_to_l_+1,_sprintf$563+1
  2522  000DEA  C100  F161         	movff	?__tdiv_to_l_,_sprintf$563
  2523  000DEE  C161  F16E         	movff	_sprintf$563,sprintf@_val
  2524  000DF2  C162  F16F         	movff	_sprintf$563+1,sprintf@_val+1
  2525  000DF6  C163  F170         	movff	_sprintf$563+2,sprintf@_val+2
  2526  000DFA  C164  F171         	movff	_sprintf$563+3,sprintf@_val+3
  2527                           
  2528                           ;doprnt.c: 1138: fval = 0.0;
  2529  000DFE  0E00               	movlw	0
  2530  000E00  0101               	movlb	1	; () banked
  2531  000E02  0101               	movlb	1	; () banked
  2532  000E04  6F79               	movwf	sprintf@fval& (0+255),b
  2533  000E06  0E00               	movlw	0
  2534  000E08  0101               	movlb	1	; () banked
  2535  000E0A  0101               	movlb	1	; () banked
  2536  000E0C  6F7A               	movwf	(sprintf@fval+1)& (0+255),b
  2537  000E0E  0E00               	movlw	0
  2538  000E10  0101               	movlb	1	; () banked
  2539  000E12  0101               	movlb	1	; () banked
  2540  000E14  6F7B               	movwf	(sprintf@fval+2)& (0+255),b
  2541                           
  2542                           ;doprnt.c: 1139: } else {
  2543  000E16  D032               	goto	l10279
  2544  000E18                     l10273:
  2545                           
  2546                           ; BSR set to: 1
  2547                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2548  000E18  C179  F133         	movff	sprintf@fval,?___fttol
  2549  000E1C  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  2550  000E20  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  2551  000E24  EC70  F021         	call	___fttol	;wreg free
  2552  000E28  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  2553  000E2C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  2554  000E30  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  2555  000E34  C133  F16E         	movff	?___fttol,sprintf@_val
  2556                           
  2557                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2558  000E38  0101               	movlb	1	; () banked
  2559  000E3A  0E01               	movlw	high sprintf@fval
  2560  000E3C  0101               	movlb	1	; () banked
  2561  000E3E  0101               	movlb	1	; () banked
  2562  000E40  6F4D               	movwf	(?___asftsub+1)& (0+255),b
  2563  000E42  0101               	movlb	1	; () banked
  2564  000E44  0E79               	movlw	low sprintf@fval
  2565  000E46  0101               	movlb	1	; () banked
  2566  000E48  6F4C               	movwf	?___asftsub& (0+255),b
  2567  000E4A  C16E  F108         	movff	sprintf@_val,?___lltoft
  2568  000E4E  C16F  F109         	movff	sprintf@_val+1,?___lltoft+1
  2569  000E52  C170  F10A         	movff	sprintf@_val+2,?___lltoft+2
  2570  000E56  C171  F10B         	movff	sprintf@_val+3,?___lltoft+3
  2571  000E5A  EC22  F02B         	call	___lltoft	;wreg free
  2572  000E5E  C10A  F150         	movff	?___lltoft+2,?___asftsub+4
  2573  000E62  C109  F14F         	movff	?___lltoft+1,?___asftsub+3
  2574  000E66  C108  F14E         	movff	?___lltoft,?___asftsub+2
  2575  000E6A  EC54  F02F         	call	___asftsub	;wreg free
  2576                           
  2577                           ;doprnt.c: 1142: exp = 0;
  2578  000E6E  0E00               	movlw	0
  2579  000E70  0101               	movlb	1	; () banked
  2580  000E72  0101               	movlb	1	; () banked
  2581  000E74  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2582  000E76  0E00               	movlw	0
  2583  000E78  0101               	movlb	1	; () banked
  2584  000E7A  6F75               	movwf	sprintf@exp& (0+255),b
  2585  000E7C                     l10279:
  2586                           
  2587                           ; BSR set to: 1
  2588                           ;doprnt.c: 1143: }
  2589                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2590  000E7C  0101               	movlb	1	; () banked
  2591  000E7E  6F58               	movwf	??_sprintf& (0+255),b
  2592  000E80  0E01               	movlw	1
  2593  000E82  0101               	movlb	1	; () banked
  2594  000E84  0101               	movlb	1	; () banked
  2595  000E86  6F7E               	movwf	sprintf@c& (0+255),b
  2596  000E88  0101               	movlb	1	; () banked
  2597  000E8A  5158               	movf	??_sprintf& (0+255),w,b
  2598  000E8C                     
  2599                           ; BSR set to: 1
  2600  000E8C  0101               	movlb	1	; () banked
  2601  000E8E  0101               	movlb	1	; () banked
  2602  000E90  517E               	movf	sprintf@c& (0+255),w,b
  2603  000E92  0A0A               	xorlw	10
  2604  000E94  B4D8               	btfsc	status,2,c
  2605  000E96  D021               	goto	l10293
  2606                           
  2607                           ; BSR set to: 1
  2608                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2609                           
  2610                           ; BSR set to: 1
  2611                           
  2612                           ; BSR set to: 1
  2613  000E98  0101               	movlb	1	; () banked
  2614  000E9A  0101               	movlb	1	; () banked
  2615  000E9C  517E               	movf	sprintf@c& (0+255),w,b
  2616  000E9E  0D04               	mullw	4
  2617  000EA0  0E00               	movlw	low _dpowers
  2618  000EA2  24F3               	addwf	prodl,w,c
  2619  000EA4  6EF6               	movwf	tblptrl,c
  2620  000EA6  0E08               	movlw	high _dpowers
  2621  000EA8  20F4               	addwfc	prodh,w,c
  2622  000EAA  6EF7               	movwf	tblptrh,c
  2623  000EAC  0009               	tblrd		*+
  2624  000EAE  50F5               	movf	tablat,w,c
  2625  000EB0  0101               	movlb	1	; () banked
  2626  000EB2  0101               	movlb	1	; () banked
  2627  000EB4  5D6E               	subwf	sprintf@_val& (0+255),w,b
  2628  000EB6  0009               	tblrd		*+
  2629  000EB8  50F5               	movf	tablat,w,c
  2630  000EBA  0101               	movlb	1	; () banked
  2631  000EBC  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2632  000EBE  0009               	tblrd		*+
  2633  000EC0  50F5               	movf	tablat,w,c
  2634  000EC2  0101               	movlb	1	; () banked
  2635  000EC4  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2636  000EC6  0009               	tblrd		*+
  2637  000EC8  50F5               	movf	tablat,w,c
  2638  000ECA  0101               	movlb	1	; () banked
  2639  000ECC  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2640  000ECE  A0D8               	btfss	status,0,c
  2641  000ED0  D004               	goto	l10293
  2642                           
  2643                           ; BSR set to: 1
  2644                           
  2645                           ; BSR set to: 1
  2646                           
  2647                           ; BSR set to: 1
  2648                           ;doprnt.c: 1147: break;
  2649  000ED2  0101               	movlb	1	; () banked
  2650  000ED4  0101               	movlb	1	; () banked
  2651  000ED6  2B7E               	incf	sprintf@c& (0+255),f,b
  2652  000ED8  D7D9               	goto	L2
  2653  000EDA                     l10293:
  2654                           
  2655                           ; BSR set to: 1
  2656                           ;doprnt.c: 1151: width -= prec + c + exp;
  2657  000EDA  0101               	movlb	1	; () banked
  2658  000EDC  C17E  F158         	movff	sprintf@c,??_sprintf
  2659  000EE0  0101               	movlb	1	; () banked
  2660  000EE2  6B59               	clrf	(??_sprintf+1)& (0+255),b
  2661  000EE4  BF58               	btfsc	??_sprintf& (0+255),7,b
  2662  000EE6  0759               	decf	(??_sprintf+1)& (0+255),f,b
  2663  000EE8  0101               	movlb	1	; () banked
  2664  000EEA  0101               	movlb	1	; () banked
  2665  000EEC  517C               	movf	sprintf@prec& (0+255),w,b
  2666  000EEE  0101               	movlb	1	; () banked
  2667  000EF0  2758               	addwf	??_sprintf& (0+255),f,b
  2668  000EF2  0101               	movlb	1	; () banked
  2669  000EF4  0101               	movlb	1	; () banked
  2670  000EF6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2671  000EF8  0101               	movlb	1	; () banked
  2672  000EFA  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  2673  000EFC  0101               	movlb	1	; () banked
  2674  000EFE  0101               	movlb	1	; () banked
  2675  000F00  5175               	movf	sprintf@exp& (0+255),w,b
  2676  000F02  0101               	movlb	1	; () banked
  2677  000F04  2758               	addwf	??_sprintf& (0+255),f,b
  2678  000F06  0101               	movlb	1	; () banked
  2679  000F08  0101               	movlb	1	; () banked
  2680  000F0A  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2681  000F0C  0101               	movlb	1	; () banked
  2682  000F0E  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  2683  000F10  0101               	movlb	1	; () banked
  2684  000F12  5158               	movf	??_sprintf& (0+255),w,b
  2685  000F14  0101               	movlb	1	; () banked
  2686  000F16  0101               	movlb	1	; () banked
  2687  000F18  5F77               	subwf	sprintf@width& (0+255),f,b
  2688  000F1A  0101               	movlb	1	; () banked
  2689  000F1C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2690  000F1E  0101               	movlb	1	; () banked
  2691  000F20  0101               	movlb	1	; () banked
  2692  000F22  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  2693                           
  2694                           ;doprnt.c: 1152: if(
  2695                           ;doprnt.c: 1156: prec)
  2696  000F24  0101               	movlb	1	; () banked
  2697  000F26  0101               	movlb	1	; () banked
  2698  000F28  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2699  000F2A  117C               	iorwf	sprintf@prec& (0+255),w,b
  2700  000F2C  B4D8               	btfsc	status,2,c
  2701  000F2E  D005               	goto	l10297
  2702                           
  2703                           ; BSR set to: 1
  2704                           ;doprnt.c: 1157: width--;
  2705  000F30  0101               	movlb	1	; () banked
  2706  000F32  0101               	movlb	1	; () banked
  2707  000F34  0777               	decf	sprintf@width& (0+255),f,b
  2708  000F36  A0D8               	btfss	status,0,c
  2709  000F38  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2710  000F3A                     l10297:
  2711                           
  2712                           ; BSR set to: 1
  2713                           ;doprnt.c: 1158: if(flag & 0x03)
  2714  000F3A  0E03               	movlw	3
  2715  000F3C  0101               	movlb	1	; () banked
  2716  000F3E  0101               	movlb	1	; () banked
  2717  000F40  1573               	andwf	sprintf@flag& (0+255),w,b
  2718  000F42  0101               	movlb	1	; () banked
  2719  000F44  6F58               	movwf	??_sprintf& (0+255),b
  2720  000F46  0E00               	movlw	0
  2721  000F48  0101               	movlb	1	; () banked
  2722  000F4A  0101               	movlb	1	; () banked
  2723  000F4C  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2724  000F4E  0101               	movlb	1	; () banked
  2725  000F50  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2726  000F52  0101               	movlb	1	; () banked
  2727  000F54  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2728  000F56  1158               	iorwf	??_sprintf& (0+255),w,b
  2729  000F58  B4D8               	btfsc	status,2,c
  2730  000F5A  D005               	goto	l10301
  2731                           
  2732                           ; BSR set to: 1
  2733                           ;doprnt.c: 1159: width--;
  2734  000F5C  0101               	movlb	1	; () banked
  2735  000F5E  0101               	movlb	1	; () banked
  2736  000F60  0777               	decf	sprintf@width& (0+255),f,b
  2737  000F62  A0D8               	btfss	status,0,c
  2738  000F64  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2739  000F66                     l10301:
  2740                           
  2741                           ; BSR set to: 1
  2742                           ;doprnt.c: 1162: if(flag & 0x04) {
  2743  000F66  0101               	movlb	1	; () banked
  2744  000F68  0101               	movlb	1	; () banked
  2745  000F6A  B573               	btfsc	sprintf@flag& (0+255),2,b
  2746  000F6C  D010               	goto	l10311
  2747  000F6E  D029               	goto	l10319
  2748  000F70                     l10305:
  2749                           
  2750                           ; BSR set to: 1
  2751                           ;doprnt.c: 1176: ((*sp++ = ('0')));
  2752  000F70  C151  FFD9         	movff	sprintf@sp,fsr2l
  2753  000F74  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2754  000F78  0E30               	movlw	48
  2755  000F7A  6EDF               	movwf	indf2,c
  2756                           
  2757                           ; BSR set to: 1
  2758  000F7C  0101               	movlb	1	; () banked
  2759  000F7E  0101               	movlb	1	; () banked
  2760  000F80  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2761  000F82  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;doprnt.c: 1177: width--;
  2765  000F84  0101               	movlb	1	; () banked
  2766  000F86  0101               	movlb	1	; () banked
  2767  000F88  0777               	decf	sprintf@width& (0+255),f,b
  2768  000F8A  A0D8               	btfss	status,0,c
  2769  000F8C  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2770  000F8E                     l10311:
  2771                           
  2772                           ; BSR set to: 1
  2773  000F8E  0101               	movlb	1	; () banked
  2774  000F90  0101               	movlb	1	; () banked
  2775  000F92  5178               	movf	(sprintf@width+1)& (0+255),w,b
  2776  000F94  0A80               	xorlw	128
  2777  000F96  0F80               	addlw	-128
  2778  000F98  0E01               	movlw	1
  2779  000F9A  B4D8               	btfsc	status,2,c
  2780  000F9C  5D77               	subwf	sprintf@width& (0+255),w,b
  2781  000F9E  A0D8               	btfss	status,0,c
  2782  000FA0  D079               	goto	l10335
  2783  000FA2  D7E6               	goto	l10305
  2784  000FA4                     l10313:
  2785                           
  2786                           ; BSR set to: 1
  2787                           ;doprnt.c: 1188: ((*sp++ = (' ')));
  2788  000FA4  C151  FFD9         	movff	sprintf@sp,fsr2l
  2789  000FA8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2790  000FAC  0E20               	movlw	32
  2791  000FAE  6EDF               	movwf	indf2,c
  2792                           
  2793                           ; BSR set to: 1
  2794  000FB0  0101               	movlb	1	; () banked
  2795  000FB2  0101               	movlb	1	; () banked
  2796  000FB4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2797  000FB6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2798                           
  2799                           ; BSR set to: 1
  2800                           ;doprnt.c: 1189: width--;
  2801  000FB8  0101               	movlb	1	; () banked
  2802  000FBA  0101               	movlb	1	; () banked
  2803  000FBC  0777               	decf	sprintf@width& (0+255),f,b
  2804  000FBE  A0D8               	btfss	status,0,c
  2805  000FC0  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2806  000FC2                     l10319:
  2807                           
  2808                           ; BSR set to: 1
  2809  000FC2  0101               	movlb	1	; () banked
  2810  000FC4  0101               	movlb	1	; () banked
  2811  000FC6  5178               	movf	(sprintf@width+1)& (0+255),w,b
  2812  000FC8  0A80               	xorlw	128
  2813  000FCA  0F80               	addlw	-128
  2814  000FCC  0E01               	movlw	1
  2815  000FCE  B4D8               	btfsc	status,2,c
  2816  000FD0  5D77               	subwf	sprintf@width& (0+255),w,b
  2817  000FD2  B0D8               	btfsc	status,0,c
  2818  000FD4  D7E7               	goto	l10313
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;doprnt.c: 1190: }
  2822                           ;doprnt.c: 1195: if(flag & 0x03)
  2823                           
  2824                           ; BSR set to: 1
  2825  000FD6  0E03               	movlw	3
  2826  000FD8  0101               	movlb	1	; () banked
  2827  000FDA  0101               	movlb	1	; () banked
  2828  000FDC  1573               	andwf	sprintf@flag& (0+255),w,b
  2829  000FDE  0101               	movlb	1	; () banked
  2830  000FE0  6F58               	movwf	??_sprintf& (0+255),b
  2831  000FE2  0E00               	movlw	0
  2832  000FE4  0101               	movlb	1	; () banked
  2833  000FE6  0101               	movlb	1	; () banked
  2834  000FE8  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2835  000FEA  0101               	movlb	1	; () banked
  2836  000FEC  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2837  000FEE  0101               	movlb	1	; () banked
  2838  000FF0  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2839  000FF2  1158               	iorwf	??_sprintf& (0+255),w,b
  2840  000FF4  B4D8               	btfsc	status,2,c
  2841  000FF6  D04E               	goto	l10335
  2842                           
  2843                           ; BSR set to: 1
  2844                           ;doprnt.c: 1197: ((*sp++ = ('-')));
  2845  000FF8  C151  FFD9         	movff	sprintf@sp,fsr2l
  2846  000FFC  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2847  001000  0E2D               	movlw	45
  2848  001002  D043               	goto	L3
  2849  001004                     l10327:
  2850                           
  2851                           ; BSR set to: 1
  2852                           ;doprnt.c: 1207: {
  2853                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
  2854  001004  C16E  F100         	movff	sprintf@_val,?___lldiv
  2855  001008  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  2856  00100C  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  2857  001010  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  2858  001014  0101               	movlb	1	; () banked
  2859  001016  0101               	movlb	1	; () banked
  2860  001018  517E               	movf	sprintf@c& (0+255),w,b
  2861  00101A  0D04               	mullw	4
  2862  00101C  0E00               	movlw	low _dpowers
  2863  00101E  24F3               	addwf	prodl,w,c
  2864  001020  6EF6               	movwf	tblptrl,c
  2865  001022  0E08               	movlw	high _dpowers
  2866  001024  20F4               	addwfc	prodh,w,c
  2867  001026  6EF7               	movwf	tblptrh,c
  2868  001028  0009               	tblrd		*+
  2869  00102A  0101               	movlb	1	; () banked
  2870  00102C  CFF5 F104          	movff	tablat,?___lldiv+4
  2871  001030  0009               	tblrd		*+
  2872  001032  0101               	movlb	1	; () banked
  2873  001034  CFF5 F105          	movff	tablat,?___lldiv+5
  2874  001038  0009               	tblrd		*+
  2875  00103A  0101               	movlb	1	; () banked
  2876  00103C  CFF5 F106          	movff	tablat,?___lldiv+6
  2877  001040  000A               	tblrd		*-
  2878  001042  0101               	movlb	1	; () banked
  2879  001044  CFF5 F107          	movff	tablat,?___lldiv+7
  2880  001048  EC94  F025         	call	___lldiv	;wreg free
  2881  00104C  C100  F165         	movff	?___lldiv,sprintf@vd
  2882  001050  C101  F166         	movff	?___lldiv+1,sprintf@vd+1
  2883                           
  2884                           ;doprnt.c: 1209: vd %= 10;
  2885  001054  C165  F100         	movff	sprintf@vd,?___lwmod
  2886  001058  C166  F101         	movff	sprintf@vd+1,?___lwmod+1
  2887  00105C  0E00               	movlw	0
  2888  00105E  0101               	movlb	1	; () banked
  2889  001060  0101               	movlb	1	; () banked
  2890  001062  6F03               	movwf	(?___lwmod+3)& (0+255),b
  2891  001064  0E0A               	movlw	10
  2892  001066  0101               	movlb	1	; () banked
  2893  001068  6F02               	movwf	(?___lwmod+2)& (0+255),b
  2894  00106A  EC47  F02C         	call	___lwmod	;wreg free
  2895  00106E  0101               	movlb	1	; () banked
  2896  001070  C100  F165         	movff	?___lwmod,sprintf@vd
  2897  001074  0101               	movlb	1	; () banked
  2898  001076  C101  F166         	movff	?___lwmod+1,sprintf@vd+1
  2899                           
  2900                           ; BSR set to: 1
  2901                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
  2902  00107A  0101               	movlb	1	; () banked
  2903  00107C  0101               	movlb	1	; () banked
  2904  00107E  5165               	movf	sprintf@vd& (0+255),w,b
  2905  001080  0F30               	addlw	48
  2906  001082  C151  FFD9         	movff	sprintf@sp,fsr2l
  2907  001086  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2908  00108A                     L3:
  2909  00108A  6EDF               	movwf	indf2,c
  2910                           
  2911                           ; BSR set to: 1
  2912  00108C  0101               	movlb	1	; () banked
  2913  00108E  0101               	movlb	1	; () banked
  2914  001090  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2915  001092  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2916  001094                     l10335:
  2917                           
  2918                           ; BSR set to: 1
  2919  001094  0101               	movlb	1	; () banked
  2920  001096  0101               	movlb	1	; () banked
  2921  001098  077E               	decf	sprintf@c& (0+255),f,b
  2922  00109A  0101               	movlb	1	; () banked
  2923  00109C  297E               	incf	sprintf@c& (0+255),w,b
  2924  00109E  B4D8               	btfsc	status,2,c
  2925  0010A0  D010               	goto	l10343
  2926  0010A2  D7B0               	goto	l10327
  2927  0010A4                     l10337:
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;doprnt.c: 1215: ((*sp++ = ('0')));
  2931  0010A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  2932  0010A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2933  0010AC  0E30               	movlw	48
  2934  0010AE  6EDF               	movwf	indf2,c
  2935                           
  2936                           ; BSR set to: 1
  2937  0010B0  0101               	movlb	1	; () banked
  2938  0010B2  0101               	movlb	1	; () banked
  2939  0010B4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2940  0010B6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2941                           
  2942                           ; BSR set to: 1
  2943                           ;doprnt.c: 1216: exp--;
  2944  0010B8  0101               	movlb	1	; () banked
  2945  0010BA  0101               	movlb	1	; () banked
  2946  0010BC  0775               	decf	sprintf@exp& (0+255),f,b
  2947  0010BE  A0D8               	btfss	status,0,c
  2948  0010C0  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2949  0010C2                     l10343:
  2950                           
  2951                           ; BSR set to: 1
  2952  0010C2  0101               	movlb	1	; () banked
  2953  0010C4  0101               	movlb	1	; () banked
  2954  0010C6  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2955  0010C8  0A80               	xorlw	128
  2956  0010CA  0F80               	addlw	-128
  2957  0010CC  0E01               	movlw	1
  2958  0010CE  B4D8               	btfsc	status,2,c
  2959  0010D0  5D75               	subwf	sprintf@exp& (0+255),w,b
  2960  0010D2  B0D8               	btfsc	status,0,c
  2961  0010D4  D7E7               	goto	l10337
  2962                           
  2963                           ; BSR set to: 1
  2964                           ;doprnt.c: 1217: }
  2965                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2966                           
  2967                           ; BSR set to: 1
  2968  0010D6  0101               	movlb	1	; () banked
  2969  0010D8  0101               	movlb	1	; () banked
  2970  0010DA  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2971  0010DC  0A80               	xorlw	128
  2972  0010DE  0F80               	addlw	-128
  2973  0010E0  0E09               	movlw	9
  2974  0010E2  B4D8               	btfsc	status,2,c
  2975  0010E4  5D7C               	subwf	sprintf@prec& (0+255),w,b
  2976  0010E6  A0D8               	btfss	status,0,c
  2977  0010E8  D009               	goto	l325
  2978                           
  2979                           ; BSR set to: 1
  2980                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2981  0010EA  0101               	movlb	1	; () banked
  2982  0010EC  6F58               	movwf	??_sprintf& (0+255),b
  2983  0010EE  0E08               	movlw	8
  2984  0010F0  0101               	movlb	1	; () banked
  2985  0010F2  0101               	movlb	1	; () banked
  2986  0010F4  6F7E               	movwf	sprintf@c& (0+255),b
  2987  0010F6  0101               	movlb	1	; () banked
  2988  0010F8  5158               	movf	??_sprintf& (0+255),w,b
  2989  0010FA  D002               	goto	l10349
  2990  0010FC                     l325:
  2991                           
  2992                           ; BSR set to: 1
  2993                           ;doprnt.c: 1220: else
  2994                           ;doprnt.c: 1221: c = prec;
  2995  0010FC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  2996  001100                     l10349:
  2997                           
  2998                           ; BSR set to: 1
  2999                           ;doprnt.c: 1222: prec -= c;
  3000  001100  0101               	movlb	1	; () banked
  3001  001102  0101               	movlb	1	; () banked
  3002  001104  517E               	movf	sprintf@c& (0+255),w,b
  3003  001106  0101               	movlb	1	; () banked
  3004  001108  0101               	movlb	1	; () banked
  3005  00110A  5F7C               	subwf	sprintf@prec& (0+255),f,b
  3006  00110C  0E00               	movlw	0
  3007  00110E  0101               	movlb	1	; () banked
  3008  001110  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3009  001112  0EFF               	movlw	255
  3010  001114  0101               	movlb	1	; () banked
  3011  001116  0101               	movlb	1	; () banked
  3012  001118  5B7D               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3013                           
  3014                           ; BSR set to: 1
  3015                           ;doprnt.c: 1226: if(c)
  3016  00111A  0101               	movlb	1	; () banked
  3017  00111C  0101               	movlb	1	; () banked
  3018  00111E  517E               	movf	sprintf@c& (0+255),w,b
  3019  001120  B4D8               	btfsc	status,2,c
  3020  001122  D00A               	goto	l10357
  3021                           
  3022                           ; BSR set to: 1
  3023                           ;doprnt.c: 1228: ((*sp++ = ('.')));
  3024  001124  C151  FFD9         	movff	sprintf@sp,fsr2l
  3025  001128  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3026  00112C  0E2E               	movlw	46
  3027  00112E  6EDF               	movwf	indf2,c
  3028                           
  3029                           ; BSR set to: 1
  3030  001130  0101               	movlb	1	; () banked
  3031  001132  0101               	movlb	1	; () banked
  3032  001134  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3033  001136  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3034  001138                     l10357:
  3035                           
  3036                           ; BSR set to: 1
  3037                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  3038  001138  C17E  F127         	movff	sprintf@c,?_scale
  3039  00113C  EC0A  F012         	call	_scale	;wreg free
  3040  001140  C129  F160         	movff	?_scale+2,_sprintf$1204+2
  3041  001144  C128  F15F         	movff	?_scale+1,_sprintf$1204+1
  3042  001148  C127  F15E         	movff	?_scale,_sprintf$1204
  3043                           
  3044                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  3045  00114C  C179  F119         	movff	sprintf@fval,?___ftmul+3
  3046  001150  C17A  F11A         	movff	sprintf@fval+1,?___ftmul+4
  3047  001154  C17B  F11B         	movff	sprintf@fval+2,?___ftmul+5
  3048  001158  C15E  F116         	movff	_sprintf$1204,?___ftmul
  3049  00115C  C15F  F117         	movff	_sprintf$1204+1,?___ftmul+1
  3050  001160  C160  F118         	movff	_sprintf$1204+2,?___ftmul+2
  3051  001164  ECE1  F01C         	call	___ftmul	;wreg free
  3052  001168  C118  F135         	movff	?___ftmul+2,?___fttol+2
  3053  00116C  C117  F134         	movff	?___ftmul+1,?___fttol+1
  3054  001170  C116  F133         	movff	?___ftmul,?___fttol
  3055  001174  EC70  F021         	call	___fttol	;wreg free
  3056  001178  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  3057  00117C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  3058  001180  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  3059  001184  C133  F16E         	movff	?___fttol,sprintf@_val
  3060                           
  3061                           ;doprnt.c: 1235: while(c--) {
  3062  001188  D074               	goto	l10371
  3063  00118A                     l10361:
  3064                           
  3065                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
  3066  00118A  C16E  F100         	movff	sprintf@_val,?___lldiv
  3067  00118E  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  3068  001192  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  3069  001196  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  3070  00119A  0101               	movlb	1	; () banked
  3071  00119C  0101               	movlb	1	; () banked
  3072  00119E  517E               	movf	sprintf@c& (0+255),w,b
  3073  0011A0  0D04               	mullw	4
  3074  0011A2  0E00               	movlw	low _dpowers
  3075  0011A4  24F3               	addwf	prodl,w,c
  3076  0011A6  6EF6               	movwf	tblptrl,c
  3077  0011A8  0E08               	movlw	high _dpowers
  3078  0011AA  20F4               	addwfc	prodh,w,c
  3079  0011AC  6EF7               	movwf	tblptrh,c
  3080  0011AE  0009               	tblrd		*+
  3081  0011B0  0101               	movlb	1	; () banked
  3082  0011B2  CFF5 F104          	movff	tablat,?___lldiv+4
  3083  0011B6  0009               	tblrd		*+
  3084  0011B8  0101               	movlb	1	; () banked
  3085  0011BA  CFF5 F105          	movff	tablat,?___lldiv+5
  3086  0011BE  0009               	tblrd		*+
  3087  0011C0  0101               	movlb	1	; () banked
  3088  0011C2  CFF5 F106          	movff	tablat,?___lldiv+6
  3089  0011C6  000A               	tblrd		*-
  3090  0011C8  0101               	movlb	1	; () banked
  3091  0011CA  CFF5 F107          	movff	tablat,?___lldiv+7
  3092  0011CE  EC94  F025         	call	___lldiv	;wreg free
  3093  0011D2  C100  F167         	movff	?___lldiv,sprintf@vd_565
  3094  0011D6  C101  F168         	movff	?___lldiv+1,sprintf@vd_565+1
  3095                           
  3096                           ;doprnt.c: 1237: vd %= 10;
  3097  0011DA  C167  F100         	movff	sprintf@vd_565,?___lwmod
  3098  0011DE  C168  F101         	movff	sprintf@vd_565+1,?___lwmod+1
  3099  0011E2  0E00               	movlw	0
  3100  0011E4  0101               	movlb	1	; () banked
  3101  0011E6  0101               	movlb	1	; () banked
  3102  0011E8  6F03               	movwf	(?___lwmod+3)& (0+255),b
  3103  0011EA  0E0A               	movlw	10
  3104  0011EC  0101               	movlb	1	; () banked
  3105  0011EE  6F02               	movwf	(?___lwmod+2)& (0+255),b
  3106  0011F0  EC47  F02C         	call	___lwmod	;wreg free
  3107  0011F4  0101               	movlb	1	; () banked
  3108  0011F6  C100  F167         	movff	?___lwmod,sprintf@vd_565
  3109  0011FA  0101               	movlb	1	; () banked
  3110  0011FC  C101  F168         	movff	?___lwmod+1,sprintf@vd_565+1
  3111                           
  3112                           ; BSR set to: 1
  3113                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
  3114  001200  0101               	movlb	1	; () banked
  3115  001202  0101               	movlb	1	; () banked
  3116  001204  5167               	movf	sprintf@vd_565& (0+255),w,b
  3117  001206  0F30               	addlw	48
  3118  001208  C151  FFD9         	movff	sprintf@sp,fsr2l
  3119  00120C  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3120  001210  6EDF               	movwf	indf2,c
  3121                           
  3122                           ; BSR set to: 1
  3123  001212  0101               	movlb	1	; () banked
  3124  001214  0101               	movlb	1	; () banked
  3125  001216  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3126  001218  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3127                           
  3128                           ; BSR set to: 1
  3129                           ;doprnt.c: 1239: _val._val %= dpowers[c];
  3130  00121A  C16E  F10E         	movff	sprintf@_val,?___llmod
  3131  00121E  C16F  F10F         	movff	sprintf@_val+1,?___llmod+1
  3132  001222  C170  F110         	movff	sprintf@_val+2,?___llmod+2
  3133  001226  C171  F111         	movff	sprintf@_val+3,?___llmod+3
  3134  00122A  0101               	movlb	1	; () banked
  3135  00122C  0101               	movlb	1	; () banked
  3136  00122E  517E               	movf	sprintf@c& (0+255),w,b
  3137  001230  0D04               	mullw	4
  3138  001232  0E00               	movlw	low _dpowers
  3139  001234  24F3               	addwf	prodl,w,c
  3140  001236  6EF6               	movwf	tblptrl,c
  3141  001238  0E08               	movlw	high _dpowers
  3142  00123A  20F4               	addwfc	prodh,w,c
  3143  00123C  6EF7               	movwf	tblptrh,c
  3144  00123E  0009               	tblrd		*+
  3145  001240  0101               	movlb	1	; () banked
  3146  001242  CFF5 F112          	movff	tablat,?___llmod+4
  3147  001246  0009               	tblrd		*+
  3148  001248  0101               	movlb	1	; () banked
  3149  00124A  CFF5 F113          	movff	tablat,?___llmod+5
  3150  00124E  0009               	tblrd		*+
  3151  001250  0101               	movlb	1	; () banked
  3152  001252  CFF5 F114          	movff	tablat,?___llmod+6
  3153  001256  000A               	tblrd		*-
  3154  001258  0101               	movlb	1	; () banked
  3155  00125A  CFF5 F115          	movff	tablat,?___llmod+7
  3156  00125E  EC59  F029         	call	___llmod	;wreg free
  3157  001262  C111  F171         	movff	?___llmod+3,sprintf@_val+3
  3158  001266  C110  F170         	movff	?___llmod+2,sprintf@_val+2
  3159  00126A  C10F  F16F         	movff	?___llmod+1,sprintf@_val+1
  3160  00126E  C10E  F16E         	movff	?___llmod,sprintf@_val
  3161  001272                     l10371:
  3162  001272  0101               	movlb	1	; () banked
  3163  001274  0101               	movlb	1	; () banked
  3164  001276  077E               	decf	sprintf@c& (0+255),f,b
  3165  001278  0101               	movlb	1	; () banked
  3166  00127A  297E               	incf	sprintf@c& (0+255),w,b
  3167  00127C  B4D8               	btfsc	status,2,c
  3168  00127E  D010               	goto	l10379
  3169  001280  D784               	goto	l10361
  3170  001282                     l10373:
  3171                           
  3172                           ; BSR set to: 1
  3173                           ;doprnt.c: 1243: ((*sp++ = ('0')));
  3174  001282  C151  FFD9         	movff	sprintf@sp,fsr2l
  3175  001286  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3176  00128A  0E30               	movlw	48
  3177  00128C  6EDF               	movwf	indf2,c
  3178                           
  3179                           ; BSR set to: 1
  3180  00128E  0101               	movlb	1	; () banked
  3181  001290  0101               	movlb	1	; () banked
  3182  001292  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3183  001294  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3184                           
  3185                           ; BSR set to: 1
  3186                           ;doprnt.c: 1244: prec--;
  3187  001296  0101               	movlb	1	; () banked
  3188  001298  0101               	movlb	1	; () banked
  3189  00129A  077C               	decf	sprintf@prec& (0+255),f,b
  3190  00129C  A0D8               	btfss	status,0,c
  3191  00129E  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3192  0012A0                     l10379:
  3193                           
  3194                           ; BSR set to: 1
  3195  0012A0  0101               	movlb	1	; () banked
  3196  0012A2  0101               	movlb	1	; () banked
  3197  0012A4  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3198  0012A6  117C               	iorwf	sprintf@prec& (0+255),w,b
  3199  0012A8  B4D8               	btfsc	status,2,c
  3200  0012AA  D1E6               	goto	l10477
  3201  0012AC  D7EA               	goto	l10373
  3202  0012AE                     l10381:
  3203                           
  3204                           ; BSR set to: 1
  3205                           ;doprnt.c: 1253: }
  3206                           ;doprnt.c: 1260: {
  3207                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3208  0012AE  C169  FFD9         	movff	sprintf@ap,fsr2l
  3209  0012B2  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  3210  0012B6  0101               	movlb	1	; () banked
  3211  0012B8  CFDE F16E          	movff	postinc2,sprintf@_val
  3212  0012BC  0101               	movlb	1	; () banked
  3213  0012BE  CFDD F16F          	movff	postdec2,sprintf@_val+1
  3214  0012C2  0101               	movlb	1	; () banked
  3215  0012C4  0E00               	movlw	0
  3216  0012C6  0101               	movlb	1	; () banked
  3217  0012C8  BF6F               	btfsc	(sprintf@_val+1)& (0+255),7,b
  3218  0012CA  0EFF               	movlw	-1
  3219  0012CC  0101               	movlb	1	; () banked
  3220  0012CE  6F70               	movwf	(sprintf@_val+2)& (0+255),b
  3221  0012D0  0101               	movlb	1	; () banked
  3222  0012D2  6F71               	movwf	(sprintf@_val+3)& (0+255),b
  3223                           
  3224                           ; BSR set to: 1
  3225  0012D4  0E02               	movlw	2
  3226  0012D6  0101               	movlb	1	; () banked
  3227  0012D8  0101               	movlb	1	; () banked
  3228  0012DA  2769               	addwf	sprintf@ap& (0+255),f,b
  3229  0012DC  0E00               	movlw	0
  3230  0012DE  0101               	movlb	1	; () banked
  3231  0012E0  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3232                           
  3233                           ; BSR set to: 1
  3234                           ;doprnt.c: 1268: if((long)_val._val < 0) {
  3235  0012E2  0101               	movlb	1	; () banked
  3236  0012E4  0101               	movlb	1	; () banked
  3237  0012E6  AF71               	btfss	(sprintf@_val+3)& (0+255),7,b
  3238  0012E8  D014               	goto	l10391
  3239                           
  3240                           ; BSR set to: 1
  3241                           ;doprnt.c: 1269: flag |= 0x03;
  3242  0012EA  0E03               	movlw	3
  3243  0012EC  0101               	movlb	1	; () banked
  3244  0012EE  0101               	movlb	1	; () banked
  3245  0012F0  1373               	iorwf	sprintf@flag& (0+255),f,b
  3246                           
  3247                           ; BSR set to: 1
  3248                           ;doprnt.c: 1270: _val._val = -_val._val;
  3249  0012F2  0101               	movlb	1	; () banked
  3250  0012F4  0101               	movlb	1	; () banked
  3251  0012F6  1F71               	comf	(sprintf@_val+3)& (0+255),f,b
  3252  0012F8  0101               	movlb	1	; () banked
  3253  0012FA  1F70               	comf	(sprintf@_val+2)& (0+255),f,b
  3254  0012FC  0101               	movlb	1	; () banked
  3255  0012FE  1F6F               	comf	(sprintf@_val+1)& (0+255),f,b
  3256  001300  0101               	movlb	1	; () banked
  3257  001302  6D6E               	negf	sprintf@_val& (0+255),b
  3258  001304  0E00               	movlw	0
  3259  001306  0101               	movlb	1	; () banked
  3260  001308  236F               	addwfc	(sprintf@_val+1)& (0+255),f,b
  3261  00130A  0101               	movlb	1	; () banked
  3262  00130C  2370               	addwfc	(sprintf@_val+2)& (0+255),f,b
  3263  00130E  0101               	movlb	1	; () banked
  3264  001310  2371               	addwfc	(sprintf@_val+3)& (0+255),f,b
  3265  001312                     l10391:
  3266                           
  3267                           ; BSR set to: 1
  3268                           ;doprnt.c: 1271: }
  3269                           ;doprnt.c: 1273: }
  3270                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
  3271  001312  0101               	movlb	1	; () banked
  3272  001314  0101               	movlb	1	; () banked
  3273  001316  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3274  001318  117C               	iorwf	sprintf@prec& (0+255),w,b
  3275  00131A  A4D8               	btfss	status,2,c
  3276  00131C  D00C               	goto	l10397
  3277                           
  3278                           ; BSR set to: 1
  3279  00131E  0101               	movlb	1	; () banked
  3280  001320  0101               	movlb	1	; () banked
  3281  001322  5171               	movf	(sprintf@_val+3)& (0+255),w,b
  3282  001324  116E               	iorwf	sprintf@_val& (0+255),w,b
  3283  001326  116F               	iorwf	(sprintf@_val+1)& (0+255),w,b
  3284  001328  1170               	iorwf	(sprintf@_val+2)& (0+255),w,b
  3285  00132A  A4D8               	btfss	status,2,c
  3286  00132C  D004               	goto	l10397
  3287                           
  3288                           ; BSR set to: 1
  3289                           ;doprnt.c: 1298: prec++;
  3290  00132E  0101               	movlb	1	; () banked
  3291  001330  0101               	movlb	1	; () banked
  3292  001332  4B7C               	infsnz	sprintf@prec& (0+255),f,b
  3293  001334  2B7D               	incf	(sprintf@prec+1)& (0+255),f,b
  3294  001336                     l10397:
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3298  001336  0101               	movlb	1	; () banked
  3299  001338  6F58               	movwf	??_sprintf& (0+255),b
  3300  00133A  0E01               	movlw	1
  3301  00133C  0101               	movlb	1	; () banked
  3302  00133E  0101               	movlb	1	; () banked
  3303  001340  6F7E               	movwf	sprintf@c& (0+255),b
  3304  001342  0101               	movlb	1	; () banked
  3305  001344  5158               	movf	??_sprintf& (0+255),w,b
  3306  001346                     
  3307                           ; BSR set to: 1
  3308  001346  0101               	movlb	1	; () banked
  3309  001348  0101               	movlb	1	; () banked
  3310  00134A  517E               	movf	sprintf@c& (0+255),w,b
  3311  00134C  0A0A               	xorlw	10
  3312  00134E  B4D8               	btfsc	status,2,c
  3313  001350  D021               	goto	l10411
  3314                           
  3315                           ; BSR set to: 1
  3316                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  3317                           
  3318                           ; BSR set to: 1
  3319                           
  3320                           ; BSR set to: 1
  3321  001352  0101               	movlb	1	; () banked
  3322  001354  0101               	movlb	1	; () banked
  3323  001356  517E               	movf	sprintf@c& (0+255),w,b
  3324  001358  0D04               	mullw	4
  3325  00135A  0E00               	movlw	low _dpowers
  3326  00135C  24F3               	addwf	prodl,w,c
  3327  00135E  6EF6               	movwf	tblptrl,c
  3328  001360  0E08               	movlw	high _dpowers
  3329  001362  20F4               	addwfc	prodh,w,c
  3330  001364  6EF7               	movwf	tblptrh,c
  3331  001366  0009               	tblrd		*+
  3332  001368  50F5               	movf	tablat,w,c
  3333  00136A  0101               	movlb	1	; () banked
  3334  00136C  0101               	movlb	1	; () banked
  3335  00136E  5D6E               	subwf	sprintf@_val& (0+255),w,b
  3336  001370  0009               	tblrd		*+
  3337  001372  50F5               	movf	tablat,w,c
  3338  001374  0101               	movlb	1	; () banked
  3339  001376  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3340  001378  0009               	tblrd		*+
  3341  00137A  50F5               	movf	tablat,w,c
  3342  00137C  0101               	movlb	1	; () banked
  3343  00137E  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3344  001380  0009               	tblrd		*+
  3345  001382  50F5               	movf	tablat,w,c
  3346  001384  0101               	movlb	1	; () banked
  3347  001386  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3348  001388  A0D8               	btfss	status,0,c
  3349  00138A  D004               	goto	l10411
  3350                           
  3351                           ; BSR set to: 1
  3352                           
  3353                           ; BSR set to: 1
  3354                           
  3355                           ; BSR set to: 1
  3356                           ;doprnt.c: 1314: break;
  3357  00138C  0101               	movlb	1	; () banked
  3358  00138E  0101               	movlb	1	; () banked
  3359  001390  2B7E               	incf	sprintf@c& (0+255),f,b
  3360  001392  D7D9               	goto	L4
  3361  001394                     l10411:
  3362                           
  3363                           ; BSR set to: 1
  3364                           ;doprnt.c: 1346: if(c < prec)
  3365  001394  0E80               	movlw	128
  3366  001396  0101               	movlb	1	; () banked
  3367  001398  0101               	movlb	1	; () banked
  3368  00139A  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3369  00139C  0E7F               	movlw	127
  3370  00139E  6F58               	movwf	??_sprintf& (0+255),b
  3371  0013A0  0101               	movlb	1	; () banked
  3372  0013A2  0101               	movlb	1	; () banked
  3373  0013A4  517C               	movf	sprintf@prec& (0+255),w,b
  3374  0013A6  0101               	movlb	1	; () banked
  3375  0013A8  0101               	movlb	1	; () banked
  3376  0013AA  5D7E               	subwf	sprintf@c& (0+255),w,b
  3377  0013AC  0101               	movlb	1	; () banked
  3378  0013AE  0101               	movlb	1	; () banked
  3379  0013B0  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3380  0013B2  0A80               	xorlw	128
  3381  0013B4  0101               	movlb	1	; () banked
  3382  0013B6  5958               	subwfb	??_sprintf& (0+255),w,b
  3383  0013B8  B0D8               	btfsc	status,0,c
  3384  0013BA  D003               	goto	l10415
  3385                           
  3386                           ; BSR set to: 1
  3387                           ;doprnt.c: 1347: c = prec;
  3388  0013BC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  3389  0013C0  D020               	goto	l10419
  3390  0013C2                     l10415:
  3391                           
  3392                           ; BSR set to: 1
  3393                           ;doprnt.c: 1348: else if(prec < c)
  3394  0013C2  0101               	movlb	1	; () banked
  3395  0013C4  0101               	movlb	1	; () banked
  3396  0013C6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3397  0013C8  0A80               	xorlw	128
  3398  0013CA  0101               	movlb	1	; () banked
  3399  0013CC  6F58               	movwf	??_sprintf& (0+255),b
  3400  0013CE  0101               	movlb	1	; () banked
  3401  0013D0  0101               	movlb	1	; () banked
  3402  0013D2  517E               	movf	sprintf@c& (0+255),w,b
  3403  0013D4  0101               	movlb	1	; () banked
  3404  0013D6  0101               	movlb	1	; () banked
  3405  0013D8  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3406  0013DA  0E80               	movlw	128
  3407  0013DC  0101               	movlb	1	; () banked
  3408  0013DE  0101               	movlb	1	; () banked
  3409  0013E0  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3410  0013E2  0E7F               	movlw	127
  3411  0013E4  0101               	movlb	1	; () banked
  3412  0013E6  5958               	subwfb	??_sprintf& (0+255),w,b
  3413  0013E8  B0D8               	btfsc	status,0,c
  3414  0013EA  D00B               	goto	l10419
  3415                           
  3416                           ; BSR set to: 1
  3417                           ;doprnt.c: 1349: prec = c;
  3418  0013EC  0101               	movlb	1	; () banked
  3419  0013EE  0101               	movlb	1	; () banked
  3420  0013F0  517E               	movf	sprintf@c& (0+255),w,b
  3421  0013F2  0101               	movlb	1	; () banked
  3422  0013F4  0101               	movlb	1	; () banked
  3423  0013F6  6F7C               	movwf	sprintf@prec& (0+255),b
  3424  0013F8  0101               	movlb	1	; () banked
  3425  0013FA  6B7D               	clrf	(sprintf@prec+1)& (0+255),b
  3426  0013FC  0101               	movlb	1	; () banked
  3427  0013FE  BF7C               	btfsc	sprintf@prec& (0+255),7,b
  3428  001400  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3429  001402                     l10419:
  3430                           
  3431                           ; BSR set to: 1
  3432                           ;doprnt.c: 1352: if(width && flag & 0x03)
  3433  001402  0101               	movlb	1	; () banked
  3434  001404  0101               	movlb	1	; () banked
  3435  001406  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3436  001408  1177               	iorwf	sprintf@width& (0+255),w,b
  3437  00140A  B4D8               	btfsc	status,2,c
  3438  00140C  D016               	goto	l10425
  3439                           
  3440                           ; BSR set to: 1
  3441  00140E  0E03               	movlw	3
  3442  001410  0101               	movlb	1	; () banked
  3443  001412  0101               	movlb	1	; () banked
  3444  001414  1573               	andwf	sprintf@flag& (0+255),w,b
  3445  001416  0101               	movlb	1	; () banked
  3446  001418  6F58               	movwf	??_sprintf& (0+255),b
  3447  00141A  0E00               	movlw	0
  3448  00141C  0101               	movlb	1	; () banked
  3449  00141E  0101               	movlb	1	; () banked
  3450  001420  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3451  001422  0101               	movlb	1	; () banked
  3452  001424  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3453  001426  0101               	movlb	1	; () banked
  3454  001428  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3455  00142A  1158               	iorwf	??_sprintf& (0+255),w,b
  3456  00142C  B4D8               	btfsc	status,2,c
  3457  00142E  D005               	goto	l10425
  3458                           
  3459                           ; BSR set to: 1
  3460                           ;doprnt.c: 1353: width--;
  3461  001430  0101               	movlb	1	; () banked
  3462  001432  0101               	movlb	1	; () banked
  3463  001434  0777               	decf	sprintf@width& (0+255),f,b
  3464  001436  A0D8               	btfss	status,0,c
  3465  001438  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3466  00143A                     l10425:
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;doprnt.c: 1355: if(flag & 0x4000) {
  3470  00143A  0101               	movlb	1	; () banked
  3471  00143C  0101               	movlb	1	; () banked
  3472  00143E  AD74               	btfss	(sprintf@flag+1)& (0+255),6,b
  3473  001440  D028               	goto	l10433
  3474                           
  3475                           ; BSR set to: 1
  3476                           ;doprnt.c: 1356: if(width > prec)
  3477  001442  0101               	movlb	1	; () banked
  3478  001444  0101               	movlb	1	; () banked
  3479  001446  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3480  001448  0A80               	xorlw	128
  3481  00144A  0101               	movlb	1	; () banked
  3482  00144C  6F58               	movwf	??_sprintf& (0+255),b
  3483  00144E  0101               	movlb	1	; () banked
  3484  001450  0101               	movlb	1	; () banked
  3485  001452  5177               	movf	sprintf@width& (0+255),w,b
  3486  001454  0101               	movlb	1	; () banked
  3487  001456  0101               	movlb	1	; () banked
  3488  001458  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3489  00145A  0101               	movlb	1	; () banked
  3490  00145C  0101               	movlb	1	; () banked
  3491  00145E  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3492  001460  0A80               	xorlw	128
  3493  001462  0101               	movlb	1	; () banked
  3494  001464  5958               	subwfb	??_sprintf& (0+255),w,b
  3495  001466  B0D8               	btfsc	status,0,c
  3496  001468  D00D               	goto	l10431
  3497                           
  3498                           ; BSR set to: 1
  3499                           ;doprnt.c: 1357: width -= prec;
  3500  00146A  0101               	movlb	1	; () banked
  3501  00146C  0101               	movlb	1	; () banked
  3502  00146E  517C               	movf	sprintf@prec& (0+255),w,b
  3503  001470  0101               	movlb	1	; () banked
  3504  001472  0101               	movlb	1	; () banked
  3505  001474  5F77               	subwf	sprintf@width& (0+255),f,b
  3506  001476  0101               	movlb	1	; () banked
  3507  001478  0101               	movlb	1	; () banked
  3508  00147A  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3509  00147C  0101               	movlb	1	; () banked
  3510  00147E  0101               	movlb	1	; () banked
  3511  001480  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  3512  001482  D007               	goto	l10433
  3513  001484                     l10431:
  3514                           
  3515                           ; BSR set to: 1
  3516                           ;doprnt.c: 1358: else
  3517                           ;doprnt.c: 1359: width = 0;
  3518  001484  0E00               	movlw	0
  3519  001486  0101               	movlb	1	; () banked
  3520  001488  0101               	movlb	1	; () banked
  3521  00148A  6F78               	movwf	(sprintf@width+1)& (0+255),b
  3522  00148C  0E00               	movlw	0
  3523  00148E  0101               	movlb	1	; () banked
  3524  001490  6F77               	movwf	sprintf@width& (0+255),b
  3525  001492                     l10433:
  3526                           
  3527                           ; BSR set to: 1
  3528                           ;doprnt.c: 1360: }
  3529                           ;doprnt.c: 1388: if(width > c)
  3530  001492  0E80               	movlw	128
  3531  001494  0101               	movlb	1	; () banked
  3532  001496  0101               	movlb	1	; () banked
  3533  001498  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3534  00149A  0E7F               	movlw	127
  3535  00149C  6F58               	movwf	??_sprintf& (0+255),b
  3536  00149E  0101               	movlb	1	; () banked
  3537  0014A0  0101               	movlb	1	; () banked
  3538  0014A2  5177               	movf	sprintf@width& (0+255),w,b
  3539  0014A4  0101               	movlb	1	; () banked
  3540  0014A6  0101               	movlb	1	; () banked
  3541  0014A8  5D7E               	subwf	sprintf@c& (0+255),w,b
  3542  0014AA  0101               	movlb	1	; () banked
  3543  0014AC  0101               	movlb	1	; () banked
  3544  0014AE  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3545  0014B0  0A80               	xorlw	128
  3546  0014B2  0101               	movlb	1	; () banked
  3547  0014B4  5958               	subwfb	??_sprintf& (0+255),w,b
  3548  0014B6  B0D8               	btfsc	status,0,c
  3549  0014B8  D00E               	goto	l10437
  3550                           
  3551                           ; BSR set to: 1
  3552                           ;doprnt.c: 1389: width -= c;
  3553  0014BA  0101               	movlb	1	; () banked
  3554  0014BC  0101               	movlb	1	; () banked
  3555  0014BE  517E               	movf	sprintf@c& (0+255),w,b
  3556  0014C0  0101               	movlb	1	; () banked
  3557  0014C2  0101               	movlb	1	; () banked
  3558  0014C4  5F77               	subwf	sprintf@width& (0+255),f,b
  3559  0014C6  0E00               	movlw	0
  3560  0014C8  0101               	movlb	1	; () banked
  3561  0014CA  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3562  0014CC  0EFF               	movlw	255
  3563  0014CE  0101               	movlb	1	; () banked
  3564  0014D0  0101               	movlb	1	; () banked
  3565  0014D2  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  3566  0014D4  D007               	goto	l10439
  3567  0014D6                     l10437:
  3568                           
  3569                           ; BSR set to: 1
  3570                           ;doprnt.c: 1390: else
  3571                           ;doprnt.c: 1391: width = 0;
  3572  0014D6  0E00               	movlw	0
  3573  0014D8  0101               	movlb	1	; () banked
  3574  0014DA  0101               	movlb	1	; () banked
  3575  0014DC  6F78               	movwf	(sprintf@width+1)& (0+255),b
  3576  0014DE  0E00               	movlw	0
  3577  0014E0  0101               	movlb	1	; () banked
  3578  0014E2  6F77               	movwf	sprintf@width& (0+255),b
  3579  0014E4                     l10439:
  3580                           
  3581                           ; BSR set to: 1
  3582                           ;doprnt.c: 1394: if(flag & 0x04) {
  3583  0014E4  0101               	movlb	1	; () banked
  3584  0014E6  0101               	movlb	1	; () banked
  3585  0014E8  A573               	btfss	sprintf@flag& (0+255),2,b
  3586  0014EA  D031               	goto	l10455
  3587                           
  3588                           ; BSR set to: 1
  3589                           ;doprnt.c: 1399: if(flag & 0x03)
  3590  0014EC  0E03               	movlw	3
  3591  0014EE  0101               	movlb	1	; () banked
  3592  0014F0  0101               	movlb	1	; () banked
  3593  0014F2  1573               	andwf	sprintf@flag& (0+255),w,b
  3594  0014F4  0101               	movlb	1	; () banked
  3595  0014F6  6F58               	movwf	??_sprintf& (0+255),b
  3596  0014F8  0E00               	movlw	0
  3597  0014FA  0101               	movlb	1	; () banked
  3598  0014FC  0101               	movlb	1	; () banked
  3599  0014FE  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3600  001500  0101               	movlb	1	; () banked
  3601  001502  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3602  001504  0101               	movlb	1	; () banked
  3603  001506  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3604  001508  1158               	iorwf	??_sprintf& (0+255),w,b
  3605  00150A  B4D8               	btfsc	status,2,c
  3606  00150C  D00A               	goto	l10447
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;doprnt.c: 1400: ((*sp++ = ('-')));
  3610  00150E  C151  FFD9         	movff	sprintf@sp,fsr2l
  3611  001512  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3612  001516  0E2D               	movlw	45
  3613  001518  6EDF               	movwf	indf2,c
  3614                           
  3615                           ; BSR set to: 1
  3616  00151A  0101               	movlb	1	; () banked
  3617  00151C  0101               	movlb	1	; () banked
  3618  00151E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3619  001520  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3620  001522                     l10447:
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;doprnt.c: 1422: if(width)
  3624  001522  0101               	movlb	1	; () banked
  3625  001524  0101               	movlb	1	; () banked
  3626  001526  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3627  001528  1177               	iorwf	sprintf@width& (0+255),w,b
  3628  00152A  B4D8               	btfsc	status,2,c
  3629  00152C  D09A               	goto	l10475
  3630                           
  3631                           ; BSR set to: 1
  3632                           ;doprnt.c: 1424: ((*sp++ = ('0')));
  3633                           
  3634                           ; BSR set to: 1
  3635                           
  3636                           ;doprnt.c: 1423: do
  3637  00152E  C151  FFD9         	movff	sprintf@sp,fsr2l
  3638  001532  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3639  001536  0E30               	movlw	48
  3640  001538  6EDF               	movwf	indf2,c
  3641                           
  3642                           ; BSR set to: 1
  3643  00153A  0101               	movlb	1	; () banked
  3644  00153C  0101               	movlb	1	; () banked
  3645  00153E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3646  001540  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3647                           
  3648                           ; BSR set to: 1
  3649                           ;doprnt.c: 1425: while(--width);
  3650  001542  0101               	movlb	1	; () banked
  3651  001544  0101               	movlb	1	; () banked
  3652  001546  0777               	decf	sprintf@width& (0+255),f,b
  3653  001548  A0D8               	btfss	status,0,c
  3654  00154A  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3655  00154C  D7EB               	goto	L6
  3656  00154E                     l10455:
  3657                           
  3658                           ; BSR set to: 1
  3659                           ;doprnt.c: 1429: {
  3660                           ;doprnt.c: 1431: if(width
  3661                           ;doprnt.c: 1435: )
  3662  00154E  0101               	movlb	1	; () banked
  3663  001550  0101               	movlb	1	; () banked
  3664  001552  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3665  001554  1177               	iorwf	sprintf@width& (0+255),w,b
  3666  001556  B4D8               	btfsc	status,2,c
  3667  001558  D014               	goto	l10463
  3668  00155A                     l10457:
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;doprnt.c: 1437: ((*sp++ = (' ')));
  3672  00155A  C151  FFD9         	movff	sprintf@sp,fsr2l
  3673  00155E  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3674  001562  0E20               	movlw	32
  3675  001564  6EDF               	movwf	indf2,c
  3676                           
  3677                           ; BSR set to: 1
  3678  001566  0101               	movlb	1	; () banked
  3679  001568  0101               	movlb	1	; () banked
  3680  00156A  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3681  00156C  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;doprnt.c: 1438: while(--width);
  3685  00156E  0101               	movlb	1	; () banked
  3686  001570  0101               	movlb	1	; () banked
  3687  001572  0777               	decf	sprintf@width& (0+255),f,b
  3688  001574  A0D8               	btfss	status,0,c
  3689  001576  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3690  001578  0101               	movlb	1	; () banked
  3691  00157A  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3692  00157C  1177               	iorwf	sprintf@width& (0+255),w,b
  3693  00157E  A4D8               	btfss	status,2,c
  3694  001580  D7EC               	goto	l10457
  3695  001582                     l10463:
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;doprnt.c: 1445: if(flag & 0x03)
  3699  001582  0E03               	movlw	3
  3700  001584  0101               	movlb	1	; () banked
  3701  001586  0101               	movlb	1	; () banked
  3702  001588  1573               	andwf	sprintf@flag& (0+255),w,b
  3703  00158A  0101               	movlb	1	; () banked
  3704  00158C  6F58               	movwf	??_sprintf& (0+255),b
  3705  00158E  0E00               	movlw	0
  3706  001590  0101               	movlb	1	; () banked
  3707  001592  0101               	movlb	1	; () banked
  3708  001594  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3709  001596  0101               	movlb	1	; () banked
  3710  001598  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3711  00159A  0101               	movlb	1	; () banked
  3712  00159C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3713  00159E  1158               	iorwf	??_sprintf& (0+255),w,b
  3714  0015A0  B4D8               	btfsc	status,2,c
  3715  0015A2  D05F               	goto	l10475
  3716                           
  3717                           ; BSR set to: 1
  3718                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  3719  0015A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  3720  0015A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3721  0015AC  0E2D               	movlw	45
  3722  0015AE  6EDF               	movwf	indf2,c
  3723  0015B0  D054               	goto	L5
  3724  0015B2                     l10469:
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;doprnt.c: 1485: {
  3728                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  3729  0015B2  0101               	movlb	1	; () banked
  3730  0015B4  C17C  F158         	movff	sprintf@prec,??_sprintf
  3731  0015B8  0101               	movlb	1	; () banked
  3732  0015BA  C17D  F159         	movff	sprintf@prec+1,??_sprintf+1
  3733  0015BE  0101               	movlb	1	; () banked
  3734  0015C0  90D8               	bcf	status,0,c
  3735  0015C2  3758               	rlcf	??_sprintf& (0+255),f,b
  3736  0015C4  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  3737  0015C6  0101               	movlb	1	; () banked
  3738  0015C8  90D8               	bcf	status,0,c
  3739  0015CA  3758               	rlcf	??_sprintf& (0+255),f,b
  3740  0015CC  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  3741  0015CE  0E00               	movlw	low _dpowers
  3742  0015D0  0101               	movlb	1	; () banked
  3743  0015D2  2558               	addwf	??_sprintf& (0+255),w,b
  3744  0015D4  6EF6               	movwf	tblptrl,c
  3745  0015D6  0E08               	movlw	high _dpowers
  3746  0015D8  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  3747  0015DA  6EF7               	movwf	tblptrh,c
  3748  0015DC  0009               	tblrd		*+
  3749  0015DE  0101               	movlb	1	; () banked
  3750  0015E0  CFF5 F104          	movff	tablat,?___lldiv+4
  3751  0015E4  0009               	tblrd		*+
  3752  0015E6  0101               	movlb	1	; () banked
  3753  0015E8  CFF5 F105          	movff	tablat,?___lldiv+5
  3754  0015EC  0009               	tblrd		*+
  3755  0015EE  0101               	movlb	1	; () banked
  3756  0015F0  CFF5 F106          	movff	tablat,?___lldiv+6
  3757  0015F4  000A               	tblrd		*-
  3758  0015F6  0101               	movlb	1	; () banked
  3759  0015F8  CFF5 F107          	movff	tablat,?___lldiv+7
  3760  0015FC  C16E  F100         	movff	sprintf@_val,?___lldiv
  3761  001600  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  3762  001604  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  3763  001608  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  3764  00160C  EC94  F025         	call	___lldiv	;wreg free
  3765  001610  C103  F111         	movff	?___lldiv+3,?___llmod+3
  3766  001614  C102  F110         	movff	?___lldiv+2,?___llmod+2
  3767  001618  C101  F10F         	movff	?___lldiv+1,?___llmod+1
  3768  00161C  C100  F10E         	movff	?___lldiv,?___llmod
  3769  001620  0E0A               	movlw	10
  3770  001622  0101               	movlb	1	; () banked
  3771  001624  0101               	movlb	1	; () banked
  3772  001626  6F12               	movwf	(?___llmod+4)& (0+255),b
  3773  001628  0E00               	movlw	0
  3774  00162A  0101               	movlb	1	; () banked
  3775  00162C  6F13               	movwf	(?___llmod+5)& (0+255),b
  3776  00162E  0E00               	movlw	0
  3777  001630  0101               	movlb	1	; () banked
  3778  001632  6F14               	movwf	(?___llmod+6)& (0+255),b
  3779  001634  0E00               	movlw	0
  3780  001636  0101               	movlb	1	; () banked
  3781  001638  6F15               	movwf	(?___llmod+7)& (0+255),b
  3782  00163A  EC59  F029         	call	___llmod	;wreg free
  3783  00163E  0101               	movlb	1	; () banked
  3784  001640  0101               	movlb	1	; () banked
  3785  001642  510E               	movf	?___llmod& (0+255),w,b
  3786  001644  0F30               	addlw	48
  3787  001646  0101               	movlb	1	; () banked
  3788  001648  0101               	movlb	1	; () banked
  3789  00164A  6F7E               	movwf	sprintf@c& (0+255),b
  3790                           
  3791                           ; BSR set to: 1
  3792                           ;doprnt.c: 1530: }
  3793                           ;doprnt.c: 1531: ((*sp++ = (c)));
  3794  00164C  C151  FFD9         	movff	sprintf@sp,fsr2l
  3795  001650  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3796  001654  0101               	movlb	1	; () banked
  3797  001656  C17E  FFDF         	movff	sprintf@c,indf2
  3798  00165A                     L5:
  3799                           
  3800                           ; BSR set to: 1
  3801  00165A  0101               	movlb	1	; () banked
  3802  00165C  0101               	movlb	1	; () banked
  3803  00165E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3804  001660  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3805  001662                     l10475:
  3806                           
  3807                           ; BSR set to: 1
  3808  001662  0101               	movlb	1	; () banked
  3809  001664  0101               	movlb	1	; () banked
  3810  001666  077C               	decf	sprintf@prec& (0+255),f,b
  3811  001668  A0D8               	btfss	status,0,c
  3812  00166A  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3813  00166C  0101               	movlb	1	; () banked
  3814  00166E  297C               	incf	sprintf@prec& (0+255),w,b
  3815  001670  B4D8               	btfsc	status,2,c
  3816  001672  297D               	incf	(sprintf@prec+1)& (0+255),w,b
  3817  001674  A4D8               	btfss	status,2,c
  3818  001676  D79D               	goto	l10469
  3819  001678                     l10477:
  3820                           
  3821                           ; BSR set to: 1
  3822  001678  0101               	movlb	1	; () banked
  3823  00167A  C153  FFF6         	movff	sprintf@f,tblptrl
  3824  00167E  0101               	movlb	1	; () banked
  3825  001680  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3826  001684  0101               	movlb	1	; () banked
  3827  001686  0101               	movlb	1	; () banked
  3828  001688  4B53               	infsnz	sprintf@f& (0+255),f,b
  3829  00168A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  3830  00168C  0008               	tblrd		*
  3831  00168E  0101               	movlb	1	; () banked
  3832  001690  CFF5 F17E          	movff	tablat,sprintf@c
  3833  001694  0101               	movlb	1	; () banked
  3834  001696  677E               	tstfsz	sprintf@c& (0+255),b
  3835  001698  EF55  F004         	goto	l10153
  3836  00169C                     l10479:
  3837                           
  3838                           ; BSR set to: 1
  3839                           ;doprnt.c: 1545: *sp = 0;
  3840  00169C  C151  FFD9         	movff	sprintf@sp,fsr2l
  3841  0016A0  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3842  0016A4  0E00               	movlw	0
  3843  0016A6  6EDF               	movwf	indf2,c
  3844                           
  3845                           ; BSR set to: 1
  3846                           
  3847                           ; BSR set to: 1
  3848                           ;doprnt.c: 1547: return 0;
  3849                           ;	Return value of _sprintf is never used
  3850  0016A8  0012               	return	
  3851  0016AA                     __end_of_sprintf:
  3852                           	opt stack 0
  3853                           tblptru	equ	0xFF8
  3854                           tblptrh	equ	0xFF7
  3855                           tblptrl	equ	0xFF6
  3856                           tablat	equ	0xFF5
  3857                           prodh	equ	0xFF4
  3858                           prodl	equ	0xFF3
  3859                           postinc0	equ	0xFEE
  3860                           wreg	equ	0xFE8
  3861                           indf2	equ	0xFDF
  3862                           postinc2	equ	0xFDE
  3863                           postdec2	equ	0xFDD
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8
  3867                           
  3868 ;; *************** function ___lwmod *****************
  3869 ;; Defined at:
  3870 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  dividend        2    0[BANK1 ] unsigned int 
  3873 ;;  divisor         2    2[BANK1 ] unsigned int 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  counter         1    5[BANK1 ] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  2    0[BANK1 ] unsigned int 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3885 ;;      Params:         0       0       4       0       0       0       0       0       0
  3886 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3887 ;;      Temps:          0       0       1       0       0       0       0       0       0
  3888 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3889 ;;Total ram usage:        6 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    9
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_sprintf
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text2
  3900  00588E                     __ptext2:
  3901                           	opt stack 0
  3902  00588E                     ___lwmod:
  3903                           	opt stack 20
  3904                           
  3905                           ; BSR set to: 1
  3906                           ;incstack = 0
  3907                           ;incstack = 0
  3908  00588E  0101               	movlb	1	; () banked
  3909  005890  0101               	movlb	1	; () banked
  3910  005892  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3911  005894  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  3912  005896  B4D8               	btfsc	status,2,c
  3913  005898  D03A               	goto	l917
  3914                           
  3915                           ; BSR set to: 1
  3916  00589A  0101               	movlb	1	; () banked
  3917  00589C  6F04               	movwf	??___lwmod& (0+255),b
  3918  00589E  0E01               	movlw	1
  3919  0058A0  0101               	movlb	1	; () banked
  3920  0058A2  0101               	movlb	1	; () banked
  3921  0058A4  6F05               	movwf	___lwmod@counter& (0+255),b
  3922  0058A6  0101               	movlb	1	; () banked
  3923  0058A8  5104               	movf	??___lwmod& (0+255),w,b
  3924  0058AA  D009               	goto	l11083
  3925  0058AC                     l11081:
  3926                           
  3927                           ; BSR set to: 1
  3928  0058AC  0101               	movlb	1	; () banked
  3929  0058AE  0101               	movlb	1	; () banked
  3930  0058B0  0101               	movlb	1	; () banked
  3931  0058B2  90D8               	bcf	status,0,c
  3932  0058B4  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  3933  0058B6  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3934  0058B8  0101               	movlb	1	; () banked
  3935  0058BA  0101               	movlb	1	; () banked
  3936  0058BC  2B05               	incf	___lwmod@counter& (0+255),f,b
  3937  0058BE                     l11083:
  3938                           
  3939                           ; BSR set to: 1
  3940  0058BE  0101               	movlb	1	; () banked
  3941  0058C0  0101               	movlb	1	; () banked
  3942  0058C2  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3943  0058C4  D7F3               	goto	l11081
  3944  0058C6                     l11085:
  3945                           
  3946                           ; BSR set to: 1
  3947  0058C6  0101               	movlb	1	; () banked
  3948  0058C8  0101               	movlb	1	; () banked
  3949  0058CA  5102               	movf	___lwmod@divisor& (0+255),w,b
  3950  0058CC  0101               	movlb	1	; () banked
  3951  0058CE  0101               	movlb	1	; () banked
  3952  0058D0  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  3953  0058D2  0101               	movlb	1	; () banked
  3954  0058D4  0101               	movlb	1	; () banked
  3955  0058D6  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3956  0058D8  0101               	movlb	1	; () banked
  3957  0058DA  0101               	movlb	1	; () banked
  3958  0058DC  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3959  0058DE  A0D8               	btfss	status,0,c
  3960  0058E0  D00C               	goto	l11089
  3961                           
  3962                           ; BSR set to: 1
  3963  0058E2  0101               	movlb	1	; () banked
  3964  0058E4  0101               	movlb	1	; () banked
  3965  0058E6  5102               	movf	___lwmod@divisor& (0+255),w,b
  3966  0058E8  0101               	movlb	1	; () banked
  3967  0058EA  0101               	movlb	1	; () banked
  3968  0058EC  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  3969  0058EE  0101               	movlb	1	; () banked
  3970  0058F0  0101               	movlb	1	; () banked
  3971  0058F2  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3972  0058F4  0101               	movlb	1	; () banked
  3973  0058F6  0101               	movlb	1	; () banked
  3974  0058F8  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3975  0058FA                     l11089:
  3976                           
  3977                           ; BSR set to: 1
  3978  0058FA  0101               	movlb	1	; () banked
  3979  0058FC  0101               	movlb	1	; () banked
  3980  0058FE  0101               	movlb	1	; () banked
  3981  005900  90D8               	bcf	status,0,c
  3982  005902  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3983  005904  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  3984                           
  3985                           ; BSR set to: 1
  3986  005906  0101               	movlb	1	; () banked
  3987  005908  0101               	movlb	1	; () banked
  3988  00590A  2F05               	decfsz	___lwmod@counter& (0+255),f,b
  3989  00590C  D7DC               	goto	l11085
  3990  00590E                     l917:
  3991                           
  3992                           ; BSR set to: 1
  3993  00590E  C100  F100         	movff	___lwmod@dividend,?___lwmod
  3994  005912  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  3995                           
  3996                           ; BSR set to: 1
  3997  005916  0012               	return	
  3998  005918                     __end_of___lwmod:
  3999                           	opt stack 0
  4000                           tblptru	equ	0xFF8
  4001                           tblptrh	equ	0xFF7
  4002                           tblptrl	equ	0xFF6
  4003                           tablat	equ	0xFF5
  4004                           prodh	equ	0xFF4
  4005                           prodl	equ	0xFF3
  4006                           postinc0	equ	0xFEE
  4007                           wreg	equ	0xFE8
  4008                           indf2	equ	0xFDF
  4009                           postinc2	equ	0xFDE
  4010                           postdec2	equ	0xFDD
  4011                           fsr2h	equ	0xFDA
  4012                           fsr2l	equ	0xFD9
  4013                           status	equ	0xFD8
  4014                           
  4015 ;; *************** function ___lltoft *****************
  4016 ;; Defined at:
  4017 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  c               4    8[BANK1 ] unsigned long 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  exp             1   16[BANK1 ] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  3    8[BANK1 ] float 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4031 ;;      Params:         0       0       4       0       0       0       0       0       0
  4032 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4033 ;;      Temps:          0       0       4       0       0       0       0       0       0
  4034 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4035 ;;Total ram usage:        9 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:   10
  4038 ;; This function calls:
  4039 ;;		___ftpack
  4040 ;; This function is called by:
  4041 ;;		_sprintf
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text3
  4046  005644                     __ptext3:
  4047                           	opt stack 0
  4048  005644                     ___lltoft:
  4049                           	opt stack 19
  4050                           
  4051                           ; BSR set to: 1
  4052                           ;incstack = 0
  4053                           ;incstack = 0
  4054  005644  0101               	movlb	1	; () banked
  4055  005646  6F0C               	movwf	??___lltoft& (0+255),b
  4056  005648  0E8E               	movlw	142
  4057  00564A  0101               	movlb	1	; () banked
  4058  00564C  0101               	movlb	1	; () banked
  4059  00564E  6F10               	movwf	___lltoft@exp& (0+255),b
  4060  005650  0101               	movlb	1	; () banked
  4061  005652  510C               	movf	??___lltoft& (0+255),w,b
  4062  005654  D00D               	goto	l11049
  4063  005656                     l11047:
  4064                           
  4065                           ; BSR set to: 1
  4066  005656  0101               	movlb	1	; () banked
  4067  005658  90D8               	bcf	status,0,c
  4068  00565A  0101               	movlb	1	; () banked
  4069  00565C  330B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  4070  00565E  0101               	movlb	1	; () banked
  4071  005660  330A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  4072  005662  0101               	movlb	1	; () banked
  4073  005664  3309               	rrcf	(___lltoft@c+1)& (0+255),f,b
  4074  005666  0101               	movlb	1	; () banked
  4075  005668  3308               	rrcf	___lltoft@c& (0+255),f,b
  4076  00566A  0101               	movlb	1	; () banked
  4077  00566C  0101               	movlb	1	; () banked
  4078  00566E  2B10               	incf	___lltoft@exp& (0+255),f,b
  4079  005670                     l11049:
  4080                           
  4081                           ; BSR set to: 1
  4082  005670  0E00               	movlw	0
  4083  005672  0101               	movlb	1	; () banked
  4084  005674  0101               	movlb	1	; () banked
  4085  005676  1508               	andwf	___lltoft@c& (0+255),w,b
  4086  005678  0101               	movlb	1	; () banked
  4087  00567A  6F0C               	movwf	??___lltoft& (0+255),b
  4088  00567C  0E00               	movlw	0
  4089  00567E  0101               	movlb	1	; () banked
  4090  005680  0101               	movlb	1	; () banked
  4091  005682  1509               	andwf	(___lltoft@c+1)& (0+255),w,b
  4092  005684  0101               	movlb	1	; () banked
  4093  005686  6F0D               	movwf	(??___lltoft+1)& (0+255),b
  4094  005688  0E00               	movlw	0
  4095  00568A  0101               	movlb	1	; () banked
  4096  00568C  0101               	movlb	1	; () banked
  4097  00568E  150A               	andwf	(___lltoft@c+2)& (0+255),w,b
  4098  005690  0101               	movlb	1	; () banked
  4099  005692  6F0E               	movwf	(??___lltoft+2)& (0+255),b
  4100  005694  0EFF               	movlw	255
  4101  005696  0101               	movlb	1	; () banked
  4102  005698  0101               	movlb	1	; () banked
  4103  00569A  150B               	andwf	(___lltoft@c+3)& (0+255),w,b
  4104  00569C  0101               	movlb	1	; () banked
  4105  00569E  6F0F               	movwf	(??___lltoft+3)& (0+255),b
  4106  0056A0  0101               	movlb	1	; () banked
  4107  0056A2  510F               	movf	(??___lltoft+3)& (0+255),w,b
  4108  0056A4  110C               	iorwf	??___lltoft& (0+255),w,b
  4109  0056A6  110D               	iorwf	(??___lltoft+1)& (0+255),w,b
  4110  0056A8  110E               	iorwf	(??___lltoft+2)& (0+255),w,b
  4111  0056AA  A4D8               	btfss	status,2,c
  4112  0056AC  D7D4               	goto	l11047
  4113                           
  4114                           ; BSR set to: 1
  4115                           
  4116                           ; BSR set to: 1
  4117  0056AE  C108  F100         	movff	___lltoft@c,?___ftpack
  4118  0056B2  C109  F101         	movff	___lltoft@c+1,?___ftpack+1
  4119  0056B6  C10A  F102         	movff	___lltoft@c+2,?___ftpack+2
  4120  0056BA  C110  F103         	movff	___lltoft@exp,?___ftpack+3
  4121  0056BE  0101               	movlb	1	; () banked
  4122  0056C0  6F0C               	movwf	??___lltoft& (0+255),b
  4123  0056C2  0E00               	movlw	0
  4124  0056C4  0101               	movlb	1	; () banked
  4125  0056C6  0101               	movlb	1	; () banked
  4126  0056C8  6F04               	movwf	(?___ftpack+4)& (0+255),b
  4127  0056CA  0101               	movlb	1	; () banked
  4128  0056CC  510C               	movf	??___lltoft& (0+255),w,b
  4129  0056CE  EC30  F022         	call	___ftpack	;wreg free
  4130  0056D2  C102  F10A         	movff	?___ftpack+2,?___lltoft+2
  4131  0056D6  C101  F109         	movff	?___ftpack+1,?___lltoft+1
  4132  0056DA  C100  F108         	movff	?___ftpack,?___lltoft
  4133  0056DE  0012               	return	
  4134  0056E0                     __end_of___lltoft:
  4135                           	opt stack 0
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           prodh	equ	0xFF4
  4141                           prodl	equ	0xFF3
  4142                           postinc0	equ	0xFEE
  4143                           wreg	equ	0xFE8
  4144                           indf2	equ	0xFDF
  4145                           postinc2	equ	0xFDE
  4146                           postdec2	equ	0xFDD
  4147                           fsr2h	equ	0xFDA
  4148                           fsr2l	equ	0xFD9
  4149                           status	equ	0xFD8
  4150                           
  4151 ;; *************** function ___llmod *****************
  4152 ;; Defined at:
  4153 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  dividend        4   14[BANK1 ] unsigned long 
  4156 ;;  divisor         4   18[BANK1 ] unsigned long 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  counter         1   23[BANK1 ] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  4   14[BANK1 ] unsigned long 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4168 ;;      Params:         0       0       8       0       0       0       0       0       0
  4169 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4170 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4171 ;;      Totals:         0       0      10       0       0       0       0       0       0
  4172 ;;Total ram usage:       10 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    9
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		_sprintf
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text4
  4183  0052B2                     __ptext4:
  4184                           	opt stack 0
  4185  0052B2                     ___llmod:
  4186                           	opt stack 20
  4187                           
  4188                           ;incstack = 0
  4189                           ;incstack = 0
  4190  0052B2  0101               	movlb	1	; () banked
  4191  0052B4  0101               	movlb	1	; () banked
  4192  0052B6  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4193  0052B8  1112               	iorwf	___llmod@divisor& (0+255),w,b
  4194  0052BA  1113               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4195  0052BC  1114               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4196  0052BE  B4D8               	btfsc	status,2,c
  4197  0052C0  D05A               	goto	l848
  4198                           
  4199                           ; BSR set to: 1
  4200  0052C2  0101               	movlb	1	; () banked
  4201  0052C4  6F16               	movwf	??___llmod& (0+255),b
  4202  0052C6  0E01               	movlw	1
  4203  0052C8  0101               	movlb	1	; () banked
  4204  0052CA  0101               	movlb	1	; () banked
  4205  0052CC  6F17               	movwf	___llmod@counter& (0+255),b
  4206  0052CE  0101               	movlb	1	; () banked
  4207  0052D0  5116               	movf	??___llmod& (0+255),w,b
  4208  0052D2  D00D               	goto	l8525
  4209  0052D4                     l8523:
  4210                           
  4211                           ; BSR set to: 1
  4212  0052D4  0101               	movlb	1	; () banked
  4213  0052D6  90D8               	bcf	status,0,c
  4214  0052D8  0101               	movlb	1	; () banked
  4215  0052DA  3712               	rlcf	___llmod@divisor& (0+255),f,b
  4216  0052DC  0101               	movlb	1	; () banked
  4217  0052DE  3713               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4218  0052E0  0101               	movlb	1	; () banked
  4219  0052E2  3714               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4220  0052E4  0101               	movlb	1	; () banked
  4221  0052E6  3715               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4222  0052E8  0101               	movlb	1	; () banked
  4223  0052EA  0101               	movlb	1	; () banked
  4224  0052EC  2B17               	incf	___llmod@counter& (0+255),f,b
  4225  0052EE                     l8525:
  4226                           
  4227                           ; BSR set to: 1
  4228  0052EE  0101               	movlb	1	; () banked
  4229  0052F0  0101               	movlb	1	; () banked
  4230  0052F2  AF15               	btfss	(___llmod@divisor+3)& (0+255),7,b
  4231  0052F4  D7EF               	goto	l8523
  4232  0052F6                     l8527:
  4233                           
  4234                           ; BSR set to: 1
  4235  0052F6  0101               	movlb	1	; () banked
  4236  0052F8  0101               	movlb	1	; () banked
  4237  0052FA  5112               	movf	___llmod@divisor& (0+255),w,b
  4238  0052FC  0101               	movlb	1	; () banked
  4239  0052FE  0101               	movlb	1	; () banked
  4240  005300  5D0E               	subwf	___llmod@dividend& (0+255),w,b
  4241  005302  0101               	movlb	1	; () banked
  4242  005304  0101               	movlb	1	; () banked
  4243  005306  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  4244  005308  0101               	movlb	1	; () banked
  4245  00530A  0101               	movlb	1	; () banked
  4246  00530C  590F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4247  00530E  0101               	movlb	1	; () banked
  4248  005310  0101               	movlb	1	; () banked
  4249  005312  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  4250  005314  0101               	movlb	1	; () banked
  4251  005316  0101               	movlb	1	; () banked
  4252  005318  5910               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4253  00531A  0101               	movlb	1	; () banked
  4254  00531C  0101               	movlb	1	; () banked
  4255  00531E  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4256  005320  0101               	movlb	1	; () banked
  4257  005322  0101               	movlb	1	; () banked
  4258  005324  5911               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4259  005326  A0D8               	btfss	status,0,c
  4260  005328  D018               	goto	l8531
  4261                           
  4262                           ; BSR set to: 1
  4263  00532A  0101               	movlb	1	; () banked
  4264  00532C  0101               	movlb	1	; () banked
  4265  00532E  5112               	movf	___llmod@divisor& (0+255),w,b
  4266  005330  0101               	movlb	1	; () banked
  4267  005332  0101               	movlb	1	; () banked
  4268  005334  5F0E               	subwf	___llmod@dividend& (0+255),f,b
  4269  005336  0101               	movlb	1	; () banked
  4270  005338  0101               	movlb	1	; () banked
  4271  00533A  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  4272  00533C  0101               	movlb	1	; () banked
  4273  00533E  0101               	movlb	1	; () banked
  4274  005340  5B0F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  4275  005342  0101               	movlb	1	; () banked
  4276  005344  0101               	movlb	1	; () banked
  4277  005346  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  4278  005348  0101               	movlb	1	; () banked
  4279  00534A  0101               	movlb	1	; () banked
  4280  00534C  5B10               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  4281  00534E  0101               	movlb	1	; () banked
  4282  005350  0101               	movlb	1	; () banked
  4283  005352  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4284  005354  0101               	movlb	1	; () banked
  4285  005356  0101               	movlb	1	; () banked
  4286  005358  5B11               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  4287  00535A                     l8531:
  4288                           
  4289                           ; BSR set to: 1
  4290  00535A  0101               	movlb	1	; () banked
  4291  00535C  90D8               	bcf	status,0,c
  4292  00535E  0101               	movlb	1	; () banked
  4293  005360  3315               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  4294  005362  0101               	movlb	1	; () banked
  4295  005364  3314               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  4296  005366  0101               	movlb	1	; () banked
  4297  005368  3313               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  4298  00536A  0101               	movlb	1	; () banked
  4299  00536C  3312               	rrcf	___llmod@divisor& (0+255),f,b
  4300                           
  4301                           ; BSR set to: 1
  4302  00536E  0101               	movlb	1	; () banked
  4303  005370  0101               	movlb	1	; () banked
  4304  005372  2F17               	decfsz	___llmod@counter& (0+255),f,b
  4305  005374  D7C0               	goto	l8527
  4306  005376                     l848:
  4307                           
  4308                           ; BSR set to: 1
  4309  005376  C10E  F10E         	movff	___llmod@dividend,?___llmod
  4310  00537A  C10F  F10F         	movff	___llmod@dividend+1,?___llmod+1
  4311  00537E  C110  F110         	movff	___llmod@dividend+2,?___llmod+2
  4312  005382  C111  F111         	movff	___llmod@dividend+3,?___llmod+3
  4313                           
  4314                           ; BSR set to: 1
  4315  005386  0012               	return	
  4316  005388                     __end_of___llmod:
  4317                           	opt stack 0
  4318                           tblptru	equ	0xFF8
  4319                           tblptrh	equ	0xFF7
  4320                           tblptrl	equ	0xFF6
  4321                           tablat	equ	0xFF5
  4322                           prodh	equ	0xFF4
  4323                           prodl	equ	0xFF3
  4324                           postinc0	equ	0xFEE
  4325                           wreg	equ	0xFE8
  4326                           indf2	equ	0xFDF
  4327                           postinc2	equ	0xFDE
  4328                           postdec2	equ	0xFDD
  4329                           fsr2h	equ	0xFDA
  4330                           fsr2l	equ	0xFD9
  4331                           status	equ	0xFD8
  4332                           
  4333 ;; *************** function ___lldiv *****************
  4334 ;; Defined at:
  4335 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  dividend        4    0[BANK1 ] unsigned long 
  4338 ;;  divisor         4    4[BANK1 ] unsigned long 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  quotient        4    9[BANK1 ] unsigned long 
  4341 ;;  counter         1   13[BANK1 ] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  4    0[BANK1 ] unsigned long 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4351 ;;      Params:         0       0       8       0       0       0       0       0       0
  4352 ;;      Locals:         0       0       5       0       0       0       0       0       0
  4353 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4354 ;;      Totals:         0       0      14       0       0       0       0       0       0
  4355 ;;Total ram usage:       14 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    9
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_sprintf
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text5
  4366  004B28                     __ptext5:
  4367                           	opt stack 0
  4368  004B28                     ___lldiv:
  4369                           	opt stack 20
  4370                           
  4371                           ; BSR set to: 1
  4372                           ;incstack = 0
  4373                           ;incstack = 0
  4374  004B28  0E00               	movlw	0
  4375  004B2A  0101               	movlb	1	; () banked
  4376  004B2C  0101               	movlb	1	; () banked
  4377  004B2E  6F09               	movwf	___lldiv@quotient& (0+255),b
  4378  004B30  0E00               	movlw	0
  4379  004B32  0101               	movlb	1	; () banked
  4380  004B34  6F0A               	movwf	(___lldiv@quotient+1)& (0+255),b
  4381  004B36  0E00               	movlw	0
  4382  004B38  0101               	movlb	1	; () banked
  4383  004B3A  6F0B               	movwf	(___lldiv@quotient+2)& (0+255),b
  4384  004B3C  0E00               	movlw	0
  4385  004B3E  0101               	movlb	1	; () banked
  4386  004B40  6F0C               	movwf	(___lldiv@quotient+3)& (0+255),b
  4387                           
  4388                           ; BSR set to: 1
  4389  004B42  0101               	movlb	1	; () banked
  4390  004B44  0101               	movlb	1	; () banked
  4391  004B46  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4392  004B48  1104               	iorwf	___lldiv@divisor& (0+255),w,b
  4393  004B4A  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4394  004B4C  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4395  004B4E  B4D8               	btfsc	status,2,c
  4396  004B50  D067               	goto	l838
  4397                           
  4398                           ; BSR set to: 1
  4399  004B52  0101               	movlb	1	; () banked
  4400  004B54  6F08               	movwf	??___lldiv& (0+255),b
  4401  004B56  0E01               	movlw	1
  4402  004B58  0101               	movlb	1	; () banked
  4403  004B5A  0101               	movlb	1	; () banked
  4404  004B5C  6F0D               	movwf	___lldiv@counter& (0+255),b
  4405  004B5E  0101               	movlb	1	; () banked
  4406  004B60  5108               	movf	??___lldiv& (0+255),w,b
  4407  004B62  D00D               	goto	l11031
  4408  004B64                     l11029:
  4409                           
  4410                           ; BSR set to: 1
  4411  004B64  0101               	movlb	1	; () banked
  4412  004B66  90D8               	bcf	status,0,c
  4413  004B68  0101               	movlb	1	; () banked
  4414  004B6A  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  4415  004B6C  0101               	movlb	1	; () banked
  4416  004B6E  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4417  004B70  0101               	movlb	1	; () banked
  4418  004B72  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4419  004B74  0101               	movlb	1	; () banked
  4420  004B76  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4421  004B78  0101               	movlb	1	; () banked
  4422  004B7A  0101               	movlb	1	; () banked
  4423  004B7C  2B0D               	incf	___lldiv@counter& (0+255),f,b
  4424  004B7E                     l11031:
  4425                           
  4426                           ; BSR set to: 1
  4427  004B7E  0101               	movlb	1	; () banked
  4428  004B80  0101               	movlb	1	; () banked
  4429  004B82  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4430  004B84  D7EF               	goto	l11029
  4431  004B86                     l11033:
  4432                           
  4433                           ; BSR set to: 1
  4434  004B86  0101               	movlb	1	; () banked
  4435  004B88  90D8               	bcf	status,0,c
  4436  004B8A  0101               	movlb	1	; () banked
  4437  004B8C  3709               	rlcf	___lldiv@quotient& (0+255),f,b
  4438  004B8E  0101               	movlb	1	; () banked
  4439  004B90  370A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4440  004B92  0101               	movlb	1	; () banked
  4441  004B94  370B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4442  004B96  0101               	movlb	1	; () banked
  4443  004B98  370C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4444                           
  4445                           ; BSR set to: 1
  4446  004B9A  0101               	movlb	1	; () banked
  4447  004B9C  0101               	movlb	1	; () banked
  4448  004B9E  5104               	movf	___lldiv@divisor& (0+255),w,b
  4449  004BA0  0101               	movlb	1	; () banked
  4450  004BA2  0101               	movlb	1	; () banked
  4451  004BA4  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  4452  004BA6  0101               	movlb	1	; () banked
  4453  004BA8  0101               	movlb	1	; () banked
  4454  004BAA  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4455  004BAC  0101               	movlb	1	; () banked
  4456  004BAE  0101               	movlb	1	; () banked
  4457  004BB0  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4458  004BB2  0101               	movlb	1	; () banked
  4459  004BB4  0101               	movlb	1	; () banked
  4460  004BB6  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4461  004BB8  0101               	movlb	1	; () banked
  4462  004BBA  0101               	movlb	1	; () banked
  4463  004BBC  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4464  004BBE  0101               	movlb	1	; () banked
  4465  004BC0  0101               	movlb	1	; () banked
  4466  004BC2  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4467  004BC4  0101               	movlb	1	; () banked
  4468  004BC6  0101               	movlb	1	; () banked
  4469  004BC8  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4470  004BCA  A0D8               	btfss	status,0,c
  4471  004BCC  D01B               	goto	l11041
  4472                           
  4473                           ; BSR set to: 1
  4474  004BCE  0101               	movlb	1	; () banked
  4475  004BD0  0101               	movlb	1	; () banked
  4476  004BD2  5104               	movf	___lldiv@divisor& (0+255),w,b
  4477  004BD4  0101               	movlb	1	; () banked
  4478  004BD6  0101               	movlb	1	; () banked
  4479  004BD8  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  4480  004BDA  0101               	movlb	1	; () banked
  4481  004BDC  0101               	movlb	1	; () banked
  4482  004BDE  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4483  004BE0  0101               	movlb	1	; () banked
  4484  004BE2  0101               	movlb	1	; () banked
  4485  004BE4  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4486  004BE6  0101               	movlb	1	; () banked
  4487  004BE8  0101               	movlb	1	; () banked
  4488  004BEA  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4489  004BEC  0101               	movlb	1	; () banked
  4490  004BEE  0101               	movlb	1	; () banked
  4491  004BF0  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4492  004BF2  0101               	movlb	1	; () banked
  4493  004BF4  0101               	movlb	1	; () banked
  4494  004BF6  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4495  004BF8  0101               	movlb	1	; () banked
  4496  004BFA  0101               	movlb	1	; () banked
  4497  004BFC  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4498                           
  4499                           ; BSR set to: 1
  4500  004BFE  0101               	movlb	1	; () banked
  4501  004C00  0101               	movlb	1	; () banked
  4502  004C02  8109               	bsf	___lldiv@quotient& (0+255),0,b
  4503  004C04                     l11041:
  4504                           
  4505                           ; BSR set to: 1
  4506  004C04  0101               	movlb	1	; () banked
  4507  004C06  90D8               	bcf	status,0,c
  4508  004C08  0101               	movlb	1	; () banked
  4509  004C0A  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4510  004C0C  0101               	movlb	1	; () banked
  4511  004C0E  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4512  004C10  0101               	movlb	1	; () banked
  4513  004C12  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4514  004C14  0101               	movlb	1	; () banked
  4515  004C16  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  4516                           
  4517                           ; BSR set to: 1
  4518  004C18  0101               	movlb	1	; () banked
  4519  004C1A  0101               	movlb	1	; () banked
  4520  004C1C  2F0D               	decfsz	___lldiv@counter& (0+255),f,b
  4521  004C1E  D7B3               	goto	l11033
  4522  004C20                     l838:
  4523                           
  4524                           ; BSR set to: 1
  4525  004C20  C109  F100         	movff	___lldiv@quotient,?___lldiv
  4526  004C24  C10A  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  4527  004C28  C10B  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  4528  004C2C  C10C  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  4529                           
  4530                           ; BSR set to: 1
  4531  004C30  0012               	return	
  4532  004C32                     __end_of___lldiv:
  4533                           	opt stack 0
  4534                           tblptru	equ	0xFF8
  4535                           tblptrh	equ	0xFF7
  4536                           tblptrl	equ	0xFF6
  4537                           tablat	equ	0xFF5
  4538                           prodh	equ	0xFF4
  4539                           prodl	equ	0xFF3
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           indf2	equ	0xFDF
  4543                           postinc2	equ	0xFDE
  4544                           postdec2	equ	0xFDD
  4545                           fsr2h	equ	0xFDA
  4546                           fsr2l	equ	0xFD9
  4547                           status	equ	0xFD8
  4548                           
  4549 ;; *************** function ___ftneg *****************
  4550 ;; Defined at:
  4551 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  f1              3    0[BANK1 ] float 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  3    0[BANK1 ] float 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4565 ;;      Params:         0       0       3       0       0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4568 ;;      Totals:         0       0       3       0       0       0       0       0       0
  4569 ;;Total ram usage:        3 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    9
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_sprintf
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text6
  4580  0060A2                     __ptext6:
  4581                           	opt stack 0
  4582  0060A2                     ___ftneg:
  4583                           	opt stack 20
  4584                           
  4585                           ; BSR set to: 1
  4586                           ;incstack = 0
  4587                           ;incstack = 0
  4588  0060A2  0E7F               	movlw	127
  4589  0060A4  0101               	movlb	1	; () banked
  4590  0060A6  0101               	movlb	1	; () banked
  4591  0060A8  1502               	andwf	(___ftneg@f1+2)& (0+255),w,b
  4592  0060AA  0101               	movlb	1	; () banked
  4593  0060AC  1101               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  4594  0060AE  0101               	movlb	1	; () banked
  4595  0060B0  1100               	iorwf	___ftneg@f1& (0+255),w,b
  4596  0060B2  B4D8               	btfsc	status,2,c
  4597  0060B4  D00C               	goto	l784
  4598                           
  4599                           ; BSR set to: 1
  4600  0060B6  0E00               	movlw	0
  4601  0060B8  0101               	movlb	1	; () banked
  4602  0060BA  0101               	movlb	1	; () banked
  4603  0060BC  1B00               	xorwf	___ftneg@f1& (0+255),f,b
  4604  0060BE  0E00               	movlw	0
  4605  0060C0  0101               	movlb	1	; () banked
  4606  0060C2  0101               	movlb	1	; () banked
  4607  0060C4  1B01               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  4608  0060C6  0E80               	movlw	128
  4609  0060C8  0101               	movlb	1	; () banked
  4610  0060CA  0101               	movlb	1	; () banked
  4611  0060CC  1B02               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  4612  0060CE                     l784:
  4613                           
  4614                           ; BSR set to: 1
  4615  0060CE  C100  F100         	movff	___ftneg@f1,?___ftneg
  4616  0060D2  C101  F101         	movff	___ftneg@f1+1,?___ftneg+1
  4617  0060D6  C102  F102         	movff	___ftneg@f1+2,?___ftneg+2
  4618                           
  4619                           ; BSR set to: 1
  4620  0060DA  0012               	return	
  4621  0060DC                     __end_of___ftneg:
  4622                           	opt stack 0
  4623                           tblptru	equ	0xFF8
  4624                           tblptrh	equ	0xFF7
  4625                           tblptrl	equ	0xFF6
  4626                           tablat	equ	0xFF5
  4627                           prodh	equ	0xFF4
  4628                           prodl	equ	0xFF3
  4629                           postinc0	equ	0xFEE
  4630                           wreg	equ	0xFE8
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638 ;; *************** function ___ftge *****************
  4639 ;; Defined at:
  4640 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  ff1             3    0[BANK1 ] float 
  4643 ;;  ff2             3    3[BANK1 ] float 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;		None               void
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4655 ;;      Params:         0       0       6       0       0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4657 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4658 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4659 ;;Total ram usage:        9 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    9
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_sprintf
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text7
  4670  004D34                     __ptext7:
  4671                           	opt stack 0
  4672  004D34                     ___ftge:
  4673                           	opt stack 20
  4674                           
  4675                           ; BSR set to: 1
  4676                           ;incstack = 0
  4677                           ;incstack = 0
  4678  004D34  0101               	movlb	1	; () banked
  4679  004D36  0101               	movlb	1	; () banked
  4680  004D38  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  4681  004D3A  D021               	goto	l11005
  4682                           
  4683                           ; BSR set to: 1
  4684  004D3C  0101               	movlb	1	; () banked
  4685  004D3E  C100  F106         	movff	___ftge@ff1,??___ftge
  4686  004D42  0101               	movlb	1	; () banked
  4687  004D44  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  4688  004D48  0101               	movlb	1	; () banked
  4689  004D4A  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  4690  004D4E  0101               	movlb	1	; () banked
  4691  004D50  1F06               	comf	??___ftge& (0+255),f,b
  4692  004D52  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4693  004D54  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4694  004D56  2B06               	incf	??___ftge& (0+255),f,b
  4695  004D58  0E00               	movlw	0
  4696  004D5A  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4697  004D5C  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4698  004D5E  0E00               	movlw	0
  4699  004D60  0101               	movlb	1	; () banked
  4700  004D62  2506               	addwf	??___ftge& (0+255),w,b
  4701  004D64  0101               	movlb	1	; () banked
  4702  004D66  0101               	movlb	1	; () banked
  4703  004D68  6F00               	movwf	___ftge@ff1& (0+255),b
  4704  004D6A  0E00               	movlw	0
  4705  004D6C  0101               	movlb	1	; () banked
  4706  004D6E  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4707  004D70  0101               	movlb	1	; () banked
  4708  004D72  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  4709  004D74  0E80               	movlw	128
  4710  004D76  0101               	movlb	1	; () banked
  4711  004D78  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4712  004D7A  0101               	movlb	1	; () banked
  4713  004D7C  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  4714  004D7E                     l11005:
  4715                           
  4716                           ; BSR set to: 1
  4717  004D7E  0101               	movlb	1	; () banked
  4718  004D80  0101               	movlb	1	; () banked
  4719  004D82  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  4720  004D84  D021               	goto	l11009
  4721                           
  4722                           ; BSR set to: 1
  4723  004D86  0101               	movlb	1	; () banked
  4724  004D88  C103  F106         	movff	___ftge@ff2,??___ftge
  4725  004D8C  0101               	movlb	1	; () banked
  4726  004D8E  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  4727  004D92  0101               	movlb	1	; () banked
  4728  004D94  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  4729  004D98  0101               	movlb	1	; () banked
  4730  004D9A  1F06               	comf	??___ftge& (0+255),f,b
  4731  004D9C  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4732  004D9E  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4733  004DA0  2B06               	incf	??___ftge& (0+255),f,b
  4734  004DA2  0E00               	movlw	0
  4735  004DA4  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4736  004DA6  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4737  004DA8  0E00               	movlw	0
  4738  004DAA  0101               	movlb	1	; () banked
  4739  004DAC  2506               	addwf	??___ftge& (0+255),w,b
  4740  004DAE  0101               	movlb	1	; () banked
  4741  004DB0  0101               	movlb	1	; () banked
  4742  004DB2  6F03               	movwf	___ftge@ff2& (0+255),b
  4743  004DB4  0E00               	movlw	0
  4744  004DB6  0101               	movlb	1	; () banked
  4745  004DB8  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4746  004DBA  0101               	movlb	1	; () banked
  4747  004DBC  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  4748  004DBE  0E80               	movlw	128
  4749  004DC0  0101               	movlb	1	; () banked
  4750  004DC2  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4751  004DC4  0101               	movlb	1	; () banked
  4752  004DC6  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  4753  004DC8                     l11009:
  4754                           
  4755                           ; BSR set to: 1
  4756  004DC8  0E00               	movlw	0
  4757  004DCA  0101               	movlb	1	; () banked
  4758  004DCC  0101               	movlb	1	; () banked
  4759  004DCE  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  4760  004DD0  0E00               	movlw	0
  4761  004DD2  0101               	movlb	1	; () banked
  4762  004DD4  0101               	movlb	1	; () banked
  4763  004DD6  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  4764  004DD8  0E80               	movlw	128
  4765  004DDA  0101               	movlb	1	; () banked
  4766  004DDC  0101               	movlb	1	; () banked
  4767  004DDE  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  4768                           
  4769                           ; BSR set to: 1
  4770  004DE0  0E00               	movlw	0
  4771  004DE2  0101               	movlb	1	; () banked
  4772  004DE4  0101               	movlb	1	; () banked
  4773  004DE6  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  4774  004DE8  0E00               	movlw	0
  4775  004DEA  0101               	movlb	1	; () banked
  4776  004DEC  0101               	movlb	1	; () banked
  4777  004DEE  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  4778  004DF0  0E80               	movlw	128
  4779  004DF2  0101               	movlb	1	; () banked
  4780  004DF4  0101               	movlb	1	; () banked
  4781  004DF6  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  4782  004DF8  0101               	movlb	1	; () banked
  4783  004DFA  0101               	movlb	1	; () banked
  4784  004DFC  5103               	movf	___ftge@ff2& (0+255),w,b
  4785  004DFE  0101               	movlb	1	; () banked
  4786  004E00  0101               	movlb	1	; () banked
  4787  004E02  5D00               	subwf	___ftge@ff1& (0+255),w,b
  4788  004E04  0101               	movlb	1	; () banked
  4789  004E06  0101               	movlb	1	; () banked
  4790  004E08  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  4791  004E0A  0101               	movlb	1	; () banked
  4792  004E0C  0101               	movlb	1	; () banked
  4793  004E0E  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  4794  004E10  0101               	movlb	1	; () banked
  4795  004E12  0101               	movlb	1	; () banked
  4796  004E14  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  4797  004E16  0101               	movlb	1	; () banked
  4798  004E18  0101               	movlb	1	; () banked
  4799  004E1A  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  4800  004E1C  B0D8               	btfsc	status,0,c
  4801  004E1E  D002               	goto	l11015
  4802                           
  4803                           ; BSR set to: 1
  4804  004E20  90D8               	bcf	status,0,c
  4805  004E22  D001               	goto	l768
  4806  004E24                     l11015:
  4807                           
  4808                           ; BSR set to: 1
  4809  004E24  80D8               	bsf	status,0,c
  4810  004E26                     l768:
  4811                           
  4812                           ; BSR set to: 1
  4813  004E26  0012               	return	
  4814  004E28                     __end_of___ftge:
  4815                           	opt stack 0
  4816                           tblptru	equ	0xFF8
  4817                           tblptrh	equ	0xFF7
  4818                           tblptrl	equ	0xFF6
  4819                           tablat	equ	0xFF5
  4820                           prodh	equ	0xFF4
  4821                           prodl	equ	0xFF3
  4822                           postinc0	equ	0xFEE
  4823                           wreg	equ	0xFE8
  4824                           indf2	equ	0xFDF
  4825                           postinc2	equ	0xFDE
  4826                           postdec2	equ	0xFDD
  4827                           fsr2h	equ	0xFDA
  4828                           fsr2l	equ	0xFD9
  4829                           status	equ	0xFD8
  4830                           
  4831 ;; *************** function ___asftsub *****************
  4832 ;; Defined at:
  4833 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  f1p             2   76[BANK1 ] PTR float 
  4836 ;;		 -> sprintf@fval(3), 
  4837 ;;  f2              3   78[BANK1 ] float 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  3   76[BANK1 ] float 
  4842 ;; Registers used:
  4843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4849 ;;      Params:         0       0       5       0       0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4852 ;;      Totals:         0       0       5       0       0       0       0       0       0
  4853 ;;Total ram usage:        5 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:   12
  4856 ;; This function calls:
  4857 ;;		___ftsub
  4858 ;; This function is called by:
  4859 ;;		_sprintf
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text8
  4864  005EA8                     __ptext8:
  4865                           	opt stack 0
  4866  005EA8                     ___asftsub:
  4867                           	opt stack 17
  4868                           
  4869                           ;	Return value of ___asftsub is never used
  4870                           
  4871                           ; BSR set to: 1
  4872                           ;incstack = 0
  4873                           ;incstack = 0
  4874  005EA8  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  4875  005EAC  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  4876  005EB0  0101               	movlb	1	; () banked
  4877  005EB2  CFDE F146          	movff	postinc2,?___ftsub
  4878  005EB6  0101               	movlb	1	; () banked
  4879  005EB8  CFDE F147          	movff	postinc2,?___ftsub+1
  4880  005EBC  0101               	movlb	1	; () banked
  4881  005EBE  CFDD F148          	movff	postdec2,?___ftsub+2
  4882  005EC2  C14E  F149         	movff	___asftsub@f2,?___ftsub+3
  4883  005EC6  C14F  F14A         	movff	___asftsub@f2+1,?___ftsub+4
  4884  005ECA  C150  F14B         	movff	___asftsub@f2+2,?___ftsub+5
  4885  005ECE  EC75  F02F         	call	___ftsub	;wreg free
  4886  005ED2  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  4887  005ED6  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  4888  005EDA  C146  FFDE         	movff	?___ftsub,postinc2
  4889  005EDE  C147  FFDE         	movff	?___ftsub+1,postinc2
  4890  005EE2  C148  FFDD         	movff	?___ftsub+2,postdec2
  4891  005EE6  52DD               	movf	postdec2,f,c
  4892  005EE8  0012               	return	
  4893  005EEA                     __end_of___asftsub:
  4894                           	opt stack 0
  4895                           tblptru	equ	0xFF8
  4896                           tblptrh	equ	0xFF7
  4897                           tblptrl	equ	0xFF6
  4898                           tablat	equ	0xFF5
  4899                           prodh	equ	0xFF4
  4900                           prodl	equ	0xFF3
  4901                           postinc0	equ	0xFEE
  4902                           wreg	equ	0xFE8
  4903                           indf2	equ	0xFDF
  4904                           postinc2	equ	0xFDE
  4905                           postdec2	equ	0xFDD
  4906                           fsr2h	equ	0xFDA
  4907                           fsr2l	equ	0xFD9
  4908                           status	equ	0xFD8
  4909                           
  4910 ;; *************** function ___ftsub *****************
  4911 ;; Defined at:
  4912 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  f1              3   70[BANK1 ] float 
  4915 ;;  f2              3   73[BANK1 ] float 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  3   70[BANK1 ] float 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4927 ;;      Params:         0       0       6       0       0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4930 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4931 ;;Total ram usage:        6 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:   11
  4934 ;; This function calls:
  4935 ;;		___ftadd
  4936 ;; This function is called by:
  4937 ;;		___asftsub
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text9
  4942  005EEA                     __ptext9:
  4943                           	opt stack 0
  4944  005EEA                     ___ftsub:
  4945                           	opt stack 17
  4946                           
  4947                           ;incstack = 0
  4948                           ;incstack = 0
  4949  005EEA  0E00               	movlw	0
  4950  005EEC  0101               	movlb	1	; () banked
  4951  005EEE  0101               	movlb	1	; () banked
  4952  005EF0  1B49               	xorwf	___ftsub@f2& (0+255),f,b
  4953  005EF2  0E00               	movlw	0
  4954  005EF4  0101               	movlb	1	; () banked
  4955  005EF6  0101               	movlb	1	; () banked
  4956  005EF8  1B4A               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  4957  005EFA  0E80               	movlw	128
  4958  005EFC  0101               	movlb	1	; () banked
  4959  005EFE  0101               	movlb	1	; () banked
  4960  005F00  1B4B               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  4961                           
  4962                           ; BSR set to: 1
  4963  005F02  C146  F138         	movff	___ftsub@f1,?___ftadd
  4964  005F06  C147  F139         	movff	___ftsub@f1+1,?___ftadd+1
  4965  005F0A  C148  F13A         	movff	___ftsub@f1+2,?___ftadd+2
  4966  005F0E  C149  F13B         	movff	___ftsub@f2,?___ftadd+3
  4967  005F12  C14A  F13C         	movff	___ftsub@f2+1,?___ftadd+4
  4968  005F16  C14B  F13D         	movff	___ftsub@f2+2,?___ftadd+5
  4969  005F1A  ECF3  F018         	call	___ftadd	;wreg free
  4970  005F1E  C13A  F148         	movff	?___ftadd+2,?___ftsub+2
  4971  005F22  C139  F147         	movff	?___ftadd+1,?___ftsub+1
  4972  005F26  C138  F146         	movff	?___ftadd,?___ftsub
  4973  005F2A  0012               	return	
  4974  005F2C                     __end_of___ftsub:
  4975                           	opt stack 0
  4976                           tblptru	equ	0xFF8
  4977                           tblptrh	equ	0xFF7
  4978                           tblptrl	equ	0xFF6
  4979                           tablat	equ	0xFF5
  4980                           prodh	equ	0xFF4
  4981                           prodl	equ	0xFF3
  4982                           postinc0	equ	0xFEE
  4983                           wreg	equ	0xFE8
  4984                           indf2	equ	0xFDF
  4985                           postinc2	equ	0xFDE
  4986                           postdec2	equ	0xFDD
  4987                           fsr2h	equ	0xFDA
  4988                           fsr2l	equ	0xFD9
  4989                           status	equ	0xFD8
  4990                           
  4991 ;; *************** function ___asftmul *****************
  4992 ;; Defined at:
  4993 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  f1p             2   39[BANK1 ] PTR float 
  4996 ;;		 -> sprintf@integ(3), 
  4997 ;;  f2              3   41[BANK1 ] float 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  3   39[BANK1 ] float 
  5002 ;; Registers used:
  5003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5009 ;;      Params:         0       0       5       0       0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5012 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5013 ;;Total ram usage:        5 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:   11
  5016 ;; This function calls:
  5017 ;;		___ftmul
  5018 ;; This function is called by:
  5019 ;;		_sprintf
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text10
  5024  005F2C                     __ptext10:
  5025                           	opt stack 0
  5026  005F2C                     ___asftmul:
  5027                           	opt stack 18
  5028                           
  5029                           ;	Return value of ___asftmul is never used
  5030                           
  5031                           ;incstack = 0
  5032                           ;incstack = 0
  5033  005F2C  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  5034  005F30  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5035  005F34  0101               	movlb	1	; () banked
  5036  005F36  CFDE F116          	movff	postinc2,?___ftmul
  5037  005F3A  0101               	movlb	1	; () banked
  5038  005F3C  CFDE F117          	movff	postinc2,?___ftmul+1
  5039  005F40  0101               	movlb	1	; () banked
  5040  005F42  CFDD F118          	movff	postdec2,?___ftmul+2
  5041  005F46  C129  F119         	movff	___asftmul@f2,?___ftmul+3
  5042  005F4A  C12A  F11A         	movff	___asftmul@f2+1,?___ftmul+4
  5043  005F4E  C12B  F11B         	movff	___asftmul@f2+2,?___ftmul+5
  5044  005F52  ECE1  F01C         	call	___ftmul	;wreg free
  5045  005F56  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  5046  005F5A  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5047  005F5E  C116  FFDE         	movff	?___ftmul,postinc2
  5048  005F62  C117  FFDE         	movff	?___ftmul+1,postinc2
  5049  005F66  C118  FFDD         	movff	?___ftmul+2,postdec2
  5050  005F6A  52DD               	movf	postdec2,f,c
  5051  005F6C  0012               	return	
  5052  005F6E                     __end_of___asftmul:
  5053                           	opt stack 0
  5054                           tblptru	equ	0xFF8
  5055                           tblptrh	equ	0xFF7
  5056                           tblptrl	equ	0xFF6
  5057                           tablat	equ	0xFF5
  5058                           prodh	equ	0xFF4
  5059                           prodl	equ	0xFF3
  5060                           postinc0	equ	0xFEE
  5061                           wreg	equ	0xFE8
  5062                           indf2	equ	0xFDF
  5063                           postinc2	equ	0xFDE
  5064                           postdec2	equ	0xFDD
  5065                           fsr2h	equ	0xFDA
  5066                           fsr2l	equ	0xFD9
  5067                           status	equ	0xFD8
  5068                           
  5069 ;; *************** function ___asftadd *****************
  5070 ;; Defined at:
  5071 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  f1p             2   70[BANK1 ] PTR float 
  5074 ;;		 -> sprintf@fval(3), 
  5075 ;;  f2              3   72[BANK1 ] float 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  3   70[BANK1 ] float 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5087 ;;      Params:         0       0       5       0       0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5090 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5091 ;;Total ram usage:        5 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:   11
  5094 ;; This function calls:
  5095 ;;		___ftadd
  5096 ;; This function is called by:
  5097 ;;		_sprintf
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text11
  5102  005F6E                     __ptext11:
  5103                           	opt stack 0
  5104  005F6E                     ___asftadd:
  5105                           	opt stack 18
  5106                           
  5107                           ;	Return value of ___asftadd is never used
  5108                           
  5109                           ;incstack = 0
  5110                           ;incstack = 0
  5111  005F6E  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  5112  005F72  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5113  005F76  0101               	movlb	1	; () banked
  5114  005F78  CFDE F138          	movff	postinc2,?___ftadd
  5115  005F7C  0101               	movlb	1	; () banked
  5116  005F7E  CFDE F139          	movff	postinc2,?___ftadd+1
  5117  005F82  0101               	movlb	1	; () banked
  5118  005F84  CFDD F13A          	movff	postdec2,?___ftadd+2
  5119  005F88  C148  F13B         	movff	___asftadd@f2,?___ftadd+3
  5120  005F8C  C149  F13C         	movff	___asftadd@f2+1,?___ftadd+4
  5121  005F90  C14A  F13D         	movff	___asftadd@f2+2,?___ftadd+5
  5122  005F94  ECF3  F018         	call	___ftadd	;wreg free
  5123  005F98  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  5124  005F9C  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5125  005FA0  C138  FFDE         	movff	?___ftadd,postinc2
  5126  005FA4  C139  FFDE         	movff	?___ftadd+1,postinc2
  5127  005FA8  C13A  FFDD         	movff	?___ftadd+2,postdec2
  5128  005FAC  52DD               	movf	postdec2,f,c
  5129  005FAE  0012               	return	
  5130  005FB0                     __end_of___asftadd:
  5131                           	opt stack 0
  5132                           tblptru	equ	0xFF8
  5133                           tblptrh	equ	0xFF7
  5134                           tblptrl	equ	0xFF6
  5135                           tablat	equ	0xFF5
  5136                           prodh	equ	0xFF4
  5137                           prodl	equ	0xFF3
  5138                           postinc0	equ	0xFEE
  5139                           wreg	equ	0xFE8
  5140                           indf2	equ	0xFDF
  5141                           postinc2	equ	0xFDE
  5142                           postdec2	equ	0xFDD
  5143                           fsr2h	equ	0xFDA
  5144                           fsr2l	equ	0xFD9
  5145                           status	equ	0xFD8
  5146                           
  5147 ;; *************** function __div_to_l_ *****************
  5148 ;; Defined at:
  5149 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  f1              3    0[BANK1 ] float 
  5152 ;;  f2              3    3[BANK1 ] float 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;  quot            4    7[BANK1 ] unsigned long 
  5155 ;;  exp1            1   12[BANK1 ] unsigned char 
  5156 ;;  cntr            1   11[BANK1 ] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  4    0[BANK1 ] unsigned long 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5166 ;;      Params:         0       0       6       0       0       0       0       0       0
  5167 ;;      Locals:         0       0       6       0       0       0       0       0       0
  5168 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5169 ;;      Totals:         0       0      13       0       0       0       0       0       0
  5170 ;;Total ram usage:       13 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    9
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_sprintf
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text12
  5181  003BB0                     __ptext12:
  5182                           	opt stack 0
  5183  003BB0                     __div_to_l_:
  5184                           	opt stack 20
  5185                           
  5186                           ;incstack = 0
  5187                           ;incstack = 0
  5188  003BB0  0101               	movlb	1	; () banked
  5189  003BB2  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  5190  003BB4  0101               	movlb	1	; () banked
  5191  003BB6  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  5192  003BB8  0101               	movlb	1	; () banked
  5193  003BBA  0101               	movlb	1	; () banked
  5194  003BBC  6F0C               	movwf	__div_to_l_@exp1& (0+255),b
  5195  003BBE  0101               	movlb	1	; () banked
  5196  003BC0  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  5197  003BC2  D001               	goto	l10629
  5198  003BC4  D0B7               	goto	u9690
  5199  003BC6                     l10629:
  5200                           
  5201                           ; BSR set to: 1
  5202  003BC6  0101               	movlb	1	; () banked
  5203  003BC8  3505               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  5204  003BCA  0101               	movlb	1	; () banked
  5205  003BCC  3506               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  5206  003BCE  0101               	movlb	1	; () banked
  5207  003BD0  0101               	movlb	1	; () banked
  5208  003BD2  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  5209  003BD4  0101               	movlb	1	; () banked
  5210  003BD6  670B               	tstfsz	__div_to_l_@cntr& (0+255),b
  5211  003BD8  D001               	goto	l10635
  5212  003BDA  D0AC               	goto	u9690
  5213  003BDC                     l10635:
  5214                           
  5215                           ; BSR set to: 1
  5216  003BDC  0101               	movlb	1	; () banked
  5217  003BDE  0101               	movlb	1	; () banked
  5218  003BE0  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  5219                           
  5220                           ; BSR set to: 1
  5221  003BE2  0EFF               	movlw	255
  5222  003BE4  0101               	movlb	1	; () banked
  5223  003BE6  0101               	movlb	1	; () banked
  5224  003BE8  1700               	andwf	__div_to_l_@f1& (0+255),f,b
  5225  003BEA  0EFF               	movlw	255
  5226  003BEC  0101               	movlb	1	; () banked
  5227  003BEE  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  5228  003BF0  0EFF               	movlw	255
  5229  003BF2  0101               	movlb	1	; () banked
  5230  003BF4  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  5231  003BF6  0E00               	movlw	0
  5232  003BF8  0101               	movlb	1	; () banked
  5233  003BFA  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  5234                           
  5235                           ; BSR set to: 1
  5236  003BFC  0101               	movlb	1	; () banked
  5237  003BFE  0101               	movlb	1	; () banked
  5238  003C00  8F05               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  5239  003C02  0EFF               	movlw	255
  5240  003C04  0101               	movlb	1	; () banked
  5241  003C06  0101               	movlb	1	; () banked
  5242  003C08  1703               	andwf	__div_to_l_@f2& (0+255),f,b
  5243  003C0A  0EFF               	movlw	255
  5244  003C0C  0101               	movlb	1	; () banked
  5245  003C0E  1704               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  5246  003C10  0EFF               	movlw	255
  5247  003C12  0101               	movlb	1	; () banked
  5248  003C14  1705               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  5249  003C16  0E00               	movlw	0
  5250  003C18  0101               	movlb	1	; () banked
  5251  003C1A  1706               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  5252                           
  5253                           ; BSR set to: 1
  5254  003C1C  0E00               	movlw	0
  5255  003C1E  0101               	movlb	1	; () banked
  5256  003C20  0101               	movlb	1	; () banked
  5257  003C22  6F07               	movwf	__div_to_l_@quot& (0+255),b
  5258  003C24  0E00               	movlw	0
  5259  003C26  0101               	movlb	1	; () banked
  5260  003C28  6F08               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5261  003C2A  0E00               	movlw	0
  5262  003C2C  0101               	movlb	1	; () banked
  5263  003C2E  6F09               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5264  003C30  0E00               	movlw	0
  5265  003C32  0101               	movlb	1	; () banked
  5266  003C34  6F0A               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5267                           
  5268                           ; BSR set to: 1
  5269  003C36  0E7F               	movlw	127
  5270  003C38  0101               	movlb	1	; () banked
  5271  003C3A  0101               	movlb	1	; () banked
  5272  003C3C  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  5273                           
  5274                           ; BSR set to: 1
  5275  003C3E  0101               	movlb	1	; () banked
  5276  003C40  0101               	movlb	1	; () banked
  5277  003C42  510B               	movf	__div_to_l_@cntr& (0+255),w,b
  5278  003C44  0FA0               	addlw	160
  5279  003C46  0101               	movlb	1	; () banked
  5280  003C48  0101               	movlb	1	; () banked
  5281  003C4A  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  5282                           
  5283                           ; BSR set to: 1
  5284  003C4C  0101               	movlb	1	; () banked
  5285  003C4E  6F06               	movwf	??__div_to_l_& (0+255),b
  5286  003C50  0E20               	movlw	32
  5287  003C52  0101               	movlb	1	; () banked
  5288  003C54  0101               	movlb	1	; () banked
  5289  003C56  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  5290  003C58  0101               	movlb	1	; () banked
  5291  003C5A  5106               	movf	??__div_to_l_& (0+255),w,b
  5292  003C5C                     l634:
  5293                           
  5294                           ; BSR set to: 1
  5295  003C5C  0101               	movlb	1	; () banked
  5296  003C5E  90D8               	bcf	status,0,c
  5297  003C60  0101               	movlb	1	; () banked
  5298  003C62  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  5299  003C64  0101               	movlb	1	; () banked
  5300  003C66  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5301  003C68  0101               	movlb	1	; () banked
  5302  003C6A  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5303  003C6C  0101               	movlb	1	; () banked
  5304  003C6E  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5305                           
  5306                           ; BSR set to: 1
  5307  003C70  0101               	movlb	1	; () banked
  5308  003C72  0101               	movlb	1	; () banked
  5309  003C74  5103               	movf	__div_to_l_@f2& (0+255),w,b
  5310  003C76  0101               	movlb	1	; () banked
  5311  003C78  0101               	movlb	1	; () banked
  5312  003C7A  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
  5313  003C7C  0101               	movlb	1	; () banked
  5314  003C7E  0101               	movlb	1	; () banked
  5315  003C80  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5316  003C82  0101               	movlb	1	; () banked
  5317  003C84  0101               	movlb	1	; () banked
  5318  003C86  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  5319  003C88  0101               	movlb	1	; () banked
  5320  003C8A  0101               	movlb	1	; () banked
  5321  003C8C  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5322  003C8E  0101               	movlb	1	; () banked
  5323  003C90  0101               	movlb	1	; () banked
  5324  003C92  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  5325  003C94  0101               	movlb	1	; () banked
  5326  003C96  0101               	movlb	1	; () banked
  5327  003C98  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5328  003C9A  0101               	movlb	1	; () banked
  5329  003C9C  0101               	movlb	1	; () banked
  5330  003C9E  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  5331  003CA0  A0D8               	btfss	status,0,c
  5332  003CA2  D01B               	goto	l10655
  5333                           
  5334                           ; BSR set to: 1
  5335  003CA4  0101               	movlb	1	; () banked
  5336  003CA6  0101               	movlb	1	; () banked
  5337  003CA8  5103               	movf	__div_to_l_@f2& (0+255),w,b
  5338  003CAA  0101               	movlb	1	; () banked
  5339  003CAC  0101               	movlb	1	; () banked
  5340  003CAE  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
  5341  003CB0  0101               	movlb	1	; () banked
  5342  003CB2  0101               	movlb	1	; () banked
  5343  003CB4  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5344  003CB6  0101               	movlb	1	; () banked
  5345  003CB8  0101               	movlb	1	; () banked
  5346  003CBA  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  5347  003CBC  0101               	movlb	1	; () banked
  5348  003CBE  0101               	movlb	1	; () banked
  5349  003CC0  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5350  003CC2  0101               	movlb	1	; () banked
  5351  003CC4  0101               	movlb	1	; () banked
  5352  003CC6  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  5353  003CC8  0101               	movlb	1	; () banked
  5354  003CCA  0101               	movlb	1	; () banked
  5355  003CCC  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5356  003CCE  0101               	movlb	1	; () banked
  5357  003CD0  0101               	movlb	1	; () banked
  5358  003CD2  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  5359                           
  5360                           ; BSR set to: 1
  5361  003CD4  0101               	movlb	1	; () banked
  5362  003CD6  0101               	movlb	1	; () banked
  5363  003CD8  8107               	bsf	__div_to_l_@quot& (0+255),0,b
  5364  003CDA                     l10655:
  5365                           
  5366                           ; BSR set to: 1
  5367  003CDA  0101               	movlb	1	; () banked
  5368  003CDC  90D8               	bcf	status,0,c
  5369  003CDE  0101               	movlb	1	; () banked
  5370  003CE0  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
  5371  003CE2  0101               	movlb	1	; () banked
  5372  003CE4  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  5373  003CE6  0101               	movlb	1	; () banked
  5374  003CE8  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  5375  003CEA  0101               	movlb	1	; () banked
  5376  003CEC  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  5377                           
  5378                           ; BSR set to: 1
  5379  003CEE  0101               	movlb	1	; () banked
  5380  003CF0  0101               	movlb	1	; () banked
  5381  003CF2  2F0B               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5382  003CF4  D7B3               	goto	l634
  5383                           
  5384                           ; BSR set to: 1
  5385  003CF6  0101               	movlb	1	; () banked
  5386  003CF8  0101               	movlb	1	; () banked
  5387  003CFA  AF0C               	btfss	__div_to_l_@exp1& (0+255),7,b
  5388  003CFC  D016               	goto	l10669
  5389                           
  5390                           ; BSR set to: 1
  5391  003CFE  0101               	movlb	1	; () banked
  5392  003D00  0101               	movlb	1	; () banked
  5393  003D02  510C               	movf	__div_to_l_@exp1& (0+255),w,b
  5394  003D04  0A80               	xorlw	128
  5395  003D06  0F9F               	addlw	159
  5396  003D08  A0D8               	btfss	status,0,c
  5397  003D0A  D014               	goto	u9690
  5398  003D0C                     l10665:
  5399                           
  5400                           ; BSR set to: 1
  5401  003D0C  0101               	movlb	1	; () banked
  5402  003D0E  90D8               	bcf	status,0,c
  5403  003D10  0101               	movlb	1	; () banked
  5404  003D12  330A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5405  003D14  0101               	movlb	1	; () banked
  5406  003D16  3309               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5407  003D18  0101               	movlb	1	; () banked
  5408  003D1A  3308               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5409  003D1C  0101               	movlb	1	; () banked
  5410  003D1E  3307               	rrcf	__div_to_l_@quot& (0+255),f,b
  5411                           
  5412                           ; BSR set to: 1
  5413  003D20  0101               	movlb	1	; () banked
  5414  003D22  0101               	movlb	1	; () banked
  5415  003D24  3F0C               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5416  003D26  D7F2               	goto	l10665
  5417  003D28  D024               	goto	l641
  5418  003D2A                     l10669:
  5419                           
  5420                           ; BSR set to: 1
  5421  003D2A  0E1F               	movlw	31
  5422  003D2C  0101               	movlb	1	; () banked
  5423  003D2E  0101               	movlb	1	; () banked
  5424  003D30  650C               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5425  003D32  D01B               	goto	l10677
  5426  003D34                     u9690:
  5427                           
  5428                           ; BSR set to: 1
  5429  003D34  0E00               	movlw	0
  5430  003D36  0101               	movlb	1	; () banked
  5431  003D38  0101               	movlb	1	; () banked
  5432  003D3A  6F00               	movwf	?__div_to_l_& (0+255),b
  5433  003D3C  0E00               	movlw	0
  5434  003D3E  0101               	movlb	1	; () banked
  5435  003D40  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
  5436  003D42  0E00               	movlw	0
  5437  003D44  0101               	movlb	1	; () banked
  5438  003D46  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
  5439  003D48  0E00               	movlw	0
  5440  003D4A  0101               	movlb	1	; () banked
  5441  003D4C  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
  5442  003D4E  D019               	goto	l632
  5443  003D50                     l10675:
  5444                           
  5445                           ; BSR set to: 1
  5446  003D50  0101               	movlb	1	; () banked
  5447  003D52  90D8               	bcf	status,0,c
  5448  003D54  0101               	movlb	1	; () banked
  5449  003D56  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  5450  003D58  0101               	movlb	1	; () banked
  5451  003D5A  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5452  003D5C  0101               	movlb	1	; () banked
  5453  003D5E  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5454  003D60  0101               	movlb	1	; () banked
  5455  003D62  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5456  003D64  0101               	movlb	1	; () banked
  5457  003D66  0101               	movlb	1	; () banked
  5458  003D68  070C               	decf	__div_to_l_@exp1& (0+255),f,b
  5459  003D6A                     l10677:
  5460                           
  5461                           ; BSR set to: 1
  5462  003D6A  0101               	movlb	1	; () banked
  5463  003D6C  0101               	movlb	1	; () banked
  5464  003D6E  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  5465  003D70  D7EF               	goto	l10675
  5466  003D72                     l641:
  5467                           
  5468                           ; BSR set to: 1
  5469  003D72  C107  F100         	movff	__div_to_l_@quot,?__div_to_l_
  5470  003D76  C108  F101         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5471  003D7A  C109  F102         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5472  003D7E  C10A  F103         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5473  003D82                     l632:
  5474                           
  5475                           ; BSR set to: 1
  5476  003D82  0012               	return	
  5477  003D84                     __end_of__div_to_l_:
  5478                           	opt stack 0
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           postinc0	equ	0xFEE
  5486                           wreg	equ	0xFE8
  5487                           indf2	equ	0xFDF
  5488                           postinc2	equ	0xFDE
  5489                           postdec2	equ	0xFDD
  5490                           fsr2h	equ	0xFDA
  5491                           fsr2l	equ	0xFD9
  5492                           status	equ	0xFD8
  5493                           
  5494 ;; *************** function __tdiv_to_l_ *****************
  5495 ;; Defined at:
  5496 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  f1              3    0[BANK1 ] float 
  5499 ;;  f2              3    3[BANK1 ] float 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  quot            4   11[BANK1 ] unsigned long 
  5502 ;;  exp1            1   16[BANK1 ] unsigned char 
  5503 ;;  cntr            1   15[BANK1 ] unsigned char 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  4    0[BANK1 ] unsigned long 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5513 ;;      Params:         0       0       6       0       0       0       0       0       0
  5514 ;;      Locals:         0       0       6       0       0       0       0       0       0
  5515 ;;      Temps:          0       0       5       0       0       0       0       0       0
  5516 ;;      Totals:         0       0      17       0       0       0       0       0       0
  5517 ;;Total ram usage:       17 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    9
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_sprintf
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	text13
  5528  0037B2                     __ptext13:
  5529                           	opt stack 0
  5530  0037B2                     __tdiv_to_l_:
  5531                           	opt stack 20
  5532                           
  5533                           ; BSR set to: 1
  5534                           ;incstack = 0
  5535                           ;incstack = 0
  5536  0037B2  0E0F               	movlw	15
  5537  0037B4  0101               	movlb	1	; () banked
  5538  0037B6  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5539  0037B8  0101               	movlb	1	; () banked
  5540  0037BA  C100  F107         	movff	__tdiv_to_l_@f1,??__tdiv_to_l_+1
  5541  0037BE  0101               	movlb	1	; () banked
  5542  0037C0  C101  F108         	movff	__tdiv_to_l_@f1+1,??__tdiv_to_l_+2
  5543  0037C4  0101               	movlb	1	; () banked
  5544  0037C6  C102  F109         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_+3
  5545  0037CA  0101               	movlb	1	; () banked
  5546  0037CC  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  5547  0037CE  0101               	movlb	1	; () banked
  5548  0037D0  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  5549  0037D2  D005               	goto	u9550
  5550  0037D4                     u9555:
  5551  0037D4  0101               	movlb	1	; () banked
  5552  0037D6  90D8               	bcf	status,0,c
  5553  0037D8  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  5554  0037DA  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  5555  0037DC  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  5556  0037DE                     u9550:
  5557  0037DE  0101               	movlb	1	; () banked
  5558  0037E0  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  5559  0037E2  D7F8               	goto	u9555
  5560  0037E4  0101               	movlb	1	; () banked
  5561  0037E6  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  5562  0037E8  0101               	movlb	1	; () banked
  5563  0037EA  0101               	movlb	1	; () banked
  5564  0037EC  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5565  0037EE  0101               	movlb	1	; () banked
  5566  0037F0  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5567  0037F2  D001               	goto	l10573
  5568  0037F4  D0BE               	goto	u9620
  5569  0037F6                     l10573:
  5570                           
  5571                           ; BSR set to: 1
  5572  0037F6  0E0F               	movlw	15
  5573  0037F8  0101               	movlb	1	; () banked
  5574  0037FA  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5575  0037FC  0101               	movlb	1	; () banked
  5576  0037FE  C103  F107         	movff	__tdiv_to_l_@f2,??__tdiv_to_l_+1
  5577  003802  0101               	movlb	1	; () banked
  5578  003804  C104  F108         	movff	__tdiv_to_l_@f2+1,??__tdiv_to_l_+2
  5579  003808  0101               	movlb	1	; () banked
  5580  00380A  C105  F109         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_+3
  5581  00380E  0101               	movlb	1	; () banked
  5582  003810  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  5583  003812  0101               	movlb	1	; () banked
  5584  003814  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  5585  003816  D005               	goto	u9570
  5586  003818                     u9575:
  5587  003818  0101               	movlb	1	; () banked
  5588  00381A  90D8               	bcf	status,0,c
  5589  00381C  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  5590  00381E  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  5591  003820  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  5592  003822                     u9570:
  5593  003822  0101               	movlb	1	; () banked
  5594  003824  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  5595  003826  D7F8               	goto	u9575
  5596  003828  0101               	movlb	1	; () banked
  5597  00382A  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  5598  00382C  0101               	movlb	1	; () banked
  5599  00382E  0101               	movlb	1	; () banked
  5600  003830  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5601  003832  0101               	movlb	1	; () banked
  5602  003834  670F               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  5603  003836  D001               	goto	l10579
  5604  003838  D09C               	goto	u9620
  5605  00383A                     l10579:
  5606                           
  5607                           ; BSR set to: 1
  5608  00383A  0101               	movlb	1	; () banked
  5609  00383C  0101               	movlb	1	; () banked
  5610  00383E  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  5611                           
  5612                           ; BSR set to: 1
  5613  003840  0EFF               	movlw	255
  5614  003842  0101               	movlb	1	; () banked
  5615  003844  0101               	movlb	1	; () banked
  5616  003846  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  5617  003848  0EFF               	movlw	255
  5618  00384A  0101               	movlb	1	; () banked
  5619  00384C  0101               	movlb	1	; () banked
  5620  00384E  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5621  003850  0E00               	movlw	0
  5622  003852  0101               	movlb	1	; () banked
  5623  003854  0101               	movlb	1	; () banked
  5624  003856  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5625  003858  0101               	movlb	1	; () banked
  5626  00385A  0101               	movlb	1	; () banked
  5627  00385C  8F04               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  5628                           
  5629                           ; BSR set to: 1
  5630  00385E  0EFF               	movlw	255
  5631  003860  0101               	movlb	1	; () banked
  5632  003862  0101               	movlb	1	; () banked
  5633  003864  1703               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  5634  003866  0EFF               	movlw	255
  5635  003868  0101               	movlb	1	; () banked
  5636  00386A  0101               	movlb	1	; () banked
  5637  00386C  1704               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  5638  00386E  0E00               	movlw	0
  5639  003870  0101               	movlb	1	; () banked
  5640  003872  0101               	movlb	1	; () banked
  5641  003874  1705               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  5642                           
  5643                           ; BSR set to: 1
  5644  003876  0E00               	movlw	0
  5645  003878  0101               	movlb	1	; () banked
  5646  00387A  0101               	movlb	1	; () banked
  5647  00387C  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
  5648  00387E  0E00               	movlw	0
  5649  003880  0101               	movlb	1	; () banked
  5650  003882  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5651  003884  0E00               	movlw	0
  5652  003886  0101               	movlb	1	; () banked
  5653  003888  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5654  00388A  0E00               	movlw	0
  5655  00388C  0101               	movlb	1	; () banked
  5656  00388E  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5657                           
  5658                           ; BSR set to: 1
  5659  003890  0E7F               	movlw	127
  5660  003892  0101               	movlb	1	; () banked
  5661  003894  0101               	movlb	1	; () banked
  5662  003896  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5663                           
  5664                           ; BSR set to: 1
  5665  003898  0101               	movlb	1	; () banked
  5666  00389A  0101               	movlb	1	; () banked
  5667  00389C  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5668  00389E  0F98               	addlw	152
  5669  0038A0  0101               	movlb	1	; () banked
  5670  0038A2  0101               	movlb	1	; () banked
  5671  0038A4  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5672                           
  5673                           ; BSR set to: 1
  5674  0038A6  0101               	movlb	1	; () banked
  5675  0038A8  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5676  0038AA  0E18               	movlw	24
  5677  0038AC  0101               	movlb	1	; () banked
  5678  0038AE  0101               	movlb	1	; () banked
  5679  0038B0  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5680  0038B2  0101               	movlb	1	; () banked
  5681  0038B4  5106               	movf	??__tdiv_to_l_& (0+255),w,b
  5682  0038B6                     l10593:
  5683                           
  5684                           ; BSR set to: 1
  5685  0038B6  0101               	movlb	1	; () banked
  5686  0038B8  90D8               	bcf	status,0,c
  5687  0038BA  0101               	movlb	1	; () banked
  5688  0038BC  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5689  0038BE  0101               	movlb	1	; () banked
  5690  0038C0  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5691  0038C2  0101               	movlb	1	; () banked
  5692  0038C4  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5693  0038C6  0101               	movlb	1	; () banked
  5694  0038C8  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5695                           
  5696                           ; BSR set to: 1
  5697  0038CA  0101               	movlb	1	; () banked
  5698  0038CC  0101               	movlb	1	; () banked
  5699  0038CE  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5700  0038D0  0101               	movlb	1	; () banked
  5701  0038D2  0101               	movlb	1	; () banked
  5702  0038D4  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  5703  0038D6  0101               	movlb	1	; () banked
  5704  0038D8  0101               	movlb	1	; () banked
  5705  0038DA  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5706  0038DC  0101               	movlb	1	; () banked
  5707  0038DE  0101               	movlb	1	; () banked
  5708  0038E0  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5709  0038E2  0101               	movlb	1	; () banked
  5710  0038E4  0101               	movlb	1	; () banked
  5711  0038E6  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5712  0038E8  0101               	movlb	1	; () banked
  5713  0038EA  0101               	movlb	1	; () banked
  5714  0038EC  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  5715  0038EE  A0D8               	btfss	status,0,c
  5716  0038F0  D015               	goto	l753
  5717                           
  5718                           ; BSR set to: 1
  5719  0038F2  0101               	movlb	1	; () banked
  5720  0038F4  0101               	movlb	1	; () banked
  5721  0038F6  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5722  0038F8  0101               	movlb	1	; () banked
  5723  0038FA  0101               	movlb	1	; () banked
  5724  0038FC  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  5725  0038FE  0101               	movlb	1	; () banked
  5726  003900  0101               	movlb	1	; () banked
  5727  003902  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5728  003904  0101               	movlb	1	; () banked
  5729  003906  0101               	movlb	1	; () banked
  5730  003908  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5731  00390A  0101               	movlb	1	; () banked
  5732  00390C  0101               	movlb	1	; () banked
  5733  00390E  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5734  003910  0101               	movlb	1	; () banked
  5735  003912  0101               	movlb	1	; () banked
  5736  003914  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5737                           
  5738                           ; BSR set to: 1
  5739  003916  0101               	movlb	1	; () banked
  5740  003918  0101               	movlb	1	; () banked
  5741  00391A  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5742  00391C                     l753:
  5743                           
  5744                           ; BSR set to: 1
  5745  00391C  0101               	movlb	1	; () banked
  5746  00391E  90D8               	bcf	status,0,c
  5747  003920  0101               	movlb	1	; () banked
  5748  003922  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  5749  003924  0101               	movlb	1	; () banked
  5750  003926  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5751  003928  0101               	movlb	1	; () banked
  5752  00392A  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5753                           
  5754                           ; BSR set to: 1
  5755  00392C  0101               	movlb	1	; () banked
  5756  00392E  0101               	movlb	1	; () banked
  5757  003930  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5758  003932  D7C1               	goto	l10593
  5759                           
  5760                           ; BSR set to: 1
  5761  003934  0101               	movlb	1	; () banked
  5762  003936  0101               	movlb	1	; () banked
  5763  003938  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5764  00393A  D016               	goto	l10613
  5765                           
  5766                           ; BSR set to: 1
  5767  00393C  0101               	movlb	1	; () banked
  5768  00393E  0101               	movlb	1	; () banked
  5769  003940  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5770  003942  0A80               	xorlw	128
  5771  003944  0F97               	addlw	151
  5772  003946  A0D8               	btfss	status,0,c
  5773  003948  D014               	goto	u9620
  5774  00394A                     l10609:
  5775                           
  5776                           ; BSR set to: 1
  5777  00394A  0101               	movlb	1	; () banked
  5778  00394C  90D8               	bcf	status,0,c
  5779  00394E  0101               	movlb	1	; () banked
  5780  003950  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5781  003952  0101               	movlb	1	; () banked
  5782  003954  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5783  003956  0101               	movlb	1	; () banked
  5784  003958  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5785  00395A  0101               	movlb	1	; () banked
  5786  00395C  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5787                           
  5788                           ; BSR set to: 1
  5789  00395E  0101               	movlb	1	; () banked
  5790  003960  0101               	movlb	1	; () banked
  5791  003962  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5792  003964  D7F2               	goto	l10609
  5793  003966  D024               	goto	l759
  5794  003968                     l10613:
  5795                           
  5796                           ; BSR set to: 1
  5797  003968  0E17               	movlw	23
  5798  00396A  0101               	movlb	1	; () banked
  5799  00396C  0101               	movlb	1	; () banked
  5800  00396E  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5801  003970  D01B               	goto	l10621
  5802  003972                     u9620:
  5803                           
  5804                           ; BSR set to: 1
  5805  003972  0E00               	movlw	0
  5806  003974  0101               	movlb	1	; () banked
  5807  003976  0101               	movlb	1	; () banked
  5808  003978  6F00               	movwf	?__tdiv_to_l_& (0+255),b
  5809  00397A  0E00               	movlw	0
  5810  00397C  0101               	movlb	1	; () banked
  5811  00397E  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5812  003980  0E00               	movlw	0
  5813  003982  0101               	movlb	1	; () banked
  5814  003984  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5815  003986  0E00               	movlw	0
  5816  003988  0101               	movlb	1	; () banked
  5817  00398A  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5818  00398C  D019               	goto	l750
  5819  00398E                     l10619:
  5820                           
  5821                           ; BSR set to: 1
  5822  00398E  0101               	movlb	1	; () banked
  5823  003990  90D8               	bcf	status,0,c
  5824  003992  0101               	movlb	1	; () banked
  5825  003994  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5826  003996  0101               	movlb	1	; () banked
  5827  003998  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5828  00399A  0101               	movlb	1	; () banked
  5829  00399C  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5830  00399E  0101               	movlb	1	; () banked
  5831  0039A0  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5832  0039A2  0101               	movlb	1	; () banked
  5833  0039A4  0101               	movlb	1	; () banked
  5834  0039A6  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5835  0039A8                     l10621:
  5836                           
  5837                           ; BSR set to: 1
  5838  0039A8  0101               	movlb	1	; () banked
  5839  0039AA  0101               	movlb	1	; () banked
  5840  0039AC  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5841  0039AE  D7EF               	goto	l10619
  5842  0039B0                     l759:
  5843                           
  5844                           ; BSR set to: 1
  5845  0039B0  C10B  F100         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5846  0039B4  C10C  F101         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5847  0039B8  C10D  F102         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5848  0039BC  C10E  F103         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5849  0039C0                     l750:
  5850                           
  5851                           ; BSR set to: 1
  5852  0039C0  0012               	return	
  5853  0039C2                     __end_of__tdiv_to_l_:
  5854                           	opt stack 0
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           postinc0	equ	0xFEE
  5862                           wreg	equ	0xFE8
  5863                           indf2	equ	0xFDF
  5864                           postinc2	equ	0xFDE
  5865                           postdec2	equ	0xFDD
  5866                           fsr2h	equ	0xFDA
  5867                           fsr2l	equ	0xFD9
  5868                           status	equ	0xFD8
  5869                           
  5870 ;; *************** function _isdigit *****************
  5871 ;; Defined at:
  5872 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  c               1    0[BANK1 ] unsigned char 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;		None
  5877 ;; Return value:  Size  Location     Type
  5878 ;;		None               void
  5879 ;; Registers used:
  5880 ;;		wreg, status,2, status,0
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5886 ;;      Params:         0       0       1       0       0       0       0       0       0
  5887 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5888 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5889 ;;      Totals:         0       0       3       0       0       0       0       0       0
  5890 ;;Total ram usage:        3 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    9
  5893 ;; This function calls:
  5894 ;;		Nothing
  5895 ;; This function is called by:
  5896 ;;		_sprintf
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text14
  5901  005FB0                     __ptext14:
  5902                           	opt stack 0
  5903  005FB0                     _isdigit:
  5904                           	opt stack 20
  5905                           
  5906                           ; BSR set to: 1
  5907                           ;incstack = 0
  5908                           ;incstack = 0
  5909  005FB0  0101               	movlb	1	; () banked
  5910  005FB2  6F01               	movwf	??_isdigit& (0+255),b
  5911  005FB4  0E00               	movlw	0
  5912  005FB6  0101               	movlb	1	; () banked
  5913  005FB8  0101               	movlb	1	; () banked
  5914  005FBA  6F02               	movwf	_isdigit$838& (0+255),b
  5915  005FBC  0101               	movlb	1	; () banked
  5916  005FBE  5101               	movf	??_isdigit& (0+255),w,b
  5917                           
  5918                           ; BSR set to: 1
  5919  005FC0  0E3A               	movlw	58
  5920  005FC2  0101               	movlb	1	; () banked
  5921  005FC4  0101               	movlb	1	; () banked
  5922  005FC6  6100               	cpfslt	isdigit@c& (0+255),b
  5923  005FC8  D00D               	goto	l10563
  5924                           
  5925                           ; BSR set to: 1
  5926  005FCA  0E2F               	movlw	47
  5927  005FCC  0101               	movlb	1	; () banked
  5928  005FCE  0101               	movlb	1	; () banked
  5929  005FD0  6500               	cpfsgt	isdigit@c& (0+255),b
  5930  005FD2  D008               	goto	l10563
  5931                           
  5932                           ; BSR set to: 1
  5933  005FD4  0101               	movlb	1	; () banked
  5934  005FD6  6F01               	movwf	??_isdigit& (0+255),b
  5935  005FD8  0E01               	movlw	1
  5936  005FDA  0101               	movlb	1	; () banked
  5937  005FDC  0101               	movlb	1	; () banked
  5938  005FDE  6F02               	movwf	_isdigit$838& (0+255),b
  5939  005FE0  0101               	movlb	1	; () banked
  5940  005FE2  5101               	movf	??_isdigit& (0+255),w,b
  5941  005FE4                     l10563:
  5942                           
  5943                           ; BSR set to: 1
  5944  005FE4  C102  F101         	movff	_isdigit$838,??_isdigit
  5945  005FE8  0101               	movlb	1	; () banked
  5946  005FEA  3101               	rrcf	??_isdigit& (0+255),w,b
  5947                           
  5948                           ; BSR set to: 1
  5949                           
  5950                           ; BSR set to: 1
  5951  005FEC  0012               	return	
  5952  005FEE                     __end_of_isdigit:
  5953                           	opt stack 0
  5954                           tblptru	equ	0xFF8
  5955                           tblptrh	equ	0xFF7
  5956                           tblptrl	equ	0xFF6
  5957                           tablat	equ	0xFF5
  5958                           prodh	equ	0xFF4
  5959                           prodl	equ	0xFF3
  5960                           postinc0	equ	0xFEE
  5961                           wreg	equ	0xFE8
  5962                           indf2	equ	0xFDF
  5963                           postinc2	equ	0xFDE
  5964                           postdec2	equ	0xFDD
  5965                           fsr2h	equ	0xFDA
  5966                           fsr2l	equ	0xFD9
  5967                           status	equ	0xFD8
  5968                           
  5969 ;; *************** function _scale *****************
  5970 ;; Defined at:
  5971 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  scl             1   39[BANK1 ] char 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  3   39[BANK1 ] char 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5985 ;;      Params:         0       0       3       0       0       0       0       0       0
  5986 ;;      Locals:         0       0       3       0       0       0       0       0       0
  5987 ;;      Temps:          0       0       6       0       0       0       0       0       0
  5988 ;;      Totals:         0       0      12       0       0       0       0       0       0
  5989 ;;Total ram usage:       12 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:   11
  5992 ;; This function calls:
  5993 ;;		___ftmul
  5994 ;;		___awdiv
  5995 ;;		___awmod
  5996 ;;		___wmul
  5997 ;; This function is called by:
  5998 ;;		_sprintf
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text15
  6003  002414                     __ptext15:
  6004                           	opt stack 0
  6005  002414                     _scale:
  6006                           	opt stack 18
  6007                           
  6008                           ;doprnt.c: 428: if(scl < 0) {
  6009                           
  6010                           ; BSR set to: 1
  6011                           ;incstack = 0
  6012                           ;incstack = 0
  6013  002414  0101               	movlb	1	; () banked
  6014  002416  0101               	movlb	1	; () banked
  6015  002418  AF27               	btfss	scale@scl& (0+255),7,b
  6016  00241A  D179               	goto	l10537
  6017                           
  6018                           ; BSR set to: 1
  6019                           ;doprnt.c: 429: scl = -scl;
  6020  00241C  0101               	movlb	1	; () banked
  6021  00241E  0101               	movlb	1	; () banked
  6022  002420  6D27               	negf	scale@scl& (0+255),b
  6023                           
  6024                           ; BSR set to: 1
  6025                           ;doprnt.c: 430: if(scl>=110)
  6026  002422  0101               	movlb	1	; () banked
  6027  002424  0101               	movlb	1	; () banked
  6028  002426  5127               	movf	scale@scl& (0+255),w,b
  6029  002428  0A80               	xorlw	128
  6030  00242A  0F12               	addlw	-238
  6031  00242C  A0D8               	btfss	status,0,c
  6032  00242E  D0DF               	goto	l10527
  6033                           
  6034                           ; BSR set to: 1
  6035                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6036  002430  0E00               	movlw	0
  6037  002432  0101               	movlb	1	; () banked
  6038  002434  0101               	movlb	1	; () banked
  6039  002436  6F13               	movwf	(?___wmul+3)& (0+255),b
  6040  002438  0E03               	movlw	3
  6041  00243A  0101               	movlb	1	; () banked
  6042  00243C  6F12               	movwf	(?___wmul+2)& (0+255),b
  6043  00243E  0E00               	movlw	0
  6044  002440  0101               	movlb	1	; () banked
  6045  002442  0101               	movlb	1	; () banked
  6046  002444  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6047  002446  0E0A               	movlw	10
  6048  002448  0101               	movlb	1	; () banked
  6049  00244A  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6050  00244C  0E00               	movlw	0
  6051  00244E  0101               	movlb	1	; () banked
  6052  002450  0101               	movlb	1	; () banked
  6053  002452  6F03               	movwf	(?___awmod+3)& (0+255),b
  6054  002454  0E64               	movlw	100
  6055  002456  0101               	movlb	1	; () banked
  6056  002458  6F02               	movwf	(?___awmod+2)& (0+255),b
  6057  00245A  0101               	movlb	1	; () banked
  6058  00245C  0101               	movlb	1	; () banked
  6059  00245E  5127               	movf	scale@scl& (0+255),w,b
  6060  002460  0101               	movlb	1	; () banked
  6061  002462  0101               	movlb	1	; () banked
  6062  002464  6F00               	movwf	?___awmod& (0+255),b
  6063  002466  0101               	movlb	1	; () banked
  6064  002468  6B01               	clrf	(?___awmod+1)& (0+255),b
  6065  00246A  0101               	movlb	1	; () banked
  6066  00246C  BF00               	btfsc	?___awmod& (0+255),7,b
  6067  00246E  0701               	decf	(?___awmod+1)& (0+255),f,b
  6068  002470  EC06  F028         	call	___awmod	;wreg free
  6069  002474  0101               	movlb	1	; () banked
  6070  002476  C100  F107         	movff	?___awmod,?___awdiv
  6071  00247A  0101               	movlb	1	; () banked
  6072  00247C  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6073  002480  EC6E  F023         	call	___awdiv	;wreg free
  6074  002484  0E09               	movlw	9
  6075  002486  0101               	movlb	1	; () banked
  6076  002488  0101               	movlb	1	; () banked
  6077  00248A  2507               	addwf	?___awdiv& (0+255),w,b
  6078  00248C  0101               	movlb	1	; () banked
  6079  00248E  0101               	movlb	1	; () banked
  6080  002490  6F10               	movwf	?___wmul& (0+255),b
  6081  002492  0E00               	movlw	0
  6082  002494  0101               	movlb	1	; () banked
  6083  002496  0101               	movlb	1	; () banked
  6084  002498  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6085  00249A  0101               	movlb	1	; () banked
  6086  00249C  6F11               	movwf	(?___wmul+1)& (0+255),b
  6087  00249E  EC5F  F02E         	call	___wmul	;wreg free
  6088  0024A2  0E28               	movlw	low __npowers_
  6089  0024A4  0101               	movlb	1	; () banked
  6090  0024A6  0101               	movlb	1	; () banked
  6091  0024A8  2510               	addwf	?___wmul& (0+255),w,b
  6092  0024AA  6EF6               	movwf	tblptrl,c
  6093  0024AC  0E08               	movlw	high __npowers_
  6094  0024AE  0101               	movlb	1	; () banked
  6095  0024B0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6096  0024B2  6EF7               	movwf	tblptrh,c
  6097  0024B4  0009               	tblrd		*+
  6098  0024B6  CFF5 F12A          	movff	tablat,??_scale
  6099  0024BA  0009               	tblrd		*+
  6100  0024BC  CFF5 F12B          	movff	tablat,??_scale+1
  6101  0024C0  0009               	tblrd		*+
  6102  0024C2  CFF5 F12C          	movff	tablat,??_scale+2
  6103  0024C6  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6104  0024CA  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6105  0024CE  C12A  F119         	movff	??_scale,?___ftmul+3
  6106  0024D2  0E00               	movlw	0
  6107  0024D4  0101               	movlb	1	; () banked
  6108  0024D6  0101               	movlb	1	; () banked
  6109  0024D8  6F13               	movwf	(?___wmul+3)& (0+255),b
  6110  0024DA  0E03               	movlw	3
  6111  0024DC  0101               	movlb	1	; () banked
  6112  0024DE  6F12               	movwf	(?___wmul+2)& (0+255),b
  6113  0024E0  0E00               	movlw	0
  6114  0024E2  0101               	movlb	1	; () banked
  6115  0024E4  0101               	movlb	1	; () banked
  6116  0024E6  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6117  0024E8  0E64               	movlw	100
  6118  0024EA  0101               	movlb	1	; () banked
  6119  0024EC  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6120  0024EE  0101               	movlb	1	; () banked
  6121  0024F0  0101               	movlb	1	; () banked
  6122  0024F2  5127               	movf	scale@scl& (0+255),w,b
  6123  0024F4  0101               	movlb	1	; () banked
  6124  0024F6  0101               	movlb	1	; () banked
  6125  0024F8  6F07               	movwf	?___awdiv& (0+255),b
  6126  0024FA  0101               	movlb	1	; () banked
  6127  0024FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6128  0024FE  0101               	movlb	1	; () banked
  6129  002500  BF07               	btfsc	?___awdiv& (0+255),7,b
  6130  002502  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6131  002504  EC6E  F023         	call	___awdiv	;wreg free
  6132  002508  0E12               	movlw	18
  6133  00250A  0101               	movlb	1	; () banked
  6134  00250C  0101               	movlb	1	; () banked
  6135  00250E  2507               	addwf	?___awdiv& (0+255),w,b
  6136  002510  0101               	movlb	1	; () banked
  6137  002512  0101               	movlb	1	; () banked
  6138  002514  6F10               	movwf	?___wmul& (0+255),b
  6139  002516  0E00               	movlw	0
  6140  002518  0101               	movlb	1	; () banked
  6141  00251A  0101               	movlb	1	; () banked
  6142  00251C  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6143  00251E  0101               	movlb	1	; () banked
  6144  002520  6F11               	movwf	(?___wmul+1)& (0+255),b
  6145  002522  EC5F  F02E         	call	___wmul	;wreg free
  6146  002526  0E28               	movlw	low __npowers_
  6147  002528  0101               	movlb	1	; () banked
  6148  00252A  0101               	movlb	1	; () banked
  6149  00252C  2510               	addwf	?___wmul& (0+255),w,b
  6150  00252E  6EF6               	movwf	tblptrl,c
  6151  002530  0E08               	movlw	high __npowers_
  6152  002532  0101               	movlb	1	; () banked
  6153  002534  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6154  002536  6EF7               	movwf	tblptrh,c
  6155  002538  0009               	tblrd		*+
  6156  00253A  CFF5 F12D          	movff	tablat,??_scale+3
  6157  00253E  0009               	tblrd		*+
  6158  002540  CFF5 F12E          	movff	tablat,??_scale+4
  6159  002544  0009               	tblrd		*+
  6160  002546  CFF5 F12F          	movff	tablat,??_scale+5
  6161  00254A  C12F  F118         	movff	??_scale+5,?___ftmul+2
  6162  00254E  C12E  F117         	movff	??_scale+4,?___ftmul+1
  6163  002552  C12D  F116         	movff	??_scale+3,?___ftmul
  6164  002556  ECE1  F01C         	call	___ftmul	;wreg free
  6165  00255A  C118  F132         	movff	?___ftmul+2,_scale$1203+2
  6166  00255E  C117  F131         	movff	?___ftmul+1,_scale$1203+1
  6167  002562  C116  F130         	movff	?___ftmul,_scale$1203
  6168                           
  6169                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6170  002566  C130  F116         	movff	_scale$1203,?___ftmul
  6171  00256A  C131  F117         	movff	_scale$1203+1,?___ftmul+1
  6172  00256E  C132  F118         	movff	_scale$1203+2,?___ftmul+2
  6173  002572  0E00               	movlw	0
  6174  002574  0101               	movlb	1	; () banked
  6175  002576  0101               	movlb	1	; () banked
  6176  002578  6F13               	movwf	(?___wmul+3)& (0+255),b
  6177  00257A  0E03               	movlw	3
  6178  00257C  0101               	movlb	1	; () banked
  6179  00257E  6F12               	movwf	(?___wmul+2)& (0+255),b
  6180  002580  0E00               	movlw	0
  6181  002582  0101               	movlb	1	; () banked
  6182  002584  0101               	movlb	1	; () banked
  6183  002586  6F03               	movwf	(?___awmod+3)& (0+255),b
  6184  002588  0E0A               	movlw	10
  6185  00258A  0101               	movlb	1	; () banked
  6186  00258C  6F02               	movwf	(?___awmod+2)& (0+255),b
  6187  00258E  0101               	movlb	1	; () banked
  6188  002590  0101               	movlb	1	; () banked
  6189  002592  5127               	movf	scale@scl& (0+255),w,b
  6190  002594  0101               	movlb	1	; () banked
  6191  002596  0101               	movlb	1	; () banked
  6192  002598  6F00               	movwf	?___awmod& (0+255),b
  6193  00259A  0101               	movlb	1	; () banked
  6194  00259C  6B01               	clrf	(?___awmod+1)& (0+255),b
  6195  00259E  0101               	movlb	1	; () banked
  6196  0025A0  BF00               	btfsc	?___awmod& (0+255),7,b
  6197  0025A2  0701               	decf	(?___awmod+1)& (0+255),f,b
  6198  0025A4  EC06  F028         	call	___awmod	;wreg free
  6199  0025A8  0101               	movlb	1	; () banked
  6200  0025AA  C100  F110         	movff	?___awmod,?___wmul
  6201  0025AE  0101               	movlb	1	; () banked
  6202  0025B0  C101  F111         	movff	?___awmod+1,?___wmul+1
  6203  0025B4  EC5F  F02E         	call	___wmul	;wreg free
  6204  0025B8  0E28               	movlw	low __npowers_
  6205  0025BA  0101               	movlb	1	; () banked
  6206  0025BC  0101               	movlb	1	; () banked
  6207  0025BE  2510               	addwf	?___wmul& (0+255),w,b
  6208  0025C0  6EF6               	movwf	tblptrl,c
  6209  0025C2  0E08               	movlw	high __npowers_
  6210  0025C4  0101               	movlb	1	; () banked
  6211  0025C6  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6212  0025C8  6EF7               	movwf	tblptrh,c
  6213  0025CA  0009               	tblrd		*+
  6214  0025CC  CFF5 F12A          	movff	tablat,??_scale
  6215  0025D0  0009               	tblrd		*+
  6216  0025D2  CFF5 F12B          	movff	tablat,??_scale+1
  6217  0025D6  0009               	tblrd		*+
  6218  0025D8  CFF5 F12C          	movff	tablat,??_scale+2
  6219  0025DC  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6220  0025E0  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6221  0025E4  C12A  F119         	movff	??_scale,?___ftmul+3
  6222  0025E8  ECE1  F01C         	call	___ftmul	;wreg free
  6223  0025EC  D1FC               	goto	L10
  6224  0025EE                     l10527:
  6225                           
  6226                           ;doprnt.c: 432: else if(scl > 10)
  6227  0025EE  0101               	movlb	1	; () banked
  6228  0025F0  0101               	movlb	1	; () banked
  6229  0025F2  5127               	movf	scale@scl& (0+255),w,b
  6230  0025F4  0A80               	xorlw	128
  6231  0025F6  0F75               	addlw	-139
  6232  0025F8  A0D8               	btfss	status,0,c
  6233  0025FA  D080               	goto	l10533
  6234                           
  6235                           ; BSR set to: 1
  6236                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6237  0025FC  0E00               	movlw	0
  6238  0025FE  0101               	movlb	1	; () banked
  6239  002600  0101               	movlb	1	; () banked
  6240  002602  6F13               	movwf	(?___wmul+3)& (0+255),b
  6241  002604  0E03               	movlw	3
  6242  002606  0101               	movlb	1	; () banked
  6243  002608  6F12               	movwf	(?___wmul+2)& (0+255),b
  6244  00260A  0E00               	movlw	0
  6245  00260C  0101               	movlb	1	; () banked
  6246  00260E  0101               	movlb	1	; () banked
  6247  002610  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6248  002612  0E0A               	movlw	10
  6249  002614  0101               	movlb	1	; () banked
  6250  002616  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6251  002618  0101               	movlb	1	; () banked
  6252  00261A  0101               	movlb	1	; () banked
  6253  00261C  5127               	movf	scale@scl& (0+255),w,b
  6254  00261E  0101               	movlb	1	; () banked
  6255  002620  0101               	movlb	1	; () banked
  6256  002622  6F07               	movwf	?___awdiv& (0+255),b
  6257  002624  0101               	movlb	1	; () banked
  6258  002626  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6259  002628  0101               	movlb	1	; () banked
  6260  00262A  BF07               	btfsc	?___awdiv& (0+255),7,b
  6261  00262C  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6262  00262E  EC6E  F023         	call	___awdiv	;wreg free
  6263  002632  0E09               	movlw	9
  6264  002634  0101               	movlb	1	; () banked
  6265  002636  0101               	movlb	1	; () banked
  6266  002638  2507               	addwf	?___awdiv& (0+255),w,b
  6267  00263A  0101               	movlb	1	; () banked
  6268  00263C  0101               	movlb	1	; () banked
  6269  00263E  6F10               	movwf	?___wmul& (0+255),b
  6270  002640  0E00               	movlw	0
  6271  002642  0101               	movlb	1	; () banked
  6272  002644  0101               	movlb	1	; () banked
  6273  002646  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6274  002648  0101               	movlb	1	; () banked
  6275  00264A  6F11               	movwf	(?___wmul+1)& (0+255),b
  6276  00264C  EC5F  F02E         	call	___wmul	;wreg free
  6277  002650  0E28               	movlw	low __npowers_
  6278  002652  0101               	movlb	1	; () banked
  6279  002654  0101               	movlb	1	; () banked
  6280  002656  2510               	addwf	?___wmul& (0+255),w,b
  6281  002658  6EF6               	movwf	tblptrl,c
  6282  00265A  0E08               	movlw	high __npowers_
  6283  00265C  0101               	movlb	1	; () banked
  6284  00265E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6285  002660  6EF7               	movwf	tblptrh,c
  6286  002662  0009               	tblrd		*+
  6287  002664  CFF5 F12A          	movff	tablat,??_scale
  6288  002668  0009               	tblrd		*+
  6289  00266A  CFF5 F12B          	movff	tablat,??_scale+1
  6290  00266E  0009               	tblrd		*+
  6291  002670  CFF5 F12C          	movff	tablat,??_scale+2
  6292  002674  C12C  F118         	movff	??_scale+2,?___ftmul+2
  6293  002678  C12B  F117         	movff	??_scale+1,?___ftmul+1
  6294  00267C  C12A  F116         	movff	??_scale,?___ftmul
  6295  002680  0E00               	movlw	0
  6296  002682  0101               	movlb	1	; () banked
  6297  002684  0101               	movlb	1	; () banked
  6298  002686  6F13               	movwf	(?___wmul+3)& (0+255),b
  6299  002688  0E03               	movlw	3
  6300  00268A  0101               	movlb	1	; () banked
  6301  00268C  6F12               	movwf	(?___wmul+2)& (0+255),b
  6302  00268E  0E00               	movlw	0
  6303  002690  0101               	movlb	1	; () banked
  6304  002692  0101               	movlb	1	; () banked
  6305  002694  6F03               	movwf	(?___awmod+3)& (0+255),b
  6306  002696  0E0A               	movlw	10
  6307  002698  0101               	movlb	1	; () banked
  6308  00269A  6F02               	movwf	(?___awmod+2)& (0+255),b
  6309  00269C  0101               	movlb	1	; () banked
  6310  00269E  0101               	movlb	1	; () banked
  6311  0026A0  5127               	movf	scale@scl& (0+255),w,b
  6312  0026A2  0101               	movlb	1	; () banked
  6313  0026A4  0101               	movlb	1	; () banked
  6314  0026A6  6F00               	movwf	?___awmod& (0+255),b
  6315  0026A8  0101               	movlb	1	; () banked
  6316  0026AA  6B01               	clrf	(?___awmod+1)& (0+255),b
  6317  0026AC  0101               	movlb	1	; () banked
  6318  0026AE  BF00               	btfsc	?___awmod& (0+255),7,b
  6319  0026B0  0701               	decf	(?___awmod+1)& (0+255),f,b
  6320  0026B2  EC06  F028         	call	___awmod	;wreg free
  6321  0026B6  0101               	movlb	1	; () banked
  6322  0026B8  C100  F110         	movff	?___awmod,?___wmul
  6323  0026BC  0101               	movlb	1	; () banked
  6324  0026BE  C101  F111         	movff	?___awmod+1,?___wmul+1
  6325  0026C2  EC5F  F02E         	call	___wmul	;wreg free
  6326  0026C6  0E28               	movlw	low __npowers_
  6327  0026C8  0101               	movlb	1	; () banked
  6328  0026CA  0101               	movlb	1	; () banked
  6329  0026CC  2510               	addwf	?___wmul& (0+255),w,b
  6330  0026CE  6EF6               	movwf	tblptrl,c
  6331  0026D0  0E08               	movlw	high __npowers_
  6332  0026D2  0101               	movlb	1	; () banked
  6333  0026D4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6334  0026D6  6EF7               	movwf	tblptrh,c
  6335  0026D8  0009               	tblrd		*+
  6336  0026DA  CFF5 F12D          	movff	tablat,??_scale+3
  6337  0026DE  0009               	tblrd		*+
  6338  0026E0  CFF5 F12E          	movff	tablat,??_scale+4
  6339  0026E4  0009               	tblrd		*+
  6340  0026E6  CFF5 F12F          	movff	tablat,??_scale+5
  6341  0026EA  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  6342  0026EE  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  6343  0026F2  C12D  F119         	movff	??_scale+3,?___ftmul+3
  6344  0026F6  ECE1  F01C         	call	___ftmul	;wreg free
  6345  0026FA  D175               	goto	L10
  6346  0026FC                     l10533:
  6347                           
  6348                           ;doprnt.c: 434: return _npowers_[scl];
  6349  0026FC  0101               	movlb	1	; () banked
  6350  0026FE  0101               	movlb	1	; () banked
  6351  002700  5127               	movf	scale@scl& (0+255),w,b
  6352  002702  0D03               	mullw	3
  6353  002704  0E28               	movlw	low __npowers_
  6354  002706  24F3               	addwf	prodl,w,c
  6355  002708  6EF6               	movwf	tblptrl,c
  6356  00270A  0E08               	movlw	high __npowers_
  6357  00270C  D17B               	goto	L9
  6358  00270E                     l10537:
  6359                           
  6360                           ; BSR set to: 1
  6361                           ;doprnt.c: 435: }
  6362                           ;doprnt.c: 436: if(scl>=110)
  6363  00270E  0101               	movlb	1	; () banked
  6364  002710  0101               	movlb	1	; () banked
  6365  002712  5127               	movf	scale@scl& (0+255),w,b
  6366  002714  0A80               	xorlw	128
  6367  002716  0F12               	addlw	-238
  6368  002718  A0D8               	btfss	status,0,c
  6369  00271A  D0DF               	goto	l10545
  6370                           
  6371                           ; BSR set to: 1
  6372                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6373  00271C  0E00               	movlw	0
  6374  00271E  0101               	movlb	1	; () banked
  6375  002720  0101               	movlb	1	; () banked
  6376  002722  6F13               	movwf	(?___wmul+3)& (0+255),b
  6377  002724  0E03               	movlw	3
  6378  002726  0101               	movlb	1	; () banked
  6379  002728  6F12               	movwf	(?___wmul+2)& (0+255),b
  6380  00272A  0E00               	movlw	0
  6381  00272C  0101               	movlb	1	; () banked
  6382  00272E  0101               	movlb	1	; () banked
  6383  002730  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6384  002732  0E0A               	movlw	10
  6385  002734  0101               	movlb	1	; () banked
  6386  002736  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6387  002738  0E00               	movlw	0
  6388  00273A  0101               	movlb	1	; () banked
  6389  00273C  0101               	movlb	1	; () banked
  6390  00273E  6F03               	movwf	(?___awmod+3)& (0+255),b
  6391  002740  0E64               	movlw	100
  6392  002742  0101               	movlb	1	; () banked
  6393  002744  6F02               	movwf	(?___awmod+2)& (0+255),b
  6394  002746  0101               	movlb	1	; () banked
  6395  002748  0101               	movlb	1	; () banked
  6396  00274A  5127               	movf	scale@scl& (0+255),w,b
  6397  00274C  0101               	movlb	1	; () banked
  6398  00274E  0101               	movlb	1	; () banked
  6399  002750  6F00               	movwf	?___awmod& (0+255),b
  6400  002752  0101               	movlb	1	; () banked
  6401  002754  6B01               	clrf	(?___awmod+1)& (0+255),b
  6402  002756  0101               	movlb	1	; () banked
  6403  002758  BF00               	btfsc	?___awmod& (0+255),7,b
  6404  00275A  0701               	decf	(?___awmod+1)& (0+255),f,b
  6405  00275C  EC06  F028         	call	___awmod	;wreg free
  6406  002760  0101               	movlb	1	; () banked
  6407  002762  C100  F107         	movff	?___awmod,?___awdiv
  6408  002766  0101               	movlb	1	; () banked
  6409  002768  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6410  00276C  EC6E  F023         	call	___awdiv	;wreg free
  6411  002770  0E09               	movlw	9
  6412  002772  0101               	movlb	1	; () banked
  6413  002774  0101               	movlb	1	; () banked
  6414  002776  2507               	addwf	?___awdiv& (0+255),w,b
  6415  002778  0101               	movlb	1	; () banked
  6416  00277A  0101               	movlb	1	; () banked
  6417  00277C  6F10               	movwf	?___wmul& (0+255),b
  6418  00277E  0E00               	movlw	0
  6419  002780  0101               	movlb	1	; () banked
  6420  002782  0101               	movlb	1	; () banked
  6421  002784  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6422  002786  0101               	movlb	1	; () banked
  6423  002788  6F11               	movwf	(?___wmul+1)& (0+255),b
  6424  00278A  EC5F  F02E         	call	___wmul	;wreg free
  6425  00278E  0E4F               	movlw	low __powers_
  6426  002790  0101               	movlb	1	; () banked
  6427  002792  0101               	movlb	1	; () banked
  6428  002794  2510               	addwf	?___wmul& (0+255),w,b
  6429  002796  6EF6               	movwf	tblptrl,c
  6430  002798  0E08               	movlw	high __powers_
  6431  00279A  0101               	movlb	1	; () banked
  6432  00279C  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6433  00279E  6EF7               	movwf	tblptrh,c
  6434  0027A0  0009               	tblrd		*+
  6435  0027A2  CFF5 F12A          	movff	tablat,??_scale
  6436  0027A6  0009               	tblrd		*+
  6437  0027A8  CFF5 F12B          	movff	tablat,??_scale+1
  6438  0027AC  0009               	tblrd		*+
  6439  0027AE  CFF5 F12C          	movff	tablat,??_scale+2
  6440  0027B2  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6441  0027B6  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6442  0027BA  C12A  F119         	movff	??_scale,?___ftmul+3
  6443  0027BE  0E00               	movlw	0
  6444  0027C0  0101               	movlb	1	; () banked
  6445  0027C2  0101               	movlb	1	; () banked
  6446  0027C4  6F13               	movwf	(?___wmul+3)& (0+255),b
  6447  0027C6  0E03               	movlw	3
  6448  0027C8  0101               	movlb	1	; () banked
  6449  0027CA  6F12               	movwf	(?___wmul+2)& (0+255),b
  6450  0027CC  0E00               	movlw	0
  6451  0027CE  0101               	movlb	1	; () banked
  6452  0027D0  0101               	movlb	1	; () banked
  6453  0027D2  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6454  0027D4  0E64               	movlw	100
  6455  0027D6  0101               	movlb	1	; () banked
  6456  0027D8  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6457  0027DA  0101               	movlb	1	; () banked
  6458  0027DC  0101               	movlb	1	; () banked
  6459  0027DE  5127               	movf	scale@scl& (0+255),w,b
  6460  0027E0  0101               	movlb	1	; () banked
  6461  0027E2  0101               	movlb	1	; () banked
  6462  0027E4  6F07               	movwf	?___awdiv& (0+255),b
  6463  0027E6  0101               	movlb	1	; () banked
  6464  0027E8  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6465  0027EA  0101               	movlb	1	; () banked
  6466  0027EC  BF07               	btfsc	?___awdiv& (0+255),7,b
  6467  0027EE  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6468  0027F0  EC6E  F023         	call	___awdiv	;wreg free
  6469  0027F4  0E12               	movlw	18
  6470  0027F6  0101               	movlb	1	; () banked
  6471  0027F8  0101               	movlb	1	; () banked
  6472  0027FA  2507               	addwf	?___awdiv& (0+255),w,b
  6473  0027FC  0101               	movlb	1	; () banked
  6474  0027FE  0101               	movlb	1	; () banked
  6475  002800  6F10               	movwf	?___wmul& (0+255),b
  6476  002802  0E00               	movlw	0
  6477  002804  0101               	movlb	1	; () banked
  6478  002806  0101               	movlb	1	; () banked
  6479  002808  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6480  00280A  0101               	movlb	1	; () banked
  6481  00280C  6F11               	movwf	(?___wmul+1)& (0+255),b
  6482  00280E  EC5F  F02E         	call	___wmul	;wreg free
  6483  002812  0E4F               	movlw	low __powers_
  6484  002814  0101               	movlb	1	; () banked
  6485  002816  0101               	movlb	1	; () banked
  6486  002818  2510               	addwf	?___wmul& (0+255),w,b
  6487  00281A  6EF6               	movwf	tblptrl,c
  6488  00281C  0E08               	movlw	high __powers_
  6489  00281E  0101               	movlb	1	; () banked
  6490  002820  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6491  002822  6EF7               	movwf	tblptrh,c
  6492  002824  0009               	tblrd		*+
  6493  002826  CFF5 F12D          	movff	tablat,??_scale+3
  6494  00282A  0009               	tblrd		*+
  6495  00282C  CFF5 F12E          	movff	tablat,??_scale+4
  6496  002830  0009               	tblrd		*+
  6497  002832  CFF5 F12F          	movff	tablat,??_scale+5
  6498  002836  C12F  F118         	movff	??_scale+5,?___ftmul+2
  6499  00283A  C12E  F117         	movff	??_scale+4,?___ftmul+1
  6500  00283E  C12D  F116         	movff	??_scale+3,?___ftmul
  6501  002842  ECE1  F01C         	call	___ftmul	;wreg free
  6502  002846  C118  F132         	movff	?___ftmul+2,_scale$1203+2
  6503  00284A  C117  F131         	movff	?___ftmul+1,_scale$1203+1
  6504  00284E  C116  F130         	movff	?___ftmul,_scale$1203
  6505                           
  6506                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6507  002852  C130  F116         	movff	_scale$1203,?___ftmul
  6508  002856  C131  F117         	movff	_scale$1203+1,?___ftmul+1
  6509  00285A  C132  F118         	movff	_scale$1203+2,?___ftmul+2
  6510  00285E  0E00               	movlw	0
  6511  002860  0101               	movlb	1	; () banked
  6512  002862  0101               	movlb	1	; () banked
  6513  002864  6F13               	movwf	(?___wmul+3)& (0+255),b
  6514  002866  0E03               	movlw	3
  6515  002868  0101               	movlb	1	; () banked
  6516  00286A  6F12               	movwf	(?___wmul+2)& (0+255),b
  6517  00286C  0E00               	movlw	0
  6518  00286E  0101               	movlb	1	; () banked
  6519  002870  0101               	movlb	1	; () banked
  6520  002872  6F03               	movwf	(?___awmod+3)& (0+255),b
  6521  002874  0E0A               	movlw	10
  6522  002876  0101               	movlb	1	; () banked
  6523  002878  6F02               	movwf	(?___awmod+2)& (0+255),b
  6524  00287A  0101               	movlb	1	; () banked
  6525  00287C  0101               	movlb	1	; () banked
  6526  00287E  5127               	movf	scale@scl& (0+255),w,b
  6527  002880  0101               	movlb	1	; () banked
  6528  002882  0101               	movlb	1	; () banked
  6529  002884  6F00               	movwf	?___awmod& (0+255),b
  6530  002886  0101               	movlb	1	; () banked
  6531  002888  6B01               	clrf	(?___awmod+1)& (0+255),b
  6532  00288A  0101               	movlb	1	; () banked
  6533  00288C  BF00               	btfsc	?___awmod& (0+255),7,b
  6534  00288E  0701               	decf	(?___awmod+1)& (0+255),f,b
  6535  002890  EC06  F028         	call	___awmod	;wreg free
  6536  002894  0101               	movlb	1	; () banked
  6537  002896  C100  F110         	movff	?___awmod,?___wmul
  6538  00289A  0101               	movlb	1	; () banked
  6539  00289C  C101  F111         	movff	?___awmod+1,?___wmul+1
  6540  0028A0  EC5F  F02E         	call	___wmul	;wreg free
  6541  0028A4  0E4F               	movlw	low __powers_
  6542  0028A6  0101               	movlb	1	; () banked
  6543  0028A8  0101               	movlb	1	; () banked
  6544  0028AA  2510               	addwf	?___wmul& (0+255),w,b
  6545  0028AC  6EF6               	movwf	tblptrl,c
  6546  0028AE  0E08               	movlw	high __powers_
  6547  0028B0  0101               	movlb	1	; () banked
  6548  0028B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6549  0028B4  6EF7               	movwf	tblptrh,c
  6550  0028B6  0009               	tblrd		*+
  6551  0028B8  CFF5 F12A          	movff	tablat,??_scale
  6552  0028BC  0009               	tblrd		*+
  6553  0028BE  CFF5 F12B          	movff	tablat,??_scale+1
  6554  0028C2  0009               	tblrd		*+
  6555  0028C4  CFF5 F12C          	movff	tablat,??_scale+2
  6556  0028C8  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6557  0028CC  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6558  0028D0  C12A  F119         	movff	??_scale,?___ftmul+3
  6559  0028D4  ECE1  F01C         	call	___ftmul	;wreg free
  6560  0028D8  D086               	goto	L10
  6561  0028DA                     l10545:
  6562                           
  6563                           ;doprnt.c: 438: else if(scl > 10)
  6564  0028DA  0101               	movlb	1	; () banked
  6565  0028DC  0101               	movlb	1	; () banked
  6566  0028DE  5127               	movf	scale@scl& (0+255),w,b
  6567  0028E0  0A80               	xorlw	128
  6568  0028E2  0F75               	addlw	-139
  6569  0028E4  A0D8               	btfss	status,0,c
  6570  0028E6  D086               	goto	l10551
  6571                           
  6572                           ; BSR set to: 1
  6573                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6574  0028E8  0E00               	movlw	0
  6575  0028EA  0101               	movlb	1	; () banked
  6576  0028EC  0101               	movlb	1	; () banked
  6577  0028EE  6F13               	movwf	(?___wmul+3)& (0+255),b
  6578  0028F0  0E03               	movlw	3
  6579  0028F2  0101               	movlb	1	; () banked
  6580  0028F4  6F12               	movwf	(?___wmul+2)& (0+255),b
  6581  0028F6  0E00               	movlw	0
  6582  0028F8  0101               	movlb	1	; () banked
  6583  0028FA  0101               	movlb	1	; () banked
  6584  0028FC  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6585  0028FE  0E0A               	movlw	10
  6586  002900  0101               	movlb	1	; () banked
  6587  002902  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6588  002904  0101               	movlb	1	; () banked
  6589  002906  0101               	movlb	1	; () banked
  6590  002908  5127               	movf	scale@scl& (0+255),w,b
  6591  00290A  0101               	movlb	1	; () banked
  6592  00290C  0101               	movlb	1	; () banked
  6593  00290E  6F07               	movwf	?___awdiv& (0+255),b
  6594  002910  0101               	movlb	1	; () banked
  6595  002912  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6596  002914  0101               	movlb	1	; () banked
  6597  002916  BF07               	btfsc	?___awdiv& (0+255),7,b
  6598  002918  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6599  00291A  EC6E  F023         	call	___awdiv	;wreg free
  6600  00291E  0E09               	movlw	9
  6601  002920  0101               	movlb	1	; () banked
  6602  002922  0101               	movlb	1	; () banked
  6603  002924  2507               	addwf	?___awdiv& (0+255),w,b
  6604  002926  0101               	movlb	1	; () banked
  6605  002928  0101               	movlb	1	; () banked
  6606  00292A  6F10               	movwf	?___wmul& (0+255),b
  6607  00292C  0E00               	movlw	0
  6608  00292E  0101               	movlb	1	; () banked
  6609  002930  0101               	movlb	1	; () banked
  6610  002932  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6611  002934  0101               	movlb	1	; () banked
  6612  002936  6F11               	movwf	(?___wmul+1)& (0+255),b
  6613  002938  EC5F  F02E         	call	___wmul	;wreg free
  6614  00293C  0E4F               	movlw	low __powers_
  6615  00293E  0101               	movlb	1	; () banked
  6616  002940  0101               	movlb	1	; () banked
  6617  002942  2510               	addwf	?___wmul& (0+255),w,b
  6618  002944  6EF6               	movwf	tblptrl,c
  6619  002946  0E08               	movlw	high __powers_
  6620  002948  0101               	movlb	1	; () banked
  6621  00294A  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6622  00294C  6EF7               	movwf	tblptrh,c
  6623  00294E  0009               	tblrd		*+
  6624  002950  CFF5 F12A          	movff	tablat,??_scale
  6625  002954  0009               	tblrd		*+
  6626  002956  CFF5 F12B          	movff	tablat,??_scale+1
  6627  00295A  0009               	tblrd		*+
  6628  00295C  CFF5 F12C          	movff	tablat,??_scale+2
  6629  002960  C12C  F118         	movff	??_scale+2,?___ftmul+2
  6630  002964  C12B  F117         	movff	??_scale+1,?___ftmul+1
  6631  002968  C12A  F116         	movff	??_scale,?___ftmul
  6632  00296C  0E00               	movlw	0
  6633  00296E  0101               	movlb	1	; () banked
  6634  002970  0101               	movlb	1	; () banked
  6635  002972  6F13               	movwf	(?___wmul+3)& (0+255),b
  6636  002974  0E03               	movlw	3
  6637  002976  0101               	movlb	1	; () banked
  6638  002978  6F12               	movwf	(?___wmul+2)& (0+255),b
  6639  00297A  0E00               	movlw	0
  6640  00297C  0101               	movlb	1	; () banked
  6641  00297E  0101               	movlb	1	; () banked
  6642  002980  6F03               	movwf	(?___awmod+3)& (0+255),b
  6643  002982  0E0A               	movlw	10
  6644  002984  0101               	movlb	1	; () banked
  6645  002986  6F02               	movwf	(?___awmod+2)& (0+255),b
  6646  002988  0101               	movlb	1	; () banked
  6647  00298A  0101               	movlb	1	; () banked
  6648  00298C  5127               	movf	scale@scl& (0+255),w,b
  6649  00298E  0101               	movlb	1	; () banked
  6650  002990  0101               	movlb	1	; () banked
  6651  002992  6F00               	movwf	?___awmod& (0+255),b
  6652  002994  0101               	movlb	1	; () banked
  6653  002996  6B01               	clrf	(?___awmod+1)& (0+255),b
  6654  002998  0101               	movlb	1	; () banked
  6655  00299A  BF00               	btfsc	?___awmod& (0+255),7,b
  6656  00299C  0701               	decf	(?___awmod+1)& (0+255),f,b
  6657  00299E  EC06  F028         	call	___awmod	;wreg free
  6658  0029A2  0101               	movlb	1	; () banked
  6659  0029A4  C100  F110         	movff	?___awmod,?___wmul
  6660  0029A8  0101               	movlb	1	; () banked
  6661  0029AA  C101  F111         	movff	?___awmod+1,?___wmul+1
  6662  0029AE  EC5F  F02E         	call	___wmul	;wreg free
  6663  0029B2  0E4F               	movlw	low __powers_
  6664  0029B4  0101               	movlb	1	; () banked
  6665  0029B6  0101               	movlb	1	; () banked
  6666  0029B8  2510               	addwf	?___wmul& (0+255),w,b
  6667  0029BA  6EF6               	movwf	tblptrl,c
  6668  0029BC  0E08               	movlw	high __powers_
  6669  0029BE  0101               	movlb	1	; () banked
  6670  0029C0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6671  0029C2  6EF7               	movwf	tblptrh,c
  6672  0029C4  0009               	tblrd		*+
  6673  0029C6  CFF5 F12D          	movff	tablat,??_scale+3
  6674  0029CA  0009               	tblrd		*+
  6675  0029CC  CFF5 F12E          	movff	tablat,??_scale+4
  6676  0029D0  0009               	tblrd		*+
  6677  0029D2  CFF5 F12F          	movff	tablat,??_scale+5
  6678  0029D6  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  6679  0029DA  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  6680  0029DE  C12D  F119         	movff	??_scale+3,?___ftmul+3
  6681  0029E2  ECE1  F01C         	call	___ftmul	;wreg free
  6682  0029E6                     L10:
  6683  0029E6  C118  F129         	movff	?___ftmul+2,?_scale+2
  6684  0029EA  C117  F128         	movff	?___ftmul+1,?_scale+1
  6685  0029EE  C116  F127         	movff	?___ftmul,?_scale
  6686  0029F2  D019               	goto	l253
  6687  0029F4                     l10551:
  6688                           
  6689                           ;doprnt.c: 440: return _powers_[scl];
  6690  0029F4  0101               	movlb	1	; () banked
  6691  0029F6  0101               	movlb	1	; () banked
  6692  0029F8  5127               	movf	scale@scl& (0+255),w,b
  6693  0029FA  0D03               	mullw	3
  6694  0029FC  0E4F               	movlw	low __powers_
  6695  0029FE  24F3               	addwf	prodl,w,c
  6696  002A00  6EF6               	movwf	tblptrl,c
  6697  002A02  0E08               	movlw	high __powers_
  6698  002A04                     L9:
  6699  002A04  20F4               	addwfc	prodh,w,c
  6700  002A06  6EF7               	movwf	tblptrh,c
  6701  002A08  0009               	tblrd		*+
  6702  002A0A  CFF5 F12A          	movff	tablat,??_scale
  6703  002A0E  0009               	tblrd		*+
  6704  002A10  CFF5 F12B          	movff	tablat,??_scale+1
  6705  002A14  0009               	tblrd		*+
  6706  002A16  CFF5 F12C          	movff	tablat,??_scale+2
  6707  002A1A  C12C  F129         	movff	??_scale+2,?_scale+2
  6708  002A1E  C12B  F128         	movff	??_scale+1,?_scale+1
  6709  002A22  C12A  F127         	movff	??_scale,?_scale
  6710  002A26                     l253:
  6711  002A26  0012               	return	
  6712  002A28                     __end_of_scale:
  6713                           	opt stack 0
  6714                           tblptru	equ	0xFF8
  6715                           tblptrh	equ	0xFF7
  6716                           tblptrl	equ	0xFF6
  6717                           tablat	equ	0xFF5
  6718                           prodh	equ	0xFF4
  6719                           prodl	equ	0xFF3
  6720                           postinc0	equ	0xFEE
  6721                           wreg	equ	0xFE8
  6722                           indf2	equ	0xFDF
  6723                           postinc2	equ	0xFDE
  6724                           postdec2	equ	0xFDD
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function _fround *****************
  6730 ;; Defined at:
  6731 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  prec            1   39[BANK1 ] unsigned char 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;		None
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  3   39[BANK1 ] unsigned char 
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6745 ;;      Params:         0       0       3       0       0       0       0       0       0
  6746 ;;      Locals:         0       0       6       0       0       0       0       0       0
  6747 ;;      Temps:          0       0       6       0       0       0       0       0       0
  6748 ;;      Totals:         0       0      15       0       0       0       0       0       0
  6749 ;;Total ram usage:       15 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:   11
  6752 ;; This function calls:
  6753 ;;		___ftmul
  6754 ;;		___awdiv
  6755 ;;		___awmod
  6756 ;;		___wmul
  6757 ;; This function is called by:
  6758 ;;		_sprintf
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text16
  6763  002E78                     __ptext16:
  6764                           	opt stack 0
  6765  002E78                     _fround:
  6766                           	opt stack 18
  6767                           
  6768                           ;doprnt.c: 413: if(prec>=110)
  6769                           
  6770                           ;incstack = 0
  6771                           ;incstack = 0
  6772  002E78  0E6D               	movlw	109
  6773  002E7A  0101               	movlb	1	; () banked
  6774  002E7C  0101               	movlb	1	; () banked
  6775  002E7E  6527               	cpfsgt	fround@prec& (0+255),b
  6776  002E80  D0ED               	goto	l10503
  6777                           
  6778                           ; BSR set to: 1
  6779                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6780  002E82  0E00               	movlw	0
  6781  002E84  0101               	movlb	1	; () banked
  6782  002E86  0101               	movlb	1	; () banked
  6783  002E88  6F13               	movwf	(?___wmul+3)& (0+255),b
  6784  002E8A  0E03               	movlw	3
  6785  002E8C  0101               	movlb	1	; () banked
  6786  002E8E  6F12               	movwf	(?___wmul+2)& (0+255),b
  6787  002E90  0E00               	movlw	0
  6788  002E92  0101               	movlb	1	; () banked
  6789  002E94  0101               	movlb	1	; () banked
  6790  002E96  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6791  002E98  0E0A               	movlw	10
  6792  002E9A  0101               	movlb	1	; () banked
  6793  002E9C  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6794  002E9E  0E00               	movlw	0
  6795  002EA0  0101               	movlb	1	; () banked
  6796  002EA2  0101               	movlb	1	; () banked
  6797  002EA4  6F03               	movwf	(?___awmod+3)& (0+255),b
  6798  002EA6  0E64               	movlw	100
  6799  002EA8  0101               	movlb	1	; () banked
  6800  002EAA  6F02               	movwf	(?___awmod+2)& (0+255),b
  6801  002EAC  0101               	movlb	1	; () banked
  6802  002EAE  0101               	movlb	1	; () banked
  6803  002EB0  C127  F100         	movff	fround@prec,?___awmod
  6804  002EB4  0101               	movlb	1	; () banked
  6805  002EB6  0101               	movlb	1	; () banked
  6806  002EB8  6B01               	clrf	(?___awmod+1)& (0+255),b
  6807  002EBA  EC06  F028         	call	___awmod	;wreg free
  6808  002EBE  0101               	movlb	1	; () banked
  6809  002EC0  C100  F107         	movff	?___awmod,?___awdiv
  6810  002EC4  0101               	movlb	1	; () banked
  6811  002EC6  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6812  002ECA  EC6E  F023         	call	___awdiv	;wreg free
  6813  002ECE  0E09               	movlw	9
  6814  002ED0  0101               	movlb	1	; () banked
  6815  002ED2  0101               	movlb	1	; () banked
  6816  002ED4  2507               	addwf	?___awdiv& (0+255),w,b
  6817  002ED6  0101               	movlb	1	; () banked
  6818  002ED8  0101               	movlb	1	; () banked
  6819  002EDA  6F10               	movwf	?___wmul& (0+255),b
  6820  002EDC  0E00               	movlw	0
  6821  002EDE  0101               	movlb	1	; () banked
  6822  002EE0  0101               	movlb	1	; () banked
  6823  002EE2  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6824  002EE4  0101               	movlb	1	; () banked
  6825  002EE6  6F11               	movwf	(?___wmul+1)& (0+255),b
  6826  002EE8  EC5F  F02E         	call	___wmul	;wreg free
  6827  002EEC  0E28               	movlw	low __npowers_
  6828  002EEE  0101               	movlb	1	; () banked
  6829  002EF0  0101               	movlb	1	; () banked
  6830  002EF2  2510               	addwf	?___wmul& (0+255),w,b
  6831  002EF4  6EF6               	movwf	tblptrl,c
  6832  002EF6  0E08               	movlw	high __npowers_
  6833  002EF8  0101               	movlb	1	; () banked
  6834  002EFA  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6835  002EFC  6EF7               	movwf	tblptrh,c
  6836  002EFE  0009               	tblrd		*+
  6837  002F00  CFF5 F12A          	movff	tablat,??_fround
  6838  002F04  0009               	tblrd		*+
  6839  002F06  CFF5 F12B          	movff	tablat,??_fround+1
  6840  002F0A  0009               	tblrd		*+
  6841  002F0C  CFF5 F12C          	movff	tablat,??_fround+2
  6842  002F10  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  6843  002F14  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  6844  002F18  C12A  F119         	movff	??_fround,?___ftmul+3
  6845  002F1C  0E00               	movlw	0
  6846  002F1E  0101               	movlb	1	; () banked
  6847  002F20  0101               	movlb	1	; () banked
  6848  002F22  6F13               	movwf	(?___wmul+3)& (0+255),b
  6849  002F24  0E03               	movlw	3
  6850  002F26  0101               	movlb	1	; () banked
  6851  002F28  6F12               	movwf	(?___wmul+2)& (0+255),b
  6852  002F2A  0E00               	movlw	0
  6853  002F2C  0101               	movlb	1	; () banked
  6854  002F2E  0101               	movlb	1	; () banked
  6855  002F30  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6856  002F32  0E64               	movlw	100
  6857  002F34  0101               	movlb	1	; () banked
  6858  002F36  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6859  002F38  0101               	movlb	1	; () banked
  6860  002F3A  0101               	movlb	1	; () banked
  6861  002F3C  C127  F107         	movff	fround@prec,?___awdiv
  6862  002F40  0101               	movlb	1	; () banked
  6863  002F42  0101               	movlb	1	; () banked
  6864  002F44  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6865  002F46  EC6E  F023         	call	___awdiv	;wreg free
  6866  002F4A  0E12               	movlw	18
  6867  002F4C  0101               	movlb	1	; () banked
  6868  002F4E  0101               	movlb	1	; () banked
  6869  002F50  2507               	addwf	?___awdiv& (0+255),w,b
  6870  002F52  0101               	movlb	1	; () banked
  6871  002F54  0101               	movlb	1	; () banked
  6872  002F56  6F10               	movwf	?___wmul& (0+255),b
  6873  002F58  0E00               	movlw	0
  6874  002F5A  0101               	movlb	1	; () banked
  6875  002F5C  0101               	movlb	1	; () banked
  6876  002F5E  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6877  002F60  0101               	movlb	1	; () banked
  6878  002F62  6F11               	movwf	(?___wmul+1)& (0+255),b
  6879  002F64  EC5F  F02E         	call	___wmul	;wreg free
  6880  002F68  0E28               	movlw	low __npowers_
  6881  002F6A  0101               	movlb	1	; () banked
  6882  002F6C  0101               	movlb	1	; () banked
  6883  002F6E  2510               	addwf	?___wmul& (0+255),w,b
  6884  002F70  6EF6               	movwf	tblptrl,c
  6885  002F72  0E08               	movlw	high __npowers_
  6886  002F74  0101               	movlb	1	; () banked
  6887  002F76  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6888  002F78  6EF7               	movwf	tblptrh,c
  6889  002F7A  0009               	tblrd		*+
  6890  002F7C  CFF5 F12D          	movff	tablat,??_fround+3
  6891  002F80  0009               	tblrd		*+
  6892  002F82  CFF5 F12E          	movff	tablat,??_fround+4
  6893  002F86  0009               	tblrd		*+
  6894  002F88  CFF5 F12F          	movff	tablat,??_fround+5
  6895  002F8C  C12F  F118         	movff	??_fround+5,?___ftmul+2
  6896  002F90  C12E  F117         	movff	??_fround+4,?___ftmul+1
  6897  002F94  C12D  F116         	movff	??_fround+3,?___ftmul
  6898  002F98  ECE1  F01C         	call	___ftmul	;wreg free
  6899  002F9C  C118  F135         	movff	?___ftmul+2,_fround$1201+2
  6900  002FA0  C117  F134         	movff	?___ftmul+1,_fround$1201+1
  6901  002FA4  C116  F133         	movff	?___ftmul,_fround$1201
  6902                           
  6903                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6904  002FA8  0E00               	movlw	0
  6905  002FAA  0101               	movlb	1	; () banked
  6906  002FAC  0101               	movlb	1	; () banked
  6907  002FAE  6F13               	movwf	(?___wmul+3)& (0+255),b
  6908  002FB0  0E03               	movlw	3
  6909  002FB2  0101               	movlb	1	; () banked
  6910  002FB4  6F12               	movwf	(?___wmul+2)& (0+255),b
  6911  002FB6  0E00               	movlw	0
  6912  002FB8  0101               	movlb	1	; () banked
  6913  002FBA  0101               	movlb	1	; () banked
  6914  002FBC  6F03               	movwf	(?___awmod+3)& (0+255),b
  6915  002FBE  0E0A               	movlw	10
  6916  002FC0  0101               	movlb	1	; () banked
  6917  002FC2  6F02               	movwf	(?___awmod+2)& (0+255),b
  6918  002FC4  0101               	movlb	1	; () banked
  6919  002FC6  0101               	movlb	1	; () banked
  6920  002FC8  C127  F100         	movff	fround@prec,?___awmod
  6921  002FCC  0101               	movlb	1	; () banked
  6922  002FCE  0101               	movlb	1	; () banked
  6923  002FD0  6B01               	clrf	(?___awmod+1)& (0+255),b
  6924  002FD2  EC06  F028         	call	___awmod	;wreg free
  6925  002FD6  0101               	movlb	1	; () banked
  6926  002FD8  C100  F110         	movff	?___awmod,?___wmul
  6927  002FDC  0101               	movlb	1	; () banked
  6928  002FDE  C101  F111         	movff	?___awmod+1,?___wmul+1
  6929  002FE2  EC5F  F02E         	call	___wmul	;wreg free
  6930  002FE6  0E28               	movlw	low __npowers_
  6931  002FE8  0101               	movlb	1	; () banked
  6932  002FEA  0101               	movlb	1	; () banked
  6933  002FEC  2510               	addwf	?___wmul& (0+255),w,b
  6934  002FEE  6EF6               	movwf	tblptrl,c
  6935  002FF0  0E08               	movlw	high __npowers_
  6936  002FF2  0101               	movlb	1	; () banked
  6937  002FF4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6938  002FF6  6EF7               	movwf	tblptrh,c
  6939  002FF8  0009               	tblrd		*+
  6940  002FFA  CFF5 F12A          	movff	tablat,??_fround
  6941  002FFE  0009               	tblrd		*+
  6942  003000  CFF5 F12B          	movff	tablat,??_fround+1
  6943  003004  0009               	tblrd		*+
  6944  003006  CFF5 F12C          	movff	tablat,??_fround+2
  6945  00300A  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  6946  00300E  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  6947  003012  C12A  F119         	movff	??_fround,?___ftmul+3
  6948  003016  C133  F116         	movff	_fround$1201,?___ftmul
  6949  00301A  C134  F117         	movff	_fround$1201+1,?___ftmul+1
  6950  00301E  C135  F118         	movff	_fround$1201+2,?___ftmul+2
  6951  003022  ECE1  F01C         	call	___ftmul	;wreg free
  6952  003026  C118  F132         	movff	?___ftmul+2,_fround$1202+2
  6953  00302A  C117  F131         	movff	?___ftmul+1,_fround$1202+1
  6954  00302E  C116  F130         	movff	?___ftmul,_fround$1202
  6955                           
  6956                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6957  003032  C130  F116         	movff	_fround$1202,?___ftmul
  6958  003036  C131  F117         	movff	_fround$1202+1,?___ftmul+1
  6959  00303A  C132  F118         	movff	_fround$1202+2,?___ftmul+2
  6960  00303E  0E00               	movlw	0
  6961  003040  0101               	movlb	1	; () banked
  6962  003042  0101               	movlb	1	; () banked
  6963  003044  6F19               	movwf	(?___ftmul+3)& (0+255),b
  6964  003046  0E00               	movlw	0
  6965  003048  0101               	movlb	1	; () banked
  6966  00304A  0101               	movlb	1	; () banked
  6967  00304C  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  6968  00304E  0E3F               	movlw	63
  6969  003050  0101               	movlb	1	; () banked
  6970  003052  0101               	movlb	1	; () banked
  6971  003054  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  6972  003056  ECE1  F01C         	call	___ftmul	;wreg free
  6973  00305A  D0BE               	goto	L12
  6974  00305C                     l10503:
  6975                           
  6976                           ;doprnt.c: 415: else if(prec > 10)
  6977  00305C  0E0A               	movlw	10
  6978  00305E  0101               	movlb	1	; () banked
  6979  003060  0101               	movlb	1	; () banked
  6980  003062  6527               	cpfsgt	fround@prec& (0+255),b
  6981  003064  D092               	goto	l10511
  6982                           
  6983                           ; BSR set to: 1
  6984                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6985  003066  0E00               	movlw	0
  6986  003068  0101               	movlb	1	; () banked
  6987  00306A  0101               	movlb	1	; () banked
  6988  00306C  6F13               	movwf	(?___wmul+3)& (0+255),b
  6989  00306E  0E03               	movlw	3
  6990  003070  0101               	movlb	1	; () banked
  6991  003072  6F12               	movwf	(?___wmul+2)& (0+255),b
  6992  003074  0E00               	movlw	0
  6993  003076  0101               	movlb	1	; () banked
  6994  003078  0101               	movlb	1	; () banked
  6995  00307A  6F03               	movwf	(?___awmod+3)& (0+255),b
  6996  00307C  0E0A               	movlw	10
  6997  00307E  0101               	movlb	1	; () banked
  6998  003080  6F02               	movwf	(?___awmod+2)& (0+255),b
  6999  003082  0101               	movlb	1	; () banked
  7000  003084  0101               	movlb	1	; () banked
  7001  003086  C127  F100         	movff	fround@prec,?___awmod
  7002  00308A  0101               	movlb	1	; () banked
  7003  00308C  0101               	movlb	1	; () banked
  7004  00308E  6B01               	clrf	(?___awmod+1)& (0+255),b
  7005  003090  EC06  F028         	call	___awmod	;wreg free
  7006  003094  0101               	movlb	1	; () banked
  7007  003096  C100  F110         	movff	?___awmod,?___wmul
  7008  00309A  0101               	movlb	1	; () banked
  7009  00309C  C101  F111         	movff	?___awmod+1,?___wmul+1
  7010  0030A0  EC5F  F02E         	call	___wmul	;wreg free
  7011  0030A4  0E28               	movlw	low __npowers_
  7012  0030A6  0101               	movlb	1	; () banked
  7013  0030A8  0101               	movlb	1	; () banked
  7014  0030AA  2510               	addwf	?___wmul& (0+255),w,b
  7015  0030AC  6EF6               	movwf	tblptrl,c
  7016  0030AE  0E08               	movlw	high __npowers_
  7017  0030B0  0101               	movlb	1	; () banked
  7018  0030B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7019  0030B4  6EF7               	movwf	tblptrh,c
  7020  0030B6  0009               	tblrd		*+
  7021  0030B8  CFF5 F12A          	movff	tablat,??_fround
  7022  0030BC  0009               	tblrd		*+
  7023  0030BE  CFF5 F12B          	movff	tablat,??_fround+1
  7024  0030C2  0009               	tblrd		*+
  7025  0030C4  CFF5 F12C          	movff	tablat,??_fround+2
  7026  0030C8  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  7027  0030CC  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  7028  0030D0  C12A  F119         	movff	??_fround,?___ftmul+3
  7029  0030D4  0E00               	movlw	0
  7030  0030D6  0101               	movlb	1	; () banked
  7031  0030D8  0101               	movlb	1	; () banked
  7032  0030DA  6F13               	movwf	(?___wmul+3)& (0+255),b
  7033  0030DC  0E03               	movlw	3
  7034  0030DE  0101               	movlb	1	; () banked
  7035  0030E0  6F12               	movwf	(?___wmul+2)& (0+255),b
  7036  0030E2  0E00               	movlw	0
  7037  0030E4  0101               	movlb	1	; () banked
  7038  0030E6  0101               	movlb	1	; () banked
  7039  0030E8  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7040  0030EA  0E0A               	movlw	10
  7041  0030EC  0101               	movlb	1	; () banked
  7042  0030EE  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7043  0030F0  0101               	movlb	1	; () banked
  7044  0030F2  0101               	movlb	1	; () banked
  7045  0030F4  C127  F107         	movff	fround@prec,?___awdiv
  7046  0030F8  0101               	movlb	1	; () banked
  7047  0030FA  0101               	movlb	1	; () banked
  7048  0030FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  7049  0030FE  EC6E  F023         	call	___awdiv	;wreg free
  7050  003102  0E09               	movlw	9
  7051  003104  0101               	movlb	1	; () banked
  7052  003106  0101               	movlb	1	; () banked
  7053  003108  2507               	addwf	?___awdiv& (0+255),w,b
  7054  00310A  0101               	movlb	1	; () banked
  7055  00310C  0101               	movlb	1	; () banked
  7056  00310E  6F10               	movwf	?___wmul& (0+255),b
  7057  003110  0E00               	movlw	0
  7058  003112  0101               	movlb	1	; () banked
  7059  003114  0101               	movlb	1	; () banked
  7060  003116  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7061  003118  0101               	movlb	1	; () banked
  7062  00311A  6F11               	movwf	(?___wmul+1)& (0+255),b
  7063  00311C  EC5F  F02E         	call	___wmul	;wreg free
  7064  003120  0E28               	movlw	low __npowers_
  7065  003122  0101               	movlb	1	; () banked
  7066  003124  0101               	movlb	1	; () banked
  7067  003126  2510               	addwf	?___wmul& (0+255),w,b
  7068  003128  6EF6               	movwf	tblptrl,c
  7069  00312A  0E08               	movlw	high __npowers_
  7070  00312C  0101               	movlb	1	; () banked
  7071  00312E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7072  003130  6EF7               	movwf	tblptrh,c
  7073  003132  0009               	tblrd		*+
  7074  003134  CFF5 F12D          	movff	tablat,??_fround+3
  7075  003138  0009               	tblrd		*+
  7076  00313A  CFF5 F12E          	movff	tablat,??_fround+4
  7077  00313E  0009               	tblrd		*+
  7078  003140  CFF5 F12F          	movff	tablat,??_fround+5
  7079  003144  C12F  F118         	movff	??_fround+5,?___ftmul+2
  7080  003148  C12E  F117         	movff	??_fround+4,?___ftmul+1
  7081  00314C  C12D  F116         	movff	??_fround+3,?___ftmul
  7082  003150  ECE1  F01C         	call	___ftmul	;wreg free
  7083  003154  C118  F135         	movff	?___ftmul+2,_fround$1201+2
  7084  003158  C117  F134         	movff	?___ftmul+1,_fround$1201+1
  7085  00315C  C116  F133         	movff	?___ftmul,_fround$1201
  7086                           
  7087                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7088  003160  C133  F116         	movff	_fround$1201,?___ftmul
  7089  003164  C134  F117         	movff	_fround$1201+1,?___ftmul+1
  7090  003168  C135  F118         	movff	_fround$1201+2,?___ftmul+2
  7091  00316C  0E00               	movlw	0
  7092  00316E  0101               	movlb	1	; () banked
  7093  003170  0101               	movlb	1	; () banked
  7094  003172  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7095  003174  0E00               	movlw	0
  7096  003176  0101               	movlb	1	; () banked
  7097  003178  0101               	movlb	1	; () banked
  7098  00317A  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7099  00317C  0E3F               	movlw	63
  7100  00317E  0101               	movlb	1	; () banked
  7101  003180  0101               	movlb	1	; () banked
  7102  003182  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7103  003184  ECE1  F01C         	call	___ftmul	;wreg free
  7104  003188  D027               	goto	L12
  7105  00318A                     l10511:
  7106                           
  7107                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7108  00318A  0101               	movlb	1	; () banked
  7109  00318C  0101               	movlb	1	; () banked
  7110  00318E  5127               	movf	fround@prec& (0+255),w,b
  7111  003190  0D03               	mullw	3
  7112  003192  0E28               	movlw	low __npowers_
  7113  003194  24F3               	addwf	prodl,w,c
  7114  003196  6EF6               	movwf	tblptrl,c
  7115  003198  0E08               	movlw	high __npowers_
  7116  00319A  20F4               	addwfc	prodh,w,c
  7117  00319C  6EF7               	movwf	tblptrh,c
  7118  00319E  0009               	tblrd		*+
  7119  0031A0  CFF5 F12A          	movff	tablat,??_fround
  7120  0031A4  0009               	tblrd		*+
  7121  0031A6  CFF5 F12B          	movff	tablat,??_fround+1
  7122  0031AA  0009               	tblrd		*+
  7123  0031AC  CFF5 F12C          	movff	tablat,??_fround+2
  7124  0031B0  C12C  F118         	movff	??_fround+2,?___ftmul+2
  7125  0031B4  C12B  F117         	movff	??_fround+1,?___ftmul+1
  7126  0031B8  C12A  F116         	movff	??_fround,?___ftmul
  7127  0031BC  0E00               	movlw	0
  7128  0031BE  0101               	movlb	1	; () banked
  7129  0031C0  0101               	movlb	1	; () banked
  7130  0031C2  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7131  0031C4  0E00               	movlw	0
  7132  0031C6  0101               	movlb	1	; () banked
  7133  0031C8  0101               	movlb	1	; () banked
  7134  0031CA  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7135  0031CC  0E3F               	movlw	63
  7136  0031CE  0101               	movlb	1	; () banked
  7137  0031D0  0101               	movlb	1	; () banked
  7138  0031D2  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7139  0031D4  ECE1  F01C         	call	___ftmul	;wreg free
  7140  0031D8                     L12:
  7141  0031D8  C118  F129         	movff	?___ftmul+2,?_fround+2
  7142  0031DC  C117  F128         	movff	?___ftmul+1,?_fround+1
  7143  0031E0  C116  F127         	movff	?___ftmul,?_fround
  7144  0031E4  0012               	return	
  7145  0031E6                     __end_of_fround:
  7146                           	opt stack 0
  7147                           tblptru	equ	0xFF8
  7148                           tblptrh	equ	0xFF7
  7149                           tblptrl	equ	0xFF6
  7150                           tablat	equ	0xFF5
  7151                           prodh	equ	0xFF4
  7152                           prodl	equ	0xFF3
  7153                           postinc0	equ	0xFEE
  7154                           wreg	equ	0xFE8
  7155                           indf2	equ	0xFDF
  7156                           postinc2	equ	0xFDE
  7157                           postdec2	equ	0xFDD
  7158                           fsr2h	equ	0xFDA
  7159                           fsr2l	equ	0xFD9
  7160                           status	equ	0xFD8
  7161                           
  7162 ;; *************** function ___wmul *****************
  7163 ;; Defined at:
  7164 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  multiplier      2   16[BANK1 ] unsigned int 
  7167 ;;  multiplicand    2   18[BANK1 ] unsigned int 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  product         2   20[BANK1 ] unsigned int 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  2   16[BANK1 ] unsigned int 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0, prodl, prodh
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7179 ;;      Params:         0       0       4       0       0       0       0       0       0
  7180 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7182 ;;      Totals:         0       0       6       0       0       0       0       0       0
  7183 ;;Total ram usage:        6 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    9
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_fround
  7190 ;;		_scale
  7191 ;;		_sprintf
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text17
  7196  005CBE                     __ptext17:
  7197                           	opt stack 0
  7198  005CBE                     ___wmul:
  7199                           	opt stack 20
  7200                           
  7201                           ;incstack = 0
  7202                           ;incstack = 0
  7203  005CBE  0101               	movlb	1	; () banked
  7204  005CC0  0101               	movlb	1	; () banked
  7205  005CC2  5110               	movf	___wmul@multiplier& (0+255),w,b
  7206  005CC4  0101               	movlb	1	; () banked
  7207  005CC6  0101               	movlb	1	; () banked
  7208  005CC8  0312               	mulwf	___wmul@multiplicand& (0+255),b
  7209  005CCA  CFF3 F114          	movff	prodl,___wmul@product
  7210  005CCE  CFF4 F115          	movff	prodh,___wmul@product+1
  7211  005CD2  0101               	movlb	1	; () banked
  7212  005CD4  0101               	movlb	1	; () banked
  7213  005CD6  5110               	movf	___wmul@multiplier& (0+255),w,b
  7214  005CD8  0101               	movlb	1	; () banked
  7215  005CDA  0101               	movlb	1	; () banked
  7216  005CDC  0313               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7217  005CDE  CFF3 FFF4          	movff	prodl,prodh
  7218  005CE2  6AF3               	clrf	prodl,c
  7219  005CE4  50F3               	movf	prodl,w,c
  7220  005CE6  0101               	movlb	1	; () banked
  7221  005CE8  0101               	movlb	1	; () banked
  7222  005CEA  2714               	addwf	___wmul@product& (0+255),f,b
  7223  005CEC  50F4               	movf	prodh,w,c
  7224  005CEE  0101               	movlb	1	; () banked
  7225  005CF0  0101               	movlb	1	; () banked
  7226  005CF2  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  7227  005CF4  0101               	movlb	1	; () banked
  7228  005CF6  0101               	movlb	1	; () banked
  7229  005CF8  5111               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7230  005CFA  0101               	movlb	1	; () banked
  7231  005CFC  0101               	movlb	1	; () banked
  7232  005CFE  0312               	mulwf	___wmul@multiplicand& (0+255),b
  7233  005D00  CFF3 FFF4          	movff	prodl,prodh
  7234  005D04  6AF3               	clrf	prodl,c
  7235  005D06  50F3               	movf	prodl,w,c
  7236  005D08  0101               	movlb	1	; () banked
  7237  005D0A  0101               	movlb	1	; () banked
  7238  005D0C  2714               	addwf	___wmul@product& (0+255),f,b
  7239  005D0E  50F4               	movf	prodh,w,c
  7240  005D10  0101               	movlb	1	; () banked
  7241  005D12  0101               	movlb	1	; () banked
  7242  005D14  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  7243                           
  7244                           ; BSR set to: 1
  7245  005D16  C114  F110         	movff	___wmul@product,?___wmul
  7246  005D1A  C115  F111         	movff	___wmul@product+1,?___wmul+1
  7247                           
  7248                           ; BSR set to: 1
  7249                           
  7250                           ; BSR set to: 1
  7251  005D1E  0012               	return	
  7252  005D20                     __end_of___wmul:
  7253                           	opt stack 0
  7254                           tblptru	equ	0xFF8
  7255                           tblptrh	equ	0xFF7
  7256                           tblptrl	equ	0xFF6
  7257                           tablat	equ	0xFF5
  7258                           prodh	equ	0xFF4
  7259                           prodl	equ	0xFF3
  7260                           postinc0	equ	0xFEE
  7261                           wreg	equ	0xFE8
  7262                           indf2	equ	0xFDF
  7263                           postinc2	equ	0xFDE
  7264                           postdec2	equ	0xFDD
  7265                           fsr2h	equ	0xFDA
  7266                           fsr2l	equ	0xFD9
  7267                           status	equ	0xFD8
  7268                           
  7269 ;; *************** function ___awmod *****************
  7270 ;; Defined at:
  7271 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  dividend        2    0[BANK1 ] int 
  7274 ;;  divisor         2    2[BANK1 ] int 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  sign            1    6[BANK1 ] unsigned char 
  7277 ;;  counter         1    5[BANK1 ] unsigned char 
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  2    0[BANK1 ] int 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7287 ;;      Params:         0       0       4       0       0       0       0       0       0
  7288 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7289 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7290 ;;      Totals:         0       0       7       0       0       0       0       0       0
  7291 ;;Total ram usage:        7 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; Hardware stack levels required when called:    9
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_fround
  7298 ;;		_scale
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text18
  7303  00500C                     __ptext18:
  7304                           	opt stack 0
  7305  00500C                     ___awmod:
  7306                           	opt stack 19
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;incstack = 0
  7310                           ;incstack = 0
  7311  00500C  0101               	movlb	1	; () banked
  7312  00500E  6F04               	movwf	??___awmod& (0+255),b
  7313  005010  0E00               	movlw	0
  7314  005012  0101               	movlb	1	; () banked
  7315  005014  0101               	movlb	1	; () banked
  7316  005016  6F06               	movwf	___awmod@sign& (0+255),b
  7317  005018  0101               	movlb	1	; () banked
  7318  00501A  5104               	movf	??___awmod& (0+255),w,b
  7319                           
  7320                           ; BSR set to: 1
  7321  00501C  0101               	movlb	1	; () banked
  7322  00501E  0101               	movlb	1	; () banked
  7323  005020  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7324  005022  D00F               	goto	l10961
  7325                           
  7326                           ; BSR set to: 1
  7327  005024  0101               	movlb	1	; () banked
  7328  005026  0101               	movlb	1	; () banked
  7329  005028  6D00               	negf	___awmod@dividend& (0+255),b
  7330  00502A  0101               	movlb	1	; () banked
  7331  00502C  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  7332  00502E  B0D8               	btfsc	status,0,c
  7333  005030  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  7334                           
  7335                           ; BSR set to: 1
  7336  005032  0101               	movlb	1	; () banked
  7337  005034  6F04               	movwf	??___awmod& (0+255),b
  7338  005036  0E01               	movlw	1
  7339  005038  0101               	movlb	1	; () banked
  7340  00503A  0101               	movlb	1	; () banked
  7341  00503C  6F06               	movwf	___awmod@sign& (0+255),b
  7342  00503E  0101               	movlb	1	; () banked
  7343  005040  5104               	movf	??___awmod& (0+255),w,b
  7344  005042                     l10961:
  7345                           
  7346                           ; BSR set to: 1
  7347  005042  0101               	movlb	1	; () banked
  7348  005044  0101               	movlb	1	; () banked
  7349  005046  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7350  005048  D007               	goto	l10965
  7351                           
  7352                           ; BSR set to: 1
  7353  00504A  0101               	movlb	1	; () banked
  7354  00504C  0101               	movlb	1	; () banked
  7355  00504E  6D02               	negf	___awmod@divisor& (0+255),b
  7356  005050  0101               	movlb	1	; () banked
  7357  005052  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  7358  005054  B0D8               	btfsc	status,0,c
  7359  005056  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  7360  005058                     l10965:
  7361                           
  7362                           ; BSR set to: 1
  7363  005058  0101               	movlb	1	; () banked
  7364  00505A  0101               	movlb	1	; () banked
  7365  00505C  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7366  00505E  1102               	iorwf	___awmod@divisor& (0+255),w,b
  7367  005060  B4D8               	btfsc	status,2,c
  7368  005062  D03A               	goto	l10981
  7369                           
  7370                           ; BSR set to: 1
  7371  005064  0101               	movlb	1	; () banked
  7372  005066  6F04               	movwf	??___awmod& (0+255),b
  7373  005068  0E01               	movlw	1
  7374  00506A  0101               	movlb	1	; () banked
  7375  00506C  0101               	movlb	1	; () banked
  7376  00506E  6F05               	movwf	___awmod@counter& (0+255),b
  7377  005070  0101               	movlb	1	; () banked
  7378  005072  5104               	movf	??___awmod& (0+255),w,b
  7379  005074  D009               	goto	l10971
  7380  005076                     l10969:
  7381                           
  7382                           ; BSR set to: 1
  7383  005076  0101               	movlb	1	; () banked
  7384  005078  0101               	movlb	1	; () banked
  7385  00507A  0101               	movlb	1	; () banked
  7386  00507C  90D8               	bcf	status,0,c
  7387  00507E  3702               	rlcf	___awmod@divisor& (0+255),f,b
  7388  005080  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7389  005082  0101               	movlb	1	; () banked
  7390  005084  0101               	movlb	1	; () banked
  7391  005086  2B05               	incf	___awmod@counter& (0+255),f,b
  7392  005088                     l10971:
  7393                           
  7394                           ; BSR set to: 1
  7395  005088  0101               	movlb	1	; () banked
  7396  00508A  0101               	movlb	1	; () banked
  7397  00508C  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7398  00508E  D7F3               	goto	l10969
  7399  005090                     l10973:
  7400                           
  7401                           ; BSR set to: 1
  7402  005090  0101               	movlb	1	; () banked
  7403  005092  0101               	movlb	1	; () banked
  7404  005094  5102               	movf	___awmod@divisor& (0+255),w,b
  7405  005096  0101               	movlb	1	; () banked
  7406  005098  0101               	movlb	1	; () banked
  7407  00509A  5D00               	subwf	___awmod@dividend& (0+255),w,b
  7408  00509C  0101               	movlb	1	; () banked
  7409  00509E  0101               	movlb	1	; () banked
  7410  0050A0  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7411  0050A2  0101               	movlb	1	; () banked
  7412  0050A4  0101               	movlb	1	; () banked
  7413  0050A6  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7414  0050A8  A0D8               	btfss	status,0,c
  7415  0050AA  D00C               	goto	l10977
  7416                           
  7417                           ; BSR set to: 1
  7418  0050AC  0101               	movlb	1	; () banked
  7419  0050AE  0101               	movlb	1	; () banked
  7420  0050B0  5102               	movf	___awmod@divisor& (0+255),w,b
  7421  0050B2  0101               	movlb	1	; () banked
  7422  0050B4  0101               	movlb	1	; () banked
  7423  0050B6  5F00               	subwf	___awmod@dividend& (0+255),f,b
  7424  0050B8  0101               	movlb	1	; () banked
  7425  0050BA  0101               	movlb	1	; () banked
  7426  0050BC  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7427  0050BE  0101               	movlb	1	; () banked
  7428  0050C0  0101               	movlb	1	; () banked
  7429  0050C2  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7430  0050C4                     l10977:
  7431                           
  7432                           ; BSR set to: 1
  7433  0050C4  0101               	movlb	1	; () banked
  7434  0050C6  0101               	movlb	1	; () banked
  7435  0050C8  0101               	movlb	1	; () banked
  7436  0050CA  90D8               	bcf	status,0,c
  7437  0050CC  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7438  0050CE  3302               	rrcf	___awmod@divisor& (0+255),f,b
  7439                           
  7440                           ; BSR set to: 1
  7441  0050D0  0101               	movlb	1	; () banked
  7442  0050D2  0101               	movlb	1	; () banked
  7443  0050D4  2F05               	decfsz	___awmod@counter& (0+255),f,b
  7444  0050D6  D7DC               	goto	l10973
  7445  0050D8                     l10981:
  7446                           
  7447                           ; BSR set to: 1
  7448  0050D8  0101               	movlb	1	; () banked
  7449  0050DA  0101               	movlb	1	; () banked
  7450  0050DC  5106               	movf	___awmod@sign& (0+255),w,b
  7451  0050DE  B4D8               	btfsc	status,2,c
  7452  0050E0  D007               	goto	l10985
  7453                           
  7454                           ; BSR set to: 1
  7455  0050E2  0101               	movlb	1	; () banked
  7456  0050E4  0101               	movlb	1	; () banked
  7457  0050E6  6D00               	negf	___awmod@dividend& (0+255),b
  7458  0050E8  0101               	movlb	1	; () banked
  7459  0050EA  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  7460  0050EC  B0D8               	btfsc	status,0,c
  7461  0050EE  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  7462  0050F0                     l10985:
  7463                           
  7464                           ; BSR set to: 1
  7465  0050F0  C100  F100         	movff	___awmod@dividend,?___awmod
  7466  0050F4  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  7467                           
  7468                           ; BSR set to: 1
  7469                           
  7470                           ; BSR set to: 1
  7471  0050F8  0012               	return	
  7472  0050FA                     __end_of___awmod:
  7473                           	opt stack 0
  7474                           tblptru	equ	0xFF8
  7475                           tblptrh	equ	0xFF7
  7476                           tblptrl	equ	0xFF6
  7477                           tablat	equ	0xFF5
  7478                           prodh	equ	0xFF4
  7479                           prodl	equ	0xFF3
  7480                           postinc0	equ	0xFEE
  7481                           wreg	equ	0xFE8
  7482                           indf2	equ	0xFDF
  7483                           postinc2	equ	0xFDE
  7484                           postdec2	equ	0xFDD
  7485                           fsr2h	equ	0xFDA
  7486                           fsr2l	equ	0xFD9
  7487                           status	equ	0xFD8
  7488                           
  7489 ;; *************** function ___awdiv *****************
  7490 ;; Defined at:
  7491 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  dividend        2    7[BANK1 ] int 
  7494 ;;  divisor         2    9[BANK1 ] int 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  quotient        2   14[BANK1 ] int 
  7497 ;;  sign            1   13[BANK1 ] unsigned char 
  7498 ;;  counter         1   12[BANK1 ] unsigned char 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  2    7[BANK1 ] int 
  7501 ;; Registers used:
  7502 ;;		wreg, status,2, status,0
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7508 ;;      Params:         0       0       4       0       0       0       0       0       0
  7509 ;;      Locals:         0       0       4       0       0       0       0       0       0
  7510 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7511 ;;      Totals:         0       0       9       0       0       0       0       0       0
  7512 ;;Total ram usage:        9 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:    9
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_fround
  7519 ;;		_scale
  7520 ;;		_sprintf
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text19
  7525  0046DC                     __ptext19:
  7526                           	opt stack 0
  7527  0046DC                     ___awdiv:
  7528                           	opt stack 20
  7529                           
  7530                           ; BSR set to: 1
  7531                           ;incstack = 0
  7532                           ;incstack = 0
  7533  0046DC  0101               	movlb	1	; () banked
  7534  0046DE  6F0B               	movwf	??___awdiv& (0+255),b
  7535  0046E0  0E00               	movlw	0
  7536  0046E2  0101               	movlb	1	; () banked
  7537  0046E4  0101               	movlb	1	; () banked
  7538  0046E6  6F0D               	movwf	___awdiv@sign& (0+255),b
  7539  0046E8  0101               	movlb	1	; () banked
  7540  0046EA  510B               	movf	??___awdiv& (0+255),w,b
  7541                           
  7542                           ; BSR set to: 1
  7543  0046EC  0101               	movlb	1	; () banked
  7544  0046EE  0101               	movlb	1	; () banked
  7545  0046F0  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7546  0046F2  D00F               	goto	l10917
  7547                           
  7548                           ; BSR set to: 1
  7549  0046F4  0101               	movlb	1	; () banked
  7550  0046F6  0101               	movlb	1	; () banked
  7551  0046F8  6D09               	negf	___awdiv@divisor& (0+255),b
  7552  0046FA  0101               	movlb	1	; () banked
  7553  0046FC  1F0A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7554  0046FE  B0D8               	btfsc	status,0,c
  7555  004700  2B0A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7556                           
  7557                           ; BSR set to: 1
  7558  004702  0101               	movlb	1	; () banked
  7559  004704  6F0B               	movwf	??___awdiv& (0+255),b
  7560  004706  0E01               	movlw	1
  7561  004708  0101               	movlb	1	; () banked
  7562  00470A  0101               	movlb	1	; () banked
  7563  00470C  6F0D               	movwf	___awdiv@sign& (0+255),b
  7564  00470E  0101               	movlb	1	; () banked
  7565  004710  510B               	movf	??___awdiv& (0+255),w,b
  7566  004712                     l10917:
  7567                           
  7568                           ; BSR set to: 1
  7569  004712  0101               	movlb	1	; () banked
  7570  004714  0101               	movlb	1	; () banked
  7571  004716  AF08               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7572  004718  D00B               	goto	l10923
  7573                           
  7574                           ; BSR set to: 1
  7575  00471A  0101               	movlb	1	; () banked
  7576  00471C  0101               	movlb	1	; () banked
  7577  00471E  6D07               	negf	___awdiv@dividend& (0+255),b
  7578  004720  0101               	movlb	1	; () banked
  7579  004722  1F08               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7580  004724  B0D8               	btfsc	status,0,c
  7581  004726  2B08               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7582                           
  7583                           ; BSR set to: 1
  7584  004728  0E01               	movlw	1
  7585  00472A  0101               	movlb	1	; () banked
  7586  00472C  0101               	movlb	1	; () banked
  7587  00472E  1B0D               	xorwf	___awdiv@sign& (0+255),f,b
  7588  004730                     l10923:
  7589                           
  7590                           ; BSR set to: 1
  7591  004730  0E00               	movlw	0
  7592  004732  0101               	movlb	1	; () banked
  7593  004734  0101               	movlb	1	; () banked
  7594  004736  6F0F               	movwf	(___awdiv@quotient+1)& (0+255),b
  7595  004738  0E00               	movlw	0
  7596  00473A  0101               	movlb	1	; () banked
  7597  00473C  6F0E               	movwf	___awdiv@quotient& (0+255),b
  7598                           
  7599                           ; BSR set to: 1
  7600  00473E  0101               	movlb	1	; () banked
  7601  004740  0101               	movlb	1	; () banked
  7602  004742  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7603  004744  1109               	iorwf	___awdiv@divisor& (0+255),w,b
  7604  004746  B4D8               	btfsc	status,2,c
  7605  004748  D043               	goto	l10945
  7606                           
  7607                           ; BSR set to: 1
  7608  00474A  0101               	movlb	1	; () banked
  7609  00474C  6F0B               	movwf	??___awdiv& (0+255),b
  7610  00474E  0E01               	movlw	1
  7611  004750  0101               	movlb	1	; () banked
  7612  004752  0101               	movlb	1	; () banked
  7613  004754  6F0C               	movwf	___awdiv@counter& (0+255),b
  7614  004756  0101               	movlb	1	; () banked
  7615  004758  510B               	movf	??___awdiv& (0+255),w,b
  7616  00475A  D009               	goto	l10931
  7617  00475C                     l10929:
  7618                           
  7619                           ; BSR set to: 1
  7620  00475C  0101               	movlb	1	; () banked
  7621  00475E  0101               	movlb	1	; () banked
  7622  004760  0101               	movlb	1	; () banked
  7623  004762  90D8               	bcf	status,0,c
  7624  004764  3709               	rlcf	___awdiv@divisor& (0+255),f,b
  7625  004766  370A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7626  004768  0101               	movlb	1	; () banked
  7627  00476A  0101               	movlb	1	; () banked
  7628  00476C  2B0C               	incf	___awdiv@counter& (0+255),f,b
  7629  00476E                     l10931:
  7630                           
  7631                           ; BSR set to: 1
  7632  00476E  0101               	movlb	1	; () banked
  7633  004770  0101               	movlb	1	; () banked
  7634  004772  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7635  004774  D7F3               	goto	l10929
  7636  004776                     l10933:
  7637                           
  7638                           ; BSR set to: 1
  7639  004776  0101               	movlb	1	; () banked
  7640  004778  0101               	movlb	1	; () banked
  7641  00477A  0101               	movlb	1	; () banked
  7642  00477C  90D8               	bcf	status,0,c
  7643  00477E  370E               	rlcf	___awdiv@quotient& (0+255),f,b
  7644  004780  370F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7645                           
  7646                           ; BSR set to: 1
  7647  004782  0101               	movlb	1	; () banked
  7648  004784  0101               	movlb	1	; () banked
  7649  004786  5109               	movf	___awdiv@divisor& (0+255),w,b
  7650  004788  0101               	movlb	1	; () banked
  7651  00478A  0101               	movlb	1	; () banked
  7652  00478C  5D07               	subwf	___awdiv@dividend& (0+255),w,b
  7653  00478E  0101               	movlb	1	; () banked
  7654  004790  0101               	movlb	1	; () banked
  7655  004792  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7656  004794  0101               	movlb	1	; () banked
  7657  004796  0101               	movlb	1	; () banked
  7658  004798  5908               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7659  00479A  A0D8               	btfss	status,0,c
  7660  00479C  D00F               	goto	l10941
  7661                           
  7662                           ; BSR set to: 1
  7663  00479E  0101               	movlb	1	; () banked
  7664  0047A0  0101               	movlb	1	; () banked
  7665  0047A2  5109               	movf	___awdiv@divisor& (0+255),w,b
  7666  0047A4  0101               	movlb	1	; () banked
  7667  0047A6  0101               	movlb	1	; () banked
  7668  0047A8  5F07               	subwf	___awdiv@dividend& (0+255),f,b
  7669  0047AA  0101               	movlb	1	; () banked
  7670  0047AC  0101               	movlb	1	; () banked
  7671  0047AE  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7672  0047B0  0101               	movlb	1	; () banked
  7673  0047B2  0101               	movlb	1	; () banked
  7674  0047B4  5B08               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7675                           
  7676                           ; BSR set to: 1
  7677  0047B6  0101               	movlb	1	; () banked
  7678  0047B8  0101               	movlb	1	; () banked
  7679  0047BA  810E               	bsf	___awdiv@quotient& (0+255),0,b
  7680  0047BC                     l10941:
  7681                           
  7682                           ; BSR set to: 1
  7683  0047BC  0101               	movlb	1	; () banked
  7684  0047BE  0101               	movlb	1	; () banked
  7685  0047C0  0101               	movlb	1	; () banked
  7686  0047C2  90D8               	bcf	status,0,c
  7687  0047C4  330A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7688  0047C6  3309               	rrcf	___awdiv@divisor& (0+255),f,b
  7689                           
  7690                           ; BSR set to: 1
  7691  0047C8  0101               	movlb	1	; () banked
  7692  0047CA  0101               	movlb	1	; () banked
  7693  0047CC  2F0C               	decfsz	___awdiv@counter& (0+255),f,b
  7694  0047CE  D7D3               	goto	l10933
  7695  0047D0                     l10945:
  7696                           
  7697                           ; BSR set to: 1
  7698  0047D0  0101               	movlb	1	; () banked
  7699  0047D2  0101               	movlb	1	; () banked
  7700  0047D4  510D               	movf	___awdiv@sign& (0+255),w,b
  7701  0047D6  B4D8               	btfsc	status,2,c
  7702  0047D8  D007               	goto	l10949
  7703                           
  7704                           ; BSR set to: 1
  7705  0047DA  0101               	movlb	1	; () banked
  7706  0047DC  0101               	movlb	1	; () banked
  7707  0047DE  6D0E               	negf	___awdiv@quotient& (0+255),b
  7708  0047E0  0101               	movlb	1	; () banked
  7709  0047E2  1F0F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7710  0047E4  B0D8               	btfsc	status,0,c
  7711  0047E6  2B0F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7712  0047E8                     l10949:
  7713                           
  7714                           ; BSR set to: 1
  7715  0047E8  C10E  F107         	movff	___awdiv@quotient,?___awdiv
  7716  0047EC  C10F  F108         	movff	___awdiv@quotient+1,?___awdiv+1
  7717                           
  7718                           ; BSR set to: 1
  7719                           
  7720                           ; BSR set to: 1
  7721  0047F0  0012               	return	
  7722  0047F2                     __end_of___awdiv:
  7723                           	opt stack 0
  7724                           tblptru	equ	0xFF8
  7725                           tblptrh	equ	0xFF7
  7726                           tblptrl	equ	0xFF6
  7727                           tablat	equ	0xFF5
  7728                           prodh	equ	0xFF4
  7729                           prodl	equ	0xFF3
  7730                           postinc0	equ	0xFEE
  7731                           wreg	equ	0xFE8
  7732                           indf2	equ	0xFDF
  7733                           postinc2	equ	0xFDE
  7734                           postdec2	equ	0xFDD
  7735                           fsr2h	equ	0xFDA
  7736                           fsr2l	equ	0xFD9
  7737                           status	equ	0xFD8
  7738                           
  7739 ;; *************** function _Read_LDR *****************
  7740 ;; Defined at:
  7741 ;;		line 287 in file "main.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  analog_readi    3   63[BANK1 ] float 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  3   56[BANK1 ] float 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7755 ;;      Params:         0       0       3       0       0       0       0       0       0
  7756 ;;      Locals:         0       0       3       0       0       0       0       0       0
  7757 ;;      Temps:          0       0       4       0       0       0       0       0       0
  7758 ;;      Totals:         0       0      10       0       0       0       0       0       0
  7759 ;;Total ram usage:       10 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:   11
  7762 ;; This function calls:
  7763 ;;		___ftdiv
  7764 ;;		___ftmul
  7765 ;;		___awtoft
  7766 ;; This function is called by:
  7767 ;;		_main
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text20
  7772  004C32                     __ptext20:
  7773                           	opt stack 0
  7774  004C32                     _Read_LDR:
  7775                           	opt stack 19
  7776                           
  7777                           ;main.c: 288: float analog_reading = 0;
  7778                           
  7779                           ; BSR set to: 1
  7780                           ;incstack = 0
  7781                           ;incstack = 0
  7782  004C32  0E00               	movlw	0
  7783  004C34  0101               	movlb	1	; () banked
  7784  004C36  0101               	movlb	1	; () banked
  7785  004C38  6F3F               	movwf	Read_LDR@analog_reading& (0+255),b
  7786  004C3A  0E00               	movlw	0
  7787  004C3C  0101               	movlb	1	; () banked
  7788  004C3E  0101               	movlb	1	; () banked
  7789  004C40  6F40               	movwf	(Read_LDR@analog_reading+1)& (0+255),b
  7790  004C42  0E00               	movlw	0
  7791  004C44  0101               	movlb	1	; () banked
  7792  004C46  0101               	movlb	1	; () banked
  7793  004C48  6F41               	movwf	(Read_LDR@analog_reading+2)& (0+255),b
  7794                           
  7795                           ; BSR set to: 1
  7796                           ;main.c: 289: ADCON0 |= ((1 << ADON) | (1 << GO));
  7797  004C4A  0E00               	movlw	0
  7798  004C4C  B2C2               	btfsc	4034,1,c	;volatile
  7799  004C4E  0E01               	movlw	1
  7800  004C50  0101               	movlb	1	; () banked
  7801  004C52  6F3B               	movwf	??_Read_LDR& (0+255),b
  7802  004C54  0E01               	movlw	1
  7803  004C56  0101               	movlb	1	; () banked
  7804  004C58  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  7805  004C5A  0101               	movlb	1	; () banked
  7806  004C5C  2B3B               	incf	??_Read_LDR& (0+255),f,b
  7807  004C5E  D003               	goto	u8874
  7808  004C60                     u8875:
  7809  004C60  0101               	movlb	1	; () banked
  7810  004C62  90D8               	bcf	status,0,c
  7811  004C64  373C               	rlcf	(??_Read_LDR+1)& (0+255),f,b
  7812  004C66                     u8874:
  7813  004C66  0101               	movlb	1	; () banked
  7814  004C68  2F3B               	decfsz	??_Read_LDR& (0+255),f,b
  7815  004C6A  D7FA               	goto	u8875
  7816  004C6C  0E00               	movlw	0
  7817  004C6E  B0C2               	btfsc	4034,0,c	;volatile
  7818  004C70  0E01               	movlw	1
  7819  004C72  0101               	movlb	1	; () banked
  7820  004C74  6F3D               	movwf	(??_Read_LDR+2)& (0+255),b
  7821  004C76  0E01               	movlw	1
  7822  004C78  0101               	movlb	1	; () banked
  7823  004C7A  6F3E               	movwf	(??_Read_LDR+3)& (0+255),b
  7824  004C7C  0101               	movlb	1	; () banked
  7825  004C7E  2B3D               	incf	(??_Read_LDR+2)& (0+255),f,b
  7826  004C80  D003               	goto	u8884
  7827  004C82                     u8885:
  7828  004C82  0101               	movlb	1	; () banked
  7829  004C84  90D8               	bcf	status,0,c
  7830  004C86  373E               	rlcf	(??_Read_LDR+3)& (0+255),f,b
  7831  004C88                     u8884:
  7832  004C88  0101               	movlb	1	; () banked
  7833  004C8A  2F3D               	decfsz	(??_Read_LDR+2)& (0+255),f,b
  7834  004C8C  D7FA               	goto	u8885
  7835  004C8E  0101               	movlb	1	; () banked
  7836  004C90  513E               	movf	(??_Read_LDR+3)& (0+255),w,b
  7837  004C92  0101               	movlb	1	; () banked
  7838  004C94  113C               	iorwf	(??_Read_LDR+1)& (0+255),w,b
  7839  004C96  12C2               	iorwf	4034,f,c	;volatile
  7840  004C98                     l223:
  7841  004C98  B2C2               	btfsc	4034,1,c	;volatile
  7842  004C9A  D7FE               	goto	l223
  7843                           
  7844                           ;main.c: 291: analog_reading = (ADRESH * 256) + (ADRESL);
  7845  004C9C  50C4               	movf	4036,w,c	;volatile
  7846  004C9E  0101               	movlb	1	; () banked
  7847  004CA0  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  7848  004CA2  6B3B               	clrf	??_Read_LDR& (0+255),b
  7849  004CA4  50C3               	movf	4035,w,c	;volatile
  7850  004CA6  0101               	movlb	1	; () banked
  7851  004CA8  253B               	addwf	??_Read_LDR& (0+255),w,b
  7852  004CAA  0101               	movlb	1	; () banked
  7853  004CAC  0101               	movlb	1	; () banked
  7854  004CAE  6F08               	movwf	?___awtoft& (0+255),b
  7855  004CB0  0E00               	movlw	0
  7856  004CB2  0101               	movlb	1	; () banked
  7857  004CB4  213C               	addwfc	(??_Read_LDR+1)& (0+255),w,b
  7858  004CB6  0101               	movlb	1	; () banked
  7859  004CB8  6F09               	movwf	(?___awtoft+1)& (0+255),b
  7860  004CBA  EC8D  F02D         	call	___awtoft	;wreg free
  7861  004CBE  C10A  F141         	movff	?___awtoft+2,Read_LDR@analog_reading+2
  7862  004CC2  C109  F140         	movff	?___awtoft+1,Read_LDR@analog_reading+1
  7863  004CC6  C108  F13F         	movff	?___awtoft,Read_LDR@analog_reading
  7864                           
  7865                           ;main.c: 292: analog_reading = analog_reading*5/1023;
  7866  004CCA  0E00               	movlw	0
  7867  004CCC  0101               	movlb	1	; () banked
  7868  004CCE  0101               	movlb	1	; () banked
  7869  004CD0  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7870  004CD2  0EA0               	movlw	160
  7871  004CD4  0101               	movlb	1	; () banked
  7872  004CD6  0101               	movlb	1	; () banked
  7873  004CD8  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7874  004CDA  0E40               	movlw	64
  7875  004CDC  0101               	movlb	1	; () banked
  7876  004CDE  0101               	movlb	1	; () banked
  7877  004CE0  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7878  004CE2  C13F  F116         	movff	Read_LDR@analog_reading,?___ftmul
  7879  004CE6  C140  F117         	movff	Read_LDR@analog_reading+1,?___ftmul+1
  7880  004CEA  C141  F118         	movff	Read_LDR@analog_reading+2,?___ftmul+2
  7881  004CEE  ECE1  F01C         	call	___ftmul	;wreg free
  7882  004CF2  C118  F129         	movff	?___ftmul+2,?___ftdiv+2
  7883  004CF6  C117  F128         	movff	?___ftmul+1,?___ftdiv+1
  7884  004CFA  C116  F127         	movff	?___ftmul,?___ftdiv
  7885  004CFE  0EC0               	movlw	192
  7886  004D00  0101               	movlb	1	; () banked
  7887  004D02  0101               	movlb	1	; () banked
  7888  004D04  6F2A               	movwf	(?___ftdiv+3)& (0+255),b
  7889  004D06  0E7F               	movlw	127
  7890  004D08  0101               	movlb	1	; () banked
  7891  004D0A  0101               	movlb	1	; () banked
  7892  004D0C  6F2B               	movwf	(?___ftdiv+4)& (0+255),b
  7893  004D0E  0E44               	movlw	68
  7894  004D10  0101               	movlb	1	; () banked
  7895  004D12  0101               	movlb	1	; () banked
  7896  004D14  6F2C               	movwf	(?___ftdiv+5)& (0+255),b
  7897  004D16  ECA8  F01F         	call	___ftdiv	;wreg free
  7898  004D1A  C129  F141         	movff	?___ftdiv+2,Read_LDR@analog_reading+2
  7899  004D1E  C128  F140         	movff	?___ftdiv+1,Read_LDR@analog_reading+1
  7900  004D22  C127  F13F         	movff	?___ftdiv,Read_LDR@analog_reading
  7901                           
  7902                           ;main.c: 293: return analog_reading;
  7903  004D26  C13F  F138         	movff	Read_LDR@analog_reading,?_Read_LDR
  7904  004D2A  C140  F139         	movff	Read_LDR@analog_reading+1,?_Read_LDR+1
  7905  004D2E  C141  F13A         	movff	Read_LDR@analog_reading+2,?_Read_LDR+2
  7906  004D32  0012               	return	
  7907  004D34                     __end_of_Read_LDR:
  7908                           	opt stack 0
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           postinc0	equ	0xFEE
  7916                           wreg	equ	0xFE8
  7917                           indf2	equ	0xFDF
  7918                           postinc2	equ	0xFDE
  7919                           postdec2	equ	0xFDD
  7920                           fsr2h	equ	0xFDA
  7921                           fsr2l	equ	0xFD9
  7922                           status	equ	0xFD8
  7923                           
  7924 ;; *************** function ___awtoft *****************
  7925 ;; Defined at:
  7926 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  c               2    8[BANK1 ] int 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  sign            1   12[BANK1 ] unsigned char 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  3    8[BANK1 ] float 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7940 ;;      Params:         0       0       3       0       0       0       0       0       0
  7941 ;;      Locals:         0       0       1       0       0       0       0       0       0
  7942 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7943 ;;      Totals:         0       0       5       0       0       0       0       0       0
  7944 ;;Total ram usage:        5 bytes
  7945 ;; Hardware stack levels used:    1
  7946 ;; Hardware stack levels required when called:   10
  7947 ;; This function calls:
  7948 ;;		___ftpack
  7949 ;; This function is called by:
  7950 ;;		_Read_LDR
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           	psect	text21
  7955  005B1A                     __ptext21:
  7956                           	opt stack 0
  7957  005B1A                     ___awtoft:
  7958                           	opt stack 19
  7959                           
  7960                           ;incstack = 0
  7961                           ;incstack = 0
  7962  005B1A  0101               	movlb	1	; () banked
  7963  005B1C  6F0B               	movwf	??___awtoft& (0+255),b
  7964  005B1E  0E00               	movlw	0
  7965  005B20  0101               	movlb	1	; () banked
  7966  005B22  0101               	movlb	1	; () banked
  7967  005B24  6F0C               	movwf	___awtoft@sign& (0+255),b
  7968  005B26  0101               	movlb	1	; () banked
  7969  005B28  510B               	movf	??___awtoft& (0+255),w,b
  7970                           
  7971                           ; BSR set to: 1
  7972  005B2A  0101               	movlb	1	; () banked
  7973  005B2C  0101               	movlb	1	; () banked
  7974  005B2E  AF09               	btfss	(___awtoft@c+1)& (0+255),7,b
  7975  005B30  D00F               	goto	l10997
  7976                           
  7977                           ; BSR set to: 1
  7978  005B32  0101               	movlb	1	; () banked
  7979  005B34  0101               	movlb	1	; () banked
  7980  005B36  6D08               	negf	___awtoft@c& (0+255),b
  7981  005B38  0101               	movlb	1	; () banked
  7982  005B3A  1F09               	comf	(___awtoft@c+1)& (0+255),f,b
  7983  005B3C  B0D8               	btfsc	status,0,c
  7984  005B3E  2B09               	incf	(___awtoft@c+1)& (0+255),f,b
  7985                           
  7986                           ; BSR set to: 1
  7987  005B40  0101               	movlb	1	; () banked
  7988  005B42  6F0B               	movwf	??___awtoft& (0+255),b
  7989  005B44  0E01               	movlw	1
  7990  005B46  0101               	movlb	1	; () banked
  7991  005B48  0101               	movlb	1	; () banked
  7992  005B4A  6F0C               	movwf	___awtoft@sign& (0+255),b
  7993  005B4C  0101               	movlb	1	; () banked
  7994  005B4E  510B               	movf	??___awtoft& (0+255),w,b
  7995  005B50                     l10997:
  7996                           
  7997                           ; BSR set to: 1
  7998  005B50  0101               	movlb	1	; () banked
  7999  005B52  0101               	movlb	1	; () banked
  8000  005B54  C108  F100         	movff	___awtoft@c,?___ftpack
  8001  005B58  0101               	movlb	1	; () banked
  8002  005B5A  0101               	movlb	1	; () banked
  8003  005B5C  C109  F101         	movff	___awtoft@c+1,?___ftpack+1
  8004  005B60  0101               	movlb	1	; () banked
  8005  005B62  0101               	movlb	1	; () banked
  8006  005B64  6B02               	clrf	(?___ftpack+2)& (0+255),b
  8007  005B66  0101               	movlb	1	; () banked
  8008  005B68  6F0B               	movwf	??___awtoft& (0+255),b
  8009  005B6A  0E8E               	movlw	142
  8010  005B6C  0101               	movlb	1	; () banked
  8011  005B6E  0101               	movlb	1	; () banked
  8012  005B70  6F03               	movwf	(?___ftpack+3)& (0+255),b
  8013  005B72  0101               	movlb	1	; () banked
  8014  005B74  510B               	movf	??___awtoft& (0+255),w,b
  8015  005B76  C10C  F104         	movff	___awtoft@sign,?___ftpack+4
  8016  005B7A  EC30  F022         	call	___ftpack	;wreg free
  8017  005B7E  C102  F10A         	movff	?___ftpack+2,?___awtoft+2
  8018  005B82  C101  F109         	movff	?___ftpack+1,?___awtoft+1
  8019  005B86  C100  F108         	movff	?___ftpack,?___awtoft
  8020  005B8A  0012               	return	
  8021  005B8C                     __end_of___awtoft:
  8022                           	opt stack 0
  8023                           tblptru	equ	0xFF8
  8024                           tblptrh	equ	0xFF7
  8025                           tblptrl	equ	0xFF6
  8026                           tablat	equ	0xFF5
  8027                           prodh	equ	0xFF4
  8028                           prodl	equ	0xFF3
  8029                           postinc0	equ	0xFEE
  8030                           wreg	equ	0xFE8
  8031                           indf2	equ	0xFDF
  8032                           postinc2	equ	0xFDE
  8033                           postdec2	equ	0xFDD
  8034                           fsr2h	equ	0xFDA
  8035                           fsr2l	equ	0xFD9
  8036                           status	equ	0xFD8
  8037                           
  8038 ;; *************** function ___ftmul *****************
  8039 ;; Defined at:
  8040 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  f1              3   22[BANK1 ] float 
  8043 ;;  f2              3   25[BANK1 ] float 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  f3_as_produc    3   34[BANK1 ] unsigned um
  8046 ;;  sign            1   38[BANK1 ] unsigned char 
  8047 ;;  cntr            1   37[BANK1 ] unsigned char 
  8048 ;;  exp             1   33[BANK1 ] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  3   22[BANK1 ] float 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8058 ;;      Params:         0       0       6       0       0       0       0       0       0
  8059 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8060 ;;      Temps:          0       0       5       0       0       0       0       0       0
  8061 ;;      Totals:         0       0      17       0       0       0       0       0       0
  8062 ;;Total ram usage:       17 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:   10
  8065 ;; This function calls:
  8066 ;;		___ftpack
  8067 ;; This function is called by:
  8068 ;;		_Read_LDR
  8069 ;;		_fround
  8070 ;;		_scale
  8071 ;;		_sprintf
  8072 ;;		___asftmul
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text22
  8077  0039C2                     __ptext22:
  8078                           	opt stack 0
  8079  0039C2                     ___ftmul:
  8080                           	opt stack 19
  8081                           
  8082                           ;incstack = 0
  8083                           ;incstack = 0
  8084  0039C2  0E0F               	movlw	15
  8085  0039C4  0101               	movlb	1	; () banked
  8086  0039C6  6F1C               	movwf	??___ftmul& (0+255),b
  8087  0039C8  0101               	movlb	1	; () banked
  8088  0039CA  C116  F11D         	movff	___ftmul@f1,??___ftmul+1
  8089  0039CE  0101               	movlb	1	; () banked
  8090  0039D0  C117  F11E         	movff	___ftmul@f1+1,??___ftmul+2
  8091  0039D4  0101               	movlb	1	; () banked
  8092  0039D6  C118  F11F         	movff	___ftmul@f1+2,??___ftmul+3
  8093  0039DA  0101               	movlb	1	; () banked
  8094  0039DC  291C               	incf	??___ftmul& (0+255),w,b
  8095  0039DE  0101               	movlb	1	; () banked
  8096  0039E0  6F20               	movwf	(??___ftmul+4)& (0+255),b
  8097  0039E2  D005               	goto	u10060
  8098  0039E4                     u10065:
  8099  0039E4  0101               	movlb	1	; () banked
  8100  0039E6  90D8               	bcf	status,0,c
  8101  0039E8  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  8102  0039EA  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  8103  0039EC  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  8104  0039EE                     u10060:
  8105  0039EE  0101               	movlb	1	; () banked
  8106  0039F0  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  8107  0039F2  D7F8               	goto	u10065
  8108  0039F4  0101               	movlb	1	; () banked
  8109  0039F6  511D               	movf	(??___ftmul+1)& (0+255),w,b
  8110  0039F8  0101               	movlb	1	; () banked
  8111  0039FA  0101               	movlb	1	; () banked
  8112  0039FC  6F21               	movwf	___ftmul@exp& (0+255),b
  8113  0039FE  0101               	movlb	1	; () banked
  8114  003A00  6721               	tstfsz	___ftmul@exp& (0+255),b
  8115  003A02  D001               	goto	l10857
  8116  003A04  D021               	goto	u10090
  8117  003A06                     l10857:
  8118                           
  8119                           ; BSR set to: 1
  8120  003A06  0E0F               	movlw	15
  8121  003A08  0101               	movlb	1	; () banked
  8122  003A0A  6F1C               	movwf	??___ftmul& (0+255),b
  8123  003A0C  0101               	movlb	1	; () banked
  8124  003A0E  C119  F11D         	movff	___ftmul@f2,??___ftmul+1
  8125  003A12  0101               	movlb	1	; () banked
  8126  003A14  C11A  F11E         	movff	___ftmul@f2+1,??___ftmul+2
  8127  003A18  0101               	movlb	1	; () banked
  8128  003A1A  C11B  F11F         	movff	___ftmul@f2+2,??___ftmul+3
  8129  003A1E  0101               	movlb	1	; () banked
  8130  003A20  291C               	incf	??___ftmul& (0+255),w,b
  8131  003A22  0101               	movlb	1	; () banked
  8132  003A24  6F20               	movwf	(??___ftmul+4)& (0+255),b
  8133  003A26  D005               	goto	u10080
  8134  003A28                     u10085:
  8135  003A28  0101               	movlb	1	; () banked
  8136  003A2A  90D8               	bcf	status,0,c
  8137  003A2C  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  8138  003A2E  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  8139  003A30  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  8140  003A32                     u10080:
  8141  003A32  0101               	movlb	1	; () banked
  8142  003A34  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  8143  003A36  D7F8               	goto	u10085
  8144  003A38  0101               	movlb	1	; () banked
  8145  003A3A  511D               	movf	(??___ftmul+1)& (0+255),w,b
  8146  003A3C  0101               	movlb	1	; () banked
  8147  003A3E  0101               	movlb	1	; () banked
  8148  003A40  6F26               	movwf	___ftmul@sign& (0+255),b
  8149  003A42  0101               	movlb	1	; () banked
  8150  003A44  6726               	tstfsz	___ftmul@sign& (0+255),b
  8151  003A46  D00D               	goto	l10863
  8152  003A48                     u10090:
  8153                           
  8154                           ; BSR set to: 1
  8155  003A48  0E00               	movlw	0
  8156  003A4A  0101               	movlb	1	; () banked
  8157  003A4C  0101               	movlb	1	; () banked
  8158  003A4E  6F16               	movwf	?___ftmul& (0+255),b
  8159  003A50  0E00               	movlw	0
  8160  003A52  0101               	movlb	1	; () banked
  8161  003A54  0101               	movlb	1	; () banked
  8162  003A56  6F17               	movwf	(?___ftmul+1)& (0+255),b
  8163  003A58  0E00               	movlw	0
  8164  003A5A  0101               	movlb	1	; () banked
  8165  003A5C  0101               	movlb	1	; () banked
  8166  003A5E  6F18               	movwf	(?___ftmul+2)& (0+255),b
  8167  003A60  D0A6               	goto	l774
  8168  003A62                     l10863:
  8169                           
  8170                           ; BSR set to: 1
  8171  003A62  0101               	movlb	1	; () banked
  8172  003A64  0101               	movlb	1	; () banked
  8173  003A66  5126               	movf	___ftmul@sign& (0+255),w,b
  8174  003A68  0F7B               	addlw	123
  8175  003A6A  0101               	movlb	1	; () banked
  8176  003A6C  0101               	movlb	1	; () banked
  8177  003A6E  2721               	addwf	___ftmul@exp& (0+255),f,b
  8178                           
  8179                           ; BSR set to: 1
  8180  003A70  C118  F126         	movff	___ftmul@f1+2,___ftmul@sign
  8181  003A74  0101               	movlb	1	; () banked
  8182  003A76  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8183  003A78  0101               	movlb	1	; () banked
  8184  003A7A  0101               	movlb	1	; () banked
  8185  003A7C  1B26               	xorwf	___ftmul@sign& (0+255),f,b
  8186  003A7E  0E80               	movlw	128
  8187  003A80  0101               	movlb	1	; () banked
  8188  003A82  0101               	movlb	1	; () banked
  8189  003A84  1726               	andwf	___ftmul@sign& (0+255),f,b
  8190                           
  8191                           ; BSR set to: 1
  8192  003A86  0101               	movlb	1	; () banked
  8193  003A88  0101               	movlb	1	; () banked
  8194  003A8A  8F17               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8195                           
  8196                           ; BSR set to: 1
  8197  003A8C  0101               	movlb	1	; () banked
  8198  003A8E  0101               	movlb	1	; () banked
  8199  003A90  8F1A               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8200                           
  8201                           ; BSR set to: 1
  8202  003A92  0EFF               	movlw	255
  8203  003A94  0101               	movlb	1	; () banked
  8204  003A96  0101               	movlb	1	; () banked
  8205  003A98  1719               	andwf	___ftmul@f2& (0+255),f,b
  8206  003A9A  0EFF               	movlw	255
  8207  003A9C  0101               	movlb	1	; () banked
  8208  003A9E  0101               	movlb	1	; () banked
  8209  003AA0  171A               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8210  003AA2  0E00               	movlw	0
  8211  003AA4  0101               	movlb	1	; () banked
  8212  003AA6  0101               	movlb	1	; () banked
  8213  003AA8  171B               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8214                           
  8215                           ; BSR set to: 1
  8216  003AAA  0E00               	movlw	0
  8217  003AAC  0101               	movlb	1	; () banked
  8218  003AAE  0101               	movlb	1	; () banked
  8219  003AB0  6F22               	movwf	___ftmul@f3_as_product& (0+255),b
  8220  003AB2  0E00               	movlw	0
  8221  003AB4  0101               	movlb	1	; () banked
  8222  003AB6  0101               	movlb	1	; () banked
  8223  003AB8  6F23               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8224  003ABA  0E00               	movlw	0
  8225  003ABC  0101               	movlb	1	; () banked
  8226  003ABE  0101               	movlb	1	; () banked
  8227  003AC0  6F24               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8228                           
  8229                           ; BSR set to: 1
  8230  003AC2  0101               	movlb	1	; () banked
  8231  003AC4  6F1C               	movwf	??___ftmul& (0+255),b
  8232  003AC6  0E07               	movlw	7
  8233  003AC8  0101               	movlb	1	; () banked
  8234  003ACA  0101               	movlb	1	; () banked
  8235  003ACC  6F25               	movwf	___ftmul@cntr& (0+255),b
  8236  003ACE  0101               	movlb	1	; () banked
  8237  003AD0  511C               	movf	??___ftmul& (0+255),w,b
  8238  003AD2                     l10877:
  8239                           
  8240                           ; BSR set to: 1
  8241  003AD2  0101               	movlb	1	; () banked
  8242  003AD4  0101               	movlb	1	; () banked
  8243  003AD6  A116               	btfss	___ftmul@f1& (0+255),0,b
  8244  003AD8  D012               	goto	l10881
  8245                           
  8246                           ; BSR set to: 1
  8247  003ADA  0101               	movlb	1	; () banked
  8248  003ADC  0101               	movlb	1	; () banked
  8249  003ADE  5119               	movf	___ftmul@f2& (0+255),w,b
  8250  003AE0  0101               	movlb	1	; () banked
  8251  003AE2  0101               	movlb	1	; () banked
  8252  003AE4  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8253  003AE6  0101               	movlb	1	; () banked
  8254  003AE8  0101               	movlb	1	; () banked
  8255  003AEA  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8256  003AEC  0101               	movlb	1	; () banked
  8257  003AEE  0101               	movlb	1	; () banked
  8258  003AF0  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8259  003AF2  0101               	movlb	1	; () banked
  8260  003AF4  0101               	movlb	1	; () banked
  8261  003AF6  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8262  003AF8  0101               	movlb	1	; () banked
  8263  003AFA  0101               	movlb	1	; () banked
  8264  003AFC  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8265  003AFE                     l10881:
  8266                           
  8267                           ; BSR set to: 1
  8268  003AFE  0101               	movlb	1	; () banked
  8269  003B00  90D8               	bcf	status,0,c
  8270  003B02  0101               	movlb	1	; () banked
  8271  003B04  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8272  003B06  0101               	movlb	1	; () banked
  8273  003B08  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8274  003B0A  0101               	movlb	1	; () banked
  8275  003B0C  3316               	rrcf	___ftmul@f1& (0+255),f,b
  8276  003B0E  0101               	movlb	1	; () banked
  8277  003B10  90D8               	bcf	status,0,c
  8278  003B12  0101               	movlb	1	; () banked
  8279  003B14  3719               	rlcf	___ftmul@f2& (0+255),f,b
  8280  003B16  0101               	movlb	1	; () banked
  8281  003B18  371A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8282  003B1A  0101               	movlb	1	; () banked
  8283  003B1C  371B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8284                           
  8285                           ; BSR set to: 1
  8286  003B1E  0101               	movlb	1	; () banked
  8287  003B20  0101               	movlb	1	; () banked
  8288  003B22  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  8289  003B24  D7D6               	goto	l10877
  8290                           
  8291                           ; BSR set to: 1
  8292                           
  8293                           ; BSR set to: 1
  8294  003B26  0101               	movlb	1	; () banked
  8295  003B28  6F1C               	movwf	??___ftmul& (0+255),b
  8296  003B2A  0E09               	movlw	9
  8297  003B2C  0101               	movlb	1	; () banked
  8298  003B2E  0101               	movlb	1	; () banked
  8299  003B30  6F25               	movwf	___ftmul@cntr& (0+255),b
  8300  003B32  0101               	movlb	1	; () banked
  8301  003B34  511C               	movf	??___ftmul& (0+255),w,b
  8302  003B36                     l10887:
  8303                           
  8304                           ; BSR set to: 1
  8305  003B36  0101               	movlb	1	; () banked
  8306  003B38  0101               	movlb	1	; () banked
  8307  003B3A  A116               	btfss	___ftmul@f1& (0+255),0,b
  8308  003B3C  D012               	goto	l10891
  8309                           
  8310                           ; BSR set to: 1
  8311  003B3E  0101               	movlb	1	; () banked
  8312  003B40  0101               	movlb	1	; () banked
  8313  003B42  5119               	movf	___ftmul@f2& (0+255),w,b
  8314  003B44  0101               	movlb	1	; () banked
  8315  003B46  0101               	movlb	1	; () banked
  8316  003B48  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8317  003B4A  0101               	movlb	1	; () banked
  8318  003B4C  0101               	movlb	1	; () banked
  8319  003B4E  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8320  003B50  0101               	movlb	1	; () banked
  8321  003B52  0101               	movlb	1	; () banked
  8322  003B54  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8323  003B56  0101               	movlb	1	; () banked
  8324  003B58  0101               	movlb	1	; () banked
  8325  003B5A  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8326  003B5C  0101               	movlb	1	; () banked
  8327  003B5E  0101               	movlb	1	; () banked
  8328  003B60  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8329  003B62                     l10891:
  8330                           
  8331                           ; BSR set to: 1
  8332  003B62  0101               	movlb	1	; () banked
  8333  003B64  90D8               	bcf	status,0,c
  8334  003B66  0101               	movlb	1	; () banked
  8335  003B68  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8336  003B6A  0101               	movlb	1	; () banked
  8337  003B6C  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8338  003B6E  0101               	movlb	1	; () banked
  8339  003B70  3316               	rrcf	___ftmul@f1& (0+255),f,b
  8340  003B72  0101               	movlb	1	; () banked
  8341  003B74  90D8               	bcf	status,0,c
  8342  003B76  0101               	movlb	1	; () banked
  8343  003B78  3324               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8344  003B7A  0101               	movlb	1	; () banked
  8345  003B7C  3323               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8346  003B7E  0101               	movlb	1	; () banked
  8347  003B80  3322               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8348                           
  8349                           ; BSR set to: 1
  8350  003B82  0101               	movlb	1	; () banked
  8351  003B84  0101               	movlb	1	; () banked
  8352  003B86  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  8353  003B88  D7D6               	goto	l10887
  8354                           
  8355                           ; BSR set to: 1
  8356                           
  8357                           ; BSR set to: 1
  8358  003B8A  C122  F100         	movff	___ftmul@f3_as_product,?___ftpack
  8359  003B8E  C123  F101         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  8360  003B92  C124  F102         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  8361  003B96  C121  F103         	movff	___ftmul@exp,?___ftpack+3
  8362  003B9A  C126  F104         	movff	___ftmul@sign,?___ftpack+4
  8363  003B9E  EC30  F022         	call	___ftpack	;wreg free
  8364  003BA2  C102  F118         	movff	?___ftpack+2,?___ftmul+2
  8365  003BA6  C101  F117         	movff	?___ftpack+1,?___ftmul+1
  8366  003BAA  C100  F116         	movff	?___ftpack,?___ftmul
  8367  003BAE                     l774:
  8368  003BAE  0012               	return	
  8369  003BB0                     __end_of___ftmul:
  8370                           	opt stack 0
  8371                           tblptru	equ	0xFF8
  8372                           tblptrh	equ	0xFF7
  8373                           tblptrl	equ	0xFF6
  8374                           tablat	equ	0xFF5
  8375                           prodh	equ	0xFF4
  8376                           prodl	equ	0xFF3
  8377                           postinc0	equ	0xFEE
  8378                           wreg	equ	0xFE8
  8379                           indf2	equ	0xFDF
  8380                           postinc2	equ	0xFDE
  8381                           postdec2	equ	0xFDD
  8382                           fsr2h	equ	0xFDA
  8383                           fsr2l	equ	0xFD9
  8384                           status	equ	0xFD8
  8385                           
  8386 ;; *************** function _Obtener_Distancia *****************
  8387 ;; Defined at:
  8388 ;;		line 247 in file "main.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;		None
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  Duracion        2   14[BANK1 ] unsigned int 
  8393 ;;  Distancia       2   12[BANK1 ] unsigned int 
  8394 ;;  Timer_1         2   10[BANK1 ] unsigned int 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  2    8[BANK1 ] unsigned int 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8404 ;;      Params:         0       0       2       0       0       0       0       0       0
  8405 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8407 ;;      Totals:         0       0       8       0       0       0       0       0       0
  8408 ;;Total ram usage:        8 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:   10
  8411 ;; This function calls:
  8412 ;;		___lwdiv
  8413 ;; This function is called by:
  8414 ;;		_main
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text23
  8419  005440                     __ptext23:
  8420                           	opt stack 0
  8421  005440                     _Obtener_Distancia:
  8422                           	opt stack 20
  8423                           
  8424                           ;main.c: 248: uint16_t Duracion;
  8425                           ;main.c: 249: uint16_t Distancia;
  8426                           ;main.c: 250: uint16_t Timer_1;
  8427                           ;main.c: 252: LATAbits.LATA1=1;
  8428                           
  8429                           ;incstack = 0
  8430                           ;incstack = 0
  8431  005440  8289               	bsf	3977,1,c	;volatile
  8432                           
  8433                           ;main.c: 253: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8434  005442  0E06               	movlw	6
  8435  005444                     u11107:
  8436  005444  2EE8               	decfsz	wreg,f,c
  8437  005446  D7FE               	goto	u11107
  8438  005448  D000               	nop2		;nop
  8439                           
  8440                           ;main.c: 254: LATAbits.LATA1=0;
  8441  00544A  9289               	bcf	3977,1,c	;volatile
  8442  00544C                     l207:
  8443  00544C  A480               	btfss	3968,2,c	;volatile
  8444  00544E  D7FE               	goto	l207
  8445                           
  8446                           ;main.c: 256: T1CONbits.TMR1ON=1;
  8447  005450  80CD               	bsf	4045,0,c	;volatile
  8448  005452                     l210:
  8449  005452  B480               	btfsc	3968,2,c	;volatile
  8450  005454  D7FE               	goto	l210
  8451                           
  8452                           ;main.c: 258: T1CONbits.TMR1ON=0;
  8453  005456  90CD               	bcf	4045,0,c	;volatile
  8454                           
  8455                           ;main.c: 259: Timer_1=TMR1;
  8456  005458  CFCE F10A          	movff	4046,Obtener_Distancia@Timer_1	;volatile
  8457  00545C  CFCF F10B          	movff	4047,Obtener_Distancia@Timer_1+1	;volatile
  8458                           
  8459                           ;main.c: 260: Duracion=Timer_1/2;
  8460  005460  90D8               	bcf	status,0,c
  8461  005462  0101               	movlb	1	; () banked
  8462  005464  0101               	movlb	1	; () banked
  8463  005466  310B               	rrcf	(Obtener_Distancia@Timer_1+1)& (0+255),w,b
  8464  005468  0101               	movlb	1	; () banked
  8465  00546A  0101               	movlb	1	; () banked
  8466  00546C  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  8467  00546E  0101               	movlb	1	; () banked
  8468  005470  0101               	movlb	1	; () banked
  8469  005472  310A               	rrcf	Obtener_Distancia@Timer_1& (0+255),w,b
  8470  005474  0101               	movlb	1	; () banked
  8471  005476  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  8472                           
  8473                           ;main.c: 261: if(Duracion<=23200)
  8474  005478  0EA1               	movlw	161
  8475  00547A  0101               	movlb	1	; () banked
  8476  00547C  0101               	movlb	1	; () banked
  8477  00547E  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  8478  005480  0E5A               	movlw	90
  8479  005482  0101               	movlb	1	; () banked
  8480  005484  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  8481  005486  B0D8               	btfsc	status,0,c
  8482  005488  D014               	goto	l10131
  8483                           
  8484                           ; BSR set to: 1
  8485                           ;main.c: 262: {
  8486                           ;main.c: 263: Distancia=Duracion/58;
  8487  00548A  C10E  F100         	movff	Obtener_Distancia@Duracion,?___lwdiv
  8488  00548E  C10F  F101         	movff	Obtener_Distancia@Duracion+1,?___lwdiv+1
  8489  005492  0E00               	movlw	0
  8490  005494  0101               	movlb	1	; () banked
  8491  005496  0101               	movlb	1	; () banked
  8492  005498  6F03               	movwf	(?___lwdiv+3)& (0+255),b
  8493  00549A  0E3A               	movlw	58
  8494  00549C  0101               	movlb	1	; () banked
  8495  00549E  6F02               	movwf	(?___lwdiv+2)& (0+255),b
  8496  0054A0  ECCD  F02A         	call	___lwdiv	;wreg free
  8497  0054A4  0101               	movlb	1	; () banked
  8498  0054A6  C100  F10C         	movff	?___lwdiv,Obtener_Distancia@Distancia
  8499  0054AA  0101               	movlb	1	; () banked
  8500  0054AC  C101  F10D         	movff	?___lwdiv+1,Obtener_Distancia@Distancia+1
  8501                           
  8502                           ;main.c: 264: }
  8503  0054B0  D00E               	goto	l214
  8504  0054B2                     l10131:
  8505                           
  8506                           ; BSR set to: 1
  8507                           ;main.c: 265: else if(Duracion<116)
  8508  0054B2  0E74               	movlw	116
  8509  0054B4  0101               	movlb	1	; () banked
  8510  0054B6  0101               	movlb	1	; () banked
  8511  0054B8  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  8512  0054BA  0E00               	movlw	0
  8513  0054BC  0101               	movlb	1	; () banked
  8514  0054BE  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  8515                           
  8516                           ; BSR set to: 1
  8517                           ;main.c: 269: else
  8518                           ;main.c: 270: {
  8519                           ;main.c: 271: Distancia=0;
  8520                           
  8521                           ; BSR set to: 1
  8522                           
  8523                           ;main.c: 268: }
  8524                           
  8525                           ; BSR set to: 1
  8526                           ;main.c: 266: {
  8527                           ;main.c: 267: Distancia=0;
  8528  0054C0  0E00               	movlw	0
  8529  0054C2  0101               	movlb	1	; () banked
  8530  0054C4  0101               	movlb	1	; () banked
  8531  0054C6  6F0D               	movwf	(Obtener_Distancia@Distancia+1)& (0+255),b
  8532  0054C8  0E00               	movlw	0
  8533  0054CA  0101               	movlb	1	; () banked
  8534  0054CC  6F0C               	movwf	Obtener_Distancia@Distancia& (0+255),b
  8535  0054CE                     l214:
  8536                           
  8537                           ; BSR set to: 1
  8538                           ;main.c: 272: }
  8539                           ;main.c: 273: Duracion=0;
  8540  0054CE  0E00               	movlw	0
  8541  0054D0  0101               	movlb	1	; () banked
  8542  0054D2  0101               	movlb	1	; () banked
  8543  0054D4  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  8544  0054D6  0E00               	movlw	0
  8545  0054D8  0101               	movlb	1	; () banked
  8546  0054DA  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  8547                           
  8548                           ;main.c: 274: TMR1=0;
  8549  0054DC  0E00               	movlw	0
  8550  0054DE  6ECF               	movwf	4047,c	;volatile
  8551  0054E0  0E00               	movlw	0
  8552  0054E2  6ECE               	movwf	4046,c	;volatile
  8553                           
  8554                           ; BSR set to: 1
  8555                           ;main.c: 276: return Distancia;
  8556  0054E4  C10C  F108         	movff	Obtener_Distancia@Distancia,?_Obtener_Distancia
  8557  0054E8  C10D  F109         	movff	Obtener_Distancia@Distancia+1,?_Obtener_Distancia+1
  8558                           
  8559                           ; BSR set to: 1
  8560                           
  8561                           ; BSR set to: 1
  8562  0054EC  0012               	return	
  8563  0054EE                     __end_of_Obtener_Distancia:
  8564                           	opt stack 0
  8565                           tblptru	equ	0xFF8
  8566                           tblptrh	equ	0xFF7
  8567                           tblptrl	equ	0xFF6
  8568                           tablat	equ	0xFF5
  8569                           prodh	equ	0xFF4
  8570                           prodl	equ	0xFF3
  8571                           postinc0	equ	0xFEE
  8572                           wreg	equ	0xFE8
  8573                           indf2	equ	0xFDF
  8574                           postinc2	equ	0xFDE
  8575                           postdec2	equ	0xFDD
  8576                           fsr2h	equ	0xFDA
  8577                           fsr2l	equ	0xFD9
  8578                           status	equ	0xFD8
  8579                           
  8580 ;; *************** function ___lwdiv *****************
  8581 ;; Defined at:
  8582 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  dividend        2    0[BANK1 ] unsigned int 
  8585 ;;  divisor         2    2[BANK1 ] unsigned int 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;  quotient        2    6[BANK1 ] unsigned int 
  8588 ;;  counter         1    5[BANK1 ] unsigned char 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  2    0[BANK1 ] unsigned int 
  8591 ;; Registers used:
  8592 ;;		wreg, status,2, status,0
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8598 ;;      Params:         0       0       4       0       0       0       0       0       0
  8599 ;;      Locals:         0       0       3       0       0       0       0       0       0
  8600 ;;      Temps:          0       0       1       0       0       0       0       0       0
  8601 ;;      Totals:         0       0       8       0       0       0       0       0       0
  8602 ;;Total ram usage:        8 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; Hardware stack levels required when called:    9
  8605 ;; This function calls:
  8606 ;;		Nothing
  8607 ;; This function is called by:
  8608 ;;		_Obtener_Distancia
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text24
  8613  00559A                     __ptext24:
  8614                           	opt stack 0
  8615  00559A                     ___lwdiv:
  8616                           	opt stack 20
  8617                           
  8618                           ; BSR set to: 1
  8619                           ;incstack = 0
  8620                           ;incstack = 0
  8621  00559A  0E00               	movlw	0
  8622  00559C  0101               	movlb	1	; () banked
  8623  00559E  0101               	movlb	1	; () banked
  8624  0055A0  6F07               	movwf	(___lwdiv@quotient+1)& (0+255),b
  8625  0055A2  0E00               	movlw	0
  8626  0055A4  0101               	movlb	1	; () banked
  8627  0055A6  6F06               	movwf	___lwdiv@quotient& (0+255),b
  8628                           
  8629                           ; BSR set to: 1
  8630  0055A8  0101               	movlb	1	; () banked
  8631  0055AA  0101               	movlb	1	; () banked
  8632  0055AC  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8633  0055AE  1102               	iorwf	___lwdiv@divisor& (0+255),w,b
  8634  0055B0  B4D8               	btfsc	status,2,c
  8635  0055B2  D043               	goto	l907
  8636                           
  8637                           ; BSR set to: 1
  8638  0055B4  0101               	movlb	1	; () banked
  8639  0055B6  6F04               	movwf	??___lwdiv& (0+255),b
  8640  0055B8  0E01               	movlw	1
  8641  0055BA  0101               	movlb	1	; () banked
  8642  0055BC  0101               	movlb	1	; () banked
  8643  0055BE  6F05               	movwf	___lwdiv@counter& (0+255),b
  8644  0055C0  0101               	movlb	1	; () banked
  8645  0055C2  5104               	movf	??___lwdiv& (0+255),w,b
  8646  0055C4  D009               	goto	l11063
  8647  0055C6                     l11061:
  8648                           
  8649                           ; BSR set to: 1
  8650  0055C6  0101               	movlb	1	; () banked
  8651  0055C8  0101               	movlb	1	; () banked
  8652  0055CA  0101               	movlb	1	; () banked
  8653  0055CC  90D8               	bcf	status,0,c
  8654  0055CE  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
  8655  0055D0  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8656  0055D2  0101               	movlb	1	; () banked
  8657  0055D4  0101               	movlb	1	; () banked
  8658  0055D6  2B05               	incf	___lwdiv@counter& (0+255),f,b
  8659  0055D8                     l11063:
  8660                           
  8661                           ; BSR set to: 1
  8662  0055D8  0101               	movlb	1	; () banked
  8663  0055DA  0101               	movlb	1	; () banked
  8664  0055DC  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  8665  0055DE  D7F3               	goto	l11061
  8666  0055E0                     l11065:
  8667                           
  8668                           ; BSR set to: 1
  8669  0055E0  0101               	movlb	1	; () banked
  8670  0055E2  0101               	movlb	1	; () banked
  8671  0055E4  0101               	movlb	1	; () banked
  8672  0055E6  90D8               	bcf	status,0,c
  8673  0055E8  3706               	rlcf	___lwdiv@quotient& (0+255),f,b
  8674  0055EA  3707               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8675                           
  8676                           ; BSR set to: 1
  8677  0055EC  0101               	movlb	1	; () banked
  8678  0055EE  0101               	movlb	1	; () banked
  8679  0055F0  5102               	movf	___lwdiv@divisor& (0+255),w,b
  8680  0055F2  0101               	movlb	1	; () banked
  8681  0055F4  0101               	movlb	1	; () banked
  8682  0055F6  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
  8683  0055F8  0101               	movlb	1	; () banked
  8684  0055FA  0101               	movlb	1	; () banked
  8685  0055FC  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8686  0055FE  0101               	movlb	1	; () banked
  8687  005600  0101               	movlb	1	; () banked
  8688  005602  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8689  005604  A0D8               	btfss	status,0,c
  8690  005606  D00F               	goto	l11073
  8691                           
  8692                           ; BSR set to: 1
  8693  005608  0101               	movlb	1	; () banked
  8694  00560A  0101               	movlb	1	; () banked
  8695  00560C  5102               	movf	___lwdiv@divisor& (0+255),w,b
  8696  00560E  0101               	movlb	1	; () banked
  8697  005610  0101               	movlb	1	; () banked
  8698  005612  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
  8699  005614  0101               	movlb	1	; () banked
  8700  005616  0101               	movlb	1	; () banked
  8701  005618  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8702  00561A  0101               	movlb	1	; () banked
  8703  00561C  0101               	movlb	1	; () banked
  8704  00561E  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8705                           
  8706                           ; BSR set to: 1
  8707  005620  0101               	movlb	1	; () banked
  8708  005622  0101               	movlb	1	; () banked
  8709  005624  8106               	bsf	___lwdiv@quotient& (0+255),0,b
  8710  005626                     l11073:
  8711                           
  8712                           ; BSR set to: 1
  8713  005626  0101               	movlb	1	; () banked
  8714  005628  0101               	movlb	1	; () banked
  8715  00562A  0101               	movlb	1	; () banked
  8716  00562C  90D8               	bcf	status,0,c
  8717  00562E  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8718  005630  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
  8719                           
  8720                           ; BSR set to: 1
  8721  005632  0101               	movlb	1	; () banked
  8722  005634  0101               	movlb	1	; () banked
  8723  005636  2F05               	decfsz	___lwdiv@counter& (0+255),f,b
  8724  005638  D7D3               	goto	l11065
  8725  00563A                     l907:
  8726                           
  8727                           ; BSR set to: 1
  8728  00563A  C106  F100         	movff	___lwdiv@quotient,?___lwdiv
  8729  00563E  C107  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8730                           
  8731                           ; BSR set to: 1
  8732  005642  0012               	return	
  8733  005644                     __end_of___lwdiv:
  8734                           	opt stack 0
  8735                           tblptru	equ	0xFF8
  8736                           tblptrh	equ	0xFF7
  8737                           tblptrl	equ	0xFF6
  8738                           tablat	equ	0xFF5
  8739                           prodh	equ	0xFF4
  8740                           prodl	equ	0xFF3
  8741                           postinc0	equ	0xFEE
  8742                           wreg	equ	0xFE8
  8743                           indf2	equ	0xFDF
  8744                           postinc2	equ	0xFDE
  8745                           postdec2	equ	0xFDD
  8746                           fsr2h	equ	0xFDA
  8747                           fsr2l	equ	0xFD9
  8748                           status	equ	0xFD8
  8749                           
  8750 ;; *************** function _inicioInterrupcoes *****************
  8751 ;; Defined at:
  8752 ;;		line 175 in file "main.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;		None
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;		None
  8757 ;; Return value:  Size  Location     Type
  8758 ;;		None               void
  8759 ;; Registers used:
  8760 ;;		None
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8766 ;;      Params:         0       0       0       0       0       0       0       0       0
  8767 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8769 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8770 ;;Total ram usage:        0 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; Hardware stack levels required when called:    9
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_main
  8777 ;; This function uses a non-reentrant model
  8778 ;;
  8779                           
  8780                           	psect	text25
  8781  0062E8                     __ptext25:
  8782                           	opt stack 0
  8783  0062E8                     _inicioInterrupcoes:
  8784                           	opt stack 21
  8785                           
  8786                           ;main.c: 176: IPEN = 1;
  8787                           
  8788                           ; BSR set to: 1
  8789                           ;incstack = 0
  8790                           ;incstack = 0
  8791  0062E8  8ED0               	bsf	4048,7,c	;volatile
  8792                           
  8793                           ;main.c: 177: ADIE = 1;
  8794  0062EA  8C9D               	bsf	3997,6,c	;volatile
  8795                           
  8796                           ;main.c: 178: RCIE = 1;
  8797  0062EC  8A9D               	bsf	3997,5,c	;volatile
  8798                           
  8799                           ;main.c: 179: TMR0IE = 1;
  8800  0062EE  8AF2               	bsf	intcon,5,c	;volatile
  8801                           
  8802                           ;main.c: 180: GIEH = 1;
  8803  0062F0  8EF2               	bsf	intcon,7,c	;volatile
  8804                           
  8805                           ;main.c: 181: GIEL = 1;
  8806  0062F2  8CF2               	bsf	intcon,6,c	;volatile
  8807                           
  8808                           ;main.c: 182: ADIP = 0;
  8809  0062F4  9C9F               	bcf	3999,6,c	;volatile
  8810                           
  8811                           ;main.c: 183: TMR0IP = 0;
  8812  0062F6  94F1               	bcf	intcon2,2,c	;volatile
  8813                           
  8814                           ;main.c: 184: RCIP = 1;
  8815  0062F8  8A9F               	bsf	3999,5,c	;volatile
  8816  0062FA  0012               	return	
  8817  0062FC                     __end_of_inicioInterrupcoes:
  8818                           	opt stack 0
  8819                           tblptru	equ	0xFF8
  8820                           tblptrh	equ	0xFF7
  8821                           tblptrl	equ	0xFF6
  8822                           tablat	equ	0xFF5
  8823                           prodh	equ	0xFF4
  8824                           prodl	equ	0xFF3
  8825                           intcon	equ	0xFF2
  8826                           intcon2	equ	0xFF1
  8827                           postinc0	equ	0xFEE
  8828                           wreg	equ	0xFE8
  8829                           indf2	equ	0xFDF
  8830                           postinc2	equ	0xFDE
  8831                           postdec2	equ	0xFDD
  8832                           fsr2h	equ	0xFDA
  8833                           fsr2l	equ	0xFD9
  8834                           status	equ	0xFD8
  8835                           
  8836 ;; *************** function _USART_Init *****************
  8837 ;; Defined at:
  8838 ;;		line 147 in file "main.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;		None
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;  baud_rate       4   70[BANK1 ] long 
  8843 ;;  temp            3   74[BANK1 ] float 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;		None               void
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0
  8854 ;;      Locals:         0       0       7       0       0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8856 ;;      Totals:         0       0       7       0       0       0       0       0       0
  8857 ;;Total ram usage:        7 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:   11
  8860 ;; This function calls:
  8861 ;;		___altoft
  8862 ;;		___ftadd
  8863 ;;		___ftdiv
  8864 ;;		___fttol
  8865 ;; This function is called by:
  8866 ;;		_main
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text26
  8871  0054EE                     __ptext26:
  8872                           	opt stack 0
  8873  0054EE                     _USART_Init:
  8874                           	opt stack 19
  8875                           
  8876                           ;main.c: 148: long int baud_rate = 115200;
  8877                           
  8878                           ;incstack = 0
  8879                           ;incstack = 0
  8880  0054EE  0E00               	movlw	0
  8881  0054F0  0101               	movlb	1	; () banked
  8882  0054F2  0101               	movlb	1	; () banked
  8883  0054F4  6F46               	movwf	USART_Init@baud_rate& (0+255),b
  8884  0054F6  0EC2               	movlw	194
  8885  0054F8  0101               	movlb	1	; () banked
  8886  0054FA  6F47               	movwf	(USART_Init@baud_rate+1)& (0+255),b
  8887  0054FC  0E01               	movlw	1
  8888  0054FE  0101               	movlb	1	; () banked
  8889  005500  6F48               	movwf	(USART_Init@baud_rate+2)& (0+255),b
  8890  005502  0E00               	movlw	0
  8891  005504  0101               	movlb	1	; () banked
  8892  005506  6F49               	movwf	(USART_Init@baud_rate+3)& (0+255),b
  8893                           
  8894                           ; BSR set to: 1
  8895                           ;main.c: 149: float temp;
  8896                           ;main.c: 150: TRISC6=0;
  8897  005508  9C94               	bcf	3988,6,c	;volatile
  8898                           
  8899                           ; BSR set to: 1
  8900                           ;main.c: 151: TRISC7=1;
  8901  00550A  8E94               	bsf	3988,7,c	;volatile
  8902                           
  8903                           ; BSR set to: 1
  8904                           ;main.c: 154: temp= (( (float) (200000/64) / (float) baud_rate ) - 1); ;
  8905  00550C  C146  F108         	movff	USART_Init@baud_rate,?___altoft
  8906  005510  C147  F109         	movff	USART_Init@baud_rate+1,?___altoft+1
  8907  005514  C148  F10A         	movff	USART_Init@baud_rate+2,?___altoft+2
  8908  005518  C149  F10B         	movff	USART_Init@baud_rate+3,?___altoft+3
  8909  00551C  ECED  F028         	call	___altoft	;wreg free
  8910  005520  C10A  F12C         	movff	?___altoft+2,?___ftdiv+5
  8911  005524  C109  F12B         	movff	?___altoft+1,?___ftdiv+4
  8912  005528  C108  F12A         	movff	?___altoft,?___ftdiv+3
  8913  00552C  0E50               	movlw	80
  8914  00552E  0101               	movlb	1	; () banked
  8915  005530  0101               	movlb	1	; () banked
  8916  005532  6F27               	movwf	?___ftdiv& (0+255),b
  8917  005534  0E43               	movlw	67
  8918  005536  0101               	movlb	1	; () banked
  8919  005538  0101               	movlb	1	; () banked
  8920  00553A  6F28               	movwf	(?___ftdiv+1)& (0+255),b
  8921  00553C  0E45               	movlw	69
  8922  00553E  0101               	movlb	1	; () banked
  8923  005540  0101               	movlb	1	; () banked
  8924  005542  6F29               	movwf	(?___ftdiv+2)& (0+255),b
  8925  005544  ECA8  F01F         	call	___ftdiv	;wreg free
  8926  005548  C129  F13A         	movff	?___ftdiv+2,?___ftadd+2
  8927  00554C  C128  F139         	movff	?___ftdiv+1,?___ftadd+1
  8928  005550  C127  F138         	movff	?___ftdiv,?___ftadd
  8929  005554  0E00               	movlw	0
  8930  005556  0101               	movlb	1	; () banked
  8931  005558  0101               	movlb	1	; () banked
  8932  00555A  6F3B               	movwf	(?___ftadd+3)& (0+255),b
  8933  00555C  0E80               	movlw	128
  8934  00555E  0101               	movlb	1	; () banked
  8935  005560  0101               	movlb	1	; () banked
  8936  005562  6F3C               	movwf	(?___ftadd+4)& (0+255),b
  8937  005564  0EBF               	movlw	191
  8938  005566  0101               	movlb	1	; () banked
  8939  005568  0101               	movlb	1	; () banked
  8940  00556A  6F3D               	movwf	(?___ftadd+5)& (0+255),b
  8941  00556C  ECF3  F018         	call	___ftadd	;wreg free
  8942  005570  C13A  F14C         	movff	?___ftadd+2,USART_Init@temp+2
  8943  005574  C139  F14B         	movff	?___ftadd+1,USART_Init@temp+1
  8944  005578  C138  F14A         	movff	?___ftadd,USART_Init@temp
  8945                           
  8946                           ;main.c: 155: SPBRG = (int) temp;
  8947  00557C  C14A  F133         	movff	USART_Init@temp,?___fttol
  8948  005580  C14B  F134         	movff	USART_Init@temp+1,?___fttol+1
  8949  005584  C14C  F135         	movff	USART_Init@temp+2,?___fttol+2
  8950  005588  EC70  F021         	call	___fttol	;wreg free
  8951  00558C  0101               	movlb	1	; () banked
  8952  00558E  0101               	movlb	1	; () banked
  8953  005590  5133               	movf	?___fttol& (0+255),w,b
  8954  005592  6EAF               	movwf	4015,c	;volatile
  8955                           
  8956                           ;main.c: 158: RCSTA = 0x90;
  8957  005594  0E90               	movlw	144
  8958  005596  6EAB               	movwf	4011,c	;volatile
  8959                           
  8960                           ; BSR set to: 1
  8961  005598  0012               	return	
  8962  00559A                     __end_of_USART_Init:
  8963                           	opt stack 0
  8964                           tblptru	equ	0xFF8
  8965                           tblptrh	equ	0xFF7
  8966                           tblptrl	equ	0xFF6
  8967                           tablat	equ	0xFF5
  8968                           prodh	equ	0xFF4
  8969                           prodl	equ	0xFF3
  8970                           intcon	equ	0xFF2
  8971                           intcon2	equ	0xFF1
  8972                           postinc0	equ	0xFEE
  8973                           wreg	equ	0xFE8
  8974                           indf2	equ	0xFDF
  8975                           postinc2	equ	0xFDE
  8976                           postdec2	equ	0xFDD
  8977                           fsr2h	equ	0xFDA
  8978                           fsr2l	equ	0xFD9
  8979                           status	equ	0xFD8
  8980                           
  8981 ;; *************** function ___fttol *****************
  8982 ;; Defined at:
  8983 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;  f1              3   51[BANK1 ] float 
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;  lval            4   61[BANK1 ] unsigned long 
  8988 ;;  exp1            1   65[BANK1 ] unsigned char 
  8989 ;;  sign1           1   60[BANK1 ] unsigned char 
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  4   51[BANK1 ] long 
  8992 ;; Registers used:
  8993 ;;		wreg, status,2, status,0
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8999 ;;      Params:         0       0       4       0       0       0       0       0       0
  9000 ;;      Locals:         0       0       6       0       0       0       0       0       0
  9001 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9002 ;;      Totals:         0       0      15       0       0       0       0       0       0
  9003 ;;Total ram usage:       15 bytes
  9004 ;; Hardware stack levels used:    1
  9005 ;; Hardware stack levels required when called:    9
  9006 ;; This function calls:
  9007 ;;		Nothing
  9008 ;; This function is called by:
  9009 ;;		_USART_Init
  9010 ;;		_sprintf
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           	psect	text27
  9015  0042E0                     __ptext27:
  9016                           	opt stack 0
  9017  0042E0                     ___fttol:
  9018                           	opt stack 20
  9019                           
  9020                           ; BSR set to: 1
  9021                           ;incstack = 0
  9022                           ;incstack = 0
  9023  0042E0  0E0F               	movlw	15
  9024  0042E2  0101               	movlb	1	; () banked
  9025  0042E4  6F37               	movwf	??___fttol& (0+255),b
  9026  0042E6  0101               	movlb	1	; () banked
  9027  0042E8  C133  F138         	movff	___fttol@f1,??___fttol+1
  9028  0042EC  0101               	movlb	1	; () banked
  9029  0042EE  C134  F139         	movff	___fttol@f1+1,??___fttol+2
  9030  0042F2  0101               	movlb	1	; () banked
  9031  0042F4  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
  9032  0042F8  0101               	movlb	1	; () banked
  9033  0042FA  2937               	incf	??___fttol& (0+255),w,b
  9034  0042FC  0101               	movlb	1	; () banked
  9035  0042FE  6F3B               	movwf	(??___fttol+4)& (0+255),b
  9036  004300  D005               	goto	u6830
  9037  004302                     u6835:
  9038  004302  0101               	movlb	1	; () banked
  9039  004304  90D8               	bcf	status,0,c
  9040  004306  333A               	rrcf	(??___fttol+3)& (0+255),f,b
  9041  004308  3339               	rrcf	(??___fttol+2)& (0+255),f,b
  9042  00430A  3338               	rrcf	(??___fttol+1)& (0+255),f,b
  9043  00430C                     u6830:
  9044  00430C  0101               	movlb	1	; () banked
  9045  00430E  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
  9046  004310  D7F8               	goto	u6835
  9047  004312  0101               	movlb	1	; () banked
  9048  004314  5138               	movf	(??___fttol+1)& (0+255),w,b
  9049  004316  0101               	movlb	1	; () banked
  9050  004318  0101               	movlb	1	; () banked
  9051  00431A  6F41               	movwf	___fttol@exp1& (0+255),b
  9052  00431C  0101               	movlb	1	; () banked
  9053  00431E  6741               	tstfsz	___fttol@exp1& (0+255),b
  9054  004320  D001               	goto	l8457
  9055  004322  D061               	goto	u6880
  9056  004324                     l8457:
  9057                           
  9058                           ; BSR set to: 1
  9059  004324  0E17               	movlw	23
  9060  004326  0101               	movlb	1	; () banked
  9061  004328  6F37               	movwf	??___fttol& (0+255),b
  9062  00432A  0101               	movlb	1	; () banked
  9063  00432C  C133  F138         	movff	___fttol@f1,??___fttol+1
  9064  004330  0101               	movlb	1	; () banked
  9065  004332  C134  F139         	movff	___fttol@f1+1,??___fttol+2
  9066  004336  0101               	movlb	1	; () banked
  9067  004338  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
  9068  00433C  0101               	movlb	1	; () banked
  9069  00433E  2937               	incf	??___fttol& (0+255),w,b
  9070  004340  0101               	movlb	1	; () banked
  9071  004342  6F3B               	movwf	(??___fttol+4)& (0+255),b
  9072  004344  D005               	goto	u6850
  9073  004346                     u6855:
  9074  004346  0101               	movlb	1	; () banked
  9075  004348  90D8               	bcf	status,0,c
  9076  00434A  333A               	rrcf	(??___fttol+3)& (0+255),f,b
  9077  00434C  3339               	rrcf	(??___fttol+2)& (0+255),f,b
  9078  00434E  3338               	rrcf	(??___fttol+1)& (0+255),f,b
  9079  004350                     u6850:
  9080  004350  0101               	movlb	1	; () banked
  9081  004352  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
  9082  004354  D7F8               	goto	u6855
  9083  004356  0101               	movlb	1	; () banked
  9084  004358  5138               	movf	(??___fttol+1)& (0+255),w,b
  9085  00435A  0101               	movlb	1	; () banked
  9086  00435C  0101               	movlb	1	; () banked
  9087  00435E  6F3C               	movwf	___fttol@sign1& (0+255),b
  9088                           
  9089                           ; BSR set to: 1
  9090  004360  0101               	movlb	1	; () banked
  9091  004362  0101               	movlb	1	; () banked
  9092  004364  8F34               	bsf	(___fttol@f1+1)& (0+255),7,b
  9093                           
  9094                           ; BSR set to: 1
  9095  004366  0EFF               	movlw	255
  9096  004368  0101               	movlb	1	; () banked
  9097  00436A  0101               	movlb	1	; () banked
  9098  00436C  1733               	andwf	___fttol@f1& (0+255),f,b
  9099  00436E  0EFF               	movlw	255
  9100  004370  0101               	movlb	1	; () banked
  9101  004372  0101               	movlb	1	; () banked
  9102  004374  1734               	andwf	(___fttol@f1+1)& (0+255),f,b
  9103  004376  0E00               	movlw	0
  9104  004378  0101               	movlb	1	; () banked
  9105  00437A  0101               	movlb	1	; () banked
  9106  00437C  1735               	andwf	(___fttol@f1+2)& (0+255),f,b
  9107                           
  9108                           ; BSR set to: 1
  9109  00437E  0101               	movlb	1	; () banked
  9110  004380  0101               	movlb	1	; () banked
  9111  004382  5133               	movf	___fttol@f1& (0+255),w,b
  9112  004384  0101               	movlb	1	; () banked
  9113  004386  0101               	movlb	1	; () banked
  9114  004388  6F3D               	movwf	___fttol@lval& (0+255),b
  9115  00438A  0101               	movlb	1	; () banked
  9116  00438C  0101               	movlb	1	; () banked
  9117  00438E  5134               	movf	(___fttol@f1+1)& (0+255),w,b
  9118  004390  0101               	movlb	1	; () banked
  9119  004392  6F3E               	movwf	(___fttol@lval+1)& (0+255),b
  9120  004394  0101               	movlb	1	; () banked
  9121  004396  5135               	movf	(___fttol@f1+2)& (0+255),w,b
  9122  004398  0101               	movlb	1	; () banked
  9123  00439A  6F3F               	movwf	(___fttol@lval+2)& (0+255),b
  9124  00439C  0101               	movlb	1	; () banked
  9125  00439E  6B40               	clrf	(___fttol@lval+3)& (0+255),b
  9126                           
  9127                           ; BSR set to: 1
  9128  0043A0  0E8E               	movlw	142
  9129  0043A2  0101               	movlb	1	; () banked
  9130  0043A4  0101               	movlb	1	; () banked
  9131  0043A6  5F41               	subwf	___fttol@exp1& (0+255),f,b
  9132                           
  9133                           ; BSR set to: 1
  9134  0043A8  0101               	movlb	1	; () banked
  9135  0043AA  0101               	movlb	1	; () banked
  9136  0043AC  AF41               	btfss	___fttol@exp1& (0+255),7,b
  9137  0043AE  D016               	goto	l8479
  9138                           
  9139                           ; BSR set to: 1
  9140  0043B0  0101               	movlb	1	; () banked
  9141  0043B2  0101               	movlb	1	; () banked
  9142  0043B4  5141               	movf	___fttol@exp1& (0+255),w,b
  9143  0043B6  0A80               	xorlw	128
  9144  0043B8  0F8F               	addlw	143
  9145  0043BA  A0D8               	btfss	status,0,c
  9146  0043BC  D014               	goto	u6880
  9147  0043BE                     l8475:
  9148                           
  9149                           ; BSR set to: 1
  9150  0043BE  0101               	movlb	1	; () banked
  9151  0043C0  90D8               	bcf	status,0,c
  9152  0043C2  0101               	movlb	1	; () banked
  9153  0043C4  3340               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9154  0043C6  0101               	movlb	1	; () banked
  9155  0043C8  333F               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9156  0043CA  0101               	movlb	1	; () banked
  9157  0043CC  333E               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9158  0043CE  0101               	movlb	1	; () banked
  9159  0043D0  333D               	rrcf	___fttol@lval& (0+255),f,b
  9160                           
  9161                           ; BSR set to: 1
  9162  0043D2  0101               	movlb	1	; () banked
  9163  0043D4  0101               	movlb	1	; () banked
  9164  0043D6  3F41               	incfsz	___fttol@exp1& (0+255),f,b
  9165  0043D8  D7F2               	goto	l8475
  9166  0043DA  D024               	goto	l8489
  9167  0043DC                     l8479:
  9168                           
  9169                           ; BSR set to: 1
  9170  0043DC  0E17               	movlw	23
  9171  0043DE  0101               	movlb	1	; () banked
  9172  0043E0  0101               	movlb	1	; () banked
  9173  0043E2  6541               	cpfsgt	___fttol@exp1& (0+255),b
  9174  0043E4  D01B               	goto	l8487
  9175  0043E6                     u6880:
  9176                           
  9177                           ; BSR set to: 1
  9178  0043E6  0E00               	movlw	0
  9179  0043E8  0101               	movlb	1	; () banked
  9180  0043EA  0101               	movlb	1	; () banked
  9181  0043EC  6F33               	movwf	?___fttol& (0+255),b
  9182  0043EE  0E00               	movlw	0
  9183  0043F0  0101               	movlb	1	; () banked
  9184  0043F2  6F34               	movwf	(?___fttol+1)& (0+255),b
  9185  0043F4  0E00               	movlw	0
  9186  0043F6  0101               	movlb	1	; () banked
  9187  0043F8  6F35               	movwf	(?___fttol+2)& (0+255),b
  9188  0043FA  0E00               	movlw	0
  9189  0043FC  0101               	movlb	1	; () banked
  9190  0043FE  6F36               	movwf	(?___fttol+3)& (0+255),b
  9191  004400  D02E               	goto	l794
  9192  004402                     l8485:
  9193                           
  9194                           ; BSR set to: 1
  9195  004402  0101               	movlb	1	; () banked
  9196  004404  90D8               	bcf	status,0,c
  9197  004406  0101               	movlb	1	; () banked
  9198  004408  373D               	rlcf	___fttol@lval& (0+255),f,b
  9199  00440A  0101               	movlb	1	; () banked
  9200  00440C  373E               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9201  00440E  0101               	movlb	1	; () banked
  9202  004410  373F               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9203  004412  0101               	movlb	1	; () banked
  9204  004414  3740               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9205  004416  0101               	movlb	1	; () banked
  9206  004418  0101               	movlb	1	; () banked
  9207  00441A  0741               	decf	___fttol@exp1& (0+255),f,b
  9208  00441C                     l8487:
  9209                           
  9210                           ; BSR set to: 1
  9211  00441C  0101               	movlb	1	; () banked
  9212  00441E  0101               	movlb	1	; () banked
  9213  004420  6741               	tstfsz	___fttol@exp1& (0+255),b
  9214  004422  D7EF               	goto	l8485
  9215  004424                     l8489:
  9216                           
  9217                           ; BSR set to: 1
  9218  004424  0101               	movlb	1	; () banked
  9219  004426  0101               	movlb	1	; () banked
  9220  004428  513C               	movf	___fttol@sign1& (0+255),w,b
  9221  00442A  B4D8               	btfsc	status,2,c
  9222  00442C  D010               	goto	l8493
  9223                           
  9224                           ; BSR set to: 1
  9225  00442E  0101               	movlb	1	; () banked
  9226  004430  0101               	movlb	1	; () banked
  9227  004432  1F40               	comf	(___fttol@lval+3)& (0+255),f,b
  9228  004434  0101               	movlb	1	; () banked
  9229  004436  1F3F               	comf	(___fttol@lval+2)& (0+255),f,b
  9230  004438  0101               	movlb	1	; () banked
  9231  00443A  1F3E               	comf	(___fttol@lval+1)& (0+255),f,b
  9232  00443C  0101               	movlb	1	; () banked
  9233  00443E  6D3D               	negf	___fttol@lval& (0+255),b
  9234  004440  0E00               	movlw	0
  9235  004442  0101               	movlb	1	; () banked
  9236  004444  233E               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9237  004446  0101               	movlb	1	; () banked
  9238  004448  233F               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9239  00444A  0101               	movlb	1	; () banked
  9240  00444C  2340               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9241  00444E                     l8493:
  9242                           
  9243                           ; BSR set to: 1
  9244  00444E  C13D  F133         	movff	___fttol@lval,?___fttol
  9245  004452  C13E  F134         	movff	___fttol@lval+1,?___fttol+1
  9246  004456  C13F  F135         	movff	___fttol@lval+2,?___fttol+2
  9247  00445A  C140  F136         	movff	___fttol@lval+3,?___fttol+3
  9248  00445E                     l794:
  9249                           
  9250                           ; BSR set to: 1
  9251  00445E  0012               	return	
  9252  004460                     __end_of___fttol:
  9253                           	opt stack 0
  9254                           tblptru	equ	0xFF8
  9255                           tblptrh	equ	0xFF7
  9256                           tblptrl	equ	0xFF6
  9257                           tablat	equ	0xFF5
  9258                           prodh	equ	0xFF4
  9259                           prodl	equ	0xFF3
  9260                           intcon	equ	0xFF2
  9261                           intcon2	equ	0xFF1
  9262                           postinc0	equ	0xFEE
  9263                           wreg	equ	0xFE8
  9264                           indf2	equ	0xFDF
  9265                           postinc2	equ	0xFDE
  9266                           postdec2	equ	0xFDD
  9267                           fsr2h	equ	0xFDA
  9268                           fsr2l	equ	0xFD9
  9269                           status	equ	0xFD8
  9270                           
  9271 ;; *************** function ___ftdiv *****************
  9272 ;; Defined at:
  9273 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  f1              3   39[BANK1 ] float 
  9276 ;;  f2              3   42[BANK1 ] float 
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;  f3              3   51[BANK1 ] float 
  9279 ;;  sign            1   55[BANK1 ] unsigned char 
  9280 ;;  exp             1   54[BANK1 ] unsigned char 
  9281 ;;  cntr            1   50[BANK1 ] unsigned char 
  9282 ;; Return value:  Size  Location     Type
  9283 ;;                  3   39[BANK1 ] float 
  9284 ;; Registers used:
  9285 ;;		wreg, status,2, status,0, cstack
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9291 ;;      Params:         0       0       6       0       0       0       0       0       0
  9292 ;;      Locals:         0       0       6       0       0       0       0       0       0
  9293 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9294 ;;      Totals:         0       0      17       0       0       0       0       0       0
  9295 ;;Total ram usage:       17 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; Hardware stack levels required when called:   10
  9298 ;; This function calls:
  9299 ;;		___ftpack
  9300 ;; This function is called by:
  9301 ;;		_USART_Init
  9302 ;;		_Read_LDR
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text28
  9307  003F50                     __ptext28:
  9308                           	opt stack 0
  9309  003F50                     ___ftdiv:
  9310                           	opt stack 19
  9311                           
  9312                           ; BSR set to: 1
  9313                           ;incstack = 0
  9314                           ;incstack = 0
  9315  003F50  0E0F               	movlw	15
  9316  003F52  0101               	movlb	1	; () banked
  9317  003F54  6F2D               	movwf	??___ftdiv& (0+255),b
  9318  003F56  0101               	movlb	1	; () banked
  9319  003F58  C127  F12E         	movff	___ftdiv@f1,??___ftdiv+1
  9320  003F5C  0101               	movlb	1	; () banked
  9321  003F5E  C128  F12F         	movff	___ftdiv@f1+1,??___ftdiv+2
  9322  003F62  0101               	movlb	1	; () banked
  9323  003F64  C129  F130         	movff	___ftdiv@f1+2,??___ftdiv+3
  9324  003F68  0101               	movlb	1	; () banked
  9325  003F6A  292D               	incf	??___ftdiv& (0+255),w,b
  9326  003F6C  0101               	movlb	1	; () banked
  9327  003F6E  6F31               	movwf	(??___ftdiv+4)& (0+255),b
  9328  003F70  D005               	goto	u10010
  9329  003F72                     u10015:
  9330  003F72  0101               	movlb	1	; () banked
  9331  003F74  90D8               	bcf	status,0,c
  9332  003F76  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
  9333  003F78  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
  9334  003F7A  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
  9335  003F7C                     u10010:
  9336  003F7C  0101               	movlb	1	; () banked
  9337  003F7E  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
  9338  003F80  D7F8               	goto	u10015
  9339  003F82  0101               	movlb	1	; () banked
  9340  003F84  512E               	movf	(??___ftdiv+1)& (0+255),w,b
  9341  003F86  0101               	movlb	1	; () banked
  9342  003F88  0101               	movlb	1	; () banked
  9343  003F8A  6F36               	movwf	___ftdiv@exp& (0+255),b
  9344  003F8C  0101               	movlb	1	; () banked
  9345  003F8E  6736               	tstfsz	___ftdiv@exp& (0+255),b
  9346  003F90  D001               	goto	l10809
  9347  003F92  D021               	goto	u10040
  9348  003F94                     l10809:
  9349                           
  9350                           ; BSR set to: 1
  9351  003F94  0E0F               	movlw	15
  9352  003F96  0101               	movlb	1	; () banked
  9353  003F98  6F2D               	movwf	??___ftdiv& (0+255),b
  9354  003F9A  0101               	movlb	1	; () banked
  9355  003F9C  C12A  F12E         	movff	___ftdiv@f2,??___ftdiv+1
  9356  003FA0  0101               	movlb	1	; () banked
  9357  003FA2  C12B  F12F         	movff	___ftdiv@f2+1,??___ftdiv+2
  9358  003FA6  0101               	movlb	1	; () banked
  9359  003FA8  C12C  F130         	movff	___ftdiv@f2+2,??___ftdiv+3
  9360  003FAC  0101               	movlb	1	; () banked
  9361  003FAE  292D               	incf	??___ftdiv& (0+255),w,b
  9362  003FB0  0101               	movlb	1	; () banked
  9363  003FB2  6F31               	movwf	(??___ftdiv+4)& (0+255),b
  9364  003FB4  D005               	goto	u10030
  9365  003FB6                     u10035:
  9366  003FB6  0101               	movlb	1	; () banked
  9367  003FB8  90D8               	bcf	status,0,c
  9368  003FBA  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
  9369  003FBC  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
  9370  003FBE  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
  9371  003FC0                     u10030:
  9372  003FC0  0101               	movlb	1	; () banked
  9373  003FC2  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
  9374  003FC4  D7F8               	goto	u10035
  9375  003FC6  0101               	movlb	1	; () banked
  9376  003FC8  512E               	movf	(??___ftdiv+1)& (0+255),w,b
  9377  003FCA  0101               	movlb	1	; () banked
  9378  003FCC  0101               	movlb	1	; () banked
  9379  003FCE  6F37               	movwf	___ftdiv@sign& (0+255),b
  9380  003FD0  0101               	movlb	1	; () banked
  9381  003FD2  6737               	tstfsz	___ftdiv@sign& (0+255),b
  9382  003FD4  D00D               	goto	l10815
  9383  003FD6                     u10040:
  9384                           
  9385                           ; BSR set to: 1
  9386  003FD6  0E00               	movlw	0
  9387  003FD8  0101               	movlb	1	; () banked
  9388  003FDA  0101               	movlb	1	; () banked
  9389  003FDC  6F27               	movwf	?___ftdiv& (0+255),b
  9390  003FDE  0E00               	movlw	0
  9391  003FE0  0101               	movlb	1	; () banked
  9392  003FE2  0101               	movlb	1	; () banked
  9393  003FE4  6F28               	movwf	(?___ftdiv+1)& (0+255),b
  9394  003FE6  0E00               	movlw	0
  9395  003FE8  0101               	movlb	1	; () banked
  9396  003FEA  0101               	movlb	1	; () banked
  9397  003FEC  6F29               	movwf	(?___ftdiv+2)& (0+255),b
  9398  003FEE  D093               	goto	l742
  9399  003FF0                     l10815:
  9400                           
  9401                           ; BSR set to: 1
  9402  003FF0  0E00               	movlw	0
  9403  003FF2  0101               	movlb	1	; () banked
  9404  003FF4  0101               	movlb	1	; () banked
  9405  003FF6  6F33               	movwf	___ftdiv@f3& (0+255),b
  9406  003FF8  0E00               	movlw	0
  9407  003FFA  0101               	movlb	1	; () banked
  9408  003FFC  0101               	movlb	1	; () banked
  9409  003FFE  6F34               	movwf	(___ftdiv@f3+1)& (0+255),b
  9410  004000  0E00               	movlw	0
  9411  004002  0101               	movlb	1	; () banked
  9412  004004  0101               	movlb	1	; () banked
  9413  004006  6F35               	movwf	(___ftdiv@f3+2)& (0+255),b
  9414                           
  9415                           ; BSR set to: 1
  9416  004008  0101               	movlb	1	; () banked
  9417  00400A  0101               	movlb	1	; () banked
  9418  00400C  5137               	movf	___ftdiv@sign& (0+255),w,b
  9419  00400E  0F89               	addlw	137
  9420  004010  0101               	movlb	1	; () banked
  9421  004012  0101               	movlb	1	; () banked
  9422  004014  5F36               	subwf	___ftdiv@exp& (0+255),f,b
  9423                           
  9424                           ; BSR set to: 1
  9425  004016  C129  F137         	movff	___ftdiv@f1+2,___ftdiv@sign
  9426                           
  9427                           ; BSR set to: 1
  9428  00401A  0101               	movlb	1	; () banked
  9429  00401C  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9430  00401E  0101               	movlb	1	; () banked
  9431  004020  0101               	movlb	1	; () banked
  9432  004022  1B37               	xorwf	___ftdiv@sign& (0+255),f,b
  9433                           
  9434                           ; BSR set to: 1
  9435  004024  0E80               	movlw	128
  9436  004026  0101               	movlb	1	; () banked
  9437  004028  0101               	movlb	1	; () banked
  9438  00402A  1737               	andwf	___ftdiv@sign& (0+255),f,b
  9439                           
  9440                           ; BSR set to: 1
  9441  00402C  0101               	movlb	1	; () banked
  9442  00402E  0101               	movlb	1	; () banked
  9443  004030  8F28               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9444                           
  9445                           ; BSR set to: 1
  9446  004032  0EFF               	movlw	255
  9447  004034  0101               	movlb	1	; () banked
  9448  004036  0101               	movlb	1	; () banked
  9449  004038  1727               	andwf	___ftdiv@f1& (0+255),f,b
  9450  00403A  0EFF               	movlw	255
  9451  00403C  0101               	movlb	1	; () banked
  9452  00403E  0101               	movlb	1	; () banked
  9453  004040  1728               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9454  004042  0E00               	movlw	0
  9455  004044  0101               	movlb	1	; () banked
  9456  004046  0101               	movlb	1	; () banked
  9457  004048  1729               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9458                           
  9459                           ; BSR set to: 1
  9460  00404A  0101               	movlb	1	; () banked
  9461  00404C  0101               	movlb	1	; () banked
  9462  00404E  8F2B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9463                           
  9464                           ; BSR set to: 1
  9465  004050  0EFF               	movlw	255
  9466  004052  0101               	movlb	1	; () banked
  9467  004054  0101               	movlb	1	; () banked
  9468  004056  172A               	andwf	___ftdiv@f2& (0+255),f,b
  9469  004058  0EFF               	movlw	255
  9470  00405A  0101               	movlb	1	; () banked
  9471  00405C  0101               	movlb	1	; () banked
  9472  00405E  172B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9473  004060  0E00               	movlw	0
  9474  004062  0101               	movlb	1	; () banked
  9475  004064  0101               	movlb	1	; () banked
  9476  004066  172C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9477                           
  9478                           ; BSR set to: 1
  9479  004068  0101               	movlb	1	; () banked
  9480  00406A  6F2D               	movwf	??___ftdiv& (0+255),b
  9481  00406C  0E18               	movlw	24
  9482  00406E  0101               	movlb	1	; () banked
  9483  004070  0101               	movlb	1	; () banked
  9484  004072  6F32               	movwf	___ftdiv@cntr& (0+255),b
  9485  004074  0101               	movlb	1	; () banked
  9486  004076  512D               	movf	??___ftdiv& (0+255),w,b
  9487  004078                     l744:
  9488                           
  9489                           ; BSR set to: 1
  9490  004078  0101               	movlb	1	; () banked
  9491  00407A  90D8               	bcf	status,0,c
  9492  00407C  0101               	movlb	1	; () banked
  9493  00407E  3733               	rlcf	___ftdiv@f3& (0+255),f,b
  9494  004080  0101               	movlb	1	; () banked
  9495  004082  3734               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9496  004084  0101               	movlb	1	; () banked
  9497  004086  3735               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9498                           
  9499                           ; BSR set to: 1
  9500  004088  0101               	movlb	1	; () banked
  9501  00408A  0101               	movlb	1	; () banked
  9502  00408C  512A               	movf	___ftdiv@f2& (0+255),w,b
  9503  00408E  0101               	movlb	1	; () banked
  9504  004090  0101               	movlb	1	; () banked
  9505  004092  5D27               	subwf	___ftdiv@f1& (0+255),w,b
  9506  004094  0101               	movlb	1	; () banked
  9507  004096  0101               	movlb	1	; () banked
  9508  004098  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9509  00409A  0101               	movlb	1	; () banked
  9510  00409C  0101               	movlb	1	; () banked
  9511  00409E  5928               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9512  0040A0  0101               	movlb	1	; () banked
  9513  0040A2  0101               	movlb	1	; () banked
  9514  0040A4  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9515  0040A6  0101               	movlb	1	; () banked
  9516  0040A8  0101               	movlb	1	; () banked
  9517  0040AA  5929               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9518  0040AC  A0D8               	btfss	status,0,c
  9519  0040AE  D015               	goto	l745
  9520                           
  9521                           ; BSR set to: 1
  9522  0040B0  0101               	movlb	1	; () banked
  9523  0040B2  0101               	movlb	1	; () banked
  9524  0040B4  512A               	movf	___ftdiv@f2& (0+255),w,b
  9525  0040B6  0101               	movlb	1	; () banked
  9526  0040B8  0101               	movlb	1	; () banked
  9527  0040BA  5F27               	subwf	___ftdiv@f1& (0+255),f,b
  9528  0040BC  0101               	movlb	1	; () banked
  9529  0040BE  0101               	movlb	1	; () banked
  9530  0040C0  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9531  0040C2  0101               	movlb	1	; () banked
  9532  0040C4  0101               	movlb	1	; () banked
  9533  0040C6  5B28               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9534  0040C8  0101               	movlb	1	; () banked
  9535  0040CA  0101               	movlb	1	; () banked
  9536  0040CC  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9537  0040CE  0101               	movlb	1	; () banked
  9538  0040D0  0101               	movlb	1	; () banked
  9539  0040D2  5B29               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9540                           
  9541                           ; BSR set to: 1
  9542  0040D4  0101               	movlb	1	; () banked
  9543  0040D6  0101               	movlb	1	; () banked
  9544  0040D8  8133               	bsf	___ftdiv@f3& (0+255),0,b
  9545  0040DA                     l745:
  9546                           
  9547                           ; BSR set to: 1
  9548  0040DA  0101               	movlb	1	; () banked
  9549  0040DC  90D8               	bcf	status,0,c
  9550  0040DE  0101               	movlb	1	; () banked
  9551  0040E0  3727               	rlcf	___ftdiv@f1& (0+255),f,b
  9552  0040E2  0101               	movlb	1	; () banked
  9553  0040E4  3728               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9554  0040E6  0101               	movlb	1	; () banked
  9555  0040E8  3729               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9556                           
  9557                           ; BSR set to: 1
  9558  0040EA  0101               	movlb	1	; () banked
  9559  0040EC  0101               	movlb	1	; () banked
  9560  0040EE  2F32               	decfsz	___ftdiv@cntr& (0+255),f,b
  9561  0040F0  D7C3               	goto	l744
  9562                           
  9563                           ; BSR set to: 1
  9564                           
  9565                           ; BSR set to: 1
  9566  0040F2  C133  F100         	movff	___ftdiv@f3,?___ftpack
  9567  0040F6  C134  F101         	movff	___ftdiv@f3+1,?___ftpack+1
  9568  0040FA  C135  F102         	movff	___ftdiv@f3+2,?___ftpack+2
  9569  0040FE  C136  F103         	movff	___ftdiv@exp,?___ftpack+3
  9570  004102  C137  F104         	movff	___ftdiv@sign,?___ftpack+4
  9571  004106  EC30  F022         	call	___ftpack	;wreg free
  9572  00410A  C102  F129         	movff	?___ftpack+2,?___ftdiv+2
  9573  00410E  C101  F128         	movff	?___ftpack+1,?___ftdiv+1
  9574  004112  C100  F127         	movff	?___ftpack,?___ftdiv
  9575  004116                     l742:
  9576  004116  0012               	return	
  9577  004118                     __end_of___ftdiv:
  9578                           	opt stack 0
  9579                           tblptru	equ	0xFF8
  9580                           tblptrh	equ	0xFF7
  9581                           tblptrl	equ	0xFF6
  9582                           tablat	equ	0xFF5
  9583                           prodh	equ	0xFF4
  9584                           prodl	equ	0xFF3
  9585                           intcon	equ	0xFF2
  9586                           intcon2	equ	0xFF1
  9587                           postinc0	equ	0xFEE
  9588                           wreg	equ	0xFE8
  9589                           indf2	equ	0xFDF
  9590                           postinc2	equ	0xFDE
  9591                           postdec2	equ	0xFDD
  9592                           fsr2h	equ	0xFDA
  9593                           fsr2l	equ	0xFD9
  9594                           status	equ	0xFD8
  9595                           
  9596 ;; *************** function ___ftadd *****************
  9597 ;; Defined at:
  9598 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;  f1              3   56[BANK1 ] float 
  9601 ;;  f2              3   59[BANK1 ] float 
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;  exp1            1   69[BANK1 ] unsigned char 
  9604 ;;  exp2            1   68[BANK1 ] unsigned char 
  9605 ;;  sign            1   67[BANK1 ] unsigned char 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  3   56[BANK1 ] float 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9615 ;;      Params:         0       0       6       0       0       0       0       0       0
  9616 ;;      Locals:         0       0       3       0       0       0       0       0       0
  9617 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9618 ;;      Totals:         0       0      14       0       0       0       0       0       0
  9619 ;;Total ram usage:       14 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:   10
  9622 ;; This function calls:
  9623 ;;		___ftpack
  9624 ;; This function is called by:
  9625 ;;		_USART_Init
  9626 ;;		___asftadd
  9627 ;;		___ftsub
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text29
  9632  0031E6                     __ptext29:
  9633                           	opt stack 0
  9634  0031E6                     ___ftadd:
  9635                           	opt stack 17
  9636                           
  9637                           ;incstack = 0
  9638                           ;incstack = 0
  9639  0031E6  0E0F               	movlw	15
  9640  0031E8  0101               	movlb	1	; () banked
  9641  0031EA  6F3E               	movwf	??___ftadd& (0+255),b
  9642  0031EC  0101               	movlb	1	; () banked
  9643  0031EE  C138  F13F         	movff	___ftadd@f1,??___ftadd+1
  9644  0031F2  0101               	movlb	1	; () banked
  9645  0031F4  C139  F140         	movff	___ftadd@f1+1,??___ftadd+2
  9646  0031F8  0101               	movlb	1	; () banked
  9647  0031FA  C13A  F141         	movff	___ftadd@f1+2,??___ftadd+3
  9648  0031FE  0101               	movlb	1	; () banked
  9649  003200  293E               	incf	??___ftadd& (0+255),w,b
  9650  003202  0101               	movlb	1	; () banked
  9651  003204  6F42               	movwf	(??___ftadd+4)& (0+255),b
  9652  003206  D005               	goto	u9800
  9653  003208                     u9805:
  9654  003208  0101               	movlb	1	; () banked
  9655  00320A  90D8               	bcf	status,0,c
  9656  00320C  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
  9657  00320E  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
  9658  003210  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
  9659  003212                     u9800:
  9660  003212  0101               	movlb	1	; () banked
  9661  003214  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
  9662  003216  D7F8               	goto	u9805
  9663  003218  0101               	movlb	1	; () banked
  9664  00321A  513F               	movf	(??___ftadd+1)& (0+255),w,b
  9665  00321C  0101               	movlb	1	; () banked
  9666  00321E  0101               	movlb	1	; () banked
  9667  003220  6F45               	movwf	___ftadd@exp1& (0+255),b
  9668  003222  0E0F               	movlw	15
  9669  003224  0101               	movlb	1	; () banked
  9670  003226  6F3E               	movwf	??___ftadd& (0+255),b
  9671  003228  0101               	movlb	1	; () banked
  9672  00322A  C13B  F13F         	movff	___ftadd@f2,??___ftadd+1
  9673  00322E  0101               	movlb	1	; () banked
  9674  003230  C13C  F140         	movff	___ftadd@f2+1,??___ftadd+2
  9675  003234  0101               	movlb	1	; () banked
  9676  003236  C13D  F141         	movff	___ftadd@f2+2,??___ftadd+3
  9677  00323A  0101               	movlb	1	; () banked
  9678  00323C  293E               	incf	??___ftadd& (0+255),w,b
  9679  00323E  0101               	movlb	1	; () banked
  9680  003240  6F42               	movwf	(??___ftadd+4)& (0+255),b
  9681  003242  D005               	goto	u9810
  9682  003244                     u9815:
  9683  003244  0101               	movlb	1	; () banked
  9684  003246  90D8               	bcf	status,0,c
  9685  003248  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
  9686  00324A  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
  9687  00324C  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
  9688  00324E                     u9810:
  9689  00324E  0101               	movlb	1	; () banked
  9690  003250  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
  9691  003252  D7F8               	goto	u9815
  9692  003254  0101               	movlb	1	; () banked
  9693  003256  513F               	movf	(??___ftadd+1)& (0+255),w,b
  9694  003258  0101               	movlb	1	; () banked
  9695  00325A  0101               	movlb	1	; () banked
  9696  00325C  6F44               	movwf	___ftadd@exp2& (0+255),b
  9697                           
  9698                           ; BSR set to: 1
  9699  00325E  0101               	movlb	1	; () banked
  9700  003260  0101               	movlb	1	; () banked
  9701  003262  5145               	movf	___ftadd@exp1& (0+255),w,b
  9702  003264  B4D8               	btfsc	status,2,c
  9703  003266  D015               	goto	l710
  9704                           
  9705                           ; BSR set to: 1
  9706  003268  0101               	movlb	1	; () banked
  9707  00326A  0101               	movlb	1	; () banked
  9708  00326C  5144               	movf	___ftadd@exp2& (0+255),w,b
  9709  00326E  0101               	movlb	1	; () banked
  9710  003270  0101               	movlb	1	; () banked
  9711  003272  6145               	cpfslt	___ftadd@exp1& (0+255),b
  9712  003274  D015               	goto	l10741
  9713                           
  9714                           ; BSR set to: 1
  9715  003276  0101               	movlb	1	; () banked
  9716  003278  0101               	movlb	1	; () banked
  9717  00327A  5145               	movf	___ftadd@exp1& (0+255),w,b
  9718  00327C  0800               	sublw	0
  9719  00327E  0101               	movlb	1	; () banked
  9720  003280  0101               	movlb	1	; () banked
  9721  003282  2544               	addwf	___ftadd@exp2& (0+255),w,b
  9722  003284  0101               	movlb	1	; () banked
  9723  003286  6F3E               	movwf	??___ftadd& (0+255),b
  9724  003288  0E19               	movlw	25
  9725  00328A  0101               	movlb	1	; () banked
  9726  00328C  5D3E               	subwf	??___ftadd& (0+255),w,b
  9727  00328E  A0D8               	btfss	status,0,c
  9728  003290  D007               	goto	l10741
  9729  003292                     l710:
  9730                           
  9731                           ; BSR set to: 1
  9732  003292  C13B  F138         	movff	___ftadd@f2,?___ftadd
  9733  003296  C13C  F139         	movff	___ftadd@f2+1,?___ftadd+1
  9734  00329A  C13D  F13A         	movff	___ftadd@f2+2,?___ftadd+2
  9735  00329E  D148               	goto	l711
  9736  0032A0                     l10741:
  9737                           
  9738                           ; BSR set to: 1
  9739  0032A0  0101               	movlb	1	; () banked
  9740  0032A2  0101               	movlb	1	; () banked
  9741  0032A4  5144               	movf	___ftadd@exp2& (0+255),w,b
  9742  0032A6  B4D8               	btfsc	status,2,c
  9743  0032A8  D015               	goto	l714
  9744                           
  9745                           ; BSR set to: 1
  9746  0032AA  0101               	movlb	1	; () banked
  9747  0032AC  0101               	movlb	1	; () banked
  9748  0032AE  5145               	movf	___ftadd@exp1& (0+255),w,b
  9749  0032B0  0101               	movlb	1	; () banked
  9750  0032B2  0101               	movlb	1	; () banked
  9751  0032B4  6144               	cpfslt	___ftadd@exp2& (0+255),b
  9752  0032B6  D015               	goto	l10747
  9753                           
  9754                           ; BSR set to: 1
  9755  0032B8  0101               	movlb	1	; () banked
  9756  0032BA  0101               	movlb	1	; () banked
  9757  0032BC  5144               	movf	___ftadd@exp2& (0+255),w,b
  9758  0032BE  0800               	sublw	0
  9759  0032C0  0101               	movlb	1	; () banked
  9760  0032C2  0101               	movlb	1	; () banked
  9761  0032C4  2545               	addwf	___ftadd@exp1& (0+255),w,b
  9762  0032C6  0101               	movlb	1	; () banked
  9763  0032C8  6F3E               	movwf	??___ftadd& (0+255),b
  9764  0032CA  0E19               	movlw	25
  9765  0032CC  0101               	movlb	1	; () banked
  9766  0032CE  5D3E               	subwf	??___ftadd& (0+255),w,b
  9767  0032D0  A0D8               	btfss	status,0,c
  9768  0032D2  D007               	goto	l10747
  9769  0032D4                     l714:
  9770                           
  9771                           ; BSR set to: 1
  9772  0032D4  C138  F138         	movff	___ftadd@f1,?___ftadd
  9773  0032D8  C139  F139         	movff	___ftadd@f1+1,?___ftadd+1
  9774  0032DC  C13A  F13A         	movff	___ftadd@f1+2,?___ftadd+2
  9775  0032E0  D127               	goto	l711
  9776  0032E2                     l10747:
  9777                           
  9778                           ; BSR set to: 1
  9779  0032E2  0101               	movlb	1	; () banked
  9780  0032E4  6F3E               	movwf	??___ftadd& (0+255),b
  9781  0032E6  0E06               	movlw	6
  9782  0032E8  0101               	movlb	1	; () banked
  9783  0032EA  0101               	movlb	1	; () banked
  9784  0032EC  6F43               	movwf	___ftadd@sign& (0+255),b
  9785  0032EE  0101               	movlb	1	; () banked
  9786  0032F0  513E               	movf	??___ftadd& (0+255),w,b
  9787                           
  9788                           ; BSR set to: 1
  9789  0032F2  0101               	movlb	1	; () banked
  9790  0032F4  0101               	movlb	1	; () banked
  9791  0032F6  AF3A               	btfss	(___ftadd@f1+2)& (0+255),7,b
  9792  0032F8  D003               	goto	l10753
  9793                           
  9794                           ; BSR set to: 1
  9795  0032FA  0101               	movlb	1	; () banked
  9796  0032FC  0101               	movlb	1	; () banked
  9797  0032FE  8F43               	bsf	___ftadd@sign& (0+255),7,b
  9798  003300                     l10753:
  9799                           
  9800                           ; BSR set to: 1
  9801  003300  0101               	movlb	1	; () banked
  9802  003302  0101               	movlb	1	; () banked
  9803  003304  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9804  003306  D003               	goto	l716
  9805                           
  9806                           ; BSR set to: 1
  9807  003308  0101               	movlb	1	; () banked
  9808  00330A  0101               	movlb	1	; () banked
  9809  00330C  8D43               	bsf	___ftadd@sign& (0+255),6,b
  9810  00330E                     l716:
  9811                           
  9812                           ; BSR set to: 1
  9813  00330E  0101               	movlb	1	; () banked
  9814  003310  0101               	movlb	1	; () banked
  9815  003312  8F39               	bsf	(___ftadd@f1+1)& (0+255),7,b
  9816                           
  9817                           ; BSR set to: 1
  9818  003314  0EFF               	movlw	255
  9819  003316  0101               	movlb	1	; () banked
  9820  003318  0101               	movlb	1	; () banked
  9821  00331A  1738               	andwf	___ftadd@f1& (0+255),f,b
  9822  00331C  0EFF               	movlw	255
  9823  00331E  0101               	movlb	1	; () banked
  9824  003320  0101               	movlb	1	; () banked
  9825  003322  1739               	andwf	(___ftadd@f1+1)& (0+255),f,b
  9826  003324  0E00               	movlw	0
  9827  003326  0101               	movlb	1	; () banked
  9828  003328  0101               	movlb	1	; () banked
  9829  00332A  173A               	andwf	(___ftadd@f1+2)& (0+255),f,b
  9830  00332C  0101               	movlb	1	; () banked
  9831  00332E  0101               	movlb	1	; () banked
  9832  003330  8F3C               	bsf	(___ftadd@f2+1)& (0+255),7,b
  9833                           
  9834                           ; BSR set to: 1
  9835  003332  0EFF               	movlw	255
  9836  003334  0101               	movlb	1	; () banked
  9837  003336  0101               	movlb	1	; () banked
  9838  003338  173B               	andwf	___ftadd@f2& (0+255),f,b
  9839  00333A  0EFF               	movlw	255
  9840  00333C  0101               	movlb	1	; () banked
  9841  00333E  0101               	movlb	1	; () banked
  9842  003340  173C               	andwf	(___ftadd@f2+1)& (0+255),f,b
  9843  003342  0E00               	movlw	0
  9844  003344  0101               	movlb	1	; () banked
  9845  003346  0101               	movlb	1	; () banked
  9846  003348  173D               	andwf	(___ftadd@f2+2)& (0+255),f,b
  9847                           
  9848                           ; BSR set to: 1
  9849  00334A  0101               	movlb	1	; () banked
  9850  00334C  0101               	movlb	1	; () banked
  9851  00334E  5144               	movf	___ftadd@exp2& (0+255),w,b
  9852  003350  0101               	movlb	1	; () banked
  9853  003352  0101               	movlb	1	; () banked
  9854  003354  6145               	cpfslt	___ftadd@exp1& (0+255),b
  9855  003356  D02F               	goto	l10773
  9856  003358                     l10763:
  9857                           
  9858                           ; BSR set to: 1
  9859  003358  0101               	movlb	1	; () banked
  9860  00335A  90D8               	bcf	status,0,c
  9861  00335C  0101               	movlb	1	; () banked
  9862  00335E  373B               	rlcf	___ftadd@f2& (0+255),f,b
  9863  003360  0101               	movlb	1	; () banked
  9864  003362  373C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  9865  003364  0101               	movlb	1	; () banked
  9866  003366  373D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  9867  003368  0101               	movlb	1	; () banked
  9868  00336A  0101               	movlb	1	; () banked
  9869  00336C  0744               	decf	___ftadd@exp2& (0+255),f,b
  9870                           
  9871                           ; BSR set to: 1
  9872  00336E  0101               	movlb	1	; () banked
  9873  003370  0101               	movlb	1	; () banked
  9874  003372  5144               	movf	___ftadd@exp2& (0+255),w,b
  9875  003374  0101               	movlb	1	; () banked
  9876  003376  0101               	movlb	1	; () banked
  9877  003378  1945               	xorwf	___ftadd@exp1& (0+255),w,b
  9878  00337A  B4D8               	btfsc	status,2,c
  9879  00337C  D014               	goto	l10771
  9880                           
  9881                           ; BSR set to: 1
  9882  00337E  0101               	movlb	1	; () banked
  9883  003380  0101               	movlb	1	; () banked
  9884  003382  0743               	decf	___ftadd@sign& (0+255),f,b
  9885  003384  0101               	movlb	1	; () banked
  9886  003386  5143               	movf	___ftadd@sign& (0+255),w,b
  9887  003388  0B07               	andlw	7
  9888  00338A  B4D8               	btfsc	status,2,c
  9889  00338C  D00C               	goto	l10771
  9890  00338E  D7E4               	goto	l10763
  9891  003390                     l10769:
  9892                           
  9893                           ; BSR set to: 1
  9894  003390  0101               	movlb	1	; () banked
  9895  003392  90D8               	bcf	status,0,c
  9896  003394  0101               	movlb	1	; () banked
  9897  003396  333A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  9898  003398  0101               	movlb	1	; () banked
  9899  00339A  3339               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  9900  00339C  0101               	movlb	1	; () banked
  9901  00339E  3338               	rrcf	___ftadd@f1& (0+255),f,b
  9902  0033A0  0101               	movlb	1	; () banked
  9903  0033A2  0101               	movlb	1	; () banked
  9904  0033A4  2B45               	incf	___ftadd@exp1& (0+255),f,b
  9905  0033A6                     l10771:
  9906                           
  9907                           ; BSR set to: 1
  9908  0033A6  0101               	movlb	1	; () banked
  9909  0033A8  0101               	movlb	1	; () banked
  9910  0033AA  5144               	movf	___ftadd@exp2& (0+255),w,b
  9911  0033AC  0101               	movlb	1	; () banked
  9912  0033AE  0101               	movlb	1	; () banked
  9913  0033B0  6345               	cpfseq	___ftadd@exp1& (0+255),b
  9914  0033B2  D7EE               	goto	l10769
  9915  0033B4  D035               	goto	l725
  9916  0033B6                     l10773:
  9917                           
  9918                           ; BSR set to: 1
  9919  0033B6  0101               	movlb	1	; () banked
  9920  0033B8  0101               	movlb	1	; () banked
  9921  0033BA  5145               	movf	___ftadd@exp1& (0+255),w,b
  9922  0033BC  0101               	movlb	1	; () banked
  9923  0033BE  0101               	movlb	1	; () banked
  9924  0033C0  6144               	cpfslt	___ftadd@exp2& (0+255),b
  9925  0033C2  D02E               	goto	l725
  9926  0033C4                     l10775:
  9927                           
  9928                           ; BSR set to: 1
  9929  0033C4  0101               	movlb	1	; () banked
  9930  0033C6  90D8               	bcf	status,0,c
  9931  0033C8  0101               	movlb	1	; () banked
  9932  0033CA  3738               	rlcf	___ftadd@f1& (0+255),f,b
  9933  0033CC  0101               	movlb	1	; () banked
  9934  0033CE  3739               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  9935  0033D0  0101               	movlb	1	; () banked
  9936  0033D2  373A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  9937  0033D4  0101               	movlb	1	; () banked
  9938  0033D6  0101               	movlb	1	; () banked
  9939  0033D8  0745               	decf	___ftadd@exp1& (0+255),f,b
  9940                           
  9941                           ; BSR set to: 1
  9942  0033DA  0101               	movlb	1	; () banked
  9943  0033DC  0101               	movlb	1	; () banked
  9944  0033DE  5144               	movf	___ftadd@exp2& (0+255),w,b
  9945  0033E0  0101               	movlb	1	; () banked
  9946  0033E2  0101               	movlb	1	; () banked
  9947  0033E4  1945               	xorwf	___ftadd@exp1& (0+255),w,b
  9948  0033E6  B4D8               	btfsc	status,2,c
  9949  0033E8  D014               	goto	l10783
  9950                           
  9951                           ; BSR set to: 1
  9952  0033EA  0101               	movlb	1	; () banked
  9953  0033EC  0101               	movlb	1	; () banked
  9954  0033EE  0743               	decf	___ftadd@sign& (0+255),f,b
  9955  0033F0  0101               	movlb	1	; () banked
  9956  0033F2  5143               	movf	___ftadd@sign& (0+255),w,b
  9957  0033F4  0B07               	andlw	7
  9958  0033F6  B4D8               	btfsc	status,2,c
  9959  0033F8  D00C               	goto	l10783
  9960  0033FA  D7E4               	goto	l10775
  9961  0033FC                     l10781:
  9962                           
  9963                           ; BSR set to: 1
  9964  0033FC  0101               	movlb	1	; () banked
  9965  0033FE  90D8               	bcf	status,0,c
  9966  003400  0101               	movlb	1	; () banked
  9967  003402  333D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  9968  003404  0101               	movlb	1	; () banked
  9969  003406  333C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  9970  003408  0101               	movlb	1	; () banked
  9971  00340A  333B               	rrcf	___ftadd@f2& (0+255),f,b
  9972  00340C  0101               	movlb	1	; () banked
  9973  00340E  0101               	movlb	1	; () banked
  9974  003410  2B44               	incf	___ftadd@exp2& (0+255),f,b
  9975  003412                     l10783:
  9976                           
  9977                           ; BSR set to: 1
  9978  003412  0101               	movlb	1	; () banked
  9979  003414  0101               	movlb	1	; () banked
  9980  003416  5144               	movf	___ftadd@exp2& (0+255),w,b
  9981  003418  0101               	movlb	1	; () banked
  9982  00341A  0101               	movlb	1	; () banked
  9983  00341C  6345               	cpfseq	___ftadd@exp1& (0+255),b
  9984  00341E  D7EE               	goto	l10781
  9985  003420                     l725:
  9986                           
  9987                           ; BSR set to: 1
  9988  003420  0101               	movlb	1	; () banked
  9989  003422  0101               	movlb	1	; () banked
  9990  003424  AF43               	btfss	___ftadd@sign& (0+255),7,b
  9991  003426  D018               	goto	l734
  9992                           
  9993                           ; BSR set to: 1
  9994  003428  0EFF               	movlw	255
  9995  00342A  0101               	movlb	1	; () banked
  9996  00342C  0101               	movlb	1	; () banked
  9997  00342E  1B38               	xorwf	___ftadd@f1& (0+255),f,b
  9998  003430  0EFF               	movlw	255
  9999  003432  0101               	movlb	1	; () banked
 10000  003434  0101               	movlb	1	; () banked
 10001  003436  1B39               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10002  003438  0EFF               	movlw	255
 10003  00343A  0101               	movlb	1	; () banked
 10004  00343C  0101               	movlb	1	; () banked
 10005  00343E  1B3A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10006  003440  0E01               	movlw	1
 10007  003442  0101               	movlb	1	; () banked
 10008  003444  0101               	movlb	1	; () banked
 10009  003446  2738               	addwf	___ftadd@f1& (0+255),f,b
 10010  003448  0E00               	movlw	0
 10011  00344A  0101               	movlb	1	; () banked
 10012  00344C  0101               	movlb	1	; () banked
 10013  00344E  2339               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10014  003450  0E00               	movlw	0
 10015  003452  0101               	movlb	1	; () banked
 10016  003454  0101               	movlb	1	; () banked
 10017  003456  233A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10018  003458                     l734:
 10019                           
 10020                           ; BSR set to: 1
 10021  003458  0101               	movlb	1	; () banked
 10022  00345A  0101               	movlb	1	; () banked
 10023  00345C  AD43               	btfss	___ftadd@sign& (0+255),6,b
 10024  00345E  D018               	goto	l10789
 10025                           
 10026                           ; BSR set to: 1
 10027  003460  0EFF               	movlw	255
 10028  003462  0101               	movlb	1	; () banked
 10029  003464  0101               	movlb	1	; () banked
 10030  003466  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 10031  003468  0EFF               	movlw	255
 10032  00346A  0101               	movlb	1	; () banked
 10033  00346C  0101               	movlb	1	; () banked
 10034  00346E  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10035  003470  0EFF               	movlw	255
 10036  003472  0101               	movlb	1	; () banked
 10037  003474  0101               	movlb	1	; () banked
 10038  003476  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10039  003478  0E01               	movlw	1
 10040  00347A  0101               	movlb	1	; () banked
 10041  00347C  0101               	movlb	1	; () banked
 10042  00347E  273B               	addwf	___ftadd@f2& (0+255),f,b
 10043  003480  0E00               	movlw	0
 10044  003482  0101               	movlb	1	; () banked
 10045  003484  0101               	movlb	1	; () banked
 10046  003486  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10047  003488  0E00               	movlw	0
 10048  00348A  0101               	movlb	1	; () banked
 10049  00348C  0101               	movlb	1	; () banked
 10050  00348E  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10051  003490                     l10789:
 10052                           
 10053                           ; BSR set to: 1
 10054  003490  0101               	movlb	1	; () banked
 10055  003492  6F3E               	movwf	??___ftadd& (0+255),b
 10056  003494  0E00               	movlw	0
 10057  003496  0101               	movlb	1	; () banked
 10058  003498  0101               	movlb	1	; () banked
 10059  00349A  6F43               	movwf	___ftadd@sign& (0+255),b
 10060  00349C  0101               	movlb	1	; () banked
 10061  00349E  513E               	movf	??___ftadd& (0+255),w,b
 10062                           
 10063                           ; BSR set to: 1
 10064  0034A0  0101               	movlb	1	; () banked
 10065  0034A2  0101               	movlb	1	; () banked
 10066  0034A4  5138               	movf	___ftadd@f1& (0+255),w,b
 10067  0034A6  0101               	movlb	1	; () banked
 10068  0034A8  0101               	movlb	1	; () banked
 10069  0034AA  273B               	addwf	___ftadd@f2& (0+255),f,b
 10070  0034AC  0101               	movlb	1	; () banked
 10071  0034AE  0101               	movlb	1	; () banked
 10072  0034B0  5139               	movf	(___ftadd@f1+1)& (0+255),w,b
 10073  0034B2  0101               	movlb	1	; () banked
 10074  0034B4  0101               	movlb	1	; () banked
 10075  0034B6  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10076  0034B8  0101               	movlb	1	; () banked
 10077  0034BA  0101               	movlb	1	; () banked
 10078  0034BC  513A               	movf	(___ftadd@f1+2)& (0+255),w,b
 10079  0034BE  0101               	movlb	1	; () banked
 10080  0034C0  0101               	movlb	1	; () banked
 10081  0034C2  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10082                           
 10083                           ; BSR set to: 1
 10084  0034C4  0101               	movlb	1	; () banked
 10085  0034C6  0101               	movlb	1	; () banked
 10086  0034C8  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10087  0034CA  D020               	goto	l10799
 10088                           
 10089                           ; BSR set to: 1
 10090  0034CC  0EFF               	movlw	255
 10091  0034CE  0101               	movlb	1	; () banked
 10092  0034D0  0101               	movlb	1	; () banked
 10093  0034D2  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 10094  0034D4  0EFF               	movlw	255
 10095  0034D6  0101               	movlb	1	; () banked
 10096  0034D8  0101               	movlb	1	; () banked
 10097  0034DA  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10098  0034DC  0EFF               	movlw	255
 10099  0034DE  0101               	movlb	1	; () banked
 10100  0034E0  0101               	movlb	1	; () banked
 10101  0034E2  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10102  0034E4  0E01               	movlw	1
 10103  0034E6  0101               	movlb	1	; () banked
 10104  0034E8  0101               	movlb	1	; () banked
 10105  0034EA  273B               	addwf	___ftadd@f2& (0+255),f,b
 10106  0034EC  0E00               	movlw	0
 10107  0034EE  0101               	movlb	1	; () banked
 10108  0034F0  0101               	movlb	1	; () banked
 10109  0034F2  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10110  0034F4  0E00               	movlw	0
 10111  0034F6  0101               	movlb	1	; () banked
 10112  0034F8  0101               	movlb	1	; () banked
 10113  0034FA  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10114                           
 10115                           ; BSR set to: 1
 10116  0034FC  0101               	movlb	1	; () banked
 10117  0034FE  6F3E               	movwf	??___ftadd& (0+255),b
 10118  003500  0E01               	movlw	1
 10119  003502  0101               	movlb	1	; () banked
 10120  003504  0101               	movlb	1	; () banked
 10121  003506  6F43               	movwf	___ftadd@sign& (0+255),b
 10122  003508  0101               	movlb	1	; () banked
 10123  00350A  513E               	movf	??___ftadd& (0+255),w,b
 10124  00350C                     l10799:
 10125                           
 10126                           ; BSR set to: 1
 10127  00350C  C13B  F100         	movff	___ftadd@f2,?___ftpack
 10128  003510  C13C  F101         	movff	___ftadd@f2+1,?___ftpack+1
 10129  003514  C13D  F102         	movff	___ftadd@f2+2,?___ftpack+2
 10130  003518  C145  F103         	movff	___ftadd@exp1,?___ftpack+3
 10131  00351C  C143  F104         	movff	___ftadd@sign,?___ftpack+4
 10132  003520  EC30  F022         	call	___ftpack	;wreg free
 10133  003524  C102  F13A         	movff	?___ftpack+2,?___ftadd+2
 10134  003528  C101  F139         	movff	?___ftpack+1,?___ftadd+1
 10135  00352C  C100  F138         	movff	?___ftpack,?___ftadd
 10136  003530                     l711:
 10137  003530  0012               	return	
 10138  003532                     __end_of___ftadd:
 10139                           	opt stack 0
 10140                           tblptru	equ	0xFF8
 10141                           tblptrh	equ	0xFF7
 10142                           tblptrl	equ	0xFF6
 10143                           tablat	equ	0xFF5
 10144                           prodh	equ	0xFF4
 10145                           prodl	equ	0xFF3
 10146                           intcon	equ	0xFF2
 10147                           intcon2	equ	0xFF1
 10148                           postinc0	equ	0xFEE
 10149                           wreg	equ	0xFE8
 10150                           indf2	equ	0xFDF
 10151                           postinc2	equ	0xFDE
 10152                           postdec2	equ	0xFDD
 10153                           fsr2h	equ	0xFDA
 10154                           fsr2l	equ	0xFD9
 10155                           status	equ	0xFD8
 10156                           
 10157 ;; *************** function ___altoft *****************
 10158 ;; Defined at:
 10159 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\altoft.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  c               4    8[BANK1 ] long 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;  sign            1   17[BANK1 ] unsigned char 
 10164 ;;  exp             1   16[BANK1 ] unsigned char 
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  3    8[BANK1 ] float 
 10167 ;; Registers used:
 10168 ;;		wreg, status,2, status,0, cstack
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10174 ;;      Params:         0       0       4       0       0       0       0       0       0
 10175 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10176 ;;      Temps:          0       0       4       0       0       0       0       0       0
 10177 ;;      Totals:         0       0      10       0       0       0       0       0       0
 10178 ;;Total ram usage:       10 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; Hardware stack levels required when called:   10
 10181 ;; This function calls:
 10182 ;;		___ftpack
 10183 ;; This function is called by:
 10184 ;;		_USART_Init
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text30
 10189  0051DA                     __ptext30:
 10190                           	opt stack 0
 10191  0051DA                     ___altoft:
 10192                           	opt stack 19
 10193                           
 10194                           ;incstack = 0
 10195                           ;incstack = 0
 10196  0051DA  0101               	movlb	1	; () banked
 10197  0051DC  6F0C               	movwf	??___altoft& (0+255),b
 10198  0051DE  0E00               	movlw	0
 10199  0051E0  0101               	movlb	1	; () banked
 10200  0051E2  0101               	movlb	1	; () banked
 10201  0051E4  6F11               	movwf	___altoft@sign& (0+255),b
 10202  0051E6  0101               	movlb	1	; () banked
 10203  0051E8  510C               	movf	??___altoft& (0+255),w,b
 10204  0051EA  0101               	movlb	1	; () banked
 10205  0051EC  6F0C               	movwf	??___altoft& (0+255),b
 10206  0051EE  0E8E               	movlw	142
 10207  0051F0  0101               	movlb	1	; () banked
 10208  0051F2  0101               	movlb	1	; () banked
 10209  0051F4  6F10               	movwf	___altoft@exp& (0+255),b
 10210  0051F6  0101               	movlb	1	; () banked
 10211  0051F8  510C               	movf	??___altoft& (0+255),w,b
 10212                           
 10213                           ; BSR set to: 1
 10214  0051FA  0101               	movlb	1	; () banked
 10215  0051FC  0101               	movlb	1	; () banked
 10216  0051FE  AF0B               	btfss	(___altoft@c+3)& (0+255),7,b
 10217  005200  D026               	goto	l10723
 10218                           
 10219                           ; BSR set to: 1
 10220  005202  0101               	movlb	1	; () banked
 10221  005204  0101               	movlb	1	; () banked
 10222  005206  1F0B               	comf	(___altoft@c+3)& (0+255),f,b
 10223  005208  0101               	movlb	1	; () banked
 10224  00520A  1F0A               	comf	(___altoft@c+2)& (0+255),f,b
 10225  00520C  0101               	movlb	1	; () banked
 10226  00520E  1F09               	comf	(___altoft@c+1)& (0+255),f,b
 10227  005210  0101               	movlb	1	; () banked
 10228  005212  6D08               	negf	___altoft@c& (0+255),b
 10229  005214  0E00               	movlw	0
 10230  005216  0101               	movlb	1	; () banked
 10231  005218  2309               	addwfc	(___altoft@c+1)& (0+255),f,b
 10232  00521A  0101               	movlb	1	; () banked
 10233  00521C  230A               	addwfc	(___altoft@c+2)& (0+255),f,b
 10234  00521E  0101               	movlb	1	; () banked
 10235  005220  230B               	addwfc	(___altoft@c+3)& (0+255),f,b
 10236                           
 10237                           ; BSR set to: 1
 10238  005222  0101               	movlb	1	; () banked
 10239  005224  6F0C               	movwf	??___altoft& (0+255),b
 10240  005226  0E01               	movlw	1
 10241  005228  0101               	movlb	1	; () banked
 10242  00522A  0101               	movlb	1	; () banked
 10243  00522C  6F11               	movwf	___altoft@sign& (0+255),b
 10244  00522E  0101               	movlb	1	; () banked
 10245  005230  510C               	movf	??___altoft& (0+255),w,b
 10246  005232  D00D               	goto	l10723
 10247  005234                     l10721:
 10248                           
 10249                           ; BSR set to: 1
 10250  005234  0101               	movlb	1	; () banked
 10251  005236  90D8               	bcf	status,0,c
 10252  005238  0101               	movlb	1	; () banked
 10253  00523A  330B               	rrcf	(___altoft@c+3)& (0+255),f,b
 10254  00523C  0101               	movlb	1	; () banked
 10255  00523E  330A               	rrcf	(___altoft@c+2)& (0+255),f,b
 10256  005240  0101               	movlb	1	; () banked
 10257  005242  3309               	rrcf	(___altoft@c+1)& (0+255),f,b
 10258  005244  0101               	movlb	1	; () banked
 10259  005246  3308               	rrcf	___altoft@c& (0+255),f,b
 10260  005248  0101               	movlb	1	; () banked
 10261  00524A  0101               	movlb	1	; () banked
 10262  00524C  2B10               	incf	___altoft@exp& (0+255),f,b
 10263  00524E                     l10723:
 10264                           
 10265                           ; BSR set to: 1
 10266  00524E  0E00               	movlw	0
 10267  005250  0101               	movlb	1	; () banked
 10268  005252  0101               	movlb	1	; () banked
 10269  005254  1508               	andwf	___altoft@c& (0+255),w,b
 10270  005256  0101               	movlb	1	; () banked
 10271  005258  6F0C               	movwf	??___altoft& (0+255),b
 10272  00525A  0E00               	movlw	0
 10273  00525C  0101               	movlb	1	; () banked
 10274  00525E  0101               	movlb	1	; () banked
 10275  005260  1509               	andwf	(___altoft@c+1)& (0+255),w,b
 10276  005262  0101               	movlb	1	; () banked
 10277  005264  6F0D               	movwf	(??___altoft+1)& (0+255),b
 10278  005266  0E00               	movlw	0
 10279  005268  0101               	movlb	1	; () banked
 10280  00526A  0101               	movlb	1	; () banked
 10281  00526C  150A               	andwf	(___altoft@c+2)& (0+255),w,b
 10282  00526E  0101               	movlb	1	; () banked
 10283  005270  6F0E               	movwf	(??___altoft+2)& (0+255),b
 10284  005272  0EFF               	movlw	255
 10285  005274  0101               	movlb	1	; () banked
 10286  005276  0101               	movlb	1	; () banked
 10287  005278  150B               	andwf	(___altoft@c+3)& (0+255),w,b
 10288  00527A  0101               	movlb	1	; () banked
 10289  00527C  6F0F               	movwf	(??___altoft+3)& (0+255),b
 10290  00527E  0101               	movlb	1	; () banked
 10291  005280  510F               	movf	(??___altoft+3)& (0+255),w,b
 10292  005282  110C               	iorwf	??___altoft& (0+255),w,b
 10293  005284  110D               	iorwf	(??___altoft+1)& (0+255),w,b
 10294  005286  110E               	iorwf	(??___altoft+2)& (0+255),w,b
 10295  005288  A4D8               	btfss	status,2,c
 10296  00528A  D7D4               	goto	l10721
 10297                           
 10298                           ; BSR set to: 1
 10299                           
 10300                           ; BSR set to: 1
 10301  00528C  C108  F100         	movff	___altoft@c,?___ftpack
 10302  005290  C109  F101         	movff	___altoft@c+1,?___ftpack+1
 10303  005294  C10A  F102         	movff	___altoft@c+2,?___ftpack+2
 10304  005298  C110  F103         	movff	___altoft@exp,?___ftpack+3
 10305  00529C  C111  F104         	movff	___altoft@sign,?___ftpack+4
 10306  0052A0  EC30  F022         	call	___ftpack	;wreg free
 10307  0052A4  C102  F10A         	movff	?___ftpack+2,?___altoft+2
 10308  0052A8  C101  F109         	movff	?___ftpack+1,?___altoft+1
 10309  0052AC  C100  F108         	movff	?___ftpack,?___altoft
 10310  0052B0  0012               	return	
 10311  0052B2                     __end_of___altoft:
 10312                           	opt stack 0
 10313                           tblptru	equ	0xFF8
 10314                           tblptrh	equ	0xFF7
 10315                           tblptrl	equ	0xFF6
 10316                           tablat	equ	0xFF5
 10317                           prodh	equ	0xFF4
 10318                           prodl	equ	0xFF3
 10319                           intcon	equ	0xFF2
 10320                           intcon2	equ	0xFF1
 10321                           postinc0	equ	0xFEE
 10322                           wreg	equ	0xFE8
 10323                           indf2	equ	0xFDF
 10324                           postinc2	equ	0xFDE
 10325                           postdec2	equ	0xFDD
 10326                           fsr2h	equ	0xFDA
 10327                           fsr2l	equ	0xFD9
 10328                           status	equ	0xFD8
 10329                           
 10330 ;; *************** function ___ftpack *****************
 10331 ;; Defined at:
 10332 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;  arg             3    0[BANK1 ] unsigned um
 10335 ;;  exp             1    3[BANK1 ] unsigned char 
 10336 ;;  sign            1    4[BANK1 ] unsigned char 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;		None
 10339 ;; Return value:  Size  Location     Type
 10340 ;;                  3    0[BANK1 ] float 
 10341 ;; Registers used:
 10342 ;;		wreg, status,2, status,0
 10343 ;; Tracked objects:
 10344 ;;		On entry : 0/0
 10345 ;;		On exit  : 0/0
 10346 ;;		Unchanged: 0/0
 10347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10348 ;;      Params:         0       0       5       0       0       0       0       0       0
 10349 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10350 ;;      Temps:          0       0       3       0       0       0       0       0       0
 10351 ;;      Totals:         0       0       8       0       0       0       0       0       0
 10352 ;;Total ram usage:        8 bytes
 10353 ;; Hardware stack levels used:    1
 10354 ;; Hardware stack levels required when called:    9
 10355 ;; This function calls:
 10356 ;;		Nothing
 10357 ;; This function is called by:
 10358 ;;		___altoft
 10359 ;;		___awtoft
 10360 ;;		___ftadd
 10361 ;;		___ftdiv
 10362 ;;		___ftmul
 10363 ;;		___lltoft
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text31
 10368  004460                     __ptext31:
 10369                           	opt stack 0
 10370  004460                     ___ftpack:
 10371                           	opt stack 19
 10372                           
 10373                           ;incstack = 0
 10374                           ;incstack = 0
 10375  004460  0101               	movlb	1	; () banked
 10376  004462  0101               	movlb	1	; () banked
 10377  004464  5103               	movf	___ftpack@exp& (0+255),w,b
 10378  004466  B4D8               	btfsc	status,2,c
 10379  004468  D009               	goto	l10683
 10380                           
 10381                           ; BSR set to: 1
 10382  00446A  0101               	movlb	1	; () banked
 10383  00446C  0101               	movlb	1	; () banked
 10384  00446E  5100               	movf	___ftpack@arg& (0+255),w,b
 10385  004470  0101               	movlb	1	; () banked
 10386  004472  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10387  004474  0101               	movlb	1	; () banked
 10388  004476  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10389  004478  A4D8               	btfss	status,2,c
 10390  00447A  D018               	goto	l10689
 10391  00447C                     l10683:
 10392                           
 10393                           ; BSR set to: 1
 10394  00447C  0E00               	movlw	0
 10395  00447E  0101               	movlb	1	; () banked
 10396  004480  0101               	movlb	1	; () banked
 10397  004482  6F00               	movwf	?___ftpack& (0+255),b
 10398  004484  0E00               	movlw	0
 10399  004486  0101               	movlb	1	; () banked
 10400  004488  0101               	movlb	1	; () banked
 10401  00448A  6F01               	movwf	(?___ftpack+1)& (0+255),b
 10402  00448C  0E00               	movlw	0
 10403  00448E  0101               	movlb	1	; () banked
 10404  004490  0101               	movlb	1	; () banked
 10405  004492  6F02               	movwf	(?___ftpack+2)& (0+255),b
 10406  004494  D091               	goto	l673
 10407  004496                     l10687:
 10408                           
 10409                           ; BSR set to: 1
 10410  004496  0101               	movlb	1	; () banked
 10411  004498  0101               	movlb	1	; () banked
 10412  00449A  2B03               	incf	___ftpack@exp& (0+255),f,b
 10413  00449C  0101               	movlb	1	; () banked
 10414  00449E  90D8               	bcf	status,0,c
 10415  0044A0  0101               	movlb	1	; () banked
 10416  0044A2  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10417  0044A4  0101               	movlb	1	; () banked
 10418  0044A6  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10419  0044A8  0101               	movlb	1	; () banked
 10420  0044AA  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10421  0044AC                     l10689:
 10422                           
 10423                           ; BSR set to: 1
 10424  0044AC  0E00               	movlw	0
 10425  0044AE  0101               	movlb	1	; () banked
 10426  0044B0  0101               	movlb	1	; () banked
 10427  0044B2  1500               	andwf	___ftpack@arg& (0+255),w,b
 10428  0044B4  0101               	movlb	1	; () banked
 10429  0044B6  6F05               	movwf	??___ftpack& (0+255),b
 10430  0044B8  0E00               	movlw	0
 10431  0044BA  0101               	movlb	1	; () banked
 10432  0044BC  0101               	movlb	1	; () banked
 10433  0044BE  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10434  0044C0  0101               	movlb	1	; () banked
 10435  0044C2  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10436  0044C4  0EFE               	movlw	254
 10437  0044C6  0101               	movlb	1	; () banked
 10438  0044C8  0101               	movlb	1	; () banked
 10439  0044CA  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10440  0044CC  0101               	movlb	1	; () banked
 10441  0044CE  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10442  0044D0  0101               	movlb	1	; () banked
 10443  0044D2  5105               	movf	??___ftpack& (0+255),w,b
 10444  0044D4  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10445  0044D6  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10446  0044D8  B4D8               	btfsc	status,2,c
 10447  0044DA  D018               	goto	l10695
 10448  0044DC  D7DC               	goto	l10687
 10449  0044DE                     l10691:
 10450                           
 10451                           ; BSR set to: 1
 10452  0044DE  0101               	movlb	1	; () banked
 10453  0044E0  0101               	movlb	1	; () banked
 10454  0044E2  2B03               	incf	___ftpack@exp& (0+255),f,b
 10455                           
 10456                           ; BSR set to: 1
 10457  0044E4  0E01               	movlw	1
 10458  0044E6  0101               	movlb	1	; () banked
 10459  0044E8  0101               	movlb	1	; () banked
 10460  0044EA  2700               	addwf	___ftpack@arg& (0+255),f,b
 10461  0044EC  0E00               	movlw	0
 10462  0044EE  0101               	movlb	1	; () banked
 10463  0044F0  0101               	movlb	1	; () banked
 10464  0044F2  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10465  0044F4  0E00               	movlw	0
 10466  0044F6  0101               	movlb	1	; () banked
 10467  0044F8  0101               	movlb	1	; () banked
 10468  0044FA  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10469  0044FC  0101               	movlb	1	; () banked
 10470  0044FE  90D8               	bcf	status,0,c
 10471  004500  0101               	movlb	1	; () banked
 10472  004502  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10473  004504  0101               	movlb	1	; () banked
 10474  004506  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10475  004508  0101               	movlb	1	; () banked
 10476  00450A  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10477  00450C                     l10695:
 10478                           
 10479                           ; BSR set to: 1
 10480  00450C  0E00               	movlw	0
 10481  00450E  0101               	movlb	1	; () banked
 10482  004510  0101               	movlb	1	; () banked
 10483  004512  1500               	andwf	___ftpack@arg& (0+255),w,b
 10484  004514  0101               	movlb	1	; () banked
 10485  004516  6F05               	movwf	??___ftpack& (0+255),b
 10486  004518  0E00               	movlw	0
 10487  00451A  0101               	movlb	1	; () banked
 10488  00451C  0101               	movlb	1	; () banked
 10489  00451E  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10490  004520  0101               	movlb	1	; () banked
 10491  004522  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10492  004524  0EFF               	movlw	255
 10493  004526  0101               	movlb	1	; () banked
 10494  004528  0101               	movlb	1	; () banked
 10495  00452A  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10496  00452C  0101               	movlb	1	; () banked
 10497  00452E  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10498  004530  0101               	movlb	1	; () banked
 10499  004532  5105               	movf	??___ftpack& (0+255),w,b
 10500  004534  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10501  004536  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10502  004538  B4D8               	btfsc	status,2,c
 10503  00453A  D00C               	goto	l10699
 10504  00453C  D7D0               	goto	l10691
 10505  00453E                     l10697:
 10506                           
 10507                           ; BSR set to: 1
 10508  00453E  0101               	movlb	1	; () banked
 10509  004540  0101               	movlb	1	; () banked
 10510  004542  0703               	decf	___ftpack@exp& (0+255),f,b
 10511  004544  0101               	movlb	1	; () banked
 10512  004546  90D8               	bcf	status,0,c
 10513  004548  0101               	movlb	1	; () banked
 10514  00454A  3700               	rlcf	___ftpack@arg& (0+255),f,b
 10515  00454C  0101               	movlb	1	; () banked
 10516  00454E  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10517  004550  0101               	movlb	1	; () banked
 10518  004552  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10519  004554                     l10699:
 10520                           
 10521                           ; BSR set to: 1
 10522  004554  0101               	movlb	1	; () banked
 10523  004556  0101               	movlb	1	; () banked
 10524  004558  AF01               	btfss	(___ftpack@arg+1)& (0+255),7,b
 10525  00455A  D7F1               	goto	l10697
 10526                           
 10527                           ; BSR set to: 1
 10528  00455C  0101               	movlb	1	; () banked
 10529  00455E  0101               	movlb	1	; () banked
 10530  004560  B103               	btfsc	___ftpack@exp& (0+255),0,b
 10531  004562  D003               	goto	l10703
 10532                           
 10533                           ; BSR set to: 1
 10534  004564  0101               	movlb	1	; () banked
 10535  004566  0101               	movlb	1	; () banked
 10536  004568  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10537  00456A                     l10703:
 10538                           
 10539                           ; BSR set to: 1
 10540  00456A  0101               	movlb	1	; () banked
 10541  00456C  90D8               	bcf	status,0,c
 10542  00456E  3303               	rrcf	___ftpack@exp& (0+255),f,b
 10543  004570  0101               	movlb	1	; () banked
 10544  004572  0101               	movlb	1	; () banked
 10545  004574  5103               	movf	___ftpack@exp& (0+255),w,b
 10546  004576  0101               	movlb	1	; () banked
 10547  004578  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10548  00457A  6B06               	clrf	(??___ftpack+1)& (0+255),b
 10549  00457C  6B05               	clrf	??___ftpack& (0+255),b
 10550  00457E  0101               	movlb	1	; () banked
 10551  004580  5105               	movf	??___ftpack& (0+255),w,b
 10552  004582  0101               	movlb	1	; () banked
 10553  004584  0101               	movlb	1	; () banked
 10554  004586  1300               	iorwf	___ftpack@arg& (0+255),f,b
 10555  004588  0101               	movlb	1	; () banked
 10556  00458A  5106               	movf	(??___ftpack+1)& (0+255),w,b
 10557  00458C  0101               	movlb	1	; () banked
 10558  00458E  0101               	movlb	1	; () banked
 10559  004590  1301               	iorwf	(___ftpack@arg+1)& (0+255),f,b
 10560  004592  0101               	movlb	1	; () banked
 10561  004594  5107               	movf	(??___ftpack+2)& (0+255),w,b
 10562  004596  0101               	movlb	1	; () banked
 10563  004598  0101               	movlb	1	; () banked
 10564  00459A  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10565                           
 10566                           ; BSR set to: 1
 10567  00459C  0101               	movlb	1	; () banked
 10568  00459E  0101               	movlb	1	; () banked
 10569  0045A0  5104               	movf	___ftpack@sign& (0+255),w,b
 10570  0045A2  B4D8               	btfsc	status,2,c
 10571  0045A4  D003               	goto	l10709
 10572                           
 10573                           ; BSR set to: 1
 10574  0045A6  0101               	movlb	1	; () banked
 10575  0045A8  0101               	movlb	1	; () banked
 10576  0045AA  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10577  0045AC                     l10709:
 10578                           
 10579                           ; BSR set to: 1
 10580  0045AC  C100  F100         	movff	___ftpack@arg,?___ftpack
 10581  0045B0  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 10582  0045B4  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 10583  0045B8                     l673:
 10584                           
 10585                           ; BSR set to: 1
 10586  0045B8  0012               	return	
 10587  0045BA                     __end_of___ftpack:
 10588                           	opt stack 0
 10589                           tblptru	equ	0xFF8
 10590                           tblptrh	equ	0xFF7
 10591                           tblptrl	equ	0xFF6
 10592                           tablat	equ	0xFF5
 10593                           prodh	equ	0xFF4
 10594                           prodl	equ	0xFF3
 10595                           intcon	equ	0xFF2
 10596                           intcon2	equ	0xFF1
 10597                           postinc0	equ	0xFEE
 10598                           wreg	equ	0xFE8
 10599                           indf2	equ	0xFDF
 10600                           postinc2	equ	0xFDE
 10601                           postdec2	equ	0xFDD
 10602                           fsr2h	equ	0xFDA
 10603                           fsr2l	equ	0xFD9
 10604                           status	equ	0xFD8
 10605                           
 10606 ;; *************** function _Init_AD *****************
 10607 ;; Defined at:
 10608 ;;		line 279 in file "main.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;		None
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;		None
 10613 ;; Return value:  Size  Location     Type
 10614 ;;		None               void
 10615 ;; Registers used:
 10616 ;;		wreg, status,2
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10622 ;;      Params:         0       0       0       0       0       0       0       0       0
 10623 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10624 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10625 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10626 ;;Total ram usage:        0 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:    9
 10629 ;; This function calls:
 10630 ;;		Nothing
 10631 ;; This function is called by:
 10632 ;;		_main
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text32
 10637  0062FC                     __ptext32:
 10638                           	opt stack 0
 10639  0062FC                     _Init_AD:
 10640                           	opt stack 21
 10641                           
 10642                           ;main.c: 280: TRISA0 = 1;
 10643                           
 10644                           ; BSR set to: 1
 10645                           ;incstack = 0
 10646                           ;incstack = 0
 10647  0062FC  8092               	bsf	3986,0,c	;volatile
 10648                           
 10649                           ;main.c: 281: ADCON1 = 0x0e;
 10650  0062FE  0E0E               	movlw	14
 10651  006300  6EC1               	movwf	4033,c	;volatile
 10652                           
 10653                           ;main.c: 282: ADCON2 = 0x92;
 10654  006302  0E92               	movlw	146
 10655  006304  6EC0               	movwf	4032,c	;volatile
 10656                           
 10657                           ;main.c: 283: ADRESH=0;
 10658  006306  0E00               	movlw	0
 10659  006308  6EC4               	movwf	4036,c	;volatile
 10660                           
 10661                           ;main.c: 284: ADRESL=0;
 10662  00630A  0E00               	movlw	0
 10663  00630C  6EC3               	movwf	4035,c	;volatile
 10664  00630E  0012               	return	
 10665  006310                     __end_of_Init_AD:
 10666                           	opt stack 0
 10667                           tblptru	equ	0xFF8
 10668                           tblptrh	equ	0xFF7
 10669                           tblptrl	equ	0xFF6
 10670                           tablat	equ	0xFF5
 10671                           prodh	equ	0xFF4
 10672                           prodl	equ	0xFF3
 10673                           intcon	equ	0xFF2
 10674                           intcon2	equ	0xFF1
 10675                           postinc0	equ	0xFEE
 10676                           wreg	equ	0xFE8
 10677                           indf2	equ	0xFDF
 10678                           postinc2	equ	0xFDE
 10679                           postdec2	equ	0xFDD
 10680                           fsr2h	equ	0xFDA
 10681                           fsr2l	equ	0xFD9
 10682                           status	equ	0xFD8
 10683                           
 10684 ;; *************** function _Timer1_Init *****************
 10685 ;; Defined at:
 10686 ;;		line 236 in file "main.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;		None
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;		None
 10691 ;; Return value:  Size  Location     Type
 10692 ;;		None               void
 10693 ;; Registers used:
 10694 ;;		wreg, status,2
 10695 ;; Tracked objects:
 10696 ;;		On entry : 0/0
 10697 ;;		On exit  : 0/0
 10698 ;;		Unchanged: 0/0
 10699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10700 ;;      Params:         0       0       0       0       0       0       0       0       0
 10701 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10702 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10703 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10704 ;;Total ram usage:        0 bytes
 10705 ;; Hardware stack levels used:    1
 10706 ;; Hardware stack levels required when called:    9
 10707 ;; This function calls:
 10708 ;;		Nothing
 10709 ;; This function is called by:
 10710 ;;		_main
 10711 ;; This function uses a non-reentrant model
 10712 ;;
 10713                           
 10714                           	psect	text33
 10715  006310                     __ptext33:
 10716                           	opt stack 0
 10717  006310                     _Timer1_Init:
 10718                           	opt stack 21
 10719                           
 10720                           ;main.c: 237: T1CONbits.RD16=1;
 10721                           
 10722                           ;incstack = 0
 10723                           ;incstack = 0
 10724  006310  8ECD               	bsf	4045,7,c	;volatile
 10725                           
 10726                           ;main.c: 238: T1CONbits.T1CKPS=0b00;
 10727  006312  0ECF               	movlw	-49
 10728  006314  16CD               	andwf	4045,f,c	;volatile
 10729                           
 10730                           ;main.c: 239: T1CONbits.TMR1CS=0;
 10731  006316  92CD               	bcf	4045,1,c	;volatile
 10732                           
 10733                           ;main.c: 240: TMR1=0;
 10734  006318  0E00               	movlw	0
 10735  00631A  6ECF               	movwf	4047,c	;volatile
 10736  00631C  0E00               	movlw	0
 10737  00631E  6ECE               	movwf	4046,c	;volatile
 10738                           
 10739                           ;main.c: 241: TMR1ON=0;
 10740  006320  90CD               	bcf	4045,0,c	;volatile
 10741  006322  0012               	return	
 10742  006324                     __end_of_Timer1_Init:
 10743                           	opt stack 0
 10744                           tblptru	equ	0xFF8
 10745                           tblptrh	equ	0xFF7
 10746                           tblptrl	equ	0xFF6
 10747                           tablat	equ	0xFF5
 10748                           prodh	equ	0xFF4
 10749                           prodl	equ	0xFF3
 10750                           intcon	equ	0xFF2
 10751                           intcon2	equ	0xFF1
 10752                           postinc0	equ	0xFEE
 10753                           wreg	equ	0xFE8
 10754                           indf2	equ	0xFDF
 10755                           postinc2	equ	0xFDE
 10756                           postdec2	equ	0xFDD
 10757                           fsr2h	equ	0xFDA
 10758                           fsr2l	equ	0xFD9
 10759                           status	equ	0xFD8
 10760                           
 10761 ;; *************** function _Configuracion_Registros *****************
 10762 ;; Defined at:
 10763 ;;		line 225 in file "main.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;		None
 10766 ;; Auto vars:     Size  Location     Type
 10767 ;;		None
 10768 ;; Return value:  Size  Location     Type
 10769 ;;		None               void
 10770 ;; Registers used:
 10771 ;;		wreg, status,2, status,0
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10777 ;;      Params:         0       0       0       0       0       0       0       0       0
 10778 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10779 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10780 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10781 ;;Total ram usage:        0 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:    9
 10784 ;; This function calls:
 10785 ;;		Nothing
 10786 ;; This function is called by:
 10787 ;;		_main
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text34
 10792  006324                     __ptext34:
 10793                           	opt stack 0
 10794  006324                     _Configuracion_Registros:
 10795                           	opt stack 21
 10796                           
 10797                           ;main.c: 226: ADCON1bits.PCFG=0b1111;
 10798                           
 10799                           ;incstack = 0
 10800                           ;incstack = 0
 10801  006324  80C1               	bsf	4033,0,c	;volatile
 10802  006326  82C1               	bsf	4033,1,c	;volatile
 10803  006328  84C1               	bsf	4033,2,c	;volatile
 10804  00632A  86C1               	bsf	4033,3,c	;volatile
 10805                           
 10806                           ;main.c: 227: TRISA&=~(1<<1);
 10807  00632C  9292               	bcf	3986,1,c	;volatile
 10808                           
 10809                           ;main.c: 228: TRISA|=(1<<2);
 10810  00632E  8492               	bsf	3986,2,c	;volatile
 10811                           
 10812                           ;main.c: 230: TRISB = 0;
 10813  006330  0E00               	movlw	0
 10814  006332  6E93               	movwf	3987,c	;volatile
 10815  006334  0012               	return	
 10816  006336                     __end_of_Configuracion_Registros:
 10817                           	opt stack 0
 10818                           tblptru	equ	0xFF8
 10819                           tblptrh	equ	0xFF7
 10820                           tblptrl	equ	0xFF6
 10821                           tablat	equ	0xFF5
 10822                           prodh	equ	0xFF4
 10823                           prodl	equ	0xFF3
 10824                           intcon	equ	0xFF2
 10825                           intcon2	equ	0xFF1
 10826                           postinc0	equ	0xFEE
 10827                           wreg	equ	0xFE8
 10828                           indf2	equ	0xFDF
 10829                           postinc2	equ	0xFDE
 10830                           postdec2	equ	0xFDD
 10831                           fsr2h	equ	0xFDA
 10832                           fsr2l	equ	0xFD9
 10833                           status	equ	0xFD8
 10834                           
 10835 ;; *************** function _lcd_putc *****************
 10836 ;; Defined at:
 10837 ;;		line 135 in file "lcd.h"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;  a               2    4[BANK1 ] PTR unsigned char 
 10840 ;;		 -> LCD_Buffer(32), 
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;  i               2    6[BANK1 ] int 
 10843 ;; Return value:  Size  Location     Type
 10844 ;;		None               void
 10845 ;; Registers used:
 10846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10852 ;;      Params:         0       0       2       0       0       0       0       0       0
 10853 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10855 ;;      Totals:         0       0       4       0       0       0       0       0       0
 10856 ;;Total ram usage:        4 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:   11
 10859 ;; This function calls:
 10860 ;;		_lcd_write_char
 10861 ;; This function is called by:
 10862 ;;		_main
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           	psect	text35
 10867  005BF6                     __ptext35:
 10868                           	opt stack 0
 10869  005BF6                     _lcd_putc:
 10870                           	opt stack 19
 10871                           
 10872                           ;lcd.h: 136: int i;
 10873                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
 10874                           
 10875                           ;incstack = 0
 10876                           ;incstack = 0
 10877  005BF6  0E00               	movlw	0
 10878  005BF8  0101               	movlb	1	; () banked
 10879  005BFA  0101               	movlb	1	; () banked
 10880  005BFC  6F07               	movwf	(lcd_putc@i+1)& (0+255),b
 10881  005BFE  0E00               	movlw	0
 10882  005C00  0101               	movlb	1	; () banked
 10883  005C02  6F06               	movwf	lcd_putc@i& (0+255),b
 10884  005C04  D018               	goto	l10055
 10885  005C06                     l10051:
 10886                           
 10887                           ; BSR set to: 1
 10888                           ;lcd.h: 138: lcd_write_char(a[i]);
 10889  005C06  0101               	movlb	1	; () banked
 10890  005C08  0101               	movlb	1	; () banked
 10891  005C0A  5106               	movf	lcd_putc@i& (0+255),w,b
 10892  005C0C  0101               	movlb	1	; () banked
 10893  005C0E  0101               	movlb	1	; () banked
 10894  005C10  2504               	addwf	lcd_putc@a& (0+255),w,b
 10895  005C12  6ED9               	movwf	fsr2l,c
 10896  005C14  0101               	movlb	1	; () banked
 10897  005C16  0101               	movlb	1	; () banked
 10898  005C18  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
 10899  005C1A  0101               	movlb	1	; () banked
 10900  005C1C  0101               	movlb	1	; () banked
 10901  005C1E  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
 10902  005C20  6EDA               	movwf	fsr2h,c
 10903  005C22  50DF               	movf	indf2,w,c
 10904  005C24  0101               	movlb	1	; () banked
 10905  005C26  0101               	movlb	1	; () banked
 10906  005C28  6F01               	movwf	?_lcd_write_char& (0+255),b
 10907  005C2A  ECE6  F02E         	call	_lcd_write_char	;wreg free
 10908  005C2E  0101               	movlb	1	; () banked
 10909  005C30  0101               	movlb	1	; () banked
 10910  005C32  4B06               	infsnz	lcd_putc@i& (0+255),f,b
 10911  005C34  2B07               	incf	(lcd_putc@i+1)& (0+255),f,b
 10912  005C36                     l10055:
 10913                           
 10914                           ; BSR set to: 1
 10915  005C36  0101               	movlb	1	; () banked
 10916  005C38  0101               	movlb	1	; () banked
 10917  005C3A  5106               	movf	lcd_putc@i& (0+255),w,b
 10918  005C3C  0101               	movlb	1	; () banked
 10919  005C3E  0101               	movlb	1	; () banked
 10920  005C40  2504               	addwf	lcd_putc@a& (0+255),w,b
 10921  005C42  6ED9               	movwf	fsr2l,c
 10922  005C44  0101               	movlb	1	; () banked
 10923  005C46  0101               	movlb	1	; () banked
 10924  005C48  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
 10925  005C4A  0101               	movlb	1	; () banked
 10926  005C4C  0101               	movlb	1	; () banked
 10927  005C4E  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
 10928  005C50  6EDA               	movwf	fsr2h,c
 10929  005C52  50DF               	movf	indf2,w,c
 10930  005C54  B4D8               	btfsc	status,2,c
 10931                           
 10932                           ; BSR set to: 1
 10933                           
 10934                           ; BSR set to: 1
 10935  005C56  0012               	return	
 10936  005C58  D7D6               	goto	l10051
 10937  005C5A                     __end_of_lcd_putc:
 10938                           	opt stack 0
 10939                           tblptru	equ	0xFF8
 10940                           tblptrh	equ	0xFF7
 10941                           tblptrl	equ	0xFF6
 10942                           tablat	equ	0xFF5
 10943                           prodh	equ	0xFF4
 10944                           prodl	equ	0xFF3
 10945                           intcon	equ	0xFF2
 10946                           intcon2	equ	0xFF1
 10947                           postinc0	equ	0xFEE
 10948                           wreg	equ	0xFE8
 10949                           indf2	equ	0xFDF
 10950                           postinc2	equ	0xFDE
 10951                           postdec2	equ	0xFDD
 10952                           fsr2h	equ	0xFDA
 10953                           fsr2l	equ	0xFD9
 10954                           status	equ	0xFD8
 10955                           
 10956 ;; *************** function _lcd_write_char *****************
 10957 ;; Defined at:
 10958 ;;		line 117 in file "lcd.h"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  a               1    1[BANK1 ] unsigned char 
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;  y               1    3[BANK1 ] unsigned char 
 10963 ;;  temp            1    2[BANK1 ] unsigned char 
 10964 ;; Return value:  Size  Location     Type
 10965 ;;		None               void
 10966 ;; Registers used:
 10967 ;;		wreg, status,2, status,0, cstack
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10973 ;;      Params:         0       0       1       0       0       0       0       0       0
 10974 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10975 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10976 ;;      Totals:         0       0       3       0       0       0       0       0       0
 10977 ;;Total ram usage:        3 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:   10
 10980 ;; This function calls:
 10981 ;;		_Lcd_Port
 10982 ;; This function is called by:
 10983 ;;		_lcd_putc
 10984 ;; This function uses a non-reentrant model
 10985 ;;
 10986                           
 10987                           	psect	text36
 10988  005DCC                     __ptext36:
 10989                           	opt stack 0
 10990  005DCC                     _lcd_write_char:
 10991                           	opt stack 19
 10992                           
 10993                           ;lcd.h: 118: char temp,y;
 10994                           ;lcd.h: 119: temp = a&0x0F;
 10995                           
 10996                           ; BSR set to: 1
 10997                           ;incstack = 0
 10998                           ;incstack = 0
 10999  005DCC  0101               	movlb	1	; () banked
 11000  005DCE  0101               	movlb	1	; () banked
 11001  005DD0  5101               	movf	lcd_write_char@a& (0+255),w,b
 11002  005DD2  0B0F               	andlw	15
 11003  005DD4  0101               	movlb	1	; () banked
 11004  005DD6  0101               	movlb	1	; () banked
 11005  005DD8  6F02               	movwf	lcd_write_char@temp& (0+255),b
 11006                           
 11007                           ;lcd.h: 120: y = a&0xF0;
 11008  005DDA  0101               	movlb	1	; () banked
 11009  005DDC  0101               	movlb	1	; () banked
 11010  005DDE  5101               	movf	lcd_write_char@a& (0+255),w,b
 11011  005DE0  0BF0               	andlw	240
 11012  005DE2  0101               	movlb	1	; () banked
 11013  005DE4  0101               	movlb	1	; () banked
 11014  005DE6  6F03               	movwf	lcd_write_char@y& (0+255),b
 11015                           
 11016                           ; BSR set to: 1
 11017                           ;lcd.h: 121: RD2 = 1;
 11018  005DE8  8483               	bsf	3971,2,c	;volatile
 11019                           
 11020                           ; BSR set to: 1
 11021                           ;lcd.h: 122: Lcd_Port(y>>4);
 11022  005DEA  0101               	movlb	1	; () banked
 11023  005DEC  0101               	movlb	1	; () banked
 11024  005DEE  3903               	swapf	lcd_write_char@y& (0+255),w,b
 11025  005DF0  0B0F               	andlw	15
 11026  005DF2  0101               	movlb	1	; () banked
 11027  005DF4  0101               	movlb	1	; () banked
 11028  005DF6  6F00               	movwf	?_Lcd_Port& (0+255),b
 11029  005DF8  EC6E  F030         	call	_Lcd_Port	;wreg free
 11030                           
 11031                           ;lcd.h: 123: RD3 = 1;
 11032  005DFC  8683               	bsf	3971,3,c	;volatile
 11033                           
 11034                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
 11035  005DFE  0E1A               	movlw	26
 11036  005E00                     u11117:
 11037  005E00  2EE8               	decfsz	wreg,f,c
 11038  005E02  D7FE               	goto	u11117
 11039  005E04  D000               	nop2		;nop
 11040                           
 11041                           ;lcd.h: 125: RD3 = 0;
 11042  005E06  9683               	bcf	3971,3,c	;volatile
 11043                           
 11044                           ;lcd.h: 126: Lcd_Port(temp);
 11045  005E08  C102  F100         	movff	lcd_write_char@temp,?_Lcd_Port
 11046  005E0C  EC6E  F030         	call	_Lcd_Port	;wreg free
 11047                           
 11048                           ;lcd.h: 127: RD3 = 1;
 11049  005E10  8683               	bsf	3971,3,c	;volatile
 11050                           
 11051                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
 11052  005E12  0E1A               	movlw	26
 11053  005E14                     u11127:
 11054  005E14  2EE8               	decfsz	wreg,f,c
 11055  005E16  D7FE               	goto	u11127
 11056  005E18  D000               	nop2		;nop
 11057                           
 11058                           ;lcd.h: 129: RD3 = 0;
 11059  005E1A  9683               	bcf	3971,3,c	;volatile
 11060  005E1C  0012               	return	
 11061  005E1E                     __end_of_lcd_write_char:
 11062                           	opt stack 0
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           intcon2	equ	0xFF1
 11071                           postinc0	equ	0xFEE
 11072                           wreg	equ	0xFE8
 11073                           indf2	equ	0xFDF
 11074                           postinc2	equ	0xFDE
 11075                           postdec2	equ	0xFDD
 11076                           fsr2h	equ	0xFDA
 11077                           fsr2l	equ	0xFD9
 11078                           status	equ	0xFD8
 11079                           
 11080 ;; *************** function _lcd_init *****************
 11081 ;; Defined at:
 11082 ;;		line 95 in file "lcd.h"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;		None
 11085 ;; Auto vars:     Size  Location     Type
 11086 ;;		None
 11087 ;; Return value:  Size  Location     Type
 11088 ;;		None               void
 11089 ;; Registers used:
 11090 ;;		wreg, status,2, cstack
 11091 ;; Tracked objects:
 11092 ;;		On entry : 0/0
 11093 ;;		On exit  : 0/0
 11094 ;;		Unchanged: 0/0
 11095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11096 ;;      Params:         0       0       0       0       0       0       0       0       0
 11097 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11098 ;;      Temps:          0       0       1       0       0       0       0       0       0
 11099 ;;      Totals:         0       0       1       0       0       0       0       0       0
 11100 ;;Total ram usage:        1 bytes
 11101 ;; Hardware stack levels used:    1
 11102 ;; Hardware stack levels required when called:   11
 11103 ;; This function calls:
 11104 ;;		_Lcd_Port
 11105 ;;		_Lcd_Cmd
 11106 ;; This function is called by:
 11107 ;;		_main
 11108 ;; This function uses a non-reentrant model
 11109 ;;
 11110                           
 11111                           	psect	text37
 11112  0047F2                     __ptext37:
 11113                           	opt stack 0
 11114  0047F2                     _lcd_init:
 11115                           	opt stack 19
 11116                           
 11117                           ;lcd.h: 96: TRISD=0x00;
 11118                           
 11119                           ;incstack = 0
 11120                           ;incstack = 0
 11121  0047F2  0E00               	movlw	0
 11122  0047F4  6E95               	movwf	3989,c	;volatile
 11123                           
 11124                           ;lcd.h: 97: Lcd_Port(0x00);
 11125  0047F6  0101               	movlb	1	; () banked
 11126  0047F8  6F03               	movwf	??_lcd_init& (0+255),b
 11127  0047FA  0E00               	movlw	0
 11128  0047FC  0101               	movlb	1	; () banked
 11129  0047FE  0101               	movlb	1	; () banked
 11130  004800  6F00               	movwf	?_Lcd_Port& (0+255),b
 11131  004802  0101               	movlb	1	; () banked
 11132  004804  5103               	movf	??_lcd_init& (0+255),w,b
 11133  004806  EC6E  F030         	call	_Lcd_Port	;wreg free
 11134                           
 11135                           ;lcd.h: 98: _delay((unsigned long)((20)*(8000000/4000.0)));
 11136  00480A  0E34               	movlw	52
 11137  00480C  0101               	movlb	1	; () banked
 11138  00480E  6F03               	movwf	??_lcd_init& (0+255),b
 11139  004810  0EF1               	movlw	241
 11140  004812                     u11137:
 11141  004812  2EE8               	decfsz	wreg,f,c
 11142  004814  D7FE               	goto	u11137
 11143  004816  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11144  004818  D7FC               	goto	u11137
 11145  00481A  D000               	nop2	
 11146                           
 11147                           ;lcd.h: 99: Lcd_Cmd(0x03);
 11148  00481C  0101               	movlb	1	; () banked
 11149  00481E  6F03               	movwf	??_lcd_init& (0+255),b
 11150  004820  0E03               	movlw	3
 11151  004822  0101               	movlb	1	; () banked
 11152  004824  0101               	movlb	1	; () banked
 11153  004826  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11154  004828  0101               	movlb	1	; () banked
 11155  00482A  5103               	movf	??_lcd_init& (0+255),w,b
 11156  00482C  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11157                           
 11158                           ;lcd.h: 100: _delay((unsigned long)((5)*(8000000/4000.0)));
 11159  004830  0E0D               	movlw	13
 11160  004832  0101               	movlb	1	; () banked
 11161  004834  6F03               	movwf	??_lcd_init& (0+255),b
 11162  004836  0EFB               	movlw	251
 11163  004838                     u11147:
 11164  004838  2EE8               	decfsz	wreg,f,c
 11165  00483A  D7FE               	goto	u11147
 11166  00483C  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11167  00483E  D7FC               	goto	u11147
 11168  004840  D000               	nop2	
 11169                           
 11170                           ;lcd.h: 101: Lcd_Cmd(0x03);
 11171  004842  0101               	movlb	1	; () banked
 11172  004844  6F03               	movwf	??_lcd_init& (0+255),b
 11173  004846  0E03               	movlw	3
 11174  004848  0101               	movlb	1	; () banked
 11175  00484A  0101               	movlb	1	; () banked
 11176  00484C  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11177  00484E  0101               	movlb	1	; () banked
 11178  004850  5103               	movf	??_lcd_init& (0+255),w,b
 11179  004852  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11180                           
 11181                           ;lcd.h: 102: _delay((unsigned long)((11)*(8000000/4000.0)));
 11182  004856  0E1D               	movlw	29
 11183  004858  0101               	movlb	1	; () banked
 11184  00485A  6F03               	movwf	??_lcd_init& (0+255),b
 11185  00485C  0E91               	movlw	145
 11186  00485E                     u11157:
 11187  00485E  2EE8               	decfsz	wreg,f,c
 11188  004860  D7FE               	goto	u11157
 11189  004862  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11190  004864  D7FC               	goto	u11157
 11191                           
 11192                           ;lcd.h: 103: Lcd_Cmd(0x03);
 11193  004866  0101               	movlb	1	; () banked
 11194  004868  6F03               	movwf	??_lcd_init& (0+255),b
 11195  00486A  0E03               	movlw	3
 11196  00486C  0101               	movlb	1	; () banked
 11197  00486E  0101               	movlb	1	; () banked
 11198  004870  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11199  004872  0101               	movlb	1	; () banked
 11200  004874  5103               	movf	??_lcd_init& (0+255),w,b
 11201  004876  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11202                           
 11203                           ;lcd.h: 105: Lcd_Cmd(0x02);
 11204  00487A  0101               	movlb	1	; () banked
 11205  00487C  6F03               	movwf	??_lcd_init& (0+255),b
 11206  00487E  0E02               	movlw	2
 11207  004880  0101               	movlb	1	; () banked
 11208  004882  0101               	movlb	1	; () banked
 11209  004884  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11210  004886  0101               	movlb	1	; () banked
 11211  004888  5103               	movf	??_lcd_init& (0+255),w,b
 11212  00488A  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11213                           
 11214                           ;lcd.h: 106: Lcd_Cmd(0x02);
 11215  00488E  0101               	movlb	1	; () banked
 11216  004890  6F03               	movwf	??_lcd_init& (0+255),b
 11217  004892  0E02               	movlw	2
 11218  004894  0101               	movlb	1	; () banked
 11219  004896  0101               	movlb	1	; () banked
 11220  004898  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11221  00489A  0101               	movlb	1	; () banked
 11222  00489C  5103               	movf	??_lcd_init& (0+255),w,b
 11223  00489E  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11224                           
 11225                           ;lcd.h: 107: Lcd_Cmd(0x08);
 11226  0048A2  0101               	movlb	1	; () banked
 11227  0048A4  6F03               	movwf	??_lcd_init& (0+255),b
 11228  0048A6  0E08               	movlw	8
 11229  0048A8  0101               	movlb	1	; () banked
 11230  0048AA  0101               	movlb	1	; () banked
 11231  0048AC  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11232  0048AE  0101               	movlb	1	; () banked
 11233  0048B0  5103               	movf	??_lcd_init& (0+255),w,b
 11234  0048B2  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11235                           
 11236                           ;lcd.h: 108: Lcd_Cmd(0x00);
 11237  0048B6  0101               	movlb	1	; () banked
 11238  0048B8  6F03               	movwf	??_lcd_init& (0+255),b
 11239  0048BA  0E00               	movlw	0
 11240  0048BC  0101               	movlb	1	; () banked
 11241  0048BE  0101               	movlb	1	; () banked
 11242  0048C0  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11243  0048C2  0101               	movlb	1	; () banked
 11244  0048C4  5103               	movf	??_lcd_init& (0+255),w,b
 11245  0048C6  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11246                           
 11247                           ;lcd.h: 109: Lcd_Cmd(0x0C);
 11248  0048CA  0101               	movlb	1	; () banked
 11249  0048CC  6F03               	movwf	??_lcd_init& (0+255),b
 11250  0048CE  0E0C               	movlw	12
 11251  0048D0  0101               	movlb	1	; () banked
 11252  0048D2  0101               	movlb	1	; () banked
 11253  0048D4  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11254  0048D6  0101               	movlb	1	; () banked
 11255  0048D8  5103               	movf	??_lcd_init& (0+255),w,b
 11256  0048DA  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11257                           
 11258                           ;lcd.h: 110: Lcd_Cmd(0x00);
 11259  0048DE  0101               	movlb	1	; () banked
 11260  0048E0  6F03               	movwf	??_lcd_init& (0+255),b
 11261  0048E2  0E00               	movlw	0
 11262  0048E4  0101               	movlb	1	; () banked
 11263  0048E6  0101               	movlb	1	; () banked
 11264  0048E8  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11265  0048EA  0101               	movlb	1	; () banked
 11266  0048EC  5103               	movf	??_lcd_init& (0+255),w,b
 11267  0048EE  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11268                           
 11269                           ;lcd.h: 111: Lcd_Cmd(0x06);
 11270  0048F2  0101               	movlb	1	; () banked
 11271  0048F4  6F03               	movwf	??_lcd_init& (0+255),b
 11272  0048F6  0E06               	movlw	6
 11273  0048F8  0101               	movlb	1	; () banked
 11274  0048FA  0101               	movlb	1	; () banked
 11275  0048FC  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11276  0048FE  0101               	movlb	1	; () banked
 11277  004900  5103               	movf	??_lcd_init& (0+255),w,b
 11278  004902  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11279  004906  0012               	return	
 11280  004908                     __end_of_lcd_init:
 11281                           	opt stack 0
 11282                           tblptru	equ	0xFF8
 11283                           tblptrh	equ	0xFF7
 11284                           tblptrl	equ	0xFF6
 11285                           tablat	equ	0xFF5
 11286                           prodh	equ	0xFF4
 11287                           prodl	equ	0xFF3
 11288                           intcon	equ	0xFF2
 11289                           intcon2	equ	0xFF1
 11290                           postinc0	equ	0xFEE
 11291                           wreg	equ	0xFE8
 11292                           indf2	equ	0xFDF
 11293                           postinc2	equ	0xFDE
 11294                           postdec2	equ	0xFDD
 11295                           fsr2h	equ	0xFDA
 11296                           fsr2l	equ	0xFD9
 11297                           status	equ	0xFD8
 11298                           
 11299 ;; *************** function _lcd_gotoxy *****************
 11300 ;; Defined at:
 11301 ;;		line 72 in file "lcd.h"
 11302 ;; Parameters:    Size  Location     Type
 11303 ;;  a               1    3[BANK1 ] unsigned char 
 11304 ;;  b               1    4[BANK1 ] unsigned char 
 11305 ;; Auto vars:     Size  Location     Type
 11306 ;;  temp            1    7[BANK1 ] unsigned char 
 11307 ;;  y               1    6[BANK1 ] unsigned char 
 11308 ;;  z               1    5[BANK1 ] unsigned char 
 11309 ;; Return value:  Size  Location     Type
 11310 ;;		None               void
 11311 ;; Registers used:
 11312 ;;		wreg, status,2, status,0, cstack
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11318 ;;      Params:         0       0       2       0       0       0       0       0       0
 11319 ;;      Locals:         0       0       3       0       0       0       0       0       0
 11320 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11321 ;;      Totals:         0       0       5       0       0       0       0       0       0
 11322 ;;Total ram usage:        5 bytes
 11323 ;; Hardware stack levels used:    1
 11324 ;; Hardware stack levels required when called:   11
 11325 ;; This function calls:
 11326 ;;		_Lcd_Cmd
 11327 ;; This function is called by:
 11328 ;;		_main
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           	psect	text38
 11333  005800                     __ptext38:
 11334                           	opt stack 0
 11335  005800                     _lcd_gotoxy:
 11336                           	opt stack 19
 11337                           
 11338                           ;lcd.h: 73: char temp,z,y;
 11339                           ;lcd.h: 74: if(a == 1)
 11340                           
 11341                           ;incstack = 0
 11342                           ;incstack = 0
 11343  005800  0101               	movlb	1	; () banked
 11344  005802  0101               	movlb	1	; () banked
 11345  005804  0503               	decf	lcd_gotoxy@a& (0+255),w,b
 11346  005806  A4D8               	btfss	status,2,c
 11347  005808  D01E               	goto	l9993
 11348                           
 11349                           ; BSR set to: 1
 11350                           ;lcd.h: 75: {
 11351                           ;lcd.h: 76: temp = 0x80 + b - 1;
 11352  00580A  0101               	movlb	1	; () banked
 11353  00580C  0101               	movlb	1	; () banked
 11354  00580E  5104               	movf	lcd_gotoxy@b& (0+255),w,b
 11355  005810  0F7F               	addlw	127
 11356  005812  0101               	movlb	1	; () banked
 11357  005814  0101               	movlb	1	; () banked
 11358  005816  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
 11359                           
 11360                           ;lcd.h: 77: z = temp>>4;
 11361  005818  0101               	movlb	1	; () banked
 11362  00581A  0101               	movlb	1	; () banked
 11363  00581C  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
 11364  00581E  0B0F               	andlw	15
 11365  005820  0101               	movlb	1	; () banked
 11366  005822  0101               	movlb	1	; () banked
 11367  005824  6F05               	movwf	lcd_gotoxy@z& (0+255),b
 11368                           
 11369                           ;lcd.h: 78: y = temp & 0x0F;
 11370  005826  0101               	movlb	1	; () banked
 11371  005828  0101               	movlb	1	; () banked
 11372  00582A  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
 11373  00582C  0B0F               	andlw	15
 11374  00582E  0101               	movlb	1	; () banked
 11375  005830  0101               	movlb	1	; () banked
 11376  005832  6F06               	movwf	lcd_gotoxy@y& (0+255),b
 11377                           
 11378                           ; BSR set to: 1
 11379                           ;lcd.h: 79: Lcd_Cmd(z);
 11380  005834  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
 11381  005838  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11382                           
 11383                           ;lcd.h: 80: Lcd_Cmd(y);
 11384  00583C  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
 11385  005840  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11386                           
 11387                           ;lcd.h: 81: }
 11388  005844  D023               	goto	l121
 11389  005846                     l9993:
 11390                           
 11391                           ;lcd.h: 82: else if(a == 2)
 11392  005846  0101               	movlb	1	; () banked
 11393  005848  0101               	movlb	1	; () banked
 11394  00584A  5103               	movf	lcd_gotoxy@a& (0+255),w,b
 11395  00584C  0A02               	xorlw	2
 11396  00584E  A4D8               	btfss	status,2,c
 11397  005850  D01D               	goto	l121
 11398                           
 11399                           ; BSR set to: 1
 11400                           ;lcd.h: 83: {
 11401                           ;lcd.h: 84: temp = 0xC0 + b - 1;
 11402  005852  0101               	movlb	1	; () banked
 11403  005854  0101               	movlb	1	; () banked
 11404  005856  5104               	movf	lcd_gotoxy@b& (0+255),w,b
 11405  005858  0FBF               	addlw	191
 11406  00585A  0101               	movlb	1	; () banked
 11407  00585C  0101               	movlb	1	; () banked
 11408  00585E  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
 11409                           
 11410                           ;lcd.h: 85: z = temp>>4;
 11411  005860  0101               	movlb	1	; () banked
 11412  005862  0101               	movlb	1	; () banked
 11413  005864  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
 11414  005866  0B0F               	andlw	15
 11415  005868  0101               	movlb	1	; () banked
 11416  00586A  0101               	movlb	1	; () banked
 11417  00586C  6F05               	movwf	lcd_gotoxy@z& (0+255),b
 11418                           
 11419                           ;lcd.h: 86: y = temp & 0x0F;
 11420  00586E  0101               	movlb	1	; () banked
 11421  005870  0101               	movlb	1	; () banked
 11422  005872  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
 11423  005874  0B0F               	andlw	15
 11424  005876  0101               	movlb	1	; () banked
 11425  005878  0101               	movlb	1	; () banked
 11426  00587A  6F06               	movwf	lcd_gotoxy@y& (0+255),b
 11427                           
 11428                           ; BSR set to: 1
 11429                           ;lcd.h: 87: Lcd_Cmd(z);
 11430  00587C  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
 11431  005880  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11432                           
 11433                           ;lcd.h: 88: Lcd_Cmd(y);
 11434  005884  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
 11435  005888  EC46  F031         	call	_Lcd_Cmd	;wreg free
 11436  00588C                     l121:
 11437  00588C  0012               	return	
 11438  00588E                     __end_of_lcd_gotoxy:
 11439                           	opt stack 0
 11440                           tblptru	equ	0xFF8
 11441                           tblptrh	equ	0xFF7
 11442                           tblptrl	equ	0xFF6
 11443                           tablat	equ	0xFF5
 11444                           prodh	equ	0xFF4
 11445                           prodl	equ	0xFF3
 11446                           intcon	equ	0xFF2
 11447                           intcon2	equ	0xFF1
 11448                           postinc0	equ	0xFEE
 11449                           wreg	equ	0xFE8
 11450                           indf2	equ	0xFDF
 11451                           postinc2	equ	0xFDE
 11452                           postdec2	equ	0xFDD
 11453                           fsr2h	equ	0xFDA
 11454                           fsr2l	equ	0xFD9
 11455                           status	equ	0xFD8
 11456                           
 11457 ;; *************** function _Lcd_Cmd *****************
 11458 ;; Defined at:
 11459 ;;		line 53 in file "lcd.h"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;  a               1    1[BANK1 ] unsigned char 
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;		None
 11464 ;; Return value:  Size  Location     Type
 11465 ;;		None               void
 11466 ;; Registers used:
 11467 ;;		wreg, cstack
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11473 ;;      Params:         0       0       1       0       0       0       0       0       0
 11474 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11475 ;;      Temps:          0       0       1       0       0       0       0       0       0
 11476 ;;      Totals:         0       0       2       0       0       0       0       0       0
 11477 ;;Total ram usage:        2 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; Hardware stack levels required when called:   10
 11480 ;; This function calls:
 11481 ;;		_Lcd_Port
 11482 ;; This function is called by:
 11483 ;;		_lcd_gotoxy
 11484 ;;		_lcd_init
 11485 ;;		_lcd_clear
 11486 ;;		_lcd_shift_right
 11487 ;;		_lcd_shift_left
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           	psect	text39
 11492  00628C                     __ptext39:
 11493                           	opt stack 0
 11494  00628C                     _Lcd_Cmd:
 11495                           	opt stack 19
 11496                           
 11497                           ;lcd.h: 54: RD2 = 0;
 11498                           
 11499                           ;incstack = 0
 11500                           ;incstack = 0
 11501  00628C  9483               	bcf	3971,2,c	;volatile
 11502                           
 11503                           ;lcd.h: 55: Lcd_Port(a);
 11504  00628E  C101  F100         	movff	Lcd_Cmd@a,?_Lcd_Port
 11505  006292  EC6E  F030         	call	_Lcd_Port	;wreg free
 11506                           
 11507                           ;lcd.h: 56: RD3 = 1;
 11508  006296  8683               	bsf	3971,3,c	;volatile
 11509                           
 11510                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 11511  006298  0E0B               	movlw	11
 11512  00629A  0101               	movlb	1	; () banked
 11513  00629C  6F02               	movwf	??_Lcd_Cmd& (0+255),b
 11514  00629E  0E62               	movlw	98
 11515  0062A0                     u11167:
 11516  0062A0  2EE8               	decfsz	wreg,f,c
 11517  0062A2  D7FE               	goto	u11167
 11518  0062A4  2F02               	decfsz	??_Lcd_Cmd& (0+255),f,b
 11519  0062A6  D7FC               	goto	u11167
 11520  0062A8  F000               	nop	
 11521                           
 11522                           ;lcd.h: 58: RD3 = 0;
 11523  0062AA  9683               	bcf	3971,3,c	;volatile
 11524  0062AC  0012               	return	
 11525  0062AE                     __end_of_Lcd_Cmd:
 11526                           	opt stack 0
 11527                           tblptru	equ	0xFF8
 11528                           tblptrh	equ	0xFF7
 11529                           tblptrl	equ	0xFF6
 11530                           tablat	equ	0xFF5
 11531                           prodh	equ	0xFF4
 11532                           prodl	equ	0xFF3
 11533                           intcon	equ	0xFF2
 11534                           intcon2	equ	0xFF1
 11535                           postinc0	equ	0xFEE
 11536                           wreg	equ	0xFE8
 11537                           indf2	equ	0xFDF
 11538                           postinc2	equ	0xFDE
 11539                           postdec2	equ	0xFDD
 11540                           fsr2h	equ	0xFDA
 11541                           fsr2l	equ	0xFD9
 11542                           status	equ	0xFD8
 11543                           
 11544 ;; *************** function _Lcd_Port *****************
 11545 ;; Defined at:
 11546 ;;		line 28 in file "lcd.h"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  a               1    0[BANK1 ] unsigned char 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;		None
 11551 ;; Return value:  Size  Location     Type
 11552 ;;		None               void
 11553 ;; Registers used:
 11554 ;;		None
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11560 ;;      Params:         0       0       1       0       0       0       0       0       0
 11561 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11562 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11563 ;;      Totals:         0       0       1       0       0       0       0       0       0
 11564 ;;Total ram usage:        1 bytes
 11565 ;; Hardware stack levels used:    1
 11566 ;; Hardware stack levels required when called:    9
 11567 ;; This function calls:
 11568 ;;		Nothing
 11569 ;; This function is called by:
 11570 ;;		_Lcd_Cmd
 11571 ;;		_lcd_init
 11572 ;;		_lcd_write_char
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           	psect	text40
 11577  0060DC                     __ptext40:
 11578                           	opt stack 0
 11579  0060DC                     _Lcd_Port:
 11580                           	opt stack 19
 11581                           
 11582                           ;lcd.h: 29: if(a & 1)
 11583                           
 11584                           ;incstack = 0
 11585                           ;incstack = 0
 11586  0060DC  0101               	movlb	1	; () banked
 11587  0060DE  0101               	movlb	1	; () banked
 11588  0060E0  A100               	btfss	Lcd_Port@a& (0+255),0,b
 11589  0060E2  D002               	goto	l101
 11590                           
 11591                           ; BSR set to: 1
 11592                           ;lcd.h: 30: RD4 = 1;
 11593  0060E4  8883               	bsf	3971,4,c	;volatile
 11594  0060E6  D001               	goto	l102
 11595  0060E8                     l101:
 11596                           
 11597                           ; BSR set to: 1
 11598                           ;lcd.h: 31: else
 11599                           ;lcd.h: 32: RD4 = 0;
 11600  0060E8  9883               	bcf	3971,4,c	;volatile
 11601  0060EA                     l102:
 11602                           
 11603                           ; BSR set to: 1
 11604                           ;lcd.h: 34: if(a & 2)
 11605  0060EA  0101               	movlb	1	; () banked
 11606  0060EC  0101               	movlb	1	; () banked
 11607  0060EE  A300               	btfss	Lcd_Port@a& (0+255),1,b
 11608  0060F0  D002               	goto	l103
 11609                           
 11610                           ; BSR set to: 1
 11611                           ;lcd.h: 35: RD5 = 1;
 11612  0060F2  8A83               	bsf	3971,5,c	;volatile
 11613  0060F4  D001               	goto	l104
 11614  0060F6                     l103:
 11615                           
 11616                           ; BSR set to: 1
 11617                           ;lcd.h: 36: else
 11618                           ;lcd.h: 37: RD5 = 0;
 11619  0060F6  9A83               	bcf	3971,5,c	;volatile
 11620  0060F8                     l104:
 11621                           
 11622                           ; BSR set to: 1
 11623                           ;lcd.h: 39: if(a & 4)
 11624  0060F8  0101               	movlb	1	; () banked
 11625  0060FA  0101               	movlb	1	; () banked
 11626  0060FC  A500               	btfss	Lcd_Port@a& (0+255),2,b
 11627  0060FE  D002               	goto	l105
 11628                           
 11629                           ; BSR set to: 1
 11630                           ;lcd.h: 40: RD6 = 1;
 11631  006100  8C83               	bsf	3971,6,c	;volatile
 11632  006102  D001               	goto	l106
 11633  006104                     l105:
 11634                           
 11635                           ; BSR set to: 1
 11636                           ;lcd.h: 41: else
 11637                           ;lcd.h: 42: RD6 = 0;
 11638  006104  9C83               	bcf	3971,6,c	;volatile
 11639  006106                     l106:
 11640                           
 11641                           ; BSR set to: 1
 11642                           ;lcd.h: 44: if(a & 8)
 11643  006106  0101               	movlb	1	; () banked
 11644  006108  0101               	movlb	1	; () banked
 11645  00610A  A700               	btfss	Lcd_Port@a& (0+255),3,b
 11646  00610C  D002               	goto	l107
 11647                           
 11648                           ; BSR set to: 1
 11649                           ;lcd.h: 45: RD7 = 1;
 11650  00610E  8E83               	bsf	3971,7,c	;volatile
 11651  006110  D001               	goto	l109
 11652  006112                     l107:
 11653                           
 11654                           ; BSR set to: 1
 11655                           ;lcd.h: 46: else
 11656                           ;lcd.h: 47: RD7 = 0;
 11657  006112  9E83               	bcf	3971,7,c	;volatile
 11658  006114                     l109:
 11659                           
 11660                           ; BSR set to: 1
 11661  006114  0012               	return	
 11662  006116                     __end_of_Lcd_Port:
 11663                           	opt stack 0
 11664                           tblptru	equ	0xFF8
 11665                           tblptrh	equ	0xFF7
 11666                           tblptrl	equ	0xFF6
 11667                           tablat	equ	0xFF5
 11668                           prodh	equ	0xFF4
 11669                           prodl	equ	0xFF3
 11670                           intcon	equ	0xFF2
 11671                           intcon2	equ	0xFF1
 11672                           postinc0	equ	0xFEE
 11673                           wreg	equ	0xFE8
 11674                           indf2	equ	0xFDF
 11675                           postinc2	equ	0xFDE
 11676                           postdec2	equ	0xFDD
 11677                           fsr2h	equ	0xFDA
 11678                           fsr2l	equ	0xFD9
 11679                           status	equ	0xFD8
 11680                           
 11681 ;; *************** function _interrupcaoLOW *****************
 11682 ;; Defined at:
 11683 ;;		line 188 in file "main.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;		None
 11688 ;; Return value:  Size  Location     Type
 11689 ;;		None               void
 11690 ;; Registers used:
 11691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0
 11698 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11699 ;;      Temps:          0      19       0       0       0       0       0       0       0
 11700 ;;      Totals:         0      19       0       0       0       0       0       0       0
 11701 ;;Total ram usage:       19 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    8
 11704 ;; This function calls:
 11705 ;;		i1_lcd_gotoxy
 11706 ;;		i1_lcd_putc
 11707 ;;		i1_Obtener_Distancia
 11708 ;;		i1_Read_LDR
 11709 ;;		i1_sprintf
 11710 ;; This function is called by:
 11711 ;;		Interrupt level 1
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	intcodelo
 11716  000018                     __pintcodelo:
 11717                           	opt stack 0
 11718  000018                     _interrupcaoLOW:
 11719                           	opt stack 17
 11720                           
 11721                           ; BSR set to: 1
 11722                           ;incstack = 0
 11723  000018  CFD8 F0A1          	movff	status,??_interrupcaoLOW+2
 11724  00001C  CFE8 F0A2          	movff	wreg,??_interrupcaoLOW+3
 11725  000020  CFE0 F0A3          	movff	bsr,??_interrupcaoLOW+4
 11726  000024  CFFA F0A4          	movff	pclath,??_interrupcaoLOW+5
 11727  000028  CFFB F0A5          	movff	pclatu,??_interrupcaoLOW+6
 11728  00002C  CFE9 F0A6          	movff	fsr0l,??_interrupcaoLOW+7
 11729  000030  CFEA F0A7          	movff	fsr0h,??_interrupcaoLOW+8
 11730  000034  CFE1 F0A8          	movff	fsr1l,??_interrupcaoLOW+9
 11731  000038  CFE2 F0A9          	movff	fsr1h,??_interrupcaoLOW+10
 11732  00003C  CFD9 F0AA          	movff	fsr2l,??_interrupcaoLOW+11
 11733  000040  CFDA F0AB          	movff	fsr2h,??_interrupcaoLOW+12
 11734  000044  CFF3 F0AC          	movff	prodl,??_interrupcaoLOW+13
 11735  000048  CFF4 F0AD          	movff	prodh,??_interrupcaoLOW+14
 11736  00004C  CFF6 F0AE          	movff	tblptrl,??_interrupcaoLOW+15
 11737  000050  CFF7 F0AF          	movff	tblptrh,??_interrupcaoLOW+16
 11738  000054  CFF8 F0B0          	movff	tblptru,??_interrupcaoLOW+17
 11739  000058  CFF5 F0B1          	movff	tablat,??_interrupcaoLOW+18
 11740  00005C                     
 11741                           ;main.c: 190: Distancia=Obtener_Distancia();
 11742  00005C  EC10  F02D         	call	i1_Obtener_Distancia	;wreg free
 11743  000060  C019  F184         	movff	?i1_Obtener_Distancia,_Distancia
 11744  000064  C01A  F185         	movff	?i1_Obtener_Distancia+1,_Distancia+1
 11745                           
 11746                           ;main.c: 191: LDR_value=Read_LDR();
 11747  000068  EC8E  F027         	call	i1_Read_LDR	;wreg free
 11748  00006C  C049  F183         	movff	?i1_Read_LDR+2,_LDR_value+2
 11749  000070  C048  F182         	movff	?i1_Read_LDR+1,_LDR_value+1
 11750  000074  C047  F181         	movff	?i1_Read_LDR,_LDR_value
 11751                           
 11752                           ;main.c: 192: lcd_gotoxy(1,1);
 11753  000078  0100               	movlb	0	; () banked
 11754  00007A  6F9F               	movwf	??_interrupcaoLOW& (0+255),b
 11755  00007C  0E01               	movlw	1
 11756  00007E  6E14               	movwf	?i1_lcd_gotoxy,c
 11757  000080  0100               	movlb	0	; () banked
 11758  000082  519F               	movf	??_interrupcaoLOW& (0+255),w,b
 11759  000084  0100               	movlb	0	; () banked
 11760  000086  6FA0               	movwf	(??_interrupcaoLOW+1)& (0+255),b
 11761  000088  0E01               	movlw	1
 11762  00008A  6E15               	movwf	?i1_lcd_gotoxy+1,c
 11763  00008C  0100               	movlb	0	; () banked
 11764  00008E  51A0               	movf	(??_interrupcaoLOW+1)& (0+255),w,b
 11765  000090  ECBB  F02E         	call	i1_lcd_gotoxy	;wreg free
 11766  000094                     
 11767                           ;main.c: 193: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
 11768  000094  0101               	movlb	1	; () banked
 11769  000096  0E01               	movlw	high _LCD_Buffer
 11770  000098  0100               	movlb	0	; () banked
 11771  00009A  0100               	movlb	0	; () banked
 11772  00009C  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 11773  00009E  0101               	movlb	1	; () banked
 11774  0000A0  0E86               	movlw	low _LCD_Buffer
 11775  0000A2  0100               	movlb	0	; () banked
 11776  0000A4  6F71               	movwf	?i1_sprintf& (0+255),b
 11777  0000A6  0E08               	movlw	high STR_1
 11778  0000A8  0100               	movlb	0	; () banked
 11779  0000AA  0100               	movlb	0	; () banked
 11780  0000AC  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 11781  0000AE  0E88               	movlw	low STR_1
 11782  0000B0  0100               	movlb	0	; () banked
 11783  0000B2  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 11784  0000B4  C181  F075         	movff	_LDR_value,?i1_sprintf+4
 11785  0000B8  C182  F076         	movff	_LDR_value+1,?i1_sprintf+5
 11786  0000BC  C183  F077         	movff	_LDR_value+2,?i1_sprintf+6
 11787  0000C0  EC55  F00B         	call	i1_sprintf	;wreg free
 11788  0000C4                     
 11789                           ;main.c: 194: lcd_putc(LCD_Buffer);
 11790  0000C4  0101               	movlb	1	; () banked
 11791  0000C6  0E01               	movlw	high _LCD_Buffer
 11792  0000C8  6E16               	movwf	?i1_lcd_putc+1,c
 11793  0000CA  0101               	movlb	1	; () banked
 11794  0000CC  0E86               	movlw	low _LCD_Buffer
 11795  0000CE  6E15               	movwf	?i1_lcd_putc,c
 11796  0000D0  ECE0  F030         	call	i1_lcd_putc	;wreg free
 11797  0000D4                     
 11798                           ;main.c: 195: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
 11799  0000D4  0101               	movlb	1	; () banked
 11800  0000D6  0E01               	movlw	high _LCD_Buffer
 11801  0000D8  0100               	movlb	0	; () banked
 11802  0000DA  0100               	movlb	0	; () banked
 11803  0000DC  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 11804  0000DE  0101               	movlb	1	; () banked
 11805  0000E0  0E86               	movlw	low _LCD_Buffer
 11806  0000E2  0100               	movlb	0	; () banked
 11807  0000E4  6F71               	movwf	?i1_sprintf& (0+255),b
 11808  0000E6  0E08               	movlw	high STR_2
 11809  0000E8  0100               	movlb	0	; () banked
 11810  0000EA  0100               	movlb	0	; () banked
 11811  0000EC  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 11812  0000EE  0E76               	movlw	low STR_2
 11813  0000F0  0100               	movlb	0	; () banked
 11814  0000F2  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 11815  0000F4  C184  F075         	movff	_Distancia,?i1_sprintf+4
 11816  0000F8  C185  F076         	movff	_Distancia+1,?i1_sprintf+5
 11817  0000FC  EC55  F00B         	call	i1_sprintf	;wreg free
 11818  000100                     
 11819                           ;main.c: 196: lcd_gotoxy(2,1);
 11820  000100  0100               	movlb	0	; () banked
 11821  000102  6F9F               	movwf	??_interrupcaoLOW& (0+255),b
 11822  000104  0E02               	movlw	2
 11823  000106  6E14               	movwf	?i1_lcd_gotoxy,c
 11824  000108  0100               	movlb	0	; () banked
 11825  00010A  519F               	movf	??_interrupcaoLOW& (0+255),w,b
 11826  00010C  0100               	movlb	0	; () banked
 11827  00010E  6FA0               	movwf	(??_interrupcaoLOW+1)& (0+255),b
 11828  000110  0E01               	movlw	1
 11829  000112  6E15               	movwf	?i1_lcd_gotoxy+1,c
 11830  000114  0100               	movlb	0	; () banked
 11831  000116  51A0               	movf	(??_interrupcaoLOW+1)& (0+255),w,b
 11832  000118  ECBB  F02E         	call	i1_lcd_gotoxy	;wreg free
 11833                           
 11834                           ;main.c: 197: lcd_putc(LCD_Buffer);
 11835  00011C  0101               	movlb	1	; () banked
 11836  00011E  0E01               	movlw	high _LCD_Buffer
 11837  000120  6E16               	movwf	?i1_lcd_putc+1,c
 11838  000122  0101               	movlb	1	; () banked
 11839  000124  0E86               	movlw	low _LCD_Buffer
 11840  000126  6E15               	movwf	?i1_lcd_putc,c
 11841  000128  ECE0  F030         	call	i1_lcd_putc	;wreg free
 11842  00012C  C0B1  FFF5         	movff	??_interrupcaoLOW+18,tablat
 11843  000130  C0B0  FFF8         	movff	??_interrupcaoLOW+17,tblptru
 11844  000134  C0AF  FFF7         	movff	??_interrupcaoLOW+16,tblptrh
 11845  000138  C0AE  FFF6         	movff	??_interrupcaoLOW+15,tblptrl
 11846  00013C  C0AD  FFF4         	movff	??_interrupcaoLOW+14,prodh
 11847  000140  C0AC  FFF3         	movff	??_interrupcaoLOW+13,prodl
 11848  000144  C0AB  FFDA         	movff	??_interrupcaoLOW+12,fsr2h
 11849  000148  C0AA  FFD9         	movff	??_interrupcaoLOW+11,fsr2l
 11850  00014C  C0A9  FFE2         	movff	??_interrupcaoLOW+10,fsr1h
 11851  000150  C0A8  FFE1         	movff	??_interrupcaoLOW+9,fsr1l
 11852  000154  C0A7  FFEA         	movff	??_interrupcaoLOW+8,fsr0h
 11853  000158  C0A6  FFE9         	movff	??_interrupcaoLOW+7,fsr0l
 11854  00015C  C0A5  FFFB         	movff	??_interrupcaoLOW+6,pclatu
 11855  000160  C0A4  FFFA         	movff	??_interrupcaoLOW+5,pclath
 11856  000164  C0A3  FFE0         	movff	??_interrupcaoLOW+4,bsr
 11857  000168  C0A2  FFE8         	movff	??_interrupcaoLOW+3,wreg
 11858  00016C  C0A1  FFD8         	movff	??_interrupcaoLOW+2,status
 11859  000170  0010               	retfie	
 11860  000172                     __end_of_interrupcaoLOW:
 11861                           	opt stack 0
 11862                           pclatu	equ	0xFFB
 11863                           pclath	equ	0xFFA
 11864                           tblptru	equ	0xFF8
 11865                           tblptrh	equ	0xFF7
 11866                           tblptrl	equ	0xFF6
 11867                           tablat	equ	0xFF5
 11868                           prodh	equ	0xFF4
 11869                           prodl	equ	0xFF3
 11870                           intcon	equ	0xFF2
 11871                           intcon2	equ	0xFF1
 11872                           postinc0	equ	0xFEE
 11873                           fsr0h	equ	0xFEA
 11874                           fsr0l	equ	0xFE9
 11875                           wreg	equ	0xFE8
 11876                           fsr1h	equ	0xFE2
 11877                           fsr1l	equ	0xFE1
 11878                           bsr	equ	0xFE0
 11879                           indf2	equ	0xFDF
 11880                           postinc2	equ	0xFDE
 11881                           postdec2	equ	0xFDD
 11882                           fsr2h	equ	0xFDA
 11883                           fsr2l	equ	0xFD9
 11884                           status	equ	0xFD8
 11885                           
 11886 ;; *************** function i1_sprintf *****************
 11887 ;; Defined at:
 11888 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;  sprintf         2   17[BANK0 ] PTR unsigned char 
 11891 ;;		 -> LCD_Buffer(32), 
 11892 ;;  sprintf         2   19[BANK0 ] PTR const unsigned char 
 11893 ;;		 -> STR_4(18), STR_3(10), STR_2(18), STR_1(10), 
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;  sprintf         5   46[BANK0 ] struct .
 11896 ;;  sprintf         4   33[BANK0 ] unsigned long 
 11897 ;;  sprintf         3   57[BANK0 ] unsigned long 
 11898 ;;  sprintf         3   43[BANK0 ] unsigned long 
 11899 ;;  sprintf         3    0        unsigned long 
 11900 ;;  sprintf         3    0        unsigned long 
 11901 ;;  sprintf         2   60[BANK0 ] int 
 11902 ;;  sprintf         2   55[BANK0 ] int 
 11903 ;;  sprintf         2   53[BANK0 ] int 
 11904 ;;  sprintf         2   51[BANK0 ] unsigned short 
 11905 ;;  sprintf         2   41[BANK0 ] PTR void [1]
 11906 ;;		 -> ?_sprintf(2), 
 11907 ;;  sprintf         2   39[BANK0 ] unsigned int 
 11908 ;;  sprintf         2   37[BANK0 ] unsigned int 
 11909 ;;  sprintf         1   62[BANK0 ] char 
 11910 ;;  sprintf         1    0        unsigned char 
 11911 ;; Return value:  Size  Location     Type
 11912 ;;                  2   17[BANK0 ] int 
 11913 ;; Registers used:
 11914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11920 ;;      Params:         0       7       0       0       0       0       0       0       0
 11921 ;;      Locals:         0      33       0       0       0       0       0       0       0
 11922 ;;      Temps:          0       6       0       0       0       0       0       0       0
 11923 ;;      Totals:         0      46       0       0       0       0       0       0       0
 11924 ;;Total ram usage:       46 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:    7
 11927 ;; This function calls:
 11928 ;;		i1_fround
 11929 ;;		i1_scale
 11930 ;;		i1___asftadd
 11931 ;;		i1___asftmul
 11932 ;;		i1___asftsub
 11933 ;;		i1___awdiv
 11934 ;;		i1__div_to_l_
 11935 ;;		i1__tdiv_to_l_
 11936 ;;		i1___ftge
 11937 ;;		i1___ftmul
 11938 ;;		i1___ftneg
 11939 ;;		i1___fttol
 11940 ;;		i1_isdigit
 11941 ;;		i1___lldiv
 11942 ;;		i1___llmod
 11943 ;;		i1___lltoft
 11944 ;;		i1___lwmod
 11945 ;;		i1___wmul
 11946 ;; This function is called by:
 11947 ;;		_interrupcaoLOW
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951                           	psect	text42
 11952  0016AA                     __ptext42:
 11953                           	opt stack 0
 11954  0016AA                     i1_sprintf:
 11955                           	opt stack 17
 11956                           
 11957                           ;doprnt.c: 494: va_list ap;
 11958                           ;doprnt.c: 499: signed char c;
 11959                           ;doprnt.c: 501: int width;
 11960                           ;doprnt.c: 504: int prec;
 11961                           ;doprnt.c: 508: unsigned short flag;
 11962                           ;doprnt.c: 515: char d;
 11963                           ;doprnt.c: 516: double fval, integ;
 11964                           ;doprnt.c: 517: int exp;
 11965                           ;doprnt.c: 518: double ival;
 11966                           ;doprnt.c: 519: union {
 11967                           ;doprnt.c: 520: unsigned long _val;
 11968                           ;doprnt.c: 521: struct {
 11969                           ;doprnt.c: 522: const char * _cp;
 11970                           ;doprnt.c: 523: unsigned _len;
 11971                           ;doprnt.c: 524: } _str;
 11972                           ;doprnt.c: 525: } _val;
 11973                           ;doprnt.c: 542: *ap = __va_start();
 11974                           
 11975                           ;incstack = 0
 11976                           ;incstack = 0
 11977  0016AA  0100               	movlb	0	; () banked
 11978  0016AC  0E00               	movlw	high (?i1_sprintf+4)
 11979  0016AE  0100               	movlb	0	; () banked
 11980  0016B0  0100               	movlb	0	; () banked
 11981  0016B2  6F8A               	movwf	(i1sprintf@ap+1)& (0+255),b
 11982  0016B4  0100               	movlb	0	; () banked
 11983  0016B6  0E75               	movlw	low (?i1_sprintf+4)
 11984  0016B8  0100               	movlb	0	; () banked
 11985  0016BA  6F89               	movwf	i1sprintf@ap& (0+255),b
 11986                           
 11987                           ;doprnt.c: 545: while(c = *f++) {
 11988  0016BC  EFF1  F011         	goto	i1l11497
 11989  0016C0                     i1l11173:
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;doprnt.c: 547: if(c != '%')
 11993  0016C0  0100               	movlb	0	; () banked
 11994  0016C2  0100               	movlb	0	; () banked
 11995  0016C4  519E               	movf	i1sprintf@c& (0+255),w,b
 11996  0016C6  0A25               	xorlw	37
 11997  0016C8  B4D8               	btfsc	status,2,c
 11998  0016CA  D00D               	goto	i1l11179
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;doprnt.c: 549: {
 12002                           ;doprnt.c: 550: ((*sp++ = (c)));
 12003  0016CC  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 12004  0016D0  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 12005  0016D4  0100               	movlb	0	; () banked
 12006  0016D6  C09E  FFDF         	movff	i1sprintf@c,indf2
 12007                           
 12008                           ; BSR set to: 0
 12009  0016DA  0100               	movlb	0	; () banked
 12010  0016DC  0100               	movlb	0	; () banked
 12011  0016DE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12012  0016E0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12013                           
 12014                           ;doprnt.c: 551: continue;
 12015  0016E2  EFF1  F011         	goto	i1l11497
 12016  0016E6                     i1l11179:
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;doprnt.c: 552: }
 12020                           ;doprnt.c: 555: width = 0;
 12021  0016E6  0E00               	movlw	0
 12022  0016E8  0100               	movlb	0	; () banked
 12023  0016EA  0100               	movlb	0	; () banked
 12024  0016EC  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 12025  0016EE  0E00               	movlw	0
 12026  0016F0  0100               	movlb	0	; () banked
 12027  0016F2  6F97               	movwf	i1sprintf@width& (0+255),b
 12028                           
 12029                           ;doprnt.c: 557: flag = 0;
 12030  0016F4  0E00               	movlw	0
 12031  0016F6  0100               	movlb	0	; () banked
 12032  0016F8  0100               	movlb	0	; () banked
 12033  0016FA  6F94               	movwf	(i1sprintf@flag+1)& (0+255),b
 12034  0016FC  0E00               	movlw	0
 12035  0016FE  0100               	movlb	0	; () banked
 12036  001700  6F93               	movwf	i1sprintf@flag& (0+255),b
 12037  001702  D007               	goto	i1l11185
 12038  001704                     i1l11181:
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;doprnt.c: 589: flag |= 0x04;
 12042  001704  0100               	movlb	0	; () banked
 12043  001706  0100               	movlb	0	; () banked
 12044  001708  8593               	bsf	i1sprintf@flag& (0+255),2,b
 12045                           
 12046                           ;doprnt.c: 590: f++;
 12047  00170A  0100               	movlb	0	; () banked
 12048  00170C  0100               	movlb	0	; () banked
 12049  00170E  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12050  001710  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12051  001712                     i1l11185:
 12052                           
 12053                           ; BSR set to: 0
 12054  001712  0100               	movlb	0	; () banked
 12055  001714  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12056  001718  0100               	movlb	0	; () banked
 12057  00171A  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12058  00171E  0008               	tblrd		*
 12059  001720  50F5               	movf	tablat,w,c
 12060                           
 12061                           ; Switch size 1, requested type "space"
 12062                           ; Number of cases is 1, Range of values is 48 to 48
 12063                           ; switch strategies available:
 12064                           ; Name         Instructions Cycles
 12065                           ; simple_byte            4     3 (average)
 12066                           ;	Chosen strategy is simple_byte
 12067  001722  0A30               	xorlw	48	; case 48
 12068  001724  B4D8               	btfsc	status,2,c
 12069  001726  D7EE               	goto	i1l11181
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 12073                           
 12074                           ; BSR set to: 0
 12075                           
 12076                           ; BSR set to: 0
 12077                           ;doprnt.c: 595: }
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;doprnt.c: 594: break;
 12081  001728  0100               	movlb	0	; () banked
 12082  00172A  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12083  00172E  0100               	movlb	0	; () banked
 12084  001730  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12085  001734  0008               	tblrd		*
 12086  001736  CFF5 F011          	movff	tablat,?i1_isdigit
 12087  00173A  EC23  F031         	call	i1_isdigit	;wreg free
 12088  00173E  A0D8               	btfss	status,0,c
 12089  001740  D043               	goto	i1l11199
 12090                           
 12091                           ;doprnt.c: 607: width = 0;
 12092  001742  0E00               	movlw	0
 12093  001744  0100               	movlb	0	; () banked
 12094  001746  0100               	movlb	0	; () banked
 12095  001748  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 12096  00174A  0E00               	movlw	0
 12097  00174C  0100               	movlb	0	; () banked
 12098  00174E  6F97               	movwf	i1sprintf@width& (0+255),b
 12099  001750                     i1l11191:
 12100                           
 12101                           ;doprnt.c: 609: width *= 10;
 12102  001750  C097  F021         	movff	i1sprintf@width,?i1___wmul
 12103  001754  C098  F022         	movff	i1sprintf@width+1,?i1___wmul+1
 12104  001758  0E00               	movlw	0
 12105  00175A  6E24               	movwf	?i1___wmul+3,c
 12106  00175C  0E0A               	movlw	10
 12107  00175E  6E23               	movwf	?i1___wmul+2,c
 12108  001760  EC8B  F030         	call	i1___wmul	;wreg free
 12109  001764  C021  F097         	movff	?i1___wmul,i1sprintf@width
 12110  001768  C022  F098         	movff	?i1___wmul+1,i1sprintf@width+1
 12111                           
 12112                           ;doprnt.c: 610: width += *f++ - '0';
 12113  00176C  0100               	movlb	0	; () banked
 12114  00176E  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12115  001772  0100               	movlb	0	; () banked
 12116  001774  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12117  001778  0008               	tblrd		*
 12118  00177A  CFF5 F078          	movff	tablat,??i1_sprintf
 12119  00177E  0ED0               	movlw	208
 12120  001780  0100               	movlb	0	; () banked
 12121  001782  2578               	addwf	??i1_sprintf& (0+255),w,b
 12122  001784  0100               	movlb	0	; () banked
 12123  001786  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12124  001788  0100               	movlb	0	; () banked
 12125  00178A  0100               	movlb	0	; () banked
 12126  00178C  6B7A               	clrf	(??i1_sprintf+2)& (0+255),b
 12127  00178E  0EFF               	movlw	255
 12128  001790  237A               	addwfc	(??i1_sprintf+2)& (0+255),f,b
 12129  001792  0100               	movlb	0	; () banked
 12130  001794  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12131  001796  0100               	movlb	0	; () banked
 12132  001798  0100               	movlb	0	; () banked
 12133  00179A  2797               	addwf	i1sprintf@width& (0+255),f,b
 12134  00179C  0100               	movlb	0	; () banked
 12135  00179E  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 12136  0017A0  0100               	movlb	0	; () banked
 12137  0017A2  0100               	movlb	0	; () banked
 12138  0017A4  2398               	addwfc	(i1sprintf@width+1)& (0+255),f,b
 12139                           
 12140                           ; BSR set to: 0
 12141  0017A6  0100               	movlb	0	; () banked
 12142  0017A8  0100               	movlb	0	; () banked
 12143  0017AA  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12144  0017AC  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 12148  0017AE  0100               	movlb	0	; () banked
 12149  0017B0  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12150  0017B4  0100               	movlb	0	; () banked
 12151  0017B6  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12152  0017BA  0008               	tblrd		*
 12153  0017BC  CFF5 F011          	movff	tablat,?i1_isdigit
 12154  0017C0  EC23  F031         	call	i1_isdigit	;wreg free
 12155  0017C4  B0D8               	btfsc	status,0,c
 12156  0017C6  D7C4               	goto	i1l11191
 12157  0017C8                     i1l11199:
 12158                           
 12159                           ;doprnt.c: 617: }
 12160                           ;doprnt.c: 620: if(*f == '.') {
 12161  0017C8  0100               	movlb	0	; () banked
 12162  0017CA  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12163  0017CE  0100               	movlb	0	; () banked
 12164  0017D0  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12165  0017D4  0008               	tblrd		*
 12166  0017D6  50F5               	movf	tablat,w,c
 12167  0017D8  0A2E               	xorlw	46
 12168  0017DA  A4D8               	btfss	status,2,c
 12169  0017DC  D03F               	goto	i1l11211
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;doprnt.c: 621: flag |= 0x4000;
 12173  0017DE  0100               	movlb	0	; () banked
 12174  0017E0  0100               	movlb	0	; () banked
 12175  0017E2  8D94               	bsf	(i1sprintf@flag+1)& (0+255),6,b
 12176                           
 12177                           ;doprnt.c: 622: f++;
 12178  0017E4  0100               	movlb	0	; () banked
 12179  0017E6  0100               	movlb	0	; () banked
 12180  0017E8  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12181  0017EA  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12182                           
 12183                           ; BSR set to: 0
 12184                           ;doprnt.c: 629: {
 12185                           ;doprnt.c: 630: prec = 0;
 12186  0017EC  0E00               	movlw	0
 12187  0017EE  0100               	movlb	0	; () banked
 12188  0017F0  0100               	movlb	0	; () banked
 12189  0017F2  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12190  0017F4  0E00               	movlw	0
 12191  0017F6  0100               	movlb	0	; () banked
 12192  0017F8  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12193                           
 12194                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 12195  0017FA  D022               	goto	i1l11209
 12196  0017FC                     i1l11205:
 12197                           
 12198                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 12199  0017FC  C09C  F021         	movff	i1sprintf@prec,?i1___wmul
 12200  001800  C09D  F022         	movff	i1sprintf@prec+1,?i1___wmul+1
 12201  001804  0E00               	movlw	0
 12202  001806  6E24               	movwf	?i1___wmul+3,c
 12203  001808  0E0A               	movlw	10
 12204  00180A  6E23               	movwf	?i1___wmul+2,c
 12205  00180C  EC8B  F030         	call	i1___wmul	;wreg free
 12206  001810  0100               	movlb	0	; () banked
 12207  001812  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12208  001816  0100               	movlb	0	; () banked
 12209  001818  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12210  00181C  0008               	tblrd		*
 12211  00181E  50F5               	movf	tablat,w,c
 12212  001820  2621               	addwf	?i1___wmul,f,c
 12213  001822  0E00               	movlw	0
 12214  001824  2222               	addwfc	?i1___wmul+1,f,c
 12215  001826  0ED0               	movlw	208
 12216  001828  2421               	addwf	?i1___wmul,w,c
 12217  00182A  0100               	movlb	0	; () banked
 12218  00182C  0100               	movlb	0	; () banked
 12219  00182E  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12220  001830  0EFF               	movlw	255
 12221  001832  2022               	addwfc	?i1___wmul+1,w,c
 12222  001834  0100               	movlb	0	; () banked
 12223  001836  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12224                           
 12225                           ; BSR set to: 0
 12226  001838  0100               	movlb	0	; () banked
 12227  00183A  0100               	movlb	0	; () banked
 12228  00183C  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12229  00183E  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12230  001840                     i1l11209:
 12231                           
 12232                           ; BSR set to: 0
 12233  001840  0100               	movlb	0	; () banked
 12234  001842  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12235  001846  0100               	movlb	0	; () banked
 12236  001848  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12237  00184C  0008               	tblrd		*
 12238  00184E  CFF5 F011          	movff	tablat,?i1_isdigit
 12239  001852  EC23  F031         	call	i1_isdigit	;wreg free
 12240  001856  A0D8               	btfss	status,0,c
 12241  001858  D010               	goto	i1l11219
 12242  00185A  D7D0               	goto	i1l11205
 12243  00185C                     i1l11211:
 12244                           
 12245                           ;doprnt.c: 635: prec = 0;
 12246  00185C  0E00               	movlw	0
 12247  00185E  0100               	movlb	0	; () banked
 12248  001860  0100               	movlb	0	; () banked
 12249  001862  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12250  001864  0E00               	movlw	0
 12251  001866  0100               	movlb	0	; () banked
 12252  001868  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;doprnt.c: 637: flag |= 0x1000;
 12256  00186A  0100               	movlb	0	; () banked
 12257  00186C  0100               	movlb	0	; () banked
 12258  00186E  8994               	bsf	(i1sprintf@flag+1)& (0+255),4,b
 12259  001870  D004               	goto	i1l11219
 12260  001872                     i1l11215:
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;doprnt.c: 672: flag |= 0x400;
 12264  001872  0100               	movlb	0	; () banked
 12265  001874  0100               	movlb	0	; () banked
 12266  001876  8594               	bsf	(i1sprintf@flag+1)& (0+255),2,b
 12267                           
 12268                           ;doprnt.c: 673: break;
 12269  001878  D01E               	goto	i1l11221
 12270  00187A                     i1l11219:
 12271  00187A  0100               	movlb	0	; () banked
 12272  00187C  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12273  001880  0100               	movlb	0	; () banked
 12274  001882  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12275  001886  0100               	movlb	0	; () banked
 12276  001888  0100               	movlb	0	; () banked
 12277  00188A  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12278  00188C  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12279  00188E  0008               	tblrd		*
 12280  001890  0100               	movlb	0	; () banked
 12281  001892  CFF5 F09E          	movff	tablat,i1sprintf@c
 12282  001896  0100               	movlb	0	; () banked
 12283  001898  519E               	movf	i1sprintf@c& (0+255),w,b
 12284                           
 12285                           ; Switch size 1, requested type "space"
 12286                           ; Number of cases is 4, Range of values is 0 to 105
 12287                           ; switch strategies available:
 12288                           ; Name         Instructions Cycles
 12289                           ; simple_byte           13     7 (average)
 12290                           ;	Chosen strategy is simple_byte
 12291  00189A  0A00               	xorlw	0	; case 0
 12292  00189C  B4D8               	btfsc	status,2,c
 12293  00189E  EF03  F012         	goto	i1l11499
 12294  0018A2  0A64               	xorlw	100	; case 100
 12295  0018A4  B4D8               	btfsc	status,2,c
 12296  0018A6  D007               	goto	i1l11221
 12297  0018A8  0A02               	xorlw	2	; case 102
 12298  0018AA  B4D8               	btfsc	status,2,c
 12299  0018AC  D7E2               	goto	i1l11215
 12300  0018AE  0A0F               	xorlw	15	; case 105
 12301  0018B0  A4D8               	btfss	status,2,c
 12302  0018B2  EFF1  F011         	goto	i1l11497
 12303  0018B6                     i1l11221:
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;doprnt.c: 834: if(flag & (0x700)) {
 12307  0018B6  0E07               	movlw	7
 12308  0018B8  0100               	movlb	0	; () banked
 12309  0018BA  0100               	movlb	0	; () banked
 12310  0018BC  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 12311  0018BE  B4D8               	btfsc	status,2,c
 12312  0018C0  D3B6               	goto	i1l11401
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;doprnt.c: 836: if(flag & 0x1000)
 12316  0018C2  0100               	movlb	0	; () banked
 12317  0018C4  0100               	movlb	0	; () banked
 12318  0018C6  A994               	btfss	(i1sprintf@flag+1)& (0+255),4,b
 12319  0018C8  D007               	goto	i1l11227
 12320                           
 12321                           ; BSR set to: 0
 12322                           ;doprnt.c: 838: prec = 6;
 12323  0018CA  0E00               	movlw	0
 12324  0018CC  0100               	movlb	0	; () banked
 12325  0018CE  0100               	movlb	0	; () banked
 12326  0018D0  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12327  0018D2  0E06               	movlw	6
 12328  0018D4  0100               	movlb	0	; () banked
 12329  0018D6  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12330  0018D8                     i1l11227:
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12334  0018D8  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 12335  0018DC  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 12336  0018E0  0100               	movlb	0	; () banked
 12337  0018E2  CFDE F099          	movff	postinc2,i1sprintf@fval
 12338  0018E6  0100               	movlb	0	; () banked
 12339  0018E8  CFDE F09A          	movff	postinc2,i1sprintf@fval+1
 12340  0018EC  0100               	movlb	0	; () banked
 12341  0018EE  CFDD F09B          	movff	postdec2,i1sprintf@fval+2
 12342                           
 12343                           ; BSR set to: 0
 12344  0018F2  0E03               	movlw	3
 12345  0018F4  0100               	movlb	0	; () banked
 12346  0018F6  0100               	movlb	0	; () banked
 12347  0018F8  2789               	addwf	i1sprintf@ap& (0+255),f,b
 12348  0018FA  0E00               	movlw	0
 12349  0018FC  0100               	movlb	0	; () banked
 12350  0018FE  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 12351                           
 12352                           ; BSR set to: 0
 12353                           ;doprnt.c: 840: if(fval < 0.0) {
 12354  001900  0100               	movlb	0	; () banked
 12355  001902  0100               	movlb	0	; () banked
 12356  001904  519B               	movf	(i1sprintf@fval+2)& (0+255),w,b
 12357  001906  0A80               	xorlw	128
 12358  001908  0F80               	addlw	128
 12359  00190A  E107               	bnz	i1u1056_25
 12360  00190C  0E00               	movlw	0
 12361  00190E  0100               	movlb	0	; () banked
 12362  001910  5D9A               	subwf	(i1sprintf@fval+1)& (0+255),w,b
 12363  001912  E103               	bnz	i1u1056_25
 12364  001914  0E00               	movlw	0
 12365  001916  0100               	movlb	0	; () banked
 12366  001918  5D99               	subwf	i1sprintf@fval& (0+255),w,b
 12367  00191A                     i1u1056_25:
 12368  00191A  B0D8               	btfsc	status,0,c
 12369  00191C  D012               	goto	i1l11237
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;doprnt.c: 841: fval = -fval;
 12373  00191E  C099  F011         	movff	i1sprintf@fval,?i1___ftneg
 12374  001922  C09A  F012         	movff	i1sprintf@fval+1,?i1___ftneg+1
 12375  001926  C09B  F013         	movff	i1sprintf@fval+2,?i1___ftneg+2
 12376  00192A  EC10  F031         	call	i1___ftneg	;wreg free
 12377  00192E  C013  F09B         	movff	?i1___ftneg+2,i1sprintf@fval+2
 12378  001932  C012  F09A         	movff	?i1___ftneg+1,i1sprintf@fval+1
 12379  001936  C011  F099         	movff	?i1___ftneg,i1sprintf@fval
 12380                           
 12381                           ;doprnt.c: 842: flag |= 0x03;
 12382  00193A  0E03               	movlw	3
 12383  00193C  0100               	movlb	0	; () banked
 12384  00193E  0100               	movlb	0	; () banked
 12385  001940  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 12386  001942                     i1l11237:
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;doprnt.c: 843: }
 12390                           ;doprnt.c: 844: exp = 0;
 12391  001942  0E00               	movlw	0
 12392  001944  0100               	movlb	0	; () banked
 12393  001946  0100               	movlb	0	; () banked
 12394  001948  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12395  00194A  0E00               	movlw	0
 12396  00194C  0100               	movlb	0	; () banked
 12397  00194E  6F95               	movwf	i1sprintf@exp& (0+255),b
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;doprnt.c: 845: if( fval!=0) {
 12401  001950  0E7F               	movlw	127
 12402  001952  0100               	movlb	0	; () banked
 12403  001954  0100               	movlb	0	; () banked
 12404  001956  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 12405  001958  0100               	movlb	0	; () banked
 12406  00195A  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 12407  00195C  0100               	movlb	0	; () banked
 12408  00195E  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 12409  001960  B4D8               	btfsc	status,2,c
 12410  001962  D099               	goto	i1l11265
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12414  001964  0E82               	movlw	130
 12415  001966  0100               	movlb	0	; () banked
 12416  001968  6F78               	movwf	??i1_sprintf& (0+255),b
 12417  00196A  0EFF               	movlw	255
 12418  00196C  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12419  00196E  0100               	movlb	0	; () banked
 12420  001970  C099  F07A         	movff	i1sprintf@fval,??i1_sprintf+2
 12421  001974  0100               	movlb	0	; () banked
 12422  001976  C09A  F07B         	movff	i1sprintf@fval+1,??i1_sprintf+3
 12423  00197A  0100               	movlb	0	; () banked
 12424  00197C  C09B  F07C         	movff	i1sprintf@fval+2,??i1_sprintf+4
 12425  001980  0100               	movlb	0	; () banked
 12426  001982  C09C  F07D         	movff	i1sprintf@fval+3,??i1_sprintf+5
 12427  001986  0E10               	movlw	16
 12428  001988  D006               	goto	i1u1058_20
 12429  00198A                     i1u1058_25:
 12430  00198A  0100               	movlb	0	; () banked
 12431  00198C  90D8               	bcf	status,0,c
 12432  00198E  337D               	rrcf	(??i1_sprintf+5)& (0+255),f,b
 12433  001990  337C               	rrcf	(??i1_sprintf+4)& (0+255),f,b
 12434  001992  337B               	rrcf	(??i1_sprintf+3)& (0+255),f,b
 12435  001994  337A               	rrcf	(??i1_sprintf+2)& (0+255),f,b
 12436  001996                     i1u1058_20:
 12437  001996  2EE8               	decfsz	wreg,f,c
 12438  001998  D7F8               	goto	i1u1058_25
 12439  00199A  0100               	movlb	0	; () banked
 12440  00199C  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 12441  00199E  0100               	movlb	0	; () banked
 12442  0019A0  2578               	addwf	??i1_sprintf& (0+255),w,b
 12443  0019A2  0100               	movlb	0	; () banked
 12444  0019A4  0100               	movlb	0	; () banked
 12445  0019A6  6F95               	movwf	i1sprintf@exp& (0+255),b
 12446  0019A8  0100               	movlb	0	; () banked
 12447  0019AA  0100               	movlb	0	; () banked
 12448  0019AC  0E00               	movlw	0
 12449  0019AE  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 12450  0019B0  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;doprnt.c: 847: exp--;
 12454  0019B2  0100               	movlb	0	; () banked
 12455  0019B4  0100               	movlb	0	; () banked
 12456  0019B6  0795               	decf	i1sprintf@exp& (0+255),f,b
 12457  0019B8  A0D8               	btfss	status,0,c
 12458  0019BA  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;doprnt.c: 848: exp *= 3;
 12462  0019BC  C095  F021         	movff	i1sprintf@exp,?i1___wmul
 12463  0019C0  C096  F022         	movff	i1sprintf@exp+1,?i1___wmul+1
 12464  0019C4  0E00               	movlw	0
 12465  0019C6  6E24               	movwf	?i1___wmul+3,c
 12466  0019C8  0E03               	movlw	3
 12467  0019CA  6E23               	movwf	?i1___wmul+2,c
 12468  0019CC  EC8B  F030         	call	i1___wmul	;wreg free
 12469  0019D0  C021  F095         	movff	?i1___wmul,i1sprintf@exp
 12470  0019D4  C022  F096         	movff	?i1___wmul+1,i1sprintf@exp+1
 12471                           
 12472                           ;doprnt.c: 849: exp /= 10;
 12473  0019D8  C095  F018         	movff	i1sprintf@exp,?i1___awdiv
 12474  0019DC  C096  F019         	movff	i1sprintf@exp+1,?i1___awdiv+1
 12475  0019E0  0E00               	movlw	0
 12476  0019E2  6E1B               	movwf	?i1___awdiv+3,c
 12477  0019E4  0E0A               	movlw	10
 12478  0019E6  6E1A               	movwf	?i1___awdiv+2,c
 12479  0019E8  ECB8  F02B         	call	i1___awdiv	;wreg free
 12480  0019EC  C018  F095         	movff	?i1___awdiv,i1sprintf@exp
 12481  0019F0  C019  F096         	movff	?i1___awdiv+1,i1sprintf@exp+1
 12482                           
 12483                           ;doprnt.c: 850: if(exp < 0)
 12484  0019F4  0100               	movlb	0	; () banked
 12485  0019F6  0100               	movlb	0	; () banked
 12486  0019F8  AF96               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 12487  0019FA  D005               	goto	i1l11253
 12488                           
 12489                           ; BSR set to: 0
 12490                           ;doprnt.c: 851: exp--;
 12491  0019FC  0100               	movlb	0	; () banked
 12492  0019FE  0100               	movlb	0	; () banked
 12493  001A00  0795               	decf	i1sprintf@exp& (0+255),f,b
 12494  001A02  A0D8               	btfss	status,0,c
 12495  001A04  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12496  001A06                     i1l11253:
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;doprnt.c: 855: integ = scale(-exp);
 12500  001A06  0100               	movlb	0	; () banked
 12501  001A08  0100               	movlb	0	; () banked
 12502  001A0A  5195               	movf	i1sprintf@exp& (0+255),w,b
 12503  001A0C  0800               	sublw	0
 12504  001A0E  6E47               	movwf	?i1_scale,c
 12505  001A10  EC14  F015         	call	i1_scale	;wreg free
 12506  001A14  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 12507  001A18  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 12508  001A1C  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 12509                           
 12510                           ;doprnt.c: 856: integ *= fval;
 12511  001A20  0100               	movlb	0	; () banked
 12512  001A22  0E00               	movlw	high i1sprintf@integ
 12513  001A24  0100               	movlb	0	; () banked
 12514  001A26  0100               	movlb	0	; () banked
 12515  001A28  6F61               	movwf	(?i1___asftmul+1)& (0+255),b
 12516  001A2A  0100               	movlb	0	; () banked
 12517  001A2C  0E8B               	movlw	low i1sprintf@integ
 12518  001A2E  0100               	movlb	0	; () banked
 12519  001A30  6F60               	movwf	?i1___asftmul& (0+255),b
 12520  001A32  C099  F062         	movff	i1sprintf@fval,?i1___asftmul+2
 12521  001A36  C09A  F063         	movff	i1sprintf@fval+1,?i1___asftmul+3
 12522  001A3A  C09B  F064         	movff	i1sprintf@fval+2,?i1___asftmul+4
 12523  001A3E  EC15  F030         	call	i1___asftmul	;wreg free
 12524                           
 12525                           ;doprnt.c: 857: if(integ < 1.0)
 12526  001A42  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12527  001A46  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12528  001A4A  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12529  001A4E  0E00               	movlw	0
 12530  001A50  6E14               	movwf	?i1___ftge+3,c
 12531  001A52  0E80               	movlw	128
 12532  001A54  6E15               	movwf	?i1___ftge+4,c
 12533  001A56  0E3F               	movlw	63
 12534  001A58  6E16               	movwf	?i1___ftge+5,c
 12535  001A5A  EC70  F02B         	call	i1___ftge	;wreg free
 12536  001A5E  B0D8               	btfsc	status,0,c
 12537  001A60  D006               	goto	i1l11261
 12538                           
 12539                           ;doprnt.c: 858: exp--;
 12540  001A62  0100               	movlb	0	; () banked
 12541  001A64  0100               	movlb	0	; () banked
 12542  001A66  0795               	decf	i1sprintf@exp& (0+255),f,b
 12543  001A68  A0D8               	btfss	status,0,c
 12544  001A6A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12545  001A6C  D014               	goto	i1l11265
 12546  001A6E                     i1l11261:
 12547                           
 12548                           ;doprnt.c: 859: else if(integ >= 10.0)
 12549  001A6E  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12550  001A72  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12551  001A76  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12552  001A7A  0E00               	movlw	0
 12553  001A7C  6E14               	movwf	?i1___ftge+3,c
 12554  001A7E  0E20               	movlw	32
 12555  001A80  6E15               	movwf	?i1___ftge+4,c
 12556  001A82  0E41               	movlw	65
 12557  001A84  6E16               	movwf	?i1___ftge+5,c
 12558  001A86  EC70  F02B         	call	i1___ftge	;wreg free
 12559  001A8A  A0D8               	btfss	status,0,c
 12560  001A8C  D004               	goto	i1l11265
 12561                           
 12562                           ;doprnt.c: 860: exp++;
 12563  001A8E  0100               	movlb	0	; () banked
 12564  001A90  0100               	movlb	0	; () banked
 12565  001A92  4B95               	infsnz	i1sprintf@exp& (0+255),f,b
 12566  001A94  2B96               	incf	(i1sprintf@exp+1)& (0+255),f,b
 12567  001A96                     i1l11265:
 12568                           
 12569                           ;doprnt.c: 861: }
 12570                           ;doprnt.c: 1121: if(prec <= 12)
 12571  001A96  0100               	movlb	0	; () banked
 12572  001A98  0100               	movlb	0	; () banked
 12573  001A9A  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12574  001A9C  0A80               	xorlw	128
 12575  001A9E  0F80               	addlw	-128
 12576  001AA0  0E0D               	movlw	13
 12577  001AA2  B4D8               	btfsc	status,2,c
 12578  001AA4  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 12579  001AA6  B0D8               	btfsc	status,0,c
 12580  001AA8  D015               	goto	i1l11269
 12581                           
 12582                           ; BSR set to: 0
 12583                           ;doprnt.c: 1122: fval += fround(prec);
 12584  001AAA  0100               	movlb	0	; () banked
 12585  001AAC  0E00               	movlw	high i1sprintf@fval
 12586  001AAE  0100               	movlb	0	; () banked
 12587  001AB0  0100               	movlb	0	; () banked
 12588  001AB2  6F6D               	movwf	(?i1___asftadd+1)& (0+255),b
 12589  001AB4  0100               	movlb	0	; () banked
 12590  001AB6  0E99               	movlw	low i1sprintf@fval
 12591  001AB8  0100               	movlb	0	; () banked
 12592  001ABA  6F6C               	movwf	?i1___asftadd& (0+255),b
 12593  001ABC  C09C  F047         	movff	i1sprintf@prec,?i1_fround
 12594  001AC0  EC99  F01A         	call	i1_fround	;wreg free
 12595  001AC4  C049  F070         	movff	?i1_fround+2,?i1___asftadd+4
 12596  001AC8  C048  F06F         	movff	?i1_fround+1,?i1___asftadd+3
 12597  001ACC  C047  F06E         	movff	?i1_fround,?i1___asftadd+2
 12598  001AD0  EC33  F030         	call	i1___asftadd	;wreg free
 12599  001AD4                     i1l11269:
 12600                           
 12601                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12602  001AD4  0100               	movlb	0	; () banked
 12603  001AD6  0100               	movlb	0	; () banked
 12604  001AD8  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12605  001ADA  0A80               	xorlw	128
 12606  001ADC  0F80               	addlw	-128
 12607  001ADE  0E0A               	movlw	10
 12608  001AE0  B4D8               	btfsc	status,2,c
 12609  001AE2  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 12610  001AE4  B0D8               	btfsc	status,0,c
 12611  001AE6  D022               	goto	i1l11277
 12612                           
 12613                           ; BSR set to: 0
 12614  001AE8  0E7F               	movlw	127
 12615  001AEA  0100               	movlb	0	; () banked
 12616  001AEC  0100               	movlb	0	; () banked
 12617  001AEE  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 12618  001AF0  0100               	movlb	0	; () banked
 12619  001AF2  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 12620  001AF4  0100               	movlb	0	; () banked
 12621  001AF6  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 12622  001AF8  B4D8               	btfsc	status,2,c
 12623  001AFA  D067               	goto	i1l11293
 12624                           
 12625                           ; BSR set to: 0
 12626  001AFC  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 12627  001B00  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 12628  001B04  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 12629  001B08  EC7D  F028         	call	i1___fttol	;wreg free
 12630  001B0C  502A               	movf	?i1___fttol+3,w,c
 12631  001B0E  1027               	iorwf	?i1___fttol,w,c
 12632  001B10  1028               	iorwf	?i1___fttol+1,w,c
 12633  001B12  1029               	iorwf	?i1___fttol+2,w,c
 12634  001B14  A4D8               	btfss	status,2,c
 12635  001B16  D059               	goto	i1l11293
 12636  001B18  0100               	movlb	0	; () banked
 12637  001B1A  0100               	movlb	0	; () banked
 12638  001B1C  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12639  001B1E  0A80               	xorlw	128
 12640  001B20  0F80               	addlw	-128
 12641  001B22  0E02               	movlw	2
 12642  001B24  B4D8               	btfsc	status,2,c
 12643  001B26  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 12644  001B28  A0D8               	btfss	status,0,c
 12645  001B2A  D04F               	goto	i1l11293
 12646  001B2C                     i1l11277:
 12647                           
 12648                           ; BSR set to: 0
 12649                           ;doprnt.c: 1129: if(integ < 4.294967296){
 12650  001B2C  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12651  001B30  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12652  001B34  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12653  001B38  0E70               	movlw	112
 12654  001B3A  6E14               	movwf	?i1___ftge+3,c
 12655  001B3C  0E89               	movlw	137
 12656  001B3E  6E15               	movwf	?i1___ftge+4,c
 12657  001B40  0E40               	movlw	64
 12658  001B42  6E16               	movwf	?i1___ftge+5,c
 12659  001B44  EC70  F02B         	call	i1___ftge	;wreg free
 12660  001B48  B0D8               	btfsc	status,0,c
 12661  001B4A  D003               	goto	i1l11281
 12662                           
 12663                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12664  001B4C  0100               	movlb	0	; () banked
 12665  001B4E  0EF7               	movlw	247
 12666  001B50  D002               	goto	L14
 12667  001B52                     i1l11281:
 12668                           
 12669                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12670  001B52  0100               	movlb	0	; () banked
 12671  001B54  0EF8               	movlw	248
 12672  001B56                     L14:
 12673  001B56  0100               	movlb	0	; () banked
 12674  001B58  2795               	addwf	i1sprintf@exp& (0+255),f,b
 12675  001B5A  0EFF               	movlw	255
 12676  001B5C  0100               	movlb	0	; () banked
 12677  001B5E  2396               	addwfc	(i1sprintf@exp+1)& (0+255),f,b
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;doprnt.c: 1133: }
 12681                           ;doprnt.c: 1134: integ = scale(exp);
 12682                           
 12683                           ; BSR set to: 0
 12684  001B60  C095  F047         	movff	i1sprintf@exp,?i1_scale
 12685  001B64  EC14  F015         	call	i1_scale	;wreg free
 12686  001B68  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 12687  001B6C  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 12688  001B70  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 12689                           
 12690                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 12691  001B74  C099  F011         	movff	i1sprintf@fval,?i1__tdiv_to_l_
 12692  001B78  C09A  F012         	movff	i1sprintf@fval+1,?i1__tdiv_to_l_+1
 12693  001B7C  C09B  F013         	movff	i1sprintf@fval+2,?i1__tdiv_to_l_+2
 12694  001B80  C08B  F014         	movff	i1sprintf@integ,?i1__tdiv_to_l_+3
 12695  001B84  C08C  F015         	movff	i1sprintf@integ+1,?i1__tdiv_to_l_+4
 12696  001B88  C08D  F016         	movff	i1sprintf@integ+2,?i1__tdiv_to_l_+5
 12697  001B8C  ECDD  F022         	call	i1__tdiv_to_l_	;wreg free
 12698  001B90  C014  F084         	movff	?i1__tdiv_to_l_+3,i1_sprintf$563+3
 12699  001B94  C013  F083         	movff	?i1__tdiv_to_l_+2,i1_sprintf$563+2
 12700  001B98  C012  F082         	movff	?i1__tdiv_to_l_+1,i1_sprintf$563+1
 12701  001B9C  C011  F081         	movff	?i1__tdiv_to_l_,i1_sprintf$563
 12702  001BA0  C081  F08E         	movff	i1_sprintf$563,i1sprintf@_val
 12703  001BA4  C082  F08F         	movff	i1_sprintf$563+1,i1sprintf@_val+1
 12704  001BA8  C083  F090         	movff	i1_sprintf$563+2,i1sprintf@_val+2
 12705  001BAC  C084  F091         	movff	i1_sprintf$563+3,i1sprintf@_val+3
 12706                           
 12707                           ;doprnt.c: 1138: fval = 0.0;
 12708  001BB0  0E00               	movlw	0
 12709  001BB2  0100               	movlb	0	; () banked
 12710  001BB4  0100               	movlb	0	; () banked
 12711  001BB6  6F99               	movwf	i1sprintf@fval& (0+255),b
 12712  001BB8  0E00               	movlw	0
 12713  001BBA  0100               	movlb	0	; () banked
 12714  001BBC  0100               	movlb	0	; () banked
 12715  001BBE  6F9A               	movwf	(i1sprintf@fval+1)& (0+255),b
 12716  001BC0  0E00               	movlw	0
 12717  001BC2  0100               	movlb	0	; () banked
 12718  001BC4  0100               	movlb	0	; () banked
 12719  001BC6  6F9B               	movwf	(i1sprintf@fval+2)& (0+255),b
 12720                           
 12721                           ;doprnt.c: 1139: } else {
 12722  001BC8  D02F               	goto	i1l11299
 12723  001BCA                     i1l11293:
 12724                           
 12725                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 12726  001BCA  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 12727  001BCE  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 12728  001BD2  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 12729  001BD6  EC7D  F028         	call	i1___fttol	;wreg free
 12730  001BDA  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 12731  001BDE  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 12732  001BE2  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 12733  001BE6  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 12734                           
 12735                           ;doprnt.c: 1141: fval -= (double)_val._val;
 12736  001BEA  0100               	movlb	0	; () banked
 12737  001BEC  0E00               	movlw	high i1sprintf@fval
 12738  001BEE  6E2E               	movwf	?i1___asftsub+1,c
 12739  001BF0  0100               	movlb	0	; () banked
 12740  001BF2  0E99               	movlw	low i1sprintf@fval
 12741  001BF4  6E2D               	movwf	?i1___asftsub,c
 12742  001BF6  C08E  F019         	movff	i1sprintf@_val,?i1___lltoft
 12743  001BFA  C08F  F01A         	movff	i1sprintf@_val+1,?i1___lltoft+1
 12744  001BFE  C090  F01B         	movff	i1sprintf@_val+2,?i1___lltoft+2
 12745  001C02  C091  F01C         	movff	i1sprintf@_val+3,?i1___lltoft+3
 12746  001C06  EC2D  F02E         	call	i1___lltoft	;wreg free
 12747  001C0A  C01B  F031         	movff	?i1___lltoft+2,?i1___asftsub+4
 12748  001C0E  C01A  F030         	movff	?i1___lltoft+1,?i1___asftsub+3
 12749  001C12  C019  F02F         	movff	?i1___lltoft,?i1___asftsub+2
 12750  001C16  ECF7  F02F         	call	i1___asftsub	;wreg free
 12751                           
 12752                           ;doprnt.c: 1142: exp = 0;
 12753  001C1A  0E00               	movlw	0
 12754  001C1C  0100               	movlb	0	; () banked
 12755  001C1E  0100               	movlb	0	; () banked
 12756  001C20  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12757  001C22  0E00               	movlw	0
 12758  001C24  0100               	movlb	0	; () banked
 12759  001C26  6F95               	movwf	i1sprintf@exp& (0+255),b
 12760  001C28                     i1l11299:
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;doprnt.c: 1143: }
 12764                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12765  001C28  0100               	movlb	0	; () banked
 12766  001C2A  6F78               	movwf	??i1_sprintf& (0+255),b
 12767  001C2C  0E01               	movlw	1
 12768  001C2E  0100               	movlb	0	; () banked
 12769  001C30  0100               	movlb	0	; () banked
 12770  001C32  6F9E               	movwf	i1sprintf@c& (0+255),b
 12771  001C34  0100               	movlb	0	; () banked
 12772  001C36  5178               	movf	??i1_sprintf& (0+255),w,b
 12773  001C38                     
 12774                           ; BSR set to: 0
 12775  001C38  0100               	movlb	0	; () banked
 12776  001C3A  0100               	movlb	0	; () banked
 12777  001C3C  519E               	movf	i1sprintf@c& (0+255),w,b
 12778  001C3E  0A0A               	xorlw	10
 12779  001C40  B4D8               	btfsc	status,2,c
 12780  001C42  D021               	goto	i1l11313
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 12784                           
 12785                           ; BSR set to: 0
 12786                           
 12787                           ; BSR set to: 0
 12788  001C44  0100               	movlb	0	; () banked
 12789  001C46  0100               	movlb	0	; () banked
 12790  001C48  519E               	movf	i1sprintf@c& (0+255),w,b
 12791  001C4A  0D04               	mullw	4
 12792  001C4C  0E00               	movlw	low _dpowers
 12793  001C4E  24F3               	addwf	prodl,w,c
 12794  001C50  6EF6               	movwf	tblptrl,c
 12795  001C52  0E08               	movlw	high _dpowers
 12796  001C54  20F4               	addwfc	prodh,w,c
 12797  001C56  6EF7               	movwf	tblptrh,c
 12798  001C58  0009               	tblrd		*+
 12799  001C5A  50F5               	movf	tablat,w,c
 12800  001C5C  0100               	movlb	0	; () banked
 12801  001C5E  0100               	movlb	0	; () banked
 12802  001C60  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 12803  001C62  0009               	tblrd		*+
 12804  001C64  50F5               	movf	tablat,w,c
 12805  001C66  0100               	movlb	0	; () banked
 12806  001C68  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 12807  001C6A  0009               	tblrd		*+
 12808  001C6C  50F5               	movf	tablat,w,c
 12809  001C6E  0100               	movlb	0	; () banked
 12810  001C70  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 12811  001C72  0009               	tblrd		*+
 12812  001C74  50F5               	movf	tablat,w,c
 12813  001C76  0100               	movlb	0	; () banked
 12814  001C78  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 12815  001C7A  A0D8               	btfss	status,0,c
 12816  001C7C  D004               	goto	i1l11313
 12817                           
 12818                           ; BSR set to: 0
 12819                           
 12820                           ; BSR set to: 0
 12821                           
 12822                           ; BSR set to: 0
 12823                           ;doprnt.c: 1147: break;
 12824  001C7E  0100               	movlb	0	; () banked
 12825  001C80  0100               	movlb	0	; () banked
 12826  001C82  2B9E               	incf	i1sprintf@c& (0+255),f,b
 12827  001C84  D7D9               	goto	L15
 12828  001C86                     i1l11313:
 12829                           
 12830                           ; BSR set to: 0
 12831                           ;doprnt.c: 1151: width -= prec + c + exp;
 12832  001C86  0100               	movlb	0	; () banked
 12833  001C88  C09E  F078         	movff	i1sprintf@c,??i1_sprintf
 12834  001C8C  0100               	movlb	0	; () banked
 12835  001C8E  6B79               	clrf	(??i1_sprintf+1)& (0+255),b
 12836  001C90  BF78               	btfsc	??i1_sprintf& (0+255),7,b
 12837  001C92  0779               	decf	(??i1_sprintf+1)& (0+255),f,b
 12838  001C94  0100               	movlb	0	; () banked
 12839  001C96  0100               	movlb	0	; () banked
 12840  001C98  519C               	movf	i1sprintf@prec& (0+255),w,b
 12841  001C9A  0100               	movlb	0	; () banked
 12842  001C9C  2778               	addwf	??i1_sprintf& (0+255),f,b
 12843  001C9E  0100               	movlb	0	; () banked
 12844  001CA0  0100               	movlb	0	; () banked
 12845  001CA2  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12846  001CA4  0100               	movlb	0	; () banked
 12847  001CA6  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 12848  001CA8  0100               	movlb	0	; () banked
 12849  001CAA  0100               	movlb	0	; () banked
 12850  001CAC  5195               	movf	i1sprintf@exp& (0+255),w,b
 12851  001CAE  0100               	movlb	0	; () banked
 12852  001CB0  2778               	addwf	??i1_sprintf& (0+255),f,b
 12853  001CB2  0100               	movlb	0	; () banked
 12854  001CB4  0100               	movlb	0	; () banked
 12855  001CB6  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12856  001CB8  0100               	movlb	0	; () banked
 12857  001CBA  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 12858  001CBC  0100               	movlb	0	; () banked
 12859  001CBE  5178               	movf	??i1_sprintf& (0+255),w,b
 12860  001CC0  0100               	movlb	0	; () banked
 12861  001CC2  0100               	movlb	0	; () banked
 12862  001CC4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 12863  001CC6  0100               	movlb	0	; () banked
 12864  001CC8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12865  001CCA  0100               	movlb	0	; () banked
 12866  001CCC  0100               	movlb	0	; () banked
 12867  001CCE  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 12868                           
 12869                           ;doprnt.c: 1152: if(
 12870                           ;doprnt.c: 1156: prec)
 12871  001CD0  0100               	movlb	0	; () banked
 12872  001CD2  0100               	movlb	0	; () banked
 12873  001CD4  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12874  001CD6  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 12875  001CD8  B4D8               	btfsc	status,2,c
 12876  001CDA  D005               	goto	i1l11317
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;doprnt.c: 1157: width--;
 12880  001CDC  0100               	movlb	0	; () banked
 12881  001CDE  0100               	movlb	0	; () banked
 12882  001CE0  0797               	decf	i1sprintf@width& (0+255),f,b
 12883  001CE2  A0D8               	btfss	status,0,c
 12884  001CE4  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12885  001CE6                     i1l11317:
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;doprnt.c: 1158: if(flag & 0x03)
 12889  001CE6  0E03               	movlw	3
 12890  001CE8  0100               	movlb	0	; () banked
 12891  001CEA  0100               	movlb	0	; () banked
 12892  001CEC  1593               	andwf	i1sprintf@flag& (0+255),w,b
 12893  001CEE  0100               	movlb	0	; () banked
 12894  001CF0  6F78               	movwf	??i1_sprintf& (0+255),b
 12895  001CF2  0E00               	movlw	0
 12896  001CF4  0100               	movlb	0	; () banked
 12897  001CF6  0100               	movlb	0	; () banked
 12898  001CF8  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 12899  001CFA  0100               	movlb	0	; () banked
 12900  001CFC  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12901  001CFE  0100               	movlb	0	; () banked
 12902  001D00  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12903  001D02  1178               	iorwf	??i1_sprintf& (0+255),w,b
 12904  001D04  B4D8               	btfsc	status,2,c
 12905  001D06  D005               	goto	i1l11321
 12906                           
 12907                           ; BSR set to: 0
 12908                           ;doprnt.c: 1159: width--;
 12909  001D08  0100               	movlb	0	; () banked
 12910  001D0A  0100               	movlb	0	; () banked
 12911  001D0C  0797               	decf	i1sprintf@width& (0+255),f,b
 12912  001D0E  A0D8               	btfss	status,0,c
 12913  001D10  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12914  001D12                     i1l11321:
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;doprnt.c: 1162: if(flag & 0x04) {
 12918  001D12  0100               	movlb	0	; () banked
 12919  001D14  0100               	movlb	0	; () banked
 12920  001D16  B593               	btfsc	i1sprintf@flag& (0+255),2,b
 12921  001D18  D010               	goto	i1l11331
 12922  001D1A  D029               	goto	i1l11339
 12923  001D1C                     i1l11325:
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;doprnt.c: 1176: ((*sp++ = ('0')));
 12927  001D1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 12928  001D20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 12929  001D24  0E30               	movlw	48
 12930  001D26  6EDF               	movwf	indf2,c
 12931                           
 12932                           ; BSR set to: 0
 12933  001D28  0100               	movlb	0	; () banked
 12934  001D2A  0100               	movlb	0	; () banked
 12935  001D2C  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12936  001D2E  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;doprnt.c: 1177: width--;
 12940  001D30  0100               	movlb	0	; () banked
 12941  001D32  0100               	movlb	0	; () banked
 12942  001D34  0797               	decf	i1sprintf@width& (0+255),f,b
 12943  001D36  A0D8               	btfss	status,0,c
 12944  001D38  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12945  001D3A                     i1l11331:
 12946                           
 12947                           ; BSR set to: 0
 12948  001D3A  0100               	movlb	0	; () banked
 12949  001D3C  0100               	movlb	0	; () banked
 12950  001D3E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 12951  001D40  0A80               	xorlw	128
 12952  001D42  0F80               	addlw	-128
 12953  001D44  0E01               	movlw	1
 12954  001D46  B4D8               	btfsc	status,2,c
 12955  001D48  5D97               	subwf	i1sprintf@width& (0+255),w,b
 12956  001D4A  A0D8               	btfss	status,0,c
 12957  001D4C  D070               	goto	i1l11355
 12958  001D4E  D7E6               	goto	i1l11325
 12959  001D50                     i1l11333:
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;doprnt.c: 1188: ((*sp++ = (' ')));
 12963  001D50  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 12964  001D54  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 12965  001D58  0E20               	movlw	32
 12966  001D5A  6EDF               	movwf	indf2,c
 12967                           
 12968                           ; BSR set to: 0
 12969  001D5C  0100               	movlb	0	; () banked
 12970  001D5E  0100               	movlb	0	; () banked
 12971  001D60  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12972  001D62  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12973                           
 12974                           ; BSR set to: 0
 12975                           ;doprnt.c: 1189: width--;
 12976  001D64  0100               	movlb	0	; () banked
 12977  001D66  0100               	movlb	0	; () banked
 12978  001D68  0797               	decf	i1sprintf@width& (0+255),f,b
 12979  001D6A  A0D8               	btfss	status,0,c
 12980  001D6C  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12981  001D6E                     i1l11339:
 12982                           
 12983                           ; BSR set to: 0
 12984  001D6E  0100               	movlb	0	; () banked
 12985  001D70  0100               	movlb	0	; () banked
 12986  001D72  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 12987  001D74  0A80               	xorlw	128
 12988  001D76  0F80               	addlw	-128
 12989  001D78  0E01               	movlw	1
 12990  001D7A  B4D8               	btfsc	status,2,c
 12991  001D7C  5D97               	subwf	i1sprintf@width& (0+255),w,b
 12992  001D7E  B0D8               	btfsc	status,0,c
 12993  001D80  D7E7               	goto	i1l11333
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;doprnt.c: 1190: }
 12997                           ;doprnt.c: 1195: if(flag & 0x03)
 12998                           
 12999                           ; BSR set to: 0
 13000  001D82  0E03               	movlw	3
 13001  001D84  0100               	movlb	0	; () banked
 13002  001D86  0100               	movlb	0	; () banked
 13003  001D88  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13004  001D8A  0100               	movlb	0	; () banked
 13005  001D8C  6F78               	movwf	??i1_sprintf& (0+255),b
 13006  001D8E  0E00               	movlw	0
 13007  001D90  0100               	movlb	0	; () banked
 13008  001D92  0100               	movlb	0	; () banked
 13009  001D94  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13010  001D96  0100               	movlb	0	; () banked
 13011  001D98  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13012  001D9A  0100               	movlb	0	; () banked
 13013  001D9C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13014  001D9E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13015  001DA0  B4D8               	btfsc	status,2,c
 13016  001DA2  D045               	goto	i1l11355
 13017                           
 13018                           ; BSR set to: 0
 13019                           ;doprnt.c: 1197: ((*sp++ = ('-')));
 13020  001DA4  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13021  001DA8  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13022  001DAC  0E2D               	movlw	45
 13023  001DAE  D03A               	goto	L16
 13024  001DB0                     i1l11347:
 13025                           
 13026                           ; BSR set to: 0
 13027                           ;doprnt.c: 1207: {
 13028                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
 13029  001DB0  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13030  001DB4  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13031  001DB8  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13032  001DBC  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13033  001DC0  0100               	movlb	0	; () banked
 13034  001DC2  0100               	movlb	0	; () banked
 13035  001DC4  519E               	movf	i1sprintf@c& (0+255),w,b
 13036  001DC6  0D04               	mullw	4
 13037  001DC8  0E00               	movlw	low _dpowers
 13038  001DCA  24F3               	addwf	prodl,w,c
 13039  001DCC  6EF6               	movwf	tblptrl,c
 13040  001DCE  0E08               	movlw	high _dpowers
 13041  001DD0  20F4               	addwfc	prodh,w,c
 13042  001DD2  6EF7               	movwf	tblptrh,c
 13043  001DD4  0009               	tblrd		*+
 13044  001DD6  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13045  001DDA  0009               	tblrd		*+
 13046  001DDC  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13047  001DE0  0009               	tblrd		*+
 13048  001DE2  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13049  001DE6  000A               	tblrd		*-
 13050  001DE8  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13051  001DEC  EC8C  F02C         	call	i1___lldiv	;wreg free
 13052  001DF0  C011  F085         	movff	?i1___lldiv,i1sprintf@vd
 13053  001DF4  C012  F086         	movff	?i1___lldiv+1,i1sprintf@vd+1
 13054                           
 13055                           ;doprnt.c: 1209: vd %= 10;
 13056  001DF8  C085  F011         	movff	i1sprintf@vd,?i1___lwmod
 13057  001DFC  C086  F012         	movff	i1sprintf@vd+1,?i1___lwmod+1
 13058  001E00  0E00               	movlw	0
 13059  001E02  6E14               	movwf	?i1___lwmod+3,c
 13060  001E04  0E0A               	movlw	10
 13061  001E06  6E13               	movwf	?i1___lwmod+2,c
 13062  001E08  EC0F  F02F         	call	i1___lwmod	;wreg free
 13063  001E0C  C011  F085         	movff	?i1___lwmod,i1sprintf@vd
 13064  001E10  C012  F086         	movff	?i1___lwmod+1,i1sprintf@vd+1
 13065                           
 13066                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
 13067  001E14  0100               	movlb	0	; () banked
 13068  001E16  0100               	movlb	0	; () banked
 13069  001E18  5185               	movf	i1sprintf@vd& (0+255),w,b
 13070  001E1A  0F30               	addlw	48
 13071  001E1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13072  001E20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13073  001E24                     L16:
 13074  001E24  6EDF               	movwf	indf2,c
 13075                           
 13076                           ; BSR set to: 0
 13077  001E26  0100               	movlb	0	; () banked
 13078  001E28  0100               	movlb	0	; () banked
 13079  001E2A  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13080  001E2C  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13081  001E2E                     i1l11355:
 13082                           
 13083                           ; BSR set to: 0
 13084  001E2E  0100               	movlb	0	; () banked
 13085  001E30  0100               	movlb	0	; () banked
 13086  001E32  079E               	decf	i1sprintf@c& (0+255),f,b
 13087  001E34  0100               	movlb	0	; () banked
 13088  001E36  299E               	incf	i1sprintf@c& (0+255),w,b
 13089  001E38  B4D8               	btfsc	status,2,c
 13090  001E3A  D010               	goto	i1l11363
 13091  001E3C  D7B9               	goto	i1l11347
 13092  001E3E                     i1l11357:
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;doprnt.c: 1215: ((*sp++ = ('0')));
 13096  001E3E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13097  001E42  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13098  001E46  0E30               	movlw	48
 13099  001E48  6EDF               	movwf	indf2,c
 13100                           
 13101                           ; BSR set to: 0
 13102  001E4A  0100               	movlb	0	; () banked
 13103  001E4C  0100               	movlb	0	; () banked
 13104  001E4E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13105  001E50  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;doprnt.c: 1216: exp--;
 13109  001E52  0100               	movlb	0	; () banked
 13110  001E54  0100               	movlb	0	; () banked
 13111  001E56  0795               	decf	i1sprintf@exp& (0+255),f,b
 13112  001E58  A0D8               	btfss	status,0,c
 13113  001E5A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 13114  001E5C                     i1l11363:
 13115                           
 13116                           ; BSR set to: 0
 13117  001E5C  0100               	movlb	0	; () banked
 13118  001E5E  0100               	movlb	0	; () banked
 13119  001E60  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 13120  001E62  0A80               	xorlw	128
 13121  001E64  0F80               	addlw	-128
 13122  001E66  0E01               	movlw	1
 13123  001E68  B4D8               	btfsc	status,2,c
 13124  001E6A  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 13125  001E6C  B0D8               	btfsc	status,0,c
 13126  001E6E  D7E7               	goto	i1l11357
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;doprnt.c: 1217: }
 13130                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13131                           
 13132                           ; BSR set to: 0
 13133  001E70  0100               	movlb	0	; () banked
 13134  001E72  0100               	movlb	0	; () banked
 13135  001E74  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13136  001E76  0A80               	xorlw	128
 13137  001E78  0F80               	addlw	-128
 13138  001E7A  0E09               	movlw	9
 13139  001E7C  B4D8               	btfsc	status,2,c
 13140  001E7E  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13141  001E80  A0D8               	btfss	status,0,c
 13142  001E82  D009               	goto	i1l325
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13146  001E84  0100               	movlb	0	; () banked
 13147  001E86  6F78               	movwf	??i1_sprintf& (0+255),b
 13148  001E88  0E08               	movlw	8
 13149  001E8A  0100               	movlb	0	; () banked
 13150  001E8C  0100               	movlb	0	; () banked
 13151  001E8E  6F9E               	movwf	i1sprintf@c& (0+255),b
 13152  001E90  0100               	movlb	0	; () banked
 13153  001E92  5178               	movf	??i1_sprintf& (0+255),w,b
 13154  001E94  D002               	goto	i1l11369
 13155  001E96                     i1l325:
 13156                           
 13157                           ; BSR set to: 0
 13158                           ;doprnt.c: 1220: else
 13159                           ;doprnt.c: 1221: c = prec;
 13160  001E96  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 13161  001E9A                     i1l11369:
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;doprnt.c: 1222: prec -= c;
 13165  001E9A  0100               	movlb	0	; () banked
 13166  001E9C  0100               	movlb	0	; () banked
 13167  001E9E  519E               	movf	i1sprintf@c& (0+255),w,b
 13168  001EA0  0100               	movlb	0	; () banked
 13169  001EA2  0100               	movlb	0	; () banked
 13170  001EA4  5F9C               	subwf	i1sprintf@prec& (0+255),f,b
 13171  001EA6  0E00               	movlw	0
 13172  001EA8  0100               	movlb	0	; () banked
 13173  001EAA  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13174  001EAC  0EFF               	movlw	255
 13175  001EAE  0100               	movlb	0	; () banked
 13176  001EB0  0100               	movlb	0	; () banked
 13177  001EB2  5B9D               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;doprnt.c: 1226: if(c)
 13181  001EB4  0100               	movlb	0	; () banked
 13182  001EB6  0100               	movlb	0	; () banked
 13183  001EB8  519E               	movf	i1sprintf@c& (0+255),w,b
 13184  001EBA  B4D8               	btfsc	status,2,c
 13185  001EBC  D00A               	goto	i1l11377
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;doprnt.c: 1228: ((*sp++ = ('.')));
 13189  001EBE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13190  001EC2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13191  001EC6  0E2E               	movlw	46
 13192  001EC8  6EDF               	movwf	indf2,c
 13193                           
 13194                           ; BSR set to: 0
 13195  001ECA  0100               	movlb	0	; () banked
 13196  001ECC  0100               	movlb	0	; () banked
 13197  001ECE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13198  001ED0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13199  001ED2                     i1l11377:
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 13203  001ED2  C09E  F047         	movff	i1sprintf@c,?i1_scale
 13204  001ED6  EC14  F015         	call	i1_scale	;wreg free
 13205  001EDA  C049  F080         	movff	?i1_scale+2,i1_sprintf$1829+2
 13206  001EDE  C048  F07F         	movff	?i1_scale+1,i1_sprintf$1829+1
 13207  001EE2  C047  F07E         	movff	?i1_scale,i1_sprintf$1829
 13208                           
 13209                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 13210  001EE6  C099  F039         	movff	i1sprintf@fval,?i1___ftmul+3
 13211  001EEA  C09A  F03A         	movff	i1sprintf@fval+1,?i1___ftmul+4
 13212  001EEE  C09B  F03B         	movff	i1sprintf@fval+2,?i1___ftmul+5
 13213  001EF2  C07E  F036         	movff	i1_sprintf$1829,?i1___ftmul
 13214  001EF6  C07F  F037         	movff	i1_sprintf$1829+1,?i1___ftmul+1
 13215  001EFA  C080  F038         	movff	i1_sprintf$1829+2,?i1___ftmul+2
 13216  001EFE  EC0C  F025         	call	i1___ftmul	;wreg free
 13217  001F02  C038  F029         	movff	?i1___ftmul+2,?i1___fttol+2
 13218  001F06  C037  F028         	movff	?i1___ftmul+1,?i1___fttol+1
 13219  001F0A  C036  F027         	movff	?i1___ftmul,?i1___fttol
 13220  001F0E  EC7D  F028         	call	i1___fttol	;wreg free
 13221  001F12  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 13222  001F16  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 13223  001F1A  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 13224  001F1E  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 13225                           
 13226                           ;doprnt.c: 1235: while(c--) {
 13227  001F22  D067               	goto	i1l11391
 13228  001F24                     i1l11381:
 13229                           
 13230                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
 13231  001F24  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13232  001F28  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13233  001F2C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13234  001F30  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13235  001F34  0100               	movlb	0	; () banked
 13236  001F36  0100               	movlb	0	; () banked
 13237  001F38  519E               	movf	i1sprintf@c& (0+255),w,b
 13238  001F3A  0D04               	mullw	4
 13239  001F3C  0E00               	movlw	low _dpowers
 13240  001F3E  24F3               	addwf	prodl,w,c
 13241  001F40  6EF6               	movwf	tblptrl,c
 13242  001F42  0E08               	movlw	high _dpowers
 13243  001F44  20F4               	addwfc	prodh,w,c
 13244  001F46  6EF7               	movwf	tblptrh,c
 13245  001F48  0009               	tblrd		*+
 13246  001F4A  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13247  001F4E  0009               	tblrd		*+
 13248  001F50  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13249  001F54  0009               	tblrd		*+
 13250  001F56  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13251  001F5A  000A               	tblrd		*-
 13252  001F5C  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13253  001F60  EC8C  F02C         	call	i1___lldiv	;wreg free
 13254  001F64  C011  F087         	movff	?i1___lldiv,i1sprintf@vd_565
 13255  001F68  C012  F088         	movff	?i1___lldiv+1,i1sprintf@vd_565+1
 13256                           
 13257                           ;doprnt.c: 1237: vd %= 10;
 13258  001F6C  C087  F011         	movff	i1sprintf@vd_565,?i1___lwmod
 13259  001F70  C088  F012         	movff	i1sprintf@vd_565+1,?i1___lwmod+1
 13260  001F74  0E00               	movlw	0
 13261  001F76  6E14               	movwf	?i1___lwmod+3,c
 13262  001F78  0E0A               	movlw	10
 13263  001F7A  6E13               	movwf	?i1___lwmod+2,c
 13264  001F7C  EC0F  F02F         	call	i1___lwmod	;wreg free
 13265  001F80  C011  F087         	movff	?i1___lwmod,i1sprintf@vd_565
 13266  001F84  C012  F088         	movff	?i1___lwmod+1,i1sprintf@vd_565+1
 13267                           
 13268                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
 13269  001F88  0100               	movlb	0	; () banked
 13270  001F8A  0100               	movlb	0	; () banked
 13271  001F8C  5187               	movf	i1sprintf@vd_565& (0+255),w,b
 13272  001F8E  0F30               	addlw	48
 13273  001F90  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13274  001F94  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13275  001F98  6EDF               	movwf	indf2,c
 13276                           
 13277                           ; BSR set to: 0
 13278  001F9A  0100               	movlb	0	; () banked
 13279  001F9C  0100               	movlb	0	; () banked
 13280  001F9E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13281  001FA0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;doprnt.c: 1239: _val._val %= dpowers[c];
 13285  001FA2  C08E  F01F         	movff	i1sprintf@_val,?i1___llmod
 13286  001FA6  C08F  F020         	movff	i1sprintf@_val+1,?i1___llmod+1
 13287  001FAA  C090  F021         	movff	i1sprintf@_val+2,?i1___llmod+2
 13288  001FAE  C091  F022         	movff	i1sprintf@_val+3,?i1___llmod+3
 13289  001FB2  0100               	movlb	0	; () banked
 13290  001FB4  0100               	movlb	0	; () banked
 13291  001FB6  519E               	movf	i1sprintf@c& (0+255),w,b
 13292  001FB8  0D04               	mullw	4
 13293  001FBA  0E00               	movlw	low _dpowers
 13294  001FBC  24F3               	addwf	prodl,w,c
 13295  001FBE  6EF6               	movwf	tblptrl,c
 13296  001FC0  0E08               	movlw	high _dpowers
 13297  001FC2  20F4               	addwfc	prodh,w,c
 13298  001FC4  6EF7               	movwf	tblptrh,c
 13299  001FC6  0009               	tblrd		*+
 13300  001FC8  CFF5 F023          	movff	tablat,?i1___llmod+4
 13301  001FCC  0009               	tblrd		*+
 13302  001FCE  CFF5 F024          	movff	tablat,?i1___llmod+5
 13303  001FD2  0009               	tblrd		*+
 13304  001FD4  CFF5 F025          	movff	tablat,?i1___llmod+6
 13305  001FD8  000A               	tblrd		*-
 13306  001FDA  CFF5 F026          	movff	tablat,?i1___llmod+7
 13307  001FDE  ECC6  F02D         	call	i1___llmod	;wreg free
 13308  001FE2  C022  F091         	movff	?i1___llmod+3,i1sprintf@_val+3
 13309  001FE6  C021  F090         	movff	?i1___llmod+2,i1sprintf@_val+2
 13310  001FEA  C020  F08F         	movff	?i1___llmod+1,i1sprintf@_val+1
 13311  001FEE  C01F  F08E         	movff	?i1___llmod,i1sprintf@_val
 13312  001FF2                     i1l11391:
 13313  001FF2  0100               	movlb	0	; () banked
 13314  001FF4  0100               	movlb	0	; () banked
 13315  001FF6  079E               	decf	i1sprintf@c& (0+255),f,b
 13316  001FF8  0100               	movlb	0	; () banked
 13317  001FFA  299E               	incf	i1sprintf@c& (0+255),w,b
 13318  001FFC  B4D8               	btfsc	status,2,c
 13319  001FFE  D010               	goto	i1l11399
 13320  002000  D791               	goto	i1l11381
 13321  002002                     i1l11393:
 13322                           
 13323                           ; BSR set to: 0
 13324                           ;doprnt.c: 1243: ((*sp++ = ('0')));
 13325  002002  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13326  002006  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13327  00200A  0E30               	movlw	48
 13328  00200C  6EDF               	movwf	indf2,c
 13329                           
 13330                           ; BSR set to: 0
 13331  00200E  0100               	movlb	0	; () banked
 13332  002010  0100               	movlb	0	; () banked
 13333  002012  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13334  002014  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;doprnt.c: 1244: prec--;
 13338  002016  0100               	movlb	0	; () banked
 13339  002018  0100               	movlb	0	; () banked
 13340  00201A  079C               	decf	i1sprintf@prec& (0+255),f,b
 13341  00201C  A0D8               	btfss	status,0,c
 13342  00201E  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13343  002020                     i1l11399:
 13344                           
 13345                           ; BSR set to: 0
 13346  002020  0100               	movlb	0	; () banked
 13347  002022  0100               	movlb	0	; () banked
 13348  002024  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13349  002026  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 13350  002028  B4D8               	btfsc	status,2,c
 13351  00202A  D1DB               	goto	i1l11497
 13352  00202C  D7EA               	goto	i1l11393
 13353  00202E                     i1l11401:
 13354                           
 13355                           ; BSR set to: 0
 13356                           ;doprnt.c: 1253: }
 13357                           ;doprnt.c: 1260: {
 13358                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13359  00202E  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 13360  002032  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 13361  002036  0100               	movlb	0	; () banked
 13362  002038  CFDE F08E          	movff	postinc2,i1sprintf@_val
 13363  00203C  0100               	movlb	0	; () banked
 13364  00203E  CFDD F08F          	movff	postdec2,i1sprintf@_val+1
 13365  002042  0100               	movlb	0	; () banked
 13366  002044  0E00               	movlw	0
 13367  002046  0100               	movlb	0	; () banked
 13368  002048  BF8F               	btfsc	(i1sprintf@_val+1)& (0+255),7,b
 13369  00204A  0EFF               	movlw	-1
 13370  00204C  0100               	movlb	0	; () banked
 13371  00204E  6F90               	movwf	(i1sprintf@_val+2)& (0+255),b
 13372  002050  0100               	movlb	0	; () banked
 13373  002052  6F91               	movwf	(i1sprintf@_val+3)& (0+255),b
 13374                           
 13375                           ; BSR set to: 0
 13376  002054  0E02               	movlw	2
 13377  002056  0100               	movlb	0	; () banked
 13378  002058  0100               	movlb	0	; () banked
 13379  00205A  2789               	addwf	i1sprintf@ap& (0+255),f,b
 13380  00205C  0E00               	movlw	0
 13381  00205E  0100               	movlb	0	; () banked
 13382  002060  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;doprnt.c: 1268: if((long)_val._val < 0) {
 13386  002062  0100               	movlb	0	; () banked
 13387  002064  0100               	movlb	0	; () banked
 13388  002066  AF91               	btfss	(i1sprintf@_val+3)& (0+255),7,b
 13389  002068  D014               	goto	i1l11411
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;doprnt.c: 1269: flag |= 0x03;
 13393  00206A  0E03               	movlw	3
 13394  00206C  0100               	movlb	0	; () banked
 13395  00206E  0100               	movlb	0	; () banked
 13396  002070  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;doprnt.c: 1270: _val._val = -_val._val;
 13400  002072  0100               	movlb	0	; () banked
 13401  002074  0100               	movlb	0	; () banked
 13402  002076  1F91               	comf	(i1sprintf@_val+3)& (0+255),f,b
 13403  002078  0100               	movlb	0	; () banked
 13404  00207A  1F90               	comf	(i1sprintf@_val+2)& (0+255),f,b
 13405  00207C  0100               	movlb	0	; () banked
 13406  00207E  1F8F               	comf	(i1sprintf@_val+1)& (0+255),f,b
 13407  002080  0100               	movlb	0	; () banked
 13408  002082  6D8E               	negf	i1sprintf@_val& (0+255),b
 13409  002084  0E00               	movlw	0
 13410  002086  0100               	movlb	0	; () banked
 13411  002088  238F               	addwfc	(i1sprintf@_val+1)& (0+255),f,b
 13412  00208A  0100               	movlb	0	; () banked
 13413  00208C  2390               	addwfc	(i1sprintf@_val+2)& (0+255),f,b
 13414  00208E  0100               	movlb	0	; () banked
 13415  002090  2391               	addwfc	(i1sprintf@_val+3)& (0+255),f,b
 13416  002092                     i1l11411:
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;doprnt.c: 1271: }
 13420                           ;doprnt.c: 1273: }
 13421                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
 13422  002092  0100               	movlb	0	; () banked
 13423  002094  0100               	movlb	0	; () banked
 13424  002096  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13425  002098  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 13426  00209A  A4D8               	btfss	status,2,c
 13427  00209C  D00C               	goto	i1l11417
 13428                           
 13429                           ; BSR set to: 0
 13430  00209E  0100               	movlb	0	; () banked
 13431  0020A0  0100               	movlb	0	; () banked
 13432  0020A2  5191               	movf	(i1sprintf@_val+3)& (0+255),w,b
 13433  0020A4  118E               	iorwf	i1sprintf@_val& (0+255),w,b
 13434  0020A6  118F               	iorwf	(i1sprintf@_val+1)& (0+255),w,b
 13435  0020A8  1190               	iorwf	(i1sprintf@_val+2)& (0+255),w,b
 13436  0020AA  A4D8               	btfss	status,2,c
 13437  0020AC  D004               	goto	i1l11417
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;doprnt.c: 1298: prec++;
 13441  0020AE  0100               	movlb	0	; () banked
 13442  0020B0  0100               	movlb	0	; () banked
 13443  0020B2  4B9C               	infsnz	i1sprintf@prec& (0+255),f,b
 13444  0020B4  2B9D               	incf	(i1sprintf@prec+1)& (0+255),f,b
 13445  0020B6                     i1l11417:
 13446                           
 13447                           ; BSR set to: 0
 13448                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13449  0020B6  0100               	movlb	0	; () banked
 13450  0020B8  6F78               	movwf	??i1_sprintf& (0+255),b
 13451  0020BA  0E01               	movlw	1
 13452  0020BC  0100               	movlb	0	; () banked
 13453  0020BE  0100               	movlb	0	; () banked
 13454  0020C0  6F9E               	movwf	i1sprintf@c& (0+255),b
 13455  0020C2  0100               	movlb	0	; () banked
 13456  0020C4  5178               	movf	??i1_sprintf& (0+255),w,b
 13457  0020C6                     
 13458                           ; BSR set to: 0
 13459  0020C6  0100               	movlb	0	; () banked
 13460  0020C8  0100               	movlb	0	; () banked
 13461  0020CA  519E               	movf	i1sprintf@c& (0+255),w,b
 13462  0020CC  0A0A               	xorlw	10
 13463  0020CE  B4D8               	btfsc	status,2,c
 13464  0020D0  D021               	goto	i1l11431
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 13468                           
 13469                           ; BSR set to: 0
 13470                           
 13471                           ; BSR set to: 0
 13472  0020D2  0100               	movlb	0	; () banked
 13473  0020D4  0100               	movlb	0	; () banked
 13474  0020D6  519E               	movf	i1sprintf@c& (0+255),w,b
 13475  0020D8  0D04               	mullw	4
 13476  0020DA  0E00               	movlw	low _dpowers
 13477  0020DC  24F3               	addwf	prodl,w,c
 13478  0020DE  6EF6               	movwf	tblptrl,c
 13479  0020E0  0E08               	movlw	high _dpowers
 13480  0020E2  20F4               	addwfc	prodh,w,c
 13481  0020E4  6EF7               	movwf	tblptrh,c
 13482  0020E6  0009               	tblrd		*+
 13483  0020E8  50F5               	movf	tablat,w,c
 13484  0020EA  0100               	movlb	0	; () banked
 13485  0020EC  0100               	movlb	0	; () banked
 13486  0020EE  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 13487  0020F0  0009               	tblrd		*+
 13488  0020F2  50F5               	movf	tablat,w,c
 13489  0020F4  0100               	movlb	0	; () banked
 13490  0020F6  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 13491  0020F8  0009               	tblrd		*+
 13492  0020FA  50F5               	movf	tablat,w,c
 13493  0020FC  0100               	movlb	0	; () banked
 13494  0020FE  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 13495  002100  0009               	tblrd		*+
 13496  002102  50F5               	movf	tablat,w,c
 13497  002104  0100               	movlb	0	; () banked
 13498  002106  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 13499  002108  A0D8               	btfss	status,0,c
 13500  00210A  D004               	goto	i1l11431
 13501                           
 13502                           ; BSR set to: 0
 13503                           
 13504                           ; BSR set to: 0
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;doprnt.c: 1314: break;
 13508  00210C  0100               	movlb	0	; () banked
 13509  00210E  0100               	movlb	0	; () banked
 13510  002110  2B9E               	incf	i1sprintf@c& (0+255),f,b
 13511  002112  D7D9               	goto	L17
 13512  002114                     i1l11431:
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;doprnt.c: 1346: if(c < prec)
 13516  002114  0E80               	movlw	128
 13517  002116  0100               	movlb	0	; () banked
 13518  002118  0100               	movlb	0	; () banked
 13519  00211A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13520  00211C  0E7F               	movlw	127
 13521  00211E  6F78               	movwf	??i1_sprintf& (0+255),b
 13522  002120  0100               	movlb	0	; () banked
 13523  002122  0100               	movlb	0	; () banked
 13524  002124  519C               	movf	i1sprintf@prec& (0+255),w,b
 13525  002126  0100               	movlb	0	; () banked
 13526  002128  0100               	movlb	0	; () banked
 13527  00212A  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 13528  00212C  0100               	movlb	0	; () banked
 13529  00212E  0100               	movlb	0	; () banked
 13530  002130  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13531  002132  0A80               	xorlw	128
 13532  002134  0100               	movlb	0	; () banked
 13533  002136  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13534  002138  B0D8               	btfsc	status,0,c
 13535  00213A  D003               	goto	i1l11435
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;doprnt.c: 1347: c = prec;
 13539  00213C  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 13540  002140  D020               	goto	i1l11439
 13541  002142                     i1l11435:
 13542                           
 13543                           ; BSR set to: 0
 13544                           ;doprnt.c: 1348: else if(prec < c)
 13545  002142  0100               	movlb	0	; () banked
 13546  002144  0100               	movlb	0	; () banked
 13547  002146  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13548  002148  0A80               	xorlw	128
 13549  00214A  0100               	movlb	0	; () banked
 13550  00214C  6F78               	movwf	??i1_sprintf& (0+255),b
 13551  00214E  0100               	movlb	0	; () banked
 13552  002150  0100               	movlb	0	; () banked
 13553  002152  519E               	movf	i1sprintf@c& (0+255),w,b
 13554  002154  0100               	movlb	0	; () banked
 13555  002156  0100               	movlb	0	; () banked
 13556  002158  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13557  00215A  0E80               	movlw	128
 13558  00215C  0100               	movlb	0	; () banked
 13559  00215E  0100               	movlb	0	; () banked
 13560  002160  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13561  002162  0E7F               	movlw	127
 13562  002164  0100               	movlb	0	; () banked
 13563  002166  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13564  002168  B0D8               	btfsc	status,0,c
 13565  00216A  D00B               	goto	i1l11439
 13566                           
 13567                           ; BSR set to: 0
 13568                           ;doprnt.c: 1349: prec = c;
 13569  00216C  0100               	movlb	0	; () banked
 13570  00216E  0100               	movlb	0	; () banked
 13571  002170  519E               	movf	i1sprintf@c& (0+255),w,b
 13572  002172  0100               	movlb	0	; () banked
 13573  002174  0100               	movlb	0	; () banked
 13574  002176  6F9C               	movwf	i1sprintf@prec& (0+255),b
 13575  002178  0100               	movlb	0	; () banked
 13576  00217A  6B9D               	clrf	(i1sprintf@prec+1)& (0+255),b
 13577  00217C  0100               	movlb	0	; () banked
 13578  00217E  BF9C               	btfsc	i1sprintf@prec& (0+255),7,b
 13579  002180  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13580  002182                     i1l11439:
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;doprnt.c: 1352: if(width && flag & 0x03)
 13584  002182  0100               	movlb	0	; () banked
 13585  002184  0100               	movlb	0	; () banked
 13586  002186  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13587  002188  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13588  00218A  B4D8               	btfsc	status,2,c
 13589  00218C  D016               	goto	i1l11445
 13590                           
 13591                           ; BSR set to: 0
 13592  00218E  0E03               	movlw	3
 13593  002190  0100               	movlb	0	; () banked
 13594  002192  0100               	movlb	0	; () banked
 13595  002194  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13596  002196  0100               	movlb	0	; () banked
 13597  002198  6F78               	movwf	??i1_sprintf& (0+255),b
 13598  00219A  0E00               	movlw	0
 13599  00219C  0100               	movlb	0	; () banked
 13600  00219E  0100               	movlb	0	; () banked
 13601  0021A0  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13602  0021A2  0100               	movlb	0	; () banked
 13603  0021A4  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13604  0021A6  0100               	movlb	0	; () banked
 13605  0021A8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13606  0021AA  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13607  0021AC  B4D8               	btfsc	status,2,c
 13608  0021AE  D005               	goto	i1l11445
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;doprnt.c: 1353: width--;
 13612  0021B0  0100               	movlb	0	; () banked
 13613  0021B2  0100               	movlb	0	; () banked
 13614  0021B4  0797               	decf	i1sprintf@width& (0+255),f,b
 13615  0021B6  A0D8               	btfss	status,0,c
 13616  0021B8  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13617  0021BA                     i1l11445:
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;doprnt.c: 1355: if(flag & 0x4000) {
 13621  0021BA  0100               	movlb	0	; () banked
 13622  0021BC  0100               	movlb	0	; () banked
 13623  0021BE  AD94               	btfss	(i1sprintf@flag+1)& (0+255),6,b
 13624  0021C0  D028               	goto	i1l11453
 13625                           
 13626                           ; BSR set to: 0
 13627                           ;doprnt.c: 1356: if(width > prec)
 13628  0021C2  0100               	movlb	0	; () banked
 13629  0021C4  0100               	movlb	0	; () banked
 13630  0021C6  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13631  0021C8  0A80               	xorlw	128
 13632  0021CA  0100               	movlb	0	; () banked
 13633  0021CC  6F78               	movwf	??i1_sprintf& (0+255),b
 13634  0021CE  0100               	movlb	0	; () banked
 13635  0021D0  0100               	movlb	0	; () banked
 13636  0021D2  5197               	movf	i1sprintf@width& (0+255),w,b
 13637  0021D4  0100               	movlb	0	; () banked
 13638  0021D6  0100               	movlb	0	; () banked
 13639  0021D8  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13640  0021DA  0100               	movlb	0	; () banked
 13641  0021DC  0100               	movlb	0	; () banked
 13642  0021DE  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13643  0021E0  0A80               	xorlw	128
 13644  0021E2  0100               	movlb	0	; () banked
 13645  0021E4  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13646  0021E6  B0D8               	btfsc	status,0,c
 13647  0021E8  D00D               	goto	i1l11451
 13648                           
 13649                           ; BSR set to: 0
 13650                           ;doprnt.c: 1357: width -= prec;
 13651  0021EA  0100               	movlb	0	; () banked
 13652  0021EC  0100               	movlb	0	; () banked
 13653  0021EE  519C               	movf	i1sprintf@prec& (0+255),w,b
 13654  0021F0  0100               	movlb	0	; () banked
 13655  0021F2  0100               	movlb	0	; () banked
 13656  0021F4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 13657  0021F6  0100               	movlb	0	; () banked
 13658  0021F8  0100               	movlb	0	; () banked
 13659  0021FA  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13660  0021FC  0100               	movlb	0	; () banked
 13661  0021FE  0100               	movlb	0	; () banked
 13662  002200  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 13663  002202  D007               	goto	i1l11453
 13664  002204                     i1l11451:
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;doprnt.c: 1358: else
 13668                           ;doprnt.c: 1359: width = 0;
 13669  002204  0E00               	movlw	0
 13670  002206  0100               	movlb	0	; () banked
 13671  002208  0100               	movlb	0	; () banked
 13672  00220A  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13673  00220C  0E00               	movlw	0
 13674  00220E  0100               	movlb	0	; () banked
 13675  002210  6F97               	movwf	i1sprintf@width& (0+255),b
 13676  002212                     i1l11453:
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;doprnt.c: 1360: }
 13680                           ;doprnt.c: 1388: if(width > c)
 13681  002212  0E80               	movlw	128
 13682  002214  0100               	movlb	0	; () banked
 13683  002216  0100               	movlb	0	; () banked
 13684  002218  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13685  00221A  0E7F               	movlw	127
 13686  00221C  6F78               	movwf	??i1_sprintf& (0+255),b
 13687  00221E  0100               	movlb	0	; () banked
 13688  002220  0100               	movlb	0	; () banked
 13689  002222  5197               	movf	i1sprintf@width& (0+255),w,b
 13690  002224  0100               	movlb	0	; () banked
 13691  002226  0100               	movlb	0	; () banked
 13692  002228  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 13693  00222A  0100               	movlb	0	; () banked
 13694  00222C  0100               	movlb	0	; () banked
 13695  00222E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13696  002230  0A80               	xorlw	128
 13697  002232  0100               	movlb	0	; () banked
 13698  002234  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13699  002236  B0D8               	btfsc	status,0,c
 13700  002238  D00E               	goto	i1l11457
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;doprnt.c: 1389: width -= c;
 13704  00223A  0100               	movlb	0	; () banked
 13705  00223C  0100               	movlb	0	; () banked
 13706  00223E  519E               	movf	i1sprintf@c& (0+255),w,b
 13707  002240  0100               	movlb	0	; () banked
 13708  002242  0100               	movlb	0	; () banked
 13709  002244  5F97               	subwf	i1sprintf@width& (0+255),f,b
 13710  002246  0E00               	movlw	0
 13711  002248  0100               	movlb	0	; () banked
 13712  00224A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13713  00224C  0EFF               	movlw	255
 13714  00224E  0100               	movlb	0	; () banked
 13715  002250  0100               	movlb	0	; () banked
 13716  002252  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 13717  002254  D007               	goto	i1l11459
 13718  002256                     i1l11457:
 13719                           
 13720                           ; BSR set to: 0
 13721                           ;doprnt.c: 1390: else
 13722                           ;doprnt.c: 1391: width = 0;
 13723  002256  0E00               	movlw	0
 13724  002258  0100               	movlb	0	; () banked
 13725  00225A  0100               	movlb	0	; () banked
 13726  00225C  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13727  00225E  0E00               	movlw	0
 13728  002260  0100               	movlb	0	; () banked
 13729  002262  6F97               	movwf	i1sprintf@width& (0+255),b
 13730  002264                     i1l11459:
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;doprnt.c: 1394: if(flag & 0x04) {
 13734  002264  0100               	movlb	0	; () banked
 13735  002266  0100               	movlb	0	; () banked
 13736  002268  A593               	btfss	i1sprintf@flag& (0+255),2,b
 13737  00226A  D031               	goto	i1l11475
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;doprnt.c: 1399: if(flag & 0x03)
 13741  00226C  0E03               	movlw	3
 13742  00226E  0100               	movlb	0	; () banked
 13743  002270  0100               	movlb	0	; () banked
 13744  002272  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13745  002274  0100               	movlb	0	; () banked
 13746  002276  6F78               	movwf	??i1_sprintf& (0+255),b
 13747  002278  0E00               	movlw	0
 13748  00227A  0100               	movlb	0	; () banked
 13749  00227C  0100               	movlb	0	; () banked
 13750  00227E  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13751  002280  0100               	movlb	0	; () banked
 13752  002282  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13753  002284  0100               	movlb	0	; () banked
 13754  002286  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13755  002288  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13756  00228A  B4D8               	btfsc	status,2,c
 13757  00228C  D00A               	goto	i1l11467
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;doprnt.c: 1400: ((*sp++ = ('-')));
 13761  00228E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13762  002292  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13763  002296  0E2D               	movlw	45
 13764  002298  6EDF               	movwf	indf2,c
 13765                           
 13766                           ; BSR set to: 0
 13767  00229A  0100               	movlb	0	; () banked
 13768  00229C  0100               	movlb	0	; () banked
 13769  00229E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13770  0022A0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13771  0022A2                     i1l11467:
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;doprnt.c: 1422: if(width)
 13775  0022A2  0100               	movlb	0	; () banked
 13776  0022A4  0100               	movlb	0	; () banked
 13777  0022A6  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13778  0022A8  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13779  0022AA  B4D8               	btfsc	status,2,c
 13780  0022AC  D08F               	goto	i1l11495
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;doprnt.c: 1424: ((*sp++ = ('0')));
 13784                           
 13785                           ; BSR set to: 0
 13786                           
 13787                           ;doprnt.c: 1423: do
 13788  0022AE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13789  0022B2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13790  0022B6  0E30               	movlw	48
 13791  0022B8  6EDF               	movwf	indf2,c
 13792                           
 13793                           ; BSR set to: 0
 13794  0022BA  0100               	movlb	0	; () banked
 13795  0022BC  0100               	movlb	0	; () banked
 13796  0022BE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13797  0022C0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;doprnt.c: 1425: while(--width);
 13801  0022C2  0100               	movlb	0	; () banked
 13802  0022C4  0100               	movlb	0	; () banked
 13803  0022C6  0797               	decf	i1sprintf@width& (0+255),f,b
 13804  0022C8  A0D8               	btfss	status,0,c
 13805  0022CA  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13806  0022CC  D7EB               	goto	L19
 13807  0022CE                     i1l11475:
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;doprnt.c: 1429: {
 13811                           ;doprnt.c: 1431: if(width
 13812                           ;doprnt.c: 1435: )
 13813  0022CE  0100               	movlb	0	; () banked
 13814  0022D0  0100               	movlb	0	; () banked
 13815  0022D2  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13816  0022D4  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13817  0022D6  B4D8               	btfsc	status,2,c
 13818  0022D8  D014               	goto	i1l11483
 13819  0022DA                     i1l11477:
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;doprnt.c: 1437: ((*sp++ = (' ')));
 13823  0022DA  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13824  0022DE  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13825  0022E2  0E20               	movlw	32
 13826  0022E4  6EDF               	movwf	indf2,c
 13827                           
 13828                           ; BSR set to: 0
 13829  0022E6  0100               	movlb	0	; () banked
 13830  0022E8  0100               	movlb	0	; () banked
 13831  0022EA  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13832  0022EC  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13833                           
 13834                           ; BSR set to: 0
 13835                           ;doprnt.c: 1438: while(--width);
 13836  0022EE  0100               	movlb	0	; () banked
 13837  0022F0  0100               	movlb	0	; () banked
 13838  0022F2  0797               	decf	i1sprintf@width& (0+255),f,b
 13839  0022F4  A0D8               	btfss	status,0,c
 13840  0022F6  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13841  0022F8  0100               	movlb	0	; () banked
 13842  0022FA  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13843  0022FC  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13844  0022FE  A4D8               	btfss	status,2,c
 13845  002300  D7EC               	goto	i1l11477
 13846  002302                     i1l11483:
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;doprnt.c: 1445: if(flag & 0x03)
 13850  002302  0E03               	movlw	3
 13851  002304  0100               	movlb	0	; () banked
 13852  002306  0100               	movlb	0	; () banked
 13853  002308  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13854  00230A  0100               	movlb	0	; () banked
 13855  00230C  6F78               	movwf	??i1_sprintf& (0+255),b
 13856  00230E  0E00               	movlw	0
 13857  002310  0100               	movlb	0	; () banked
 13858  002312  0100               	movlb	0	; () banked
 13859  002314  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13860  002316  0100               	movlb	0	; () banked
 13861  002318  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13862  00231A  0100               	movlb	0	; () banked
 13863  00231C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13864  00231E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13865  002320  B4D8               	btfsc	status,2,c
 13866  002322  D054               	goto	i1l11495
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 13870  002324  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13871  002328  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13872  00232C  0E2D               	movlw	45
 13873  00232E  6EDF               	movwf	indf2,c
 13874  002330  D049               	goto	L18
 13875  002332                     i1l11489:
 13876                           
 13877                           ; BSR set to: 0
 13878                           ;doprnt.c: 1485: {
 13879                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 13880  002332  0100               	movlb	0	; () banked
 13881  002334  C09C  F078         	movff	i1sprintf@prec,??i1_sprintf
 13882  002338  0100               	movlb	0	; () banked
 13883  00233A  C09D  F079         	movff	i1sprintf@prec+1,??i1_sprintf+1
 13884  00233E  0100               	movlb	0	; () banked
 13885  002340  90D8               	bcf	status,0,c
 13886  002342  3778               	rlcf	??i1_sprintf& (0+255),f,b
 13887  002344  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 13888  002346  0100               	movlb	0	; () banked
 13889  002348  90D8               	bcf	status,0,c
 13890  00234A  3778               	rlcf	??i1_sprintf& (0+255),f,b
 13891  00234C  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 13892  00234E  0E00               	movlw	low _dpowers
 13893  002350  0100               	movlb	0	; () banked
 13894  002352  2578               	addwf	??i1_sprintf& (0+255),w,b
 13895  002354  6EF6               	movwf	tblptrl,c
 13896  002356  0E08               	movlw	high _dpowers
 13897  002358  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 13898  00235A  6EF7               	movwf	tblptrh,c
 13899  00235C  0009               	tblrd		*+
 13900  00235E  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13901  002362  0009               	tblrd		*+
 13902  002364  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13903  002368  0009               	tblrd		*+
 13904  00236A  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13905  00236E  000A               	tblrd		*-
 13906  002370  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13907  002374  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13908  002378  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13909  00237C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13910  002380  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13911  002384  EC8C  F02C         	call	i1___lldiv	;wreg free
 13912  002388  C014  F022         	movff	?i1___lldiv+3,?i1___llmod+3
 13913  00238C  C013  F021         	movff	?i1___lldiv+2,?i1___llmod+2
 13914  002390  C012  F020         	movff	?i1___lldiv+1,?i1___llmod+1
 13915  002394  C011  F01F         	movff	?i1___lldiv,?i1___llmod
 13916  002398  0E0A               	movlw	10
 13917  00239A  6E23               	movwf	?i1___llmod+4,c
 13918  00239C  0E00               	movlw	0
 13919  00239E  6E24               	movwf	?i1___llmod+5,c
 13920  0023A0  0E00               	movlw	0
 13921  0023A2  6E25               	movwf	?i1___llmod+6,c
 13922  0023A4  0E00               	movlw	0
 13923  0023A6  6E26               	movwf	?i1___llmod+7,c
 13924  0023A8  ECC6  F02D         	call	i1___llmod	;wreg free
 13925  0023AC  501F               	movf	?i1___llmod,w,c
 13926  0023AE  0F30               	addlw	48
 13927  0023B0  0100               	movlb	0	; () banked
 13928  0023B2  0100               	movlb	0	; () banked
 13929  0023B4  6F9E               	movwf	i1sprintf@c& (0+255),b
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;doprnt.c: 1530: }
 13933                           ;doprnt.c: 1531: ((*sp++ = (c)));
 13934  0023B6  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13935  0023BA  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13936  0023BE  0100               	movlb	0	; () banked
 13937  0023C0  C09E  FFDF         	movff	i1sprintf@c,indf2
 13938  0023C4                     L18:
 13939                           
 13940                           ; BSR set to: 0
 13941  0023C4  0100               	movlb	0	; () banked
 13942  0023C6  0100               	movlb	0	; () banked
 13943  0023C8  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13944  0023CA  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13945  0023CC                     i1l11495:
 13946                           
 13947                           ; BSR set to: 0
 13948  0023CC  0100               	movlb	0	; () banked
 13949  0023CE  0100               	movlb	0	; () banked
 13950  0023D0  079C               	decf	i1sprintf@prec& (0+255),f,b
 13951  0023D2  A0D8               	btfss	status,0,c
 13952  0023D4  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13953  0023D6  0100               	movlb	0	; () banked
 13954  0023D8  299C               	incf	i1sprintf@prec& (0+255),w,b
 13955  0023DA  B4D8               	btfsc	status,2,c
 13956  0023DC  299D               	incf	(i1sprintf@prec+1)& (0+255),w,b
 13957  0023DE  A4D8               	btfss	status,2,c
 13958  0023E0  D7A8               	goto	i1l11489
 13959  0023E2                     i1l11497:
 13960                           
 13961                           ; BSR set to: 0
 13962  0023E2  0100               	movlb	0	; () banked
 13963  0023E4  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13964  0023E8  0100               	movlb	0	; () banked
 13965  0023EA  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13966  0023EE  0100               	movlb	0	; () banked
 13967  0023F0  0100               	movlb	0	; () banked
 13968  0023F2  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 13969  0023F4  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 13970  0023F6  0008               	tblrd		*
 13971  0023F8  0100               	movlb	0	; () banked
 13972  0023FA  CFF5 F09E          	movff	tablat,i1sprintf@c
 13973  0023FE  0100               	movlb	0	; () banked
 13974  002400  679E               	tstfsz	i1sprintf@c& (0+255),b
 13975  002402  EF60  F00B         	goto	i1l11173
 13976  002406                     i1l11499:
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;doprnt.c: 1545: *sp = 0;
 13980  002406  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13981  00240A  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13982  00240E  0E00               	movlw	0
 13983  002410  6EDF               	movwf	indf2,c
 13984                           
 13985                           ; BSR set to: 0
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;doprnt.c: 1547: return 0;
 13989                           ;	Return value of i1_sprintf is never used
 13990  002412  0012               	return	
 13991  002414                     __end_ofi1_sprintf:
 13992                           	opt stack 0
 13993                           pclatu	equ	0xFFB
 13994                           pclath	equ	0xFFA
 13995                           tblptru	equ	0xFF8
 13996                           tblptrh	equ	0xFF7
 13997                           tblptrl	equ	0xFF6
 13998                           tablat	equ	0xFF5
 13999                           prodh	equ	0xFF4
 14000                           prodl	equ	0xFF3
 14001                           intcon	equ	0xFF2
 14002                           intcon2	equ	0xFF1
 14003                           postinc0	equ	0xFEE
 14004                           fsr0h	equ	0xFEA
 14005                           fsr0l	equ	0xFE9
 14006                           wreg	equ	0xFE8
 14007                           fsr1h	equ	0xFE2
 14008                           fsr1l	equ	0xFE1
 14009                           bsr	equ	0xFE0
 14010                           indf2	equ	0xFDF
 14011                           postinc2	equ	0xFDE
 14012                           postdec2	equ	0xFDD
 14013                           fsr2h	equ	0xFDA
 14014                           fsr2l	equ	0xFD9
 14015                           status	equ	0xFD8
 14016                           
 14017 ;; *************** function i1___lwmod *****************
 14018 ;; Defined at:
 14019 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
 14020 ;; Parameters:    Size  Location     Type
 14021 ;;  __lwmod         2   16[COMRAM] unsigned int 
 14022 ;;  __lwmod         2   18[COMRAM] unsigned int 
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;  __lwmod         1   21[COMRAM] unsigned char 
 14025 ;; Return value:  Size  Location     Type
 14026 ;;                  2   16[COMRAM] unsigned int 
 14027 ;; Registers used:
 14028 ;;		wreg, status,2, status,0
 14029 ;; Tracked objects:
 14030 ;;		On entry : 0/0
 14031 ;;		On exit  : 0/0
 14032 ;;		Unchanged: 0/0
 14033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14034 ;;      Params:         4       0       0       0       0       0       0       0       0
 14035 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14036 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14037 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14038 ;;Total ram usage:        6 bytes
 14039 ;; Hardware stack levels used:    1
 14040 ;; Hardware stack levels required when called:    3
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		i1_sprintf
 14045 ;; This function uses a non-reentrant model
 14046 ;;
 14047                           
 14048                           	psect	text43
 14049  005E1E                     __ptext43:
 14050                           	opt stack 0
 14051  005E1E                     i1___lwmod:
 14052                           	opt stack 20
 14053                           
 14054                           ; BSR set to: 0
 14055                           ;incstack = 0
 14056                           ;incstack = 0
 14057  005E1E  5014               	movf	i1___lwmod@divisor+1,w,c
 14058  005E20  1013               	iorwf	i1___lwmod@divisor,w,c
 14059  005E22  B4D8               	btfsc	status,2,c
 14060  005E24  D01A               	goto	i1l917
 14061  005E26  6E15               	movwf	??i1___lwmod& (0+255),c
 14062  005E28  0E01               	movlw	1
 14063  005E2A  6E16               	movwf	i1___lwmod@counter,c
 14064  005E2C  5015               	movf	??i1___lwmod& (0+255),w,c
 14065  005E2E  D004               	goto	i1l9649
 14066  005E30                     i1l9647:
 14067  005E30  90D8               	bcf	status,0,c
 14068  005E32  3613               	rlcf	i1___lwmod@divisor,f,c
 14069  005E34  3614               	rlcf	i1___lwmod@divisor+1,f,c
 14070  005E36  2A16               	incf	i1___lwmod@counter,f,c
 14071  005E38                     i1l9649:
 14072  005E38  AE14               	btfss	i1___lwmod@divisor+1,7,c
 14073  005E3A  D7FA               	goto	i1l9647
 14074  005E3C                     i1l9651:
 14075  005E3C  5013               	movf	i1___lwmod@divisor,w,c
 14076  005E3E  5C11               	subwf	i1___lwmod@dividend,w,c
 14077  005E40  5014               	movf	i1___lwmod@divisor+1,w,c
 14078  005E42  5812               	subwfb	i1___lwmod@dividend+1,w,c
 14079  005E44  A0D8               	btfss	status,0,c
 14080  005E46  D004               	goto	i1l9655
 14081  005E48  5013               	movf	i1___lwmod@divisor,w,c
 14082  005E4A  5E11               	subwf	i1___lwmod@dividend,f,c
 14083  005E4C  5014               	movf	i1___lwmod@divisor+1,w,c
 14084  005E4E  5A12               	subwfb	i1___lwmod@dividend+1,f,c
 14085  005E50                     i1l9655:
 14086  005E50  90D8               	bcf	status,0,c
 14087  005E52  3214               	rrcf	i1___lwmod@divisor+1,f,c
 14088  005E54  3213               	rrcf	i1___lwmod@divisor,f,c
 14089  005E56  2E16               	decfsz	i1___lwmod@counter,f,c
 14090  005E58  D7F1               	goto	i1l9651
 14091  005E5A                     i1l917:
 14092  005E5A  C011  F011         	movff	i1___lwmod@dividend,?i1___lwmod
 14093  005E5E  C012  F012         	movff	i1___lwmod@dividend+1,?i1___lwmod+1
 14094  005E62  0012               	return	
 14095  005E64                     __end_ofi1___lwmod:
 14096                           	opt stack 0
 14097                           pclatu	equ	0xFFB
 14098                           pclath	equ	0xFFA
 14099                           tblptru	equ	0xFF8
 14100                           tblptrh	equ	0xFF7
 14101                           tblptrl	equ	0xFF6
 14102                           tablat	equ	0xFF5
 14103                           prodh	equ	0xFF4
 14104                           prodl	equ	0xFF3
 14105                           intcon	equ	0xFF2
 14106                           intcon2	equ	0xFF1
 14107                           postinc0	equ	0xFEE
 14108                           fsr0h	equ	0xFEA
 14109                           fsr0l	equ	0xFE9
 14110                           wreg	equ	0xFE8
 14111                           fsr1h	equ	0xFE2
 14112                           fsr1l	equ	0xFE1
 14113                           bsr	equ	0xFE0
 14114                           indf2	equ	0xFDF
 14115                           postinc2	equ	0xFDE
 14116                           postdec2	equ	0xFDD
 14117                           fsr2h	equ	0xFDA
 14118                           fsr2l	equ	0xFD9
 14119                           status	equ	0xFD8
 14120                           
 14121 ;; *************** function i1___lltoft *****************
 14122 ;; Defined at:
 14123 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;  __lltoft        4   24[COMRAM] unsigned long 
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;  __lltoft        1   32[COMRAM] unsigned char 
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  3   24[COMRAM] float 
 14130 ;; Registers used:
 14131 ;;		wreg, status,2, status,0, cstack
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14137 ;;      Params:         4       0       0       0       0       0       0       0       0
 14138 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14139 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14140 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14141 ;;Total ram usage:        9 bytes
 14142 ;; Hardware stack levels used:    1
 14143 ;; Hardware stack levels required when called:    4
 14144 ;; This function calls:
 14145 ;;		i1___ftpack
 14146 ;; This function is called by:
 14147 ;;		i1_sprintf
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           	psect	text44
 14152  005C5A                     __ptext44:
 14153                           	opt stack 0
 14154  005C5A                     i1___lltoft:
 14155                           	opt stack 19
 14156                           
 14157                           ;incstack = 0
 14158                           ;incstack = 0
 14159  005C5A  6E1D               	movwf	??i1___lltoft& (0+255),c
 14160  005C5C  0E8E               	movlw	142
 14161  005C5E  6E21               	movwf	i1___lltoft@exp,c
 14162  005C60  501D               	movf	??i1___lltoft& (0+255),w,c
 14163  005C62  D006               	goto	i1l9615
 14164  005C64                     i1l9613:
 14165  005C64  90D8               	bcf	status,0,c
 14166  005C66  321C               	rrcf	i1___lltoft@c+3,f,c
 14167  005C68  321B               	rrcf	i1___lltoft@c+2,f,c
 14168  005C6A  321A               	rrcf	i1___lltoft@c+1,f,c
 14169  005C6C  3219               	rrcf	i1___lltoft@c,f,c
 14170  005C6E  2A21               	incf	i1___lltoft@exp,f,c
 14171  005C70                     i1l9615:
 14172  005C70  0E00               	movlw	0
 14173  005C72  1419               	andwf	i1___lltoft@c,w,c
 14174  005C74  6E1D               	movwf	??i1___lltoft& (0+255),c
 14175  005C76  0E00               	movlw	0
 14176  005C78  141A               	andwf	i1___lltoft@c+1,w,c
 14177  005C7A  6E1E               	movwf	(??i1___lltoft+1)& (0+255),c
 14178  005C7C  0E00               	movlw	0
 14179  005C7E  141B               	andwf	i1___lltoft@c+2,w,c
 14180  005C80  6E1F               	movwf	(??i1___lltoft+2)& (0+255),c
 14181  005C82  0EFF               	movlw	255
 14182  005C84  141C               	andwf	i1___lltoft@c+3,w,c
 14183  005C86  6E20               	movwf	(??i1___lltoft+3)& (0+255),c
 14184  005C88  5020               	movf	??i1___lltoft+3,w,c
 14185  005C8A  101D               	iorwf	??i1___lltoft,w,c
 14186  005C8C  101E               	iorwf	??i1___lltoft+1,w,c
 14187  005C8E  101F               	iorwf	??i1___lltoft+2,w,c
 14188  005C90  A4D8               	btfss	status,2,c
 14189  005C92  D7E8               	goto	i1l9613
 14190  005C94  C019  F011         	movff	i1___lltoft@c,?i1___ftpack
 14191  005C98  C01A  F012         	movff	i1___lltoft@c+1,?i1___ftpack+1
 14192  005C9C  C01B  F013         	movff	i1___lltoft@c+2,?i1___ftpack+2
 14193  005CA0  C021  F014         	movff	i1___lltoft@exp,?i1___ftpack+3
 14194  005CA4  6E1D               	movwf	??i1___lltoft& (0+255),c
 14195  005CA6  0E00               	movlw	0
 14196  005CA8  6E15               	movwf	?i1___ftpack+4,c
 14197  005CAA  501D               	movf	??i1___lltoft& (0+255),w,c
 14198  005CAC  ECC4  F029         	call	i1___ftpack	;wreg free
 14199  005CB0  C013  F01B         	movff	?i1___ftpack+2,?i1___lltoft+2
 14200  005CB4  C012  F01A         	movff	?i1___ftpack+1,?i1___lltoft+1
 14201  005CB8  C011  F019         	movff	?i1___ftpack,?i1___lltoft
 14202  005CBC  0012               	return	
 14203  005CBE                     __end_ofi1___lltoft:
 14204                           	opt stack 0
 14205                           pclatu	equ	0xFFB
 14206                           pclath	equ	0xFFA
 14207                           tblptru	equ	0xFF8
 14208                           tblptrh	equ	0xFF7
 14209                           tblptrl	equ	0xFF6
 14210                           tablat	equ	0xFF5
 14211                           prodh	equ	0xFF4
 14212                           prodl	equ	0xFF3
 14213                           intcon	equ	0xFF2
 14214                           intcon2	equ	0xFF1
 14215                           postinc0	equ	0xFEE
 14216                           fsr0h	equ	0xFEA
 14217                           fsr0l	equ	0xFE9
 14218                           wreg	equ	0xFE8
 14219                           fsr1h	equ	0xFE2
 14220                           fsr1l	equ	0xFE1
 14221                           bsr	equ	0xFE0
 14222                           indf2	equ	0xFDF
 14223                           postinc2	equ	0xFDE
 14224                           postdec2	equ	0xFDD
 14225                           fsr2h	equ	0xFDA
 14226                           fsr2l	equ	0xFD9
 14227                           status	equ	0xFD8
 14228                           
 14229 ;; *************** function i1___llmod *****************
 14230 ;; Defined at:
 14231 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
 14232 ;; Parameters:    Size  Location     Type
 14233 ;;  __llmod         4   30[COMRAM] unsigned long 
 14234 ;;  __llmod         4   34[COMRAM] unsigned long 
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;  __llmod         1   39[COMRAM] unsigned char 
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  4   30[COMRAM] unsigned long 
 14239 ;; Registers used:
 14240 ;;		wreg, status,2, status,0
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14246 ;;      Params:         8       0       0       0       0       0       0       0       0
 14247 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14248 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14249 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14250 ;;Total ram usage:       10 bytes
 14251 ;; Hardware stack levels used:    1
 14252 ;; Hardware stack levels required when called:    3
 14253 ;; This function calls:
 14254 ;;		Nothing
 14255 ;; This function is called by:
 14256 ;;		i1_sprintf
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           	psect	text45
 14261  005B8C                     __ptext45:
 14262                           	opt stack 0
 14263  005B8C                     i1___llmod:
 14264                           	opt stack 20
 14265                           
 14266                           ;incstack = 0
 14267                           ;incstack = 0
 14268  005B8C  5026               	movf	i1___llmod@divisor+3,w,c
 14269  005B8E  1023               	iorwf	i1___llmod@divisor,w,c
 14270  005B90  1024               	iorwf	i1___llmod@divisor+1,w,c
 14271  005B92  1025               	iorwf	i1___llmod@divisor+2,w,c
 14272  005B94  B4D8               	btfsc	status,2,c
 14273  005B96  D026               	goto	i1l848
 14274  005B98  6E27               	movwf	??i1___llmod& (0+255),c
 14275  005B9A  0E01               	movlw	1
 14276  005B9C  6E28               	movwf	i1___llmod@counter,c
 14277  005B9E  5027               	movf	??i1___llmod& (0+255),w,c
 14278  005BA0  D006               	goto	i1l9601
 14279  005BA2                     i1l9599:
 14280  005BA2  90D8               	bcf	status,0,c
 14281  005BA4  3623               	rlcf	i1___llmod@divisor,f,c
 14282  005BA6  3624               	rlcf	i1___llmod@divisor+1,f,c
 14283  005BA8  3625               	rlcf	i1___llmod@divisor+2,f,c
 14284  005BAA  3626               	rlcf	i1___llmod@divisor+3,f,c
 14285  005BAC  2A28               	incf	i1___llmod@counter,f,c
 14286  005BAE                     i1l9601:
 14287  005BAE  AE26               	btfss	i1___llmod@divisor+3,7,c
 14288  005BB0  D7F8               	goto	i1l9599
 14289  005BB2                     i1l9603:
 14290  005BB2  5023               	movf	i1___llmod@divisor,w,c
 14291  005BB4  5C1F               	subwf	i1___llmod@dividend,w,c
 14292  005BB6  5024               	movf	i1___llmod@divisor+1,w,c
 14293  005BB8  5820               	subwfb	i1___llmod@dividend+1,w,c
 14294  005BBA  5025               	movf	i1___llmod@divisor+2,w,c
 14295  005BBC  5821               	subwfb	i1___llmod@dividend+2,w,c
 14296  005BBE  5026               	movf	i1___llmod@divisor+3,w,c
 14297  005BC0  5822               	subwfb	i1___llmod@dividend+3,w,c
 14298  005BC2  A0D8               	btfss	status,0,c
 14299  005BC4  D008               	goto	i1l9607
 14300  005BC6  5023               	movf	i1___llmod@divisor,w,c
 14301  005BC8  5E1F               	subwf	i1___llmod@dividend,f,c
 14302  005BCA  5024               	movf	i1___llmod@divisor+1,w,c
 14303  005BCC  5A20               	subwfb	i1___llmod@dividend+1,f,c
 14304  005BCE  5025               	movf	i1___llmod@divisor+2,w,c
 14305  005BD0  5A21               	subwfb	i1___llmod@dividend+2,f,c
 14306  005BD2  5026               	movf	i1___llmod@divisor+3,w,c
 14307  005BD4  5A22               	subwfb	i1___llmod@dividend+3,f,c
 14308  005BD6                     i1l9607:
 14309  005BD6  90D8               	bcf	status,0,c
 14310  005BD8  3226               	rrcf	i1___llmod@divisor+3,f,c
 14311  005BDA  3225               	rrcf	i1___llmod@divisor+2,f,c
 14312  005BDC  3224               	rrcf	i1___llmod@divisor+1,f,c
 14313  005BDE  3223               	rrcf	i1___llmod@divisor,f,c
 14314  005BE0  2E28               	decfsz	i1___llmod@counter,f,c
 14315  005BE2  D7E7               	goto	i1l9603
 14316  005BE4                     i1l848:
 14317  005BE4  C01F  F01F         	movff	i1___llmod@dividend,?i1___llmod
 14318  005BE8  C020  F020         	movff	i1___llmod@dividend+1,?i1___llmod+1
 14319  005BEC  C021  F021         	movff	i1___llmod@dividend+2,?i1___llmod+2
 14320  005BF0  C022  F022         	movff	i1___llmod@dividend+3,?i1___llmod+3
 14321  005BF4  0012               	return	
 14322  005BF6                     __end_ofi1___llmod:
 14323                           	opt stack 0
 14324                           pclatu	equ	0xFFB
 14325                           pclath	equ	0xFFA
 14326                           tblptru	equ	0xFF8
 14327                           tblptrh	equ	0xFF7
 14328                           tblptrl	equ	0xFF6
 14329                           tablat	equ	0xFF5
 14330                           prodh	equ	0xFF4
 14331                           prodl	equ	0xFF3
 14332                           intcon	equ	0xFF2
 14333                           intcon2	equ	0xFF1
 14334                           postinc0	equ	0xFEE
 14335                           fsr0h	equ	0xFEA
 14336                           fsr0l	equ	0xFE9
 14337                           wreg	equ	0xFE8
 14338                           fsr1h	equ	0xFE2
 14339                           fsr1l	equ	0xFE1
 14340                           bsr	equ	0xFE0
 14341                           indf2	equ	0xFDF
 14342                           postinc2	equ	0xFDE
 14343                           postdec2	equ	0xFDD
 14344                           fsr2h	equ	0xFDA
 14345                           fsr2l	equ	0xFD9
 14346                           status	equ	0xFD8
 14347                           
 14348 ;; *************** function i1___lldiv *****************
 14349 ;; Defined at:
 14350 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;  __lldiv         4   16[COMRAM] unsigned long 
 14353 ;;  __lldiv         4   20[COMRAM] unsigned long 
 14354 ;; Auto vars:     Size  Location     Type
 14355 ;;  __lldiv         4   25[COMRAM] unsigned long 
 14356 ;;  __lldiv         1   29[COMRAM] unsigned char 
 14357 ;; Return value:  Size  Location     Type
 14358 ;;                  4   16[COMRAM] unsigned long 
 14359 ;; Registers used:
 14360 ;;		wreg, status,2, status,0
 14361 ;; Tracked objects:
 14362 ;;		On entry : 0/0
 14363 ;;		On exit  : 0/0
 14364 ;;		Unchanged: 0/0
 14365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14366 ;;      Params:         8       0       0       0       0       0       0       0       0
 14367 ;;      Locals:         5       0       0       0       0       0       0       0       0
 14368 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14369 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14370 ;;Total ram usage:       14 bytes
 14371 ;; Hardware stack levels used:    1
 14372 ;; Hardware stack levels required when called:    3
 14373 ;; This function calls:
 14374 ;;		Nothing
 14375 ;; This function is called by:
 14376 ;;		i1_sprintf
 14377 ;; This function uses a non-reentrant model
 14378 ;;
 14379                           
 14380                           	psect	text46
 14381  005918                     __ptext46:
 14382                           	opt stack 0
 14383  005918                     i1___lldiv:
 14384                           	opt stack 20
 14385                           
 14386                           ;incstack = 0
 14387                           ;incstack = 0
 14388  005918  0E00               	movlw	0
 14389  00591A  6E1A               	movwf	i1___lldiv@quotient,c
 14390  00591C  0E00               	movlw	0
 14391  00591E  6E1B               	movwf	i1___lldiv@quotient+1,c
 14392  005920  0E00               	movlw	0
 14393  005922  6E1C               	movwf	i1___lldiv@quotient+2,c
 14394  005924  0E00               	movlw	0
 14395  005926  6E1D               	movwf	i1___lldiv@quotient+3,c
 14396  005928  5018               	movf	i1___lldiv@divisor+3,w,c
 14397  00592A  1015               	iorwf	i1___lldiv@divisor,w,c
 14398  00592C  1016               	iorwf	i1___lldiv@divisor+1,w,c
 14399  00592E  1017               	iorwf	i1___lldiv@divisor+2,w,c
 14400  005930  B4D8               	btfsc	status,2,c
 14401  005932  D02C               	goto	i1l838
 14402  005934  6E19               	movwf	??i1___lldiv& (0+255),c
 14403  005936  0E01               	movlw	1
 14404  005938  6E1E               	movwf	i1___lldiv@counter,c
 14405  00593A  5019               	movf	??i1___lldiv& (0+255),w,c
 14406  00593C  D006               	goto	i1l9581
 14407  00593E                     i1l9579:
 14408  00593E  90D8               	bcf	status,0,c
 14409  005940  3615               	rlcf	i1___lldiv@divisor,f,c
 14410  005942  3616               	rlcf	i1___lldiv@divisor+1,f,c
 14411  005944  3617               	rlcf	i1___lldiv@divisor+2,f,c
 14412  005946  3618               	rlcf	i1___lldiv@divisor+3,f,c
 14413  005948  2A1E               	incf	i1___lldiv@counter,f,c
 14414  00594A                     i1l9581:
 14415  00594A  AE18               	btfss	i1___lldiv@divisor+3,7,c
 14416  00594C  D7F8               	goto	i1l9579
 14417  00594E                     i1l9583:
 14418  00594E  90D8               	bcf	status,0,c
 14419  005950  361A               	rlcf	i1___lldiv@quotient,f,c
 14420  005952  361B               	rlcf	i1___lldiv@quotient+1,f,c
 14421  005954  361C               	rlcf	i1___lldiv@quotient+2,f,c
 14422  005956  361D               	rlcf	i1___lldiv@quotient+3,f,c
 14423  005958  5015               	movf	i1___lldiv@divisor,w,c
 14424  00595A  5C11               	subwf	i1___lldiv@dividend,w,c
 14425  00595C  5016               	movf	i1___lldiv@divisor+1,w,c
 14426  00595E  5812               	subwfb	i1___lldiv@dividend+1,w,c
 14427  005960  5017               	movf	i1___lldiv@divisor+2,w,c
 14428  005962  5813               	subwfb	i1___lldiv@dividend+2,w,c
 14429  005964  5018               	movf	i1___lldiv@divisor+3,w,c
 14430  005966  5814               	subwfb	i1___lldiv@dividend+3,w,c
 14431  005968  A0D8               	btfss	status,0,c
 14432  00596A  D009               	goto	i1l9591
 14433  00596C  5015               	movf	i1___lldiv@divisor,w,c
 14434  00596E  5E11               	subwf	i1___lldiv@dividend,f,c
 14435  005970  5016               	movf	i1___lldiv@divisor+1,w,c
 14436  005972  5A12               	subwfb	i1___lldiv@dividend+1,f,c
 14437  005974  5017               	movf	i1___lldiv@divisor+2,w,c
 14438  005976  5A13               	subwfb	i1___lldiv@dividend+2,f,c
 14439  005978  5018               	movf	i1___lldiv@divisor+3,w,c
 14440  00597A  5A14               	subwfb	i1___lldiv@dividend+3,f,c
 14441  00597C  801A               	bsf	i1___lldiv@quotient,0,c
 14442  00597E                     i1l9591:
 14443  00597E  90D8               	bcf	status,0,c
 14444  005980  3218               	rrcf	i1___lldiv@divisor+3,f,c
 14445  005982  3217               	rrcf	i1___lldiv@divisor+2,f,c
 14446  005984  3216               	rrcf	i1___lldiv@divisor+1,f,c
 14447  005986  3215               	rrcf	i1___lldiv@divisor,f,c
 14448  005988  2E1E               	decfsz	i1___lldiv@counter,f,c
 14449  00598A  D7E1               	goto	i1l9583
 14450  00598C                     i1l838:
 14451  00598C  C01A  F011         	movff	i1___lldiv@quotient,?i1___lldiv
 14452  005990  C01B  F012         	movff	i1___lldiv@quotient+1,?i1___lldiv+1
 14453  005994  C01C  F013         	movff	i1___lldiv@quotient+2,?i1___lldiv+2
 14454  005998  C01D  F014         	movff	i1___lldiv@quotient+3,?i1___lldiv+3
 14455  00599C  0012               	return	
 14456  00599E                     __end_ofi1___lldiv:
 14457                           	opt stack 0
 14458                           pclatu	equ	0xFFB
 14459                           pclath	equ	0xFFA
 14460                           tblptru	equ	0xFF8
 14461                           tblptrh	equ	0xFF7
 14462                           tblptrl	equ	0xFF6
 14463                           tablat	equ	0xFF5
 14464                           prodh	equ	0xFF4
 14465                           prodl	equ	0xFF3
 14466                           intcon	equ	0xFF2
 14467                           intcon2	equ	0xFF1
 14468                           postinc0	equ	0xFEE
 14469                           fsr0h	equ	0xFEA
 14470                           fsr0l	equ	0xFE9
 14471                           wreg	equ	0xFE8
 14472                           fsr1h	equ	0xFE2
 14473                           fsr1l	equ	0xFE1
 14474                           bsr	equ	0xFE0
 14475                           indf2	equ	0xFDF
 14476                           postinc2	equ	0xFDE
 14477                           postdec2	equ	0xFDD
 14478                           fsr2h	equ	0xFDA
 14479                           fsr2l	equ	0xFD9
 14480                           status	equ	0xFD8
 14481                           
 14482 ;; *************** function i1_isdigit *****************
 14483 ;; Defined at:
 14484 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;  isdigit         1   16[COMRAM] unsigned char 
 14487 ;; Auto vars:     Size  Location     Type
 14488 ;;  isdigit         1   18[COMRAM] unsigned char 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;		None               void
 14491 ;; Registers used:
 14492 ;;		wreg, status,2, status,0
 14493 ;; Tracked objects:
 14494 ;;		On entry : 0/0
 14495 ;;		On exit  : 0/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14498 ;;      Params:         1       0       0       0       0       0       0       0       0
 14499 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14500 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14501 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14502 ;;Total ram usage:        3 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    3
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		i1_sprintf
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           	psect	text47
 14513  006246                     __ptext47:
 14514                           	opt stack 0
 14515  006246                     i1_isdigit:
 14516                           	opt stack 20
 14517                           
 14518                           ;incstack = 0
 14519                           ;incstack = 0
 14520  006246  6E12               	movwf	??i1_isdigit& (0+255),c
 14521  006248  0E00               	movlw	0
 14522  00624A  6E13               	movwf	i1_isdigit$838,c
 14523  00624C  5012               	movf	??i1_isdigit& (0+255),w,c
 14524  00624E  0E3A               	movlw	58
 14525  006250  6011               	cpfslt	i1isdigit@c,c
 14526  006252  D007               	goto	i1l9569
 14527  006254  0E2F               	movlw	47
 14528  006256  6411               	cpfsgt	i1isdigit@c,c
 14529  006258  D004               	goto	i1l9569
 14530  00625A  6E12               	movwf	??i1_isdigit& (0+255),c
 14531  00625C  0E01               	movlw	1
 14532  00625E  6E13               	movwf	i1_isdigit$838,c
 14533  006260  5012               	movf	??i1_isdigit& (0+255),w,c
 14534  006262                     i1l9569:
 14535  006262  C013  F012         	movff	i1_isdigit$838,??i1_isdigit
 14536  006266  3012               	rrcf	??i1_isdigit,w,c
 14537  006268  0012               	return	
 14538  00626A                     __end_ofi1_isdigit:
 14539                           	opt stack 0
 14540                           pclatu	equ	0xFFB
 14541                           pclath	equ	0xFFA
 14542                           tblptru	equ	0xFF8
 14543                           tblptrh	equ	0xFF7
 14544                           tblptrl	equ	0xFF6
 14545                           tablat	equ	0xFF5
 14546                           prodh	equ	0xFF4
 14547                           prodl	equ	0xFF3
 14548                           intcon	equ	0xFF2
 14549                           intcon2	equ	0xFF1
 14550                           postinc0	equ	0xFEE
 14551                           fsr0h	equ	0xFEA
 14552                           fsr0l	equ	0xFE9
 14553                           wreg	equ	0xFE8
 14554                           fsr1h	equ	0xFE2
 14555                           fsr1l	equ	0xFE1
 14556                           bsr	equ	0xFE0
 14557                           indf2	equ	0xFDF
 14558                           postinc2	equ	0xFDE
 14559                           postdec2	equ	0xFDD
 14560                           fsr2h	equ	0xFDA
 14561                           fsr2l	equ	0xFD9
 14562                           status	equ	0xFD8
 14563                           
 14564 ;; *************** function i1___fttol *****************
 14565 ;; Defined at:
 14566 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
 14567 ;; Parameters:    Size  Location     Type
 14568 ;;  __fttol         3   38[COMRAM] float 
 14569 ;; Auto vars:     Size  Location     Type
 14570 ;;  __fttol         4   48[COMRAM] unsigned long 
 14571 ;;  __fttol         1   52[COMRAM] unsigned char 
 14572 ;;  __fttol         1   47[COMRAM] unsigned char 
 14573 ;; Return value:  Size  Location     Type
 14574 ;;                  4   38[COMRAM] long 
 14575 ;; Registers used:
 14576 ;;		wreg, status,2, status,0
 14577 ;; Tracked objects:
 14578 ;;		On entry : 0/0
 14579 ;;		On exit  : 0/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14582 ;;      Params:         4       0       0       0       0       0       0       0       0
 14583 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14584 ;;      Temps:          5       0       0       0       0       0       0       0       0
 14585 ;;      Totals:        15       0       0       0       0       0       0       0       0
 14586 ;;Total ram usage:       15 bytes
 14587 ;; Hardware stack levels used:    1
 14588 ;; Hardware stack levels required when called:    3
 14589 ;; This function calls:
 14590 ;;		Nothing
 14591 ;; This function is called by:
 14592 ;;		i1_sprintf
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text48
 14597  0050FA                     __ptext48:
 14598                           	opt stack 0
 14599  0050FA                     i1___fttol:
 14600                           	opt stack 20
 14601                           
 14602                           ;incstack = 0
 14603                           ;incstack = 0
 14604  0050FA  0E0F               	movlw	15
 14605  0050FC  6E2B               	movwf	??i1___fttol& (0+255),c
 14606  0050FE  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 14607  005102  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 14608  005106  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 14609  00510A  282B               	incf	??i1___fttol,w,c
 14610  00510C  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 14611  00510E  D004               	goto	i1u853_20
 14612  005110                     i1u853_25:
 14613  005110  90D8               	bcf	status,0,c
 14614  005112  322E               	rrcf	??i1___fttol+3,f,c
 14615  005114  322D               	rrcf	??i1___fttol+2,f,c
 14616  005116  322C               	rrcf	??i1___fttol+1,f,c
 14617  005118                     i1u853_20:
 14618  005118  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 14619  00511A  D7FA               	goto	i1u853_25
 14620  00511C  502C               	movf	??i1___fttol+1,w,c
 14621  00511E  6E35               	movwf	i1___fttol@exp1,c
 14622  005120  6635               	tstfsz	i1___fttol@exp1& (0+255),c
 14623  005122  D001               	goto	i1l9521
 14624  005124  D035               	goto	i1u858_20
 14625  005126                     i1l9521:
 14626  005126  0E17               	movlw	23
 14627  005128  6E2B               	movwf	??i1___fttol& (0+255),c
 14628  00512A  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 14629  00512E  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 14630  005132  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 14631  005136  282B               	incf	??i1___fttol,w,c
 14632  005138  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 14633  00513A  D004               	goto	i1u855_20
 14634  00513C                     i1u855_25:
 14635  00513C  90D8               	bcf	status,0,c
 14636  00513E  322E               	rrcf	??i1___fttol+3,f,c
 14637  005140  322D               	rrcf	??i1___fttol+2,f,c
 14638  005142  322C               	rrcf	??i1___fttol+1,f,c
 14639  005144                     i1u855_20:
 14640  005144  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 14641  005146  D7FA               	goto	i1u855_25
 14642  005148  502C               	movf	??i1___fttol+1,w,c
 14643  00514A  6E30               	movwf	i1___fttol@sign1,c
 14644  00514C  8E28               	bsf	i1___fttol@f1+1,7,c
 14645  00514E  0EFF               	movlw	255
 14646  005150  1627               	andwf	i1___fttol@f1,f,c
 14647  005152  0EFF               	movlw	255
 14648  005154  1628               	andwf	i1___fttol@f1+1,f,c
 14649  005156  0E00               	movlw	0
 14650  005158  1629               	andwf	i1___fttol@f1+2,f,c
 14651  00515A  5027               	movf	i1___fttol@f1,w,c
 14652  00515C  6E31               	movwf	i1___fttol@lval,c
 14653  00515E  5028               	movf	i1___fttol@f1+1,w,c
 14654  005160  6E32               	movwf	i1___fttol@lval+1,c
 14655  005162  5029               	movf	i1___fttol@f1+2,w,c
 14656  005164  6E33               	movwf	i1___fttol@lval+2,c
 14657  005166  6A34               	clrf	i1___fttol@lval+3,c
 14658  005168  0E8E               	movlw	142
 14659  00516A  5E35               	subwf	i1___fttol@exp1,f,c
 14660  00516C  AE35               	btfss	i1___fttol@exp1,7,c
 14661  00516E  D00D               	goto	i1l9543
 14662  005170  5035               	movf	i1___fttol@exp1,w,c
 14663  005172  0A80               	xorlw	128
 14664  005174  0F8F               	addlw	143
 14665  005176  A0D8               	btfss	status,0,c
 14666  005178  D00B               	goto	i1u858_20
 14667  00517A                     i1l9539:
 14668  00517A  90D8               	bcf	status,0,c
 14669  00517C  3234               	rrcf	i1___fttol@lval+3,f,c
 14670  00517E  3233               	rrcf	i1___fttol@lval+2,f,c
 14671  005180  3232               	rrcf	i1___fttol@lval+1,f,c
 14672  005182  3231               	rrcf	i1___fttol@lval,f,c
 14673  005184  3E35               	incfsz	i1___fttol@exp1,f,c
 14674  005186  D7F9               	goto	i1l9539
 14675  005188  D014               	goto	i1l9553
 14676  00518A                     i1l9543:
 14677  00518A  0E17               	movlw	23
 14678  00518C  6435               	cpfsgt	i1___fttol@exp1,c
 14679  00518E  D00F               	goto	i1l9551
 14680  005190                     i1u858_20:
 14681  005190  0E00               	movlw	0
 14682  005192  6E27               	movwf	?i1___fttol,c
 14683  005194  0E00               	movlw	0
 14684  005196  6E28               	movwf	?i1___fttol+1,c
 14685  005198  0E00               	movlw	0
 14686  00519A  6E29               	movwf	?i1___fttol+2,c
 14687  00519C  0E00               	movlw	0
 14688  00519E  6E2A               	movwf	?i1___fttol+3,c
 14689  0051A0  D01B               	goto	i1l794
 14690  0051A2                     i1l9549:
 14691  0051A2  90D8               	bcf	status,0,c
 14692  0051A4  3631               	rlcf	i1___fttol@lval,f,c
 14693  0051A6  3632               	rlcf	i1___fttol@lval+1,f,c
 14694  0051A8  3633               	rlcf	i1___fttol@lval+2,f,c
 14695  0051AA  3634               	rlcf	i1___fttol@lval+3,f,c
 14696  0051AC  0635               	decf	i1___fttol@exp1,f,c
 14697  0051AE                     i1l9551:
 14698  0051AE  6635               	tstfsz	i1___fttol@exp1,c
 14699  0051B0  D7F8               	goto	i1l9549
 14700  0051B2                     i1l9553:
 14701  0051B2  5030               	movf	i1___fttol@sign1,w,c
 14702  0051B4  B4D8               	btfsc	status,2,c
 14703  0051B6  D008               	goto	i1l9557
 14704  0051B8  1E34               	comf	i1___fttol@lval+3,f,c
 14705  0051BA  1E33               	comf	i1___fttol@lval+2,f,c
 14706  0051BC  1E32               	comf	i1___fttol@lval+1,f,c
 14707  0051BE  6C31               	negf	i1___fttol@lval,c
 14708  0051C0  0E00               	movlw	0
 14709  0051C2  2232               	addwfc	i1___fttol@lval+1,f,c
 14710  0051C4  2233               	addwfc	i1___fttol@lval+2,f,c
 14711  0051C6  2234               	addwfc	i1___fttol@lval+3,f,c
 14712  0051C8                     i1l9557:
 14713  0051C8  C031  F027         	movff	i1___fttol@lval,?i1___fttol
 14714  0051CC  C032  F028         	movff	i1___fttol@lval+1,?i1___fttol+1
 14715  0051D0  C033  F029         	movff	i1___fttol@lval+2,?i1___fttol+2
 14716  0051D4  C034  F02A         	movff	i1___fttol@lval+3,?i1___fttol+3
 14717  0051D8                     i1l794:
 14718  0051D8  0012               	return	
 14719  0051DA                     __end_ofi1___fttol:
 14720                           	opt stack 0
 14721                           pclatu	equ	0xFFB
 14722                           pclath	equ	0xFFA
 14723                           tblptru	equ	0xFF8
 14724                           tblptrh	equ	0xFF7
 14725                           tblptrl	equ	0xFF6
 14726                           tablat	equ	0xFF5
 14727                           prodh	equ	0xFF4
 14728                           prodl	equ	0xFF3
 14729                           intcon	equ	0xFF2
 14730                           intcon2	equ	0xFF1
 14731                           postinc0	equ	0xFEE
 14732                           fsr0h	equ	0xFEA
 14733                           fsr0l	equ	0xFE9
 14734                           wreg	equ	0xFE8
 14735                           fsr1h	equ	0xFE2
 14736                           fsr1l	equ	0xFE1
 14737                           bsr	equ	0xFE0
 14738                           indf2	equ	0xFDF
 14739                           postinc2	equ	0xFDE
 14740                           postdec2	equ	0xFDD
 14741                           fsr2h	equ	0xFDA
 14742                           fsr2l	equ	0xFD9
 14743                           status	equ	0xFD8
 14744                           
 14745 ;; *************** function i1___ftneg *****************
 14746 ;; Defined at:
 14747 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;  __ftneg         3   16[COMRAM] float 
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;		None
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  3   16[COMRAM] float 
 14754 ;; Registers used:
 14755 ;;		wreg, status,2, status,0
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/0
 14758 ;;		On exit  : 0/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14761 ;;      Params:         3       0       0       0       0       0       0       0       0
 14762 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14763 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14764 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14765 ;;Total ram usage:        3 bytes
 14766 ;; Hardware stack levels used:    1
 14767 ;; Hardware stack levels required when called:    3
 14768 ;; This function calls:
 14769 ;;		Nothing
 14770 ;; This function is called by:
 14771 ;;		i1_sprintf
 14772 ;; This function uses a non-reentrant model
 14773 ;;
 14774                           
 14775                           	psect	text49
 14776  006220                     __ptext49:
 14777                           	opt stack 0
 14778  006220                     i1___ftneg:
 14779                           	opt stack 20
 14780                           
 14781                           ;incstack = 0
 14782                           ;incstack = 0
 14783  006220  0E7F               	movlw	127
 14784  006222  1413               	andwf	i1___ftneg@f1+2,w,c
 14785  006224  1012               	iorwf	i1___ftneg@f1+1,w,c
 14786  006226  1011               	iorwf	i1___ftneg@f1,w,c
 14787  006228  B4D8               	btfsc	status,2,c
 14788  00622A  D006               	goto	i1l784
 14789  00622C  0E00               	movlw	0
 14790  00622E  1A11               	xorwf	i1___ftneg@f1,f,c
 14791  006230  0E00               	movlw	0
 14792  006232  1A12               	xorwf	i1___ftneg@f1+1,f,c
 14793  006234  0E80               	movlw	128
 14794  006236  1A13               	xorwf	i1___ftneg@f1+2,f,c
 14795  006238                     i1l784:
 14796  006238  C011  F011         	movff	i1___ftneg@f1,?i1___ftneg
 14797  00623C  C012  F012         	movff	i1___ftneg@f1+1,?i1___ftneg+1
 14798  006240  C013  F013         	movff	i1___ftneg@f1+2,?i1___ftneg+2
 14799  006244  0012               	return	
 14800  006246                     __end_ofi1___ftneg:
 14801                           	opt stack 0
 14802                           pclatu	equ	0xFFB
 14803                           pclath	equ	0xFFA
 14804                           tblptru	equ	0xFF8
 14805                           tblptrh	equ	0xFF7
 14806                           tblptrl	equ	0xFF6
 14807                           tablat	equ	0xFF5
 14808                           prodh	equ	0xFF4
 14809                           prodl	equ	0xFF3
 14810                           intcon	equ	0xFF2
 14811                           intcon2	equ	0xFF1
 14812                           postinc0	equ	0xFEE
 14813                           fsr0h	equ	0xFEA
 14814                           fsr0l	equ	0xFE9
 14815                           wreg	equ	0xFE8
 14816                           fsr1h	equ	0xFE2
 14817                           fsr1l	equ	0xFE1
 14818                           bsr	equ	0xFE0
 14819                           indf2	equ	0xFDF
 14820                           postinc2	equ	0xFDE
 14821                           postdec2	equ	0xFDD
 14822                           fsr2h	equ	0xFDA
 14823                           fsr2l	equ	0xFD9
 14824                           status	equ	0xFD8
 14825                           
 14826 ;; *************** function i1___ftge *****************
 14827 ;; Defined at:
 14828 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
 14829 ;; Parameters:    Size  Location     Type
 14830 ;;  __ftge          3   16[COMRAM] float 
 14831 ;;  __ftge          3   19[COMRAM] float 
 14832 ;; Auto vars:     Size  Location     Type
 14833 ;;		None
 14834 ;; Return value:  Size  Location     Type
 14835 ;;		None               void
 14836 ;; Registers used:
 14837 ;;		wreg, status,2, status,0
 14838 ;; Tracked objects:
 14839 ;;		On entry : 0/0
 14840 ;;		On exit  : 0/0
 14841 ;;		Unchanged: 0/0
 14842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14843 ;;      Params:         6       0       0       0       0       0       0       0       0
 14844 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14845 ;;      Temps:          3       0       0       0       0       0       0       0       0
 14846 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14847 ;;Total ram usage:        9 bytes
 14848 ;; Hardware stack levels used:    1
 14849 ;; Hardware stack levels required when called:    3
 14850 ;; This function calls:
 14851 ;;		Nothing
 14852 ;; This function is called by:
 14853 ;;		i1_sprintf
 14854 ;; This function uses a non-reentrant model
 14855 ;;
 14856                           
 14857                           	psect	text50
 14858  0056E0                     __ptext50:
 14859                           	opt stack 0
 14860  0056E0                     i1___ftge:
 14861                           	opt stack 20
 14862                           
 14863                           ;incstack = 0
 14864                           ;incstack = 0
 14865  0056E0  AE13               	btfss	i1___ftge@ff1+2,7,c
 14866  0056E2  D016               	goto	i1l9443
 14867  0056E4  C011  F017         	movff	i1___ftge@ff1,??i1___ftge
 14868  0056E8  C012  F018         	movff	i1___ftge@ff1+1,??i1___ftge+1
 14869  0056EC  C013  F019         	movff	i1___ftge@ff1+2,??i1___ftge+2
 14870  0056F0  1E17               	comf	??i1___ftge,f,c
 14871  0056F2  1E18               	comf	??i1___ftge+1,f,c
 14872  0056F4  1E19               	comf	??i1___ftge+2,f,c
 14873  0056F6  2A17               	incf	??i1___ftge,f,c
 14874  0056F8  0E00               	movlw	0
 14875  0056FA  2218               	addwfc	??i1___ftge+1,f,c
 14876  0056FC  2219               	addwfc	??i1___ftge+2,f,c
 14877  0056FE  0E00               	movlw	0
 14878  005700  2417               	addwf	??i1___ftge,w,c
 14879  005702  6E11               	movwf	i1___ftge@ff1,c
 14880  005704  0E00               	movlw	0
 14881  005706  2018               	addwfc	??i1___ftge+1,w,c
 14882  005708  6E12               	movwf	i1___ftge@ff1+1,c
 14883  00570A  0E80               	movlw	128
 14884  00570C  2019               	addwfc	??i1___ftge+2,w,c
 14885  00570E  6E13               	movwf	i1___ftge@ff1+2,c
 14886  005710                     i1l9443:
 14887  005710  AE16               	btfss	i1___ftge@ff2+2,7,c
 14888  005712  D016               	goto	i1l9447
 14889  005714  C014  F017         	movff	i1___ftge@ff2,??i1___ftge
 14890  005718  C015  F018         	movff	i1___ftge@ff2+1,??i1___ftge+1
 14891  00571C  C016  F019         	movff	i1___ftge@ff2+2,??i1___ftge+2
 14892  005720  1E17               	comf	??i1___ftge,f,c
 14893  005722  1E18               	comf	??i1___ftge+1,f,c
 14894  005724  1E19               	comf	??i1___ftge+2,f,c
 14895  005726  2A17               	incf	??i1___ftge,f,c
 14896  005728  0E00               	movlw	0
 14897  00572A  2218               	addwfc	??i1___ftge+1,f,c
 14898  00572C  2219               	addwfc	??i1___ftge+2,f,c
 14899  00572E  0E00               	movlw	0
 14900  005730  2417               	addwf	??i1___ftge,w,c
 14901  005732  6E14               	movwf	i1___ftge@ff2,c
 14902  005734  0E00               	movlw	0
 14903  005736  2018               	addwfc	??i1___ftge+1,w,c
 14904  005738  6E15               	movwf	i1___ftge@ff2+1,c
 14905  00573A  0E80               	movlw	128
 14906  00573C  2019               	addwfc	??i1___ftge+2,w,c
 14907  00573E  6E16               	movwf	i1___ftge@ff2+2,c
 14908  005740                     i1l9447:
 14909  005740  0E00               	movlw	0
 14910  005742  1A11               	xorwf	i1___ftge@ff1,f,c
 14911  005744  0E00               	movlw	0
 14912  005746  1A12               	xorwf	i1___ftge@ff1+1,f,c
 14913  005748  0E80               	movlw	128
 14914  00574A  1A13               	xorwf	i1___ftge@ff1+2,f,c
 14915  00574C  0E00               	movlw	0
 14916  00574E  1A14               	xorwf	i1___ftge@ff2,f,c
 14917  005750  0E00               	movlw	0
 14918  005752  1A15               	xorwf	i1___ftge@ff2+1,f,c
 14919  005754  0E80               	movlw	128
 14920  005756  1A16               	xorwf	i1___ftge@ff2+2,f,c
 14921  005758  5014               	movf	i1___ftge@ff2,w,c
 14922  00575A  5C11               	subwf	i1___ftge@ff1,w,c
 14923  00575C  5015               	movf	i1___ftge@ff2+1,w,c
 14924  00575E  5812               	subwfb	i1___ftge@ff1+1,w,c
 14925  005760  5016               	movf	i1___ftge@ff2+2,w,c
 14926  005762  5813               	subwfb	i1___ftge@ff1+2,w,c
 14927  005764  B0D8               	btfsc	status,0,c
 14928  005766  D002               	goto	i1l9453
 14929  005768  90D8               	bcf	status,0,c
 14930  00576A  D001               	goto	i1l768
 14931  00576C                     i1l9453:
 14932  00576C  80D8               	bsf	status,0,c
 14933  00576E                     i1l768:
 14934  00576E  0012               	return	
 14935  005770                     __end_ofi1___ftge:
 14936                           	opt stack 0
 14937                           pclatu	equ	0xFFB
 14938                           pclath	equ	0xFFA
 14939                           tblptru	equ	0xFF8
 14940                           tblptrh	equ	0xFF7
 14941                           tblptrl	equ	0xFF6
 14942                           tablat	equ	0xFF5
 14943                           prodh	equ	0xFF4
 14944                           prodl	equ	0xFF3
 14945                           intcon	equ	0xFF2
 14946                           intcon2	equ	0xFF1
 14947                           postinc0	equ	0xFEE
 14948                           fsr0h	equ	0xFEA
 14949                           fsr0l	equ	0xFE9
 14950                           wreg	equ	0xFE8
 14951                           fsr1h	equ	0xFE2
 14952                           fsr1l	equ	0xFE1
 14953                           bsr	equ	0xFE0
 14954                           indf2	equ	0xFDF
 14955                           postinc2	equ	0xFDE
 14956                           postdec2	equ	0xFDD
 14957                           fsr2h	equ	0xFDA
 14958                           fsr2l	equ	0xFD9
 14959                           status	equ	0xFD8
 14960                           
 14961 ;; *************** function i1__tdiv_to_l_ *****************
 14962 ;; Defined at:
 14963 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;  _tdiv_to_l_     3   16[COMRAM] float 
 14966 ;;  _tdiv_to_l_     3   19[COMRAM] float 
 14967 ;; Auto vars:     Size  Location     Type
 14968 ;;  _tdiv_to_l_     4   27[COMRAM] unsigned long 
 14969 ;;  _tdiv_to_l_     1   32[COMRAM] unsigned char 
 14970 ;;  _tdiv_to_l_     1   31[COMRAM] unsigned char 
 14971 ;; Return value:  Size  Location     Type
 14972 ;;                  4   16[COMRAM] unsigned long 
 14973 ;; Registers used:
 14974 ;;		wreg, status,2, status,0
 14975 ;; Tracked objects:
 14976 ;;		On entry : 0/0
 14977 ;;		On exit  : 0/0
 14978 ;;		Unchanged: 0/0
 14979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14980 ;;      Params:         6       0       0       0       0       0       0       0       0
 14981 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14982 ;;      Temps:          5       0       0       0       0       0       0       0       0
 14983 ;;      Totals:        17       0       0       0       0       0       0       0       0
 14984 ;;Total ram usage:       17 bytes
 14985 ;; Hardware stack levels used:    1
 14986 ;; Hardware stack levels required when called:    3
 14987 ;; This function calls:
 14988 ;;		Nothing
 14989 ;; This function is called by:
 14990 ;;		i1_sprintf
 14991 ;; This function uses a non-reentrant model
 14992 ;;
 14993                           
 14994                           	psect	text51
 14995  0045BA                     __ptext51:
 14996                           	opt stack 0
 14997  0045BA                     i1__tdiv_to_l_:
 14998                           	opt stack 20
 14999                           
 15000                           ;incstack = 0
 15001                           ;incstack = 0
 15002  0045BA  0E0F               	movlw	15
 15003  0045BC  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15004  0045BE  C011  F018         	movff	i1__tdiv_to_l_@f1,??i1__tdiv_to_l_+1
 15005  0045C2  C012  F019         	movff	i1__tdiv_to_l_@f1+1,??i1__tdiv_to_l_+2
 15006  0045C6  C013  F01A         	movff	i1__tdiv_to_l_@f1+2,??i1__tdiv_to_l_+3
 15007  0045CA  2817               	incf	??i1__tdiv_to_l_,w,c
 15008  0045CC  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 15009  0045CE  D004               	goto	i1u834_20
 15010  0045D0                     i1u834_25:
 15011  0045D0  90D8               	bcf	status,0,c
 15012  0045D2  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 15013  0045D4  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 15014  0045D6  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 15015  0045D8                     i1u834_20:
 15016  0045D8  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 15017  0045DA  D7FA               	goto	i1u834_25
 15018  0045DC  5018               	movf	??i1__tdiv_to_l_+1,w,c
 15019  0045DE  6E21               	movwf	i1__tdiv_to_l_@exp1,c
 15020  0045E0  6621               	tstfsz	i1__tdiv_to_l_@exp1& (0+255),c
 15021  0045E2  D001               	goto	i1l9389
 15022  0045E4  D061               	goto	i1u841_20
 15023  0045E6                     i1l9389:
 15024  0045E6  0E0F               	movlw	15
 15025  0045E8  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15026  0045EA  C014  F018         	movff	i1__tdiv_to_l_@f2,??i1__tdiv_to_l_+1
 15027  0045EE  C015  F019         	movff	i1__tdiv_to_l_@f2+1,??i1__tdiv_to_l_+2
 15028  0045F2  C016  F01A         	movff	i1__tdiv_to_l_@f2+2,??i1__tdiv_to_l_+3
 15029  0045F6  2817               	incf	??i1__tdiv_to_l_,w,c
 15030  0045F8  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 15031  0045FA  D004               	goto	i1u836_20
 15032  0045FC                     i1u836_25:
 15033  0045FC  90D8               	bcf	status,0,c
 15034  0045FE  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 15035  004600  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 15036  004602  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 15037  004604                     i1u836_20:
 15038  004604  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 15039  004606  D7FA               	goto	i1u836_25
 15040  004608  5018               	movf	??i1__tdiv_to_l_+1,w,c
 15041  00460A  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 15042  00460C  6620               	tstfsz	i1__tdiv_to_l_@cntr& (0+255),c
 15043  00460E  D001               	goto	i1l9395
 15044  004610  D04B               	goto	i1u841_20
 15045  004612                     i1l9395:
 15046  004612  8E12               	bsf	i1__tdiv_to_l_@f1+1,7,c
 15047  004614  0EFF               	movlw	255
 15048  004616  1611               	andwf	i1__tdiv_to_l_@f1,f,c
 15049  004618  0EFF               	movlw	255
 15050  00461A  1612               	andwf	i1__tdiv_to_l_@f1+1,f,c
 15051  00461C  0E00               	movlw	0
 15052  00461E  1613               	andwf	i1__tdiv_to_l_@f1+2,f,c
 15053  004620  8E15               	bsf	i1__tdiv_to_l_@f2+1,7,c
 15054  004622  0EFF               	movlw	255
 15055  004624  1614               	andwf	i1__tdiv_to_l_@f2,f,c
 15056  004626  0EFF               	movlw	255
 15057  004628  1615               	andwf	i1__tdiv_to_l_@f2+1,f,c
 15058  00462A  0E00               	movlw	0
 15059  00462C  1616               	andwf	i1__tdiv_to_l_@f2+2,f,c
 15060  00462E  0E00               	movlw	0
 15061  004630  6E1C               	movwf	i1__tdiv_to_l_@quot,c
 15062  004632  0E00               	movlw	0
 15063  004634  6E1D               	movwf	i1__tdiv_to_l_@quot+1,c
 15064  004636  0E00               	movlw	0
 15065  004638  6E1E               	movwf	i1__tdiv_to_l_@quot+2,c
 15066  00463A  0E00               	movlw	0
 15067  00463C  6E1F               	movwf	i1__tdiv_to_l_@quot+3,c
 15068  00463E  0E7F               	movlw	127
 15069  004640  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 15070  004642  5020               	movf	i1__tdiv_to_l_@cntr,w,c
 15071  004644  0F98               	addlw	152
 15072  004646  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 15073  004648  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15074  00464A  0E18               	movlw	24
 15075  00464C  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 15076  00464E  5017               	movf	??i1__tdiv_to_l_& (0+255),w,c
 15077  004650                     i1l9409:
 15078  004650  90D8               	bcf	status,0,c
 15079  004652  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 15080  004654  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 15081  004656  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 15082  004658  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 15083  00465A  5014               	movf	i1__tdiv_to_l_@f2,w,c
 15084  00465C  5C11               	subwf	i1__tdiv_to_l_@f1,w,c
 15085  00465E  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 15086  004660  5812               	subwfb	i1__tdiv_to_l_@f1+1,w,c
 15087  004662  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 15088  004664  5813               	subwfb	i1__tdiv_to_l_@f1+2,w,c
 15089  004666  A0D8               	btfss	status,0,c
 15090  004668  D007               	goto	i1l753
 15091  00466A  5014               	movf	i1__tdiv_to_l_@f2,w,c
 15092  00466C  5E11               	subwf	i1__tdiv_to_l_@f1,f,c
 15093  00466E  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 15094  004670  5A12               	subwfb	i1__tdiv_to_l_@f1+1,f,c
 15095  004672  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 15096  004674  5A13               	subwfb	i1__tdiv_to_l_@f1+2,f,c
 15097  004676  801C               	bsf	i1__tdiv_to_l_@quot,0,c
 15098  004678                     i1l753:
 15099  004678  90D8               	bcf	status,0,c
 15100  00467A  3611               	rlcf	i1__tdiv_to_l_@f1,f,c
 15101  00467C  3612               	rlcf	i1__tdiv_to_l_@f1+1,f,c
 15102  00467E  3613               	rlcf	i1__tdiv_to_l_@f1+2,f,c
 15103  004680  2E20               	decfsz	i1__tdiv_to_l_@cntr,f,c
 15104  004682  D7E6               	goto	i1l9409
 15105  004684  AE21               	btfss	i1__tdiv_to_l_@exp1,7,c
 15106  004686  D00D               	goto	i1l9429
 15107  004688  5021               	movf	i1__tdiv_to_l_@exp1,w,c
 15108  00468A  0A80               	xorlw	128
 15109  00468C  0F97               	addlw	151
 15110  00468E  A0D8               	btfss	status,0,c
 15111  004690  D00B               	goto	i1u841_20
 15112  004692                     i1l9425:
 15113  004692  90D8               	bcf	status,0,c
 15114  004694  321F               	rrcf	i1__tdiv_to_l_@quot+3,f,c
 15115  004696  321E               	rrcf	i1__tdiv_to_l_@quot+2,f,c
 15116  004698  321D               	rrcf	i1__tdiv_to_l_@quot+1,f,c
 15117  00469A  321C               	rrcf	i1__tdiv_to_l_@quot,f,c
 15118  00469C  3E21               	incfsz	i1__tdiv_to_l_@exp1,f,c
 15119  00469E  D7F9               	goto	i1l9425
 15120  0046A0  D014               	goto	i1l759
 15121  0046A2                     i1l9429:
 15122  0046A2  0E17               	movlw	23
 15123  0046A4  6421               	cpfsgt	i1__tdiv_to_l_@exp1,c
 15124  0046A6  D00F               	goto	i1l9437
 15125  0046A8                     i1u841_20:
 15126  0046A8  0E00               	movlw	0
 15127  0046AA  6E11               	movwf	?i1__tdiv_to_l_,c
 15128  0046AC  0E00               	movlw	0
 15129  0046AE  6E12               	movwf	?i1__tdiv_to_l_+1,c
 15130  0046B0  0E00               	movlw	0
 15131  0046B2  6E13               	movwf	?i1__tdiv_to_l_+2,c
 15132  0046B4  0E00               	movlw	0
 15133  0046B6  6E14               	movwf	?i1__tdiv_to_l_+3,c
 15134  0046B8  D010               	goto	i1l750
 15135  0046BA                     i1l9435:
 15136  0046BA  90D8               	bcf	status,0,c
 15137  0046BC  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 15138  0046BE  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 15139  0046C0  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 15140  0046C2  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 15141  0046C4  0621               	decf	i1__tdiv_to_l_@exp1,f,c
 15142  0046C6                     i1l9437:
 15143  0046C6  6621               	tstfsz	i1__tdiv_to_l_@exp1,c
 15144  0046C8  D7F8               	goto	i1l9435
 15145  0046CA                     i1l759:
 15146  0046CA  C01C  F011         	movff	i1__tdiv_to_l_@quot,?i1__tdiv_to_l_
 15147  0046CE  C01D  F012         	movff	i1__tdiv_to_l_@quot+1,?i1__tdiv_to_l_+1
 15148  0046D2  C01E  F013         	movff	i1__tdiv_to_l_@quot+2,?i1__tdiv_to_l_+2
 15149  0046D6  C01F  F014         	movff	i1__tdiv_to_l_@quot+3,?i1__tdiv_to_l_+3
 15150  0046DA                     i1l750:
 15151  0046DA  0012               	return	
 15152  0046DC                     __end_ofi1__tdiv_to_l_:
 15153                           	opt stack 0
 15154                           pclatu	equ	0xFFB
 15155                           pclath	equ	0xFFA
 15156                           tblptru	equ	0xFF8
 15157                           tblptrh	equ	0xFF7
 15158                           tblptrl	equ	0xFF6
 15159                           tablat	equ	0xFF5
 15160                           prodh	equ	0xFF4
 15161                           prodl	equ	0xFF3
 15162                           intcon	equ	0xFF2
 15163                           intcon2	equ	0xFF1
 15164                           postinc0	equ	0xFEE
 15165                           fsr0h	equ	0xFEA
 15166                           fsr0l	equ	0xFE9
 15167                           wreg	equ	0xFE8
 15168                           fsr1h	equ	0xFE2
 15169                           fsr1l	equ	0xFE1
 15170                           bsr	equ	0xFE0
 15171                           indf2	equ	0xFDF
 15172                           postinc2	equ	0xFDE
 15173                           postdec2	equ	0xFDD
 15174                           fsr2h	equ	0xFDA
 15175                           fsr2l	equ	0xFD9
 15176                           status	equ	0xFD8
 15177                           
 15178 ;; *************** function i1__div_to_l_ *****************
 15179 ;; Defined at:
 15180 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
 15181 ;; Parameters:    Size  Location     Type
 15182 ;;  _div_to_l_      3   16[COMRAM] unsigned long 
 15183 ;;  _div_to_l_      3   19[COMRAM] unsigned long 
 15184 ;; Auto vars:     Size  Location     Type
 15185 ;;  _div_to_l_      4   23[COMRAM] unsigned long 
 15186 ;;  _div_to_l_      1   28[COMRAM] unsigned char 
 15187 ;;  _div_to_l_      1   27[COMRAM] unsigned char 
 15188 ;; Return value:  Size  Location     Type
 15189 ;;                  4   16[COMRAM] unsigned long 
 15190 ;; Registers used:
 15191 ;;		wreg, status,2, status,0
 15192 ;; Tracked objects:
 15193 ;;		On entry : 0/0
 15194 ;;		On exit  : 0/0
 15195 ;;		Unchanged: 0/0
 15196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15197 ;;      Params:         6       0       0       0       0       0       0       0       0
 15198 ;;      Locals:         6       0       0       0       0       0       0       0       0
 15199 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15200 ;;      Totals:        13       0       0       0       0       0       0       0       0
 15201 ;;Total ram usage:       13 bytes
 15202 ;; Hardware stack levels used:    1
 15203 ;; Hardware stack levels required when called:    3
 15204 ;; This function calls:
 15205 ;;		Nothing
 15206 ;; This function is called by:
 15207 ;;		i1_sprintf
 15208 ;; This function uses a non-reentrant model
 15209 ;;
 15210                           
 15211                           	psect	text52
 15212  004E28                     __ptext52:
 15213                           	opt stack 0
 15214  004E28                     i1__div_to_l_:
 15215                           	opt stack 20
 15216                           
 15217                           ;incstack = 0
 15218                           ;incstack = 0
 15219  004E28  3413               	rlcf	(i1__div_to_l_@f1+2)& (0+255),w,c
 15220  004E2A  3414               	rlcf	(i1__div_to_l_@f1+3)& (0+255),w,c
 15221  004E2C  6E1D               	movwf	i1__div_to_l_@exp1,c
 15222  004E2E  661D               	tstfsz	i1__div_to_l_@exp1& (0+255),c
 15223  004E30  D001               	goto	i1l9185
 15224  004E32  D05A               	goto	i1u799_20
 15225  004E34                     i1l9185:
 15226  004E34  3416               	rlcf	(i1__div_to_l_@f2+2)& (0+255),w,c
 15227  004E36  3417               	rlcf	(i1__div_to_l_@f2+3)& (0+255),w,c
 15228  004E38  6E1C               	movwf	i1__div_to_l_@cntr,c
 15229  004E3A  661C               	tstfsz	i1__div_to_l_@cntr& (0+255),c
 15230  004E3C  D001               	goto	i1l9191
 15231  004E3E  D054               	goto	i1u799_20
 15232  004E40                     i1l9191:
 15233  004E40  8E13               	bsf	i1__div_to_l_@f1+2,7,c
 15234  004E42  0EFF               	movlw	255
 15235  004E44  1611               	andwf	i1__div_to_l_@f1,f,c
 15236  004E46  0EFF               	movlw	255
 15237  004E48  1612               	andwf	i1__div_to_l_@f1+1,f,c
 15238  004E4A  0EFF               	movlw	255
 15239  004E4C  1613               	andwf	i1__div_to_l_@f1+2,f,c
 15240  004E4E  0E00               	movlw	0
 15241  004E50  1614               	andwf	i1__div_to_l_@f1+3,f,c
 15242  004E52  8E16               	bsf	i1__div_to_l_@f2+2,7,c
 15243  004E54  0EFF               	movlw	255
 15244  004E56  1614               	andwf	i1__div_to_l_@f2,f,c
 15245  004E58  0EFF               	movlw	255
 15246  004E5A  1615               	andwf	i1__div_to_l_@f2+1,f,c
 15247  004E5C  0EFF               	movlw	255
 15248  004E5E  1616               	andwf	i1__div_to_l_@f2+2,f,c
 15249  004E60  0E00               	movlw	0
 15250  004E62  1617               	andwf	i1__div_to_l_@f2+3,f,c
 15251  004E64  0E00               	movlw	0
 15252  004E66  6E18               	movwf	i1__div_to_l_@quot,c
 15253  004E68  0E00               	movlw	0
 15254  004E6A  6E19               	movwf	i1__div_to_l_@quot+1,c
 15255  004E6C  0E00               	movlw	0
 15256  004E6E  6E1A               	movwf	i1__div_to_l_@quot+2,c
 15257  004E70  0E00               	movlw	0
 15258  004E72  6E1B               	movwf	i1__div_to_l_@quot+3,c
 15259  004E74  0E7F               	movlw	127
 15260  004E76  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 15261  004E78  501C               	movf	i1__div_to_l_@cntr,w,c
 15262  004E7A  0FA0               	addlw	160
 15263  004E7C  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 15264  004E7E  6E17               	movwf	??i1__div_to_l_& (0+255),c
 15265  004E80  0E20               	movlw	32
 15266  004E82  6E1C               	movwf	i1__div_to_l_@cntr,c
 15267  004E84  5017               	movf	??i1__div_to_l_& (0+255),w,c
 15268  004E86                     i1l634:
 15269  004E86  90D8               	bcf	status,0,c
 15270  004E88  3618               	rlcf	i1__div_to_l_@quot,f,c
 15271  004E8A  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 15272  004E8C  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 15273  004E8E  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 15274  004E90  5014               	movf	i1__div_to_l_@f2,w,c
 15275  004E92  5C11               	subwf	i1__div_to_l_@f1,w,c
 15276  004E94  5015               	movf	i1__div_to_l_@f2+1,w,c
 15277  004E96  5812               	subwfb	i1__div_to_l_@f1+1,w,c
 15278  004E98  5016               	movf	i1__div_to_l_@f2+2,w,c
 15279  004E9A  5813               	subwfb	i1__div_to_l_@f1+2,w,c
 15280  004E9C  5017               	movf	i1__div_to_l_@f2+3,w,c
 15281  004E9E  5814               	subwfb	i1__div_to_l_@f1+3,w,c
 15282  004EA0  A0D8               	btfss	status,0,c
 15283  004EA2  D009               	goto	i1l9211
 15284  004EA4  5014               	movf	i1__div_to_l_@f2,w,c
 15285  004EA6  5E11               	subwf	i1__div_to_l_@f1,f,c
 15286  004EA8  5015               	movf	i1__div_to_l_@f2+1,w,c
 15287  004EAA  5A12               	subwfb	i1__div_to_l_@f1+1,f,c
 15288  004EAC  5016               	movf	i1__div_to_l_@f2+2,w,c
 15289  004EAE  5A13               	subwfb	i1__div_to_l_@f1+2,f,c
 15290  004EB0  5017               	movf	i1__div_to_l_@f2+3,w,c
 15291  004EB2  5A14               	subwfb	i1__div_to_l_@f1+3,f,c
 15292  004EB4  8018               	bsf	i1__div_to_l_@quot,0,c
 15293  004EB6                     i1l9211:
 15294  004EB6  90D8               	bcf	status,0,c
 15295  004EB8  3611               	rlcf	i1__div_to_l_@f1,f,c
 15296  004EBA  3612               	rlcf	i1__div_to_l_@f1+1,f,c
 15297  004EBC  3613               	rlcf	i1__div_to_l_@f1+2,f,c
 15298  004EBE  3614               	rlcf	i1__div_to_l_@f1+3,f,c
 15299  004EC0  2E1C               	decfsz	i1__div_to_l_@cntr,f,c
 15300  004EC2  D7E1               	goto	i1l634
 15301  004EC4  AE1D               	btfss	i1__div_to_l_@exp1,7,c
 15302  004EC6  D00D               	goto	i1l9225
 15303  004EC8  501D               	movf	i1__div_to_l_@exp1,w,c
 15304  004ECA  0A80               	xorlw	128
 15305  004ECC  0F9F               	addlw	159
 15306  004ECE  A0D8               	btfss	status,0,c
 15307  004ED0  D00B               	goto	i1u799_20
 15308  004ED2                     i1l9221:
 15309  004ED2  90D8               	bcf	status,0,c
 15310  004ED4  321B               	rrcf	i1__div_to_l_@quot+3,f,c
 15311  004ED6  321A               	rrcf	i1__div_to_l_@quot+2,f,c
 15312  004ED8  3219               	rrcf	i1__div_to_l_@quot+1,f,c
 15313  004EDA  3218               	rrcf	i1__div_to_l_@quot,f,c
 15314  004EDC  3E1D               	incfsz	i1__div_to_l_@exp1,f,c
 15315  004EDE  D7F9               	goto	i1l9221
 15316  004EE0  D014               	goto	i1l641
 15317  004EE2                     i1l9225:
 15318  004EE2  0E1F               	movlw	31
 15319  004EE4  641D               	cpfsgt	i1__div_to_l_@exp1,c
 15320  004EE6  D00F               	goto	i1l9233
 15321  004EE8                     i1u799_20:
 15322  004EE8  0E00               	movlw	0
 15323  004EEA  6E11               	movwf	?i1__div_to_l_,c
 15324  004EEC  0E00               	movlw	0
 15325  004EEE  6E12               	movwf	?i1__div_to_l_+1,c
 15326  004EF0  0E00               	movlw	0
 15327  004EF2  6E13               	movwf	?i1__div_to_l_+2,c
 15328  004EF4  0E00               	movlw	0
 15329  004EF6  6E14               	movwf	?i1__div_to_l_+3,c
 15330  004EF8  D010               	goto	i1l632
 15331  004EFA                     i1l9231:
 15332  004EFA  90D8               	bcf	status,0,c
 15333  004EFC  3618               	rlcf	i1__div_to_l_@quot,f,c
 15334  004EFE  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 15335  004F00  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 15336  004F02  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 15337  004F04  061D               	decf	i1__div_to_l_@exp1,f,c
 15338  004F06                     i1l9233:
 15339  004F06  661D               	tstfsz	i1__div_to_l_@exp1,c
 15340  004F08  D7F8               	goto	i1l9231
 15341  004F0A                     i1l641:
 15342  004F0A  C018  F011         	movff	i1__div_to_l_@quot,?i1__div_to_l_
 15343  004F0E  C019  F012         	movff	i1__div_to_l_@quot+1,?i1__div_to_l_+1
 15344  004F12  C01A  F013         	movff	i1__div_to_l_@quot+2,?i1__div_to_l_+2
 15345  004F16  C01B  F014         	movff	i1__div_to_l_@quot+3,?i1__div_to_l_+3
 15346  004F1A                     i1l632:
 15347  004F1A  0012               	return	
 15348  004F1C                     __end_ofi1__div_to_l_:
 15349                           	opt stack 0
 15350                           pclatu	equ	0xFFB
 15351                           pclath	equ	0xFFA
 15352                           tblptru	equ	0xFF8
 15353                           tblptrh	equ	0xFF7
 15354                           tblptrl	equ	0xFF6
 15355                           tablat	equ	0xFF5
 15356                           prodh	equ	0xFF4
 15357                           prodl	equ	0xFF3
 15358                           intcon	equ	0xFF2
 15359                           intcon2	equ	0xFF1
 15360                           postinc0	equ	0xFEE
 15361                           fsr0h	equ	0xFEA
 15362                           fsr0l	equ	0xFE9
 15363                           wreg	equ	0xFE8
 15364                           fsr1h	equ	0xFE2
 15365                           fsr1l	equ	0xFE1
 15366                           bsr	equ	0xFE0
 15367                           indf2	equ	0xFDF
 15368                           postinc2	equ	0xFDE
 15369                           postdec2	equ	0xFDD
 15370                           fsr2h	equ	0xFDA
 15371                           fsr2l	equ	0xFD9
 15372                           status	equ	0xFD8
 15373                           
 15374 ;; *************** function i1___asftsub *****************
 15375 ;; Defined at:
 15376 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
 15377 ;; Parameters:    Size  Location     Type
 15378 ;;  __asftsub       2   44[COMRAM] PTR float 
 15379 ;;		 -> sprintf@fval(3), 
 15380 ;;  __asftsub       3   46[COMRAM] float 
 15381 ;; Auto vars:     Size  Location     Type
 15382 ;;		None
 15383 ;; Return value:  Size  Location     Type
 15384 ;;                  3   44[COMRAM] float 
 15385 ;; Registers used:
 15386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15387 ;; Tracked objects:
 15388 ;;		On entry : 0/0
 15389 ;;		On exit  : 0/0
 15390 ;;		Unchanged: 0/0
 15391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15392 ;;      Params:         5       0       0       0       0       0       0       0       0
 15393 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15394 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15395 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15396 ;;Total ram usage:        5 bytes
 15397 ;; Hardware stack levels used:    1
 15398 ;; Hardware stack levels required when called:    6
 15399 ;; This function calls:
 15400 ;;		i1___ftsub
 15401 ;; This function is called by:
 15402 ;;		i1_sprintf
 15403 ;; This function uses a non-reentrant model
 15404 ;;
 15405                           
 15406                           	psect	text53
 15407  005FEE                     __ptext53:
 15408                           	opt stack 0
 15409  005FEE                     i1___asftsub:
 15410                           	opt stack 17
 15411                           
 15412                           ;	Return value of i1___asftsub is never used
 15413                           
 15414                           ;incstack = 0
 15415                           ;incstack = 0
 15416  005FEE  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 15417  005FF2  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 15418  005FF6  CFDE F027          	movff	postinc2,?i1___ftsub
 15419  005FFA  CFDE F028          	movff	postinc2,?i1___ftsub+1
 15420  005FFE  CFDD F029          	movff	postdec2,?i1___ftsub+2
 15421  006002  C02F  F02A         	movff	i1___asftsub@f2,?i1___ftsub+3
 15422  006006  C030  F02B         	movff	i1___asftsub@f2+1,?i1___ftsub+4
 15423  00600A  C031  F02C         	movff	i1___asftsub@f2+2,?i1___ftsub+5
 15424  00600E  ECC5  F030         	call	i1___ftsub	;wreg free
 15425  006012  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 15426  006016  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 15427  00601A  C027  FFDE         	movff	?i1___ftsub,postinc2
 15428  00601E  C028  FFDE         	movff	?i1___ftsub+1,postinc2
 15429  006022  C029  FFDD         	movff	?i1___ftsub+2,postdec2
 15430  006026  52DD               	movf	postdec2,f,c
 15431  006028  0012               	return	
 15432  00602A                     __end_ofi1___asftsub:
 15433                           	opt stack 0
 15434                           pclatu	equ	0xFFB
 15435                           pclath	equ	0xFFA
 15436                           tblptru	equ	0xFF8
 15437                           tblptrh	equ	0xFF7
 15438                           tblptrl	equ	0xFF6
 15439                           tablat	equ	0xFF5
 15440                           prodh	equ	0xFF4
 15441                           prodl	equ	0xFF3
 15442                           intcon	equ	0xFF2
 15443                           intcon2	equ	0xFF1
 15444                           postinc0	equ	0xFEE
 15445                           fsr0h	equ	0xFEA
 15446                           fsr0l	equ	0xFE9
 15447                           wreg	equ	0xFE8
 15448                           fsr1h	equ	0xFE2
 15449                           fsr1l	equ	0xFE1
 15450                           bsr	equ	0xFE0
 15451                           indf2	equ	0xFDF
 15452                           postinc2	equ	0xFDE
 15453                           postdec2	equ	0xFDD
 15454                           fsr2h	equ	0xFDA
 15455                           fsr2l	equ	0xFD9
 15456                           status	equ	0xFD8
 15457                           
 15458 ;; *************** function i1___ftsub *****************
 15459 ;; Defined at:
 15460 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
 15461 ;; Parameters:    Size  Location     Type
 15462 ;;  __ftsub         3   38[COMRAM] float 
 15463 ;;  __ftsub         3   41[COMRAM] float 
 15464 ;; Auto vars:     Size  Location     Type
 15465 ;;		None
 15466 ;; Return value:  Size  Location     Type
 15467 ;;                  3   38[COMRAM] float 
 15468 ;; Registers used:
 15469 ;;		wreg, status,2, status,0, cstack
 15470 ;; Tracked objects:
 15471 ;;		On entry : 0/0
 15472 ;;		On exit  : 0/0
 15473 ;;		Unchanged: 0/0
 15474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15475 ;;      Params:         6       0       0       0       0       0       0       0       0
 15476 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15477 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15478 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15479 ;;Total ram usage:        6 bytes
 15480 ;; Hardware stack levels used:    1
 15481 ;; Hardware stack levels required when called:    5
 15482 ;; This function calls:
 15483 ;;		i1___ftadd
 15484 ;; This function is called by:
 15485 ;;		i1___asftsub
 15486 ;; This function uses a non-reentrant model
 15487 ;;
 15488                           
 15489                           	psect	text54
 15490  00618A                     __ptext54:
 15491                           	opt stack 0
 15492  00618A                     i1___ftsub:
 15493                           	opt stack 17
 15494                           
 15495                           ;incstack = 0
 15496                           ;incstack = 0
 15497  00618A  0E00               	movlw	0
 15498  00618C  1A2A               	xorwf	i1___ftsub@f2,f,c
 15499  00618E  0E00               	movlw	0
 15500  006190  1A2B               	xorwf	i1___ftsub@f2+1,f,c
 15501  006192  0E80               	movlw	128
 15502  006194  1A2C               	xorwf	i1___ftsub@f2+2,f,c
 15503  006196  C027  F019         	movff	i1___ftsub@f1,?i1___ftadd
 15504  00619A  C028  F01A         	movff	i1___ftsub@f1+1,?i1___ftadd+1
 15505  00619E  C029  F01B         	movff	i1___ftsub@f1+2,?i1___ftadd+2
 15506  0061A2  C02A  F01C         	movff	i1___ftsub@f2,?i1___ftadd+3
 15507  0061A6  C02B  F01D         	movff	i1___ftsub@f2+1,?i1___ftadd+4
 15508  0061AA  C02C  F01E         	movff	i1___ftsub@f2+2,?i1___ftadd+5
 15509  0061AE  ECC2  F01E         	call	i1___ftadd	;wreg free
 15510  0061B2  C01B  F029         	movff	?i1___ftadd+2,?i1___ftsub+2
 15511  0061B6  C01A  F028         	movff	?i1___ftadd+1,?i1___ftsub+1
 15512  0061BA  C019  F027         	movff	?i1___ftadd,?i1___ftsub
 15513  0061BE  0012               	return	
 15514  0061C0                     __end_ofi1___ftsub:
 15515                           	opt stack 0
 15516                           pclatu	equ	0xFFB
 15517                           pclath	equ	0xFFA
 15518                           tblptru	equ	0xFF8
 15519                           tblptrh	equ	0xFF7
 15520                           tblptrl	equ	0xFF6
 15521                           tablat	equ	0xFF5
 15522                           prodh	equ	0xFF4
 15523                           prodl	equ	0xFF3
 15524                           intcon	equ	0xFF2
 15525                           intcon2	equ	0xFF1
 15526                           postinc0	equ	0xFEE
 15527                           fsr0h	equ	0xFEA
 15528                           fsr0l	equ	0xFE9
 15529                           wreg	equ	0xFE8
 15530                           fsr1h	equ	0xFE2
 15531                           fsr1l	equ	0xFE1
 15532                           bsr	equ	0xFE0
 15533                           indf2	equ	0xFDF
 15534                           postinc2	equ	0xFDE
 15535                           postdec2	equ	0xFDD
 15536                           fsr2h	equ	0xFDA
 15537                           fsr2l	equ	0xFD9
 15538                           status	equ	0xFD8
 15539                           
 15540 ;; *************** function i1___asftmul *****************
 15541 ;; Defined at:
 15542 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
 15543 ;; Parameters:    Size  Location     Type
 15544 ;;  __asftmul       2    0[BANK0 ] PTR float 
 15545 ;;		 -> sprintf@integ(3), 
 15546 ;;  __asftmul       3    2[BANK0 ] float 
 15547 ;; Auto vars:     Size  Location     Type
 15548 ;;		None
 15549 ;; Return value:  Size  Location     Type
 15550 ;;                  3    0[BANK0 ] float 
 15551 ;; Registers used:
 15552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15553 ;; Tracked objects:
 15554 ;;		On entry : 0/0
 15555 ;;		On exit  : 0/0
 15556 ;;		Unchanged: 0/0
 15557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15558 ;;      Params:         0       5       0       0       0       0       0       0       0
 15559 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15560 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15561 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15562 ;;Total ram usage:        5 bytes
 15563 ;; Hardware stack levels used:    1
 15564 ;; Hardware stack levels required when called:    5
 15565 ;; This function calls:
 15566 ;;		i1___ftmul
 15567 ;; This function is called by:
 15568 ;;		i1_sprintf
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572                           	psect	text55
 15573  00602A                     __ptext55:
 15574                           	opt stack 0
 15575  00602A                     i1___asftmul:
 15576                           	opt stack 18
 15577                           
 15578                           ;	Return value of i1___asftmul is never used
 15579                           
 15580                           ;incstack = 0
 15581                           ;incstack = 0
 15582  00602A  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 15583  00602E  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 15584  006032  CFDE F036          	movff	postinc2,?i1___ftmul
 15585  006036  CFDE F037          	movff	postinc2,?i1___ftmul+1
 15586  00603A  CFDD F038          	movff	postdec2,?i1___ftmul+2
 15587  00603E  C062  F039         	movff	i1___asftmul@f2,?i1___ftmul+3
 15588  006042  C063  F03A         	movff	i1___asftmul@f2+1,?i1___ftmul+4
 15589  006046  C064  F03B         	movff	i1___asftmul@f2+2,?i1___ftmul+5
 15590  00604A  EC0C  F025         	call	i1___ftmul	;wreg free
 15591  00604E  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 15592  006052  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 15593  006056  C036  FFDE         	movff	?i1___ftmul,postinc2
 15594  00605A  C037  FFDE         	movff	?i1___ftmul+1,postinc2
 15595  00605E  C038  FFDD         	movff	?i1___ftmul+2,postdec2
 15596  006062  52DD               	movf	postdec2,f,c
 15597  006064  0012               	return	
 15598  006066                     __end_ofi1___asftmul:
 15599                           	opt stack 0
 15600                           pclatu	equ	0xFFB
 15601                           pclath	equ	0xFFA
 15602                           tblptru	equ	0xFF8
 15603                           tblptrh	equ	0xFF7
 15604                           tblptrl	equ	0xFF6
 15605                           tablat	equ	0xFF5
 15606                           prodh	equ	0xFF4
 15607                           prodl	equ	0xFF3
 15608                           intcon	equ	0xFF2
 15609                           intcon2	equ	0xFF1
 15610                           postinc0	equ	0xFEE
 15611                           fsr0h	equ	0xFEA
 15612                           fsr0l	equ	0xFE9
 15613                           wreg	equ	0xFE8
 15614                           fsr1h	equ	0xFE2
 15615                           fsr1l	equ	0xFE1
 15616                           bsr	equ	0xFE0
 15617                           indf2	equ	0xFDF
 15618                           postinc2	equ	0xFDE
 15619                           postdec2	equ	0xFDD
 15620                           fsr2h	equ	0xFDA
 15621                           fsr2l	equ	0xFD9
 15622                           status	equ	0xFD8
 15623                           
 15624 ;; *************** function i1___asftadd *****************
 15625 ;; Defined at:
 15626 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
 15627 ;; Parameters:    Size  Location     Type
 15628 ;;  __asftadd       2   12[BANK0 ] PTR float 
 15629 ;;		 -> sprintf@fval(3), 
 15630 ;;  __asftadd       3   14[BANK0 ] float 
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;		None
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  3   12[BANK0 ] float 
 15635 ;; Registers used:
 15636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15642 ;;      Params:         0       5       0       0       0       0       0       0       0
 15643 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15645 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15646 ;;Total ram usage:        5 bytes
 15647 ;; Hardware stack levels used:    1
 15648 ;; Hardware stack levels required when called:    5
 15649 ;; This function calls:
 15650 ;;		i1___ftadd
 15651 ;; This function is called by:
 15652 ;;		i1_sprintf
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text56
 15657  006066                     __ptext56:
 15658                           	opt stack 0
 15659  006066                     i1___asftadd:
 15660                           	opt stack 18
 15661                           
 15662                           ;	Return value of i1___asftadd is never used
 15663                           
 15664                           ;incstack = 0
 15665                           ;incstack = 0
 15666  006066  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 15667  00606A  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 15668  00606E  CFDE F019          	movff	postinc2,?i1___ftadd
 15669  006072  CFDE F01A          	movff	postinc2,?i1___ftadd+1
 15670  006076  CFDD F01B          	movff	postdec2,?i1___ftadd+2
 15671  00607A  C06E  F01C         	movff	i1___asftadd@f2,?i1___ftadd+3
 15672  00607E  C06F  F01D         	movff	i1___asftadd@f2+1,?i1___ftadd+4
 15673  006082  C070  F01E         	movff	i1___asftadd@f2+2,?i1___ftadd+5
 15674  006086  ECC2  F01E         	call	i1___ftadd	;wreg free
 15675  00608A  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 15676  00608E  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 15677  006092  C019  FFDE         	movff	?i1___ftadd,postinc2
 15678  006096  C01A  FFDE         	movff	?i1___ftadd+1,postinc2
 15679  00609A  C01B  FFDD         	movff	?i1___ftadd+2,postdec2
 15680  00609E  52DD               	movf	postdec2,f,c
 15681  0060A0  0012               	return	
 15682  0060A2                     __end_ofi1___asftadd:
 15683                           	opt stack 0
 15684                           pclatu	equ	0xFFB
 15685                           pclath	equ	0xFFA
 15686                           tblptru	equ	0xFF8
 15687                           tblptrh	equ	0xFF7
 15688                           tblptrl	equ	0xFF6
 15689                           tablat	equ	0xFF5
 15690                           prodh	equ	0xFF4
 15691                           prodl	equ	0xFF3
 15692                           intcon	equ	0xFF2
 15693                           intcon2	equ	0xFF1
 15694                           postinc0	equ	0xFEE
 15695                           fsr0h	equ	0xFEA
 15696                           fsr0l	equ	0xFE9
 15697                           wreg	equ	0xFE8
 15698                           fsr1h	equ	0xFE2
 15699                           fsr1l	equ	0xFE1
 15700                           bsr	equ	0xFE0
 15701                           indf2	equ	0xFDF
 15702                           postinc2	equ	0xFDE
 15703                           postdec2	equ	0xFDD
 15704                           fsr2h	equ	0xFDA
 15705                           fsr2l	equ	0xFD9
 15706                           status	equ	0xFD8
 15707                           
 15708 ;; *************** function i1___ftadd *****************
 15709 ;; Defined at:
 15710 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;  __ftadd         3   24[COMRAM] float 
 15713 ;;  __ftadd         3   27[COMRAM] float 
 15714 ;; Auto vars:     Size  Location     Type
 15715 ;;  __ftadd         1   37[COMRAM] unsigned char 
 15716 ;;  __ftadd         1   36[COMRAM] unsigned char 
 15717 ;;  __ftadd         1   35[COMRAM] unsigned char 
 15718 ;; Return value:  Size  Location     Type
 15719 ;;                  3   24[COMRAM] float 
 15720 ;; Registers used:
 15721 ;;		wreg, status,2, status,0, cstack
 15722 ;; Tracked objects:
 15723 ;;		On entry : 0/0
 15724 ;;		On exit  : 0/0
 15725 ;;		Unchanged: 0/0
 15726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15727 ;;      Params:         6       0       0       0       0       0       0       0       0
 15728 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15729 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15730 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15731 ;;Total ram usage:       14 bytes
 15732 ;; Hardware stack levels used:    1
 15733 ;; Hardware stack levels required when called:    4
 15734 ;; This function calls:
 15735 ;;		i1___ftpack
 15736 ;; This function is called by:
 15737 ;;		i1___asftadd
 15738 ;;		i1___ftsub
 15739 ;; This function uses a non-reentrant model
 15740 ;;
 15741                           
 15742                           	psect	text57
 15743  003D84                     __ptext57:
 15744                           	opt stack 0
 15745  003D84                     i1___ftadd:
 15746                           	opt stack 17
 15747                           
 15748                           ;incstack = 0
 15749                           ;incstack = 0
 15750  003D84  0E0F               	movlw	15
 15751  003D86  6E1F               	movwf	??i1___ftadd& (0+255),c
 15752  003D88  C019  F020         	movff	i1___ftadd@f1,??i1___ftadd+1
 15753  003D8C  C01A  F021         	movff	i1___ftadd@f1+1,??i1___ftadd+2
 15754  003D90  C01B  F022         	movff	i1___ftadd@f1+2,??i1___ftadd+3
 15755  003D94  281F               	incf	??i1___ftadd,w,c
 15756  003D96  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 15757  003D98  D004               	goto	i1u808_20
 15758  003D9A                     i1u808_25:
 15759  003D9A  90D8               	bcf	status,0,c
 15760  003D9C  3222               	rrcf	??i1___ftadd+3,f,c
 15761  003D9E  3221               	rrcf	??i1___ftadd+2,f,c
 15762  003DA0  3220               	rrcf	??i1___ftadd+1,f,c
 15763  003DA2                     i1u808_20:
 15764  003DA2  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 15765  003DA4  D7FA               	goto	i1u808_25
 15766  003DA6  5020               	movf	??i1___ftadd+1,w,c
 15767  003DA8  6E26               	movwf	i1___ftadd@exp1,c
 15768  003DAA  0E0F               	movlw	15
 15769  003DAC  6E1F               	movwf	??i1___ftadd& (0+255),c
 15770  003DAE  C01C  F020         	movff	i1___ftadd@f2,??i1___ftadd+1
 15771  003DB2  C01D  F021         	movff	i1___ftadd@f2+1,??i1___ftadd+2
 15772  003DB6  C01E  F022         	movff	i1___ftadd@f2+2,??i1___ftadd+3
 15773  003DBA  281F               	incf	??i1___ftadd,w,c
 15774  003DBC  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 15775  003DBE  D004               	goto	i1u809_20
 15776  003DC0                     i1u809_25:
 15777  003DC0  90D8               	bcf	status,0,c
 15778  003DC2  3222               	rrcf	??i1___ftadd+3,f,c
 15779  003DC4  3221               	rrcf	??i1___ftadd+2,f,c
 15780  003DC6  3220               	rrcf	??i1___ftadd+1,f,c
 15781  003DC8                     i1u809_20:
 15782  003DC8  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 15783  003DCA  D7FA               	goto	i1u809_25
 15784  003DCC  5020               	movf	??i1___ftadd+1,w,c
 15785  003DCE  6E25               	movwf	i1___ftadd@exp2,c
 15786  003DD0  5026               	movf	i1___ftadd@exp1,w,c
 15787  003DD2  B4D8               	btfsc	status,2,c
 15788  003DD4  D00B               	goto	i1l710
 15789  003DD6  5025               	movf	i1___ftadd@exp2,w,c
 15790  003DD8  6026               	cpfslt	i1___ftadd@exp1,c
 15791  003DDA  D00F               	goto	i1l9277
 15792  003DDC  5026               	movf	i1___ftadd@exp1,w,c
 15793  003DDE  0800               	sublw	0
 15794  003DE0  2425               	addwf	i1___ftadd@exp2,w,c
 15795  003DE2  6E1F               	movwf	??i1___ftadd& (0+255),c
 15796  003DE4  0E19               	movlw	25
 15797  003DE6  5C1F               	subwf	??i1___ftadd,w,c
 15798  003DE8  A0D8               	btfss	status,0,c
 15799  003DEA  D007               	goto	i1l9277
 15800  003DEC                     i1l710:
 15801  003DEC  C01C  F019         	movff	i1___ftadd@f2,?i1___ftadd
 15802  003DF0  C01D  F01A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 15803  003DF4  C01E  F01B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 15804  003DF8  D0AA               	goto	i1l711
 15805  003DFA                     i1l9277:
 15806  003DFA  5025               	movf	i1___ftadd@exp2,w,c
 15807  003DFC  B4D8               	btfsc	status,2,c
 15808  003DFE  D00B               	goto	i1l714
 15809  003E00  5026               	movf	i1___ftadd@exp1,w,c
 15810  003E02  6025               	cpfslt	i1___ftadd@exp2,c
 15811  003E04  D00F               	goto	i1l9283
 15812  003E06  5025               	movf	i1___ftadd@exp2,w,c
 15813  003E08  0800               	sublw	0
 15814  003E0A  2426               	addwf	i1___ftadd@exp1,w,c
 15815  003E0C  6E1F               	movwf	??i1___ftadd& (0+255),c
 15816  003E0E  0E19               	movlw	25
 15817  003E10  5C1F               	subwf	??i1___ftadd,w,c
 15818  003E12  A0D8               	btfss	status,0,c
 15819  003E14  D007               	goto	i1l9283
 15820  003E16                     i1l714:
 15821  003E16  C019  F019         	movff	i1___ftadd@f1,?i1___ftadd
 15822  003E1A  C01A  F01A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 15823  003E1E  C01B  F01B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 15824  003E22  D095               	goto	i1l711
 15825  003E24                     i1l9283:
 15826  003E24  6E1F               	movwf	??i1___ftadd& (0+255),c
 15827  003E26  0E06               	movlw	6
 15828  003E28  6E24               	movwf	i1___ftadd@sign,c
 15829  003E2A  501F               	movf	??i1___ftadd& (0+255),w,c
 15830  003E2C  BE1B               	btfsc	i1___ftadd@f1+2,7,c
 15831  003E2E  8E24               	bsf	i1___ftadd@sign,7,c
 15832  003E30  BE1E               	btfsc	i1___ftadd@f2+2,7,c
 15833  003E32  8C24               	bsf	i1___ftadd@sign,6,c
 15834  003E34  8E1A               	bsf	i1___ftadd@f1+1,7,c
 15835  003E36  0EFF               	movlw	255
 15836  003E38  1619               	andwf	i1___ftadd@f1,f,c
 15837  003E3A  0EFF               	movlw	255
 15838  003E3C  161A               	andwf	i1___ftadd@f1+1,f,c
 15839  003E3E  0E00               	movlw	0
 15840  003E40  161B               	andwf	i1___ftadd@f1+2,f,c
 15841  003E42  8E1D               	bsf	i1___ftadd@f2+1,7,c
 15842  003E44  0EFF               	movlw	255
 15843  003E46  161C               	andwf	i1___ftadd@f2,f,c
 15844  003E48  0EFF               	movlw	255
 15845  003E4A  161D               	andwf	i1___ftadd@f2+1,f,c
 15846  003E4C  0E00               	movlw	0
 15847  003E4E  161E               	andwf	i1___ftadd@f2+2,f,c
 15848  003E50  5025               	movf	i1___ftadd@exp2,w,c
 15849  003E52  6026               	cpfslt	i1___ftadd@exp1,c
 15850  003E54  D018               	goto	i1l9309
 15851  003E56                     i1l9299:
 15852  003E56  90D8               	bcf	status,0,c
 15853  003E58  361C               	rlcf	i1___ftadd@f2,f,c
 15854  003E5A  361D               	rlcf	i1___ftadd@f2+1,f,c
 15855  003E5C  361E               	rlcf	i1___ftadd@f2+2,f,c
 15856  003E5E  0625               	decf	i1___ftadd@exp2,f,c
 15857  003E60  5025               	movf	i1___ftadd@exp2,w,c
 15858  003E62  1826               	xorwf	i1___ftadd@exp1,w,c
 15859  003E64  B4D8               	btfsc	status,2,c
 15860  003E66  D00B               	goto	i1l9307
 15861  003E68  0624               	decf	i1___ftadd@sign,f,c
 15862  003E6A  5024               	movf	i1___ftadd@sign& (0+255),w,c
 15863  003E6C  0B07               	andlw	7
 15864  003E6E  B4D8               	btfsc	status,2,c
 15865  003E70  D006               	goto	i1l9307
 15866  003E72  D7F1               	goto	i1l9299
 15867  003E74                     i1l9305:
 15868  003E74  90D8               	bcf	status,0,c
 15869  003E76  321B               	rrcf	i1___ftadd@f1+2,f,c
 15870  003E78  321A               	rrcf	i1___ftadd@f1+1,f,c
 15871  003E7A  3219               	rrcf	i1___ftadd@f1,f,c
 15872  003E7C  2A26               	incf	i1___ftadd@exp1,f,c
 15873  003E7E                     i1l9307:
 15874  003E7E  5025               	movf	i1___ftadd@exp2,w,c
 15875  003E80  6226               	cpfseq	i1___ftadd@exp1,c
 15876  003E82  D7F8               	goto	i1l9305
 15877  003E84  D01A               	goto	i1l725
 15878  003E86                     i1l9309:
 15879  003E86  5026               	movf	i1___ftadd@exp1,w,c
 15880  003E88  6025               	cpfslt	i1___ftadd@exp2,c
 15881  003E8A  D017               	goto	i1l725
 15882  003E8C                     i1l9311:
 15883  003E8C  90D8               	bcf	status,0,c
 15884  003E8E  3619               	rlcf	i1___ftadd@f1,f,c
 15885  003E90  361A               	rlcf	i1___ftadd@f1+1,f,c
 15886  003E92  361B               	rlcf	i1___ftadd@f1+2,f,c
 15887  003E94  0626               	decf	i1___ftadd@exp1,f,c
 15888  003E96  5025               	movf	i1___ftadd@exp2,w,c
 15889  003E98  1826               	xorwf	i1___ftadd@exp1,w,c
 15890  003E9A  B4D8               	btfsc	status,2,c
 15891  003E9C  D00B               	goto	i1l9319
 15892  003E9E  0624               	decf	i1___ftadd@sign,f,c
 15893  003EA0  5024               	movf	i1___ftadd@sign& (0+255),w,c
 15894  003EA2  0B07               	andlw	7
 15895  003EA4  B4D8               	btfsc	status,2,c
 15896  003EA6  D006               	goto	i1l9319
 15897  003EA8  D7F1               	goto	i1l9311
 15898  003EAA                     i1l9317:
 15899  003EAA  90D8               	bcf	status,0,c
 15900  003EAC  321E               	rrcf	i1___ftadd@f2+2,f,c
 15901  003EAE  321D               	rrcf	i1___ftadd@f2+1,f,c
 15902  003EB0  321C               	rrcf	i1___ftadd@f2,f,c
 15903  003EB2  2A25               	incf	i1___ftadd@exp2,f,c
 15904  003EB4                     i1l9319:
 15905  003EB4  5025               	movf	i1___ftadd@exp2,w,c
 15906  003EB6  6226               	cpfseq	i1___ftadd@exp1,c
 15907  003EB8  D7F8               	goto	i1l9317
 15908  003EBA                     i1l725:
 15909  003EBA  AE24               	btfss	i1___ftadd@sign,7,c
 15910  003EBC  D00C               	goto	i1l734
 15911  003EBE  0EFF               	movlw	255
 15912  003EC0  1A19               	xorwf	i1___ftadd@f1,f,c
 15913  003EC2  0EFF               	movlw	255
 15914  003EC4  1A1A               	xorwf	i1___ftadd@f1+1,f,c
 15915  003EC6  0EFF               	movlw	255
 15916  003EC8  1A1B               	xorwf	i1___ftadd@f1+2,f,c
 15917  003ECA  0E01               	movlw	1
 15918  003ECC  2619               	addwf	i1___ftadd@f1,f,c
 15919  003ECE  0E00               	movlw	0
 15920  003ED0  221A               	addwfc	i1___ftadd@f1+1,f,c
 15921  003ED2  0E00               	movlw	0
 15922  003ED4  221B               	addwfc	i1___ftadd@f1+2,f,c
 15923  003ED6                     i1l734:
 15924  003ED6  AC24               	btfss	i1___ftadd@sign,6,c
 15925  003ED8  D00C               	goto	i1l9325
 15926  003EDA  0EFF               	movlw	255
 15927  003EDC  1A1C               	xorwf	i1___ftadd@f2,f,c
 15928  003EDE  0EFF               	movlw	255
 15929  003EE0  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 15930  003EE2  0EFF               	movlw	255
 15931  003EE4  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 15932  003EE6  0E01               	movlw	1
 15933  003EE8  261C               	addwf	i1___ftadd@f2,f,c
 15934  003EEA  0E00               	movlw	0
 15935  003EEC  221D               	addwfc	i1___ftadd@f2+1,f,c
 15936  003EEE  0E00               	movlw	0
 15937  003EF0  221E               	addwfc	i1___ftadd@f2+2,f,c
 15938  003EF2                     i1l9325:
 15939  003EF2  6E1F               	movwf	??i1___ftadd& (0+255),c
 15940  003EF4  0E00               	movlw	0
 15941  003EF6  6E24               	movwf	i1___ftadd@sign,c
 15942  003EF8  501F               	movf	??i1___ftadd& (0+255),w,c
 15943  003EFA  5019               	movf	i1___ftadd@f1,w,c
 15944  003EFC  261C               	addwf	i1___ftadd@f2,f,c
 15945  003EFE  501A               	movf	i1___ftadd@f1+1,w,c
 15946  003F00  221D               	addwfc	i1___ftadd@f2+1,f,c
 15947  003F02  501B               	movf	i1___ftadd@f1+2,w,c
 15948  003F04  221E               	addwfc	i1___ftadd@f2+2,f,c
 15949  003F06  AE1E               	btfss	i1___ftadd@f2+2,7,c
 15950  003F08  D010               	goto	i1l9335
 15951  003F0A  0EFF               	movlw	255
 15952  003F0C  1A1C               	xorwf	i1___ftadd@f2,f,c
 15953  003F0E  0EFF               	movlw	255
 15954  003F10  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 15955  003F12  0EFF               	movlw	255
 15956  003F14  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 15957  003F16  0E01               	movlw	1
 15958  003F18  261C               	addwf	i1___ftadd@f2,f,c
 15959  003F1A  0E00               	movlw	0
 15960  003F1C  221D               	addwfc	i1___ftadd@f2+1,f,c
 15961  003F1E  0E00               	movlw	0
 15962  003F20  221E               	addwfc	i1___ftadd@f2+2,f,c
 15963  003F22  6E1F               	movwf	??i1___ftadd& (0+255),c
 15964  003F24  0E01               	movlw	1
 15965  003F26  6E24               	movwf	i1___ftadd@sign,c
 15966  003F28  501F               	movf	??i1___ftadd& (0+255),w,c
 15967  003F2A                     i1l9335:
 15968  003F2A  C01C  F011         	movff	i1___ftadd@f2,?i1___ftpack
 15969  003F2E  C01D  F012         	movff	i1___ftadd@f2+1,?i1___ftpack+1
 15970  003F32  C01E  F013         	movff	i1___ftadd@f2+2,?i1___ftpack+2
 15971  003F36  C026  F014         	movff	i1___ftadd@exp1,?i1___ftpack+3
 15972  003F3A  C024  F015         	movff	i1___ftadd@sign,?i1___ftpack+4
 15973  003F3E  ECC4  F029         	call	i1___ftpack	;wreg free
 15974  003F42  C013  F01B         	movff	?i1___ftpack+2,?i1___ftadd+2
 15975  003F46  C012  F01A         	movff	?i1___ftpack+1,?i1___ftadd+1
 15976  003F4A  C011  F019         	movff	?i1___ftpack,?i1___ftadd
 15977  003F4E                     i1l711:
 15978  003F4E  0012               	return	
 15979  003F50                     __end_ofi1___ftadd:
 15980                           	opt stack 0
 15981                           pclatu	equ	0xFFB
 15982                           pclath	equ	0xFFA
 15983                           tblptru	equ	0xFF8
 15984                           tblptrh	equ	0xFF7
 15985                           tblptrl	equ	0xFF6
 15986                           tablat	equ	0xFF5
 15987                           prodh	equ	0xFF4
 15988                           prodl	equ	0xFF3
 15989                           intcon	equ	0xFF2
 15990                           intcon2	equ	0xFF1
 15991                           postinc0	equ	0xFEE
 15992                           fsr0h	equ	0xFEA
 15993                           fsr0l	equ	0xFE9
 15994                           wreg	equ	0xFE8
 15995                           fsr1h	equ	0xFE2
 15996                           fsr1l	equ	0xFE1
 15997                           bsr	equ	0xFE0
 15998                           indf2	equ	0xFDF
 15999                           postinc2	equ	0xFDE
 16000                           postdec2	equ	0xFDD
 16001                           fsr2h	equ	0xFDA
 16002                           fsr2l	equ	0xFD9
 16003                           status	equ	0xFD8
 16004                           
 16005 ;; *************** function i1_scale *****************
 16006 ;; Defined at:
 16007 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 16008 ;; Parameters:    Size  Location     Type
 16009 ;;  scale           1   70[COMRAM] char 
 16010 ;; Auto vars:     Size  Location     Type
 16011 ;;  scale           3    0        float 
 16012 ;;  scale           3    0        float 
 16013 ;; Return value:  Size  Location     Type
 16014 ;;                  3   70[COMRAM] float 
 16015 ;; Registers used:
 16016 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16017 ;; Tracked objects:
 16018 ;;		On entry : 0/0
 16019 ;;		On exit  : 0/0
 16020 ;;		Unchanged: 0/0
 16021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16022 ;;      Params:         3       0       0       0       0       0       0       0       0
 16023 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16024 ;;      Temps:          0       6       0       0       0       0       0       0       0
 16025 ;;      Totals:         3       9       0       0       0       0       0       0       0
 16026 ;;Total ram usage:       12 bytes
 16027 ;; Hardware stack levels used:    1
 16028 ;; Hardware stack levels required when called:    5
 16029 ;; This function calls:
 16030 ;;		i1___awdiv
 16031 ;;		i1___awmod
 16032 ;;		i1___ftmul
 16033 ;;		i1___wmul
 16034 ;; This function is called by:
 16035 ;;		i1_sprintf
 16036 ;; This function uses a non-reentrant model
 16037 ;;
 16038                           
 16039                           	psect	text58
 16040  002A28                     __ptext58:
 16041                           	opt stack 0
 16042  002A28                     i1_scale:
 16043                           	opt stack 18
 16044                           
 16045                           ;doprnt.c: 428: if(scl < 0) {
 16046                           
 16047                           ;incstack = 0
 16048                           ;incstack = 0
 16049  002A28  AE47               	btfss	i1scale@scl,7,c
 16050  002A2A  D108               	goto	i1l11153
 16051                           
 16052                           ;doprnt.c: 429: scl = -scl;
 16053  002A2C  6C47               	negf	i1scale@scl,c
 16054                           
 16055                           ;doprnt.c: 430: if(scl>=110)
 16056  002A2E  5047               	movf	i1scale@scl,w,c
 16057  002A30  0A80               	xorlw	128
 16058  002A32  0F12               	addlw	-238
 16059  002A34  A0D8               	btfss	status,0,c
 16060  002A36  D09D               	goto	i1l11143
 16061                           
 16062                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16063  002A38  0E00               	movlw	0
 16064  002A3A  6E24               	movwf	?i1___wmul+3,c
 16065  002A3C  0E03               	movlw	3
 16066  002A3E  6E23               	movwf	?i1___wmul+2,c
 16067  002A40  0E00               	movlw	0
 16068  002A42  6E1B               	movwf	?i1___awdiv+3,c
 16069  002A44  0E0A               	movlw	10
 16070  002A46  6E1A               	movwf	?i1___awdiv+2,c
 16071  002A48  0E00               	movlw	0
 16072  002A4A  6E14               	movwf	?i1___awmod+3,c
 16073  002A4C  0E64               	movlw	100
 16074  002A4E  6E13               	movwf	?i1___awmod+2,c
 16075  002A50  5047               	movf	i1scale@scl,w,c
 16076  002A52  6E11               	movwf	?i1___awmod,c
 16077  002A54  6A12               	clrf	?i1___awmod+1,c
 16078  002A56  BE11               	btfsc	?i1___awmod,7,c
 16079  002A58  0612               	decf	?i1___awmod+1,f,c
 16080  002A5A  EC4F  F02D         	call	i1___awmod	;wreg free
 16081  002A5E  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16082  002A62  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16083  002A66  ECB8  F02B         	call	i1___awdiv	;wreg free
 16084  002A6A  0E09               	movlw	9
 16085  002A6C  2418               	addwf	?i1___awdiv,w,c
 16086  002A6E  6E21               	movwf	?i1___wmul,c
 16087  002A70  0E00               	movlw	0
 16088  002A72  2019               	addwfc	?i1___awdiv+1,w,c
 16089  002A74  6E22               	movwf	?i1___wmul+1,c
 16090  002A76  EC8B  F030         	call	i1___wmul	;wreg free
 16091  002A7A  0E28               	movlw	low __npowers_
 16092  002A7C  2421               	addwf	?i1___wmul,w,c
 16093  002A7E  6EF6               	movwf	tblptrl,c
 16094  002A80  0E08               	movlw	high __npowers_
 16095  002A82  2022               	addwfc	?i1___wmul+1,w,c
 16096  002A84  6EF7               	movwf	tblptrh,c
 16097  002A86  0009               	tblrd		*+
 16098  002A88  CFF5 F060          	movff	tablat,??i1_scale
 16099  002A8C  0009               	tblrd		*+
 16100  002A8E  CFF5 F061          	movff	tablat,??i1_scale+1
 16101  002A92  0009               	tblrd		*+
 16102  002A94  CFF5 F062          	movff	tablat,??i1_scale+2
 16103  002A98  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16104  002A9C  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16105  002AA0  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16106  002AA4  0E00               	movlw	0
 16107  002AA6  6E24               	movwf	?i1___wmul+3,c
 16108  002AA8  0E03               	movlw	3
 16109  002AAA  6E23               	movwf	?i1___wmul+2,c
 16110  002AAC  0E00               	movlw	0
 16111  002AAE  6E1B               	movwf	?i1___awdiv+3,c
 16112  002AB0  0E64               	movlw	100
 16113  002AB2  6E1A               	movwf	?i1___awdiv+2,c
 16114  002AB4  5047               	movf	i1scale@scl,w,c
 16115  002AB6  6E18               	movwf	?i1___awdiv,c
 16116  002AB8  6A19               	clrf	?i1___awdiv+1,c
 16117  002ABA  BE18               	btfsc	?i1___awdiv,7,c
 16118  002ABC  0619               	decf	?i1___awdiv+1,f,c
 16119  002ABE  ECB8  F02B         	call	i1___awdiv	;wreg free
 16120  002AC2  0E12               	movlw	18
 16121  002AC4  2418               	addwf	?i1___awdiv,w,c
 16122  002AC6  6E21               	movwf	?i1___wmul,c
 16123  002AC8  0E00               	movlw	0
 16124  002ACA  2019               	addwfc	?i1___awdiv+1,w,c
 16125  002ACC  6E22               	movwf	?i1___wmul+1,c
 16126  002ACE  EC8B  F030         	call	i1___wmul	;wreg free
 16127  002AD2  0E28               	movlw	low __npowers_
 16128  002AD4  2421               	addwf	?i1___wmul,w,c
 16129  002AD6  6EF6               	movwf	tblptrl,c
 16130  002AD8  0E08               	movlw	high __npowers_
 16131  002ADA  2022               	addwfc	?i1___wmul+1,w,c
 16132  002ADC  6EF7               	movwf	tblptrh,c
 16133  002ADE  0009               	tblrd		*+
 16134  002AE0  CFF5 F063          	movff	tablat,??i1_scale+3
 16135  002AE4  0009               	tblrd		*+
 16136  002AE6  CFF5 F064          	movff	tablat,??i1_scale+4
 16137  002AEA  0009               	tblrd		*+
 16138  002AEC  CFF5 F065          	movff	tablat,??i1_scale+5
 16139  002AF0  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 16140  002AF4  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 16141  002AF8  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 16142  002AFC  EC0C  F025         	call	i1___ftmul	;wreg free
 16143  002B00  C038  F068         	movff	?i1___ftmul+2,i1_scale$1828+2
 16144  002B04  C037  F067         	movff	?i1___ftmul+1,i1_scale$1828+1
 16145  002B08  C036  F066         	movff	?i1___ftmul,i1_scale$1828
 16146                           
 16147                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16148  002B0C  C066  F036         	movff	i1_scale$1828,?i1___ftmul
 16149  002B10  C067  F037         	movff	i1_scale$1828+1,?i1___ftmul+1
 16150  002B14  C068  F038         	movff	i1_scale$1828+2,?i1___ftmul+2
 16151  002B18  0E00               	movlw	0
 16152  002B1A  6E24               	movwf	?i1___wmul+3,c
 16153  002B1C  0E03               	movlw	3
 16154  002B1E  6E23               	movwf	?i1___wmul+2,c
 16155  002B20  0E00               	movlw	0
 16156  002B22  6E14               	movwf	?i1___awmod+3,c
 16157  002B24  0E0A               	movlw	10
 16158  002B26  6E13               	movwf	?i1___awmod+2,c
 16159  002B28  5047               	movf	i1scale@scl,w,c
 16160  002B2A  6E11               	movwf	?i1___awmod,c
 16161  002B2C  6A12               	clrf	?i1___awmod+1,c
 16162  002B2E  BE11               	btfsc	?i1___awmod,7,c
 16163  002B30  0612               	decf	?i1___awmod+1,f,c
 16164  002B32  EC4F  F02D         	call	i1___awmod	;wreg free
 16165  002B36  C011  F021         	movff	?i1___awmod,?i1___wmul
 16166  002B3A  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16167  002B3E  EC8B  F030         	call	i1___wmul	;wreg free
 16168  002B42  0E28               	movlw	low __npowers_
 16169  002B44  2421               	addwf	?i1___wmul,w,c
 16170  002B46  6EF6               	movwf	tblptrl,c
 16171  002B48  0E08               	movlw	high __npowers_
 16172  002B4A  2022               	addwfc	?i1___wmul+1,w,c
 16173  002B4C  6EF7               	movwf	tblptrh,c
 16174  002B4E  0009               	tblrd		*+
 16175  002B50  CFF5 F060          	movff	tablat,??i1_scale
 16176  002B54  0009               	tblrd		*+
 16177  002B56  CFF5 F061          	movff	tablat,??i1_scale+1
 16178  002B5A  0009               	tblrd		*+
 16179  002B5C  CFF5 F062          	movff	tablat,??i1_scale+2
 16180  002B60  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16181  002B64  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16182  002B68  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16183  002B6C  EC0C  F025         	call	i1___ftmul	;wreg free
 16184  002B70  D164               	goto	L24
 16185  002B72                     i1l11143:
 16186                           
 16187                           ;doprnt.c: 432: else if(scl > 10)
 16188  002B72  5047               	movf	i1scale@scl,w,c
 16189  002B74  0A80               	xorlw	128
 16190  002B76  0F75               	addlw	-139
 16191  002B78  A0D8               	btfss	status,0,c
 16192  002B7A  D059               	goto	i1l11149
 16193                           
 16194                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 16195  002B7C  0E00               	movlw	0
 16196  002B7E  6E24               	movwf	?i1___wmul+3,c
 16197  002B80  0E03               	movlw	3
 16198  002B82  6E23               	movwf	?i1___wmul+2,c
 16199  002B84  0E00               	movlw	0
 16200  002B86  6E1B               	movwf	?i1___awdiv+3,c
 16201  002B88  0E0A               	movlw	10
 16202  002B8A  6E1A               	movwf	?i1___awdiv+2,c
 16203  002B8C  5047               	movf	i1scale@scl,w,c
 16204  002B8E  6E18               	movwf	?i1___awdiv,c
 16205  002B90  6A19               	clrf	?i1___awdiv+1,c
 16206  002B92  BE18               	btfsc	?i1___awdiv,7,c
 16207  002B94  0619               	decf	?i1___awdiv+1,f,c
 16208  002B96  ECB8  F02B         	call	i1___awdiv	;wreg free
 16209  002B9A  0E09               	movlw	9
 16210  002B9C  2418               	addwf	?i1___awdiv,w,c
 16211  002B9E  6E21               	movwf	?i1___wmul,c
 16212  002BA0  0E00               	movlw	0
 16213  002BA2  2019               	addwfc	?i1___awdiv+1,w,c
 16214  002BA4  6E22               	movwf	?i1___wmul+1,c
 16215  002BA6  EC8B  F030         	call	i1___wmul	;wreg free
 16216  002BAA  0E28               	movlw	low __npowers_
 16217  002BAC  2421               	addwf	?i1___wmul,w,c
 16218  002BAE  6EF6               	movwf	tblptrl,c
 16219  002BB0  0E08               	movlw	high __npowers_
 16220  002BB2  2022               	addwfc	?i1___wmul+1,w,c
 16221  002BB4  6EF7               	movwf	tblptrh,c
 16222  002BB6  0009               	tblrd		*+
 16223  002BB8  CFF5 F060          	movff	tablat,??i1_scale
 16224  002BBC  0009               	tblrd		*+
 16225  002BBE  CFF5 F061          	movff	tablat,??i1_scale+1
 16226  002BC2  0009               	tblrd		*+
 16227  002BC4  CFF5 F062          	movff	tablat,??i1_scale+2
 16228  002BC8  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 16229  002BCC  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 16230  002BD0  C060  F036         	movff	??i1_scale,?i1___ftmul
 16231  002BD4  0E00               	movlw	0
 16232  002BD6  6E24               	movwf	?i1___wmul+3,c
 16233  002BD8  0E03               	movlw	3
 16234  002BDA  6E23               	movwf	?i1___wmul+2,c
 16235  002BDC  0E00               	movlw	0
 16236  002BDE  6E14               	movwf	?i1___awmod+3,c
 16237  002BE0  0E0A               	movlw	10
 16238  002BE2  6E13               	movwf	?i1___awmod+2,c
 16239  002BE4  5047               	movf	i1scale@scl,w,c
 16240  002BE6  6E11               	movwf	?i1___awmod,c
 16241  002BE8  6A12               	clrf	?i1___awmod+1,c
 16242  002BEA  BE11               	btfsc	?i1___awmod,7,c
 16243  002BEC  0612               	decf	?i1___awmod+1,f,c
 16244  002BEE  EC4F  F02D         	call	i1___awmod	;wreg free
 16245  002BF2  C011  F021         	movff	?i1___awmod,?i1___wmul
 16246  002BF6  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16247  002BFA  EC8B  F030         	call	i1___wmul	;wreg free
 16248  002BFE  0E28               	movlw	low __npowers_
 16249  002C00  2421               	addwf	?i1___wmul,w,c
 16250  002C02  6EF6               	movwf	tblptrl,c
 16251  002C04  0E08               	movlw	high __npowers_
 16252  002C06  2022               	addwfc	?i1___wmul+1,w,c
 16253  002C08  6EF7               	movwf	tblptrh,c
 16254  002C0A  0009               	tblrd		*+
 16255  002C0C  CFF5 F063          	movff	tablat,??i1_scale+3
 16256  002C10  0009               	tblrd		*+
 16257  002C12  CFF5 F064          	movff	tablat,??i1_scale+4
 16258  002C16  0009               	tblrd		*+
 16259  002C18  CFF5 F065          	movff	tablat,??i1_scale+5
 16260  002C1C  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 16261  002C20  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 16262  002C24  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 16263  002C28  EC0C  F025         	call	i1___ftmul	;wreg free
 16264  002C2C  D106               	goto	L24
 16265  002C2E                     i1l11149:
 16266                           
 16267                           ;doprnt.c: 434: return _npowers_[scl];
 16268  002C2E  5047               	movf	i1scale@scl,w,c
 16269  002C30  0D03               	mullw	3
 16270  002C32  0E28               	movlw	low __npowers_
 16271  002C34  24F3               	addwf	prodl,w,c
 16272  002C36  6EF6               	movwf	tblptrl,c
 16273  002C38  0E08               	movlw	high __npowers_
 16274  002C3A  D10C               	goto	L23
 16275  002C3C                     i1l11153:
 16276                           
 16277                           ;doprnt.c: 435: }
 16278                           ;doprnt.c: 436: if(scl>=110)
 16279  002C3C  5047               	movf	i1scale@scl,w,c
 16280  002C3E  0A80               	xorlw	128
 16281  002C40  0F12               	addlw	-238
 16282  002C42  A0D8               	btfss	status,0,c
 16283  002C44  D09D               	goto	i1l11161
 16284                           
 16285                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16286  002C46  0E00               	movlw	0
 16287  002C48  6E24               	movwf	?i1___wmul+3,c
 16288  002C4A  0E03               	movlw	3
 16289  002C4C  6E23               	movwf	?i1___wmul+2,c
 16290  002C4E  0E00               	movlw	0
 16291  002C50  6E1B               	movwf	?i1___awdiv+3,c
 16292  002C52  0E0A               	movlw	10
 16293  002C54  6E1A               	movwf	?i1___awdiv+2,c
 16294  002C56  0E00               	movlw	0
 16295  002C58  6E14               	movwf	?i1___awmod+3,c
 16296  002C5A  0E64               	movlw	100
 16297  002C5C  6E13               	movwf	?i1___awmod+2,c
 16298  002C5E  5047               	movf	i1scale@scl,w,c
 16299  002C60  6E11               	movwf	?i1___awmod,c
 16300  002C62  6A12               	clrf	?i1___awmod+1,c
 16301  002C64  BE11               	btfsc	?i1___awmod,7,c
 16302  002C66  0612               	decf	?i1___awmod+1,f,c
 16303  002C68  EC4F  F02D         	call	i1___awmod	;wreg free
 16304  002C6C  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16305  002C70  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16306  002C74  ECB8  F02B         	call	i1___awdiv	;wreg free
 16307  002C78  0E09               	movlw	9
 16308  002C7A  2418               	addwf	?i1___awdiv,w,c
 16309  002C7C  6E21               	movwf	?i1___wmul,c
 16310  002C7E  0E00               	movlw	0
 16311  002C80  2019               	addwfc	?i1___awdiv+1,w,c
 16312  002C82  6E22               	movwf	?i1___wmul+1,c
 16313  002C84  EC8B  F030         	call	i1___wmul	;wreg free
 16314  002C88  0E4F               	movlw	low __powers_
 16315  002C8A  2421               	addwf	?i1___wmul,w,c
 16316  002C8C  6EF6               	movwf	tblptrl,c
 16317  002C8E  0E08               	movlw	high __powers_
 16318  002C90  2022               	addwfc	?i1___wmul+1,w,c
 16319  002C92  6EF7               	movwf	tblptrh,c
 16320  002C94  0009               	tblrd		*+
 16321  002C96  CFF5 F060          	movff	tablat,??i1_scale
 16322  002C9A  0009               	tblrd		*+
 16323  002C9C  CFF5 F061          	movff	tablat,??i1_scale+1
 16324  002CA0  0009               	tblrd		*+
 16325  002CA2  CFF5 F062          	movff	tablat,??i1_scale+2
 16326  002CA6  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16327  002CAA  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16328  002CAE  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16329  002CB2  0E00               	movlw	0
 16330  002CB4  6E24               	movwf	?i1___wmul+3,c
 16331  002CB6  0E03               	movlw	3
 16332  002CB8  6E23               	movwf	?i1___wmul+2,c
 16333  002CBA  0E00               	movlw	0
 16334  002CBC  6E1B               	movwf	?i1___awdiv+3,c
 16335  002CBE  0E64               	movlw	100
 16336  002CC0  6E1A               	movwf	?i1___awdiv+2,c
 16337  002CC2  5047               	movf	i1scale@scl,w,c
 16338  002CC4  6E18               	movwf	?i1___awdiv,c
 16339  002CC6  6A19               	clrf	?i1___awdiv+1,c
 16340  002CC8  BE18               	btfsc	?i1___awdiv,7,c
 16341  002CCA  0619               	decf	?i1___awdiv+1,f,c
 16342  002CCC  ECB8  F02B         	call	i1___awdiv	;wreg free
 16343  002CD0  0E12               	movlw	18
 16344  002CD2  2418               	addwf	?i1___awdiv,w,c
 16345  002CD4  6E21               	movwf	?i1___wmul,c
 16346  002CD6  0E00               	movlw	0
 16347  002CD8  2019               	addwfc	?i1___awdiv+1,w,c
 16348  002CDA  6E22               	movwf	?i1___wmul+1,c
 16349  002CDC  EC8B  F030         	call	i1___wmul	;wreg free
 16350  002CE0  0E4F               	movlw	low __powers_
 16351  002CE2  2421               	addwf	?i1___wmul,w,c
 16352  002CE4  6EF6               	movwf	tblptrl,c
 16353  002CE6  0E08               	movlw	high __powers_
 16354  002CE8  2022               	addwfc	?i1___wmul+1,w,c
 16355  002CEA  6EF7               	movwf	tblptrh,c
 16356  002CEC  0009               	tblrd		*+
 16357  002CEE  CFF5 F063          	movff	tablat,??i1_scale+3
 16358  002CF2  0009               	tblrd		*+
 16359  002CF4  CFF5 F064          	movff	tablat,??i1_scale+4
 16360  002CF8  0009               	tblrd		*+
 16361  002CFA  CFF5 F065          	movff	tablat,??i1_scale+5
 16362  002CFE  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 16363  002D02  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 16364  002D06  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 16365  002D0A  EC0C  F025         	call	i1___ftmul	;wreg free
 16366  002D0E  C038  F068         	movff	?i1___ftmul+2,i1_scale$1828+2
 16367  002D12  C037  F067         	movff	?i1___ftmul+1,i1_scale$1828+1
 16368  002D16  C036  F066         	movff	?i1___ftmul,i1_scale$1828
 16369                           
 16370                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16371  002D1A  C066  F036         	movff	i1_scale$1828,?i1___ftmul
 16372  002D1E  C067  F037         	movff	i1_scale$1828+1,?i1___ftmul+1
 16373  002D22  C068  F038         	movff	i1_scale$1828+2,?i1___ftmul+2
 16374  002D26  0E00               	movlw	0
 16375  002D28  6E24               	movwf	?i1___wmul+3,c
 16376  002D2A  0E03               	movlw	3
 16377  002D2C  6E23               	movwf	?i1___wmul+2,c
 16378  002D2E  0E00               	movlw	0
 16379  002D30  6E14               	movwf	?i1___awmod+3,c
 16380  002D32  0E0A               	movlw	10
 16381  002D34  6E13               	movwf	?i1___awmod+2,c
 16382  002D36  5047               	movf	i1scale@scl,w,c
 16383  002D38  6E11               	movwf	?i1___awmod,c
 16384  002D3A  6A12               	clrf	?i1___awmod+1,c
 16385  002D3C  BE11               	btfsc	?i1___awmod,7,c
 16386  002D3E  0612               	decf	?i1___awmod+1,f,c
 16387  002D40  EC4F  F02D         	call	i1___awmod	;wreg free
 16388  002D44  C011  F021         	movff	?i1___awmod,?i1___wmul
 16389  002D48  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16390  002D4C  EC8B  F030         	call	i1___wmul	;wreg free
 16391  002D50  0E4F               	movlw	low __powers_
 16392  002D52  2421               	addwf	?i1___wmul,w,c
 16393  002D54  6EF6               	movwf	tblptrl,c
 16394  002D56  0E08               	movlw	high __powers_
 16395  002D58  2022               	addwfc	?i1___wmul+1,w,c
 16396  002D5A  6EF7               	movwf	tblptrh,c
 16397  002D5C  0009               	tblrd		*+
 16398  002D5E  CFF5 F060          	movff	tablat,??i1_scale
 16399  002D62  0009               	tblrd		*+
 16400  002D64  CFF5 F061          	movff	tablat,??i1_scale+1
 16401  002D68  0009               	tblrd		*+
 16402  002D6A  CFF5 F062          	movff	tablat,??i1_scale+2
 16403  002D6E  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16404  002D72  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16405  002D76  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16406  002D7A  EC0C  F025         	call	i1___ftmul	;wreg free
 16407  002D7E  D05D               	goto	L24
 16408  002D80                     i1l11161:
 16409                           
 16410                           ;doprnt.c: 438: else if(scl > 10)
 16411  002D80  5047               	movf	i1scale@scl,w,c
 16412  002D82  0A80               	xorlw	128
 16413  002D84  0F75               	addlw	-139
 16414  002D86  A0D8               	btfss	status,0,c
 16415  002D88  D05F               	goto	i1l11167
 16416                           
 16417                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 16418  002D8A  0E00               	movlw	0
 16419  002D8C  6E24               	movwf	?i1___wmul+3,c
 16420  002D8E  0E03               	movlw	3
 16421  002D90  6E23               	movwf	?i1___wmul+2,c
 16422  002D92  0E00               	movlw	0
 16423  002D94  6E1B               	movwf	?i1___awdiv+3,c
 16424  002D96  0E0A               	movlw	10
 16425  002D98  6E1A               	movwf	?i1___awdiv+2,c
 16426  002D9A  5047               	movf	i1scale@scl,w,c
 16427  002D9C  6E18               	movwf	?i1___awdiv,c
 16428  002D9E  6A19               	clrf	?i1___awdiv+1,c
 16429  002DA0  BE18               	btfsc	?i1___awdiv,7,c
 16430  002DA2  0619               	decf	?i1___awdiv+1,f,c
 16431  002DA4  ECB8  F02B         	call	i1___awdiv	;wreg free
 16432  002DA8  0E09               	movlw	9
 16433  002DAA  2418               	addwf	?i1___awdiv,w,c
 16434  002DAC  6E21               	movwf	?i1___wmul,c
 16435  002DAE  0E00               	movlw	0
 16436  002DB0  2019               	addwfc	?i1___awdiv+1,w,c
 16437  002DB2  6E22               	movwf	?i1___wmul+1,c
 16438  002DB4  EC8B  F030         	call	i1___wmul	;wreg free
 16439  002DB8  0E4F               	movlw	low __powers_
 16440  002DBA  2421               	addwf	?i1___wmul,w,c
 16441  002DBC  6EF6               	movwf	tblptrl,c
 16442  002DBE  0E08               	movlw	high __powers_
 16443  002DC0  2022               	addwfc	?i1___wmul+1,w,c
 16444  002DC2  6EF7               	movwf	tblptrh,c
 16445  002DC4  0009               	tblrd		*+
 16446  002DC6  CFF5 F060          	movff	tablat,??i1_scale
 16447  002DCA  0009               	tblrd		*+
 16448  002DCC  CFF5 F061          	movff	tablat,??i1_scale+1
 16449  002DD0  0009               	tblrd		*+
 16450  002DD2  CFF5 F062          	movff	tablat,??i1_scale+2
 16451  002DD6  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 16452  002DDA  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 16453  002DDE  C060  F036         	movff	??i1_scale,?i1___ftmul
 16454  002DE2  0E00               	movlw	0
 16455  002DE4  6E24               	movwf	?i1___wmul+3,c
 16456  002DE6  0E03               	movlw	3
 16457  002DE8  6E23               	movwf	?i1___wmul+2,c
 16458  002DEA  0E00               	movlw	0
 16459  002DEC  6E14               	movwf	?i1___awmod+3,c
 16460  002DEE  0E0A               	movlw	10
 16461  002DF0  6E13               	movwf	?i1___awmod+2,c
 16462  002DF2  5047               	movf	i1scale@scl,w,c
 16463  002DF4  6E11               	movwf	?i1___awmod,c
 16464  002DF6  6A12               	clrf	?i1___awmod+1,c
 16465  002DF8  BE11               	btfsc	?i1___awmod,7,c
 16466  002DFA  0612               	decf	?i1___awmod+1,f,c
 16467  002DFC  EC4F  F02D         	call	i1___awmod	;wreg free
 16468  002E00  C011  F021         	movff	?i1___awmod,?i1___wmul
 16469  002E04  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16470  002E08  EC8B  F030         	call	i1___wmul	;wreg free
 16471  002E0C  0E4F               	movlw	low __powers_
 16472  002E0E  2421               	addwf	?i1___wmul,w,c
 16473  002E10  6EF6               	movwf	tblptrl,c
 16474  002E12  0E08               	movlw	high __powers_
 16475  002E14  2022               	addwfc	?i1___wmul+1,w,c
 16476  002E16  6EF7               	movwf	tblptrh,c
 16477  002E18  0009               	tblrd		*+
 16478  002E1A  CFF5 F063          	movff	tablat,??i1_scale+3
 16479  002E1E  0009               	tblrd		*+
 16480  002E20  CFF5 F064          	movff	tablat,??i1_scale+4
 16481  002E24  0009               	tblrd		*+
 16482  002E26  CFF5 F065          	movff	tablat,??i1_scale+5
 16483  002E2A  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 16484  002E2E  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 16485  002E32  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 16486  002E36  EC0C  F025         	call	i1___ftmul	;wreg free
 16487  002E3A                     L24:
 16488  002E3A  C038  F049         	movff	?i1___ftmul+2,?i1_scale+2
 16489  002E3E  C037  F048         	movff	?i1___ftmul+1,?i1_scale+1
 16490  002E42  C036  F047         	movff	?i1___ftmul,?i1_scale
 16491  002E46  D017               	goto	i1l253
 16492  002E48                     i1l11167:
 16493                           
 16494                           ;doprnt.c: 440: return _powers_[scl];
 16495  002E48  5047               	movf	i1scale@scl,w,c
 16496  002E4A  0D03               	mullw	3
 16497  002E4C  0E4F               	movlw	low __powers_
 16498  002E4E  24F3               	addwf	prodl,w,c
 16499  002E50  6EF6               	movwf	tblptrl,c
 16500  002E52  0E08               	movlw	high __powers_
 16501  002E54                     L23:
 16502  002E54  20F4               	addwfc	prodh,w,c
 16503  002E56  6EF7               	movwf	tblptrh,c
 16504  002E58  0009               	tblrd		*+
 16505  002E5A  CFF5 F060          	movff	tablat,??i1_scale
 16506  002E5E  0009               	tblrd		*+
 16507  002E60  CFF5 F061          	movff	tablat,??i1_scale+1
 16508  002E64  0009               	tblrd		*+
 16509  002E66  CFF5 F062          	movff	tablat,??i1_scale+2
 16510  002E6A  C062  F049         	movff	??i1_scale+2,?i1_scale+2
 16511  002E6E  C061  F048         	movff	??i1_scale+1,?i1_scale+1
 16512  002E72  C060  F047         	movff	??i1_scale,?i1_scale
 16513  002E76                     i1l253:
 16514  002E76  0012               	return	
 16515  002E78                     __end_ofi1_scale:
 16516                           	opt stack 0
 16517                           pclatu	equ	0xFFB
 16518                           pclath	equ	0xFFA
 16519                           tblptru	equ	0xFF8
 16520                           tblptrh	equ	0xFF7
 16521                           tblptrl	equ	0xFF6
 16522                           tablat	equ	0xFF5
 16523                           prodh	equ	0xFF4
 16524                           prodl	equ	0xFF3
 16525                           intcon	equ	0xFF2
 16526                           intcon2	equ	0xFF1
 16527                           postinc0	equ	0xFEE
 16528                           fsr0h	equ	0xFEA
 16529                           fsr0l	equ	0xFE9
 16530                           wreg	equ	0xFE8
 16531                           fsr1h	equ	0xFE2
 16532                           fsr1l	equ	0xFE1
 16533                           bsr	equ	0xFE0
 16534                           indf2	equ	0xFDF
 16535                           postinc2	equ	0xFDE
 16536                           postdec2	equ	0xFDD
 16537                           fsr2h	equ	0xFDA
 16538                           fsr2l	equ	0xFD9
 16539                           status	equ	0xFD8
 16540                           
 16541 ;; *************** function i1___wmul *****************
 16542 ;; Defined at:
 16543 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
 16544 ;; Parameters:    Size  Location     Type
 16545 ;;  __wmul          2   32[COMRAM] unsigned int 
 16546 ;;  __wmul          2   34[COMRAM] unsigned int 
 16547 ;; Auto vars:     Size  Location     Type
 16548 ;;  __wmul          2   36[COMRAM] unsigned int 
 16549 ;; Return value:  Size  Location     Type
 16550 ;;                  2   32[COMRAM] unsigned int 
 16551 ;; Registers used:
 16552 ;;		wreg, status,2, status,0, prodl, prodh
 16553 ;; Tracked objects:
 16554 ;;		On entry : 0/0
 16555 ;;		On exit  : 0/0
 16556 ;;		Unchanged: 0/0
 16557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16558 ;;      Params:         4       0       0       0       0       0       0       0       0
 16559 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16560 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16561 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16562 ;;Total ram usage:        6 bytes
 16563 ;; Hardware stack levels used:    1
 16564 ;; Hardware stack levels required when called:    3
 16565 ;; This function calls:
 16566 ;;		Nothing
 16567 ;; This function is called by:
 16568 ;;		i1_fround
 16569 ;;		i1_scale
 16570 ;;		i1_sprintf
 16571 ;; This function uses a non-reentrant model
 16572 ;;
 16573                           
 16574                           	psect	text59
 16575  006116                     __ptext59:
 16576                           	opt stack 0
 16577  006116                     i1___wmul:
 16578                           	opt stack 20
 16579                           
 16580                           ;incstack = 0
 16581                           ;incstack = 0
 16582  006116  5021               	movf	i1___wmul@multiplier,w,c
 16583  006118  0223               	mulwf	i1___wmul@multiplicand,c
 16584  00611A  CFF3 F025          	movff	prodl,i1___wmul@product
 16585  00611E  CFF4 F026          	movff	prodh,i1___wmul@product+1
 16586  006122  5021               	movf	i1___wmul@multiplier,w,c
 16587  006124  0224               	mulwf	i1___wmul@multiplicand+1,c
 16588  006126  CFF3 FFF4          	movff	prodl,prodh
 16589  00612A  6AF3               	clrf	prodl,c
 16590  00612C  50F3               	movf	prodl,w,c
 16591  00612E  2625               	addwf	i1___wmul@product,f,c
 16592  006130  50F4               	movf	prodh,w,c
 16593  006132  2226               	addwfc	i1___wmul@product+1,f,c
 16594  006134  5022               	movf	i1___wmul@multiplier+1,w,c
 16595  006136  0223               	mulwf	i1___wmul@multiplicand,c
 16596  006138  CFF3 FFF4          	movff	prodl,prodh
 16597  00613C  6AF3               	clrf	prodl,c
 16598  00613E  50F3               	movf	prodl,w,c
 16599  006140  2625               	addwf	i1___wmul@product,f,c
 16600  006142  50F4               	movf	prodh,w,c
 16601  006144  2226               	addwfc	i1___wmul@product+1,f,c
 16602  006146  C025  F021         	movff	i1___wmul@product,?i1___wmul
 16603  00614A  C026  F022         	movff	i1___wmul@product+1,?i1___wmul+1
 16604  00614E  0012               	return	
 16605  006150                     __end_ofi1___wmul:
 16606                           	opt stack 0
 16607                           pclatu	equ	0xFFB
 16608                           pclath	equ	0xFFA
 16609                           tblptru	equ	0xFF8
 16610                           tblptrh	equ	0xFF7
 16611                           tblptrl	equ	0xFF6
 16612                           tablat	equ	0xFF5
 16613                           prodh	equ	0xFF4
 16614                           prodl	equ	0xFF3
 16615                           intcon	equ	0xFF2
 16616                           intcon2	equ	0xFF1
 16617                           postinc0	equ	0xFEE
 16618                           fsr0h	equ	0xFEA
 16619                           fsr0l	equ	0xFE9
 16620                           wreg	equ	0xFE8
 16621                           fsr1h	equ	0xFE2
 16622                           fsr1l	equ	0xFE1
 16623                           bsr	equ	0xFE0
 16624                           indf2	equ	0xFDF
 16625                           postinc2	equ	0xFDE
 16626                           postdec2	equ	0xFDD
 16627                           fsr2h	equ	0xFDA
 16628                           fsr2l	equ	0xFD9
 16629                           status	equ	0xFD8
 16630                           
 16631 ;; *************** function i1___awmod *****************
 16632 ;; Defined at:
 16633 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
 16634 ;; Parameters:    Size  Location     Type
 16635 ;;  __awmod         2   16[COMRAM] int 
 16636 ;;  __awmod         2   18[COMRAM] int 
 16637 ;; Auto vars:     Size  Location     Type
 16638 ;;  __awmod         1   22[COMRAM] unsigned char 
 16639 ;;  __awmod         1   21[COMRAM] unsigned char 
 16640 ;; Return value:  Size  Location     Type
 16641 ;;                  2   16[COMRAM] int 
 16642 ;; Registers used:
 16643 ;;		wreg, status,2, status,0
 16644 ;; Tracked objects:
 16645 ;;		On entry : 0/0
 16646 ;;		On exit  : 0/0
 16647 ;;		Unchanged: 0/0
 16648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16649 ;;      Params:         4       0       0       0       0       0       0       0       0
 16650 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16651 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16652 ;;      Totals:         7       0       0       0       0       0       0       0       0
 16653 ;;Total ram usage:        7 bytes
 16654 ;; Hardware stack levels used:    1
 16655 ;; Hardware stack levels required when called:    3
 16656 ;; This function calls:
 16657 ;;		Nothing
 16658 ;; This function is called by:
 16659 ;;		i1_fround
 16660 ;;		i1_scale
 16661 ;; This function uses a non-reentrant model
 16662 ;;
 16663                           
 16664                           	psect	text60
 16665  005A9E                     __ptext60:
 16666                           	opt stack 0
 16667  005A9E                     i1___awmod:
 16668                           	opt stack 19
 16669                           
 16670                           ;incstack = 0
 16671                           ;incstack = 0
 16672  005A9E  6E15               	movwf	??i1___awmod& (0+255),c
 16673  005AA0  0E00               	movlw	0
 16674  005AA2  6E17               	movwf	i1___awmod@sign,c
 16675  005AA4  5015               	movf	??i1___awmod& (0+255),w,c
 16676  005AA6  AE12               	btfss	i1___awmod@dividend+1,7,c
 16677  005AA8  D008               	goto	i1l9139
 16678  005AAA  6C11               	negf	i1___awmod@dividend,c
 16679  005AAC  1E12               	comf	i1___awmod@dividend+1,f,c
 16680  005AAE  B0D8               	btfsc	status,0,c
 16681  005AB0  2A12               	incf	i1___awmod@dividend+1,f,c
 16682  005AB2  6E15               	movwf	??i1___awmod& (0+255),c
 16683  005AB4  0E01               	movlw	1
 16684  005AB6  6E17               	movwf	i1___awmod@sign,c
 16685  005AB8  5015               	movf	??i1___awmod& (0+255),w,c
 16686  005ABA                     i1l9139:
 16687  005ABA  AE14               	btfss	i1___awmod@divisor+1,7,c
 16688  005ABC  D004               	goto	i1l9143
 16689  005ABE  6C13               	negf	i1___awmod@divisor,c
 16690  005AC0  1E14               	comf	i1___awmod@divisor+1,f,c
 16691  005AC2  B0D8               	btfsc	status,0,c
 16692  005AC4  2A14               	incf	i1___awmod@divisor+1,f,c
 16693  005AC6                     i1l9143:
 16694  005AC6  5014               	movf	i1___awmod@divisor+1,w,c
 16695  005AC8  1013               	iorwf	i1___awmod@divisor,w,c
 16696  005ACA  B4D8               	btfsc	status,2,c
 16697  005ACC  D01A               	goto	i1l9159
 16698  005ACE  6E15               	movwf	??i1___awmod& (0+255),c
 16699  005AD0  0E01               	movlw	1
 16700  005AD2  6E16               	movwf	i1___awmod@counter,c
 16701  005AD4  5015               	movf	??i1___awmod& (0+255),w,c
 16702  005AD6  D004               	goto	i1l9149
 16703  005AD8                     i1l9147:
 16704  005AD8  90D8               	bcf	status,0,c
 16705  005ADA  3613               	rlcf	i1___awmod@divisor,f,c
 16706  005ADC  3614               	rlcf	i1___awmod@divisor+1,f,c
 16707  005ADE  2A16               	incf	i1___awmod@counter,f,c
 16708  005AE0                     i1l9149:
 16709  005AE0  AE14               	btfss	i1___awmod@divisor+1,7,c
 16710  005AE2  D7FA               	goto	i1l9147
 16711  005AE4                     i1l9151:
 16712  005AE4  5013               	movf	i1___awmod@divisor,w,c
 16713  005AE6  5C11               	subwf	i1___awmod@dividend,w,c
 16714  005AE8  5014               	movf	i1___awmod@divisor+1,w,c
 16715  005AEA  5812               	subwfb	i1___awmod@dividend+1,w,c
 16716  005AEC  A0D8               	btfss	status,0,c
 16717  005AEE  D004               	goto	i1l9155
 16718  005AF0  5013               	movf	i1___awmod@divisor,w,c
 16719  005AF2  5E11               	subwf	i1___awmod@dividend,f,c
 16720  005AF4  5014               	movf	i1___awmod@divisor+1,w,c
 16721  005AF6  5A12               	subwfb	i1___awmod@dividend+1,f,c
 16722  005AF8                     i1l9155:
 16723  005AF8  90D8               	bcf	status,0,c
 16724  005AFA  3214               	rrcf	i1___awmod@divisor+1,f,c
 16725  005AFC  3213               	rrcf	i1___awmod@divisor,f,c
 16726  005AFE  2E16               	decfsz	i1___awmod@counter,f,c
 16727  005B00  D7F1               	goto	i1l9151
 16728  005B02                     i1l9159:
 16729  005B02  5017               	movf	i1___awmod@sign,w,c
 16730  005B04  B4D8               	btfsc	status,2,c
 16731  005B06  D004               	goto	i1l9163
 16732  005B08  6C11               	negf	i1___awmod@dividend,c
 16733  005B0A  1E12               	comf	i1___awmod@dividend+1,f,c
 16734  005B0C  B0D8               	btfsc	status,0,c
 16735  005B0E  2A12               	incf	i1___awmod@dividend+1,f,c
 16736  005B10                     i1l9163:
 16737  005B10  C011  F011         	movff	i1___awmod@dividend,?i1___awmod
 16738  005B14  C012  F012         	movff	i1___awmod@dividend+1,?i1___awmod+1
 16739  005B18  0012               	return	
 16740  005B1A                     __end_ofi1___awmod:
 16741                           	opt stack 0
 16742                           pclatu	equ	0xFFB
 16743                           pclath	equ	0xFFA
 16744                           tblptru	equ	0xFF8
 16745                           tblptrh	equ	0xFF7
 16746                           tblptrl	equ	0xFF6
 16747                           tablat	equ	0xFF5
 16748                           prodh	equ	0xFF4
 16749                           prodl	equ	0xFF3
 16750                           intcon	equ	0xFF2
 16751                           intcon2	equ	0xFF1
 16752                           postinc0	equ	0xFEE
 16753                           fsr0h	equ	0xFEA
 16754                           fsr0l	equ	0xFE9
 16755                           wreg	equ	0xFE8
 16756                           fsr1h	equ	0xFE2
 16757                           fsr1l	equ	0xFE1
 16758                           bsr	equ	0xFE0
 16759                           indf2	equ	0xFDF
 16760                           postinc2	equ	0xFDE
 16761                           postdec2	equ	0xFDD
 16762                           fsr2h	equ	0xFDA
 16763                           fsr2l	equ	0xFD9
 16764                           status	equ	0xFD8
 16765                           
 16766 ;; *************** function i1___awdiv *****************
 16767 ;; Defined at:
 16768 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
 16769 ;; Parameters:    Size  Location     Type
 16770 ;;  __awdiv         2   23[COMRAM] int 
 16771 ;;  __awdiv         2   25[COMRAM] int 
 16772 ;; Auto vars:     Size  Location     Type
 16773 ;;  __awdiv         2   30[COMRAM] int 
 16774 ;;  __awdiv         1   29[COMRAM] unsigned char 
 16775 ;;  __awdiv         1   28[COMRAM] unsigned char 
 16776 ;; Return value:  Size  Location     Type
 16777 ;;                  2   23[COMRAM] int 
 16778 ;; Registers used:
 16779 ;;		wreg, status,2, status,0
 16780 ;; Tracked objects:
 16781 ;;		On entry : 0/0
 16782 ;;		On exit  : 0/0
 16783 ;;		Unchanged: 0/0
 16784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16785 ;;      Params:         4       0       0       0       0       0       0       0       0
 16786 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16787 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16788 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16789 ;;Total ram usage:        9 bytes
 16790 ;; Hardware stack levels used:    1
 16791 ;; Hardware stack levels required when called:    3
 16792 ;; This function calls:
 16793 ;;		Nothing
 16794 ;; This function is called by:
 16795 ;;		i1_fround
 16796 ;;		i1_scale
 16797 ;;		i1_sprintf
 16798 ;; This function uses a non-reentrant model
 16799 ;;
 16800                           
 16801                           	psect	text61
 16802  005770                     __ptext61:
 16803                           	opt stack 0
 16804  005770                     i1___awdiv:
 16805                           	opt stack 20
 16806                           
 16807                           ;incstack = 0
 16808                           ;incstack = 0
 16809  005770  6E1C               	movwf	??i1___awdiv& (0+255),c
 16810  005772  0E00               	movlw	0
 16811  005774  6E1E               	movwf	i1___awdiv@sign,c
 16812  005776  501C               	movf	??i1___awdiv& (0+255),w,c
 16813  005778  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 16814  00577A  D008               	goto	i1l9095
 16815  00577C  6C1A               	negf	i1___awdiv@divisor,c
 16816  00577E  1E1B               	comf	i1___awdiv@divisor+1,f,c
 16817  005780  B0D8               	btfsc	status,0,c
 16818  005782  2A1B               	incf	i1___awdiv@divisor+1,f,c
 16819  005784  6E1C               	movwf	??i1___awdiv& (0+255),c
 16820  005786  0E01               	movlw	1
 16821  005788  6E1E               	movwf	i1___awdiv@sign,c
 16822  00578A  501C               	movf	??i1___awdiv& (0+255),w,c
 16823  00578C                     i1l9095:
 16824  00578C  AE19               	btfss	i1___awdiv@dividend+1,7,c
 16825  00578E  D006               	goto	i1l9101
 16826  005790  6C18               	negf	i1___awdiv@dividend,c
 16827  005792  1E19               	comf	i1___awdiv@dividend+1,f,c
 16828  005794  B0D8               	btfsc	status,0,c
 16829  005796  2A19               	incf	i1___awdiv@dividend+1,f,c
 16830  005798  0E01               	movlw	1
 16831  00579A  1A1E               	xorwf	i1___awdiv@sign,f,c
 16832  00579C                     i1l9101:
 16833  00579C  0E00               	movlw	0
 16834  00579E  6E20               	movwf	i1___awdiv@quotient+1,c
 16835  0057A0  0E00               	movlw	0
 16836  0057A2  6E1F               	movwf	i1___awdiv@quotient,c
 16837  0057A4  501B               	movf	i1___awdiv@divisor+1,w,c
 16838  0057A6  101A               	iorwf	i1___awdiv@divisor,w,c
 16839  0057A8  B4D8               	btfsc	status,2,c
 16840  0057AA  D01E               	goto	i1l9123
 16841  0057AC  6E1C               	movwf	??i1___awdiv& (0+255),c
 16842  0057AE  0E01               	movlw	1
 16843  0057B0  6E1D               	movwf	i1___awdiv@counter,c
 16844  0057B2  501C               	movf	??i1___awdiv& (0+255),w,c
 16845  0057B4  D004               	goto	i1l9109
 16846  0057B6                     i1l9107:
 16847  0057B6  90D8               	bcf	status,0,c
 16848  0057B8  361A               	rlcf	i1___awdiv@divisor,f,c
 16849  0057BA  361B               	rlcf	i1___awdiv@divisor+1,f,c
 16850  0057BC  2A1D               	incf	i1___awdiv@counter,f,c
 16851  0057BE                     i1l9109:
 16852  0057BE  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 16853  0057C0  D7FA               	goto	i1l9107
 16854  0057C2                     i1l9111:
 16855  0057C2  90D8               	bcf	status,0,c
 16856  0057C4  361F               	rlcf	i1___awdiv@quotient,f,c
 16857  0057C6  3620               	rlcf	i1___awdiv@quotient+1,f,c
 16858  0057C8  501A               	movf	i1___awdiv@divisor,w,c
 16859  0057CA  5C18               	subwf	i1___awdiv@dividend,w,c
 16860  0057CC  501B               	movf	i1___awdiv@divisor+1,w,c
 16861  0057CE  5819               	subwfb	i1___awdiv@dividend+1,w,c
 16862  0057D0  A0D8               	btfss	status,0,c
 16863  0057D2  D005               	goto	i1l9119
 16864  0057D4  501A               	movf	i1___awdiv@divisor,w,c
 16865  0057D6  5E18               	subwf	i1___awdiv@dividend,f,c
 16866  0057D8  501B               	movf	i1___awdiv@divisor+1,w,c
 16867  0057DA  5A19               	subwfb	i1___awdiv@dividend+1,f,c
 16868  0057DC  801F               	bsf	i1___awdiv@quotient,0,c
 16869  0057DE                     i1l9119:
 16870  0057DE  90D8               	bcf	status,0,c
 16871  0057E0  321B               	rrcf	i1___awdiv@divisor+1,f,c
 16872  0057E2  321A               	rrcf	i1___awdiv@divisor,f,c
 16873  0057E4  2E1D               	decfsz	i1___awdiv@counter,f,c
 16874  0057E6  D7ED               	goto	i1l9111
 16875  0057E8                     i1l9123:
 16876  0057E8  501E               	movf	i1___awdiv@sign,w,c
 16877  0057EA  B4D8               	btfsc	status,2,c
 16878  0057EC  D004               	goto	i1l9127
 16879  0057EE  6C1F               	negf	i1___awdiv@quotient,c
 16880  0057F0  1E20               	comf	i1___awdiv@quotient+1,f,c
 16881  0057F2  B0D8               	btfsc	status,0,c
 16882  0057F4  2A20               	incf	i1___awdiv@quotient+1,f,c
 16883  0057F6                     i1l9127:
 16884  0057F6  C01F  F018         	movff	i1___awdiv@quotient,?i1___awdiv
 16885  0057FA  C020  F019         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
 16886  0057FE  0012               	return	
 16887  005800                     __end_ofi1___awdiv:
 16888                           	opt stack 0
 16889                           pclatu	equ	0xFFB
 16890                           pclath	equ	0xFFA
 16891                           tblptru	equ	0xFF8
 16892                           tblptrh	equ	0xFF7
 16893                           tblptrl	equ	0xFF6
 16894                           tablat	equ	0xFF5
 16895                           prodh	equ	0xFF4
 16896                           prodl	equ	0xFF3
 16897                           intcon	equ	0xFF2
 16898                           intcon2	equ	0xFF1
 16899                           postinc0	equ	0xFEE
 16900                           fsr0h	equ	0xFEA
 16901                           fsr0l	equ	0xFE9
 16902                           wreg	equ	0xFE8
 16903                           fsr1h	equ	0xFE2
 16904                           fsr1l	equ	0xFE1
 16905                           bsr	equ	0xFE0
 16906                           indf2	equ	0xFDF
 16907                           postinc2	equ	0xFDE
 16908                           postdec2	equ	0xFDD
 16909                           fsr2h	equ	0xFDA
 16910                           fsr2l	equ	0xFD9
 16911                           status	equ	0xFD8
 16912                           
 16913 ;; *************** function i1_fround *****************
 16914 ;; Defined at:
 16915 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 16916 ;; Parameters:    Size  Location     Type
 16917 ;;  fround          1   70[COMRAM] unsigned char 
 16918 ;; Auto vars:     Size  Location     Type
 16919 ;;  fround          3    0        float 
 16920 ;;  fround          3    0        float 
 16921 ;;  fround          3    0        float 
 16922 ;; Return value:  Size  Location     Type
 16923 ;;                  3   70[COMRAM] float 
 16924 ;; Registers used:
 16925 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16926 ;; Tracked objects:
 16927 ;;		On entry : 0/0
 16928 ;;		On exit  : 0/0
 16929 ;;		Unchanged: 0/0
 16930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16931 ;;      Params:         3       0       0       0       0       0       0       0       0
 16932 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16933 ;;      Temps:          0       6       0       0       0       0       0       0       0
 16934 ;;      Totals:         3      12       0       0       0       0       0       0       0
 16935 ;;Total ram usage:       15 bytes
 16936 ;; Hardware stack levels used:    1
 16937 ;; Hardware stack levels required when called:    5
 16938 ;; This function calls:
 16939 ;;		i1___awdiv
 16940 ;;		i1___awmod
 16941 ;;		i1___ftmul
 16942 ;;		i1___wmul
 16943 ;; This function is called by:
 16944 ;;		i1_sprintf
 16945 ;; This function uses a non-reentrant model
 16946 ;;
 16947                           
 16948                           	psect	text62
 16949  003532                     __ptext62:
 16950                           	opt stack 0
 16951  003532                     i1_fround:
 16952                           	opt stack 18
 16953                           
 16954                           ;doprnt.c: 413: if(prec>=110)
 16955                           
 16956                           ;incstack = 0
 16957                           ;incstack = 0
 16958  003532  0E6D               	movlw	109
 16959  003534  6447               	cpfsgt	i1fround@prec,c
 16960  003536  D0AB               	goto	i1l11119
 16961                           
 16962                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16963  003538  0E00               	movlw	0
 16964  00353A  6E24               	movwf	?i1___wmul+3,c
 16965  00353C  0E03               	movlw	3
 16966  00353E  6E23               	movwf	?i1___wmul+2,c
 16967  003540  0E00               	movlw	0
 16968  003542  6E1B               	movwf	?i1___awdiv+3,c
 16969  003544  0E0A               	movlw	10
 16970  003546  6E1A               	movwf	?i1___awdiv+2,c
 16971  003548  0E00               	movlw	0
 16972  00354A  6E14               	movwf	?i1___awmod+3,c
 16973  00354C  0E64               	movlw	100
 16974  00354E  6E13               	movwf	?i1___awmod+2,c
 16975  003550  C047  F011         	movff	i1fround@prec,?i1___awmod
 16976  003554  6A12               	clrf	?i1___awmod+1,c
 16977  003556  EC4F  F02D         	call	i1___awmod	;wreg free
 16978  00355A  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16979  00355E  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16980  003562  ECB8  F02B         	call	i1___awdiv	;wreg free
 16981  003566  0E09               	movlw	9
 16982  003568  2418               	addwf	?i1___awdiv,w,c
 16983  00356A  6E21               	movwf	?i1___wmul,c
 16984  00356C  0E00               	movlw	0
 16985  00356E  2019               	addwfc	?i1___awdiv+1,w,c
 16986  003570  6E22               	movwf	?i1___wmul+1,c
 16987  003572  EC8B  F030         	call	i1___wmul	;wreg free
 16988  003576  0E28               	movlw	low __npowers_
 16989  003578  2421               	addwf	?i1___wmul,w,c
 16990  00357A  6EF6               	movwf	tblptrl,c
 16991  00357C  0E08               	movlw	high __npowers_
 16992  00357E  2022               	addwfc	?i1___wmul+1,w,c
 16993  003580  6EF7               	movwf	tblptrh,c
 16994  003582  0009               	tblrd		*+
 16995  003584  CFF5 F060          	movff	tablat,??i1_fround
 16996  003588  0009               	tblrd		*+
 16997  00358A  CFF5 F061          	movff	tablat,??i1_fround+1
 16998  00358E  0009               	tblrd		*+
 16999  003590  CFF5 F062          	movff	tablat,??i1_fround+2
 17000  003594  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17001  003598  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17002  00359C  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17003  0035A0  0E00               	movlw	0
 17004  0035A2  6E24               	movwf	?i1___wmul+3,c
 17005  0035A4  0E03               	movlw	3
 17006  0035A6  6E23               	movwf	?i1___wmul+2,c
 17007  0035A8  0E00               	movlw	0
 17008  0035AA  6E1B               	movwf	?i1___awdiv+3,c
 17009  0035AC  0E64               	movlw	100
 17010  0035AE  6E1A               	movwf	?i1___awdiv+2,c
 17011  0035B0  C047  F018         	movff	i1fround@prec,?i1___awdiv
 17012  0035B4  6A19               	clrf	?i1___awdiv+1,c
 17013  0035B6  ECB8  F02B         	call	i1___awdiv	;wreg free
 17014  0035BA  0E12               	movlw	18
 17015  0035BC  2418               	addwf	?i1___awdiv,w,c
 17016  0035BE  6E21               	movwf	?i1___wmul,c
 17017  0035C0  0E00               	movlw	0
 17018  0035C2  2019               	addwfc	?i1___awdiv+1,w,c
 17019  0035C4  6E22               	movwf	?i1___wmul+1,c
 17020  0035C6  EC8B  F030         	call	i1___wmul	;wreg free
 17021  0035CA  0E28               	movlw	low __npowers_
 17022  0035CC  2421               	addwf	?i1___wmul,w,c
 17023  0035CE  6EF6               	movwf	tblptrl,c
 17024  0035D0  0E08               	movlw	high __npowers_
 17025  0035D2  2022               	addwfc	?i1___wmul+1,w,c
 17026  0035D4  6EF7               	movwf	tblptrh,c
 17027  0035D6  0009               	tblrd		*+
 17028  0035D8  CFF5 F063          	movff	tablat,??i1_fround+3
 17029  0035DC  0009               	tblrd		*+
 17030  0035DE  CFF5 F064          	movff	tablat,??i1_fround+4
 17031  0035E2  0009               	tblrd		*+
 17032  0035E4  CFF5 F065          	movff	tablat,??i1_fround+5
 17033  0035E8  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 17034  0035EC  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 17035  0035F0  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 17036  0035F4  EC0C  F025         	call	i1___ftmul	;wreg free
 17037  0035F8  C038  F06B         	movff	?i1___ftmul+2,i1_fround$1826+2
 17038  0035FC  C037  F06A         	movff	?i1___ftmul+1,i1_fround$1826+1
 17039  003600  C036  F069         	movff	?i1___ftmul,i1_fround$1826
 17040                           
 17041                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17042  003604  0E00               	movlw	0
 17043  003606  6E24               	movwf	?i1___wmul+3,c
 17044  003608  0E03               	movlw	3
 17045  00360A  6E23               	movwf	?i1___wmul+2,c
 17046  00360C  0E00               	movlw	0
 17047  00360E  6E14               	movwf	?i1___awmod+3,c
 17048  003610  0E0A               	movlw	10
 17049  003612  6E13               	movwf	?i1___awmod+2,c
 17050  003614  C047  F011         	movff	i1fround@prec,?i1___awmod
 17051  003618  6A12               	clrf	?i1___awmod+1,c
 17052  00361A  EC4F  F02D         	call	i1___awmod	;wreg free
 17053  00361E  C011  F021         	movff	?i1___awmod,?i1___wmul
 17054  003622  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17055  003626  EC8B  F030         	call	i1___wmul	;wreg free
 17056  00362A  0E28               	movlw	low __npowers_
 17057  00362C  2421               	addwf	?i1___wmul,w,c
 17058  00362E  6EF6               	movwf	tblptrl,c
 17059  003630  0E08               	movlw	high __npowers_
 17060  003632  2022               	addwfc	?i1___wmul+1,w,c
 17061  003634  6EF7               	movwf	tblptrh,c
 17062  003636  0009               	tblrd		*+
 17063  003638  CFF5 F060          	movff	tablat,??i1_fround
 17064  00363C  0009               	tblrd		*+
 17065  00363E  CFF5 F061          	movff	tablat,??i1_fround+1
 17066  003642  0009               	tblrd		*+
 17067  003644  CFF5 F062          	movff	tablat,??i1_fround+2
 17068  003648  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17069  00364C  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17070  003650  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17071  003654  C069  F036         	movff	i1_fround$1826,?i1___ftmul
 17072  003658  C06A  F037         	movff	i1_fround$1826+1,?i1___ftmul+1
 17073  00365C  C06B  F038         	movff	i1_fround$1826+2,?i1___ftmul+2
 17074  003660  EC0C  F025         	call	i1___ftmul	;wreg free
 17075  003664  C038  F068         	movff	?i1___ftmul+2,i1_fround$1827+2
 17076  003668  C037  F067         	movff	?i1___ftmul+1,i1_fround$1827+1
 17077  00366C  C036  F066         	movff	?i1___ftmul,i1_fround$1827
 17078                           
 17079                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17080  003670  C066  F036         	movff	i1_fround$1827,?i1___ftmul
 17081  003674  C067  F037         	movff	i1_fround$1827+1,?i1___ftmul+1
 17082  003678  C068  F038         	movff	i1_fround$1827+2,?i1___ftmul+2
 17083  00367C  0E00               	movlw	0
 17084  00367E  6E39               	movwf	?i1___ftmul+3,c
 17085  003680  0E00               	movlw	0
 17086  003682  6E3A               	movwf	?i1___ftmul+4,c
 17087  003684  0E3F               	movlw	63
 17088  003686  6E3B               	movwf	?i1___ftmul+5,c
 17089  003688  EC0C  F025         	call	i1___ftmul	;wreg free
 17090  00368C  D08B               	goto	L26
 17091  00368E                     i1l11119:
 17092                           
 17093                           ;doprnt.c: 415: else if(prec > 10)
 17094  00368E  0E0A               	movlw	10
 17095  003690  6447               	cpfsgt	i1fround@prec,c
 17096  003692  D069               	goto	i1l11127
 17097                           
 17098                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17099  003694  0E00               	movlw	0
 17100  003696  6E24               	movwf	?i1___wmul+3,c
 17101  003698  0E03               	movlw	3
 17102  00369A  6E23               	movwf	?i1___wmul+2,c
 17103  00369C  0E00               	movlw	0
 17104  00369E  6E14               	movwf	?i1___awmod+3,c
 17105  0036A0  0E0A               	movlw	10
 17106  0036A2  6E13               	movwf	?i1___awmod+2,c
 17107  0036A4  C047  F011         	movff	i1fround@prec,?i1___awmod
 17108  0036A8  6A12               	clrf	?i1___awmod+1,c
 17109  0036AA  EC4F  F02D         	call	i1___awmod	;wreg free
 17110  0036AE  C011  F021         	movff	?i1___awmod,?i1___wmul
 17111  0036B2  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17112  0036B6  EC8B  F030         	call	i1___wmul	;wreg free
 17113  0036BA  0E28               	movlw	low __npowers_
 17114  0036BC  2421               	addwf	?i1___wmul,w,c
 17115  0036BE  6EF6               	movwf	tblptrl,c
 17116  0036C0  0E08               	movlw	high __npowers_
 17117  0036C2  2022               	addwfc	?i1___wmul+1,w,c
 17118  0036C4  6EF7               	movwf	tblptrh,c
 17119  0036C6  0009               	tblrd		*+
 17120  0036C8  CFF5 F060          	movff	tablat,??i1_fround
 17121  0036CC  0009               	tblrd		*+
 17122  0036CE  CFF5 F061          	movff	tablat,??i1_fround+1
 17123  0036D2  0009               	tblrd		*+
 17124  0036D4  CFF5 F062          	movff	tablat,??i1_fround+2
 17125  0036D8  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17126  0036DC  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17127  0036E0  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17128  0036E4  0E00               	movlw	0
 17129  0036E6  6E24               	movwf	?i1___wmul+3,c
 17130  0036E8  0E03               	movlw	3
 17131  0036EA  6E23               	movwf	?i1___wmul+2,c
 17132  0036EC  0E00               	movlw	0
 17133  0036EE  6E1B               	movwf	?i1___awdiv+3,c
 17134  0036F0  0E0A               	movlw	10
 17135  0036F2  6E1A               	movwf	?i1___awdiv+2,c
 17136  0036F4  C047  F018         	movff	i1fround@prec,?i1___awdiv
 17137  0036F8  6A19               	clrf	?i1___awdiv+1,c
 17138  0036FA  ECB8  F02B         	call	i1___awdiv	;wreg free
 17139  0036FE  0E09               	movlw	9
 17140  003700  2418               	addwf	?i1___awdiv,w,c
 17141  003702  6E21               	movwf	?i1___wmul,c
 17142  003704  0E00               	movlw	0
 17143  003706  2019               	addwfc	?i1___awdiv+1,w,c
 17144  003708  6E22               	movwf	?i1___wmul+1,c
 17145  00370A  EC8B  F030         	call	i1___wmul	;wreg free
 17146  00370E  0E28               	movlw	low __npowers_
 17147  003710  2421               	addwf	?i1___wmul,w,c
 17148  003712  6EF6               	movwf	tblptrl,c
 17149  003714  0E08               	movlw	high __npowers_
 17150  003716  2022               	addwfc	?i1___wmul+1,w,c
 17151  003718  6EF7               	movwf	tblptrh,c
 17152  00371A  0009               	tblrd		*+
 17153  00371C  CFF5 F063          	movff	tablat,??i1_fround+3
 17154  003720  0009               	tblrd		*+
 17155  003722  CFF5 F064          	movff	tablat,??i1_fround+4
 17156  003726  0009               	tblrd		*+
 17157  003728  CFF5 F065          	movff	tablat,??i1_fround+5
 17158  00372C  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 17159  003730  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 17160  003734  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 17161  003738  EC0C  F025         	call	i1___ftmul	;wreg free
 17162  00373C  C038  F06B         	movff	?i1___ftmul+2,i1_fround$1826+2
 17163  003740  C037  F06A         	movff	?i1___ftmul+1,i1_fround$1826+1
 17164  003744  C036  F069         	movff	?i1___ftmul,i1_fround$1826
 17165                           
 17166                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17167  003748  C069  F036         	movff	i1_fround$1826,?i1___ftmul
 17168  00374C  C06A  F037         	movff	i1_fround$1826+1,?i1___ftmul+1
 17169  003750  C06B  F038         	movff	i1_fround$1826+2,?i1___ftmul+2
 17170  003754  0E00               	movlw	0
 17171  003756  6E39               	movwf	?i1___ftmul+3,c
 17172  003758  0E00               	movlw	0
 17173  00375A  6E3A               	movwf	?i1___ftmul+4,c
 17174  00375C  0E3F               	movlw	63
 17175  00375E  6E3B               	movwf	?i1___ftmul+5,c
 17176  003760  EC0C  F025         	call	i1___ftmul	;wreg free
 17177  003764  D01F               	goto	L26
 17178  003766                     i1l11127:
 17179                           
 17180                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17181  003766  5047               	movf	i1fround@prec,w,c
 17182  003768  0D03               	mullw	3
 17183  00376A  0E28               	movlw	low __npowers_
 17184  00376C  24F3               	addwf	prodl,w,c
 17185  00376E  6EF6               	movwf	tblptrl,c
 17186  003770  0E08               	movlw	high __npowers_
 17187  003772  20F4               	addwfc	prodh,w,c
 17188  003774  6EF7               	movwf	tblptrh,c
 17189  003776  0009               	tblrd		*+
 17190  003778  CFF5 F060          	movff	tablat,??i1_fround
 17191  00377C  0009               	tblrd		*+
 17192  00377E  CFF5 F061          	movff	tablat,??i1_fround+1
 17193  003782  0009               	tblrd		*+
 17194  003784  CFF5 F062          	movff	tablat,??i1_fround+2
 17195  003788  C062  F038         	movff	??i1_fround+2,?i1___ftmul+2
 17196  00378C  C061  F037         	movff	??i1_fround+1,?i1___ftmul+1
 17197  003790  C060  F036         	movff	??i1_fround,?i1___ftmul
 17198  003794  0E00               	movlw	0
 17199  003796  6E39               	movwf	?i1___ftmul+3,c
 17200  003798  0E00               	movlw	0
 17201  00379A  6E3A               	movwf	?i1___ftmul+4,c
 17202  00379C  0E3F               	movlw	63
 17203  00379E  6E3B               	movwf	?i1___ftmul+5,c
 17204  0037A0  EC0C  F025         	call	i1___ftmul	;wreg free
 17205  0037A4                     L26:
 17206  0037A4  C038  F049         	movff	?i1___ftmul+2,?i1_fround+2
 17207  0037A8  C037  F048         	movff	?i1___ftmul+1,?i1_fround+1
 17208  0037AC  C036  F047         	movff	?i1___ftmul,?i1_fround
 17209  0037B0  0012               	return	
 17210  0037B2                     __end_ofi1_fround:
 17211                           	opt stack 0
 17212                           pclatu	equ	0xFFB
 17213                           pclath	equ	0xFFA
 17214                           tblptru	equ	0xFF8
 17215                           tblptrh	equ	0xFF7
 17216                           tblptrl	equ	0xFF6
 17217                           tablat	equ	0xFF5
 17218                           prodh	equ	0xFF4
 17219                           prodl	equ	0xFF3
 17220                           intcon	equ	0xFF2
 17221                           intcon2	equ	0xFF1
 17222                           postinc0	equ	0xFEE
 17223                           fsr0h	equ	0xFEA
 17224                           fsr0l	equ	0xFE9
 17225                           wreg	equ	0xFE8
 17226                           fsr1h	equ	0xFE2
 17227                           fsr1l	equ	0xFE1
 17228                           bsr	equ	0xFE0
 17229                           indf2	equ	0xFDF
 17230                           postinc2	equ	0xFDE
 17231                           postdec2	equ	0xFDD
 17232                           fsr2h	equ	0xFDA
 17233                           fsr2l	equ	0xFD9
 17234                           status	equ	0xFD8
 17235                           
 17236 ;; *************** function i1_Read_LDR *****************
 17237 ;; Defined at:
 17238 ;;		line 287 in file "main.c"
 17239 ;; Parameters:    Size  Location     Type
 17240 ;;		None
 17241 ;; Auto vars:     Size  Location     Type
 17242 ;;  Read_LDR        3   21[BANK0 ] float 
 17243 ;; Return value:  Size  Location     Type
 17244 ;;                  3   70[COMRAM] float 
 17245 ;; Registers used:
 17246 ;;		wreg, status,2, status,0, cstack
 17247 ;; Tracked objects:
 17248 ;;		On entry : 0/0
 17249 ;;		On exit  : 0/0
 17250 ;;		Unchanged: 0/0
 17251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17252 ;;      Params:         3       0       0       0       0       0       0       0       0
 17253 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17254 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17255 ;;      Totals:         3       7       0       0       0       0       0       0       0
 17256 ;;Total ram usage:       10 bytes
 17257 ;; Hardware stack levels used:    1
 17258 ;; Hardware stack levels required when called:    5
 17259 ;; This function calls:
 17260 ;;		i1___awtoft
 17261 ;;		i1___ftdiv
 17262 ;;		i1___ftmul
 17263 ;; This function is called by:
 17264 ;;		_interrupcaoLOW
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	text63
 17269  004F1C                     __ptext63:
 17270                           	opt stack 0
 17271  004F1C                     i1_Read_LDR:
 17272                           	opt stack 19
 17273                           
 17274                           ;main.c: 288: float analog_reading = 0;
 17275                           
 17276                           ;incstack = 0
 17277                           ;incstack = 0
 17278  004F1C  0E00               	movlw	0
 17279  004F1E  0100               	movlb	0	; () banked
 17280  004F20  0100               	movlb	0	; () banked
 17281  004F22  6F75               	movwf	i1Read_LDR@analog_reading& (0+255),b
 17282  004F24  0E00               	movlw	0
 17283  004F26  0100               	movlb	0	; () banked
 17284  004F28  0100               	movlb	0	; () banked
 17285  004F2A  6F76               	movwf	(i1Read_LDR@analog_reading+1)& (0+255),b
 17286  004F2C  0E00               	movlw	0
 17287  004F2E  0100               	movlb	0	; () banked
 17288  004F30  0100               	movlb	0	; () banked
 17289  004F32  6F77               	movwf	(i1Read_LDR@analog_reading+2)& (0+255),b
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;main.c: 289: ADCON0 |= ((1 << ADON) | (1 << GO));
 17293  004F34  0E00               	movlw	0
 17294  004F36  B2C2               	btfsc	4034,1,c	;volatile
 17295  004F38  0E01               	movlw	1
 17296  004F3A  0100               	movlb	0	; () banked
 17297  004F3C  6F71               	movwf	??i1_Read_LDR& (0+255),b
 17298  004F3E  0E01               	movlw	1
 17299  004F40  0100               	movlb	0	; () banked
 17300  004F42  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 17301  004F44  0100               	movlb	0	; () banked
 17302  004F46  2B71               	incf	??i1_Read_LDR& (0+255),f,b
 17303  004F48  D003               	goto	i1u1039_24
 17304  004F4A                     i1u1039_25:
 17305  004F4A  0100               	movlb	0	; () banked
 17306  004F4C  90D8               	bcf	status,0,c
 17307  004F4E  3772               	rlcf	(??i1_Read_LDR+1)& (0+255),f,b
 17308  004F50                     i1u1039_24:
 17309  004F50  0100               	movlb	0	; () banked
 17310  004F52  2F71               	decfsz	??i1_Read_LDR& (0+255),f,b
 17311  004F54  D7FA               	goto	i1u1039_25
 17312  004F56  0E00               	movlw	0
 17313  004F58  B0C2               	btfsc	4034,0,c	;volatile
 17314  004F5A  0E01               	movlw	1
 17315  004F5C  0100               	movlb	0	; () banked
 17316  004F5E  6F73               	movwf	(??i1_Read_LDR+2)& (0+255),b
 17317  004F60  0E01               	movlw	1
 17318  004F62  0100               	movlb	0	; () banked
 17319  004F64  6F74               	movwf	(??i1_Read_LDR+3)& (0+255),b
 17320  004F66  0100               	movlb	0	; () banked
 17321  004F68  2B73               	incf	(??i1_Read_LDR+2)& (0+255),f,b
 17322  004F6A  D003               	goto	i1u1040_24
 17323  004F6C                     i1u1040_25:
 17324  004F6C  0100               	movlb	0	; () banked
 17325  004F6E  90D8               	bcf	status,0,c
 17326  004F70  3774               	rlcf	(??i1_Read_LDR+3)& (0+255),f,b
 17327  004F72                     i1u1040_24:
 17328  004F72  0100               	movlb	0	; () banked
 17329  004F74  2F73               	decfsz	(??i1_Read_LDR+2)& (0+255),f,b
 17330  004F76  D7FA               	goto	i1u1040_25
 17331  004F78  0100               	movlb	0	; () banked
 17332  004F7A  5174               	movf	(??i1_Read_LDR+3)& (0+255),w,b
 17333  004F7C  0100               	movlb	0	; () banked
 17334  004F7E  1172               	iorwf	(??i1_Read_LDR+1)& (0+255),w,b
 17335  004F80  12C2               	iorwf	4034,f,c	;volatile
 17336  004F82                     i1l223:
 17337  004F82  B2C2               	btfsc	4034,1,c	;volatile
 17338  004F84  D7FE               	goto	i1l223
 17339                           
 17340                           ;main.c: 291: analog_reading = (ADRESH * 256) + (ADRESL);
 17341  004F86  50C4               	movf	4036,w,c	;volatile
 17342  004F88  0100               	movlb	0	; () banked
 17343  004F8A  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 17344  004F8C  6B71               	clrf	??i1_Read_LDR& (0+255),b
 17345  004F8E  50C3               	movf	4035,w,c	;volatile
 17346  004F90  0100               	movlb	0	; () banked
 17347  004F92  2571               	addwf	??i1_Read_LDR& (0+255),w,b
 17348  004F94  6E19               	movwf	?i1___awtoft,c
 17349  004F96  0E00               	movlw	0
 17350  004F98  0100               	movlb	0	; () banked
 17351  004F9A  2172               	addwfc	(??i1_Read_LDR+1)& (0+255),w,b
 17352  004F9C  6E1A               	movwf	?i1___awtoft+1,c
 17353  004F9E  EC32  F02F         	call	i1___awtoft	;wreg free
 17354  004FA2  C01B  F077         	movff	?i1___awtoft+2,i1Read_LDR@analog_reading+2
 17355  004FA6  C01A  F076         	movff	?i1___awtoft+1,i1Read_LDR@analog_reading+1
 17356  004FAA  C019  F075         	movff	?i1___awtoft,i1Read_LDR@analog_reading
 17357                           
 17358                           ;main.c: 292: analog_reading = analog_reading*5/1023;
 17359  004FAE  0E00               	movlw	0
 17360  004FB0  6E39               	movwf	?i1___ftmul+3,c
 17361  004FB2  0EA0               	movlw	160
 17362  004FB4  6E3A               	movwf	?i1___ftmul+4,c
 17363  004FB6  0E40               	movlw	64
 17364  004FB8  6E3B               	movwf	?i1___ftmul+5,c
 17365  004FBA  C075  F036         	movff	i1Read_LDR@analog_reading,?i1___ftmul
 17366  004FBE  C076  F037         	movff	i1Read_LDR@analog_reading+1,?i1___ftmul+1
 17367  004FC2  C077  F038         	movff	i1Read_LDR@analog_reading+2,?i1___ftmul+2
 17368  004FC6  EC0C  F025         	call	i1___ftmul	;wreg free
 17369  004FCA  C038  F062         	movff	?i1___ftmul+2,?i1___ftdiv+2
 17370  004FCE  C037  F061         	movff	?i1___ftmul+1,?i1___ftdiv+1
 17371  004FD2  C036  F060         	movff	?i1___ftmul,?i1___ftdiv
 17372  004FD6  0EC0               	movlw	192
 17373  004FD8  0100               	movlb	0	; () banked
 17374  004FDA  0100               	movlb	0	; () banked
 17375  004FDC  6F63               	movwf	(?i1___ftdiv+3)& (0+255),b
 17376  004FDE  0E7F               	movlw	127
 17377  004FE0  0100               	movlb	0	; () banked
 17378  004FE2  0100               	movlb	0	; () banked
 17379  004FE4  6F64               	movwf	(?i1___ftdiv+4)& (0+255),b
 17380  004FE6  0E44               	movlw	68
 17381  004FE8  0100               	movlb	0	; () banked
 17382  004FEA  0100               	movlb	0	; () banked
 17383  004FEC  6F65               	movwf	(?i1___ftdiv+5)& (0+255),b
 17384  004FEE  EC8C  F020         	call	i1___ftdiv	;wreg free
 17385  004FF2  C062  F077         	movff	?i1___ftdiv+2,i1Read_LDR@analog_reading+2
 17386  004FF6  C061  F076         	movff	?i1___ftdiv+1,i1Read_LDR@analog_reading+1
 17387  004FFA  C060  F075         	movff	?i1___ftdiv,i1Read_LDR@analog_reading
 17388                           
 17389                           ;main.c: 293: return analog_reading;
 17390  004FFE  C075  F047         	movff	i1Read_LDR@analog_reading,?i1_Read_LDR
 17391  005002  C076  F048         	movff	i1Read_LDR@analog_reading+1,?i1_Read_LDR+1
 17392  005006  C077  F049         	movff	i1Read_LDR@analog_reading+2,?i1_Read_LDR+2
 17393  00500A  0012               	return	
 17394  00500C                     __end_ofi1_Read_LDR:
 17395                           	opt stack 0
 17396                           pclatu	equ	0xFFB
 17397                           pclath	equ	0xFFA
 17398                           tblptru	equ	0xFF8
 17399                           tblptrh	equ	0xFF7
 17400                           tblptrl	equ	0xFF6
 17401                           tablat	equ	0xFF5
 17402                           prodh	equ	0xFF4
 17403                           prodl	equ	0xFF3
 17404                           intcon	equ	0xFF2
 17405                           intcon2	equ	0xFF1
 17406                           postinc0	equ	0xFEE
 17407                           fsr0h	equ	0xFEA
 17408                           fsr0l	equ	0xFE9
 17409                           wreg	equ	0xFE8
 17410                           fsr1h	equ	0xFE2
 17411                           fsr1l	equ	0xFE1
 17412                           bsr	equ	0xFE0
 17413                           indf2	equ	0xFDF
 17414                           postinc2	equ	0xFDE
 17415                           postdec2	equ	0xFDD
 17416                           fsr2h	equ	0xFDA
 17417                           fsr2l	equ	0xFD9
 17418                           status	equ	0xFD8
 17419                           
 17420 ;; *************** function i1___ftmul *****************
 17421 ;; Defined at:
 17422 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
 17423 ;; Parameters:    Size  Location     Type
 17424 ;;  __ftmul         3   53[COMRAM] float 
 17425 ;;  __ftmul         3   56[COMRAM] float 
 17426 ;; Auto vars:     Size  Location     Type
 17427 ;;  __ftmul         3   65[COMRAM] unsigned um
 17428 ;;  __ftmul         1   69[COMRAM] unsigned char 
 17429 ;;  __ftmul         1   68[COMRAM] unsigned char 
 17430 ;;  __ftmul         1   64[COMRAM] unsigned char 
 17431 ;; Return value:  Size  Location     Type
 17432 ;;                  3   53[COMRAM] float 
 17433 ;; Registers used:
 17434 ;;		wreg, status,2, status,0, cstack
 17435 ;; Tracked objects:
 17436 ;;		On entry : 0/0
 17437 ;;		On exit  : 0/0
 17438 ;;		Unchanged: 0/0
 17439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17440 ;;      Params:         6       0       0       0       0       0       0       0       0
 17441 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17442 ;;      Temps:          5       0       0       0       0       0       0       0       0
 17443 ;;      Totals:        17       0       0       0       0       0       0       0       0
 17444 ;;Total ram usage:       17 bytes
 17445 ;; Hardware stack levels used:    1
 17446 ;; Hardware stack levels required when called:    4
 17447 ;; This function calls:
 17448 ;;		i1___ftpack
 17449 ;; This function is called by:
 17450 ;;		i1_Read_LDR
 17451 ;;		i1_fround
 17452 ;;		i1_scale
 17453 ;;		i1_sprintf
 17454 ;;		i1___asftmul
 17455 ;; This function uses a non-reentrant model
 17456 ;;
 17457                           
 17458                           	psect	text64
 17459  004A18                     __ptext64:
 17460                           	opt stack 0
 17461  004A18                     i1___ftmul:
 17462                           	opt stack 19
 17463                           
 17464                           ;incstack = 0
 17465                           ;incstack = 0
 17466  004A18  0E0F               	movlw	15
 17467  004A1A  6E3C               	movwf	??i1___ftmul& (0+255),c
 17468  004A1C  C036  F03D         	movff	i1___ftmul@f1,??i1___ftmul+1
 17469  004A20  C037  F03E         	movff	i1___ftmul@f1+1,??i1___ftmul+2
 17470  004A24  C038  F03F         	movff	i1___ftmul@f1+2,??i1___ftmul+3
 17471  004A28  283C               	incf	??i1___ftmul,w,c
 17472  004A2A  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 17473  004A2C  D004               	goto	i1u846_20
 17474  004A2E                     i1u846_25:
 17475  004A2E  90D8               	bcf	status,0,c
 17476  004A30  323F               	rrcf	??i1___ftmul+3,f,c
 17477  004A32  323E               	rrcf	??i1___ftmul+2,f,c
 17478  004A34  323D               	rrcf	??i1___ftmul+1,f,c
 17479  004A36                     i1u846_20:
 17480  004A36  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 17481  004A38  D7FA               	goto	i1u846_25
 17482  004A3A  503D               	movf	??i1___ftmul+1,w,c
 17483  004A3C  6E41               	movwf	i1___ftmul@exp,c
 17484  004A3E  6641               	tstfsz	i1___ftmul@exp& (0+255),c
 17485  004A40  D001               	goto	i1l9463
 17486  004A42  D015               	goto	i1u849_20
 17487  004A44                     i1l9463:
 17488  004A44  0E0F               	movlw	15
 17489  004A46  6E3C               	movwf	??i1___ftmul& (0+255),c
 17490  004A48  C039  F03D         	movff	i1___ftmul@f2,??i1___ftmul+1
 17491  004A4C  C03A  F03E         	movff	i1___ftmul@f2+1,??i1___ftmul+2
 17492  004A50  C03B  F03F         	movff	i1___ftmul@f2+2,??i1___ftmul+3
 17493  004A54  283C               	incf	??i1___ftmul,w,c
 17494  004A56  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 17495  004A58  D004               	goto	i1u848_20
 17496  004A5A                     i1u848_25:
 17497  004A5A  90D8               	bcf	status,0,c
 17498  004A5C  323F               	rrcf	??i1___ftmul+3,f,c
 17499  004A5E  323E               	rrcf	??i1___ftmul+2,f,c
 17500  004A60  323D               	rrcf	??i1___ftmul+1,f,c
 17501  004A62                     i1u848_20:
 17502  004A62  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 17503  004A64  D7FA               	goto	i1u848_25
 17504  004A66  503D               	movf	??i1___ftmul+1,w,c
 17505  004A68  6E46               	movwf	i1___ftmul@sign,c
 17506  004A6A  6646               	tstfsz	i1___ftmul@sign& (0+255),c
 17507  004A6C  D007               	goto	i1l9469
 17508  004A6E                     i1u849_20:
 17509  004A6E  0E00               	movlw	0
 17510  004A70  6E36               	movwf	?i1___ftmul,c
 17511  004A72  0E00               	movlw	0
 17512  004A74  6E37               	movwf	?i1___ftmul+1,c
 17513  004A76  0E00               	movlw	0
 17514  004A78  6E38               	movwf	?i1___ftmul+2,c
 17515  004A7A  D055               	goto	i1l774
 17516  004A7C                     i1l9469:
 17517  004A7C  5046               	movf	i1___ftmul@sign,w,c
 17518  004A7E  0F7B               	addlw	123
 17519  004A80  2641               	addwf	i1___ftmul@exp,f,c
 17520  004A82  C038  F046         	movff	i1___ftmul@f1+2,i1___ftmul@sign
 17521  004A86  503B               	movf	(i1___ftmul@f2+2)& (0+255),w,c
 17522  004A88  1A46               	xorwf	i1___ftmul@sign,f,c
 17523  004A8A  0E80               	movlw	128
 17524  004A8C  1646               	andwf	i1___ftmul@sign,f,c
 17525  004A8E  8E37               	bsf	i1___ftmul@f1+1,7,c
 17526  004A90  8E3A               	bsf	i1___ftmul@f2+1,7,c
 17527  004A92  0EFF               	movlw	255
 17528  004A94  1639               	andwf	i1___ftmul@f2,f,c
 17529  004A96  0EFF               	movlw	255
 17530  004A98  163A               	andwf	i1___ftmul@f2+1,f,c
 17531  004A9A  0E00               	movlw	0
 17532  004A9C  163B               	andwf	i1___ftmul@f2+2,f,c
 17533  004A9E  0E00               	movlw	0
 17534  004AA0  6E42               	movwf	i1___ftmul@f3_as_product,c
 17535  004AA2  0E00               	movlw	0
 17536  004AA4  6E43               	movwf	i1___ftmul@f3_as_product+1,c
 17537  004AA6  0E00               	movlw	0
 17538  004AA8  6E44               	movwf	i1___ftmul@f3_as_product+2,c
 17539  004AAA  6E3C               	movwf	??i1___ftmul& (0+255),c
 17540  004AAC  0E07               	movlw	7
 17541  004AAE  6E45               	movwf	i1___ftmul@cntr,c
 17542  004AB0  503C               	movf	??i1___ftmul& (0+255),w,c
 17543  004AB2                     i1l9483:
 17544  004AB2  A036               	btfss	i1___ftmul@f1,0,c
 17545  004AB4  D006               	goto	i1l9487
 17546  004AB6  5039               	movf	i1___ftmul@f2,w,c
 17547  004AB8  2642               	addwf	i1___ftmul@f3_as_product,f,c
 17548  004ABA  503A               	movf	i1___ftmul@f2+1,w,c
 17549  004ABC  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 17550  004ABE  503B               	movf	i1___ftmul@f2+2,w,c
 17551  004AC0  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 17552  004AC2                     i1l9487:
 17553  004AC2  90D8               	bcf	status,0,c
 17554  004AC4  3238               	rrcf	i1___ftmul@f1+2,f,c
 17555  004AC6  3237               	rrcf	i1___ftmul@f1+1,f,c
 17556  004AC8  3236               	rrcf	i1___ftmul@f1,f,c
 17557  004ACA  90D8               	bcf	status,0,c
 17558  004ACC  3639               	rlcf	i1___ftmul@f2,f,c
 17559  004ACE  363A               	rlcf	i1___ftmul@f2+1,f,c
 17560  004AD0  363B               	rlcf	i1___ftmul@f2+2,f,c
 17561  004AD2  2E45               	decfsz	i1___ftmul@cntr,f,c
 17562  004AD4  D7EE               	goto	i1l9483
 17563  004AD6  6E3C               	movwf	??i1___ftmul& (0+255),c
 17564  004AD8  0E09               	movlw	9
 17565  004ADA  6E45               	movwf	i1___ftmul@cntr,c
 17566  004ADC  503C               	movf	??i1___ftmul& (0+255),w,c
 17567  004ADE                     i1l9493:
 17568  004ADE  A036               	btfss	i1___ftmul@f1,0,c
 17569  004AE0  D006               	goto	i1l9497
 17570  004AE2  5039               	movf	i1___ftmul@f2,w,c
 17571  004AE4  2642               	addwf	i1___ftmul@f3_as_product,f,c
 17572  004AE6  503A               	movf	i1___ftmul@f2+1,w,c
 17573  004AE8  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 17574  004AEA  503B               	movf	i1___ftmul@f2+2,w,c
 17575  004AEC  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 17576  004AEE                     i1l9497:
 17577  004AEE  90D8               	bcf	status,0,c
 17578  004AF0  3238               	rrcf	i1___ftmul@f1+2,f,c
 17579  004AF2  3237               	rrcf	i1___ftmul@f1+1,f,c
 17580  004AF4  3236               	rrcf	i1___ftmul@f1,f,c
 17581  004AF6  90D8               	bcf	status,0,c
 17582  004AF8  3244               	rrcf	i1___ftmul@f3_as_product+2,f,c
 17583  004AFA  3243               	rrcf	i1___ftmul@f3_as_product+1,f,c
 17584  004AFC  3242               	rrcf	i1___ftmul@f3_as_product,f,c
 17585  004AFE  2E45               	decfsz	i1___ftmul@cntr,f,c
 17586  004B00  D7EE               	goto	i1l9493
 17587  004B02  C042  F011         	movff	i1___ftmul@f3_as_product,?i1___ftpack
 17588  004B06  C043  F012         	movff	i1___ftmul@f3_as_product+1,?i1___ftpack+1
 17589  004B0A  C044  F013         	movff	i1___ftmul@f3_as_product+2,?i1___ftpack+2
 17590  004B0E  C041  F014         	movff	i1___ftmul@exp,?i1___ftpack+3
 17591  004B12  C046  F015         	movff	i1___ftmul@sign,?i1___ftpack+4
 17592  004B16  ECC4  F029         	call	i1___ftpack	;wreg free
 17593  004B1A  C013  F038         	movff	?i1___ftpack+2,?i1___ftmul+2
 17594  004B1E  C012  F037         	movff	?i1___ftpack+1,?i1___ftmul+1
 17595  004B22  C011  F036         	movff	?i1___ftpack,?i1___ftmul
 17596  004B26                     i1l774:
 17597  004B26  0012               	return	
 17598  004B28                     __end_ofi1___ftmul:
 17599                           	opt stack 0
 17600                           pclatu	equ	0xFFB
 17601                           pclath	equ	0xFFA
 17602                           tblptru	equ	0xFF8
 17603                           tblptrh	equ	0xFF7
 17604                           tblptrl	equ	0xFF6
 17605                           tablat	equ	0xFF5
 17606                           prodh	equ	0xFF4
 17607                           prodl	equ	0xFF3
 17608                           intcon	equ	0xFF2
 17609                           intcon2	equ	0xFF1
 17610                           postinc0	equ	0xFEE
 17611                           fsr0h	equ	0xFEA
 17612                           fsr0l	equ	0xFE9
 17613                           wreg	equ	0xFE8
 17614                           fsr1h	equ	0xFE2
 17615                           fsr1l	equ	0xFE1
 17616                           bsr	equ	0xFE0
 17617                           indf2	equ	0xFDF
 17618                           postinc2	equ	0xFDE
 17619                           postdec2	equ	0xFDD
 17620                           fsr2h	equ	0xFDA
 17621                           fsr2l	equ	0xFD9
 17622                           status	equ	0xFD8
 17623                           
 17624 ;; *************** function i1___ftdiv *****************
 17625 ;; Defined at:
 17626 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
 17627 ;; Parameters:    Size  Location     Type
 17628 ;;  __ftdiv         3    0[BANK0 ] float 
 17629 ;;  __ftdiv         3    3[BANK0 ] float 
 17630 ;; Auto vars:     Size  Location     Type
 17631 ;;  __ftdiv         3   13[BANK0 ] float 
 17632 ;;  __ftdiv         1   16[BANK0 ] unsigned char 
 17633 ;;  __ftdiv         1   12[BANK0 ] unsigned char 
 17634 ;;  __ftdiv         1   11[BANK0 ] unsigned char 
 17635 ;; Return value:  Size  Location     Type
 17636 ;;                  3    0[BANK0 ] float 
 17637 ;; Registers used:
 17638 ;;		wreg, status,2, status,0, cstack
 17639 ;; Tracked objects:
 17640 ;;		On entry : 0/0
 17641 ;;		On exit  : 0/0
 17642 ;;		Unchanged: 0/0
 17643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17644 ;;      Params:         0       6       0       0       0       0       0       0       0
 17645 ;;      Locals:         0       6       0       0       0       0       0       0       0
 17646 ;;      Temps:          0       5       0       0       0       0       0       0       0
 17647 ;;      Totals:         0      17       0       0       0       0       0       0       0
 17648 ;;Total ram usage:       17 bytes
 17649 ;; Hardware stack levels used:    1
 17650 ;; Hardware stack levels required when called:    4
 17651 ;; This function calls:
 17652 ;;		i1___ftpack
 17653 ;; This function is called by:
 17654 ;;		i1_Read_LDR
 17655 ;; This function uses a non-reentrant model
 17656 ;;
 17657                           
 17658                           	psect	text65
 17659  004118                     __ptext65:
 17660                           	opt stack 0
 17661  004118                     i1___ftdiv:
 17662                           	opt stack 19
 17663                           
 17664                           ;incstack = 0
 17665                           ;incstack = 0
 17666  004118  0E0F               	movlw	15
 17667  00411A  0100               	movlb	0	; () banked
 17668  00411C  6F66               	movwf	??i1___ftdiv& (0+255),b
 17669  00411E  0100               	movlb	0	; () banked
 17670  004120  C060  F067         	movff	i1___ftdiv@f1,??i1___ftdiv+1
 17671  004124  0100               	movlb	0	; () banked
 17672  004126  C061  F068         	movff	i1___ftdiv@f1+1,??i1___ftdiv+2
 17673  00412A  0100               	movlb	0	; () banked
 17674  00412C  C062  F069         	movff	i1___ftdiv@f1+2,??i1___ftdiv+3
 17675  004130  0100               	movlb	0	; () banked
 17676  004132  2966               	incf	??i1___ftdiv& (0+255),w,b
 17677  004134  0100               	movlb	0	; () banked
 17678  004136  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 17679  004138  D005               	goto	i1u1105_20
 17680  00413A                     i1u1105_25:
 17681  00413A  0100               	movlb	0	; () banked
 17682  00413C  90D8               	bcf	status,0,c
 17683  00413E  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 17684  004140  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 17685  004142  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 17686  004144                     i1u1105_20:
 17687  004144  0100               	movlb	0	; () banked
 17688  004146  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 17689  004148  D7F8               	goto	i1u1105_25
 17690  00414A  0100               	movlb	0	; () banked
 17691  00414C  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 17692  00414E  0100               	movlb	0	; () banked
 17693  004150  0100               	movlb	0	; () banked
 17694  004152  6F6C               	movwf	i1___ftdiv@exp& (0+255),b
 17695  004154  0100               	movlb	0	; () banked
 17696  004156  676C               	tstfsz	i1___ftdiv@exp& (0+255),b
 17697  004158  D001               	goto	i1l11513
 17698  00415A  D021               	goto	i1u1108_20
 17699  00415C                     i1l11513:
 17700                           
 17701                           ; BSR set to: 0
 17702  00415C  0E0F               	movlw	15
 17703  00415E  0100               	movlb	0	; () banked
 17704  004160  6F66               	movwf	??i1___ftdiv& (0+255),b
 17705  004162  0100               	movlb	0	; () banked
 17706  004164  C063  F067         	movff	i1___ftdiv@f2,??i1___ftdiv+1
 17707  004168  0100               	movlb	0	; () banked
 17708  00416A  C064  F068         	movff	i1___ftdiv@f2+1,??i1___ftdiv+2
 17709  00416E  0100               	movlb	0	; () banked
 17710  004170  C065  F069         	movff	i1___ftdiv@f2+2,??i1___ftdiv+3
 17711  004174  0100               	movlb	0	; () banked
 17712  004176  2966               	incf	??i1___ftdiv& (0+255),w,b
 17713  004178  0100               	movlb	0	; () banked
 17714  00417A  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 17715  00417C  D005               	goto	i1u1107_20
 17716  00417E                     i1u1107_25:
 17717  00417E  0100               	movlb	0	; () banked
 17718  004180  90D8               	bcf	status,0,c
 17719  004182  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 17720  004184  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 17721  004186  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 17722  004188                     i1u1107_20:
 17723  004188  0100               	movlb	0	; () banked
 17724  00418A  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 17725  00418C  D7F8               	goto	i1u1107_25
 17726  00418E  0100               	movlb	0	; () banked
 17727  004190  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 17728  004192  0100               	movlb	0	; () banked
 17729  004194  0100               	movlb	0	; () banked
 17730  004196  6F70               	movwf	i1___ftdiv@sign& (0+255),b
 17731  004198  0100               	movlb	0	; () banked
 17732  00419A  6770               	tstfsz	i1___ftdiv@sign& (0+255),b
 17733  00419C  D00D               	goto	i1l11519
 17734  00419E                     i1u1108_20:
 17735                           
 17736                           ; BSR set to: 0
 17737  00419E  0E00               	movlw	0
 17738  0041A0  0100               	movlb	0	; () banked
 17739  0041A2  0100               	movlb	0	; () banked
 17740  0041A4  6F60               	movwf	?i1___ftdiv& (0+255),b
 17741  0041A6  0E00               	movlw	0
 17742  0041A8  0100               	movlb	0	; () banked
 17743  0041AA  0100               	movlb	0	; () banked
 17744  0041AC  6F61               	movwf	(?i1___ftdiv+1)& (0+255),b
 17745  0041AE  0E00               	movlw	0
 17746  0041B0  0100               	movlb	0	; () banked
 17747  0041B2  0100               	movlb	0	; () banked
 17748  0041B4  6F62               	movwf	(?i1___ftdiv+2)& (0+255),b
 17749  0041B6  D093               	goto	i1l742
 17750  0041B8                     i1l11519:
 17751                           
 17752                           ; BSR set to: 0
 17753  0041B8  0E00               	movlw	0
 17754  0041BA  0100               	movlb	0	; () banked
 17755  0041BC  0100               	movlb	0	; () banked
 17756  0041BE  6F6D               	movwf	i1___ftdiv@f3& (0+255),b
 17757  0041C0  0E00               	movlw	0
 17758  0041C2  0100               	movlb	0	; () banked
 17759  0041C4  0100               	movlb	0	; () banked
 17760  0041C6  6F6E               	movwf	(i1___ftdiv@f3+1)& (0+255),b
 17761  0041C8  0E00               	movlw	0
 17762  0041CA  0100               	movlb	0	; () banked
 17763  0041CC  0100               	movlb	0	; () banked
 17764  0041CE  6F6F               	movwf	(i1___ftdiv@f3+2)& (0+255),b
 17765                           
 17766                           ; BSR set to: 0
 17767  0041D0  0100               	movlb	0	; () banked
 17768  0041D2  0100               	movlb	0	; () banked
 17769  0041D4  5170               	movf	i1___ftdiv@sign& (0+255),w,b
 17770  0041D6  0F89               	addlw	137
 17771  0041D8  0100               	movlb	0	; () banked
 17772  0041DA  0100               	movlb	0	; () banked
 17773  0041DC  5F6C               	subwf	i1___ftdiv@exp& (0+255),f,b
 17774                           
 17775                           ; BSR set to: 0
 17776  0041DE  C062  F070         	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
 17777                           
 17778                           ; BSR set to: 0
 17779  0041E2  0100               	movlb	0	; () banked
 17780  0041E4  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17781  0041E6  0100               	movlb	0	; () banked
 17782  0041E8  0100               	movlb	0	; () banked
 17783  0041EA  1B70               	xorwf	i1___ftdiv@sign& (0+255),f,b
 17784                           
 17785                           ; BSR set to: 0
 17786  0041EC  0E80               	movlw	128
 17787  0041EE  0100               	movlb	0	; () banked
 17788  0041F0  0100               	movlb	0	; () banked
 17789  0041F2  1770               	andwf	i1___ftdiv@sign& (0+255),f,b
 17790                           
 17791                           ; BSR set to: 0
 17792  0041F4  0100               	movlb	0	; () banked
 17793  0041F6  0100               	movlb	0	; () banked
 17794  0041F8  8F61               	bsf	(i1___ftdiv@f1+1)& (0+255),7,b
 17795                           
 17796                           ; BSR set to: 0
 17797  0041FA  0EFF               	movlw	255
 17798  0041FC  0100               	movlb	0	; () banked
 17799  0041FE  0100               	movlb	0	; () banked
 17800  004200  1760               	andwf	i1___ftdiv@f1& (0+255),f,b
 17801  004202  0EFF               	movlw	255
 17802  004204  0100               	movlb	0	; () banked
 17803  004206  0100               	movlb	0	; () banked
 17804  004208  1761               	andwf	(i1___ftdiv@f1+1)& (0+255),f,b
 17805  00420A  0E00               	movlw	0
 17806  00420C  0100               	movlb	0	; () banked
 17807  00420E  0100               	movlb	0	; () banked
 17808  004210  1762               	andwf	(i1___ftdiv@f1+2)& (0+255),f,b
 17809                           
 17810                           ; BSR set to: 0
 17811  004212  0100               	movlb	0	; () banked
 17812  004214  0100               	movlb	0	; () banked
 17813  004216  8F64               	bsf	(i1___ftdiv@f2+1)& (0+255),7,b
 17814                           
 17815                           ; BSR set to: 0
 17816  004218  0EFF               	movlw	255
 17817  00421A  0100               	movlb	0	; () banked
 17818  00421C  0100               	movlb	0	; () banked
 17819  00421E  1763               	andwf	i1___ftdiv@f2& (0+255),f,b
 17820  004220  0EFF               	movlw	255
 17821  004222  0100               	movlb	0	; () banked
 17822  004224  0100               	movlb	0	; () banked
 17823  004226  1764               	andwf	(i1___ftdiv@f2+1)& (0+255),f,b
 17824  004228  0E00               	movlw	0
 17825  00422A  0100               	movlb	0	; () banked
 17826  00422C  0100               	movlb	0	; () banked
 17827  00422E  1765               	andwf	(i1___ftdiv@f2+2)& (0+255),f,b
 17828                           
 17829                           ; BSR set to: 0
 17830  004230  0100               	movlb	0	; () banked
 17831  004232  6F66               	movwf	??i1___ftdiv& (0+255),b
 17832  004234  0E18               	movlw	24
 17833  004236  0100               	movlb	0	; () banked
 17834  004238  0100               	movlb	0	; () banked
 17835  00423A  6F6B               	movwf	i1___ftdiv@cntr& (0+255),b
 17836  00423C  0100               	movlb	0	; () banked
 17837  00423E  5166               	movf	??i1___ftdiv& (0+255),w,b
 17838  004240                     i1l744:
 17839                           
 17840                           ; BSR set to: 0
 17841  004240  0100               	movlb	0	; () banked
 17842  004242  90D8               	bcf	status,0,c
 17843  004244  0100               	movlb	0	; () banked
 17844  004246  376D               	rlcf	i1___ftdiv@f3& (0+255),f,b
 17845  004248  0100               	movlb	0	; () banked
 17846  00424A  376E               	rlcf	(i1___ftdiv@f3+1)& (0+255),f,b
 17847  00424C  0100               	movlb	0	; () banked
 17848  00424E  376F               	rlcf	(i1___ftdiv@f3+2)& (0+255),f,b
 17849                           
 17850                           ; BSR set to: 0
 17851  004250  0100               	movlb	0	; () banked
 17852  004252  0100               	movlb	0	; () banked
 17853  004254  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 17854  004256  0100               	movlb	0	; () banked
 17855  004258  0100               	movlb	0	; () banked
 17856  00425A  5D60               	subwf	i1___ftdiv@f1& (0+255),w,b
 17857  00425C  0100               	movlb	0	; () banked
 17858  00425E  0100               	movlb	0	; () banked
 17859  004260  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 17860  004262  0100               	movlb	0	; () banked
 17861  004264  0100               	movlb	0	; () banked
 17862  004266  5961               	subwfb	(i1___ftdiv@f1+1)& (0+255),w,b
 17863  004268  0100               	movlb	0	; () banked
 17864  00426A  0100               	movlb	0	; () banked
 17865  00426C  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17866  00426E  0100               	movlb	0	; () banked
 17867  004270  0100               	movlb	0	; () banked
 17868  004272  5962               	subwfb	(i1___ftdiv@f1+2)& (0+255),w,b
 17869  004274  A0D8               	btfss	status,0,c
 17870  004276  D015               	goto	i1l745
 17871                           
 17872                           ; BSR set to: 0
 17873  004278  0100               	movlb	0	; () banked
 17874  00427A  0100               	movlb	0	; () banked
 17875  00427C  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 17876  00427E  0100               	movlb	0	; () banked
 17877  004280  0100               	movlb	0	; () banked
 17878  004282  5F60               	subwf	i1___ftdiv@f1& (0+255),f,b
 17879  004284  0100               	movlb	0	; () banked
 17880  004286  0100               	movlb	0	; () banked
 17881  004288  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 17882  00428A  0100               	movlb	0	; () banked
 17883  00428C  0100               	movlb	0	; () banked
 17884  00428E  5B61               	subwfb	(i1___ftdiv@f1+1)& (0+255),f,b
 17885  004290  0100               	movlb	0	; () banked
 17886  004292  0100               	movlb	0	; () banked
 17887  004294  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17888  004296  0100               	movlb	0	; () banked
 17889  004298  0100               	movlb	0	; () banked
 17890  00429A  5B62               	subwfb	(i1___ftdiv@f1+2)& (0+255),f,b
 17891                           
 17892                           ; BSR set to: 0
 17893  00429C  0100               	movlb	0	; () banked
 17894  00429E  0100               	movlb	0	; () banked
 17895  0042A0  816D               	bsf	i1___ftdiv@f3& (0+255),0,b
 17896  0042A2                     i1l745:
 17897                           
 17898                           ; BSR set to: 0
 17899  0042A2  0100               	movlb	0	; () banked
 17900  0042A4  90D8               	bcf	status,0,c
 17901  0042A6  0100               	movlb	0	; () banked
 17902  0042A8  3760               	rlcf	i1___ftdiv@f1& (0+255),f,b
 17903  0042AA  0100               	movlb	0	; () banked
 17904  0042AC  3761               	rlcf	(i1___ftdiv@f1+1)& (0+255),f,b
 17905  0042AE  0100               	movlb	0	; () banked
 17906  0042B0  3762               	rlcf	(i1___ftdiv@f1+2)& (0+255),f,b
 17907                           
 17908                           ; BSR set to: 0
 17909  0042B2  0100               	movlb	0	; () banked
 17910  0042B4  0100               	movlb	0	; () banked
 17911  0042B6  2F6B               	decfsz	i1___ftdiv@cntr& (0+255),f,b
 17912  0042B8  D7C3               	goto	i1l744
 17913                           
 17914                           ; BSR set to: 0
 17915                           
 17916                           ; BSR set to: 0
 17917  0042BA  C06D  F011         	movff	i1___ftdiv@f3,?i1___ftpack
 17918  0042BE  C06E  F012         	movff	i1___ftdiv@f3+1,?i1___ftpack+1
 17919  0042C2  C06F  F013         	movff	i1___ftdiv@f3+2,?i1___ftpack+2
 17920  0042C6  C06C  F014         	movff	i1___ftdiv@exp,?i1___ftpack+3
 17921  0042CA  C070  F015         	movff	i1___ftdiv@sign,?i1___ftpack+4
 17922  0042CE  ECC4  F029         	call	i1___ftpack	;wreg free
 17923  0042D2  C013  F062         	movff	?i1___ftpack+2,?i1___ftdiv+2
 17924  0042D6  C012  F061         	movff	?i1___ftpack+1,?i1___ftdiv+1
 17925  0042DA  C011  F060         	movff	?i1___ftpack,?i1___ftdiv
 17926  0042DE                     i1l742:
 17927  0042DE  0012               	return	
 17928  0042E0                     __end_ofi1___ftdiv:
 17929                           	opt stack 0
 17930                           pclatu	equ	0xFFB
 17931                           pclath	equ	0xFFA
 17932                           tblptru	equ	0xFF8
 17933                           tblptrh	equ	0xFF7
 17934                           tblptrl	equ	0xFF6
 17935                           tablat	equ	0xFF5
 17936                           prodh	equ	0xFF4
 17937                           prodl	equ	0xFF3
 17938                           intcon	equ	0xFF2
 17939                           intcon2	equ	0xFF1
 17940                           postinc0	equ	0xFEE
 17941                           fsr0h	equ	0xFEA
 17942                           fsr0l	equ	0xFE9
 17943                           wreg	equ	0xFE8
 17944                           fsr1h	equ	0xFE2
 17945                           fsr1l	equ	0xFE1
 17946                           bsr	equ	0xFE0
 17947                           indf2	equ	0xFDF
 17948                           postinc2	equ	0xFDE
 17949                           postdec2	equ	0xFDD
 17950                           fsr2h	equ	0xFDA
 17951                           fsr2l	equ	0xFD9
 17952                           status	equ	0xFD8
 17953                           
 17954 ;; *************** function i1___ftpack *****************
 17955 ;; Defined at:
 17956 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 17957 ;; Parameters:    Size  Location     Type
 17958 ;;  __ftpack        3   16[COMRAM] unsigned um
 17959 ;;  __ftpack        1   19[COMRAM] unsigned char 
 17960 ;;  __ftpack        1   20[COMRAM] unsigned char 
 17961 ;; Auto vars:     Size  Location     Type
 17962 ;;		None
 17963 ;; Return value:  Size  Location     Type
 17964 ;;                  3   16[COMRAM] float 
 17965 ;; Registers used:
 17966 ;;		wreg, status,2, status,0
 17967 ;; Tracked objects:
 17968 ;;		On entry : 0/0
 17969 ;;		On exit  : 0/0
 17970 ;;		Unchanged: 0/0
 17971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17972 ;;      Params:         5       0       0       0       0       0       0       0       0
 17973 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17974 ;;      Temps:          3       0       0       0       0       0       0       0       0
 17975 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17976 ;;Total ram usage:        8 bytes
 17977 ;; Hardware stack levels used:    1
 17978 ;; Hardware stack levels required when called:    3
 17979 ;; This function calls:
 17980 ;;		Nothing
 17981 ;; This function is called by:
 17982 ;;		i1___awtoft
 17983 ;;		i1___ftadd
 17984 ;;		i1___ftdiv
 17985 ;;		i1___ftmul
 17986 ;;		i1___lltoft
 17987 ;; This function uses a non-reentrant model
 17988 ;;
 17989                           
 17990                           	psect	text66
 17991  005388                     __ptext66:
 17992                           	opt stack 0
 17993  005388                     i1___ftpack:
 17994                           	opt stack 19
 17995                           
 17996                           ;incstack = 0
 17997                           ;incstack = 0
 17998  005388  5014               	movf	i1___ftpack@exp,w,c
 17999  00538A  B4D8               	btfsc	status,2,c
 18000  00538C  D005               	goto	i1l9239
 18001  00538E  5011               	movf	i1___ftpack@arg,w,c
 18002  005390  1012               	iorwf	i1___ftpack@arg+1,w,c
 18003  005392  1013               	iorwf	i1___ftpack@arg+2,w,c
 18004  005394  A4D8               	btfss	status,2,c
 18005  005396  D00C               	goto	i1l9245
 18006  005398                     i1l9239:
 18007  005398  0E00               	movlw	0
 18008  00539A  6E11               	movwf	?i1___ftpack,c
 18009  00539C  0E00               	movlw	0
 18010  00539E  6E12               	movwf	?i1___ftpack+1,c
 18011  0053A0  0E00               	movlw	0
 18012  0053A2  6E13               	movwf	?i1___ftpack+2,c
 18013  0053A4  D04C               	goto	i1l673
 18014  0053A6                     i1l9243:
 18015  0053A6  2A14               	incf	i1___ftpack@exp,f,c
 18016  0053A8  90D8               	bcf	status,0,c
 18017  0053AA  3213               	rrcf	i1___ftpack@arg+2,f,c
 18018  0053AC  3212               	rrcf	i1___ftpack@arg+1,f,c
 18019  0053AE  3211               	rrcf	i1___ftpack@arg,f,c
 18020  0053B0                     i1l9245:
 18021  0053B0  0E00               	movlw	0
 18022  0053B2  1411               	andwf	i1___ftpack@arg,w,c
 18023  0053B4  6E16               	movwf	??i1___ftpack& (0+255),c
 18024  0053B6  0E00               	movlw	0
 18025  0053B8  1412               	andwf	i1___ftpack@arg+1,w,c
 18026  0053BA  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 18027  0053BC  0EFE               	movlw	254
 18028  0053BE  1413               	andwf	i1___ftpack@arg+2,w,c
 18029  0053C0  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18030  0053C2  5016               	movf	??i1___ftpack,w,c
 18031  0053C4  1017               	iorwf	??i1___ftpack+1,w,c
 18032  0053C6  1018               	iorwf	??i1___ftpack+2,w,c
 18033  0053C8  B4D8               	btfsc	status,2,c
 18034  0053CA  D00C               	goto	i1l9251
 18035  0053CC  D7EC               	goto	i1l9243
 18036  0053CE                     i1l9247:
 18037  0053CE  2A14               	incf	i1___ftpack@exp,f,c
 18038  0053D0  0E01               	movlw	1
 18039  0053D2  2611               	addwf	i1___ftpack@arg,f,c
 18040  0053D4  0E00               	movlw	0
 18041  0053D6  2212               	addwfc	i1___ftpack@arg+1,f,c
 18042  0053D8  0E00               	movlw	0
 18043  0053DA  2213               	addwfc	i1___ftpack@arg+2,f,c
 18044  0053DC  90D8               	bcf	status,0,c
 18045  0053DE  3213               	rrcf	i1___ftpack@arg+2,f,c
 18046  0053E0  3212               	rrcf	i1___ftpack@arg+1,f,c
 18047  0053E2  3211               	rrcf	i1___ftpack@arg,f,c
 18048  0053E4                     i1l9251:
 18049  0053E4  0E00               	movlw	0
 18050  0053E6  1411               	andwf	i1___ftpack@arg,w,c
 18051  0053E8  6E16               	movwf	??i1___ftpack& (0+255),c
 18052  0053EA  0E00               	movlw	0
 18053  0053EC  1412               	andwf	i1___ftpack@arg+1,w,c
 18054  0053EE  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 18055  0053F0  0EFF               	movlw	255
 18056  0053F2  1413               	andwf	i1___ftpack@arg+2,w,c
 18057  0053F4  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18058  0053F6  5016               	movf	??i1___ftpack,w,c
 18059  0053F8  1017               	iorwf	??i1___ftpack+1,w,c
 18060  0053FA  1018               	iorwf	??i1___ftpack+2,w,c
 18061  0053FC  B4D8               	btfsc	status,2,c
 18062  0053FE  D006               	goto	i1l9255
 18063  005400  D7E6               	goto	i1l9247
 18064  005402                     i1l9253:
 18065  005402  0614               	decf	i1___ftpack@exp,f,c
 18066  005404  90D8               	bcf	status,0,c
 18067  005406  3611               	rlcf	i1___ftpack@arg,f,c
 18068  005408  3612               	rlcf	i1___ftpack@arg+1,f,c
 18069  00540A  3613               	rlcf	i1___ftpack@arg+2,f,c
 18070  00540C                     i1l9255:
 18071  00540C  AE12               	btfss	i1___ftpack@arg+1,7,c
 18072  00540E  D7F9               	goto	i1l9253
 18073  005410  A014               	btfss	i1___ftpack@exp,0,c
 18074  005412  9E12               	bcf	i1___ftpack@arg+1,7,c
 18075  005414  90D8               	bcf	status,0,c
 18076  005416  3214               	rrcf	i1___ftpack@exp,f,c
 18077  005418  5014               	movf	i1___ftpack@exp,w,c
 18078  00541A  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18079  00541C  6A17               	clrf	(??i1___ftpack+1)& (0+255),c
 18080  00541E  6A16               	clrf	??i1___ftpack& (0+255),c
 18081  005420  5016               	movf	??i1___ftpack,w,c
 18082  005422  1211               	iorwf	i1___ftpack@arg,f,c
 18083  005424  5017               	movf	??i1___ftpack+1,w,c
 18084  005426  1212               	iorwf	i1___ftpack@arg+1,f,c
 18085  005428  5018               	movf	??i1___ftpack+2,w,c
 18086  00542A  1213               	iorwf	i1___ftpack@arg+2,f,c
 18087  00542C  5015               	movf	i1___ftpack@sign,w,c
 18088  00542E  A4D8               	btfss	status,2,c
 18089  005430  8E13               	bsf	i1___ftpack@arg+2,7,c
 18090  005432  C011  F011         	movff	i1___ftpack@arg,?i1___ftpack
 18091  005436  C012  F012         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 18092  00543A  C013  F013         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 18093  00543E                     i1l673:
 18094  00543E  0012               	return	
 18095  005440                     __end_ofi1___ftpack:
 18096                           	opt stack 0
 18097                           pclatu	equ	0xFFB
 18098                           pclath	equ	0xFFA
 18099                           tblptru	equ	0xFF8
 18100                           tblptrh	equ	0xFF7
 18101                           tblptrl	equ	0xFF6
 18102                           tablat	equ	0xFF5
 18103                           prodh	equ	0xFF4
 18104                           prodl	equ	0xFF3
 18105                           intcon	equ	0xFF2
 18106                           intcon2	equ	0xFF1
 18107                           postinc0	equ	0xFEE
 18108                           fsr0h	equ	0xFEA
 18109                           fsr0l	equ	0xFE9
 18110                           wreg	equ	0xFE8
 18111                           fsr1h	equ	0xFE2
 18112                           fsr1l	equ	0xFE1
 18113                           bsr	equ	0xFE0
 18114                           indf2	equ	0xFDF
 18115                           postinc2	equ	0xFDE
 18116                           postdec2	equ	0xFDD
 18117                           fsr2h	equ	0xFDA
 18118                           fsr2l	equ	0xFD9
 18119                           status	equ	0xFD8
 18120                           
 18121 ;; *************** function i1___awtoft *****************
 18122 ;; Defined at:
 18123 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;  __awtoft        2   24[COMRAM] int 
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;  __awtoft        1   28[COMRAM] unsigned char 
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  3   24[COMRAM] float 
 18130 ;; Registers used:
 18131 ;;		wreg, status,2, status,0, cstack
 18132 ;; Tracked objects:
 18133 ;;		On entry : 0/0
 18134 ;;		On exit  : 0/0
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18137 ;;      Params:         3       0       0       0       0       0       0       0       0
 18138 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18139 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18140 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18141 ;;Total ram usage:        5 bytes
 18142 ;; Hardware stack levels used:    1
 18143 ;; Hardware stack levels required when called:    4
 18144 ;; This function calls:
 18145 ;;		i1___ftpack
 18146 ;; This function is called by:
 18147 ;;		i1_Read_LDR
 18148 ;; This function uses a non-reentrant model
 18149 ;;
 18150                           
 18151                           	psect	text67
 18152  005E64                     __ptext67:
 18153                           	opt stack 0
 18154  005E64                     i1___awtoft:
 18155                           	opt stack 19
 18156                           
 18157                           ;incstack = 0
 18158                           ;incstack = 0
 18159  005E64  6E1C               	movwf	??i1___awtoft& (0+255),c
 18160  005E66  0E00               	movlw	0
 18161  005E68  6E1D               	movwf	i1___awtoft@sign,c
 18162  005E6A  501C               	movf	??i1___awtoft& (0+255),w,c
 18163  005E6C  AE1A               	btfss	i1___awtoft@c+1,7,c
 18164  005E6E  D008               	goto	i1l9175
 18165  005E70  6C19               	negf	i1___awtoft@c,c
 18166  005E72  1E1A               	comf	i1___awtoft@c+1,f,c
 18167  005E74  B0D8               	btfsc	status,0,c
 18168  005E76  2A1A               	incf	i1___awtoft@c+1,f,c
 18169  005E78  6E1C               	movwf	??i1___awtoft& (0+255),c
 18170  005E7A  0E01               	movlw	1
 18171  005E7C  6E1D               	movwf	i1___awtoft@sign,c
 18172  005E7E  501C               	movf	??i1___awtoft& (0+255),w,c
 18173  005E80                     i1l9175:
 18174  005E80  C019  F011         	movff	i1___awtoft@c,?i1___ftpack
 18175  005E84  C01A  F012         	movff	i1___awtoft@c+1,?i1___ftpack+1
 18176  005E88  6A13               	clrf	?i1___ftpack+2,c
 18177  005E8A  6E1C               	movwf	??i1___awtoft& (0+255),c
 18178  005E8C  0E8E               	movlw	142
 18179  005E8E  6E14               	movwf	?i1___ftpack+3,c
 18180  005E90  501C               	movf	??i1___awtoft& (0+255),w,c
 18181  005E92  C01D  F015         	movff	i1___awtoft@sign,?i1___ftpack+4
 18182  005E96  ECC4  F029         	call	i1___ftpack	;wreg free
 18183  005E9A  C013  F01B         	movff	?i1___ftpack+2,?i1___awtoft+2
 18184  005E9E  C012  F01A         	movff	?i1___ftpack+1,?i1___awtoft+1
 18185  005EA2  C011  F019         	movff	?i1___ftpack,?i1___awtoft
 18186  005EA6  0012               	return	
 18187  005EA8                     __end_ofi1___awtoft:
 18188                           	opt stack 0
 18189                           pclatu	equ	0xFFB
 18190                           pclath	equ	0xFFA
 18191                           tblptru	equ	0xFF8
 18192                           tblptrh	equ	0xFF7
 18193                           tblptrl	equ	0xFF6
 18194                           tablat	equ	0xFF5
 18195                           prodh	equ	0xFF4
 18196                           prodl	equ	0xFF3
 18197                           intcon	equ	0xFF2
 18198                           intcon2	equ	0xFF1
 18199                           postinc0	equ	0xFEE
 18200                           fsr0h	equ	0xFEA
 18201                           fsr0l	equ	0xFE9
 18202                           wreg	equ	0xFE8
 18203                           fsr1h	equ	0xFE2
 18204                           fsr1l	equ	0xFE1
 18205                           bsr	equ	0xFE0
 18206                           indf2	equ	0xFDF
 18207                           postinc2	equ	0xFDE
 18208                           postdec2	equ	0xFDD
 18209                           fsr2h	equ	0xFDA
 18210                           fsr2l	equ	0xFD9
 18211                           status	equ	0xFD8
 18212                           
 18213 ;; *************** function i1_Obtener_Distancia *****************
 18214 ;; Defined at:
 18215 ;;		line 247 in file "main.c"
 18216 ;; Parameters:    Size  Location     Type
 18217 ;;		None
 18218 ;; Auto vars:     Size  Location     Type
 18219 ;;  Obtener_Dist    2   30[COMRAM] unsigned int 
 18220 ;;  Obtener_Dist    2   28[COMRAM] unsigned int 
 18221 ;;  Obtener_Dist    2   26[COMRAM] unsigned int 
 18222 ;; Return value:  Size  Location     Type
 18223 ;;                  2   24[COMRAM] unsigned int 
 18224 ;; Registers used:
 18225 ;;		wreg, status,2, status,0, cstack
 18226 ;; Tracked objects:
 18227 ;;		On entry : 0/0
 18228 ;;		On exit  : 0/0
 18229 ;;		Unchanged: 0/0
 18230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18231 ;;      Params:         2       0       0       0       0       0       0       0       0
 18232 ;;      Locals:         6       0       0       0       0       0       0       0       0
 18233 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18234 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18235 ;;Total ram usage:        8 bytes
 18236 ;; Hardware stack levels used:    1
 18237 ;; Hardware stack levels required when called:    4
 18238 ;; This function calls:
 18239 ;;		i1___lwdiv
 18240 ;; This function is called by:
 18241 ;;		_interrupcaoLOW
 18242 ;; This function uses a non-reentrant model
 18243 ;;
 18244                           
 18245                           	psect	text68
 18246  005A20                     __ptext68:
 18247                           	opt stack 0
 18248  005A20                     i1_Obtener_Distancia:
 18249                           	opt stack 20
 18250                           
 18251                           ;main.c: 248: uint16_t Duracion;
 18252                           ;main.c: 249: uint16_t Distancia;
 18253                           ;main.c: 250: uint16_t Timer_1;
 18254                           ;main.c: 252: LATAbits.LATA1=1;
 18255                           
 18256                           ;incstack = 0
 18257                           ;incstack = 0
 18258  005A20  8289               	bsf	3977,1,c	;volatile
 18259                           
 18260                           ;main.c: 253: _delay((unsigned long)((10)*(8000000/4000000.0)));
 18261  005A22  0E06               	movlw	6
 18262  005A24                     i1u1117_27:
 18263  005A24  2EE8               	decfsz	wreg,f,c
 18264  005A26  D7FE               	goto	i1u1117_27
 18265  005A28  D000               	nop2		;nop
 18266                           
 18267                           ;main.c: 254: LATAbits.LATA1=0;
 18268  005A2A  9289               	bcf	3977,1,c	;volatile
 18269  005A2C                     i1l207:
 18270  005A2C  A480               	btfss	3968,2,c	;volatile
 18271  005A2E  D7FE               	goto	i1l207
 18272                           
 18273                           ;main.c: 256: T1CONbits.TMR1ON=1;
 18274  005A30  80CD               	bsf	4045,0,c	;volatile
 18275  005A32                     i1l210:
 18276  005A32  B480               	btfsc	3968,2,c	;volatile
 18277  005A34  D7FE               	goto	i1l210
 18278                           
 18279                           ;main.c: 258: T1CONbits.TMR1ON=0;
 18280  005A36  90CD               	bcf	4045,0,c	;volatile
 18281                           
 18282                           ;main.c: 259: Timer_1=TMR1;
 18283  005A38  CFCE F01B          	movff	4046,i1Obtener_Distancia@Timer_1	;volatile
 18284  005A3C  CFCF F01C          	movff	4047,i1Obtener_Distancia@Timer_1+1	;volatile
 18285                           
 18286                           ;main.c: 260: Duracion=Timer_1/2;
 18287  005A40  90D8               	bcf	status,0,c
 18288  005A42  301C               	rrcf	i1Obtener_Distancia@Timer_1+1,w,c
 18289  005A44  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 18290  005A46  301B               	rrcf	i1Obtener_Distancia@Timer_1,w,c
 18291  005A48  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 18292                           
 18293                           ;main.c: 261: if(Duracion<=23200)
 18294  005A4A  0EA1               	movlw	161
 18295  005A4C  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 18296  005A4E  0E5A               	movlw	90
 18297  005A50  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 18298  005A52  B0D8               	btfsc	status,0,c
 18299  005A54  D00F               	goto	i1l8661
 18300                           
 18301                           ;main.c: 262: {
 18302                           ;main.c: 263: Distancia=Duracion/58;
 18303  005A56  C01F  F011         	movff	i1Obtener_Distancia@Duracion,?i1___lwdiv
 18304  005A5A  C020  F012         	movff	i1Obtener_Distancia@Duracion+1,?i1___lwdiv+1
 18305  005A5E  0E00               	movlw	0
 18306  005A60  6E14               	movwf	?i1___lwdiv+3,c
 18307  005A62  0E3A               	movlw	58
 18308  005A64  6E13               	movwf	?i1___lwdiv+2,c
 18309  005A66  EC90  F02E         	call	i1___lwdiv	;wreg free
 18310  005A6A  C011  F01D         	movff	?i1___lwdiv,i1Obtener_Distancia@Distancia
 18311  005A6E  C012  F01E         	movff	?i1___lwdiv+1,i1Obtener_Distancia@Distancia+1
 18312                           
 18313                           ;main.c: 264: }
 18314  005A72  D008               	goto	i1l214
 18315  005A74                     i1l8661:
 18316                           
 18317                           ;main.c: 265: else if(Duracion<116)
 18318  005A74  0E74               	movlw	116
 18319  005A76  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 18320  005A78  0E00               	movlw	0
 18321  005A7A  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 18322                           
 18323                           ;main.c: 269: else
 18324                           ;main.c: 270: {
 18325                           ;main.c: 271: Distancia=0;
 18326                           
 18327                           ;main.c: 268: }
 18328                           
 18329                           ;main.c: 266: {
 18330                           ;main.c: 267: Distancia=0;
 18331  005A7C  0E00               	movlw	0
 18332  005A7E  6E1E               	movwf	i1Obtener_Distancia@Distancia+1,c
 18333  005A80  0E00               	movlw	0
 18334  005A82  6E1D               	movwf	i1Obtener_Distancia@Distancia,c
 18335  005A84                     i1l214:
 18336                           
 18337                           ;main.c: 272: }
 18338                           ;main.c: 273: Duracion=0;
 18339  005A84  0E00               	movlw	0
 18340  005A86  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 18341  005A88  0E00               	movlw	0
 18342  005A8A  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 18343                           
 18344                           ;main.c: 274: TMR1=0;
 18345  005A8C  0E00               	movlw	0
 18346  005A8E  6ECF               	movwf	4047,c	;volatile
 18347  005A90  0E00               	movlw	0
 18348  005A92  6ECE               	movwf	4046,c	;volatile
 18349                           
 18350                           ;main.c: 276: return Distancia;
 18351  005A94  C01D  F019         	movff	i1Obtener_Distancia@Distancia,?i1_Obtener_Distancia
 18352  005A98  C01E  F01A         	movff	i1Obtener_Distancia@Distancia+1,?i1_Obtener_Distancia+1
 18353  005A9C  0012               	return	
 18354  005A9E                     __end_ofi1_Obtener_Distancia:
 18355                           	opt stack 0
 18356                           pclatu	equ	0xFFB
 18357                           pclath	equ	0xFFA
 18358                           tblptru	equ	0xFF8
 18359                           tblptrh	equ	0xFF7
 18360                           tblptrl	equ	0xFF6
 18361                           tablat	equ	0xFF5
 18362                           prodh	equ	0xFF4
 18363                           prodl	equ	0xFF3
 18364                           intcon	equ	0xFF2
 18365                           intcon2	equ	0xFF1
 18366                           postinc0	equ	0xFEE
 18367                           fsr0h	equ	0xFEA
 18368                           fsr0l	equ	0xFE9
 18369                           wreg	equ	0xFE8
 18370                           fsr1h	equ	0xFE2
 18371                           fsr1l	equ	0xFE1
 18372                           bsr	equ	0xFE0
 18373                           indf2	equ	0xFDF
 18374                           postinc2	equ	0xFDE
 18375                           postdec2	equ	0xFDD
 18376                           fsr2h	equ	0xFDA
 18377                           fsr2l	equ	0xFD9
 18378                           status	equ	0xFD8
 18379                           
 18380 ;; *************** function i1___lwdiv *****************
 18381 ;; Defined at:
 18382 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
 18383 ;; Parameters:    Size  Location     Type
 18384 ;;  __lwdiv         2   16[COMRAM] unsigned int 
 18385 ;;  __lwdiv         2   18[COMRAM] unsigned int 
 18386 ;; Auto vars:     Size  Location     Type
 18387 ;;  __lwdiv         2   22[COMRAM] unsigned int 
 18388 ;;  __lwdiv         1   21[COMRAM] unsigned char 
 18389 ;; Return value:  Size  Location     Type
 18390 ;;                  2   16[COMRAM] unsigned int 
 18391 ;; Registers used:
 18392 ;;		wreg, status,2, status,0
 18393 ;; Tracked objects:
 18394 ;;		On entry : 0/0
 18395 ;;		On exit  : 0/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18398 ;;      Params:         4       0       0       0       0       0       0       0       0
 18399 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18400 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18401 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18402 ;;Total ram usage:        8 bytes
 18403 ;; Hardware stack levels used:    1
 18404 ;; Hardware stack levels required when called:    3
 18405 ;; This function calls:
 18406 ;;		Nothing
 18407 ;; This function is called by:
 18408 ;;		i1_Obtener_Distancia
 18409 ;; This function uses a non-reentrant model
 18410 ;;
 18411                           
 18412                           	psect	text69
 18413  005D20                     __ptext69:
 18414                           	opt stack 0
 18415  005D20                     i1___lwdiv:
 18416                           	opt stack 20
 18417                           
 18418                           ;incstack = 0
 18419                           ;incstack = 0
 18420  005D20  0E00               	movlw	0
 18421  005D22  6E18               	movwf	i1___lwdiv@quotient+1,c
 18422  005D24  0E00               	movlw	0
 18423  005D26  6E17               	movwf	i1___lwdiv@quotient,c
 18424  005D28  5014               	movf	i1___lwdiv@divisor+1,w,c
 18425  005D2A  1013               	iorwf	i1___lwdiv@divisor,w,c
 18426  005D2C  B4D8               	btfsc	status,2,c
 18427  005D2E  D01E               	goto	i1l907
 18428  005D30  6E15               	movwf	??i1___lwdiv& (0+255),c
 18429  005D32  0E01               	movlw	1
 18430  005D34  6E16               	movwf	i1___lwdiv@counter,c
 18431  005D36  5015               	movf	??i1___lwdiv& (0+255),w,c
 18432  005D38  D004               	goto	i1l9629
 18433  005D3A                     i1l9627:
 18434  005D3A  90D8               	bcf	status,0,c
 18435  005D3C  3613               	rlcf	i1___lwdiv@divisor,f,c
 18436  005D3E  3614               	rlcf	i1___lwdiv@divisor+1,f,c
 18437  005D40  2A16               	incf	i1___lwdiv@counter,f,c
 18438  005D42                     i1l9629:
 18439  005D42  AE14               	btfss	i1___lwdiv@divisor+1,7,c
 18440  005D44  D7FA               	goto	i1l9627
 18441  005D46                     i1l9631:
 18442  005D46  90D8               	bcf	status,0,c
 18443  005D48  3617               	rlcf	i1___lwdiv@quotient,f,c
 18444  005D4A  3618               	rlcf	i1___lwdiv@quotient+1,f,c
 18445  005D4C  5013               	movf	i1___lwdiv@divisor,w,c
 18446  005D4E  5C11               	subwf	i1___lwdiv@dividend,w,c
 18447  005D50  5014               	movf	i1___lwdiv@divisor+1,w,c
 18448  005D52  5812               	subwfb	i1___lwdiv@dividend+1,w,c
 18449  005D54  A0D8               	btfss	status,0,c
 18450  005D56  D005               	goto	i1l9639
 18451  005D58  5013               	movf	i1___lwdiv@divisor,w,c
 18452  005D5A  5E11               	subwf	i1___lwdiv@dividend,f,c
 18453  005D5C  5014               	movf	i1___lwdiv@divisor+1,w,c
 18454  005D5E  5A12               	subwfb	i1___lwdiv@dividend+1,f,c
 18455  005D60  8017               	bsf	i1___lwdiv@quotient,0,c
 18456  005D62                     i1l9639:
 18457  005D62  90D8               	bcf	status,0,c
 18458  005D64  3214               	rrcf	i1___lwdiv@divisor+1,f,c
 18459  005D66  3213               	rrcf	i1___lwdiv@divisor,f,c
 18460  005D68  2E16               	decfsz	i1___lwdiv@counter,f,c
 18461  005D6A  D7ED               	goto	i1l9631
 18462  005D6C                     i1l907:
 18463  005D6C  C017  F011         	movff	i1___lwdiv@quotient,?i1___lwdiv
 18464  005D70  C018  F012         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
 18465  005D74  0012               	return	
 18466  005D76                     __end_ofi1___lwdiv:
 18467                           	opt stack 0
 18468                           pclatu	equ	0xFFB
 18469                           pclath	equ	0xFFA
 18470                           tblptru	equ	0xFF8
 18471                           tblptrh	equ	0xFF7
 18472                           tblptrl	equ	0xFF6
 18473                           tablat	equ	0xFF5
 18474                           prodh	equ	0xFF4
 18475                           prodl	equ	0xFF3
 18476                           intcon	equ	0xFF2
 18477                           intcon2	equ	0xFF1
 18478                           postinc0	equ	0xFEE
 18479                           fsr0h	equ	0xFEA
 18480                           fsr0l	equ	0xFE9
 18481                           wreg	equ	0xFE8
 18482                           fsr1h	equ	0xFE2
 18483                           fsr1l	equ	0xFE1
 18484                           bsr	equ	0xFE0
 18485                           indf2	equ	0xFDF
 18486                           postinc2	equ	0xFDE
 18487                           postdec2	equ	0xFDD
 18488                           fsr2h	equ	0xFDA
 18489                           fsr2l	equ	0xFD9
 18490                           status	equ	0xFD8
 18491                           
 18492 ;; *************** function i1_lcd_putc *****************
 18493 ;; Defined at:
 18494 ;;		line 135 in file "lcd.h"
 18495 ;; Parameters:    Size  Location     Type
 18496 ;;  lcd_putc        2   20[COMRAM] PTR unsigned char 
 18497 ;;		 -> LCD_Buffer(32), 
 18498 ;; Auto vars:     Size  Location     Type
 18499 ;;  lcd_putc        2   22[COMRAM] int 
 18500 ;; Return value:  Size  Location     Type
 18501 ;;		None               void
 18502 ;; Registers used:
 18503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18504 ;; Tracked objects:
 18505 ;;		On entry : 0/0
 18506 ;;		On exit  : 0/0
 18507 ;;		Unchanged: 0/0
 18508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18509 ;;      Params:         2       0       0       0       0       0       0       0       0
 18510 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18512 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18513 ;;Total ram usage:        4 bytes
 18514 ;; Hardware stack levels used:    1
 18515 ;; Hardware stack levels required when called:    5
 18516 ;; This function calls:
 18517 ;;		i1_lcd_write_char
 18518 ;; This function is called by:
 18519 ;;		_interrupcaoLOW
 18520 ;; This function uses a non-reentrant model
 18521 ;;
 18522                           
 18523                           	psect	text70
 18524  0061C0                     __ptext70:
 18525                           	opt stack 0
 18526  0061C0                     i1_lcd_putc:
 18527                           	opt stack 19
 18528                           
 18529                           ;lcd.h: 136: int i;
 18530                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
 18531                           
 18532                           ;incstack = 0
 18533                           ;incstack = 0
 18534  0061C0  0E00               	movlw	0
 18535  0061C2  6E18               	movwf	i1lcd_putc@i+1,c
 18536  0061C4  0E00               	movlw	0
 18537  0061C6  6E17               	movwf	i1lcd_putc@i,c
 18538  0061C8  D00C               	goto	i1l8649
 18539  0061CA                     i1l8645:
 18540                           
 18541                           ;lcd.h: 138: lcd_write_char(a[i]);
 18542  0061CA  5017               	movf	i1lcd_putc@i,w,c
 18543  0061CC  2415               	addwf	i1lcd_putc@a,w,c
 18544  0061CE  6ED9               	movwf	fsr2l,c
 18545  0061D0  5018               	movf	i1lcd_putc@i+1,w,c
 18546  0061D2  2016               	addwfc	i1lcd_putc@a+1,w,c
 18547  0061D4  6EDA               	movwf	fsr2h,c
 18548  0061D6  50DF               	movf	indf2,w,c
 18549  0061D8  6E12               	movwf	?i1_lcd_write_char,c
 18550  0061DA  ECA8  F030         	call	i1_lcd_write_char	;wreg free
 18551  0061DE  4A17               	infsnz	i1lcd_putc@i,f,c
 18552  0061E0  2A18               	incf	i1lcd_putc@i+1,f,c
 18553  0061E2                     i1l8649:
 18554  0061E2  5017               	movf	i1lcd_putc@i,w,c
 18555  0061E4  2415               	addwf	i1lcd_putc@a,w,c
 18556  0061E6  6ED9               	movwf	fsr2l,c
 18557  0061E8  5018               	movf	i1lcd_putc@i+1,w,c
 18558  0061EA  2016               	addwfc	i1lcd_putc@a+1,w,c
 18559  0061EC  6EDA               	movwf	fsr2h,c
 18560  0061EE  50DF               	movf	indf2,w,c
 18561  0061F0  B4D8               	btfsc	status,2,c
 18562  0061F2  0012               	return	
 18563  0061F4  D7EA               	goto	i1l8645
 18564  0061F6                     __end_ofi1_lcd_putc:
 18565                           	opt stack 0
 18566                           pclatu	equ	0xFFB
 18567                           pclath	equ	0xFFA
 18568                           tblptru	equ	0xFF8
 18569                           tblptrh	equ	0xFF7
 18570                           tblptrl	equ	0xFF6
 18571                           tablat	equ	0xFF5
 18572                           prodh	equ	0xFF4
 18573                           prodl	equ	0xFF3
 18574                           intcon	equ	0xFF2
 18575                           intcon2	equ	0xFF1
 18576                           postinc0	equ	0xFEE
 18577                           fsr0h	equ	0xFEA
 18578                           fsr0l	equ	0xFE9
 18579                           wreg	equ	0xFE8
 18580                           fsr1h	equ	0xFE2
 18581                           fsr1l	equ	0xFE1
 18582                           bsr	equ	0xFE0
 18583                           indf2	equ	0xFDF
 18584                           postinc2	equ	0xFDE
 18585                           postdec2	equ	0xFDD
 18586                           fsr2h	equ	0xFDA
 18587                           fsr2l	equ	0xFD9
 18588                           status	equ	0xFD8
 18589                           
 18590 ;; *************** function i1_lcd_write_char *****************
 18591 ;; Defined at:
 18592 ;;		line 117 in file "lcd.h"
 18593 ;; Parameters:    Size  Location     Type
 18594 ;;  lcd_write_ch    1   17[COMRAM] unsigned char 
 18595 ;; Auto vars:     Size  Location     Type
 18596 ;;  lcd_write_ch    1   19[COMRAM] unsigned char 
 18597 ;;  lcd_write_ch    1   18[COMRAM] unsigned char 
 18598 ;; Return value:  Size  Location     Type
 18599 ;;		None               void
 18600 ;; Registers used:
 18601 ;;		wreg, status,2, status,0, cstack
 18602 ;; Tracked objects:
 18603 ;;		On entry : 0/0
 18604 ;;		On exit  : 0/0
 18605 ;;		Unchanged: 0/0
 18606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18607 ;;      Params:         1       0       0       0       0       0       0       0       0
 18608 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18609 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18610 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18611 ;;Total ram usage:        3 bytes
 18612 ;; Hardware stack levels used:    1
 18613 ;; Hardware stack levels required when called:    4
 18614 ;; This function calls:
 18615 ;;		i1_Lcd_Port
 18616 ;; This function is called by:
 18617 ;;		i1_lcd_putc
 18618 ;; This function uses a non-reentrant model
 18619 ;;
 18620                           
 18621                           	psect	text71
 18622  006150                     __ptext71:
 18623                           	opt stack 0
 18624  006150                     i1_lcd_write_char:
 18625                           	opt stack 19
 18626                           
 18627                           ;lcd.h: 118: char temp,y;
 18628                           ;lcd.h: 119: temp = a&0x0F;
 18629                           
 18630                           ;incstack = 0
 18631                           ;incstack = 0
 18632  006150  5012               	movf	i1lcd_write_char@a,w,c
 18633  006152  0B0F               	andlw	15
 18634  006154  6E13               	movwf	i1lcd_write_char@temp,c
 18635                           
 18636                           ;lcd.h: 120: y = a&0xF0;
 18637  006156  5012               	movf	i1lcd_write_char@a,w,c
 18638  006158  0BF0               	andlw	240
 18639  00615A  6E14               	movwf	i1lcd_write_char@y,c
 18640                           
 18641                           ;lcd.h: 121: RD2 = 1;
 18642  00615C  8483               	bsf	3971,2,c	;volatile
 18643                           
 18644                           ;lcd.h: 122: Lcd_Port(y>>4);
 18645  00615E  3814               	swapf	i1lcd_write_char@y,w,c
 18646  006160  0B0F               	andlw	15
 18647  006162  6E11               	movwf	?i1_Lcd_Port,c
 18648  006164  ECFB  F030         	call	i1_Lcd_Port	;wreg free
 18649                           
 18650                           ;lcd.h: 123: RD3 = 1;
 18651  006168  8683               	bsf	3971,3,c	;volatile
 18652                           
 18653                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
 18654  00616A  0E1A               	movlw	26
 18655  00616C                     i1u1118_27:
 18656  00616C  2EE8               	decfsz	wreg,f,c
 18657  00616E  D7FE               	goto	i1u1118_27
 18658  006170  D000               	nop2		;nop
 18659                           
 18660                           ;lcd.h: 125: RD3 = 0;
 18661  006172  9683               	bcf	3971,3,c	;volatile
 18662                           
 18663                           ;lcd.h: 126: Lcd_Port(temp);
 18664  006174  C013  F011         	movff	i1lcd_write_char@temp,?i1_Lcd_Port
 18665  006178  ECFB  F030         	call	i1_Lcd_Port	;wreg free
 18666                           
 18667                           ;lcd.h: 127: RD3 = 1;
 18668  00617C  8683               	bsf	3971,3,c	;volatile
 18669                           
 18670                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
 18671  00617E  0E1A               	movlw	26
 18672  006180                     i1u1119_27:
 18673  006180  2EE8               	decfsz	wreg,f,c
 18674  006182  D7FE               	goto	i1u1119_27
 18675  006184  D000               	nop2		;nop
 18676                           
 18677                           ;lcd.h: 129: RD3 = 0;
 18678  006186  9683               	bcf	3971,3,c	;volatile
 18679  006188  0012               	return	
 18680  00618A                     __end_ofi1_lcd_write_char:
 18681                           	opt stack 0
 18682                           pclatu	equ	0xFFB
 18683                           pclath	equ	0xFFA
 18684                           tblptru	equ	0xFF8
 18685                           tblptrh	equ	0xFF7
 18686                           tblptrl	equ	0xFF6
 18687                           tablat	equ	0xFF5
 18688                           prodh	equ	0xFF4
 18689                           prodl	equ	0xFF3
 18690                           intcon	equ	0xFF2
 18691                           intcon2	equ	0xFF1
 18692                           postinc0	equ	0xFEE
 18693                           fsr0h	equ	0xFEA
 18694                           fsr0l	equ	0xFE9
 18695                           wreg	equ	0xFE8
 18696                           fsr1h	equ	0xFE2
 18697                           fsr1l	equ	0xFE1
 18698                           bsr	equ	0xFE0
 18699                           indf2	equ	0xFDF
 18700                           postinc2	equ	0xFDE
 18701                           postdec2	equ	0xFDD
 18702                           fsr2h	equ	0xFDA
 18703                           fsr2l	equ	0xFD9
 18704                           status	equ	0xFD8
 18705                           
 18706 ;; *************** function i1_lcd_gotoxy *****************
 18707 ;; Defined at:
 18708 ;;		line 72 in file "lcd.h"
 18709 ;; Parameters:    Size  Location     Type
 18710 ;;  lcd_gotoxy      1   19[COMRAM] unsigned char 
 18711 ;;  lcd_gotoxy      1   20[COMRAM] unsigned char 
 18712 ;; Auto vars:     Size  Location     Type
 18713 ;;  lcd_gotoxy      1   23[COMRAM] unsigned char 
 18714 ;;  lcd_gotoxy      1   22[COMRAM] unsigned char 
 18715 ;;  lcd_gotoxy      1   21[COMRAM] unsigned char 
 18716 ;; Return value:  Size  Location     Type
 18717 ;;		None               void
 18718 ;; Registers used:
 18719 ;;		wreg, status,2, status,0, cstack
 18720 ;; Tracked objects:
 18721 ;;		On entry : 0/0
 18722 ;;		On exit  : 0/0
 18723 ;;		Unchanged: 0/0
 18724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18725 ;;      Params:         2       0       0       0       0       0       0       0       0
 18726 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18727 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18728 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18729 ;;Total ram usage:        5 bytes
 18730 ;; Hardware stack levels used:    1
 18731 ;; Hardware stack levels required when called:    5
 18732 ;; This function calls:
 18733 ;;		i1_Lcd_Cmd
 18734 ;; This function is called by:
 18735 ;;		_interrupcaoLOW
 18736 ;; This function uses a non-reentrant model
 18737 ;;
 18738                           
 18739                           	psect	text72
 18740  005D76                     __ptext72:
 18741                           	opt stack 0
 18742  005D76                     i1_lcd_gotoxy:
 18743                           	opt stack 19
 18744                           
 18745                           ;lcd.h: 73: char temp,z,y;
 18746                           ;lcd.h: 74: if(a == 1)
 18747                           
 18748                           ;incstack = 0
 18749                           ;incstack = 0
 18750  005D76  0414               	decf	i1lcd_gotoxy@a,w,c
 18751  005D78  A4D8               	btfss	status,2,c
 18752  005D7A  D012               	goto	i1l8617
 18753                           
 18754                           ;lcd.h: 75: {
 18755                           ;lcd.h: 76: temp = 0x80 + b - 1;
 18756  005D7C  5015               	movf	i1lcd_gotoxy@b,w,c
 18757  005D7E  0F7F               	addlw	127
 18758  005D80  6E18               	movwf	i1lcd_gotoxy@temp,c
 18759                           
 18760                           ;lcd.h: 77: z = temp>>4;
 18761  005D82  3818               	swapf	i1lcd_gotoxy@temp,w,c
 18762  005D84  0B0F               	andlw	15
 18763  005D86  6E16               	movwf	i1lcd_gotoxy@z,c
 18764                           
 18765                           ;lcd.h: 78: y = temp & 0x0F;
 18766  005D88  5018               	movf	i1lcd_gotoxy@temp,w,c
 18767  005D8A  0B0F               	andlw	15
 18768  005D8C  6E17               	movwf	i1lcd_gotoxy@y,c
 18769                           
 18770                           ;lcd.h: 79: Lcd_Cmd(z);
 18771  005D8E  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 18772  005D92  EC57  F031         	call	i1_Lcd_Cmd	;wreg free
 18773                           
 18774                           ;lcd.h: 80: Lcd_Cmd(y);
 18775  005D96  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 18776  005D9A  EC57  F031         	call	i1_Lcd_Cmd	;wreg free
 18777                           
 18778                           ;lcd.h: 81: }
 18779  005D9E  D015               	goto	i1l121
 18780  005DA0                     i1l8617:
 18781                           
 18782                           ;lcd.h: 82: else if(a == 2)
 18783  005DA0  5014               	movf	i1lcd_gotoxy@a,w,c
 18784  005DA2  0A02               	xorlw	2
 18785  005DA4  A4D8               	btfss	status,2,c
 18786  005DA6  D011               	goto	i1l121
 18787                           
 18788                           ;lcd.h: 83: {
 18789                           ;lcd.h: 84: temp = 0xC0 + b - 1;
 18790  005DA8  5015               	movf	i1lcd_gotoxy@b,w,c
 18791  005DAA  0FBF               	addlw	191
 18792  005DAC  6E18               	movwf	i1lcd_gotoxy@temp,c
 18793                           
 18794                           ;lcd.h: 85: z = temp>>4;
 18795  005DAE  3818               	swapf	i1lcd_gotoxy@temp,w,c
 18796  005DB0  0B0F               	andlw	15
 18797  005DB2  6E16               	movwf	i1lcd_gotoxy@z,c
 18798                           
 18799                           ;lcd.h: 86: y = temp & 0x0F;
 18800  005DB4  5018               	movf	i1lcd_gotoxy@temp,w,c
 18801  005DB6  0B0F               	andlw	15
 18802  005DB8  6E17               	movwf	i1lcd_gotoxy@y,c
 18803                           
 18804                           ;lcd.h: 87: Lcd_Cmd(z);
 18805  005DBA  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 18806  005DBE  EC57  F031         	call	i1_Lcd_Cmd	;wreg free
 18807                           
 18808                           ;lcd.h: 88: Lcd_Cmd(y);
 18809  005DC2  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 18810  005DC6  EC57  F031         	call	i1_Lcd_Cmd	;wreg free
 18811  005DCA                     i1l121:
 18812  005DCA  0012               	return	
 18813  005DCC                     __end_ofi1_lcd_gotoxy:
 18814                           	opt stack 0
 18815                           pclatu	equ	0xFFB
 18816                           pclath	equ	0xFFA
 18817                           tblptru	equ	0xFF8
 18818                           tblptrh	equ	0xFF7
 18819                           tblptrl	equ	0xFF6
 18820                           tablat	equ	0xFF5
 18821                           prodh	equ	0xFF4
 18822                           prodl	equ	0xFF3
 18823                           intcon	equ	0xFF2
 18824                           intcon2	equ	0xFF1
 18825                           postinc0	equ	0xFEE
 18826                           fsr0h	equ	0xFEA
 18827                           fsr0l	equ	0xFE9
 18828                           wreg	equ	0xFE8
 18829                           fsr1h	equ	0xFE2
 18830                           fsr1l	equ	0xFE1
 18831                           bsr	equ	0xFE0
 18832                           indf2	equ	0xFDF
 18833                           postinc2	equ	0xFDE
 18834                           postdec2	equ	0xFDD
 18835                           fsr2h	equ	0xFDA
 18836                           fsr2l	equ	0xFD9
 18837                           status	equ	0xFD8
 18838                           
 18839 ;; *************** function i1_Lcd_Cmd *****************
 18840 ;; Defined at:
 18841 ;;		line 53 in file "lcd.h"
 18842 ;; Parameters:    Size  Location     Type
 18843 ;;  Lcd_Cmd         1   17[COMRAM] unsigned char 
 18844 ;; Auto vars:     Size  Location     Type
 18845 ;;		None
 18846 ;; Return value:  Size  Location     Type
 18847 ;;		None               void
 18848 ;; Registers used:
 18849 ;;		wreg, cstack
 18850 ;; Tracked objects:
 18851 ;;		On entry : 0/0
 18852 ;;		On exit  : 0/0
 18853 ;;		Unchanged: 0/0
 18854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18855 ;;      Params:         1       0       0       0       0       0       0       0       0
 18856 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18857 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18858 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18859 ;;Total ram usage:        2 bytes
 18860 ;; Hardware stack levels used:    1
 18861 ;; Hardware stack levels required when called:    4
 18862 ;; This function calls:
 18863 ;;		i1_Lcd_Port
 18864 ;; This function is called by:
 18865 ;;		i1_lcd_gotoxy
 18866 ;; This function uses a non-reentrant model
 18867 ;;
 18868                           
 18869                           	psect	text73
 18870  0062AE                     __ptext73:
 18871                           	opt stack 0
 18872  0062AE                     i1_Lcd_Cmd:
 18873                           	opt stack 19
 18874                           
 18875                           ;lcd.h: 54: RD2 = 0;
 18876                           
 18877                           ;incstack = 0
 18878                           ;incstack = 0
 18879  0062AE  9483               	bcf	3971,2,c	;volatile
 18880                           
 18881                           ;lcd.h: 55: Lcd_Port(a);
 18882  0062B0  C012  F011         	movff	i1Lcd_Cmd@a,?i1_Lcd_Port
 18883  0062B4  ECFB  F030         	call	i1_Lcd_Port	;wreg free
 18884                           
 18885                           ;lcd.h: 56: RD3 = 1;
 18886  0062B8  8683               	bsf	3971,3,c	;volatile
 18887                           
 18888                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 18889  0062BA  0E0B               	movlw	11
 18890  0062BC  6E13               	movwf	??i1_Lcd_Cmd& (0+255),c
 18891  0062BE  0E62               	movlw	98
 18892  0062C0                     i1u1120_27:
 18893  0062C0  2EE8               	decfsz	wreg,f,c
 18894  0062C2  D7FE               	goto	i1u1120_27
 18895  0062C4  2E13               	decfsz	??i1_Lcd_Cmd& (0+255),f,c
 18896  0062C6  D7FC               	goto	i1u1120_27
 18897  0062C8  F000               	nop	
 18898                           
 18899                           ;lcd.h: 58: RD3 = 0;
 18900  0062CA  9683               	bcf	3971,3,c	;volatile
 18901  0062CC  0012               	return	
 18902  0062CE                     __end_ofi1_Lcd_Cmd:
 18903                           	opt stack 0
 18904                           pclatu	equ	0xFFB
 18905                           pclath	equ	0xFFA
 18906                           tblptru	equ	0xFF8
 18907                           tblptrh	equ	0xFF7
 18908                           tblptrl	equ	0xFF6
 18909                           tablat	equ	0xFF5
 18910                           prodh	equ	0xFF4
 18911                           prodl	equ	0xFF3
 18912                           intcon	equ	0xFF2
 18913                           intcon2	equ	0xFF1
 18914                           postinc0	equ	0xFEE
 18915                           fsr0h	equ	0xFEA
 18916                           fsr0l	equ	0xFE9
 18917                           wreg	equ	0xFE8
 18918                           fsr1h	equ	0xFE2
 18919                           fsr1l	equ	0xFE1
 18920                           bsr	equ	0xFE0
 18921                           indf2	equ	0xFDF
 18922                           postinc2	equ	0xFDE
 18923                           postdec2	equ	0xFDD
 18924                           fsr2h	equ	0xFDA
 18925                           fsr2l	equ	0xFD9
 18926                           status	equ	0xFD8
 18927                           
 18928 ;; *************** function i1_Lcd_Port *****************
 18929 ;; Defined at:
 18930 ;;		line 28 in file "lcd.h"
 18931 ;; Parameters:    Size  Location     Type
 18932 ;;  Lcd_Port        1   16[COMRAM] unsigned char 
 18933 ;; Auto vars:     Size  Location     Type
 18934 ;;		None
 18935 ;; Return value:  Size  Location     Type
 18936 ;;		None               void
 18937 ;; Registers used:
 18938 ;;		None
 18939 ;; Tracked objects:
 18940 ;;		On entry : 0/0
 18941 ;;		On exit  : 0/0
 18942 ;;		Unchanged: 0/0
 18943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18944 ;;      Params:         1       0       0       0       0       0       0       0       0
 18945 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18946 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18947 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18948 ;;Total ram usage:        1 bytes
 18949 ;; Hardware stack levels used:    1
 18950 ;; Hardware stack levels required when called:    3
 18951 ;; This function calls:
 18952 ;;		Nothing
 18953 ;; This function is called by:
 18954 ;;		i1_Lcd_Cmd
 18955 ;;		i1_lcd_write_char
 18956 ;; This function uses a non-reentrant model
 18957 ;;
 18958                           
 18959                           	psect	text74
 18960  0061F6                     __ptext74:
 18961                           	opt stack 0
 18962  0061F6                     i1_Lcd_Port:
 18963                           	opt stack 19
 18964                           
 18965                           ;lcd.h: 29: if(a & 1)
 18966                           
 18967                           ;incstack = 0
 18968                           ;incstack = 0
 18969  0061F6  A011               	btfss	i1Lcd_Port@a,0,c
 18970  0061F8  D002               	goto	i1l101
 18971                           
 18972                           ;lcd.h: 30: RD4 = 1;
 18973  0061FA  8883               	bsf	3971,4,c	;volatile
 18974  0061FC  D001               	goto	i1l102
 18975  0061FE                     i1l101:
 18976                           
 18977                           ;lcd.h: 31: else
 18978                           ;lcd.h: 32: RD4 = 0;
 18979  0061FE  9883               	bcf	3971,4,c	;volatile
 18980  006200                     i1l102:
 18981                           
 18982                           ;lcd.h: 34: if(a & 2)
 18983  006200  A211               	btfss	i1Lcd_Port@a,1,c
 18984  006202  D002               	goto	i1l103
 18985                           
 18986                           ;lcd.h: 35: RD5 = 1;
 18987  006204  8A83               	bsf	3971,5,c	;volatile
 18988  006206  D001               	goto	i1l104
 18989  006208                     i1l103:
 18990                           
 18991                           ;lcd.h: 36: else
 18992                           ;lcd.h: 37: RD5 = 0;
 18993  006208  9A83               	bcf	3971,5,c	;volatile
 18994  00620A                     i1l104:
 18995                           
 18996                           ;lcd.h: 39: if(a & 4)
 18997  00620A  A411               	btfss	i1Lcd_Port@a,2,c
 18998  00620C  D002               	goto	i1l105
 18999                           
 19000                           ;lcd.h: 40: RD6 = 1;
 19001  00620E  8C83               	bsf	3971,6,c	;volatile
 19002  006210  D001               	goto	i1l106
 19003  006212                     i1l105:
 19004                           
 19005                           ;lcd.h: 41: else
 19006                           ;lcd.h: 42: RD6 = 0;
 19007  006212  9C83               	bcf	3971,6,c	;volatile
 19008  006214                     i1l106:
 19009                           
 19010                           ;lcd.h: 44: if(a & 8)
 19011  006214  A611               	btfss	i1Lcd_Port@a,3,c
 19012  006216  D002               	goto	i1l107
 19013                           
 19014                           ;lcd.h: 45: RD7 = 1;
 19015  006218  8E83               	bsf	3971,7,c	;volatile
 19016  00621A  D001               	goto	i1l109
 19017  00621C                     i1l107:
 19018                           
 19019                           ;lcd.h: 46: else
 19020                           ;lcd.h: 47: RD7 = 0;
 19021  00621C  9E83               	bcf	3971,7,c	;volatile
 19022  00621E                     i1l109:
 19023  00621E  0012               	return	
 19024  006220                     __end_ofi1_Lcd_Port:
 19025                           	opt stack 0
 19026                           pclatu	equ	0xFFB
 19027                           pclath	equ	0xFFA
 19028                           tblptru	equ	0xFF8
 19029                           tblptrh	equ	0xFF7
 19030                           tblptrl	equ	0xFF6
 19031                           tablat	equ	0xFF5
 19032                           prodh	equ	0xFF4
 19033                           prodl	equ	0xFF3
 19034                           intcon	equ	0xFF2
 19035                           intcon2	equ	0xFF1
 19036                           postinc0	equ	0xFEE
 19037                           fsr0h	equ	0xFEA
 19038                           fsr0l	equ	0xFE9
 19039                           wreg	equ	0xFE8
 19040                           fsr1h	equ	0xFE2
 19041                           fsr1l	equ	0xFE1
 19042                           bsr	equ	0xFE0
 19043                           indf2	equ	0xFDF
 19044                           postinc2	equ	0xFDE
 19045                           postdec2	equ	0xFDD
 19046                           fsr2h	equ	0xFDA
 19047                           fsr2l	equ	0xFD9
 19048                           status	equ	0xFD8
 19049                           
 19050 ;; *************** function _interrupcaoHIGH *****************
 19051 ;; Defined at:
 19052 ;;		line 211 in file "main.c"
 19053 ;; Parameters:    Size  Location     Type
 19054 ;;		None
 19055 ;; Auto vars:     Size  Location     Type
 19056 ;;  esp_server_d    1   15[COMRAM] unsigned char 
 19057 ;; Return value:  Size  Location     Type
 19058 ;;		None               void
 19059 ;; Registers used:
 19060 ;;		wreg, status,2, status,0, cstack
 19061 ;; Tracked objects:
 19062 ;;		On entry : 0/0
 19063 ;;		On exit  : 0/0
 19064 ;;		Unchanged: 0/0
 19065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19066 ;;      Params:         0       0       0       0       0       0       0       0       0
 19067 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19068 ;;      Temps:         14       0       0       0       0       0       0       0       0
 19069 ;;      Totals:        15       0       0       0       0       0       0       0       0
 19070 ;;Total ram usage:       15 bytes
 19071 ;; Hardware stack levels used:    1
 19072 ;; Hardware stack levels required when called:    2
 19073 ;; This function calls:
 19074 ;;		_control_LED
 19075 ;; This function is called by:
 19076 ;;		Interrupt level 2
 19077 ;; This function uses a non-reentrant model
 19078 ;;
 19079                           
 19080                           	psect	intcode
 19081  000008                     __pintcode:
 19082                           	opt stack 0
 19083  000008                     _interrupcaoHIGH:
 19084                           	opt stack 17
 19085                           
 19086                           ;incstack = 0
 19087  000008  CFFA F002          	movff	pclath,??_interrupcaoHIGH
 19088  00000C  CFFB F003          	movff	pclatu,??_interrupcaoHIGH+1
 19089  000010  CFE9 F004          	movff	fsr0l,??_interrupcaoHIGH+2
 19090  000014  EDCF  F02C         	call	int_func,f	;refresh shadow registers
 19091                           pclatu	equ	0xFFB
 19092                           pclath	equ	0xFFA
 19093                           tblptru	equ	0xFF8
 19094                           tblptrh	equ	0xFF7
 19095                           tblptrl	equ	0xFF6
 19096                           tablat	equ	0xFF5
 19097                           prodh	equ	0xFF4
 19098                           prodl	equ	0xFF3
 19099                           intcon	equ	0xFF2
 19100                           intcon2	equ	0xFF1
 19101                           postinc0	equ	0xFEE
 19102                           fsr0h	equ	0xFEA
 19103                           fsr0l	equ	0xFE9
 19104                           wreg	equ	0xFE8
 19105                           fsr1h	equ	0xFE2
 19106                           fsr1l	equ	0xFE1
 19107                           bsr	equ	0xFE0
 19108                           indf2	equ	0xFDF
 19109                           postinc2	equ	0xFDE
 19110                           postdec2	equ	0xFDD
 19111                           fsr2h	equ	0xFDA
 19112                           fsr2l	equ	0xFD9
 19113                           status	equ	0xFD8
 19114                           
 19115                           	psect	intcode_body
 19116  00599E                     __pintcode_body:
 19117                           	opt stack 17
 19118  00599E                     int_func:
 19119                           	opt stack 17
 19120  00599E  0006               	pop		; remove dummy address from shadow register refresh
 19121  0059A0  CFEA F005          	movff	fsr0h,??_interrupcaoHIGH+3
 19122  0059A4  CFE1 F006          	movff	fsr1l,??_interrupcaoHIGH+4
 19123  0059A8  CFE2 F007          	movff	fsr1h,??_interrupcaoHIGH+5
 19124  0059AC  CFD9 F008          	movff	fsr2l,??_interrupcaoHIGH+6
 19125  0059B0  CFDA F009          	movff	fsr2h,??_interrupcaoHIGH+7
 19126  0059B4  CFF3 F00A          	movff	prodl,??_interrupcaoHIGH+8
 19127  0059B8  CFF4 F00B          	movff	prodh,??_interrupcaoHIGH+9
 19128  0059BC  CFF6 F00C          	movff	tblptrl,??_interrupcaoHIGH+10
 19129  0059C0  CFF7 F00D          	movff	tblptrh,??_interrupcaoHIGH+11
 19130  0059C4  CFF8 F00E          	movff	tblptru,??_interrupcaoHIGH+12
 19131  0059C8  CFF5 F00F          	movff	tablat,??_interrupcaoHIGH+13
 19132  0059CC                     
 19133                           ;main.c: 212: char esp_server_data;
 19134                           ;main.c: 213: if (RCIF == 1)
 19135  0059CC  AA9E               	btfss	3998,5,c	;volatile
 19136  0059CE  D001               	goto	i2u529_41
 19137  0059D0  D001               	goto	i2u529_40
 19138  0059D2                     i2u529_41:
 19139  0059D2  D009               	goto	i2l198
 19140  0059D4                     i2u529_40:
 19141  0059D4                     
 19142                           ;main.c: 214: {
 19143                           ;main.c: 215: esp_server_data = RCREG;
 19144  0059D4  CFAE F010          	movff	4014,interrupcaoHIGH@esp_server_data	;volatile
 19145  0059D8                     
 19146                           ;main.c: 216: control_LED(esp_server_data);
 19147  0059D8  C010  F001         	movff	interrupcaoHIGH@esp_server_data,?_control_LED
 19148  0059DC  EC67  F031         	call	_control_LED	;wreg free
 19149  0059E0                     
 19150                           ;main.c: 217: RCIF =0 ;
 19151  0059E0  9A9E               	bcf	3998,5,c	;volatile
 19152  0059E2                     
 19153                           ;main.c: 218: RCIE = 0;
 19154  0059E2  9A9D               	bcf	3997,5,c	;volatile
 19155  0059E4  D000               	goto	i2l198
 19156  0059E6                     i2l198:
 19157  0059E6  C00F  FFF5         	movff	??_interrupcaoHIGH+13,tablat
 19158  0059EA  C00E  FFF8         	movff	??_interrupcaoHIGH+12,tblptru
 19159  0059EE  C00D  FFF7         	movff	??_interrupcaoHIGH+11,tblptrh
 19160  0059F2  C00C  FFF6         	movff	??_interrupcaoHIGH+10,tblptrl
 19161  0059F6  C00B  FFF4         	movff	??_interrupcaoHIGH+9,prodh
 19162  0059FA  C00A  FFF3         	movff	??_interrupcaoHIGH+8,prodl
 19163  0059FE  C009  FFDA         	movff	??_interrupcaoHIGH+7,fsr2h
 19164  005A02  C008  FFD9         	movff	??_interrupcaoHIGH+6,fsr2l
 19165  005A06  C007  FFE2         	movff	??_interrupcaoHIGH+5,fsr1h
 19166  005A0A  C006  FFE1         	movff	??_interrupcaoHIGH+4,fsr1l
 19167  005A0E  C005  FFEA         	movff	??_interrupcaoHIGH+3,fsr0h
 19168  005A12  C004  FFE9         	movff	??_interrupcaoHIGH+2,fsr0l
 19169  005A16  C003  FFFB         	movff	??_interrupcaoHIGH+1,pclatu
 19170  005A1A  C002  FFFA         	movff	??_interrupcaoHIGH,pclath
 19171  005A1E  0011               	retfie		f
 19172  005A20                     __end_of_interrupcaoHIGH:
 19173                           	opt stack 0
 19174                           pclatu	equ	0xFFB
 19175                           pclath	equ	0xFFA
 19176                           tblptru	equ	0xFF8
 19177                           tblptrh	equ	0xFF7
 19178                           tblptrl	equ	0xFF6
 19179                           tablat	equ	0xFF5
 19180                           prodh	equ	0xFF4
 19181                           prodl	equ	0xFF3
 19182                           intcon	equ	0xFF2
 19183                           intcon2	equ	0xFF1
 19184                           postinc0	equ	0xFEE
 19185                           fsr0h	equ	0xFEA
 19186                           fsr0l	equ	0xFE9
 19187                           wreg	equ	0xFE8
 19188                           fsr1h	equ	0xFE2
 19189                           fsr1l	equ	0xFE1
 19190                           bsr	equ	0xFE0
 19191                           indf2	equ	0xFDF
 19192                           postinc2	equ	0xFDE
 19193                           postdec2	equ	0xFDD
 19194                           fsr2h	equ	0xFDA
 19195                           fsr2l	equ	0xFD9
 19196                           status	equ	0xFD8
 19197                           
 19198 ;; *************** function _control_LED *****************
 19199 ;; Defined at:
 19200 ;;		line 134 in file "main.c"
 19201 ;; Parameters:    Size  Location     Type
 19202 ;;  data            1    0[COMRAM] unsigned char 
 19203 ;; Auto vars:     Size  Location     Type
 19204 ;;		None
 19205 ;; Return value:  Size  Location     Type
 19206 ;;		None               void
 19207 ;; Registers used:
 19208 ;;		wreg, status,2, status,0, cstack
 19209 ;; Tracked objects:
 19210 ;;		On entry : 0/0
 19211 ;;		On exit  : 0/0
 19212 ;;		Unchanged: 0/0
 19213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19214 ;;      Params:         1       0       0       0       0       0       0       0       0
 19215 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19216 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19217 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19218 ;;Total ram usage:        1 bytes
 19219 ;; Hardware stack levels used:    1
 19220 ;; Hardware stack levels required when called:    1
 19221 ;; This function calls:
 19222 ;;		_led_off
 19223 ;;		_led_on
 19224 ;; This function is called by:
 19225 ;;		_interrupcaoHIGH
 19226 ;; This function uses a non-reentrant model
 19227 ;;
 19228                           
 19229                           	psect	text76
 19230  0062CE                     __ptext76:
 19231                           	opt stack 0
 19232  0062CE                     _control_LED:
 19233                           	opt stack 17
 19234                           
 19235                           ;main.c: 135: if(data == 170){
 19236                           
 19237                           ;incstack = 0
 19238                           ;incstack = 0
 19239  0062CE  5001               	movf	control_LED@data,w,c
 19240  0062D0  0AAA               	xorlw	170
 19241  0062D2  A4D8               	btfss	status,2,c
 19242  0062D4  D003               	goto	i2l7073
 19243                           
 19244                           ;main.c: 136: led_on();
 19245  0062D6  EC9B  F031         	call	_led_on	;wreg free
 19246                           
 19247                           ;main.c: 137: }else if(data == 174){
 19248  0062DA  D005               	goto	i2l185
 19249  0062DC                     i2l7073:
 19250  0062DC  5001               	movf	control_LED@data,w,c
 19251  0062DE  0AAE               	xorlw	174
 19252  0062E0  B4D8               	btfsc	status,2,c
 19253                           
 19254                           ;main.c: 138: led_off();
 19255  0062E2  EC9E  F031         	call	_led_off	;wreg free
 19256  0062E6                     i2l185:
 19257  0062E6  0012               	return	
 19258  0062E8                     __end_of_control_LED:
 19259                           	opt stack 0
 19260                           pclatu	equ	0xFFB
 19261                           pclath	equ	0xFFA
 19262                           tblptru	equ	0xFF8
 19263                           tblptrh	equ	0xFF7
 19264                           tblptrl	equ	0xFF6
 19265                           tablat	equ	0xFF5
 19266                           prodh	equ	0xFF4
 19267                           prodl	equ	0xFF3
 19268                           intcon	equ	0xFF2
 19269                           intcon2	equ	0xFF1
 19270                           postinc0	equ	0xFEE
 19271                           fsr0h	equ	0xFEA
 19272                           fsr0l	equ	0xFE9
 19273                           wreg	equ	0xFE8
 19274                           fsr1h	equ	0xFE2
 19275                           fsr1l	equ	0xFE1
 19276                           bsr	equ	0xFE0
 19277                           indf2	equ	0xFDF
 19278                           postinc2	equ	0xFDE
 19279                           postdec2	equ	0xFDD
 19280                           fsr2h	equ	0xFDA
 19281                           fsr2l	equ	0xFD9
 19282                           status	equ	0xFD8
 19283                           
 19284 ;; *************** function _led_on *****************
 19285 ;; Defined at:
 19286 ;;		line 113 in file "main.c"
 19287 ;; Parameters:    Size  Location     Type
 19288 ;;		None
 19289 ;; Auto vars:     Size  Location     Type
 19290 ;;		None
 19291 ;; Return value:  Size  Location     Type
 19292 ;;		None               void
 19293 ;; Registers used:
 19294 ;;		wreg, status,2
 19295 ;; Tracked objects:
 19296 ;;		On entry : 0/0
 19297 ;;		On exit  : 0/0
 19298 ;;		Unchanged: 0/0
 19299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19300 ;;      Params:         0       0       0       0       0       0       0       0       0
 19301 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19302 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19303 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19304 ;;Total ram usage:        0 bytes
 19305 ;; Hardware stack levels used:    1
 19306 ;; This function calls:
 19307 ;;		Nothing
 19308 ;; This function is called by:
 19309 ;;		_control_LED
 19310 ;;		_FSM
 19311 ;; This function uses a non-reentrant model
 19312 ;;
 19313                           
 19314                           	psect	text77
 19315  006336                     __ptext77:
 19316                           	opt stack 0
 19317  006336                     _led_on:
 19318                           	opt stack 17
 19319                           
 19320                           ;main.c: 114: LATB = 0x01;
 19321                           
 19322                           ;incstack = 0
 19323                           ;incstack = 0
 19324  006336  0E01               	movlw	1
 19325  006338  6E8A               	movwf	3978,c	;volatile
 19326  00633A  0012               	return	
 19327  00633C                     __end_of_led_on:
 19328                           	opt stack 0
 19329                           pclatu	equ	0xFFB
 19330                           pclath	equ	0xFFA
 19331                           tblptru	equ	0xFF8
 19332                           tblptrh	equ	0xFF7
 19333                           tblptrl	equ	0xFF6
 19334                           tablat	equ	0xFF5
 19335                           prodh	equ	0xFF4
 19336                           prodl	equ	0xFF3
 19337                           intcon	equ	0xFF2
 19338                           intcon2	equ	0xFF1
 19339                           postinc0	equ	0xFEE
 19340                           fsr0h	equ	0xFEA
 19341                           fsr0l	equ	0xFE9
 19342                           wreg	equ	0xFE8
 19343                           fsr1h	equ	0xFE2
 19344                           fsr1l	equ	0xFE1
 19345                           bsr	equ	0xFE0
 19346                           indf2	equ	0xFDF
 19347                           postinc2	equ	0xFDE
 19348                           postdec2	equ	0xFDD
 19349                           fsr2h	equ	0xFDA
 19350                           fsr2l	equ	0xFD9
 19351                           status	equ	0xFD8
 19352                           
 19353 ;; *************** function _led_off *****************
 19354 ;; Defined at:
 19355 ;;		line 110 in file "main.c"
 19356 ;; Parameters:    Size  Location     Type
 19357 ;;		None
 19358 ;; Auto vars:     Size  Location     Type
 19359 ;;		None
 19360 ;; Return value:  Size  Location     Type
 19361 ;;		None               void
 19362 ;; Registers used:
 19363 ;;		wreg, status,2
 19364 ;; Tracked objects:
 19365 ;;		On entry : 0/0
 19366 ;;		On exit  : 0/0
 19367 ;;		Unchanged: 0/0
 19368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19369 ;;      Params:         0       0       0       0       0       0       0       0       0
 19370 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19371 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19372 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19373 ;;Total ram usage:        0 bytes
 19374 ;; Hardware stack levels used:    1
 19375 ;; This function calls:
 19376 ;;		Nothing
 19377 ;; This function is called by:
 19378 ;;		_control_LED
 19379 ;;		_FSM
 19380 ;; This function uses a non-reentrant model
 19381 ;;
 19382                           
 19383                           	psect	text78
 19384  00633C                     __ptext78:
 19385                           	opt stack 0
 19386  00633C                     _led_off:
 19387                           	opt stack 17
 19388                           
 19389                           ;main.c: 111: LATB = 0x00;
 19390                           
 19391                           ;incstack = 0
 19392                           ;incstack = 0
 19393  00633C  0E00               	movlw	0
 19394  00633E  6E8A               	movwf	3978,c	;volatile
 19395  006340  0012               	return	
 19396  006342                     __end_of_led_off:
 19397                           	opt stack 0
 19398                           pclatu	equ	0xFFB
 19399                           pclath	equ	0xFFA
 19400                           tblptru	equ	0xFF8
 19401                           tblptrh	equ	0xFF7
 19402                           tblptrl	equ	0xFF6
 19403                           tablat	equ	0xFF5
 19404                           prodh	equ	0xFF4
 19405                           prodl	equ	0xFF3
 19406                           intcon	equ	0xFF2
 19407                           intcon2	equ	0xFF1
 19408                           postinc0	equ	0xFEE
 19409                           fsr0h	equ	0xFEA
 19410                           fsr0l	equ	0xFE9
 19411                           wreg	equ	0xFE8
 19412                           fsr1h	equ	0xFE2
 19413                           fsr1l	equ	0xFE1
 19414                           bsr	equ	0xFE0
 19415                           indf2	equ	0xFDF
 19416                           postinc2	equ	0xFDE
 19417                           postdec2	equ	0xFDD
 19418                           fsr2h	equ	0xFDA
 19419                           fsr2l	equ	0xFD9
 19420                           status	equ	0xFD8
 19421                           pclatu	equ	0xFFB
 19422                           pclath	equ	0xFFA
 19423                           tblptru	equ	0xFF8
 19424                           tblptrh	equ	0xFF7
 19425                           tblptrl	equ	0xFF6
 19426                           tablat	equ	0xFF5
 19427                           prodh	equ	0xFF4
 19428                           prodl	equ	0xFF3
 19429                           intcon	equ	0xFF2
 19430                           intcon2	equ	0xFF1
 19431                           postinc0	equ	0xFEE
 19432                           fsr0h	equ	0xFEA
 19433                           fsr0l	equ	0xFE9
 19434                           wreg	equ	0xFE8
 19435                           fsr1h	equ	0xFE2
 19436                           fsr1l	equ	0xFE1
 19437                           bsr	equ	0xFE0
 19438                           indf2	equ	0xFDF
 19439                           postinc2	equ	0xFDE
 19440                           postdec2	equ	0xFDD
 19441                           fsr2h	equ	0xFDA
 19442                           fsr2l	equ	0xFD9
 19443                           status	equ	0xFD8
 19444                           
 19445                           	psect	rparam
 19446  0000                     pclatu	equ	0xFFB
 19447                           pclath	equ	0xFFA
 19448                           tblptru	equ	0xFF8
 19449                           tblptrh	equ	0xFF7
 19450                           tblptrl	equ	0xFF6
 19451                           tablat	equ	0xFF5
 19452                           prodh	equ	0xFF4
 19453                           prodl	equ	0xFF3
 19454                           intcon	equ	0xFF2
 19455                           intcon2	equ	0xFF1
 19456                           postinc0	equ	0xFEE
 19457                           fsr0h	equ	0xFEA
 19458                           fsr0l	equ	0xFE9
 19459                           wreg	equ	0xFE8
 19460                           fsr1h	equ	0xFE2
 19461                           fsr1l	equ	0xFE1
 19462                           bsr	equ	0xFE0
 19463                           indf2	equ	0xFDF
 19464                           postinc2	equ	0xFDE
 19465                           postdec2	equ	0xFDD
 19466                           fsr2h	equ	0xFDA
 19467                           fsr2l	equ	0xFD9
 19468                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    118
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      79
    BANK0           160     82      82
    BANK1           256    129     166
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?___ftsub	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___asftsub	float  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?__tdiv_to_l_	unsigned long  size(2) Largest target is 0

    ?__div_to_l_	unsigned long  size(2) Largest target is 0

    ?___asftadd	float  size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 0

    ?_scale	float  size(2) Largest target is 0

    ?_fround	float  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awmod	int  size(2) Largest target is 0

    ?_Read_LDR	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?_Obtener_Distancia	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 4
		 -> USART_Init@baud_rate(BANK1[4]), 

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___altoft	float  size(2) Largest target is 0

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK1[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[10]), STR_2(CODE[18]), STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S552$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupcaoLOW in COMRAM

    _interrupcaoLOW->i1_Read_LDR
    i1_sprintf->i1_fround
    i1_sprintf->i1_scale
    i1___lltoft->i1___ftpack
    i1___llmod->i1___lldiv
    i1___fttol->i1___wmul
    i1___asftsub->i1___ftsub
    i1___ftsub->i1___ftadd
    i1___asftmul->i1___ftmul
    i1___asftadd->i1_fround
    i1___ftadd->i1___ftpack
    i1_scale->i1___ftmul
    i1___wmul->i1___awdiv
    i1___awdiv->i1___awmod
    i1_fround->i1___ftmul
    i1_Read_LDR->i1___ftmul
    i1___ftmul->i1___fttol
    i1___ftdiv->i1___ftmul
    i1___awtoft->i1___ftpack
    i1_Obtener_Distancia->i1___lwdiv
    i1_lcd_putc->i1_lcd_write_char
    i1_lcd_write_char->i1_Lcd_Port
    i1_lcd_gotoxy->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _interrupcaoHIGH->_control_LED

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcaoLOW in BANK0

    _interrupcaoLOW->i1_sprintf
    i1_sprintf->i1___asftadd
    i1___asftadd->i1_fround
    i1_Read_LDR->i1___ftdiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___asftsub
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___asftadd->___ftadd
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    _Read_LDR->___ftdiv
    ___awtoft->___ftpack
    ___ftmul->___wmul
    _Obtener_Distancia->___lwdiv
    _USART_Init->___ftadd
    ___fttol->_scale
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___altoft->___ftpack
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_init->_Lcd_Cmd
    _lcd_gotoxy->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcaoLOW in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcaoLOW in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcaoLOW in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcaoLOW in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcaoLOW in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcaoLOW in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcaoLOW in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24656
                                            127 BANK1      2     2      0
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
            _Configuracion_Registros
                        _Timer1_Init
                            _Init_AD
                         _USART_Init
                 _inicioInterrupcoes
                  _Obtener_Distancia
                           _Read_LDR
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    43      7   17881
                                             81 BANK1     46    39      7
                             _fround
                              _scale
                            _isdigit
                        __tdiv_to_l_
                         __div_to_l_
                          ___asftadd
                          ___asftmul
                            ___ftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     232
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4     414
                                              8 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     159
                                             14 BANK1     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     241
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      65
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     198
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___asftsub                                            5     0      5    1695
                                             76 BANK1      5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    1602
                                             70 BANK1      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5     893
                                             39 BANK1      5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___asftadd                                            5     0      5    1630
                                             70 BANK1      5     0      5
                             _fround (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          13     7      6     758
                                              0 BANK1     13     7      6
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17    11      6     454
                                              0 BANK1     17    11      6
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     2      1      99
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _scale                                               15    12      3    2617
                                             39 BANK1     12     9      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _fround                                              18    15      3    2338
                                             39 BANK1     15    12      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     242
                                             16 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     433
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     445
                                              7 BANK1      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Read_LDR                                            10     7      3    2048
                                             56 BANK1     10     7      3
                            ___ftdiv
                            ___ftmul
                           ___awtoft
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             5     2      3     445
                                              8 BANK1      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             17    11      6     800
                                             22 BANK1     17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Obtener_Distancia                                    8     6      2     414
                                              8 BANK1      8     6      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     241
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _inicioInterrupcoes                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     7      0    3105
                                             70 BANK1      7     7      0
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     252
                                             51 BANK1     15    11      4
                              _scale (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             17    11      6     732
                                             39 BANK1     17    11      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             14     8      6    1537
                                             56 BANK1     14     8      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4     516
                                              8 BANK1     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     312
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_AD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion_Registros                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             4     2      2     384
                                              4 BANK1      4     2      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       3     2      1     254
                                              1 BANK1      3     2      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     279
                                              3 BANK1      1     1      0
                           _Lcd_Port
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           5     3      2     545
                                              3 BANK1      5     3      2
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     1      1     155
                                              1 BANK1      2     1      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     0      1     124
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupcaoLOW                                      19    19      0   50280
                                             63 BANK0     19    19      0
                       i1_lcd_gotoxy
                         i1_lcd_putc
                i1_Obtener_Distancia
                         i1_Read_LDR
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (7) i1_sprintf                                           53    46      7   42519
                                             17 BANK0     46    39      7
                           i1_fround
                            i1_scale
                        i1___asftadd
                        i1___asftmul
                        i1___asftsub
                          i1___awdiv
                       i1__div_to_l_
                      i1__tdiv_to_l_
                           i1___ftge
                          i1___ftmul
                          i1___ftneg
                          i1___fttol
                          i1_isdigit
                          i1___lldiv
                          i1___llmod
                         i1___lltoft
                          i1___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___lwmod                                            6     2      4     521
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i1___lltoft                                           9     5      4     904
                                             24 COMRAM     9     5      4
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1___llmod                                           10     2      8     521
                                             30 COMRAM    10     2      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___lldiv                                           14     6      8     527
                                             16 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (8) i1_isdigit                                            3     2      1     223
                                             16 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (8) i1___fttol                                           15    11      4     823
                                             38 COMRAM    15    11      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___ftneg                                            3     0      3     148
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (8) i1___ftge                                             9     3      6     446
                                             16 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) i1__tdiv_to_l_                                       17    11      6     983
                                             16 COMRAM    17    11      6
 ---------------------------------------------------------------------------------
 (8) i1__div_to_l_                                        13     7      6    1409
                                             16 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (8) i1___asftsub                                          5     0      5    3799
                                             44 COMRAM     5     0      5
                          i1___ftsub
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___ftsub                                            6     0      6    3580
                                             38 COMRAM     6     0      6
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (8) i1___asftmul                                          5     0      5    2001
                                              0 BANK0      5     0      5
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (8) i1___asftadd                                          5     0      5    3651
                                             12 BANK0      5     0      5
                           i1_fround (ARG)
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (10) i1___ftadd                                          14     8      6    3432
                                             24 COMRAM    14     8      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1_scale                                             21    18      3    6161
                                             70 COMRAM     3     0      3
                                              0 BANK0      9     9      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                          i1___fttol (ARG)
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4     517
                                             32 COMRAM     6     2      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     969
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            9     5      4     977
                                             23 COMRAM     9     5      4
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i1_fround                                            27    24      3    5369
                                             70 COMRAM     3     0      3
                                              0 BANK0     12    12      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) i1_Read_LDR                                          10     7      3    4720
                                             70 COMRAM     3     0      3
                                             17 BANK0      7     7      0
                         i1___awtoft
                          i1___ftdiv
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (8) i1___ftmul                                           17    11      6    1737
                                             53 COMRAM    17    11      6
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack
                          i1___fttol (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___ftdiv                                           17    11      6    1815
                                              0 BANK0     17    11      6
                         i1___ftpack
                          i1___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___ftpack                                           8     3      5     679
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) i1___awtoft                                           5     2      3     977
                                             24 COMRAM     5     2      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) i1_Obtener_Distancia                                  8     6      2     904
                                             24 COMRAM     8     6      2
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            8     4      4     527
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1_lcd_putc                                           4     2      2     884
                                             20 COMRAM     4     2      2
                   i1_lcd_write_char
 ---------------------------------------------------------------------------------
 (8) i1_lcd_write_char                                     3     2      1     588
                                             17 COMRAM     3     2      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_lcd_gotoxy                                         5     3      2    1253
                                             19 COMRAM     5     3      2
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Cmd                                            2     1      1     365
                                             17 COMRAM     2     1      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (9) i1_Lcd_Port                                           1     0      1     292
                                             16 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _interrupcaoHIGH                                    15    15      0      45
                                              1 COMRAM    15    15      0
                        _control_LED
 ---------------------------------------------------------------------------------
 (13) _control_LED                                         1     0      1      30
                                              0 COMRAM     1     0      1
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (14) _led_on                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _led_off                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _Lcd_Cmd
       _Lcd_Port
   _lcd_init
     _Lcd_Port
     _Lcd_Cmd
       _Lcd_Port
   _lcd_putc
     _lcd_write_char
       _Lcd_Port
   _Configuracion_Registros
   _Timer1_Init
   _Init_AD
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fttol
       _scale (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _inicioInterrupcoes
   _Obtener_Distancia
     ___lwdiv
   _Read_LDR
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___awtoft
       ___ftpack
   _sprintf
     _fround
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     __tdiv_to_l_
     __div_to_l_
     ___asftadd
       _fround (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___asftmul
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___asftsub
       ___ftsub
         ___ftadd
           ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___awdiv
       ___awmod (ARG)
     ___ftge
     ___ftneg
     ___fttol
       _scale (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___lwmod
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)

 _interrupcaoLOW (ROOT)
   i1_lcd_gotoxy
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_lcd_putc
     i1_lcd_write_char
       i1_Lcd_Port
   i1_Obtener_Distancia
     i1___lwdiv
   i1_Read_LDR
     i1___awtoft
       i1___ftpack
     i1___ftdiv
       i1___ftpack
       i1___ftmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
     i1___ftmul
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)
       i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
   i1_sprintf
     i1_fround
       i1___awdiv
         i1___awmod (ARG)
       i1___awmod
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1_scale
       i1___awdiv
         i1___awmod (ARG)
       i1___awmod
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___fttol (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1___asftadd
       i1_fround (ARG)
         i1___awdiv
           i1___awmod (ARG)
         i1___awmod
         i1___ftmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___ftadd (ARG)
         i1___ftpack
     i1___asftmul
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
     i1___asftsub
       i1___ftsub
         i1___ftadd
           i1___ftpack
       i1___lltoft (ARG)
         i1___ftpack
     i1___awdiv
       i1___awmod (ARG)
     i1__div_to_l_
     i1__tdiv_to_l_
     i1___ftge
     i1___ftmul
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)
       i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1___ftneg
     i1___fttol
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)
       i1___ftpack (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1_isdigit
     i1___lldiv
     i1___llmod
       i1___lldiv (ARG)
     i1___lltoft
       i1___ftpack
     i1___lwmod
     i1___wmul
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     81      A6       7       64.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      52       5       51.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      4F       1       83.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      1D       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     147      20        0.0%
DATA                 0      0     164       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Jun 10 00:50:01 2022

              _inicioInterrupcoes 62E8                      ___asftadd@f2 0148  
                    ___altoft@exp 0110                        i1___awtoft 5E64  
                      i1___ftpack 5388                     ___asftadd@f1p 0146  
          __end_of_interrupcaoLOW 0172                       i1___asftadd 6066  
           __size_ofi1__div_to_l_ 00F4                     ___altoft@sign 0111  
                      i1___lltoft 5C5A         __end_of_Obtener_Distancia 54EE  
                              _GO 007E11                       i1___asftmul 602A  
                     i1___asftsub 5FEE                      ___awdiv@sign 010D  
                              bsr 000FE0               ___wmul@multiplicand 0112  
                     __CFG_BORV$3 000000                  i1___wmul@product 0025  
                    ___asftmul@f2 0129           __end_of_interrupcaoHIGH 5A20  
                    __CFG_CP0$OFF 000000                      ___asftsub@f2 014E  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                      ___ftadd@exp1 0145  
                    ___ftadd@exp2 0144               ?_inicioInterrupcoes 0001  
                    ___ftadd@sign 0143                               l101 60E8  
                             l102 60EA                               l103 60F6  
                             l104 60F8                               l105 6104  
                             l121 588C                               l106 6106  
                             l210 5452                               l107 6112  
                             l109 6114                               l214 54CE  
                             l207 544C                               l223 4C98  
                             l154 4920                               l253 2A26  
                             l325 10FC                               l710 3292  
                             l711 3530                               l632 3D82  
                             l641 3D72                               l714 32D4  
                             l634 3C5C                               l716 330E  
                             l725 3420                               l734 3458  
                             l742 4116                               l750 39C0  
                             l744 4078                               l673 45B8  
                             l745 40DA                               l753 391C  
                             l907 563A                               l917 590E  
                             l774 3BAE                               l838 4C20  
                             l759 39B0                               l768 4E26  
                             l784 60CE                               l848 5376  
                    i1___ftadd@f1 0019                               l794 445E  
                    i1___ftadd@f2 001C                      __CFG_CPB$OFF 000000  
                             _RD2 007C1A                               _RD3 007C1B  
                             _RD4 007C1C                               _RD5 007C1D  
                             _RD6 007C1E                               _RD7 007C1F  
                    __CFG_CPD$OFF 000000                      i1___ftge@ff1 0011  
                    i1___ftge@ff2 0014                      __CFG_BOR$OFF 000000  
                    i1___ftdiv@f1 0060                      i1___ftdiv@f2 0063  
                    i1___ftdiv@f3 006D                      ___awmod@sign 0106  
      i1Obtener_Distancia@Timer_1 001B                      i1___ftneg@f1 0011  
                             wreg 000FE8                      i1___awtoft@c 0019  
                    __CFG_FOSC$HS 000000                     ___asftmul@f1p 0127  
                     _sprintf$563 0161                      i1___ftmul@f1 0036  
                    i1___ftmul@f2 0039                        i1_lcd_putc 61C0  
                   ___asftsub@f1p 014C                       lcd_gotoxy@a 0103  
                     lcd_gotoxy@b 0104                      i1___ftsub@f1 0027  
                    i1___ftsub@f2 002A                      i1___fttol@f1 0027  
                     lcd_gotoxy@y 0106                       lcd_gotoxy@z 0105  
                    ?_control_LED 0001                      __CFG_LVP$OFF 000000  
                    ___ftdiv@cntr 0132                      ___ftdiv@sign 0137  
                    __CFG_WDT$OFF 000000                      i1___lltoft@c 0019  
                            _ADIE 007CEE                              _ADIP 007CFE  
                            l8531 535A                              l8523 52D4  
                            l8525 52EE                              l8527 52F6  
                            l8457 4324                              l8475 43BE  
                            _ADON 007E10                              l8493 444E  
                            l8485 4402                              l8487 441C  
                            l8479 43DC                              l8489 4424  
                            STR_1 0888                              STR_2 0876  
                            STR_3 0888                              STR_4 0876  
                            l9993 5846                              _GIEH 007F97  
                            _GIEL 007F96                              _LATB 000F8A  
                            _IPEN 007E87                              _RCIE 007CED  
                            _RCIF 007CF5                              _RCIP 007CFD  
                            u6830 430C                              u6850 4350  
                            u6835 4302                              u6855 4346  
                            u6880 43E6                              u9620 3972  
                            u9550 37DE                              u9800 3212  
                            u9810 324E                              u9570 3822  
                            u9555 37D4                              u9805 3208  
                            u9815 3244                              u9575 3818  
                            u8874 4C66                              u9690 3D34  
                            u8875 4C60                              u8884 4C88  
                            u8885 4C82                              u8990 0BA4  
                            u8975 0B28                              _TMR1 000FCE  
                            u8995 0B98                   lcd_write_char@a 0101  
                 lcd_write_char@y 0103            __end_of_lcd_write_char 5E1E  
      Obtener_Distancia@Distancia 010C              ??_inicioInterrupcoes 0100  
               i1___lldiv@divisor 0015                              _main 4908  
                    ___ftpack@arg 0100                      ___ftpack@exp 0103  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                 i1___lldiv@counter 001E  
                            pclat 000FFA                     i1___ftdiv@exp 006C  
                            prodh 000FF4                              prodl 000FF3  
                            start 0172                      i1__div_to_l_ 4E28  
                   __CFG_IESO$OFF 000000                   __end_ofi1_scale 2E78  
                    _sprintf$1204 015E                   __end_of_Lcd_Cmd 62AE  
                   __CFG_MCLRE$ON 000000                      ___ftmul@cntr 0125  
                    ___ftmul@sign 0126                     i1___ftmul@exp 0041  
                 __end_of_Init_AD 6310                      ___fttol@exp1 0141  
                    ___fttol@lval 013D                   ?_interrupcaoLOW 0001  
                  i1___asftadd@f2 006E                     __CFG_PLLDIV$1 000000  
         i1___ftmul@f3_as_product 0042                    __CFG_CCP2MX$ON 000000  
                           l10201 0AC4                             l10051 5C06  
                           l10131 54B2                             l11005 4D7E  
                           l10301 0F66                             l10055 5C36  
                           l11015 4E24                             l11031 4B7E  
                           l10311 0F8E                             l10207 0AE6  
                           l11009 4DC8                             l11041 4C04  
                           l11033 4B86                             l10313 0FA4  
                           l10305 0F70                             l10241 0CA0  
                           l10233 0C28                             l10217 0B50  
                           l10161 08EE                             l10153 08AA  
                           l10411 1394                             l10171 093C  
                           l11061 55C6                             l11029 4B64  
                           l10261 0DA0                             l10245 0CD4  
                           l10165 08FC                             l11063 55D8  
                           l10511 318A                             l10503 305C  
                           l11047 5656                             l10431 1484  
                           l10415 13C2                             l10343 10C2  
                           l10327 1004                             l10335 1094  
                           l10319 0FC2                             l10191 0A6A  
                           l10159 08D0                             l11073 5626  
                           l11065 55E0                             l11049 5670  
                           l11081 58AC                             l10433 1492  
                           l10425 143A                             l10361 118A  
                           l10337 10A4                             l10273 0E18  
                           l10257 0D6E                             l10249 0D12  
                           l10185 09F4                             l11083 58BE  
                           l10419 1402                             l10371 1272  
                           l10195 0A80                             l10179 09C0  
                           l10533 26FC                             l10621 39A8  
                           l10613 3968                             l11085 58C6  
                           l10437 14D6                             l10373 1282  
                           l10357 1138                             l10349 1100  
                           l10293 0EDA                             l10381 12AE  
                           l10189 0A4C                             l10703 456A  
                           l10551 29F4                             l10527 25EE  
                           l10463 1582                             l10447 1522  
                           l10455 154E                             l10439 14E4  
                           l10391 1312                             l10279 0E7C  
                           l10199 0A88                             l10721 5234  
                           l10545 28DA                             l10537 270E  
                           l10609 394A                             l11089 58FA  
                           l10457 155A                             l10297 0F3A  
                           l10723 524E                             l10563 5FE4  
                           l10619 398E                             l10635 3BDC  
                           l10475 1662                             l10379 12A0  
                           l10709 45AC                             l10741 32A0  
                           l10573 37F6                             l10629 3BC6  
                           l10469 15B2                             l10397 1336  
                           l10477 1678                             l10815 3FF0  
                           l10655 3CDA                             l10479 169C  
                           l10753 3300                             l10809 3F94  
                           l10593 38B6                             l10665 3D0C  
                           l10691 44DE                             l10683 447C  
                           l10771 33A6                             l10763 3358  
                           l10747 32E2                             l10931 476E  
                           l10923 4730                             l10579 383A  
                           l10675 3D50                             l10781 33FC  
                           l10773 33B6                             l10941 47BC  
                           l10933 4776                             l10917 4712  
                           l10677 3D6A                             l10669 3D2A  
                           l10695 450C                             l10687 4496  
                           l10783 3412                             l10775 33C4  
                           l10863 3A62                             l10697 453E  
                           l10689 44AC                             l10769 3390  
                           l10881 3AFE                             l10857 3A06  
                           l10929 475C                             l10945 47D0  
                           l10961 5042                             l10699 4554  
                           l10891 3B62                             l10971 5088  
                           l10789 3490                             l10877 3AD2  
                           l10949 47E8                             l10973 5090  
                           l10981 50D8                             l10965 5058  
                           l10799 350C                             l10887 3B36  
                           l10985 50F0                             l10977 50C4  
                           l10969 5076                             l10997 5B50  
    __size_ofi1_Obtener_Distancia 007E                             ?_main 0001  
                  i1___awdiv@sign 001E             __size_ofi1_lcd_gotoxy 0056  
                 __end_of___awdiv 47F2                   __end_of___ftadd 3532  
                 __end_of___awmod 50FA                   __end_of___ftdiv 4118  
                 __end_of___ftneg 60DC                             u10010 3F7C  
                 __end_of___lldiv 4C32                             u10030 3FC0  
                           u10015 3F72                             u10040 3FD6  
       __size_ofi1_lcd_write_char 003A                             u10035 3FB6  
                           u10060 39EE                             u10080 3A32  
                           u10065 39E4                             u10090 3A48  
                           u11107 5444                             u11117 5E00  
                           u10085 3A28                   __end_of___ftmul 3BB0  
                           u11127 5E14                             u11137 4812  
                           u11147 4838                   ___awdiv@divisor 0109  
                           u11157 485E                             u11167 62A0  
                 __end_of___llmod 5388                   __end_of___ftsub 5F2C  
                 __end_of___fttol 4460                   __end_of___lwdiv 5644  
                  i1___asftmul@f2 0062                             i1l101 61FE  
                           i1l102 6200                             i1l103 6208  
                           i1l104 620A                             i1l105 6212  
                           i1l121 5DCA                             i1l106 6214  
                           i1l210 5A32                             i1l107 621C  
                           i1l109 621E                             i1l214 5A84  
                           i1l207 5A2C                             i1l223 4F82  
                           i1l253 2E76                             i1l325 1E96  
                 __end_of___lwmod 5918                             i1l194 012C  
                           i1l710 3DEC                             i1l711 3F4E  
                           i1l632 4F1A                             i1l641 4F0A  
                           i1l714 3E16                             i1l634 4E86  
                           i1l725 3EBA                             i1l742 42DE  
                           i1l734 3ED6                             i1l750 46DA  
                           i1l744 4240                             i2l185 62E6  
                           i1l673 543E                             i1l745 42A2  
                           i1l753 4678                             i1l907 5D6C  
                           i2l197 59E6                             i1l917 5E5A  
                           i2l198 59E6                             i1l774 4B26  
                           i1l838 598C                             i1l759 46CA  
                           i1l768 576E                             i1l784 6238  
                           i1l848 5BE4                             i1l794 51D8  
                 ___awdiv@counter 010C                             _RCREG 000FAE  
                           _RCSTA 000FAB                    i1___asftsub@f2 002F  
                           _SPBRG 000FAF                     __CFG_USBDIV$1 000000  
                  i1___ftadd@exp1 0026                    i1___ftadd@exp2 0025  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISD 000F95                    i1___ftadd@sign 0024  
                      i1isdigit@c 0011                     __CFG_PWRT$OFF 000000  
                     ?i1_Lcd_Port 0011                i1__tdiv_to_l_@exp1 0021  
              i1__tdiv_to_l_@cntr 0020                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                        i1scale@scl 0047  
                    ___lltoft@exp 0110                i1__tdiv_to_l_@quot 001C  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
              __size_ofi1_Lcd_Cmd 0020                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                i1___lwmod@dividend 0011  
                   __CFG_WRTC$OFF 000000                   __end_of_led_off 6342  
                   __CFG_WRTD$OFF 000000                    i1___awmod@sign 0017  
              i1___lldiv@dividend 0011                    __CFG_EBTRB$OFF 000000  
                   ___awtoft@sign 010C                   __end_of_dpowers 0828  
                           _scale 2414                   __end_of_isdigit 5FEE  
                     ?i1_Read_LDR 0047                     ___ftpack@sign 0104  
                __end_ofi1___ftge 5770                             tablat 000FF5  
                __end_ofi1___wmul 6150                    i1___ftdiv@cntr 006B  
            i1lcd_write_char@temp 0013                    i1___ftdiv@sign 0070  
                 ?_lcd_write_char 0101                             status 000FD8  
             i1___wmul@multiplier 0021                   __end_of_sprintf 16AA  
              __size_ofi1___awdiv 0090                __size_ofi1___ftadd 01CC  
              __size_ofi1___awmod 007C                  __end_ofi1_fround 37B2  
              __size_ofi1___ftdiv 01C8                __size_ofi1___ftneg 0026  
              __size_ofi1___lldiv 0086                    __CFG_ICPRT$OFF 000000  
          __size_ofi1__tdiv_to_l_ 0122                __size_ofi1___ftmul 0110  
              __size_ofi1___llmod 006A                __size_ofi1___ftsub 0036  
              __size_ofi1___fttol 00E0                __size_ofi1___lwdiv 0056  
              __size_ofi1___lwmod 0046                    __CFG_PBADEN$ON 000000  
                  i1___ftpack@arg 0011                    i1___ftpack@exp 0014  
                     ?_USART_Init 0001                  __end_of_Lcd_Port 6116  
                 __initialization 626A                      i1_lcd_gotoxy 5D76  
                    __end_of_main 4A18                    i1_sprintf$1829 007E  
                     ?i1___awtoft 0019                       ?i1___ftpack 0011  
                  i1___ftmul@cntr 0045                __size_ofi1_isdigit 0024  
                  i1___ftmul@sign 0046                i1___lldiv@quotient 001A  
                __end_of_Read_LDR 4D34                       ?i1___lltoft 0019  
      __size_of_Obtener_Distancia 00AE                       i1lcd_putc@a 0015  
                     i1lcd_putc@i 0017                        i1sprintf@c 009E  
                      i1sprintf@f 0073                    i1___fttol@exp1 0035  
                  i1___fttol@lval 0031                  ?_interrupcaoHIGH 0001  
                          ??_main 017F                     ___fttol@sign1 013C  
              __size_ofi1_sprintf 0D6A                     __activetblptr 000002  
                 i1___asftadd@f1p 006C              __size_of__tdiv_to_l_ 0210  
                    i1_scale$1828 0066                       ?i1_lcd_putc 0015  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                    i1___lltoft@exp 0021  
                __end_of___altoft 52B2                  ___llmod@dividend 010E  
                          ?_scale 0127                            _ADRESH 000FC4  
                          _ADRESL 000FC3                  ___awdiv@dividend 0107  
                __end_of___awtoft 5B8C                  __end_of___ftpack 45BA  
                __end_of___lltoft 56E0                 i1___llmod@divisor 0023  
                 i1___asftmul@f1p 0060                            i1l9101 579C  
                          i1l9111 57C2                            i1l9107 57B6  
                          i1l9123 57E8                            i1l9211 4EB6  
                          i1l9109 57BE                            i1l9221 4ED2  
                          i1l9127 57F6                            i1l9119 57DE  
                          i1l9151 5AE4                            i1l9143 5AC6  
                          i1l9311 3E8C                            i1l9231 4EFA  
                          i1l9305 3E74                            i1l9233 4F06  
                          i1l9225 4EE2                            i1l9251 53E4  
                          i1l9243 53A6                            i1l9163 5B10  
                          i1l9155 5AF8                            i1l9147 5AD8  
                          i1l9139 5ABA                            i1l9307 3E7E  
                          i1l9253 5402                            i1l9245 53B0  
                          i1l9149 5AE0                            i1l9325 3EF2  
                          i1l9317 3EAA                            i1l9309 3E86  
                          i1l9175 5E80                            i1l9255 540C  
                          i1l9247 53CE                            i1l9239 5398  
                          i1l9095 578C                            i1l9159 5B02  
                          i1l9335 3F2A                            i1l9319 3EB4  
                          i1l9191 4E40                            i1l8617 5DA0  
                          i1l9185 4E34                            i1l9425 4692  
                          i1l9409 4650                            i1l9521 5126  
                          i1l9601 5BAE                            i1l9283 3E24  
                          i1l9435 46BA                            i1l9443 5710  
                          i1l9603 5BB2                            i1l8645 61CA  
                          i1l8661 5A74                            i1l9277 3DFA  
                          i1l9437 46C6                            i1l9429 46A2  
                          i1l9453 576C                            i1l9613 5C64  
                          i1l9631 5D46                            i1l9463 4A44  
                          i1l9447 5740                            i1l9551 51AE  
                          i1l9543 518A                            i1l9607 5BD6  
                          i1l9615 5C70                            i2l7073 62DC  
                          i2l7081 59D8                            i1l8649 61E2  
                          i1l9553 51B2                            i2l7083 59E0  
                          i1l9627 5D3A                            i1l9483 4AB2  
                          i1l9299 3E56                            i1l9395 4612  
                          i1l9539 517A                            i1l9651 5E3C  
                       ??i1_scale 0060                            i2l7085 59E2  
                          i2l7077 59CC                            i1l9629 5D42  
                          i1l9493 4ADE                            i1l9469 4A7C  
                          i1l9389 45E6                            i1l9557 51C8  
                          i1l9549 51A2                            i1l9581 594A  
                          i2l7079 59D4                            i1l9639 5D62  
                          i1l9487 4AC2                            i1l9591 597E  
                          i1l9583 594E                            i1l9655 5E50  
                          i1l9647 5E30                            i1l9497 4AEE  
                          i1l9569 6262                            i1l9649 5E38  
                          i1l9579 593E                            i1l9599 5BA2  
               i1___llmod@counter 0028                   i1___asftsub@f1p 002D  
                       ??_Lcd_Cmd 0102                            _TMR0IE 007F95  
                          _TMR0IP 007F8A                            _TMR1ON 007E68  
                          _TRISA0 007C90                            _TRISC6 007CA6  
                          _TRISC7 007CA7                     i1sprintf@_val 008E  
                   i1sprintf@flag 0093                     i1sprintf@fval 0099  
                       ??_Init_AD 0100                     i1sprintf@prec 009C  
                   ??_Timer1_Init 0100                    __CFG_XINST$OFF 000000  
                __end_of__powers_ 0876               __size_ofi1_Lcd_Port 002A  
               __end_ofi1_Lcd_Cmd 62CE                  __end_of_lcd_init 4908  
                __end_of_lcd_putc 5C5A                            ___ftge 4D34  
                          ___wmul 5CBE                         ??___awdiv 010B  
                       ??___ftadd 013E                    __CFG_STVREN$ON 000000  
                       ??___awmod 0104                         ??___ftdiv 012D  
                       ??___ftneg 0103                         ??___lldiv 0108  
                       ??___ftmul 011C                         ??___llmod 0116  
                       ??___ftsub 014C                         ??___fttol 0137  
                       ??___lwdiv 0104                         ??___lwmod 0104  
                          _led_on 6336               __size_ofi1_Read_LDR 00F0  
                          _fround 2E78                            clear_0 6270  
                ___awdiv@quotient 010E                   ___awmod@divisor 0102  
                 ___awmod@counter 0105                         ??_led_off 0001  
                   i1__tdiv_to_l_ 45BA             ___ftmul@f3_as_product 0122  
               __end_ofi1___awdiv 5800                 __end_ofi1___ftadd 3F50  
               __end_ofi1___awmod 5B1A                 __end_ofi1___ftdiv 42E0  
               __end_ofi1___ftneg 6246                 __end_ofi1___lldiv 599E  
               __end_ofi1___ftmul 4B28                 __end_ofi1___llmod 5BF6  
               __end_ofi1___ftsub 61C0                 __end_ofi1___fttol 51DA  
               __end_ofi1___lwdiv 5D76                 __end_ofi1___lwmod 5E64  
                       ??_isdigit 0101                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8               __size_of_USART_Init 00AC  
                       ??_sprintf 0158                 __end_ofi1_isdigit 626A  
              __size_of___asftadd 0042               __size_ofi1___awtoft 0044  
             __size_ofi1___ftpack 00B8      i1Obtener_Distancia@Distancia 001D  
              __size_of___asftmul 0042                __size_of___asftsub 0042  
            __size_of_control_LED 001A               __size_ofi1___lltoft 0064  
        ?_Configuracion_Registros 0001                        __accesstop 0060  
         __end_of__initialization 6282                        ___altoft@c 0108  
                 i1___awtoft@sign 001D                        ___ftadd@f1 0138  
                      ___ftadd@f2 013B                        ___ftge@ff1 0100  
                      ___ftge@ff2 0103                   i1___ftpack@sign 0015  
               __end_ofi1_sprintf 2414                        ___ftdiv@f1 0127  
                      ___ftdiv@f2 012A                        ___ftdiv@f3 0133  
                      ___ftneg@f1 0100                        ___awtoft@c 0108  
                      ___ftmul@f1 0116                        ___ftmul@f2 0119  
                      ___ftsub@f1 0146                        ___ftsub@f2 0149  
                      ___fttol@f1 0133                    __pcstackCOMRAM 0001  
  interrupcaoHIGH@esp_server_data 0010               __size_ofi1_lcd_putc 0036  
                      ___lltoft@c 0108                      ?i1___asftadd 006C  
                   __end_of_scale 2A28                      ?i1___asftmul 0060  
                    ?i1___asftsub 002D               __end_of_Timer1_Init 6324  
          Read_LDR@analog_reading 013F                    ?i1__tdiv_to_l_ 0011  
                       ?i1___ftge 0011                         ?i1___wmul 0021  
                i1_lcd_write_char 6150                    lcd_gotoxy@temp 0107  
                      __div_to_l_ 3BB0                         ?i1_fround 0047  
                     i1sprintf@ap 0089                       i1sprintf@vd 0085  
                     i1sprintf@sp 0071                   i1___fttol@sign1 0030  
                       ?_Lcd_Port 0100                   __div_to_l_@exp1 010C  
                 __div_to_l_@cntr 010B                      sprintf@integ 016B  
                         ??_scale 012A                   __div_to_l_@quot 0107  
                    sprintf@width 0177                        __pbssBANK1 0181  
                       ?_Read_LDR 0138               i1_Obtener_Distancia 5A20  
                   __div_to_l_@f1 0100                     __div_to_l_@f2 0103  
                ??_interrupcaoLOW 009F                           ?___ftge 0100  
                         ?___wmul 0110                           ?_led_on 0001  
                       ?___altoft 0108                 __end_of___asftadd 5FB0  
                         ?_fround 0127                 __end_of___asftmul 5F6E  
               __end_of___asftsub 5EEA                         ?___awtoft 0108  
                       ?___ftpack 0100              ?i1_Obtener_Distancia 0019  
                      ??i1___ftge 0017                         ?___lltoft 0108  
                      ??i1___wmul 0025                     i1_fround$1826 0069  
                   i1_fround$1827 0066                i1___llmod@dividend 001F  
                   i1_isdigit$838 0013                           i1l11211 185C  
                         i1l11221 18B6                           i1l11205 17FC  
                         i1l11127 3766                           i1l11119 368E  
                         i1l11143 2B72                           i1l11215 1872  
              i1___awdiv@dividend 0018                           i1l11161 2D80  
                         i1l11153 2C3C                           i1l11321 1D12  
                         i1l11313 1C86                           i1l11401 202E  
                         i1l11209 1840                           i1l11411 2092  
                         i1l11331 1D3A                           i1l11227 18D8  
                         i1l11219 187A                           i1l11149 2C2E  
                         i1l11333 1D50                           i1l11325 1D1C  
                         i1l11317 1CE6                           i1l11261 1A6E  
                         i1l11253 1A06                           i1l11237 1942  
                         i1l11181 1704                           i1l11173 16C0  
                         i1l11167 2E48                           i1l11431 2114  
                         i1l11191 1750                           i1l11513 415C  
                         i1l11417 20B6                           i1l11281 1B52  
                         i1l11265 1A96                           i1l11185 1712  
                         i1l11451 2204                           i1l11435 2142  
                         i1l11363 1E5C                           i1l11347 1DB0  
                         i1l11355 1E2E                           i1l11339 1D6E  
                         i1l11179 16E6                           i1l10491 0100  
                         i1l10483 005C                           i1l11453 2212  
                         i1l11445 21BA                           i1l11381 1F24  
                         i1l11357 1E3E                           i1l11293 1BCA  
                         i1l11277 1B2C                           i1l11269 1AD4  
                         i1l10485 0094                           i1l11519 41B8  
                         i1l11439 2182                           i1l11391 1FF2  
                         i1l11199 17C8                           i1l10487 00C4  
                         i1l11457 2256                           i1l11393 2002  
                         i1l11377 1ED2                           i1l11369 1E9A  
                         i1l10489 00D4                           i1l11483 2302  
                         i1l11467 22A2                           i1l11475 22CE  
                         i1l11459 2264                           i1l11299 1C28  
                         i1l11477 22DA                           i1l11495 23CC  
                         i1l11399 2020                           i1l11489 2332  
                         i1l11497 23E2                           i1l11499 2406  
                    ??i1_Lcd_Port 0012                        ??i1_fround 0060  
                      _lcd_gotoxy 5800   __end_of_Configuracion_Registros 6336  
                ??_lcd_write_char 0102                        ??_Lcd_Port 0101  
                    ??i1_Read_LDR 0071                         ?_lcd_init 0001  
                       ?_lcd_putc 0104                    i1sprintf@integ 008B  
                         i1_scale 2A28                        ??_Read_LDR 013B  
                  i1sprintf@width 0097                   __CFG_VREGEN$OFF 000000  
              lcd_write_char@temp 0102                           _Lcd_Cmd 628C  
     __size_of_inicioInterrupcoes 0014                           _Init_AD 62FC  
                    i1fround@prec 0047                      ??_USART_Init 0146  
               __end_of__npowers_ 084F                           __Hparam 0000  
                      _scale$1203 0130                       _Timer1_Init 6310  
                         __Lparam 0000                i1___awdiv@quotient 001F  
              __end_ofi1_Lcd_Port 6220                   __size_of___ftge 00F4  
                    ??i1___awtoft 001C                      ??i1___ftpack 0016  
                         ___awdiv 46DC                           ___ftadd 31E6  
                         ___awmod 500C                           ___ftdiv 3F50  
                         ___ftneg 60A2                           ___lldiv 4B28  
                 __size_of___wmul 0062                           ___ftmul 39C2  
                         ___llmod 52B2                           ___ftsub 5EEA  
                         ___fttol 42E0                      ??i1___lltoft 001D  
                         ___lwdiv 559A                           ___lwmod 588E  
                 ??i1__tdiv_to_l_ 0017                      __psmallconst 0800  
                      ??___altoft 010C                   __size_of_led_on 0006  
           ??i1_Obtener_Distancia 001B                           __pcinit 626A  
                      ??___awtoft 010B                        ??___ftpack 0105  
              __end_ofi1_Read_LDR 500C                   __size_of_fround 036E  
                         __ramtop 0800                        ??___lltoft 010C  
                         __ptext0 4908                           __ptext1 0894  
                         __ptext2 588E                           __ptext3 5644  
                         __ptext4 52B2                           __ptext5 4B28  
                         __ptext6 60A2                           __ptext7 4D34  
                         __ptext8 5EA8                           __ptext9 5EEA  
                         _led_off 633C                         _T1CONbits 000FCD  
                     ?__div_to_l_ 0100                    USART_Init@temp 014A  
                         _dpowers 0800                 i1___lwdiv@divisor 0013  
                         _isdigit 5FB0                 i1___lwdiv@counter 0016  
                ___awmod@dividend 0100                      ??i1_lcd_putc 0017  
              __end_of_USART_Init 559A                           _sprintf 0894  
                      ??_lcd_init 0103                    __pintcode_body 599E  
                      ??_lcd_putc 0106              end_of_initialization 6282  
              __end_ofi1___awtoft 5EA8                __end_ofi1___ftpack 5440  
                       i1u1040_24 4F72                         i1u1040_25 4F6C  
                       i1u1120_27 62C0                         i1u1105_20 4144  
                       i1u1105_25 413A                         i1u1107_20 4188  
                       i1u1107_25 417E                         i1u1108_20 419E  
                       i1u1117_27 5A24                __end_ofi1___lltoft 5CBE  
                       i1u1118_27 616C                         i1u1039_24 4F50  
                       i1u1039_25 4F4A                         i1u1119_27 6180  
                       i1u1056_25 191A                         i1u1058_20 1996  
                   __Lmediumconst 0000                         i1u1058_25 198A  
                         int_func 599E                   ___lldiv@divisor 0104  
                 ___lldiv@counter 010D                         _LDR_value 0181  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                   i1__div_to_l_@f1 0011  
                 i1__div_to_l_@f2 0014                         Lcd_Port@a 0100  
              __end_ofi1_lcd_putc 61F6                    __tdiv_to_l_@f1 0100  
                  __tdiv_to_l_@f2 0103             i1___wmul@multiplicand 0023  
                       i1_Lcd_Cmd 62AE                     ??__tdiv_to_l_ 0106  
                       _PORTAbits 000F80              __size_ofi1___asftadd 003C  
            __size_ofi1___asftmul 003C              __size_ofi1___asftsub 003C  
                     ?_lcd_gotoxy 0103                         i1___awdiv 5770  
                       i1___ftadd 3D84                         i1___awmod 5A9E  
                       i1___ftdiv 4118                         i1___ftneg 6220  
                       i1___lldiv 5918                         i1___ftmul 4A18  
                       i1___llmod 5B8C                         i1___ftsub 618A  
                       i1___fttol 50FA          __size_of_interrupcaoHIGH 5A18  
                       i1___lwdiv 5D20                         i1___lwmod 5E1E  
             USART_Init@baud_rate 0146                       ___ftdiv@exp 0136  
        __end_ofi1_lcd_write_char 618A                         i1_isdigit 6246  
             __size_of__div_to_l_ 01D4         Obtener_Distancia@Duracion 010E  
                     ___ftmul@exp 0121                         i1_sprintf 16AA  
__size_of_Configuracion_Registros 0012                    __end_of___ftge 4E28  
                  __end_of___wmul 5D20                        ?i1_Lcd_Cmd 0012  
                       _Distancia 0184                    __end_of_led_on 633C  
               i1___lwmod@divisor 0013                    __end_of_fround 31E6  
               i1___lwmod@counter 0016                 __size_ofi1___ftge 0090  
             start_initialization 626A                 __size_ofi1___wmul 003A  
             __end_of__tdiv_to_l_ 39C2                    _theresMovement 004E  
                      ?i1___awdiv 0018                        ?i1___ftadd 0019  
                   i1_sprintf$563 0081                        ?i1___awmod 0011  
                      ?i1___ftdiv 0060                     ??_control_LED 0002  
                      ?i1___ftneg 0011                        ?i1___lldiv 0011  
                      ?i1___ftmul 0036                        ?i1___llmod 001F  
                      ?i1___ftsub 0027                        ?i1___fttol 0027  
               __size_ofi1_fround 0280                        ?i1___lwdiv 0011  
                      ?i1___lwmod 0011                     i1lcd_gotoxy@a 0014  
                   i1lcd_gotoxy@b 0015                     i1lcd_gotoxy@y 0017  
                   i1lcd_gotoxy@z 0016                 __size_of_Lcd_Port 003A  
                i1lcd_gotoxy@temp 0018                   ___llmod@divisor 0112  
                      ?i1_isdigit 0011                   ___llmod@counter 0117  
                   ?i1__div_to_l_ 0011                 __size_of_Read_LDR 0102  
                    i1sprintf@exp 0095                        ?i1_sprintf 0071  
                        ??___ftge 0106               __size_of_lcd_gotoxy 008E  
                        ??___wmul 0114                     sprintf@vd_565 0167  
                        ??_led_on 0001                i1___awmod@dividend 0011  
                __CFG_LPT1OSC$OFF 000000                          ??_fround 012A  
               __size_of___altoft 00D8                        fround@prec 0127  
               __size_of___awtoft 0072                 __size_of___ftpack 015A  
                       ___asftadd 5F6E                         ___asftmul 5F2C  
                       ___asftsub 5EA8                 __size_of___lltoft 009C  
                     __pbssCOMRAM 004A       i1Obtener_Distancia@Duracion 001F  
                   __pcstackBANK0 0060                     __pcstackBANK1 0100  
             __end_of__stringdata 0892                 i1lcd_write_char@a 0012  
               i1lcd_write_char@y 0014                          ?i1_scale 0047  
                        ?_Lcd_Cmd 0101                 __size_of_lcd_init 0116  
                     sprintf@_val 016E                       sprintf@flag 0173  
               __size_of_lcd_putc 0064                       sprintf@fval 0179  
                     sprintf@prec 017C                    ??i1__div_to_l_ 0017  
             __end_of_control_LED 62E8                 ??_interrupcaoHIGH 0002  
                        ?_Init_AD 0001                      ?_Timer1_Init 0001  
                ___lwdiv@dividend 0100                     ?i1_lcd_gotoxy 0014  
                       __pintcode 0008                          ?___awdiv 0107  
                        ?___ftadd 0138                          ?___awmod 0100  
                        ?___ftdiv 0127                          ?___ftneg 0100  
                        ?___lldiv 0100                          ?___ftmul 0116  
                        ?___llmod 010E                          ?___ftsub 0146  
                       __npowers_ 0828                          ?___fttol 0133  
                        ?___lwdiv 0100                          ?___lwmod 0100  
                     ??i1_Lcd_Cmd 0013                 i1___awdiv@divisor 001A  
                     __pintcodelo 0018                 i1___awdiv@counter 001D  
                     __tdiv_to_l_ 37B2                          ?_led_off 0001  
                    ??__div_to_l_ 0106                       __smallconst 0800  
                      ?___asftadd 0146                          ?_isdigit 0100  
                      ?___asftmul 0127                        ?___asftsub 014C  
                     ??i1___awdiv 001C                       ??i1___ftadd 001F  
                     ??i1___awmod 0015                       ??i1___ftdiv 0066  
                     ??i1___ftneg 0014                       ??i1___lldiv 0019  
                     ??i1___ftmul 003C                       ??i1___llmod 0027  
                     ??i1___ftsub 002D                       ??i1___fttol 002B  
                ___lwdiv@quotient 0106                       ??i1___lwdiv 0015  
                     ??i1___lwmod 0015                          ?_sprintf 0151  
                  __size_of_scale 0614        __end_of_inicioInterrupcoes 62FC  
                  ___wmul@product 0114                          _LATAbits 000F89  
                     ??i1_isdigit 0012                    ??i1_lcd_gotoxy 0016  
                     _contControl 004A                          Lcd_Cmd@a 0101  
                        i1u808_20 3DA2                          i1u808_25 3D9A  
                        i1u809_20 3DC8                          i1u841_20 46A8  
                        i1u809_25 3DC0                          i1u834_20 45D8  
              __end_of__div_to_l_ 3D84                          i1u834_25 45D0  
                        i1u836_20 4604                          i1u836_25 45FC  
                        i1u853_20 5118                          i1u853_25 5110  
                        i1u846_20 4A36                          i1u846_25 4A2E  
                        i1u855_20 5144                          i1u855_25 513C  
                        i1u848_20 4A62                          i1u848_25 4A5A  
                        i1u849_20 4A6E                          i2u529_40 59D4  
                        i2u529_41 59D2                          i1u858_20 5190  
     __end_ofi1_Obtener_Distancia 5A9E                          i1u799_20 4EE8  
                     ??i1_sprintf 0078                  __CFG_WDTPS$32768 000000  
         _Configuracion_Registros 6324             __end_ofi1__tdiv_to_l_ 46DC  
                        i1___ftge 56E0                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                       __stringdata 0876  
         __size_of_interrupcaoLOW 015A                 ___wmul@multiplier 0110  
                        i1___wmul 6116                   i1sprintf@vd_565 0087  
                        i1_fround 3532                         lcd_putc@a 0104  
                       lcd_putc@i 0106                      ??_lcd_gotoxy 0105  
                        _Lcd_Port 60DC                  i1__tdiv_to_l_@f1 0011  
                     _control_LED 62CE                  i1__tdiv_to_l_@f2 0014  
                        _Read_LDR 4C32                  __size_ofi1_scale 0450  
                __size_of_Lcd_Cmd 0022                 ?i1_lcd_write_char 0012  
         __size_of_lcd_write_char 0052                  __size_of_Init_AD 0014  
                        __Hrparam 0000                ??i1_lcd_write_char 0013  
                        __Lrparam 0000                 i1___awmod@divisor 0013  
                   ??i1___asftadd 004A                __end_of_lcd_gotoxy 588E  
                 control_LED@data 0001                     ??i1___asftmul 0047  
                   ??i1___asftsub 0032                 i1___awmod@counter 0016  
                __size_of___awdiv 0116                  __size_of___ftadd 034C  
                __size_of___awmod 00EE                  __size_of___ftdiv 01C8  
                __size_of___ftneg 003A                  __size_of___lldiv 010A  
                        ___altoft 51DA                  __size_of___ftmul 01EE  
                __size_of___llmod 00D6                  __size_of___ftsub 0042  
                __size_of___fttol 0180                  __size_of___lwdiv 00AA  
                __size_of___lwmod 008A                          ___awtoft 5B1A  
                        ___ftpack 4460                       _fround$1201 0133  
                     _fround$1202 0130                          ___lltoft 5644  
                     _isdigit$838 0102              __end_ofi1__div_to_l_ 4F1C  
                     ??___asftadd 014B                  __size_of_led_off 0006  
                      sprintf@exp 0175                       ??___asftmul 012C  
                     ??___asftsub 0151                  __size_of_isdigit 003E  
                 ___lwdiv@divisor 0102                   ___lwdiv@counter 0105  
                        __ptext10 5F2C                          __ptext11 5F6E  
                        __ptext20 4C32                          __ptext12 3BB0  
                        __ptext21 5B1A                          __ptext13 37B2  
                        __ptext30 51DA                          __ptext22 39C2  
                        __ptext14 5FB0                          __ptext31 4460  
                        __ptext23 5440                          __ptext15 2414  
                        __ptext40 60DC                          __ptext32 62FC  
                        __ptext24 559A                          __ptext16 2E78  
                        __ptext33 6310                          __ptext25 62E8  
                        __ptext17 5CBE                          __ptext50 56E0  
                        __ptext42 16AA                          __ptext34 6324  
                        __ptext26 54EE                          __ptext18 500C  
                        __ptext51 45BA                          __ptext43 5E1E  
                        __ptext35 5BF6                          __ptext27 42E0  
                        __ptext19 46DC                          __ptext60 5A9E  
                        __ptext52 4E28                          __ptext44 5C5A  
                        __ptext36 5DCC                          __ptext28 3F50  
                        __ptext61 5770                          __ptext53 5FEE  
                        __ptext45 5B8C                          __ptext37 47F2  
                        __ptext29 31E6                          __ptext70 61C0  
                        __ptext62 3532                          __ptext54 618A  
                        __ptext46 5918                          __ptext38 5800  
                        __ptext71 6150                          __ptext63 4F1C  
                        __ptext55 602A                          __ptext47 6246  
                        __ptext39 628C                          __ptext72 5D76  
                        __ptext64 4A18                          __ptext56 6066  
                        __ptext48 50FA                          __ptext73 62AE  
                        __ptext65 4118                          __ptext57 3D84  
                        __ptext49 6220                          __ptext74 61F6  
                        __ptext66 5388                          __ptext58 2A28  
                        __ptext67 5E64                          __ptext59 6116  
                        __ptext76 62CE                          __ptext68 5A20  
                        __ptext77 6336                          __ptext69 5D20  
                        __ptext78 633C                          _isBright 004C  
                        __powers_ 084F                          _lcd_init 47F2  
                        _lcd_putc 5BF6                  __size_of_sprintf 0E16  
              i1___lwdiv@dividend 0011                     __size_of_main 0110  
                     i1Lcd_Port@a 0011         ??_Configuracion_Registros 0100  
                      _LCD_Buffer 0186              __size_of_Timer1_Init 0014  
           __CFG_CPUDIV$OSC1_PLL2 000000                i1___lwdiv@quotient 0017  
             __end_ofi1___asftadd 60A2               __end_ofi1___asftmul 6066  
             __end_ofi1___asftsub 602A                 i1__div_to_l_@exp1 001D  
               i1__div_to_l_@cntr 001C                 i1__div_to_l_@quot 0018  
                 _interrupcaoHIGH 0008              __end_ofi1_lcd_gotoxy 5DCC  
                        isdigit@c 0100                          scale@scl 0127  
                        intlevel1 0000                          intlevel2 0000  
                       sprintf@ap 0169                  __tdiv_to_l_@exp1 0110  
                       sprintf@vd 0165                         sprintf@sp 0151  
                __tdiv_to_l_@cntr 010F                  __tdiv_to_l_@quot 010B  
                ___lwmod@dividend 0100                  ___lldiv@dividend 0100  
                      i1Lcd_Cmd@a 0012                      ?__tdiv_to_l_ 0100  
                  _interrupcaoLOW 0018                 _Obtener_Distancia 5440  
                        sprintf@c 017E                          sprintf@f 0153  
                ___lldiv@quotient 0109                   ___lwmod@divisor 0102  
              ?_Obtener_Distancia 0108                   ___lwmod@counter 0105  
                      i1_Lcd_Port 61F6                        i1_Read_LDR 4F1C  
             ??_Obtener_Distancia 010A          Obtener_Distancia@Timer_1 010A  
                  _lcd_write_char 5DCC                        _USART_Init 54EE  
        i1Read_LDR@analog_reading 0075  
