

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Jun 10 00:55:06 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	opt stack 0
    98  000800                     _dpowers:
    99                           	opt stack 0
   100  000800  0001               	dw	1
   101  000802  0000               	dw	0
   102  000804  000A               	dw	10
   103  000806  0000               	dw	0
   104  000808  0064               	dw	100
   105  00080A  0000               	dw	0
   106  00080C  03E8               	dw	1000
   107  00080E  0000               	dw	0
   108  000810  2710               	dw	10000
   109  000812  0000               	dw	0
   110  000814  86A0               	dw	34464
   111  000816  0001               	dw	1
   112  000818  4240               	dw	16960
   113  00081A  000F               	dw	15
   114  00081C  9680               	dw	38528
   115  00081E  0098               	dw	152
   116  000820  E100               	dw	57600
   117  000822  05F5               	dw	1525
   118  000824  CA00               	dw	51712
   119  000826  3B9A               	dw	15258
   120  000828                     __end_of_dpowers:
   121                           	opt stack 0
   122  000828                     __npowers_:
   123                           	opt stack 0
   124  000828  00                 	db	0
   125  000829  80                 	db	128
   126  00082A  3F                 	db	63
   127  00082B  CD                 	db	205
   128  00082C  CC                 	db	204
   129  00082D  3D                 	db	61
   130  00082E  D7                 	db	215
   131  00082F  23                 	db	35
   132  000830  3C                 	db	60
   133  000831  12                 	db	18
   134  000832  83                 	db	131
   135  000833  3A                 	db	58
   136  000834  B7                 	db	183
   137  000835  D1                 	db	209
   138  000836  38                 	db	56
   139  000837  C6                 	db	198
   140  000838  27                 	db	39
   141  000839  37                 	db	55
   142  00083A  38                 	db	56
   143  00083B  86                 	db	134
   144  00083C  35                 	db	53
   145  00083D  C0                 	db	192
   146  00083E  D6                 	db	214
   147  00083F  33                 	db	51
   148  000840  CC                 	db	204
   149  000841  2B                 	db	43
   150  000842  32                 	db	50
   151  000843  70                 	db	112
   152  000844  89                 	db	137
   153  000845  30                 	db	48
   154  000846  E7                 	db	231
   155  000847  DB                 	db	219
   156  000848  2E                 	db	46
   157  000849  E5                 	db	229
   158  00084A  3C                 	db	60
   159  00084B  1E                 	db	30
   160  00084C  42                 	db	66
   161  00084D  A2                 	db	162
   162  00084E  0D                 	db	13
   163  00084F                     __end_of__npowers_:
   164                           	opt stack 0
   165  00084F                     __powers_:
   166                           	opt stack 0
   167  00084F  00                 	db	0
   168  000850  80                 	db	128
   169  000851  3F                 	db	63
   170  000852  00                 	db	0
   171  000853  20                 	db	32
   172  000854  41                 	db	65
   173  000855  00                 	db	0
   174  000856  C8                 	db	200
   175  000857  42                 	db	66
   176  000858  00                 	db	0
   177  000859  7A                 	db	122
   178  00085A  44                 	db	68
   179  00085B  40                 	db	64
   180  00085C  1C                 	db	28
   181  00085D  46                 	db	70
   182  00085E  50                 	db	80
   183  00085F  C3                 	db	195
   184  000860  47                 	db	71
   185  000861  24                 	db	36
   186  000862  74                 	db	116
   187  000863  49                 	db	73
   188  000864  97                 	db	151
   189  000865  18                 	db	24
   190  000866  4B                 	db	75
   191  000867  BC                 	db	188
   192  000868  BE                 	db	190
   193  000869  4C                 	db	76
   194  00086A  6B                 	db	107
   195  00086B  6E                 	db	110
   196  00086C  4E                 	db	78
   197  00086D  03                 	db	3
   198  00086E  15                 	db	21
   199  00086F  50                 	db	80
   200  000870  79                 	db	121
   201  000871  AD                 	db	173
   202  000872  60                 	db	96
   203  000873  F3                 	db	243
   204  000874  49                 	db	73
   205  000875  71                 	db	113
   206  000876                     __end_of__powers_:
   207                           	opt stack 0
   208  0000                     _TMR1	set	4046
   209  0000                     _ADCON0	set	4034
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _ADCON1	set	4033
   212  0000                     _ADCON1bits	set	4033
   213  0000                     _ADCON2	set	4032
   214  0000                     _ADRESH	set	4036
   215  0000                     _ADRESL	set	4035
   216  0000                     _LATAbits	set	3977
   217  0000                     _LATB	set	3978
   218  0000                     _PORTAbits	set	3968
   219  0000                     _RCREG	set	4014
   220  0000                     _RCSTA	set	4011
   221  0000                     _SPBRG	set	4015
   222  0000                     _T1CONbits	set	4045
   223  0000                     _TRISA	set	3986
   224  0000                     _TRISB	set	3987
   225  0000                     _TRISD	set	3989
   226  0000                     _ADIE	set	31982
   227  0000                     _ADIP	set	31998
   228  0000                     _ADON	set	32272
   229  0000                     _GIEH	set	32663
   230  0000                     _GIEL	set	32662
   231  0000                     _GO	set	32273
   232  0000                     _IPEN	set	32391
   233  0000                     _RCIE	set	31981
   234  0000                     _RCIF	set	31989
   235  0000                     _RCIP	set	31997
   236  0000                     _RD2	set	31770
   237  0000                     _RD3	set	31771
   238  0000                     _RD4	set	31772
   239  0000                     _RD5	set	31773
   240  0000                     _RD6	set	31774
   241  0000                     _RD7	set	31775
   242  0000                     _TMR0IE	set	32661
   243  0000                     _TMR0IP	set	32650
   244  0000                     _TMR1ON	set	32360
   245  0000                     _TRISA0	set	31888
   246  0000                     _TRISC6	set	31910
   247  0000                     _TRISC7	set	31911
   248  000876                     __stringdata:
   249                           	opt stack 0
   250  000876                     STR_2:
   251  000876  44                 	db	68	;'D'
   252  000877  69                 	db	105	;'i'
   253  000878  73                 	db	115	;'s'
   254  000879  74                 	db	116	;'t'
   255  00087A  61                 	db	97	;'a'
   256  00087B  6E                 	db	110	;'n'
   257  00087C  63                 	db	99	;'c'
   258  00087D  69                 	db	105	;'i'
   259  00087E  61                 	db	97	;'a'
   260  00087F  3A                 	db	58	;':'
   261  000880  20                 	db	32
   262  000881  25                 	db	37
   263  000882  30                 	db	48	;'0'
   264  000883  33                 	db	51	;'3'
   265  000884  64                 	db	100	;'d'
   266  000885  63                 	db	99	;'c'
   267  000886  6D                 	db	109	;'m'
   268  000887  00                 	db	0
   269  000888                     STR_1:
   270  000888  4C                 	db	76	;'L'
   271  000889  44                 	db	68	;'D'
   272  00088A  52                 	db	82	;'R'
   273  00088B  3A                 	db	58	;':'
   274  00088C  20                 	db	32
   275  00088D  25                 	db	37
   276  00088E  2E                 	db	46
   277  00088F  32                 	db	50	;'2'
   278  000890  66                 	db	102	;'f'
   279  000891  00                 	db	0
   280  000892                     __end_of__stringdata:
   281                           	opt stack 0
   282                           
   283                           ; #config settings
   284  000892  00                 	db	0	; dummy byte at the end
   285  0000                     
   286                           	psect	cinit
   287  006266                     __pcinit:
   288                           	opt stack 0
   289  006266                     start_initialization:
   290                           	opt stack 0
   291  006266                     __initialization:
   292                           	opt stack 0
   293                           
   294                           ; Clear objects allocated to BANK1 (37 bytes)
   295  006266  EE01  F081         	lfsr	0,__pbssBANK1
   296  00626A  0E25               	movlw	37
   297  00626C                     clear_0:
   298  00626C  6AEE               	clrf	postinc0,c
   299  00626E  06E8               	decf	wreg,f,c
   300  006270  E1FD               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to COMRAM (6 bytes)
   303  006272  6A4F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   304  006274  6A4E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   305  006276  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   306  006278  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   307  00627A  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   308  00627C  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   309  00627E                     end_of_initialization:
   310                           	opt stack 0
   311  00627E                     __end_of__initialization:
   312                           	opt stack 0
   313  00627E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314  006280  6EF8               	movwf	tblptru,c
   315  006282  0100               	movlb	0
   316  006284  EF0C  F025         	goto	_main	;jump to C main() function
   317                           tblptru	equ	0xFF8
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           
   321                           	psect	bssCOMRAM
   322  00004A                     __pbssCOMRAM:
   323                           	opt stack 0
   324  00004A                     _contControl:
   325                           	opt stack 0
   326  00004A                     	ds	2
   327  00004C                     _isBright:
   328                           	opt stack 0
   329  00004C                     	ds	2
   330  00004E                     _theresMovement:
   331                           	opt stack 0
   332  00004E                     	ds	2
   333                           tblptru	equ	0xFF8
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           
   337                           	psect	bssBANK1
   338  000181                     __pbssBANK1:
   339                           	opt stack 0
   340  000181                     _LDR_value:
   341                           	opt stack 0
   342  000181                     	ds	3
   343  000184                     _Distancia:
   344                           	opt stack 0
   345  000184                     	ds	2
   346  000186                     _LCD_Buffer:
   347                           	opt stack 0
   348  000186                     	ds	32
   349                           tblptru	equ	0xFF8
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           
   353                           	psect	cstackBANK1
   354  000100                     __pcstackBANK1:
   355                           	opt stack 0
   356  000100                     ?_isdigit:
   357                           	opt stack 0
   358  000100                     ?_Lcd_Port:
   359                           	opt stack 0
   360  000100                     ?___ftge:
   361                           	opt stack 0
   362  000100                     ?___awmod:
   363                           	opt stack 0
   364  000100                     ?___lwdiv:
   365                           	opt stack 0
   366  000100                     ?___lwmod:
   367                           	opt stack 0
   368  000100                     ?___ftpack:
   369                           	opt stack 0
   370  000100                     ?___ftneg:
   371                           	opt stack 0
   372  000100                     ?__tdiv_to_l_:
   373                           	opt stack 0
   374  000100                     ?__div_to_l_:
   375                           	opt stack 0
   376  000100                     ?___lldiv:
   377                           	opt stack 0
   378  000100                     Lcd_Port@a:
   379                           	opt stack 0
   380  000100                     isdigit@c:
   381                           	opt stack 0
   382  000100                     ___awmod@dividend:
   383                           	opt stack 0
   384  000100                     ___lwdiv@dividend:
   385                           	opt stack 0
   386  000100                     ___lwmod@dividend:
   387                           	opt stack 0
   388  000100                     __div_to_l_@f1:
   389                           	opt stack 0
   390  000100                     ___ftpack@arg:
   391                           	opt stack 0
   392  000100                     __tdiv_to_l_@f1:
   393                           	opt stack 0
   394  000100                     ___ftge@ff1:
   395                           	opt stack 0
   396  000100                     ___ftneg@f1:
   397                           	opt stack 0
   398  000100                     ___lldiv@dividend:
   399                           	opt stack 0
   400                           
   401                           ; 4 bytes @ 0x0
   402  000100                     	ds	1
   403  000101                     ??_isdigit:
   404  000101                     ?_Lcd_Cmd:
   405                           	opt stack 0
   406  000101                     ?_lcd_write_char:
   407                           	opt stack 0
   408  000101                     Lcd_Cmd@a:
   409                           	opt stack 0
   410  000101                     lcd_write_char@a:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414  000101                     	ds	1
   415  000102                     ??_Lcd_Cmd:
   416  000102                     lcd_write_char@temp:
   417                           	opt stack 0
   418  000102                     _isdigit$838:
   419                           	opt stack 0
   420  000102                     ___awmod@divisor:
   421                           	opt stack 0
   422  000102                     ___lwdiv@divisor:
   423                           	opt stack 0
   424  000102                     ___lwmod@divisor:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x2
   428  000102                     	ds	1
   429  000103                     ?_lcd_gotoxy:
   430                           	opt stack 0
   431  000103                     ??_lcd_init:
   432  000103                     lcd_gotoxy@a:
   433                           	opt stack 0
   434  000103                     lcd_write_char@y:
   435                           	opt stack 0
   436  000103                     ___ftpack@exp:
   437                           	opt stack 0
   438  000103                     __div_to_l_@f2:
   439                           	opt stack 0
   440  000103                     __tdiv_to_l_@f2:
   441                           	opt stack 0
   442  000103                     ___ftge@ff2:
   443                           	opt stack 0
   444                           
   445                           ; 3 bytes @ 0x3
   446  000103                     	ds	1
   447  000104                     ?_lcd_putc:
   448                           	opt stack 0
   449  000104                     ??___awmod:
   450  000104                     ??___lwdiv:
   451  000104                     ??___lwmod:
   452  000104                     lcd_gotoxy@b:
   453                           	opt stack 0
   454  000104                     ___ftpack@sign:
   455                           	opt stack 0
   456  000104                     lcd_putc@a:
   457                           	opt stack 0
   458  000104                     ___lldiv@divisor:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0x4
   462  000104                     	ds	1
   463  000105                     ??___ftpack:
   464  000105                     lcd_gotoxy@z:
   465                           	opt stack 0
   466  000105                     ___awmod@counter:
   467                           	opt stack 0
   468  000105                     ___lwdiv@counter:
   469                           	opt stack 0
   470  000105                     ___lwmod@counter:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x5
   474  000105                     	ds	1
   475  000106                     ??__tdiv_to_l_:
   476  000106                     ??__div_to_l_:
   477  000106                     ??___ftge:
   478  000106                     lcd_gotoxy@y:
   479                           	opt stack 0
   480  000106                     ___awmod@sign:
   481                           	opt stack 0
   482  000106                     lcd_putc@i:
   483                           	opt stack 0
   484  000106                     ___lwdiv@quotient:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x6
   488  000106                     	ds	1
   489  000107                     ?___awdiv:
   490                           	opt stack 0
   491  000107                     lcd_gotoxy@temp:
   492                           	opt stack 0
   493  000107                     ___awdiv@dividend:
   494                           	opt stack 0
   495  000107                     __div_to_l_@quot:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x7
   499  000107                     	ds	1
   500  000108                     ??___lldiv:
   501  000108                     ?_Obtener_Distancia:
   502                           	opt stack 0
   503  000108                     ?___altoft:
   504                           	opt stack 0
   505  000108                     ?___awtoft:
   506                           	opt stack 0
   507  000108                     ?___lltoft:
   508                           	opt stack 0
   509  000108                     ___awtoft@c:
   510                           	opt stack 0
   511  000108                     ___altoft@c:
   512                           	opt stack 0
   513  000108                     ___lltoft@c:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0x8
   517  000108                     	ds	1
   518  000109                     ___awdiv@divisor:
   519                           	opt stack 0
   520  000109                     ___lldiv@quotient:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x9
   524  000109                     	ds	1
   525  00010A                     Obtener_Distancia@Timer_1:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0xA
   529  00010A                     	ds	1
   530  00010B                     ??___awdiv:
   531  00010B                     ??___awtoft:
   532  00010B                     __div_to_l_@cntr:
   533                           	opt stack 0
   534  00010B                     __tdiv_to_l_@quot:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0xB
   538  00010B                     	ds	1
   539  00010C                     ??___altoft:
   540  00010C                     ??___lltoft:
   541  00010C                     ___awdiv@counter:
   542                           	opt stack 0
   543  00010C                     ___awtoft@sign:
   544                           	opt stack 0
   545  00010C                     __div_to_l_@exp1:
   546                           	opt stack 0
   547  00010C                     Obtener_Distancia@Distancia:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xC
   551  00010C                     	ds	1
   552  00010D                     ___awdiv@sign:
   553                           	opt stack 0
   554  00010D                     ___lldiv@counter:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0xD
   558  00010D                     	ds	1
   559  00010E                     ?___llmod:
   560                           	opt stack 0
   561  00010E                     Obtener_Distancia@Duracion:
   562                           	opt stack 0
   563  00010E                     ___awdiv@quotient:
   564                           	opt stack 0
   565  00010E                     ___llmod@dividend:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0xE
   569  00010E                     	ds	1
   570  00010F                     __tdiv_to_l_@cntr:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0xF
   574  00010F                     	ds	1
   575  000110                     ?___wmul:
   576                           	opt stack 0
   577  000110                     ___altoft@exp:
   578                           	opt stack 0
   579  000110                     __tdiv_to_l_@exp1:
   580                           	opt stack 0
   581  000110                     ___lltoft@exp:
   582                           	opt stack 0
   583  000110                     ___wmul@multiplier:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x10
   587  000110                     	ds	1
   588  000111                     ___altoft@sign:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x11
   592  000111                     	ds	1
   593  000112                     ___wmul@multiplicand:
   594                           	opt stack 0
   595  000112                     ___llmod@divisor:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x12
   599  000112                     	ds	2
   600  000114                     ___wmul@product:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x14
   604  000114                     	ds	2
   605  000116                     ??___llmod:
   606  000116                     ?___ftmul:
   607                           	opt stack 0
   608  000116                     ___ftmul@f1:
   609                           	opt stack 0
   610                           
   611                           ; 3 bytes @ 0x16
   612  000116                     	ds	1
   613  000117                     ___llmod@counter:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x17
   617  000117                     	ds	2
   618  000119                     ___ftmul@f2:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x19
   622  000119                     	ds	3
   623  00011C                     ??___ftmul:
   624                           
   625                           ; 0 bytes @ 0x1C
   626  00011C                     	ds	5
   627  000121                     ___ftmul@exp:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x21
   631  000121                     	ds	1
   632  000122                     ___ftmul@f3_as_product:
   633                           	opt stack 0
   634                           
   635                           ; 3 bytes @ 0x22
   636  000122                     	ds	3
   637  000125                     ___ftmul@cntr:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x25
   641  000125                     	ds	1
   642  000126                     ___ftmul@sign:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x26
   646  000126                     	ds	1
   647  000127                     ?___ftdiv:
   648                           	opt stack 0
   649  000127                     ?_fround:
   650                           	opt stack 0
   651  000127                     ?_scale:
   652                           	opt stack 0
   653  000127                     ?___asftmul:
   654                           	opt stack 0
   655  000127                     fround@prec:
   656                           	opt stack 0
   657  000127                     scale@scl:
   658                           	opt stack 0
   659  000127                     ___asftmul@f1p:
   660                           	opt stack 0
   661  000127                     ___ftdiv@f1:
   662                           	opt stack 0
   663                           
   664                           ; 3 bytes @ 0x27
   665  000127                     	ds	2
   666  000129                     ___asftmul@f2:
   667                           	opt stack 0
   668                           
   669                           ; 3 bytes @ 0x29
   670  000129                     	ds	1
   671  00012A                     ??_fround:
   672  00012A                     ??_scale:
   673  00012A                     ___ftdiv@f2:
   674                           	opt stack 0
   675                           
   676                           ; 3 bytes @ 0x2A
   677  00012A                     	ds	2
   678  00012C                     
   679                           ; 0 bytes @ 0x2C
   680  00012C                     	ds	1
   681  00012D                     ??___ftdiv:
   682                           
   683                           ; 0 bytes @ 0x2D
   684  00012D                     	ds	3
   685  000130                     _fround$1202:
   686                           	opt stack 0
   687  000130                     _scale$1203:
   688                           	opt stack 0
   689                           
   690                           ; 3 bytes @ 0x30
   691  000130                     	ds	2
   692  000132                     ___ftdiv@cntr:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x32
   696  000132                     	ds	1
   697  000133                     ?___fttol:
   698                           	opt stack 0
   699  000133                     ___ftdiv@f3:
   700                           	opt stack 0
   701  000133                     ___fttol@f1:
   702                           	opt stack 0
   703  000133                     _fround$1201:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x33
   707  000133                     	ds	3
   708  000136                     ___ftdiv@exp:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x36
   712  000136                     	ds	1
   713  000137                     ??___fttol:
   714  000137                     ___ftdiv@sign:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x37
   718  000137                     	ds	1
   719  000138                     ?_Read_LDR:
   720                           	opt stack 0
   721  000138                     ?___ftadd:
   722                           	opt stack 0
   723  000138                     ___ftadd@f1:
   724                           	opt stack 0
   725                           
   726                           ; 3 bytes @ 0x38
   727  000138                     	ds	3
   728  00013B                     ??_Read_LDR:
   729  00013B                     ___ftadd@f2:
   730                           	opt stack 0
   731                           
   732                           ; 3 bytes @ 0x3B
   733  00013B                     	ds	1
   734  00013C                     ___fttol@sign1:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x3C
   738  00013C                     	ds	1
   739  00013D                     ___fttol@lval:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x3D
   743  00013D                     	ds	1
   744  00013E                     ??___ftadd:
   745                           
   746                           ; 0 bytes @ 0x3E
   747  00013E                     	ds	1
   748  00013F                     Read_LDR@analog_reading:
   749                           	opt stack 0
   750                           
   751                           ; 3 bytes @ 0x3F
   752  00013F                     	ds	2
   753  000141                     ___fttol@exp1:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x41
   757  000141                     	ds	2
   758  000143                     ___ftadd@sign:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x43
   762  000143                     	ds	1
   763  000144                     ___ftadd@exp2:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x44
   767  000144                     	ds	1
   768  000145                     ___ftadd@exp1:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x45
   772  000145                     	ds	1
   773  000146                     ?___ftsub:
   774                           	opt stack 0
   775  000146                     ?___asftadd:
   776                           	opt stack 0
   777  000146                     ___asftadd@f1p:
   778                           	opt stack 0
   779  000146                     ___ftsub@f1:
   780                           	opt stack 0
   781  000146                     USART_Init@baud_rate:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x46
   785  000146                     	ds	2
   786  000148                     ___asftadd@f2:
   787                           	opt stack 0
   788                           
   789                           ; 3 bytes @ 0x48
   790  000148                     	ds	1
   791  000149                     ___ftsub@f2:
   792                           	opt stack 0
   793                           
   794                           ; 3 bytes @ 0x49
   795  000149                     	ds	1
   796  00014A                     USART_Init@temp:
   797                           	opt stack 0
   798                           
   799                           ; 3 bytes @ 0x4A
   800  00014A                     	ds	1
   801  00014B                     
   802                           ; 0 bytes @ 0x4B
   803  00014B                     	ds	1
   804  00014C                     ?___asftsub:
   805                           	opt stack 0
   806  00014C                     ___asftsub@f1p:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x4C
   810  00014C                     	ds	2
   811  00014E                     ___asftsub@f2:
   812                           	opt stack 0
   813                           
   814                           ; 3 bytes @ 0x4E
   815  00014E                     	ds	3
   816  000151                     ?_sprintf:
   817                           	opt stack 0
   818  000151                     sprintf@sp:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x51
   822  000151                     	ds	2
   823  000153                     sprintf@f:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x53
   827  000153                     	ds	5
   828  000158                     ??_sprintf:
   829                           
   830                           ; 0 bytes @ 0x58
   831  000158                     	ds	6
   832  00015E                     _sprintf$1204:
   833                           	opt stack 0
   834                           
   835                           ; 3 bytes @ 0x5E
   836  00015E                     	ds	3
   837  000161                     _sprintf$563:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x61
   841  000161                     	ds	4
   842  000165                     sprintf@vd:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x65
   846  000165                     	ds	2
   847  000167                     sprintf@vd_565:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x67
   851  000167                     	ds	2
   852  000169                     sprintf@ap:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x69
   856  000169                     	ds	2
   857  00016B                     sprintf@integ:
   858                           	opt stack 0
   859                           
   860                           ; 3 bytes @ 0x6B
   861  00016B                     	ds	3
   862  00016E                     sprintf@_val:
   863                           	opt stack 0
   864                           
   865                           ; 5 bytes @ 0x6E
   866  00016E                     	ds	5
   867  000173                     sprintf@flag:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x73
   871  000173                     	ds	2
   872  000175                     sprintf@exp:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x75
   876  000175                     	ds	2
   877  000177                     sprintf@width:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x77
   881  000177                     	ds	2
   882  000179                     sprintf@fval:
   883                           	opt stack 0
   884                           
   885                           ; 3 bytes @ 0x79
   886  000179                     	ds	3
   887  00017C                     sprintf@prec:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x7C
   891  00017C                     	ds	2
   892  00017E                     sprintf@c:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x7E
   896  00017E                     	ds	1
   897  00017F                     ??_main:
   898                           
   899                           ; 0 bytes @ 0x7F
   900  00017F                     	ds	2
   901                           tblptru	equ	0xFF8
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           
   905                           	psect	cstackBANK0
   906  000060                     __pcstackBANK0:
   907                           	opt stack 0
   908  000060                     ??i1_fround:
   909  000060                     ??i1_scale:
   910  000060                     ?i1___asftmul:
   911                           	opt stack 0
   912  000060                     ?i1___ftdiv:
   913                           	opt stack 0
   914  000060                     i1___asftmul@f1p:
   915                           	opt stack 0
   916  000060                     i1___ftdiv@f1:
   917                           	opt stack 0
   918                           
   919                           ; 3 bytes @ 0x0
   920  000060                     	ds	2
   921  000062                     i1___asftmul@f2:
   922                           	opt stack 0
   923                           
   924                           ; 3 bytes @ 0x2
   925  000062                     	ds	1
   926  000063                     i1___ftdiv@f2:
   927                           	opt stack 0
   928                           
   929                           ; 3 bytes @ 0x3
   930  000063                     	ds	3
   931  000066                     ??i1___ftdiv:
   932  000066                     i1_fround$1827:
   933                           	opt stack 0
   934  000066                     i1_scale$1828:
   935                           	opt stack 0
   936                           
   937                           ; 3 bytes @ 0x6
   938  000066                     	ds	3
   939  000069                     i1_fround$1826:
   940                           	opt stack 0
   941                           
   942                           ; 3 bytes @ 0x9
   943  000069                     	ds	2
   944  00006B                     i1___ftdiv@cntr:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0xB
   948  00006B                     	ds	1
   949  00006C                     ?i1___asftadd:
   950                           	opt stack 0
   951  00006C                     i1___ftdiv@exp:
   952                           	opt stack 0
   953  00006C                     i1___asftadd@f1p:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0xC
   957  00006C                     	ds	1
   958  00006D                     i1___ftdiv@f3:
   959                           	opt stack 0
   960                           
   961                           ; 3 bytes @ 0xD
   962  00006D                     	ds	1
   963  00006E                     i1___asftadd@f2:
   964                           	opt stack 0
   965                           
   966                           ; 3 bytes @ 0xE
   967  00006E                     	ds	2
   968  000070                     i1___ftdiv@sign:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x10
   972  000070                     	ds	1
   973  000071                     ??i1_Read_LDR:
   974  000071                     ?i1_sprintf:
   975                           	opt stack 0
   976  000071                     i1sprintf@sp:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x11
   980  000071                     	ds	2
   981  000073                     i1sprintf@f:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x13
   985  000073                     	ds	2
   986  000075                     i1Read_LDR@analog_reading:
   987                           	opt stack 0
   988                           
   989                           ; 3 bytes @ 0x15
   990  000075                     	ds	3
   991  000078                     ??i1_sprintf:
   992                           
   993                           ; 0 bytes @ 0x18
   994  000078                     	ds	6
   995  00007E                     i1_sprintf$1829:
   996                           	opt stack 0
   997                           
   998                           ; 3 bytes @ 0x1E
   999  00007E                     	ds	3
  1000  000081                     i1_sprintf$563:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x21
  1004  000081                     	ds	4
  1005  000085                     i1sprintf@vd:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x25
  1009  000085                     	ds	2
  1010  000087                     i1sprintf@vd_565:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x27
  1014  000087                     	ds	2
  1015  000089                     i1sprintf@ap:
  1016                           	opt stack 0
  1017                           
  1018                           ; 2 bytes @ 0x29
  1019  000089                     	ds	2
  1020  00008B                     i1sprintf@integ:
  1021                           	opt stack 0
  1022                           
  1023                           ; 3 bytes @ 0x2B
  1024  00008B                     	ds	3
  1025  00008E                     i1sprintf@_val:
  1026                           	opt stack 0
  1027                           
  1028                           ; 5 bytes @ 0x2E
  1029  00008E                     	ds	5
  1030  000093                     i1sprintf@flag:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x33
  1034  000093                     	ds	2
  1035  000095                     i1sprintf@exp:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x35
  1039  000095                     	ds	2
  1040  000097                     i1sprintf@width:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x37
  1044  000097                     	ds	2
  1045  000099                     i1sprintf@fval:
  1046                           	opt stack 0
  1047                           
  1048                           ; 3 bytes @ 0x39
  1049  000099                     	ds	3
  1050  00009C                     i1sprintf@prec:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x3C
  1054  00009C                     	ds	2
  1055  00009E                     i1sprintf@c:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x3E
  1059  00009E                     	ds	1
  1060  00009F                     ??_interrupcaoLOW:
  1061                           
  1062                           ; 0 bytes @ 0x3F
  1063  00009F                     	ds	19
  1064                           tblptru	equ	0xFF8
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           
  1068                           	psect	cstackCOMRAM
  1069  000001                     __pcstackCOMRAM:
  1070                           	opt stack 0
  1071  000001                     ?_control_LED:
  1072                           	opt stack 0
  1073  000001                     control_LED@data:
  1074                           	opt stack 0
  1075                           
  1076                           ; 1 bytes @ 0x0
  1077  000001                     	ds	1
  1078  000002                     ??_interrupcaoHIGH:
  1079                           
  1080                           ; 0 bytes @ 0x1
  1081  000002                     	ds	14
  1082  000010                     interrupcaoHIGH@esp_server_data:
  1083                           	opt stack 0
  1084                           
  1085                           ; 1 bytes @ 0xF
  1086  000010                     	ds	1
  1087  000011                     ?i1_Lcd_Port:
  1088                           	opt stack 0
  1089  000011                     ?i1___ftge:
  1090                           	opt stack 0
  1091  000011                     ?i1_isdigit:
  1092                           	opt stack 0
  1093  000011                     ?i1___awmod:
  1094                           	opt stack 0
  1095  000011                     ?i1___lwdiv:
  1096                           	opt stack 0
  1097  000011                     ?i1___lwmod:
  1098                           	opt stack 0
  1099  000011                     ?i1___ftpack:
  1100                           	opt stack 0
  1101  000011                     ?i1___ftneg:
  1102                           	opt stack 0
  1103  000011                     ?i1__div_to_l_:
  1104                           	opt stack 0
  1105  000011                     ?i1__tdiv_to_l_:
  1106                           	opt stack 0
  1107  000011                     ?i1___lldiv:
  1108                           	opt stack 0
  1109  000011                     i1Lcd_Port@a:
  1110                           	opt stack 0
  1111  000011                     i1isdigit@c:
  1112                           	opt stack 0
  1113  000011                     i1___awmod@dividend:
  1114                           	opt stack 0
  1115  000011                     i1___lwdiv@dividend:
  1116                           	opt stack 0
  1117  000011                     i1___lwmod@dividend:
  1118                           	opt stack 0
  1119  000011                     i1__div_to_l_@f1:
  1120                           	opt stack 0
  1121  000011                     i1___ftpack@arg:
  1122                           	opt stack 0
  1123  000011                     i1__tdiv_to_l_@f1:
  1124                           	opt stack 0
  1125  000011                     i1___ftge@ff1:
  1126                           	opt stack 0
  1127  000011                     i1___ftneg@f1:
  1128                           	opt stack 0
  1129  000011                     i1___lldiv@dividend:
  1130                           	opt stack 0
  1131                           
  1132                           ; 4 bytes @ 0x10
  1133  000011                     	ds	1
  1134  000012                     ?i1_Lcd_Cmd:
  1135                           	opt stack 0
  1136  000012                     ?i1_lcd_write_char:
  1137                           	opt stack 0
  1138  000012                     ??i1_isdigit:
  1139  000012                     i1Lcd_Cmd@a:
  1140                           	opt stack 0
  1141  000012                     i1lcd_write_char@a:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x11
  1145  000012                     	ds	1
  1146  000013                     ??i1_Lcd_Cmd:
  1147  000013                     i1lcd_write_char@temp:
  1148                           	opt stack 0
  1149  000013                     i1_isdigit$838:
  1150                           	opt stack 0
  1151  000013                     i1___awmod@divisor:
  1152                           	opt stack 0
  1153  000013                     i1___lwdiv@divisor:
  1154                           	opt stack 0
  1155  000013                     i1___lwmod@divisor:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x12
  1159  000013                     	ds	1
  1160  000014                     ?i1_lcd_gotoxy:
  1161                           	opt stack 0
  1162  000014                     i1lcd_gotoxy@a:
  1163                           	opt stack 0
  1164  000014                     i1lcd_write_char@y:
  1165                           	opt stack 0
  1166  000014                     i1___ftpack@exp:
  1167                           	opt stack 0
  1168  000014                     i1__div_to_l_@f2:
  1169                           	opt stack 0
  1170  000014                     i1__tdiv_to_l_@f2:
  1171                           	opt stack 0
  1172  000014                     i1___ftge@ff2:
  1173                           	opt stack 0
  1174                           
  1175                           ; 3 bytes @ 0x13
  1176  000014                     	ds	1
  1177  000015                     ?i1_lcd_putc:
  1178                           	opt stack 0
  1179  000015                     ??i1___awmod:
  1180  000015                     ??i1___lwdiv:
  1181  000015                     ??i1___lwmod:
  1182  000015                     i1lcd_gotoxy@b:
  1183                           	opt stack 0
  1184  000015                     i1___ftpack@sign:
  1185                           	opt stack 0
  1186  000015                     i1lcd_putc@a:
  1187                           	opt stack 0
  1188  000015                     i1___lldiv@divisor:
  1189                           	opt stack 0
  1190                           
  1191                           ; 4 bytes @ 0x14
  1192  000015                     	ds	1
  1193  000016                     ??i1___ftpack:
  1194  000016                     i1lcd_gotoxy@z:
  1195                           	opt stack 0
  1196  000016                     i1___awmod@counter:
  1197                           	opt stack 0
  1198  000016                     i1___lwdiv@counter:
  1199                           	opt stack 0
  1200  000016                     i1___lwmod@counter:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x15
  1204  000016                     	ds	1
  1205  000017                     ??i1__div_to_l_:
  1206  000017                     ??i1__tdiv_to_l_:
  1207  000017                     ??i1___ftge:
  1208  000017                     i1lcd_gotoxy@y:
  1209                           	opt stack 0
  1210  000017                     i1___awmod@sign:
  1211                           	opt stack 0
  1212  000017                     i1lcd_putc@i:
  1213                           	opt stack 0
  1214  000017                     i1___lwdiv@quotient:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x16
  1218  000017                     	ds	1
  1219  000018                     ?i1___awdiv:
  1220                           	opt stack 0
  1221  000018                     i1lcd_gotoxy@temp:
  1222                           	opt stack 0
  1223  000018                     i1___awdiv@dividend:
  1224                           	opt stack 0
  1225  000018                     i1__div_to_l_@quot:
  1226                           	opt stack 0
  1227                           
  1228                           ; 4 bytes @ 0x17
  1229  000018                     	ds	1
  1230  000019                     ??i1___lldiv:
  1231  000019                     ?i1_Obtener_Distancia:
  1232                           	opt stack 0
  1233  000019                     ?i1___awtoft:
  1234                           	opt stack 0
  1235  000019                     ?i1___ftadd:
  1236                           	opt stack 0
  1237  000019                     ?i1___lltoft:
  1238                           	opt stack 0
  1239  000019                     i1___awtoft@c:
  1240                           	opt stack 0
  1241  000019                     i1___ftadd@f1:
  1242                           	opt stack 0
  1243  000019                     i1___lltoft@c:
  1244                           	opt stack 0
  1245                           
  1246                           ; 4 bytes @ 0x18
  1247  000019                     	ds	1
  1248  00001A                     i1___awdiv@divisor:
  1249                           	opt stack 0
  1250  00001A                     i1___lldiv@quotient:
  1251                           	opt stack 0
  1252                           
  1253                           ; 4 bytes @ 0x19
  1254  00001A                     	ds	1
  1255  00001B                     i1Obtener_Distancia@Timer_1:
  1256                           	opt stack 0
  1257                           
  1258                           ; 2 bytes @ 0x1A
  1259  00001B                     	ds	1
  1260  00001C                     ??i1___awdiv:
  1261  00001C                     ??i1___awtoft:
  1262  00001C                     i1__div_to_l_@cntr:
  1263                           	opt stack 0
  1264  00001C                     i1___ftadd@f2:
  1265                           	opt stack 0
  1266  00001C                     i1__tdiv_to_l_@quot:
  1267                           	opt stack 0
  1268                           
  1269                           ; 4 bytes @ 0x1B
  1270  00001C                     	ds	1
  1271  00001D                     ??i1___lltoft:
  1272  00001D                     i1___awdiv@counter:
  1273                           	opt stack 0
  1274  00001D                     i1___awtoft@sign:
  1275                           	opt stack 0
  1276  00001D                     i1__div_to_l_@exp1:
  1277                           	opt stack 0
  1278  00001D                     i1Obtener_Distancia@Distancia:
  1279                           	opt stack 0
  1280                           
  1281                           ; 2 bytes @ 0x1C
  1282  00001D                     	ds	1
  1283  00001E                     i1___awdiv@sign:
  1284                           	opt stack 0
  1285  00001E                     i1___lldiv@counter:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x1D
  1289  00001E                     	ds	1
  1290  00001F                     ??i1___ftadd:
  1291  00001F                     ?i1___llmod:
  1292                           	opt stack 0
  1293  00001F                     i1Obtener_Distancia@Duracion:
  1294                           	opt stack 0
  1295  00001F                     i1___awdiv@quotient:
  1296                           	opt stack 0
  1297  00001F                     i1___llmod@dividend:
  1298                           	opt stack 0
  1299                           
  1300                           ; 4 bytes @ 0x1E
  1301  00001F                     	ds	1
  1302  000020                     i1__tdiv_to_l_@cntr:
  1303                           	opt stack 0
  1304                           
  1305                           ; 1 bytes @ 0x1F
  1306  000020                     	ds	1
  1307  000021                     ?i1___wmul:
  1308                           	opt stack 0
  1309  000021                     i1__tdiv_to_l_@exp1:
  1310                           	opt stack 0
  1311  000021                     i1___lltoft@exp:
  1312                           	opt stack 0
  1313  000021                     i1___wmul@multiplier:
  1314                           	opt stack 0
  1315                           
  1316                           ; 2 bytes @ 0x20
  1317  000021                     	ds	2
  1318  000023                     i1___wmul@multiplicand:
  1319                           	opt stack 0
  1320  000023                     i1___llmod@divisor:
  1321                           	opt stack 0
  1322                           
  1323                           ; 4 bytes @ 0x22
  1324  000023                     	ds	1
  1325  000024                     i1___ftadd@sign:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x23
  1329  000024                     	ds	1
  1330  000025                     i1___ftadd@exp2:
  1331                           	opt stack 0
  1332  000025                     i1___wmul@product:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x24
  1336  000025                     	ds	1
  1337  000026                     i1___ftadd@exp1:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x25
  1341  000026                     	ds	1
  1342  000027                     ??i1___llmod:
  1343  000027                     ?i1___ftsub:
  1344                           	opt stack 0
  1345  000027                     ?i1___fttol:
  1346                           	opt stack 0
  1347  000027                     i1___ftsub@f1:
  1348                           	opt stack 0
  1349  000027                     i1___fttol@f1:
  1350                           	opt stack 0
  1351                           
  1352                           ; 3 bytes @ 0x26
  1353  000027                     	ds	1
  1354  000028                     i1___llmod@counter:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0x27
  1358  000028                     	ds	2
  1359  00002A                     i1___ftsub@f2:
  1360                           	opt stack 0
  1361                           
  1362                           ; 3 bytes @ 0x29
  1363  00002A                     	ds	1
  1364  00002B                     ??i1___fttol:
  1365                           
  1366                           ; 0 bytes @ 0x2A
  1367  00002B                     	ds	2
  1368  00002D                     ?i1___asftsub:
  1369                           	opt stack 0
  1370  00002D                     i1___asftsub@f1p:
  1371                           	opt stack 0
  1372                           
  1373                           ; 2 bytes @ 0x2C
  1374  00002D                     	ds	2
  1375  00002F                     i1___asftsub@f2:
  1376                           	opt stack 0
  1377                           
  1378                           ; 3 bytes @ 0x2E
  1379  00002F                     	ds	1
  1380  000030                     i1___fttol@sign1:
  1381                           	opt stack 0
  1382                           
  1383                           ; 1 bytes @ 0x2F
  1384  000030                     	ds	1
  1385  000031                     i1___fttol@lval:
  1386                           	opt stack 0
  1387                           
  1388                           ; 4 bytes @ 0x30
  1389  000031                     	ds	1
  1390  000032                     
  1391                           ; 0 bytes @ 0x31
  1392  000032                     	ds	3
  1393  000035                     i1___fttol@exp1:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x34
  1397  000035                     	ds	1
  1398  000036                     ?i1___ftmul:
  1399                           	opt stack 0
  1400  000036                     i1___ftmul@f1:
  1401                           	opt stack 0
  1402                           
  1403                           ; 3 bytes @ 0x35
  1404  000036                     	ds	3
  1405  000039                     i1___ftmul@f2:
  1406                           	opt stack 0
  1407                           
  1408                           ; 3 bytes @ 0x38
  1409  000039                     	ds	3
  1410  00003C                     ??i1___ftmul:
  1411                           
  1412                           ; 0 bytes @ 0x3B
  1413  00003C                     	ds	5
  1414  000041                     i1___ftmul@exp:
  1415                           	opt stack 0
  1416                           
  1417                           ; 1 bytes @ 0x40
  1418  000041                     	ds	1
  1419  000042                     i1___ftmul@f3_as_product:
  1420                           	opt stack 0
  1421                           
  1422                           ; 3 bytes @ 0x41
  1423  000042                     	ds	3
  1424  000045                     i1___ftmul@cntr:
  1425                           	opt stack 0
  1426                           
  1427                           ; 1 bytes @ 0x44
  1428  000045                     	ds	1
  1429  000046                     i1___ftmul@sign:
  1430                           	opt stack 0
  1431                           
  1432                           ; 1 bytes @ 0x45
  1433  000046                     	ds	1
  1434  000047                     ?i1_Read_LDR:
  1435                           	opt stack 0
  1436  000047                     ?i1_fround:
  1437                           	opt stack 0
  1438  000047                     ?i1_scale:
  1439                           	opt stack 0
  1440  000047                     i1fround@prec:
  1441                           	opt stack 0
  1442  000047                     i1scale@scl:
  1443                           	opt stack 0
  1444                           
  1445                           ; 1 bytes @ 0x46
  1446  000047                     	ds	3
  1447  00004A                     tblptru	equ	0xFF8
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           
  1451                           ; 0 bytes @ 0x49
  1452 ;;
  1453 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1454 ;;
  1455 ;; *************** function _main *****************
  1456 ;; Defined at:
  1457 ;;		line 74 in file "main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;		None               void
  1464 ;; Registers used:
  1465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1473 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1474 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1475 ;;Total ram usage:        2 bytes
  1476 ;; Hardware stack levels required when called:   14
  1477 ;; This function calls:
  1478 ;;		_lcd_gotoxy
  1479 ;;		_lcd_init
  1480 ;;		_lcd_putc
  1481 ;;		_Configuracion_Registros
  1482 ;;		_Timer1_Init
  1483 ;;		_Init_AD
  1484 ;;		_USART_Init
  1485 ;;		_inicioInterrupcoes
  1486 ;;		_Obtener_Distancia
  1487 ;;		_Read_LDR
  1488 ;;		_sprintf
  1489 ;; This function is called by:
  1490 ;;		Startup code after reset
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text0
  1495  004A18                     __ptext0:
  1496                           	opt stack 0
  1497  004A18                     _main:
  1498                           	opt stack 17
  1499                           
  1500                           ;main.c: 76: Configuracion_Registros();
  1501                           
  1502                           ;incstack = 0
  1503                           ;incstack = 0
  1504  004A18  EC90  F031         	call	_Configuracion_Registros	;wreg free
  1505                           
  1506                           ;main.c: 77: Timer1_Init();
  1507  004A1C  EC86  F031         	call	_Timer1_Init	;wreg free
  1508                           
  1509                           ;main.c: 78: lcd_init();
  1510  004A20  ECF9  F023         	call	_lcd_init	;wreg free
  1511                           
  1512                           ;main.c: 79: Init_AD();
  1513  004A24  EC7C  F031         	call	_Init_AD	;wreg free
  1514                           
  1515                           ;main.c: 81: USART_Init();
  1516  004A28  EC76  F02A         	call	_USART_Init	;wreg free
  1517                           
  1518                           ;main.c: 82: inicioInterrupcoes();
  1519  004A2C  EC72  F031         	call	_inicioInterrupcoes	;wreg free
  1520  004A30                     l154:
  1521                           
  1522                           ;main.c: 85: LATB = 0x0;
  1523  004A30  0E00               	movlw	0
  1524  004A32  6E8A               	movwf	3978,c	;volatile
  1525                           
  1526                           ;main.c: 86: Distancia=Obtener_Distancia();
  1527  004A34  EC1F  F02A         	call	_Obtener_Distancia	;wreg free
  1528  004A38  0101               	movlb	1	; () banked
  1529  004A3A  C108  F184         	movff	?_Obtener_Distancia,_Distancia
  1530  004A3E  0101               	movlb	1	; () banked
  1531  004A40  C109  F185         	movff	?_Obtener_Distancia+1,_Distancia+1
  1532                           
  1533                           ; BSR set to: 1
  1534                           ;main.c: 87: LDR_value=Read_LDR();
  1535  004A44  EC18  F026         	call	_Read_LDR	;wreg free
  1536  004A48  C13A  F183         	movff	?_Read_LDR+2,_LDR_value+2
  1537  004A4C  C139  F182         	movff	?_Read_LDR+1,_LDR_value+1
  1538  004A50  C138  F181         	movff	?_Read_LDR,_LDR_value
  1539                           
  1540                           ;main.c: 88: lcd_gotoxy(1,1);
  1541  004A54  0101               	movlb	1	; () banked
  1542  004A56  6F7F               	movwf	??_main& (0+255),b
  1543  004A58  0E01               	movlw	1
  1544  004A5A  0101               	movlb	1	; () banked
  1545  004A5C  0101               	movlb	1	; () banked
  1546  004A5E  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  1547  004A60  0101               	movlb	1	; () banked
  1548  004A62  517F               	movf	??_main& (0+255),w,b
  1549  004A64  0101               	movlb	1	; () banked
  1550  004A66  6F80               	movwf	(??_main+1)& (0+255),b
  1551  004A68  0E01               	movlw	1
  1552  004A6A  0101               	movlb	1	; () banked
  1553  004A6C  0101               	movlb	1	; () banked
  1554  004A6E  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  1555  004A70  0101               	movlb	1	; () banked
  1556  004A72  5180               	movf	(??_main+1)& (0+255),w,b
  1557  004A74  ECFF  F02B         	call	_lcd_gotoxy	;wreg free
  1558                           
  1559                           ;main.c: 89: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
  1560  004A78  0101               	movlb	1	; () banked
  1561  004A7A  0E01               	movlw	high _LCD_Buffer
  1562  004A7C  0101               	movlb	1	; () banked
  1563  004A7E  0101               	movlb	1	; () banked
  1564  004A80  6F52               	movwf	(?_sprintf+1)& (0+255),b
  1565  004A82  0101               	movlb	1	; () banked
  1566  004A84  0E86               	movlw	low _LCD_Buffer
  1567  004A86  0101               	movlb	1	; () banked
  1568  004A88  6F51               	movwf	?_sprintf& (0+255),b
  1569  004A8A  0E08               	movlw	high STR_1
  1570  004A8C  0101               	movlb	1	; () banked
  1571  004A8E  0101               	movlb	1	; () banked
  1572  004A90  6F54               	movwf	(?_sprintf+3)& (0+255),b
  1573  004A92  0E88               	movlw	low STR_1
  1574  004A94  0101               	movlb	1	; () banked
  1575  004A96  6F53               	movwf	(?_sprintf+2)& (0+255),b
  1576  004A98  C181  F155         	movff	_LDR_value,?_sprintf+4
  1577  004A9C  C182  F156         	movff	_LDR_value+1,?_sprintf+5
  1578  004AA0  C183  F157         	movff	_LDR_value+2,?_sprintf+6
  1579  004AA4  EC4A  F004         	call	_sprintf	;wreg free
  1580                           
  1581                           ;main.c: 90: lcd_putc(LCD_Buffer);
  1582  004AA8  0101               	movlb	1	; () banked
  1583  004AAA  0E01               	movlw	high _LCD_Buffer
  1584  004AAC  0101               	movlb	1	; () banked
  1585  004AAE  0101               	movlb	1	; () banked
  1586  004AB0  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  1587  004AB2  0101               	movlb	1	; () banked
  1588  004AB4  0E86               	movlw	low _LCD_Buffer
  1589  004AB6  0101               	movlb	1	; () banked
  1590  004AB8  6F04               	movwf	?_lcd_putc& (0+255),b
  1591  004ABA  ECF9  F02D         	call	_lcd_putc	;wreg free
  1592                           
  1593                           ;main.c: 91: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
  1594  004ABE  0101               	movlb	1	; () banked
  1595  004AC0  0E01               	movlw	high _LCD_Buffer
  1596  004AC2  0101               	movlb	1	; () banked
  1597  004AC4  0101               	movlb	1	; () banked
  1598  004AC6  6F52               	movwf	(?_sprintf+1)& (0+255),b
  1599  004AC8  0101               	movlb	1	; () banked
  1600  004ACA  0E86               	movlw	low _LCD_Buffer
  1601  004ACC  0101               	movlb	1	; () banked
  1602  004ACE  6F51               	movwf	?_sprintf& (0+255),b
  1603  004AD0  0E08               	movlw	high STR_2
  1604  004AD2  0101               	movlb	1	; () banked
  1605  004AD4  0101               	movlb	1	; () banked
  1606  004AD6  6F54               	movwf	(?_sprintf+3)& (0+255),b
  1607  004AD8  0E76               	movlw	low STR_2
  1608  004ADA  0101               	movlb	1	; () banked
  1609  004ADC  6F53               	movwf	(?_sprintf+2)& (0+255),b
  1610  004ADE  C184  F155         	movff	_Distancia,?_sprintf+4
  1611  004AE2  C185  F156         	movff	_Distancia+1,?_sprintf+5
  1612  004AE6  EC4A  F004         	call	_sprintf	;wreg free
  1613                           
  1614                           ;main.c: 92: lcd_gotoxy(2,1);
  1615  004AEA  0101               	movlb	1	; () banked
  1616  004AEC  6F7F               	movwf	??_main& (0+255),b
  1617  004AEE  0E02               	movlw	2
  1618  004AF0  0101               	movlb	1	; () banked
  1619  004AF2  0101               	movlb	1	; () banked
  1620  004AF4  6F03               	movwf	?_lcd_gotoxy& (0+255),b
  1621  004AF6  0101               	movlb	1	; () banked
  1622  004AF8  517F               	movf	??_main& (0+255),w,b
  1623  004AFA  0101               	movlb	1	; () banked
  1624  004AFC  6F80               	movwf	(??_main+1)& (0+255),b
  1625  004AFE  0E01               	movlw	1
  1626  004B00  0101               	movlb	1	; () banked
  1627  004B02  0101               	movlb	1	; () banked
  1628  004B04  6F04               	movwf	(?_lcd_gotoxy+1)& (0+255),b
  1629  004B06  0101               	movlb	1	; () banked
  1630  004B08  5180               	movf	(??_main+1)& (0+255),w,b
  1631  004B0A  ECFF  F02B         	call	_lcd_gotoxy	;wreg free
  1632                           
  1633                           ;main.c: 93: lcd_putc(LCD_Buffer);
  1634  004B0E  0101               	movlb	1	; () banked
  1635  004B10  0E01               	movlw	high _LCD_Buffer
  1636  004B12  0101               	movlb	1	; () banked
  1637  004B14  0101               	movlb	1	; () banked
  1638  004B16  6F05               	movwf	(?_lcd_putc+1)& (0+255),b
  1639  004B18  0101               	movlb	1	; () banked
  1640  004B1A  0E86               	movlw	low _LCD_Buffer
  1641  004B1C  0101               	movlb	1	; () banked
  1642  004B1E  6F04               	movwf	?_lcd_putc& (0+255),b
  1643  004B20  ECF9  F02D         	call	_lcd_putc	;wreg free
  1644  004B24  D785               	goto	l154
  1645  004B26                     __end_of_main:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           
  1651 ;; *************** function _sprintf *****************
  1652 ;; Defined at:
  1653 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  sp              2   81[BANK1 ] PTR unsigned char 
  1656 ;;		 -> LCD_Buffer(32), 
  1657 ;;  f               2   83[BANK1 ] PTR const unsigned char 
  1658 ;;		 -> STR_4(18), STR_3(10), STR_2(18), STR_1(10), 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  vd              2  101[BANK1 ] unsigned int 
  1661 ;;  vd              2  103[BANK1 ] unsigned int 
  1662 ;;  _val            5  110[BANK1 ] struct .
  1663 ;;  fval            3  121[BANK1 ] struct .
  1664 ;;  integ           3  107[BANK1 ] struct .
  1665 ;;  ival            3    0        struct .
  1666 ;;  prec            2  124[BANK1 ] int 
  1667 ;;  width           2  119[BANK1 ] int 
  1668 ;;  exp             2  117[BANK1 ] int 
  1669 ;;  flag            2  115[BANK1 ] unsigned short 
  1670 ;;  ap              2  105[BANK1 ] PTR void [1]
  1671 ;;		 -> ?_sprintf(2), 
  1672 ;;  c               1  126[BANK1 ] char 
  1673 ;;  d               1    0        unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  2   81[BANK1 ] int 
  1676 ;; Registers used:
  1677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1683 ;;      Params:         0       0       7       0       0       0       0       0       0
  1684 ;;      Locals:         0       0      33       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       6       0       0       0       0       0       0
  1686 ;;      Totals:         0       0      46       0       0       0       0       0       0
  1687 ;;Total ram usage:       46 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:   13
  1690 ;; This function calls:
  1691 ;;		_fround
  1692 ;;		_scale
  1693 ;;		_isdigit
  1694 ;;		__tdiv_to_l_
  1695 ;;		__div_to_l_
  1696 ;;		___asftadd
  1697 ;;		___asftmul
  1698 ;;		___ftmul
  1699 ;;		___asftsub
  1700 ;;		___awdiv
  1701 ;;		___ftge
  1702 ;;		___ftneg
  1703 ;;		___fttol
  1704 ;;		___lldiv
  1705 ;;		___llmod
  1706 ;;		___lltoft
  1707 ;;		___lwmod
  1708 ;;		___wmul
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text1
  1715  000894                     __ptext1:
  1716                           	opt stack 0
  1717  000894                     _sprintf:
  1718                           	opt stack 17
  1719                           
  1720                           ;doprnt.c: 494: va_list ap;
  1721                           ;doprnt.c: 499: signed char c;
  1722                           ;doprnt.c: 501: int width;
  1723                           ;doprnt.c: 504: int prec;
  1724                           ;doprnt.c: 508: unsigned short flag;
  1725                           ;doprnt.c: 515: char d;
  1726                           ;doprnt.c: 516: double fval, integ;
  1727                           ;doprnt.c: 517: int exp;
  1728                           ;doprnt.c: 518: double ival;
  1729                           ;doprnt.c: 519: union {
  1730                           ;doprnt.c: 520: unsigned long _val;
  1731                           ;doprnt.c: 521: struct {
  1732                           ;doprnt.c: 522: const char * _cp;
  1733                           ;doprnt.c: 523: unsigned _len;
  1734                           ;doprnt.c: 524: } _str;
  1735                           ;doprnt.c: 525: } _val;
  1736                           ;doprnt.c: 542: *ap = __va_start();
  1737                           
  1738                           ;incstack = 0
  1739                           ;incstack = 0
  1740  000894  0101               	movlb	1	; () banked
  1741  000896  0E01               	movlw	high (?_sprintf+4)
  1742  000898  0101               	movlb	1	; () banked
  1743  00089A  0101               	movlb	1	; () banked
  1744  00089C  6F6A               	movwf	(sprintf@ap+1)& (0+255),b
  1745  00089E  0101               	movlb	1	; () banked
  1746  0008A0  0E55               	movlw	low (?_sprintf+4)
  1747  0008A2  0101               	movlb	1	; () banked
  1748  0008A4  6F69               	movwf	sprintf@ap& (0+255),b
  1749                           
  1750                           ;doprnt.c: 545: while(c = *f++) {
  1751  0008A6  EF3C  F00B         	goto	l10469
  1752  0008AA                     l10145:
  1753                           
  1754                           ; BSR set to: 1
  1755                           ;doprnt.c: 547: if(c != '%')
  1756  0008AA  0101               	movlb	1	; () banked
  1757  0008AC  0101               	movlb	1	; () banked
  1758  0008AE  517E               	movf	sprintf@c& (0+255),w,b
  1759  0008B0  0A25               	xorlw	37
  1760  0008B2  B4D8               	btfsc	status,2,c
  1761  0008B4  D00D               	goto	l10151
  1762                           
  1763                           ; BSR set to: 1
  1764                           ;doprnt.c: 549: {
  1765                           ;doprnt.c: 550: ((*sp++ = (c)));
  1766  0008B6  C151  FFD9         	movff	sprintf@sp,fsr2l
  1767  0008BA  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  1768  0008BE  0101               	movlb	1	; () banked
  1769  0008C0  C17E  FFDF         	movff	sprintf@c,indf2
  1770                           
  1771                           ; BSR set to: 1
  1772  0008C4  0101               	movlb	1	; () banked
  1773  0008C6  0101               	movlb	1	; () banked
  1774  0008C8  4B51               	infsnz	sprintf@sp& (0+255),f,b
  1775  0008CA  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  1776                           
  1777                           ;doprnt.c: 551: continue;
  1778  0008CC  EF3C  F00B         	goto	l10469
  1779  0008D0                     l10151:
  1780                           
  1781                           ; BSR set to: 1
  1782                           ;doprnt.c: 552: }
  1783                           ;doprnt.c: 555: width = 0;
  1784  0008D0  0E00               	movlw	0
  1785  0008D2  0101               	movlb	1	; () banked
  1786  0008D4  0101               	movlb	1	; () banked
  1787  0008D6  6F78               	movwf	(sprintf@width+1)& (0+255),b
  1788  0008D8  0E00               	movlw	0
  1789  0008DA  0101               	movlb	1	; () banked
  1790  0008DC  6F77               	movwf	sprintf@width& (0+255),b
  1791                           
  1792                           ;doprnt.c: 557: flag = 0;
  1793  0008DE  0E00               	movlw	0
  1794  0008E0  0101               	movlb	1	; () banked
  1795  0008E2  0101               	movlb	1	; () banked
  1796  0008E4  6F74               	movwf	(sprintf@flag+1)& (0+255),b
  1797  0008E6  0E00               	movlw	0
  1798  0008E8  0101               	movlb	1	; () banked
  1799  0008EA  6F73               	movwf	sprintf@flag& (0+255),b
  1800  0008EC  D007               	goto	l10157
  1801  0008EE                     l10153:
  1802                           
  1803                           ; BSR set to: 1
  1804                           ;doprnt.c: 589: flag |= 0x04;
  1805  0008EE  0101               	movlb	1	; () banked
  1806  0008F0  0101               	movlb	1	; () banked
  1807  0008F2  8573               	bsf	sprintf@flag& (0+255),2,b
  1808                           
  1809                           ;doprnt.c: 590: f++;
  1810  0008F4  0101               	movlb	1	; () banked
  1811  0008F6  0101               	movlb	1	; () banked
  1812  0008F8  4B53               	infsnz	sprintf@f& (0+255),f,b
  1813  0008FA  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1814  0008FC                     l10157:
  1815                           
  1816                           ; BSR set to: 1
  1817  0008FC  0101               	movlb	1	; () banked
  1818  0008FE  C153  FFF6         	movff	sprintf@f,tblptrl
  1819  000902  0101               	movlb	1	; () banked
  1820  000904  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1821  000908  0008               	tblrd		*
  1822  00090A  50F5               	movf	tablat,w,c
  1823                           
  1824                           ; Switch size 1, requested type "space"
  1825                           ; Number of cases is 1, Range of values is 48 to 48
  1826                           ; switch strategies available:
  1827                           ; Name         Instructions Cycles
  1828                           ; simple_byte            4     3 (average)
  1829                           ;	Chosen strategy is simple_byte
  1830  00090C  0A30               	xorlw	48	; case 48
  1831  00090E  B4D8               	btfsc	status,2,c
  1832  000910  D7EE               	goto	l10153
  1833                           
  1834                           ; BSR set to: 1
  1835                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1836                           
  1837                           ; BSR set to: 1
  1838                           
  1839                           ; BSR set to: 1
  1840                           ;doprnt.c: 595: }
  1841                           
  1842                           ; BSR set to: 1
  1843                           ;doprnt.c: 594: break;
  1844  000912  0101               	movlb	1	; () banked
  1845  000914  C153  FFF6         	movff	sprintf@f,tblptrl
  1846  000918  0101               	movlb	1	; () banked
  1847  00091A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1848  00091E  0008               	tblrd		*
  1849  000920  0101               	movlb	1	; () banked
  1850  000922  CFF5 F100          	movff	tablat,?_isdigit
  1851  000926  ECD6  F02F         	call	_isdigit	;wreg free
  1852  00092A  A0D8               	btfss	status,0,c
  1853  00092C  D049               	goto	l10171
  1854                           
  1855                           ;doprnt.c: 607: width = 0;
  1856  00092E  0E00               	movlw	0
  1857  000930  0101               	movlb	1	; () banked
  1858  000932  0101               	movlb	1	; () banked
  1859  000934  6F78               	movwf	(sprintf@width+1)& (0+255),b
  1860  000936  0E00               	movlw	0
  1861  000938  0101               	movlb	1	; () banked
  1862  00093A  6F77               	movwf	sprintf@width& (0+255),b
  1863  00093C                     l10163:
  1864                           
  1865                           ;doprnt.c: 609: width *= 10;
  1866  00093C  C177  F110         	movff	sprintf@width,?___wmul
  1867  000940  C178  F111         	movff	sprintf@width+1,?___wmul+1
  1868  000944  0E00               	movlw	0
  1869  000946  0101               	movlb	1	; () banked
  1870  000948  0101               	movlb	1	; () banked
  1871  00094A  6F13               	movwf	(?___wmul+3)& (0+255),b
  1872  00094C  0E0A               	movlw	10
  1873  00094E  0101               	movlb	1	; () banked
  1874  000950  6F12               	movwf	(?___wmul+2)& (0+255),b
  1875  000952  EC5D  F02E         	call	___wmul	;wreg free
  1876  000956  0101               	movlb	1	; () banked
  1877  000958  C110  F177         	movff	?___wmul,sprintf@width
  1878  00095C  0101               	movlb	1	; () banked
  1879  00095E  C111  F178         	movff	?___wmul+1,sprintf@width+1
  1880                           
  1881                           ; BSR set to: 1
  1882                           ;doprnt.c: 610: width += *f++ - '0';
  1883  000962  0101               	movlb	1	; () banked
  1884  000964  C153  FFF6         	movff	sprintf@f,tblptrl
  1885  000968  0101               	movlb	1	; () banked
  1886  00096A  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1887  00096E  0008               	tblrd		*
  1888  000970  CFF5 F158          	movff	tablat,??_sprintf
  1889  000974  0ED0               	movlw	208
  1890  000976  0101               	movlb	1	; () banked
  1891  000978  2558               	addwf	??_sprintf& (0+255),w,b
  1892  00097A  0101               	movlb	1	; () banked
  1893  00097C  6F59               	movwf	(??_sprintf+1)& (0+255),b
  1894  00097E  0101               	movlb	1	; () banked
  1895  000980  0101               	movlb	1	; () banked
  1896  000982  6B5A               	clrf	(??_sprintf+2)& (0+255),b
  1897  000984  0EFF               	movlw	255
  1898  000986  235A               	addwfc	(??_sprintf+2)& (0+255),f,b
  1899  000988  0101               	movlb	1	; () banked
  1900  00098A  5159               	movf	(??_sprintf+1)& (0+255),w,b
  1901  00098C  0101               	movlb	1	; () banked
  1902  00098E  0101               	movlb	1	; () banked
  1903  000990  2777               	addwf	sprintf@width& (0+255),f,b
  1904  000992  0101               	movlb	1	; () banked
  1905  000994  515A               	movf	(??_sprintf+2)& (0+255),w,b
  1906  000996  0101               	movlb	1	; () banked
  1907  000998  0101               	movlb	1	; () banked
  1908  00099A  2378               	addwfc	(sprintf@width+1)& (0+255),f,b
  1909                           
  1910                           ; BSR set to: 1
  1911  00099C  0101               	movlb	1	; () banked
  1912  00099E  0101               	movlb	1	; () banked
  1913  0009A0  4B53               	infsnz	sprintf@f& (0+255),f,b
  1914  0009A2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1915                           
  1916                           ; BSR set to: 1
  1917                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1918  0009A4  0101               	movlb	1	; () banked
  1919  0009A6  C153  FFF6         	movff	sprintf@f,tblptrl
  1920  0009AA  0101               	movlb	1	; () banked
  1921  0009AC  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1922  0009B0  0008               	tblrd		*
  1923  0009B2  0101               	movlb	1	; () banked
  1924  0009B4  CFF5 F100          	movff	tablat,?_isdigit
  1925  0009B8  ECD6  F02F         	call	_isdigit	;wreg free
  1926  0009BC  B0D8               	btfsc	status,0,c
  1927  0009BE  D7BE               	goto	l10163
  1928  0009C0                     l10171:
  1929                           
  1930                           ;doprnt.c: 617: }
  1931                           ;doprnt.c: 620: if(*f == '.') {
  1932  0009C0  0101               	movlb	1	; () banked
  1933  0009C2  C153  FFF6         	movff	sprintf@f,tblptrl
  1934  0009C6  0101               	movlb	1	; () banked
  1935  0009C8  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1936  0009CC  0008               	tblrd		*
  1937  0009CE  50F5               	movf	tablat,w,c
  1938  0009D0  0A2E               	xorlw	46
  1939  0009D2  A4D8               	btfss	status,2,c
  1940  0009D4  D04A               	goto	l10183
  1941                           
  1942                           ; BSR set to: 1
  1943                           ;doprnt.c: 621: flag |= 0x4000;
  1944  0009D6  0101               	movlb	1	; () banked
  1945  0009D8  0101               	movlb	1	; () banked
  1946  0009DA  8D74               	bsf	(sprintf@flag+1)& (0+255),6,b
  1947                           
  1948                           ;doprnt.c: 622: f++;
  1949  0009DC  0101               	movlb	1	; () banked
  1950  0009DE  0101               	movlb	1	; () banked
  1951  0009E0  4B53               	infsnz	sprintf@f& (0+255),f,b
  1952  0009E2  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;doprnt.c: 629: {
  1956                           ;doprnt.c: 630: prec = 0;
  1957  0009E4  0E00               	movlw	0
  1958  0009E6  0101               	movlb	1	; () banked
  1959  0009E8  0101               	movlb	1	; () banked
  1960  0009EA  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  1961  0009EC  0E00               	movlw	0
  1962  0009EE  0101               	movlb	1	; () banked
  1963  0009F0  6F7C               	movwf	sprintf@prec& (0+255),b
  1964                           
  1965                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1966  0009F2  D02C               	goto	l10181
  1967  0009F4                     l10177:
  1968                           
  1969                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1970  0009F4  C17C  F110         	movff	sprintf@prec,?___wmul
  1971  0009F8  C17D  F111         	movff	sprintf@prec+1,?___wmul+1
  1972  0009FC  0E00               	movlw	0
  1973  0009FE  0101               	movlb	1	; () banked
  1974  000A00  0101               	movlb	1	; () banked
  1975  000A02  6F13               	movwf	(?___wmul+3)& (0+255),b
  1976  000A04  0E0A               	movlw	10
  1977  000A06  0101               	movlb	1	; () banked
  1978  000A08  6F12               	movwf	(?___wmul+2)& (0+255),b
  1979  000A0A  EC5D  F02E         	call	___wmul	;wreg free
  1980  000A0E  0101               	movlb	1	; () banked
  1981  000A10  C153  FFF6         	movff	sprintf@f,tblptrl
  1982  000A14  0101               	movlb	1	; () banked
  1983  000A16  C154  FFF7         	movff	sprintf@f+1,tblptrh
  1984  000A1A  0008               	tblrd		*
  1985  000A1C  50F5               	movf	tablat,w,c
  1986  000A1E  0101               	movlb	1	; () banked
  1987  000A20  0101               	movlb	1	; () banked
  1988  000A22  2710               	addwf	?___wmul& (0+255),f,b
  1989  000A24  0E00               	movlw	0
  1990  000A26  0101               	movlb	1	; () banked
  1991  000A28  2311               	addwfc	(?___wmul+1)& (0+255),f,b
  1992  000A2A  0ED0               	movlw	208
  1993  000A2C  0101               	movlb	1	; () banked
  1994  000A2E  0101               	movlb	1	; () banked
  1995  000A30  2510               	addwf	?___wmul& (0+255),w,b
  1996  000A32  0101               	movlb	1	; () banked
  1997  000A34  0101               	movlb	1	; () banked
  1998  000A36  6F7C               	movwf	sprintf@prec& (0+255),b
  1999  000A38  0EFF               	movlw	255
  2000  000A3A  0101               	movlb	1	; () banked
  2001  000A3C  0101               	movlb	1	; () banked
  2002  000A3E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  2003  000A40  0101               	movlb	1	; () banked
  2004  000A42  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2005                           
  2006                           ; BSR set to: 1
  2007  000A44  0101               	movlb	1	; () banked
  2008  000A46  0101               	movlb	1	; () banked
  2009  000A48  4B53               	infsnz	sprintf@f& (0+255),f,b
  2010  000A4A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2011  000A4C                     l10181:
  2012                           
  2013                           ; BSR set to: 1
  2014  000A4C  0101               	movlb	1	; () banked
  2015  000A4E  C153  FFF6         	movff	sprintf@f,tblptrl
  2016  000A52  0101               	movlb	1	; () banked
  2017  000A54  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2018  000A58  0008               	tblrd		*
  2019  000A5A  0101               	movlb	1	; () banked
  2020  000A5C  CFF5 F100          	movff	tablat,?_isdigit
  2021  000A60  ECD6  F02F         	call	_isdigit	;wreg free
  2022  000A64  A0D8               	btfss	status,0,c
  2023  000A66  D010               	goto	l10191
  2024  000A68  D7C5               	goto	l10177
  2025  000A6A                     l10183:
  2026                           
  2027                           ;doprnt.c: 635: prec = 0;
  2028  000A6A  0E00               	movlw	0
  2029  000A6C  0101               	movlb	1	; () banked
  2030  000A6E  0101               	movlb	1	; () banked
  2031  000A70  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2032  000A72  0E00               	movlw	0
  2033  000A74  0101               	movlb	1	; () banked
  2034  000A76  6F7C               	movwf	sprintf@prec& (0+255),b
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;doprnt.c: 637: flag |= 0x1000;
  2038  000A78  0101               	movlb	1	; () banked
  2039  000A7A  0101               	movlb	1	; () banked
  2040  000A7C  8974               	bsf	(sprintf@flag+1)& (0+255),4,b
  2041  000A7E  D004               	goto	l10191
  2042  000A80                     l10187:
  2043                           
  2044                           ; BSR set to: 1
  2045                           ;doprnt.c: 672: flag |= 0x400;
  2046  000A80  0101               	movlb	1	; () banked
  2047  000A82  0101               	movlb	1	; () banked
  2048  000A84  8574               	bsf	(sprintf@flag+1)& (0+255),2,b
  2049                           
  2050                           ;doprnt.c: 673: break;
  2051  000A86  D01E               	goto	l10193
  2052  000A88                     l10191:
  2053  000A88  0101               	movlb	1	; () banked
  2054  000A8A  C153  FFF6         	movff	sprintf@f,tblptrl
  2055  000A8E  0101               	movlb	1	; () banked
  2056  000A90  C154  FFF7         	movff	sprintf@f+1,tblptrh
  2057  000A94  0101               	movlb	1	; () banked
  2058  000A96  0101               	movlb	1	; () banked
  2059  000A98  4B53               	infsnz	sprintf@f& (0+255),f,b
  2060  000A9A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  2061  000A9C  0008               	tblrd		*
  2062  000A9E  0101               	movlb	1	; () banked
  2063  000AA0  CFF5 F17E          	movff	tablat,sprintf@c
  2064  000AA4  0101               	movlb	1	; () banked
  2065  000AA6  517E               	movf	sprintf@c& (0+255),w,b
  2066                           
  2067                           ; Switch size 1, requested type "space"
  2068                           ; Number of cases is 4, Range of values is 0 to 105
  2069                           ; switch strategies available:
  2070                           ; Name         Instructions Cycles
  2071                           ; simple_byte           13     7 (average)
  2072                           ;	Chosen strategy is simple_byte
  2073  000AA8  0A00               	xorlw	0	; case 0
  2074  000AAA  B4D8               	btfsc	status,2,c
  2075  000AAC  EF4E  F00B         	goto	l10471
  2076  000AB0  0A64               	xorlw	100	; case 100
  2077  000AB2  B4D8               	btfsc	status,2,c
  2078  000AB4  D007               	goto	l10193
  2079  000AB6  0A02               	xorlw	2	; case 102
  2080  000AB8  B4D8               	btfsc	status,2,c
  2081  000ABA  D7E2               	goto	l10187
  2082  000ABC  0A0F               	xorlw	15	; case 105
  2083  000ABE  A4D8               	btfss	status,2,c
  2084  000AC0  EF3C  F00B         	goto	l10469
  2085  000AC4                     l10193:
  2086                           
  2087                           ; BSR set to: 1
  2088                           ;doprnt.c: 834: if(flag & (0x700)) {
  2089  000AC4  0E07               	movlw	7
  2090  000AC6  0101               	movlb	1	; () banked
  2091  000AC8  0101               	movlb	1	; () banked
  2092  000ACA  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2093  000ACC  B4D8               	btfsc	status,2,c
  2094  000ACE  D3EF               	goto	l10373
  2095                           
  2096                           ; BSR set to: 1
  2097                           ;doprnt.c: 836: if(flag & 0x1000)
  2098  000AD0  0101               	movlb	1	; () banked
  2099  000AD2  0101               	movlb	1	; () banked
  2100  000AD4  A974               	btfss	(sprintf@flag+1)& (0+255),4,b
  2101  000AD6  D007               	goto	l10199
  2102                           
  2103                           ; BSR set to: 1
  2104                           ;doprnt.c: 838: prec = 6;
  2105  000AD8  0E00               	movlw	0
  2106  000ADA  0101               	movlb	1	; () banked
  2107  000ADC  0101               	movlb	1	; () banked
  2108  000ADE  6F7D               	movwf	(sprintf@prec+1)& (0+255),b
  2109  000AE0  0E06               	movlw	6
  2110  000AE2  0101               	movlb	1	; () banked
  2111  000AE4  6F7C               	movwf	sprintf@prec& (0+255),b
  2112  000AE6                     l10199:
  2113                           
  2114                           ; BSR set to: 1
  2115                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2116  000AE6  C169  FFD9         	movff	sprintf@ap,fsr2l
  2117  000AEA  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  2118  000AEE  0101               	movlb	1	; () banked
  2119  000AF0  CFDE F179          	movff	postinc2,sprintf@fval
  2120  000AF4  0101               	movlb	1	; () banked
  2121  000AF6  CFDE F17A          	movff	postinc2,sprintf@fval+1
  2122  000AFA  0101               	movlb	1	; () banked
  2123  000AFC  CFDD F17B          	movff	postdec2,sprintf@fval+2
  2124                           
  2125                           ; BSR set to: 1
  2126  000B00  0E03               	movlw	3
  2127  000B02  0101               	movlb	1	; () banked
  2128  000B04  0101               	movlb	1	; () banked
  2129  000B06  2769               	addwf	sprintf@ap& (0+255),f,b
  2130  000B08  0E00               	movlw	0
  2131  000B0A  0101               	movlb	1	; () banked
  2132  000B0C  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2133                           
  2134                           ; BSR set to: 1
  2135                           ;doprnt.c: 840: if(fval < 0.0) {
  2136  000B0E  0101               	movlb	1	; () banked
  2137  000B10  0101               	movlb	1	; () banked
  2138  000B12  517B               	movf	(sprintf@fval+2)& (0+255),w,b
  2139  000B14  0A80               	xorlw	128
  2140  000B16  0F80               	addlw	128
  2141  000B18  E107               	bnz	u8975
  2142  000B1A  0E00               	movlw	0
  2143  000B1C  0101               	movlb	1	; () banked
  2144  000B1E  5D7A               	subwf	(sprintf@fval+1)& (0+255),w,b
  2145  000B20  E103               	bnz	u8975
  2146  000B22  0E00               	movlw	0
  2147  000B24  0101               	movlb	1	; () banked
  2148  000B26  5D79               	subwf	sprintf@fval& (0+255),w,b
  2149  000B28                     u8975:
  2150  000B28  B0D8               	btfsc	status,0,c
  2151  000B2A  D012               	goto	l10209
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;doprnt.c: 841: fval = -fval;
  2155  000B2C  C179  F100         	movff	sprintf@fval,?___ftneg
  2156  000B30  C17A  F101         	movff	sprintf@fval+1,?___ftneg+1
  2157  000B34  C17B  F102         	movff	sprintf@fval+2,?___ftneg+2
  2158  000B38  EC4F  F030         	call	___ftneg	;wreg free
  2159  000B3C  C102  F17B         	movff	?___ftneg+2,sprintf@fval+2
  2160  000B40  C101  F17A         	movff	?___ftneg+1,sprintf@fval+1
  2161  000B44  C100  F179         	movff	?___ftneg,sprintf@fval
  2162                           
  2163                           ;doprnt.c: 842: flag |= 0x03;
  2164  000B48  0E03               	movlw	3
  2165  000B4A  0101               	movlb	1	; () banked
  2166  000B4C  0101               	movlb	1	; () banked
  2167  000B4E  1373               	iorwf	sprintf@flag& (0+255),f,b
  2168  000B50                     l10209:
  2169                           
  2170                           ; BSR set to: 1
  2171                           ;doprnt.c: 843: }
  2172                           ;doprnt.c: 844: exp = 0;
  2173  000B50  0E00               	movlw	0
  2174  000B52  0101               	movlb	1	; () banked
  2175  000B54  0101               	movlb	1	; () banked
  2176  000B56  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2177  000B58  0E00               	movlw	0
  2178  000B5A  0101               	movlb	1	; () banked
  2179  000B5C  6F75               	movwf	sprintf@exp& (0+255),b
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;doprnt.c: 845: if( fval!=0) {
  2183  000B5E  0E7F               	movlw	127
  2184  000B60  0101               	movlb	1	; () banked
  2185  000B62  0101               	movlb	1	; () banked
  2186  000B64  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  2187  000B66  0101               	movlb	1	; () banked
  2188  000B68  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2189  000B6A  0101               	movlb	1	; () banked
  2190  000B6C  1179               	iorwf	sprintf@fval& (0+255),w,b
  2191  000B6E  B4D8               	btfsc	status,2,c
  2192  000B70  D0B1               	goto	l10237
  2193                           
  2194                           ; BSR set to: 1
  2195                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2196  000B72  0E82               	movlw	130
  2197  000B74  0101               	movlb	1	; () banked
  2198  000B76  6F58               	movwf	??_sprintf& (0+255),b
  2199  000B78  0EFF               	movlw	255
  2200  000B7A  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2201  000B7C  0101               	movlb	1	; () banked
  2202  000B7E  C179  F15A         	movff	sprintf@fval,??_sprintf+2
  2203  000B82  0101               	movlb	1	; () banked
  2204  000B84  C17A  F15B         	movff	sprintf@fval+1,??_sprintf+3
  2205  000B88  0101               	movlb	1	; () banked
  2206  000B8A  C17B  F15C         	movff	sprintf@fval+2,??_sprintf+4
  2207  000B8E  0101               	movlb	1	; () banked
  2208  000B90  C17C  F15D         	movff	sprintf@fval+3,??_sprintf+5
  2209  000B94  0E10               	movlw	16
  2210  000B96  D006               	goto	u8990
  2211  000B98                     u8995:
  2212  000B98  0101               	movlb	1	; () banked
  2213  000B9A  90D8               	bcf	status,0,c
  2214  000B9C  335D               	rrcf	(??_sprintf+5)& (0+255),f,b
  2215  000B9E  335C               	rrcf	(??_sprintf+4)& (0+255),f,b
  2216  000BA0  335B               	rrcf	(??_sprintf+3)& (0+255),f,b
  2217  000BA2  335A               	rrcf	(??_sprintf+2)& (0+255),f,b
  2218  000BA4                     u8990:
  2219  000BA4  2EE8               	decfsz	wreg,f,c
  2220  000BA6  D7F8               	goto	u8995
  2221  000BA8  0101               	movlb	1	; () banked
  2222  000BAA  515A               	movf	(??_sprintf+2)& (0+255),w,b
  2223  000BAC  0101               	movlb	1	; () banked
  2224  000BAE  2558               	addwf	??_sprintf& (0+255),w,b
  2225  000BB0  0101               	movlb	1	; () banked
  2226  000BB2  0101               	movlb	1	; () banked
  2227  000BB4  6F75               	movwf	sprintf@exp& (0+255),b
  2228  000BB6  0101               	movlb	1	; () banked
  2229  000BB8  0101               	movlb	1	; () banked
  2230  000BBA  0E00               	movlw	0
  2231  000BBC  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  2232  000BBE  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2233                           
  2234                           ; BSR set to: 1
  2235                           ;doprnt.c: 847: exp--;
  2236  000BC0  0101               	movlb	1	; () banked
  2237  000BC2  0101               	movlb	1	; () banked
  2238  000BC4  0775               	decf	sprintf@exp& (0+255),f,b
  2239  000BC6  A0D8               	btfss	status,0,c
  2240  000BC8  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;doprnt.c: 848: exp *= 3;
  2244  000BCA  C175  F110         	movff	sprintf@exp,?___wmul
  2245  000BCE  C176  F111         	movff	sprintf@exp+1,?___wmul+1
  2246  000BD2  0E00               	movlw	0
  2247  000BD4  0101               	movlb	1	; () banked
  2248  000BD6  0101               	movlb	1	; () banked
  2249  000BD8  6F13               	movwf	(?___wmul+3)& (0+255),b
  2250  000BDA  0E03               	movlw	3
  2251  000BDC  0101               	movlb	1	; () banked
  2252  000BDE  6F12               	movwf	(?___wmul+2)& (0+255),b
  2253  000BE0  EC5D  F02E         	call	___wmul	;wreg free
  2254  000BE4  0101               	movlb	1	; () banked
  2255  000BE6  C110  F175         	movff	?___wmul,sprintf@exp
  2256  000BEA  0101               	movlb	1	; () banked
  2257  000BEC  C111  F176         	movff	?___wmul+1,sprintf@exp+1
  2258                           
  2259                           ; BSR set to: 1
  2260                           ;doprnt.c: 849: exp /= 10;
  2261  000BF0  C175  F107         	movff	sprintf@exp,?___awdiv
  2262  000BF4  C176  F108         	movff	sprintf@exp+1,?___awdiv+1
  2263  000BF8  0E00               	movlw	0
  2264  000BFA  0101               	movlb	1	; () banked
  2265  000BFC  0101               	movlb	1	; () banked
  2266  000BFE  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  2267  000C00  0E0A               	movlw	10
  2268  000C02  0101               	movlb	1	; () banked
  2269  000C04  6F09               	movwf	(?___awdiv+2)& (0+255),b
  2270  000C06  EC6E  F023         	call	___awdiv	;wreg free
  2271  000C0A  0101               	movlb	1	; () banked
  2272  000C0C  C107  F175         	movff	?___awdiv,sprintf@exp
  2273  000C10  0101               	movlb	1	; () banked
  2274  000C12  C108  F176         	movff	?___awdiv+1,sprintf@exp+1
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;doprnt.c: 850: if(exp < 0)
  2278  000C16  0101               	movlb	1	; () banked
  2279  000C18  0101               	movlb	1	; () banked
  2280  000C1A  AF76               	btfss	(sprintf@exp+1)& (0+255),7,b
  2281  000C1C  D005               	goto	l10225
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;doprnt.c: 851: exp--;
  2285  000C1E  0101               	movlb	1	; () banked
  2286  000C20  0101               	movlb	1	; () banked
  2287  000C22  0775               	decf	sprintf@exp& (0+255),f,b
  2288  000C24  A0D8               	btfss	status,0,c
  2289  000C26  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2290  000C28                     l10225:
  2291                           
  2292                           ; BSR set to: 1
  2293                           ;doprnt.c: 855: integ = scale(-exp);
  2294  000C28  0101               	movlb	1	; () banked
  2295  000C2A  0101               	movlb	1	; () banked
  2296  000C2C  5175               	movf	sprintf@exp& (0+255),w,b
  2297  000C2E  0800               	sublw	0
  2298  000C30  0101               	movlb	1	; () banked
  2299  000C32  0101               	movlb	1	; () banked
  2300  000C34  6F27               	movwf	?_scale& (0+255),b
  2301  000C36  EC0A  F012         	call	_scale	;wreg free
  2302  000C3A  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  2303  000C3E  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  2304  000C42  C127  F16B         	movff	?_scale,sprintf@integ
  2305                           
  2306                           ;doprnt.c: 856: integ *= fval;
  2307  000C46  0101               	movlb	1	; () banked
  2308  000C48  0E01               	movlw	high sprintf@integ
  2309  000C4A  0101               	movlb	1	; () banked
  2310  000C4C  0101               	movlb	1	; () banked
  2311  000C4E  6F28               	movwf	(?___asftmul+1)& (0+255),b
  2312  000C50  0101               	movlb	1	; () banked
  2313  000C52  0E6B               	movlw	low sprintf@integ
  2314  000C54  0101               	movlb	1	; () banked
  2315  000C56  6F27               	movwf	?___asftmul& (0+255),b
  2316  000C58  C179  F129         	movff	sprintf@fval,?___asftmul+2
  2317  000C5C  C17A  F12A         	movff	sprintf@fval+1,?___asftmul+3
  2318  000C60  C17B  F12B         	movff	sprintf@fval+2,?___asftmul+4
  2319  000C64  EC94  F02F         	call	___asftmul	;wreg free
  2320                           
  2321                           ;doprnt.c: 857: if(integ < 1.0)
  2322  000C68  C16B  F100         	movff	sprintf@integ,?___ftge
  2323  000C6C  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2324  000C70  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2325  000C74  0E00               	movlw	0
  2326  000C76  0101               	movlb	1	; () banked
  2327  000C78  0101               	movlb	1	; () banked
  2328  000C7A  6F03               	movwf	(?___ftge+3)& (0+255),b
  2329  000C7C  0E80               	movlw	128
  2330  000C7E  0101               	movlb	1	; () banked
  2331  000C80  0101               	movlb	1	; () banked
  2332  000C82  6F04               	movwf	(?___ftge+4)& (0+255),b
  2333  000C84  0E3F               	movlw	63
  2334  000C86  0101               	movlb	1	; () banked
  2335  000C88  0101               	movlb	1	; () banked
  2336  000C8A  6F05               	movwf	(?___ftge+5)& (0+255),b
  2337  000C8C  EC99  F026         	call	___ftge	;wreg free
  2338  000C90  B0D8               	btfsc	status,0,c
  2339  000C92  D006               	goto	l10233
  2340                           
  2341                           ;doprnt.c: 858: exp--;
  2342  000C94  0101               	movlb	1	; () banked
  2343  000C96  0101               	movlb	1	; () banked
  2344  000C98  0775               	decf	sprintf@exp& (0+255),f,b
  2345  000C9A  A0D8               	btfss	status,0,c
  2346  000C9C  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2347  000C9E  D01A               	goto	l10237
  2348  000CA0                     l10233:
  2349                           
  2350                           ;doprnt.c: 859: else if(integ >= 10.0)
  2351  000CA0  C16B  F100         	movff	sprintf@integ,?___ftge
  2352  000CA4  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2353  000CA8  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2354  000CAC  0E00               	movlw	0
  2355  000CAE  0101               	movlb	1	; () banked
  2356  000CB0  0101               	movlb	1	; () banked
  2357  000CB2  6F03               	movwf	(?___ftge+3)& (0+255),b
  2358  000CB4  0E20               	movlw	32
  2359  000CB6  0101               	movlb	1	; () banked
  2360  000CB8  0101               	movlb	1	; () banked
  2361  000CBA  6F04               	movwf	(?___ftge+4)& (0+255),b
  2362  000CBC  0E41               	movlw	65
  2363  000CBE  0101               	movlb	1	; () banked
  2364  000CC0  0101               	movlb	1	; () banked
  2365  000CC2  6F05               	movwf	(?___ftge+5)& (0+255),b
  2366  000CC4  EC99  F026         	call	___ftge	;wreg free
  2367  000CC8  A0D8               	btfss	status,0,c
  2368  000CCA  D004               	goto	l10237
  2369                           
  2370                           ;doprnt.c: 860: exp++;
  2371  000CCC  0101               	movlb	1	; () banked
  2372  000CCE  0101               	movlb	1	; () banked
  2373  000CD0  4B75               	infsnz	sprintf@exp& (0+255),f,b
  2374  000CD2  2B76               	incf	(sprintf@exp+1)& (0+255),f,b
  2375  000CD4                     l10237:
  2376                           
  2377                           ;doprnt.c: 861: }
  2378                           ;doprnt.c: 1121: if(prec <= 12)
  2379  000CD4  0101               	movlb	1	; () banked
  2380  000CD6  0101               	movlb	1	; () banked
  2381  000CD8  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2382  000CDA  0A80               	xorlw	128
  2383  000CDC  0F80               	addlw	-128
  2384  000CDE  0E0D               	movlw	13
  2385  000CE0  B4D8               	btfsc	status,2,c
  2386  000CE2  5D7C               	subwf	sprintf@prec& (0+255),w,b
  2387  000CE4  B0D8               	btfsc	status,0,c
  2388  000CE6  D015               	goto	l10241
  2389                           
  2390                           ; BSR set to: 1
  2391                           ;doprnt.c: 1122: fval += fround(prec);
  2392  000CE8  0101               	movlb	1	; () banked
  2393  000CEA  0E01               	movlw	high sprintf@fval
  2394  000CEC  0101               	movlb	1	; () banked
  2395  000CEE  0101               	movlb	1	; () banked
  2396  000CF0  6F47               	movwf	(?___asftadd+1)& (0+255),b
  2397  000CF2  0101               	movlb	1	; () banked
  2398  000CF4  0E79               	movlw	low sprintf@fval
  2399  000CF6  0101               	movlb	1	; () banked
  2400  000CF8  6F46               	movwf	?___asftadd& (0+255),b
  2401  000CFA  C17C  F127         	movff	sprintf@prec,?_fround
  2402  000CFE  EC3C  F017         	call	_fround	;wreg free
  2403  000D02  C129  F14A         	movff	?_fround+2,?___asftadd+4
  2404  000D06  C128  F149         	movff	?_fround+1,?___asftadd+3
  2405  000D0A  C127  F148         	movff	?_fround,?___asftadd+2
  2406  000D0E  ECB5  F02F         	call	___asftadd	;wreg free
  2407  000D12                     l10241:
  2408                           
  2409                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2410  000D12  0101               	movlb	1	; () banked
  2411  000D14  0101               	movlb	1	; () banked
  2412  000D16  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2413  000D18  0A80               	xorlw	128
  2414  000D1A  0F80               	addlw	-128
  2415  000D1C  0E0A               	movlw	10
  2416  000D1E  B4D8               	btfsc	status,2,c
  2417  000D20  5D75               	subwf	sprintf@exp& (0+255),w,b
  2418  000D22  B0D8               	btfsc	status,0,c
  2419  000D24  D024               	goto	l10249
  2420                           
  2421                           ; BSR set to: 1
  2422  000D26  0E7F               	movlw	127
  2423  000D28  0101               	movlb	1	; () banked
  2424  000D2A  0101               	movlb	1	; () banked
  2425  000D2C  157B               	andwf	(sprintf@fval+2)& (0+255),w,b
  2426  000D2E  0101               	movlb	1	; () banked
  2427  000D30  117A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2428  000D32  0101               	movlb	1	; () banked
  2429  000D34  1179               	iorwf	sprintf@fval& (0+255),w,b
  2430  000D36  B4D8               	btfsc	status,2,c
  2431  000D38  D06F               	goto	l10265
  2432                           
  2433                           ; BSR set to: 1
  2434  000D3A  C179  F133         	movff	sprintf@fval,?___fttol
  2435  000D3E  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  2436  000D42  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  2437  000D46  EC70  F021         	call	___fttol	;wreg free
  2438  000D4A  0101               	movlb	1	; () banked
  2439  000D4C  0101               	movlb	1	; () banked
  2440  000D4E  5136               	movf	(?___fttol+3)& (0+255),w,b
  2441  000D50  1133               	iorwf	?___fttol& (0+255),w,b
  2442  000D52  1134               	iorwf	(?___fttol+1)& (0+255),w,b
  2443  000D54  1135               	iorwf	(?___fttol+2)& (0+255),w,b
  2444  000D56  A4D8               	btfss	status,2,c
  2445  000D58  D05F               	goto	l10265
  2446                           
  2447                           ; BSR set to: 1
  2448  000D5A  0101               	movlb	1	; () banked
  2449  000D5C  0101               	movlb	1	; () banked
  2450  000D5E  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2451  000D60  0A80               	xorlw	128
  2452  000D62  0F80               	addlw	-128
  2453  000D64  0E02               	movlw	2
  2454  000D66  B4D8               	btfsc	status,2,c
  2455  000D68  5D75               	subwf	sprintf@exp& (0+255),w,b
  2456  000D6A  A0D8               	btfss	status,0,c
  2457  000D6C  D055               	goto	l10265
  2458  000D6E                     l10249:
  2459                           
  2460                           ; BSR set to: 1
  2461                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2462  000D6E  C16B  F100         	movff	sprintf@integ,?___ftge
  2463  000D72  C16C  F101         	movff	sprintf@integ+1,?___ftge+1
  2464  000D76  C16D  F102         	movff	sprintf@integ+2,?___ftge+2
  2465  000D7A  0E70               	movlw	112
  2466  000D7C  0101               	movlb	1	; () banked
  2467  000D7E  0101               	movlb	1	; () banked
  2468  000D80  6F03               	movwf	(?___ftge+3)& (0+255),b
  2469  000D82  0E89               	movlw	137
  2470  000D84  0101               	movlb	1	; () banked
  2471  000D86  0101               	movlb	1	; () banked
  2472  000D88  6F04               	movwf	(?___ftge+4)& (0+255),b
  2473  000D8A  0E40               	movlw	64
  2474  000D8C  0101               	movlb	1	; () banked
  2475  000D8E  0101               	movlb	1	; () banked
  2476  000D90  6F05               	movwf	(?___ftge+5)& (0+255),b
  2477  000D92  EC99  F026         	call	___ftge	;wreg free
  2478  000D96  B0D8               	btfsc	status,0,c
  2479  000D98  D003               	goto	l10253
  2480                           
  2481                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2482  000D9A  0101               	movlb	1	; () banked
  2483  000D9C  0EF7               	movlw	247
  2484  000D9E  D002               	goto	L1
  2485  000DA0                     l10253:
  2486                           
  2487                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2488  000DA0  0101               	movlb	1	; () banked
  2489  000DA2  0EF8               	movlw	248
  2490  000DA4                     L1:
  2491  000DA4  0101               	movlb	1	; () banked
  2492  000DA6  2775               	addwf	sprintf@exp& (0+255),f,b
  2493  000DA8  0EFF               	movlw	255
  2494  000DAA  0101               	movlb	1	; () banked
  2495  000DAC  2376               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2496                           
  2497                           ; BSR set to: 1
  2498                           ;doprnt.c: 1133: }
  2499                           ;doprnt.c: 1134: integ = scale(exp);
  2500                           
  2501                           ; BSR set to: 1
  2502  000DAE  C175  F127         	movff	sprintf@exp,?_scale
  2503  000DB2  EC0A  F012         	call	_scale	;wreg free
  2504  000DB6  C129  F16D         	movff	?_scale+2,sprintf@integ+2
  2505  000DBA  C128  F16C         	movff	?_scale+1,sprintf@integ+1
  2506  000DBE  C127  F16B         	movff	?_scale,sprintf@integ
  2507                           
  2508                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2509  000DC2  C179  F100         	movff	sprintf@fval,?__tdiv_to_l_
  2510  000DC6  C17A  F101         	movff	sprintf@fval+1,?__tdiv_to_l_+1
  2511  000DCA  C17B  F102         	movff	sprintf@fval+2,?__tdiv_to_l_+2
  2512  000DCE  C16B  F103         	movff	sprintf@integ,?__tdiv_to_l_+3
  2513  000DD2  C16C  F104         	movff	sprintf@integ+1,?__tdiv_to_l_+4
  2514  000DD6  C16D  F105         	movff	sprintf@integ+2,?__tdiv_to_l_+5
  2515  000DDA  ECD9  F01B         	call	__tdiv_to_l_	;wreg free
  2516  000DDE  C103  F164         	movff	?__tdiv_to_l_+3,_sprintf$563+3
  2517  000DE2  C102  F163         	movff	?__tdiv_to_l_+2,_sprintf$563+2
  2518  000DE6  C101  F162         	movff	?__tdiv_to_l_+1,_sprintf$563+1
  2519  000DEA  C100  F161         	movff	?__tdiv_to_l_,_sprintf$563
  2520  000DEE  C161  F16E         	movff	_sprintf$563,sprintf@_val
  2521  000DF2  C162  F16F         	movff	_sprintf$563+1,sprintf@_val+1
  2522  000DF6  C163  F170         	movff	_sprintf$563+2,sprintf@_val+2
  2523  000DFA  C164  F171         	movff	_sprintf$563+3,sprintf@_val+3
  2524                           
  2525                           ;doprnt.c: 1138: fval = 0.0;
  2526  000DFE  0E00               	movlw	0
  2527  000E00  0101               	movlb	1	; () banked
  2528  000E02  0101               	movlb	1	; () banked
  2529  000E04  6F79               	movwf	sprintf@fval& (0+255),b
  2530  000E06  0E00               	movlw	0
  2531  000E08  0101               	movlb	1	; () banked
  2532  000E0A  0101               	movlb	1	; () banked
  2533  000E0C  6F7A               	movwf	(sprintf@fval+1)& (0+255),b
  2534  000E0E  0E00               	movlw	0
  2535  000E10  0101               	movlb	1	; () banked
  2536  000E12  0101               	movlb	1	; () banked
  2537  000E14  6F7B               	movwf	(sprintf@fval+2)& (0+255),b
  2538                           
  2539                           ;doprnt.c: 1139: } else {
  2540  000E16  D032               	goto	l10271
  2541  000E18                     l10265:
  2542                           
  2543                           ; BSR set to: 1
  2544                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2545  000E18  C179  F133         	movff	sprintf@fval,?___fttol
  2546  000E1C  C17A  F134         	movff	sprintf@fval+1,?___fttol+1
  2547  000E20  C17B  F135         	movff	sprintf@fval+2,?___fttol+2
  2548  000E24  EC70  F021         	call	___fttol	;wreg free
  2549  000E28  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  2550  000E2C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  2551  000E30  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  2552  000E34  C133  F16E         	movff	?___fttol,sprintf@_val
  2553                           
  2554                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2555  000E38  0101               	movlb	1	; () banked
  2556  000E3A  0E01               	movlw	high sprintf@fval
  2557  000E3C  0101               	movlb	1	; () banked
  2558  000E3E  0101               	movlb	1	; () banked
  2559  000E40  6F4D               	movwf	(?___asftsub+1)& (0+255),b
  2560  000E42  0101               	movlb	1	; () banked
  2561  000E44  0E79               	movlw	low sprintf@fval
  2562  000E46  0101               	movlb	1	; () banked
  2563  000E48  6F4C               	movwf	?___asftsub& (0+255),b
  2564  000E4A  C16E  F108         	movff	sprintf@_val,?___lltoft
  2565  000E4E  C16F  F109         	movff	sprintf@_val+1,?___lltoft+1
  2566  000E52  C170  F10A         	movff	sprintf@_val+2,?___lltoft+2
  2567  000E56  C171  F10B         	movff	sprintf@_val+3,?___lltoft+3
  2568  000E5A  EC21  F02B         	call	___lltoft	;wreg free
  2569  000E5E  C10A  F150         	movff	?___lltoft+2,?___asftsub+4
  2570  000E62  C109  F14F         	movff	?___lltoft+1,?___asftsub+3
  2571  000E66  C108  F14E         	movff	?___lltoft,?___asftsub+2
  2572  000E6A  EC52  F02F         	call	___asftsub	;wreg free
  2573                           
  2574                           ;doprnt.c: 1142: exp = 0;
  2575  000E6E  0E00               	movlw	0
  2576  000E70  0101               	movlb	1	; () banked
  2577  000E72  0101               	movlb	1	; () banked
  2578  000E74  6F76               	movwf	(sprintf@exp+1)& (0+255),b
  2579  000E76  0E00               	movlw	0
  2580  000E78  0101               	movlb	1	; () banked
  2581  000E7A  6F75               	movwf	sprintf@exp& (0+255),b
  2582  000E7C                     l10271:
  2583                           
  2584                           ; BSR set to: 1
  2585                           ;doprnt.c: 1143: }
  2586                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2587  000E7C  0101               	movlb	1	; () banked
  2588  000E7E  6F58               	movwf	??_sprintf& (0+255),b
  2589  000E80  0E01               	movlw	1
  2590  000E82  0101               	movlb	1	; () banked
  2591  000E84  0101               	movlb	1	; () banked
  2592  000E86  6F7E               	movwf	sprintf@c& (0+255),b
  2593  000E88  0101               	movlb	1	; () banked
  2594  000E8A  5158               	movf	??_sprintf& (0+255),w,b
  2595  000E8C                     
  2596                           ; BSR set to: 1
  2597  000E8C  0101               	movlb	1	; () banked
  2598  000E8E  0101               	movlb	1	; () banked
  2599  000E90  517E               	movf	sprintf@c& (0+255),w,b
  2600  000E92  0A0A               	xorlw	10
  2601  000E94  B4D8               	btfsc	status,2,c
  2602  000E96  D021               	goto	l10285
  2603                           
  2604                           ; BSR set to: 1
  2605                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2606                           
  2607                           ; BSR set to: 1
  2608                           
  2609                           ; BSR set to: 1
  2610  000E98  0101               	movlb	1	; () banked
  2611  000E9A  0101               	movlb	1	; () banked
  2612  000E9C  517E               	movf	sprintf@c& (0+255),w,b
  2613  000E9E  0D04               	mullw	4
  2614  000EA0  0E00               	movlw	low _dpowers
  2615  000EA2  24F3               	addwf	prodl,w,c
  2616  000EA4  6EF6               	movwf	tblptrl,c
  2617  000EA6  0E08               	movlw	high _dpowers
  2618  000EA8  20F4               	addwfc	prodh,w,c
  2619  000EAA  6EF7               	movwf	tblptrh,c
  2620  000EAC  0009               	tblrd		*+
  2621  000EAE  50F5               	movf	tablat,w,c
  2622  000EB0  0101               	movlb	1	; () banked
  2623  000EB2  0101               	movlb	1	; () banked
  2624  000EB4  5D6E               	subwf	sprintf@_val& (0+255),w,b
  2625  000EB6  0009               	tblrd		*+
  2626  000EB8  50F5               	movf	tablat,w,c
  2627  000EBA  0101               	movlb	1	; () banked
  2628  000EBC  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2629  000EBE  0009               	tblrd		*+
  2630  000EC0  50F5               	movf	tablat,w,c
  2631  000EC2  0101               	movlb	1	; () banked
  2632  000EC4  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2633  000EC6  0009               	tblrd		*+
  2634  000EC8  50F5               	movf	tablat,w,c
  2635  000ECA  0101               	movlb	1	; () banked
  2636  000ECC  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2637  000ECE  A0D8               	btfss	status,0,c
  2638  000ED0  D004               	goto	l10285
  2639                           
  2640                           ; BSR set to: 1
  2641                           
  2642                           ; BSR set to: 1
  2643                           
  2644                           ; BSR set to: 1
  2645                           ;doprnt.c: 1147: break;
  2646  000ED2  0101               	movlb	1	; () banked
  2647  000ED4  0101               	movlb	1	; () banked
  2648  000ED6  2B7E               	incf	sprintf@c& (0+255),f,b
  2649  000ED8  D7D9               	goto	L2
  2650  000EDA                     l10285:
  2651                           
  2652                           ; BSR set to: 1
  2653                           ;doprnt.c: 1151: width -= prec + c + exp;
  2654  000EDA  0101               	movlb	1	; () banked
  2655  000EDC  C17E  F158         	movff	sprintf@c,??_sprintf
  2656  000EE0  0101               	movlb	1	; () banked
  2657  000EE2  6B59               	clrf	(??_sprintf+1)& (0+255),b
  2658  000EE4  BF58               	btfsc	??_sprintf& (0+255),7,b
  2659  000EE6  0759               	decf	(??_sprintf+1)& (0+255),f,b
  2660  000EE8  0101               	movlb	1	; () banked
  2661  000EEA  0101               	movlb	1	; () banked
  2662  000EEC  517C               	movf	sprintf@prec& (0+255),w,b
  2663  000EEE  0101               	movlb	1	; () banked
  2664  000EF0  2758               	addwf	??_sprintf& (0+255),f,b
  2665  000EF2  0101               	movlb	1	; () banked
  2666  000EF4  0101               	movlb	1	; () banked
  2667  000EF6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2668  000EF8  0101               	movlb	1	; () banked
  2669  000EFA  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  2670  000EFC  0101               	movlb	1	; () banked
  2671  000EFE  0101               	movlb	1	; () banked
  2672  000F00  5175               	movf	sprintf@exp& (0+255),w,b
  2673  000F02  0101               	movlb	1	; () banked
  2674  000F04  2758               	addwf	??_sprintf& (0+255),f,b
  2675  000F06  0101               	movlb	1	; () banked
  2676  000F08  0101               	movlb	1	; () banked
  2677  000F0A  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2678  000F0C  0101               	movlb	1	; () banked
  2679  000F0E  2359               	addwfc	(??_sprintf+1)& (0+255),f,b
  2680  000F10  0101               	movlb	1	; () banked
  2681  000F12  5158               	movf	??_sprintf& (0+255),w,b
  2682  000F14  0101               	movlb	1	; () banked
  2683  000F16  0101               	movlb	1	; () banked
  2684  000F18  5F77               	subwf	sprintf@width& (0+255),f,b
  2685  000F1A  0101               	movlb	1	; () banked
  2686  000F1C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2687  000F1E  0101               	movlb	1	; () banked
  2688  000F20  0101               	movlb	1	; () banked
  2689  000F22  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  2690                           
  2691                           ;doprnt.c: 1152: if(
  2692                           ;doprnt.c: 1156: prec)
  2693  000F24  0101               	movlb	1	; () banked
  2694  000F26  0101               	movlb	1	; () banked
  2695  000F28  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2696  000F2A  117C               	iorwf	sprintf@prec& (0+255),w,b
  2697  000F2C  B4D8               	btfsc	status,2,c
  2698  000F2E  D005               	goto	l10289
  2699                           
  2700                           ; BSR set to: 1
  2701                           ;doprnt.c: 1157: width--;
  2702  000F30  0101               	movlb	1	; () banked
  2703  000F32  0101               	movlb	1	; () banked
  2704  000F34  0777               	decf	sprintf@width& (0+255),f,b
  2705  000F36  A0D8               	btfss	status,0,c
  2706  000F38  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2707  000F3A                     l10289:
  2708                           
  2709                           ; BSR set to: 1
  2710                           ;doprnt.c: 1158: if(flag & 0x03)
  2711  000F3A  0E03               	movlw	3
  2712  000F3C  0101               	movlb	1	; () banked
  2713  000F3E  0101               	movlb	1	; () banked
  2714  000F40  1573               	andwf	sprintf@flag& (0+255),w,b
  2715  000F42  0101               	movlb	1	; () banked
  2716  000F44  6F58               	movwf	??_sprintf& (0+255),b
  2717  000F46  0E00               	movlw	0
  2718  000F48  0101               	movlb	1	; () banked
  2719  000F4A  0101               	movlb	1	; () banked
  2720  000F4C  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2721  000F4E  0101               	movlb	1	; () banked
  2722  000F50  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2723  000F52  0101               	movlb	1	; () banked
  2724  000F54  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2725  000F56  1158               	iorwf	??_sprintf& (0+255),w,b
  2726  000F58  B4D8               	btfsc	status,2,c
  2727  000F5A  D005               	goto	l10293
  2728                           
  2729                           ; BSR set to: 1
  2730                           ;doprnt.c: 1159: width--;
  2731  000F5C  0101               	movlb	1	; () banked
  2732  000F5E  0101               	movlb	1	; () banked
  2733  000F60  0777               	decf	sprintf@width& (0+255),f,b
  2734  000F62  A0D8               	btfss	status,0,c
  2735  000F64  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2736  000F66                     l10293:
  2737                           
  2738                           ; BSR set to: 1
  2739                           ;doprnt.c: 1162: if(flag & 0x04) {
  2740  000F66  0101               	movlb	1	; () banked
  2741  000F68  0101               	movlb	1	; () banked
  2742  000F6A  B573               	btfsc	sprintf@flag& (0+255),2,b
  2743  000F6C  D010               	goto	l10303
  2744  000F6E  D029               	goto	l10311
  2745  000F70                     l10297:
  2746                           
  2747                           ; BSR set to: 1
  2748                           ;doprnt.c: 1176: ((*sp++ = ('0')));
  2749  000F70  C151  FFD9         	movff	sprintf@sp,fsr2l
  2750  000F74  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2751  000F78  0E30               	movlw	48
  2752  000F7A  6EDF               	movwf	indf2,c
  2753                           
  2754                           ; BSR set to: 1
  2755  000F7C  0101               	movlb	1	; () banked
  2756  000F7E  0101               	movlb	1	; () banked
  2757  000F80  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2758  000F82  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2759                           
  2760                           ; BSR set to: 1
  2761                           ;doprnt.c: 1177: width--;
  2762  000F84  0101               	movlb	1	; () banked
  2763  000F86  0101               	movlb	1	; () banked
  2764  000F88  0777               	decf	sprintf@width& (0+255),f,b
  2765  000F8A  A0D8               	btfss	status,0,c
  2766  000F8C  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2767  000F8E                     l10303:
  2768                           
  2769                           ; BSR set to: 1
  2770  000F8E  0101               	movlb	1	; () banked
  2771  000F90  0101               	movlb	1	; () banked
  2772  000F92  5178               	movf	(sprintf@width+1)& (0+255),w,b
  2773  000F94  0A80               	xorlw	128
  2774  000F96  0F80               	addlw	-128
  2775  000F98  0E01               	movlw	1
  2776  000F9A  B4D8               	btfsc	status,2,c
  2777  000F9C  5D77               	subwf	sprintf@width& (0+255),w,b
  2778  000F9E  A0D8               	btfss	status,0,c
  2779  000FA0  D079               	goto	l10327
  2780  000FA2  D7E6               	goto	l10297
  2781  000FA4                     l10305:
  2782                           
  2783                           ; BSR set to: 1
  2784                           ;doprnt.c: 1188: ((*sp++ = (' ')));
  2785  000FA4  C151  FFD9         	movff	sprintf@sp,fsr2l
  2786  000FA8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2787  000FAC  0E20               	movlw	32
  2788  000FAE  6EDF               	movwf	indf2,c
  2789                           
  2790                           ; BSR set to: 1
  2791  000FB0  0101               	movlb	1	; () banked
  2792  000FB2  0101               	movlb	1	; () banked
  2793  000FB4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2794  000FB6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2795                           
  2796                           ; BSR set to: 1
  2797                           ;doprnt.c: 1189: width--;
  2798  000FB8  0101               	movlb	1	; () banked
  2799  000FBA  0101               	movlb	1	; () banked
  2800  000FBC  0777               	decf	sprintf@width& (0+255),f,b
  2801  000FBE  A0D8               	btfss	status,0,c
  2802  000FC0  0778               	decf	(sprintf@width+1)& (0+255),f,b
  2803  000FC2                     l10311:
  2804                           
  2805                           ; BSR set to: 1
  2806  000FC2  0101               	movlb	1	; () banked
  2807  000FC4  0101               	movlb	1	; () banked
  2808  000FC6  5178               	movf	(sprintf@width+1)& (0+255),w,b
  2809  000FC8  0A80               	xorlw	128
  2810  000FCA  0F80               	addlw	-128
  2811  000FCC  0E01               	movlw	1
  2812  000FCE  B4D8               	btfsc	status,2,c
  2813  000FD0  5D77               	subwf	sprintf@width& (0+255),w,b
  2814  000FD2  B0D8               	btfsc	status,0,c
  2815  000FD4  D7E7               	goto	l10305
  2816                           
  2817                           ; BSR set to: 1
  2818                           ;doprnt.c: 1190: }
  2819                           ;doprnt.c: 1195: if(flag & 0x03)
  2820                           
  2821                           ; BSR set to: 1
  2822  000FD6  0E03               	movlw	3
  2823  000FD8  0101               	movlb	1	; () banked
  2824  000FDA  0101               	movlb	1	; () banked
  2825  000FDC  1573               	andwf	sprintf@flag& (0+255),w,b
  2826  000FDE  0101               	movlb	1	; () banked
  2827  000FE0  6F58               	movwf	??_sprintf& (0+255),b
  2828  000FE2  0E00               	movlw	0
  2829  000FE4  0101               	movlb	1	; () banked
  2830  000FE6  0101               	movlb	1	; () banked
  2831  000FE8  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  2832  000FEA  0101               	movlb	1	; () banked
  2833  000FEC  6F59               	movwf	(??_sprintf+1)& (0+255),b
  2834  000FEE  0101               	movlb	1	; () banked
  2835  000FF0  5159               	movf	(??_sprintf+1)& (0+255),w,b
  2836  000FF2  1158               	iorwf	??_sprintf& (0+255),w,b
  2837  000FF4  B4D8               	btfsc	status,2,c
  2838  000FF6  D04E               	goto	l10327
  2839                           
  2840                           ; BSR set to: 1
  2841                           ;doprnt.c: 1197: ((*sp++ = ('-')));
  2842  000FF8  C151  FFD9         	movff	sprintf@sp,fsr2l
  2843  000FFC  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2844  001000  0E2D               	movlw	45
  2845  001002  D043               	goto	L3
  2846  001004                     l10319:
  2847                           
  2848                           ; BSR set to: 1
  2849                           ;doprnt.c: 1207: {
  2850                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
  2851  001004  C16E  F100         	movff	sprintf@_val,?___lldiv
  2852  001008  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  2853  00100C  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  2854  001010  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  2855  001014  0101               	movlb	1	; () banked
  2856  001016  0101               	movlb	1	; () banked
  2857  001018  517E               	movf	sprintf@c& (0+255),w,b
  2858  00101A  0D04               	mullw	4
  2859  00101C  0E00               	movlw	low _dpowers
  2860  00101E  24F3               	addwf	prodl,w,c
  2861  001020  6EF6               	movwf	tblptrl,c
  2862  001022  0E08               	movlw	high _dpowers
  2863  001024  20F4               	addwfc	prodh,w,c
  2864  001026  6EF7               	movwf	tblptrh,c
  2865  001028  0009               	tblrd		*+
  2866  00102A  0101               	movlb	1	; () banked
  2867  00102C  CFF5 F104          	movff	tablat,?___lldiv+4
  2868  001030  0009               	tblrd		*+
  2869  001032  0101               	movlb	1	; () banked
  2870  001034  CFF5 F105          	movff	tablat,?___lldiv+5
  2871  001038  0009               	tblrd		*+
  2872  00103A  0101               	movlb	1	; () banked
  2873  00103C  CFF5 F106          	movff	tablat,?___lldiv+6
  2874  001040  000A               	tblrd		*-
  2875  001042  0101               	movlb	1	; () banked
  2876  001044  CFF5 F107          	movff	tablat,?___lldiv+7
  2877  001048  EC93  F025         	call	___lldiv	;wreg free
  2878  00104C  C100  F165         	movff	?___lldiv,sprintf@vd
  2879  001050  C101  F166         	movff	?___lldiv+1,sprintf@vd+1
  2880                           
  2881                           ;doprnt.c: 1209: vd %= 10;
  2882  001054  C165  F100         	movff	sprintf@vd,?___lwmod
  2883  001058  C166  F101         	movff	sprintf@vd+1,?___lwmod+1
  2884  00105C  0E00               	movlw	0
  2885  00105E  0101               	movlb	1	; () banked
  2886  001060  0101               	movlb	1	; () banked
  2887  001062  6F03               	movwf	(?___lwmod+3)& (0+255),b
  2888  001064  0E0A               	movlw	10
  2889  001066  0101               	movlb	1	; () banked
  2890  001068  6F02               	movwf	(?___lwmod+2)& (0+255),b
  2891  00106A  EC46  F02C         	call	___lwmod	;wreg free
  2892  00106E  0101               	movlb	1	; () banked
  2893  001070  C100  F165         	movff	?___lwmod,sprintf@vd
  2894  001074  0101               	movlb	1	; () banked
  2895  001076  C101  F166         	movff	?___lwmod+1,sprintf@vd+1
  2896                           
  2897                           ; BSR set to: 1
  2898                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
  2899  00107A  0101               	movlb	1	; () banked
  2900  00107C  0101               	movlb	1	; () banked
  2901  00107E  5165               	movf	sprintf@vd& (0+255),w,b
  2902  001080  0F30               	addlw	48
  2903  001082  C151  FFD9         	movff	sprintf@sp,fsr2l
  2904  001086  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2905  00108A                     L3:
  2906  00108A  6EDF               	movwf	indf2,c
  2907                           
  2908                           ; BSR set to: 1
  2909  00108C  0101               	movlb	1	; () banked
  2910  00108E  0101               	movlb	1	; () banked
  2911  001090  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2912  001092  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2913  001094                     l10327:
  2914                           
  2915                           ; BSR set to: 1
  2916  001094  0101               	movlb	1	; () banked
  2917  001096  0101               	movlb	1	; () banked
  2918  001098  077E               	decf	sprintf@c& (0+255),f,b
  2919  00109A  0101               	movlb	1	; () banked
  2920  00109C  297E               	incf	sprintf@c& (0+255),w,b
  2921  00109E  B4D8               	btfsc	status,2,c
  2922  0010A0  D010               	goto	l10335
  2923  0010A2  D7B0               	goto	l10319
  2924  0010A4                     l10329:
  2925                           
  2926                           ; BSR set to: 1
  2927                           ;doprnt.c: 1215: ((*sp++ = ('0')));
  2928  0010A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  2929  0010A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  2930  0010AC  0E30               	movlw	48
  2931  0010AE  6EDF               	movwf	indf2,c
  2932                           
  2933                           ; BSR set to: 1
  2934  0010B0  0101               	movlb	1	; () banked
  2935  0010B2  0101               	movlb	1	; () banked
  2936  0010B4  4B51               	infsnz	sprintf@sp& (0+255),f,b
  2937  0010B6  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  2938                           
  2939                           ; BSR set to: 1
  2940                           ;doprnt.c: 1216: exp--;
  2941  0010B8  0101               	movlb	1	; () banked
  2942  0010BA  0101               	movlb	1	; () banked
  2943  0010BC  0775               	decf	sprintf@exp& (0+255),f,b
  2944  0010BE  A0D8               	btfss	status,0,c
  2945  0010C0  0776               	decf	(sprintf@exp+1)& (0+255),f,b
  2946  0010C2                     l10335:
  2947                           
  2948                           ; BSR set to: 1
  2949  0010C2  0101               	movlb	1	; () banked
  2950  0010C4  0101               	movlb	1	; () banked
  2951  0010C6  5176               	movf	(sprintf@exp+1)& (0+255),w,b
  2952  0010C8  0A80               	xorlw	128
  2953  0010CA  0F80               	addlw	-128
  2954  0010CC  0E01               	movlw	1
  2955  0010CE  B4D8               	btfsc	status,2,c
  2956  0010D0  5D75               	subwf	sprintf@exp& (0+255),w,b
  2957  0010D2  B0D8               	btfsc	status,0,c
  2958  0010D4  D7E7               	goto	l10329
  2959                           
  2960                           ; BSR set to: 1
  2961                           ;doprnt.c: 1217: }
  2962                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2963                           
  2964                           ; BSR set to: 1
  2965  0010D6  0101               	movlb	1	; () banked
  2966  0010D8  0101               	movlb	1	; () banked
  2967  0010DA  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  2968  0010DC  0A80               	xorlw	128
  2969  0010DE  0F80               	addlw	-128
  2970  0010E0  0E09               	movlw	9
  2971  0010E2  B4D8               	btfsc	status,2,c
  2972  0010E4  5D7C               	subwf	sprintf@prec& (0+255),w,b
  2973  0010E6  A0D8               	btfss	status,0,c
  2974  0010E8  D009               	goto	l325
  2975                           
  2976                           ; BSR set to: 1
  2977                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2978  0010EA  0101               	movlb	1	; () banked
  2979  0010EC  6F58               	movwf	??_sprintf& (0+255),b
  2980  0010EE  0E08               	movlw	8
  2981  0010F0  0101               	movlb	1	; () banked
  2982  0010F2  0101               	movlb	1	; () banked
  2983  0010F4  6F7E               	movwf	sprintf@c& (0+255),b
  2984  0010F6  0101               	movlb	1	; () banked
  2985  0010F8  5158               	movf	??_sprintf& (0+255),w,b
  2986  0010FA  D002               	goto	l10341
  2987  0010FC                     l325:
  2988                           
  2989                           ; BSR set to: 1
  2990                           ;doprnt.c: 1220: else
  2991                           ;doprnt.c: 1221: c = prec;
  2992  0010FC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  2993  001100                     l10341:
  2994                           
  2995                           ; BSR set to: 1
  2996                           ;doprnt.c: 1222: prec -= c;
  2997  001100  0101               	movlb	1	; () banked
  2998  001102  0101               	movlb	1	; () banked
  2999  001104  517E               	movf	sprintf@c& (0+255),w,b
  3000  001106  0101               	movlb	1	; () banked
  3001  001108  0101               	movlb	1	; () banked
  3002  00110A  5F7C               	subwf	sprintf@prec& (0+255),f,b
  3003  00110C  0E00               	movlw	0
  3004  00110E  0101               	movlb	1	; () banked
  3005  001110  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3006  001112  0EFF               	movlw	255
  3007  001114  0101               	movlb	1	; () banked
  3008  001116  0101               	movlb	1	; () banked
  3009  001118  5B7D               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3010                           
  3011                           ; BSR set to: 1
  3012                           ;doprnt.c: 1226: if(c)
  3013  00111A  0101               	movlb	1	; () banked
  3014  00111C  0101               	movlb	1	; () banked
  3015  00111E  517E               	movf	sprintf@c& (0+255),w,b
  3016  001120  B4D8               	btfsc	status,2,c
  3017  001122  D00A               	goto	l10349
  3018                           
  3019                           ; BSR set to: 1
  3020                           ;doprnt.c: 1228: ((*sp++ = ('.')));
  3021  001124  C151  FFD9         	movff	sprintf@sp,fsr2l
  3022  001128  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3023  00112C  0E2E               	movlw	46
  3024  00112E  6EDF               	movwf	indf2,c
  3025                           
  3026                           ; BSR set to: 1
  3027  001130  0101               	movlb	1	; () banked
  3028  001132  0101               	movlb	1	; () banked
  3029  001134  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3030  001136  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3031  001138                     l10349:
  3032                           
  3033                           ; BSR set to: 1
  3034                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  3035  001138  C17E  F127         	movff	sprintf@c,?_scale
  3036  00113C  EC0A  F012         	call	_scale	;wreg free
  3037  001140  C129  F160         	movff	?_scale+2,_sprintf$1204+2
  3038  001144  C128  F15F         	movff	?_scale+1,_sprintf$1204+1
  3039  001148  C127  F15E         	movff	?_scale,_sprintf$1204
  3040                           
  3041                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
  3042  00114C  C179  F119         	movff	sprintf@fval,?___ftmul+3
  3043  001150  C17A  F11A         	movff	sprintf@fval+1,?___ftmul+4
  3044  001154  C17B  F11B         	movff	sprintf@fval+2,?___ftmul+5
  3045  001158  C15E  F116         	movff	_sprintf$1204,?___ftmul
  3046  00115C  C15F  F117         	movff	_sprintf$1204+1,?___ftmul+1
  3047  001160  C160  F118         	movff	_sprintf$1204+2,?___ftmul+2
  3048  001164  ECE1  F01C         	call	___ftmul	;wreg free
  3049  001168  C118  F135         	movff	?___ftmul+2,?___fttol+2
  3050  00116C  C117  F134         	movff	?___ftmul+1,?___fttol+1
  3051  001170  C116  F133         	movff	?___ftmul,?___fttol
  3052  001174  EC70  F021         	call	___fttol	;wreg free
  3053  001178  C136  F171         	movff	?___fttol+3,sprintf@_val+3
  3054  00117C  C135  F170         	movff	?___fttol+2,sprintf@_val+2
  3055  001180  C134  F16F         	movff	?___fttol+1,sprintf@_val+1
  3056  001184  C133  F16E         	movff	?___fttol,sprintf@_val
  3057                           
  3058                           ;doprnt.c: 1235: while(c--) {
  3059  001188  D074               	goto	l10363
  3060  00118A                     l10353:
  3061                           
  3062                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
  3063  00118A  C16E  F100         	movff	sprintf@_val,?___lldiv
  3064  00118E  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  3065  001192  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  3066  001196  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  3067  00119A  0101               	movlb	1	; () banked
  3068  00119C  0101               	movlb	1	; () banked
  3069  00119E  517E               	movf	sprintf@c& (0+255),w,b
  3070  0011A0  0D04               	mullw	4
  3071  0011A2  0E00               	movlw	low _dpowers
  3072  0011A4  24F3               	addwf	prodl,w,c
  3073  0011A6  6EF6               	movwf	tblptrl,c
  3074  0011A8  0E08               	movlw	high _dpowers
  3075  0011AA  20F4               	addwfc	prodh,w,c
  3076  0011AC  6EF7               	movwf	tblptrh,c
  3077  0011AE  0009               	tblrd		*+
  3078  0011B0  0101               	movlb	1	; () banked
  3079  0011B2  CFF5 F104          	movff	tablat,?___lldiv+4
  3080  0011B6  0009               	tblrd		*+
  3081  0011B8  0101               	movlb	1	; () banked
  3082  0011BA  CFF5 F105          	movff	tablat,?___lldiv+5
  3083  0011BE  0009               	tblrd		*+
  3084  0011C0  0101               	movlb	1	; () banked
  3085  0011C2  CFF5 F106          	movff	tablat,?___lldiv+6
  3086  0011C6  000A               	tblrd		*-
  3087  0011C8  0101               	movlb	1	; () banked
  3088  0011CA  CFF5 F107          	movff	tablat,?___lldiv+7
  3089  0011CE  EC93  F025         	call	___lldiv	;wreg free
  3090  0011D2  C100  F167         	movff	?___lldiv,sprintf@vd_565
  3091  0011D6  C101  F168         	movff	?___lldiv+1,sprintf@vd_565+1
  3092                           
  3093                           ;doprnt.c: 1237: vd %= 10;
  3094  0011DA  C167  F100         	movff	sprintf@vd_565,?___lwmod
  3095  0011DE  C168  F101         	movff	sprintf@vd_565+1,?___lwmod+1
  3096  0011E2  0E00               	movlw	0
  3097  0011E4  0101               	movlb	1	; () banked
  3098  0011E6  0101               	movlb	1	; () banked
  3099  0011E8  6F03               	movwf	(?___lwmod+3)& (0+255),b
  3100  0011EA  0E0A               	movlw	10
  3101  0011EC  0101               	movlb	1	; () banked
  3102  0011EE  6F02               	movwf	(?___lwmod+2)& (0+255),b
  3103  0011F0  EC46  F02C         	call	___lwmod	;wreg free
  3104  0011F4  0101               	movlb	1	; () banked
  3105  0011F6  C100  F167         	movff	?___lwmod,sprintf@vd_565
  3106  0011FA  0101               	movlb	1	; () banked
  3107  0011FC  C101  F168         	movff	?___lwmod+1,sprintf@vd_565+1
  3108                           
  3109                           ; BSR set to: 1
  3110                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
  3111  001200  0101               	movlb	1	; () banked
  3112  001202  0101               	movlb	1	; () banked
  3113  001204  5167               	movf	sprintf@vd_565& (0+255),w,b
  3114  001206  0F30               	addlw	48
  3115  001208  C151  FFD9         	movff	sprintf@sp,fsr2l
  3116  00120C  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3117  001210  6EDF               	movwf	indf2,c
  3118                           
  3119                           ; BSR set to: 1
  3120  001212  0101               	movlb	1	; () banked
  3121  001214  0101               	movlb	1	; () banked
  3122  001216  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3123  001218  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3124                           
  3125                           ; BSR set to: 1
  3126                           ;doprnt.c: 1239: _val._val %= dpowers[c];
  3127  00121A  C16E  F10E         	movff	sprintf@_val,?___llmod
  3128  00121E  C16F  F10F         	movff	sprintf@_val+1,?___llmod+1
  3129  001222  C170  F110         	movff	sprintf@_val+2,?___llmod+2
  3130  001226  C171  F111         	movff	sprintf@_val+3,?___llmod+3
  3131  00122A  0101               	movlb	1	; () banked
  3132  00122C  0101               	movlb	1	; () banked
  3133  00122E  517E               	movf	sprintf@c& (0+255),w,b
  3134  001230  0D04               	mullw	4
  3135  001232  0E00               	movlw	low _dpowers
  3136  001234  24F3               	addwf	prodl,w,c
  3137  001236  6EF6               	movwf	tblptrl,c
  3138  001238  0E08               	movlw	high _dpowers
  3139  00123A  20F4               	addwfc	prodh,w,c
  3140  00123C  6EF7               	movwf	tblptrh,c
  3141  00123E  0009               	tblrd		*+
  3142  001240  0101               	movlb	1	; () banked
  3143  001242  CFF5 F112          	movff	tablat,?___llmod+4
  3144  001246  0009               	tblrd		*+
  3145  001248  0101               	movlb	1	; () banked
  3146  00124A  CFF5 F113          	movff	tablat,?___llmod+5
  3147  00124E  0009               	tblrd		*+
  3148  001250  0101               	movlb	1	; () banked
  3149  001252  CFF5 F114          	movff	tablat,?___llmod+6
  3150  001256  000A               	tblrd		*-
  3151  001258  0101               	movlb	1	; () banked
  3152  00125A  CFF5 F115          	movff	tablat,?___llmod+7
  3153  00125E  EC58  F029         	call	___llmod	;wreg free
  3154  001262  C111  F171         	movff	?___llmod+3,sprintf@_val+3
  3155  001266  C110  F170         	movff	?___llmod+2,sprintf@_val+2
  3156  00126A  C10F  F16F         	movff	?___llmod+1,sprintf@_val+1
  3157  00126E  C10E  F16E         	movff	?___llmod,sprintf@_val
  3158  001272                     l10363:
  3159  001272  0101               	movlb	1	; () banked
  3160  001274  0101               	movlb	1	; () banked
  3161  001276  077E               	decf	sprintf@c& (0+255),f,b
  3162  001278  0101               	movlb	1	; () banked
  3163  00127A  297E               	incf	sprintf@c& (0+255),w,b
  3164  00127C  B4D8               	btfsc	status,2,c
  3165  00127E  D010               	goto	l10371
  3166  001280  D784               	goto	l10353
  3167  001282                     l10365:
  3168                           
  3169                           ; BSR set to: 1
  3170                           ;doprnt.c: 1243: ((*sp++ = ('0')));
  3171  001282  C151  FFD9         	movff	sprintf@sp,fsr2l
  3172  001286  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3173  00128A  0E30               	movlw	48
  3174  00128C  6EDF               	movwf	indf2,c
  3175                           
  3176                           ; BSR set to: 1
  3177  00128E  0101               	movlb	1	; () banked
  3178  001290  0101               	movlb	1	; () banked
  3179  001292  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3180  001294  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3181                           
  3182                           ; BSR set to: 1
  3183                           ;doprnt.c: 1244: prec--;
  3184  001296  0101               	movlb	1	; () banked
  3185  001298  0101               	movlb	1	; () banked
  3186  00129A  077C               	decf	sprintf@prec& (0+255),f,b
  3187  00129C  A0D8               	btfss	status,0,c
  3188  00129E  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3189  0012A0                     l10371:
  3190                           
  3191                           ; BSR set to: 1
  3192  0012A0  0101               	movlb	1	; () banked
  3193  0012A2  0101               	movlb	1	; () banked
  3194  0012A4  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3195  0012A6  117C               	iorwf	sprintf@prec& (0+255),w,b
  3196  0012A8  B4D8               	btfsc	status,2,c
  3197  0012AA  D1E6               	goto	l10469
  3198  0012AC  D7EA               	goto	l10365
  3199  0012AE                     l10373:
  3200                           
  3201                           ; BSR set to: 1
  3202                           ;doprnt.c: 1253: }
  3203                           ;doprnt.c: 1260: {
  3204                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3205  0012AE  C169  FFD9         	movff	sprintf@ap,fsr2l
  3206  0012B2  C16A  FFDA         	movff	sprintf@ap+1,fsr2h
  3207  0012B6  0101               	movlb	1	; () banked
  3208  0012B8  CFDE F16E          	movff	postinc2,sprintf@_val
  3209  0012BC  0101               	movlb	1	; () banked
  3210  0012BE  CFDD F16F          	movff	postdec2,sprintf@_val+1
  3211  0012C2  0101               	movlb	1	; () banked
  3212  0012C4  0E00               	movlw	0
  3213  0012C6  0101               	movlb	1	; () banked
  3214  0012C8  BF6F               	btfsc	(sprintf@_val+1)& (0+255),7,b
  3215  0012CA  0EFF               	movlw	-1
  3216  0012CC  0101               	movlb	1	; () banked
  3217  0012CE  6F70               	movwf	(sprintf@_val+2)& (0+255),b
  3218  0012D0  0101               	movlb	1	; () banked
  3219  0012D2  6F71               	movwf	(sprintf@_val+3)& (0+255),b
  3220                           
  3221                           ; BSR set to: 1
  3222  0012D4  0E02               	movlw	2
  3223  0012D6  0101               	movlb	1	; () banked
  3224  0012D8  0101               	movlb	1	; () banked
  3225  0012DA  2769               	addwf	sprintf@ap& (0+255),f,b
  3226  0012DC  0E00               	movlw	0
  3227  0012DE  0101               	movlb	1	; () banked
  3228  0012E0  236A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3229                           
  3230                           ; BSR set to: 1
  3231                           ;doprnt.c: 1268: if((long)_val._val < 0) {
  3232  0012E2  0101               	movlb	1	; () banked
  3233  0012E4  0101               	movlb	1	; () banked
  3234  0012E6  AF71               	btfss	(sprintf@_val+3)& (0+255),7,b
  3235  0012E8  D014               	goto	l10383
  3236                           
  3237                           ; BSR set to: 1
  3238                           ;doprnt.c: 1269: flag |= 0x03;
  3239  0012EA  0E03               	movlw	3
  3240  0012EC  0101               	movlb	1	; () banked
  3241  0012EE  0101               	movlb	1	; () banked
  3242  0012F0  1373               	iorwf	sprintf@flag& (0+255),f,b
  3243                           
  3244                           ; BSR set to: 1
  3245                           ;doprnt.c: 1270: _val._val = -_val._val;
  3246  0012F2  0101               	movlb	1	; () banked
  3247  0012F4  0101               	movlb	1	; () banked
  3248  0012F6  1F71               	comf	(sprintf@_val+3)& (0+255),f,b
  3249  0012F8  0101               	movlb	1	; () banked
  3250  0012FA  1F70               	comf	(sprintf@_val+2)& (0+255),f,b
  3251  0012FC  0101               	movlb	1	; () banked
  3252  0012FE  1F6F               	comf	(sprintf@_val+1)& (0+255),f,b
  3253  001300  0101               	movlb	1	; () banked
  3254  001302  6D6E               	negf	sprintf@_val& (0+255),b
  3255  001304  0E00               	movlw	0
  3256  001306  0101               	movlb	1	; () banked
  3257  001308  236F               	addwfc	(sprintf@_val+1)& (0+255),f,b
  3258  00130A  0101               	movlb	1	; () banked
  3259  00130C  2370               	addwfc	(sprintf@_val+2)& (0+255),f,b
  3260  00130E  0101               	movlb	1	; () banked
  3261  001310  2371               	addwfc	(sprintf@_val+3)& (0+255),f,b
  3262  001312                     l10383:
  3263                           
  3264                           ; BSR set to: 1
  3265                           ;doprnt.c: 1271: }
  3266                           ;doprnt.c: 1273: }
  3267                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
  3268  001312  0101               	movlb	1	; () banked
  3269  001314  0101               	movlb	1	; () banked
  3270  001316  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3271  001318  117C               	iorwf	sprintf@prec& (0+255),w,b
  3272  00131A  A4D8               	btfss	status,2,c
  3273  00131C  D00C               	goto	l10389
  3274                           
  3275                           ; BSR set to: 1
  3276  00131E  0101               	movlb	1	; () banked
  3277  001320  0101               	movlb	1	; () banked
  3278  001322  5171               	movf	(sprintf@_val+3)& (0+255),w,b
  3279  001324  116E               	iorwf	sprintf@_val& (0+255),w,b
  3280  001326  116F               	iorwf	(sprintf@_val+1)& (0+255),w,b
  3281  001328  1170               	iorwf	(sprintf@_val+2)& (0+255),w,b
  3282  00132A  A4D8               	btfss	status,2,c
  3283  00132C  D004               	goto	l10389
  3284                           
  3285                           ; BSR set to: 1
  3286                           ;doprnt.c: 1298: prec++;
  3287  00132E  0101               	movlb	1	; () banked
  3288  001330  0101               	movlb	1	; () banked
  3289  001332  4B7C               	infsnz	sprintf@prec& (0+255),f,b
  3290  001334  2B7D               	incf	(sprintf@prec+1)& (0+255),f,b
  3291  001336                     l10389:
  3292                           
  3293                           ; BSR set to: 1
  3294                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3295  001336  0101               	movlb	1	; () banked
  3296  001338  6F58               	movwf	??_sprintf& (0+255),b
  3297  00133A  0E01               	movlw	1
  3298  00133C  0101               	movlb	1	; () banked
  3299  00133E  0101               	movlb	1	; () banked
  3300  001340  6F7E               	movwf	sprintf@c& (0+255),b
  3301  001342  0101               	movlb	1	; () banked
  3302  001344  5158               	movf	??_sprintf& (0+255),w,b
  3303  001346                     
  3304                           ; BSR set to: 1
  3305  001346  0101               	movlb	1	; () banked
  3306  001348  0101               	movlb	1	; () banked
  3307  00134A  517E               	movf	sprintf@c& (0+255),w,b
  3308  00134C  0A0A               	xorlw	10
  3309  00134E  B4D8               	btfsc	status,2,c
  3310  001350  D021               	goto	l10403
  3311                           
  3312                           ; BSR set to: 1
  3313                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  3314                           
  3315                           ; BSR set to: 1
  3316                           
  3317                           ; BSR set to: 1
  3318  001352  0101               	movlb	1	; () banked
  3319  001354  0101               	movlb	1	; () banked
  3320  001356  517E               	movf	sprintf@c& (0+255),w,b
  3321  001358  0D04               	mullw	4
  3322  00135A  0E00               	movlw	low _dpowers
  3323  00135C  24F3               	addwf	prodl,w,c
  3324  00135E  6EF6               	movwf	tblptrl,c
  3325  001360  0E08               	movlw	high _dpowers
  3326  001362  20F4               	addwfc	prodh,w,c
  3327  001364  6EF7               	movwf	tblptrh,c
  3328  001366  0009               	tblrd		*+
  3329  001368  50F5               	movf	tablat,w,c
  3330  00136A  0101               	movlb	1	; () banked
  3331  00136C  0101               	movlb	1	; () banked
  3332  00136E  5D6E               	subwf	sprintf@_val& (0+255),w,b
  3333  001370  0009               	tblrd		*+
  3334  001372  50F5               	movf	tablat,w,c
  3335  001374  0101               	movlb	1	; () banked
  3336  001376  596F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3337  001378  0009               	tblrd		*+
  3338  00137A  50F5               	movf	tablat,w,c
  3339  00137C  0101               	movlb	1	; () banked
  3340  00137E  5970               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3341  001380  0009               	tblrd		*+
  3342  001382  50F5               	movf	tablat,w,c
  3343  001384  0101               	movlb	1	; () banked
  3344  001386  5971               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3345  001388  A0D8               	btfss	status,0,c
  3346  00138A  D004               	goto	l10403
  3347                           
  3348                           ; BSR set to: 1
  3349                           
  3350                           ; BSR set to: 1
  3351                           
  3352                           ; BSR set to: 1
  3353                           ;doprnt.c: 1314: break;
  3354  00138C  0101               	movlb	1	; () banked
  3355  00138E  0101               	movlb	1	; () banked
  3356  001390  2B7E               	incf	sprintf@c& (0+255),f,b
  3357  001392  D7D9               	goto	L4
  3358  001394                     l10403:
  3359                           
  3360                           ; BSR set to: 1
  3361                           ;doprnt.c: 1346: if(c < prec)
  3362  001394  0E80               	movlw	128
  3363  001396  0101               	movlb	1	; () banked
  3364  001398  0101               	movlb	1	; () banked
  3365  00139A  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3366  00139C  0E7F               	movlw	127
  3367  00139E  6F58               	movwf	??_sprintf& (0+255),b
  3368  0013A0  0101               	movlb	1	; () banked
  3369  0013A2  0101               	movlb	1	; () banked
  3370  0013A4  517C               	movf	sprintf@prec& (0+255),w,b
  3371  0013A6  0101               	movlb	1	; () banked
  3372  0013A8  0101               	movlb	1	; () banked
  3373  0013AA  5D7E               	subwf	sprintf@c& (0+255),w,b
  3374  0013AC  0101               	movlb	1	; () banked
  3375  0013AE  0101               	movlb	1	; () banked
  3376  0013B0  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3377  0013B2  0A80               	xorlw	128
  3378  0013B4  0101               	movlb	1	; () banked
  3379  0013B6  5958               	subwfb	??_sprintf& (0+255),w,b
  3380  0013B8  B0D8               	btfsc	status,0,c
  3381  0013BA  D003               	goto	l10407
  3382                           
  3383                           ; BSR set to: 1
  3384                           ;doprnt.c: 1347: c = prec;
  3385  0013BC  C17C  F17E         	movff	sprintf@prec,sprintf@c
  3386  0013C0  D020               	goto	l10411
  3387  0013C2                     l10407:
  3388                           
  3389                           ; BSR set to: 1
  3390                           ;doprnt.c: 1348: else if(prec < c)
  3391  0013C2  0101               	movlb	1	; () banked
  3392  0013C4  0101               	movlb	1	; () banked
  3393  0013C6  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3394  0013C8  0A80               	xorlw	128
  3395  0013CA  0101               	movlb	1	; () banked
  3396  0013CC  6F58               	movwf	??_sprintf& (0+255),b
  3397  0013CE  0101               	movlb	1	; () banked
  3398  0013D0  0101               	movlb	1	; () banked
  3399  0013D2  517E               	movf	sprintf@c& (0+255),w,b
  3400  0013D4  0101               	movlb	1	; () banked
  3401  0013D6  0101               	movlb	1	; () banked
  3402  0013D8  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3403  0013DA  0E80               	movlw	128
  3404  0013DC  0101               	movlb	1	; () banked
  3405  0013DE  0101               	movlb	1	; () banked
  3406  0013E0  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3407  0013E2  0E7F               	movlw	127
  3408  0013E4  0101               	movlb	1	; () banked
  3409  0013E6  5958               	subwfb	??_sprintf& (0+255),w,b
  3410  0013E8  B0D8               	btfsc	status,0,c
  3411  0013EA  D00B               	goto	l10411
  3412                           
  3413                           ; BSR set to: 1
  3414                           ;doprnt.c: 1349: prec = c;
  3415  0013EC  0101               	movlb	1	; () banked
  3416  0013EE  0101               	movlb	1	; () banked
  3417  0013F0  517E               	movf	sprintf@c& (0+255),w,b
  3418  0013F2  0101               	movlb	1	; () banked
  3419  0013F4  0101               	movlb	1	; () banked
  3420  0013F6  6F7C               	movwf	sprintf@prec& (0+255),b
  3421  0013F8  0101               	movlb	1	; () banked
  3422  0013FA  6B7D               	clrf	(sprintf@prec+1)& (0+255),b
  3423  0013FC  0101               	movlb	1	; () banked
  3424  0013FE  BF7C               	btfsc	sprintf@prec& (0+255),7,b
  3425  001400  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3426  001402                     l10411:
  3427                           
  3428                           ; BSR set to: 1
  3429                           ;doprnt.c: 1352: if(width && flag & 0x03)
  3430  001402  0101               	movlb	1	; () banked
  3431  001404  0101               	movlb	1	; () banked
  3432  001406  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3433  001408  1177               	iorwf	sprintf@width& (0+255),w,b
  3434  00140A  B4D8               	btfsc	status,2,c
  3435  00140C  D016               	goto	l10417
  3436                           
  3437                           ; BSR set to: 1
  3438  00140E  0E03               	movlw	3
  3439  001410  0101               	movlb	1	; () banked
  3440  001412  0101               	movlb	1	; () banked
  3441  001414  1573               	andwf	sprintf@flag& (0+255),w,b
  3442  001416  0101               	movlb	1	; () banked
  3443  001418  6F58               	movwf	??_sprintf& (0+255),b
  3444  00141A  0E00               	movlw	0
  3445  00141C  0101               	movlb	1	; () banked
  3446  00141E  0101               	movlb	1	; () banked
  3447  001420  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3448  001422  0101               	movlb	1	; () banked
  3449  001424  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3450  001426  0101               	movlb	1	; () banked
  3451  001428  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3452  00142A  1158               	iorwf	??_sprintf& (0+255),w,b
  3453  00142C  B4D8               	btfsc	status,2,c
  3454  00142E  D005               	goto	l10417
  3455                           
  3456                           ; BSR set to: 1
  3457                           ;doprnt.c: 1353: width--;
  3458  001430  0101               	movlb	1	; () banked
  3459  001432  0101               	movlb	1	; () banked
  3460  001434  0777               	decf	sprintf@width& (0+255),f,b
  3461  001436  A0D8               	btfss	status,0,c
  3462  001438  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3463  00143A                     l10417:
  3464                           
  3465                           ; BSR set to: 1
  3466                           ;doprnt.c: 1355: if(flag & 0x4000) {
  3467  00143A  0101               	movlb	1	; () banked
  3468  00143C  0101               	movlb	1	; () banked
  3469  00143E  AD74               	btfss	(sprintf@flag+1)& (0+255),6,b
  3470  001440  D028               	goto	l10425
  3471                           
  3472                           ; BSR set to: 1
  3473                           ;doprnt.c: 1356: if(width > prec)
  3474  001442  0101               	movlb	1	; () banked
  3475  001444  0101               	movlb	1	; () banked
  3476  001446  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3477  001448  0A80               	xorlw	128
  3478  00144A  0101               	movlb	1	; () banked
  3479  00144C  6F58               	movwf	??_sprintf& (0+255),b
  3480  00144E  0101               	movlb	1	; () banked
  3481  001450  0101               	movlb	1	; () banked
  3482  001452  5177               	movf	sprintf@width& (0+255),w,b
  3483  001454  0101               	movlb	1	; () banked
  3484  001456  0101               	movlb	1	; () banked
  3485  001458  5D7C               	subwf	sprintf@prec& (0+255),w,b
  3486  00145A  0101               	movlb	1	; () banked
  3487  00145C  0101               	movlb	1	; () banked
  3488  00145E  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3489  001460  0A80               	xorlw	128
  3490  001462  0101               	movlb	1	; () banked
  3491  001464  5958               	subwfb	??_sprintf& (0+255),w,b
  3492  001466  B0D8               	btfsc	status,0,c
  3493  001468  D00D               	goto	l10423
  3494                           
  3495                           ; BSR set to: 1
  3496                           ;doprnt.c: 1357: width -= prec;
  3497  00146A  0101               	movlb	1	; () banked
  3498  00146C  0101               	movlb	1	; () banked
  3499  00146E  517C               	movf	sprintf@prec& (0+255),w,b
  3500  001470  0101               	movlb	1	; () banked
  3501  001472  0101               	movlb	1	; () banked
  3502  001474  5F77               	subwf	sprintf@width& (0+255),f,b
  3503  001476  0101               	movlb	1	; () banked
  3504  001478  0101               	movlb	1	; () banked
  3505  00147A  517D               	movf	(sprintf@prec+1)& (0+255),w,b
  3506  00147C  0101               	movlb	1	; () banked
  3507  00147E  0101               	movlb	1	; () banked
  3508  001480  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  3509  001482  D007               	goto	l10425
  3510  001484                     l10423:
  3511                           
  3512                           ; BSR set to: 1
  3513                           ;doprnt.c: 1358: else
  3514                           ;doprnt.c: 1359: width = 0;
  3515  001484  0E00               	movlw	0
  3516  001486  0101               	movlb	1	; () banked
  3517  001488  0101               	movlb	1	; () banked
  3518  00148A  6F78               	movwf	(sprintf@width+1)& (0+255),b
  3519  00148C  0E00               	movlw	0
  3520  00148E  0101               	movlb	1	; () banked
  3521  001490  6F77               	movwf	sprintf@width& (0+255),b
  3522  001492                     l10425:
  3523                           
  3524                           ; BSR set to: 1
  3525                           ;doprnt.c: 1360: }
  3526                           ;doprnt.c: 1388: if(width > c)
  3527  001492  0E80               	movlw	128
  3528  001494  0101               	movlb	1	; () banked
  3529  001496  0101               	movlb	1	; () banked
  3530  001498  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3531  00149A  0E7F               	movlw	127
  3532  00149C  6F58               	movwf	??_sprintf& (0+255),b
  3533  00149E  0101               	movlb	1	; () banked
  3534  0014A0  0101               	movlb	1	; () banked
  3535  0014A2  5177               	movf	sprintf@width& (0+255),w,b
  3536  0014A4  0101               	movlb	1	; () banked
  3537  0014A6  0101               	movlb	1	; () banked
  3538  0014A8  5D7E               	subwf	sprintf@c& (0+255),w,b
  3539  0014AA  0101               	movlb	1	; () banked
  3540  0014AC  0101               	movlb	1	; () banked
  3541  0014AE  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3542  0014B0  0A80               	xorlw	128
  3543  0014B2  0101               	movlb	1	; () banked
  3544  0014B4  5958               	subwfb	??_sprintf& (0+255),w,b
  3545  0014B6  B0D8               	btfsc	status,0,c
  3546  0014B8  D00E               	goto	l10429
  3547                           
  3548                           ; BSR set to: 1
  3549                           ;doprnt.c: 1389: width -= c;
  3550  0014BA  0101               	movlb	1	; () banked
  3551  0014BC  0101               	movlb	1	; () banked
  3552  0014BE  517E               	movf	sprintf@c& (0+255),w,b
  3553  0014C0  0101               	movlb	1	; () banked
  3554  0014C2  0101               	movlb	1	; () banked
  3555  0014C4  5F77               	subwf	sprintf@width& (0+255),f,b
  3556  0014C6  0E00               	movlw	0
  3557  0014C8  0101               	movlb	1	; () banked
  3558  0014CA  BF7E               	btfsc	sprintf@c& (0+255),7,b
  3559  0014CC  0EFF               	movlw	255
  3560  0014CE  0101               	movlb	1	; () banked
  3561  0014D0  0101               	movlb	1	; () banked
  3562  0014D2  5B78               	subwfb	(sprintf@width+1)& (0+255),f,b
  3563  0014D4  D007               	goto	l10431
  3564  0014D6                     l10429:
  3565                           
  3566                           ; BSR set to: 1
  3567                           ;doprnt.c: 1390: else
  3568                           ;doprnt.c: 1391: width = 0;
  3569  0014D6  0E00               	movlw	0
  3570  0014D8  0101               	movlb	1	; () banked
  3571  0014DA  0101               	movlb	1	; () banked
  3572  0014DC  6F78               	movwf	(sprintf@width+1)& (0+255),b
  3573  0014DE  0E00               	movlw	0
  3574  0014E0  0101               	movlb	1	; () banked
  3575  0014E2  6F77               	movwf	sprintf@width& (0+255),b
  3576  0014E4                     l10431:
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;doprnt.c: 1394: if(flag & 0x04) {
  3580  0014E4  0101               	movlb	1	; () banked
  3581  0014E6  0101               	movlb	1	; () banked
  3582  0014E8  A573               	btfss	sprintf@flag& (0+255),2,b
  3583  0014EA  D031               	goto	l10447
  3584                           
  3585                           ; BSR set to: 1
  3586                           ;doprnt.c: 1399: if(flag & 0x03)
  3587  0014EC  0E03               	movlw	3
  3588  0014EE  0101               	movlb	1	; () banked
  3589  0014F0  0101               	movlb	1	; () banked
  3590  0014F2  1573               	andwf	sprintf@flag& (0+255),w,b
  3591  0014F4  0101               	movlb	1	; () banked
  3592  0014F6  6F58               	movwf	??_sprintf& (0+255),b
  3593  0014F8  0E00               	movlw	0
  3594  0014FA  0101               	movlb	1	; () banked
  3595  0014FC  0101               	movlb	1	; () banked
  3596  0014FE  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3597  001500  0101               	movlb	1	; () banked
  3598  001502  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3599  001504  0101               	movlb	1	; () banked
  3600  001506  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3601  001508  1158               	iorwf	??_sprintf& (0+255),w,b
  3602  00150A  B4D8               	btfsc	status,2,c
  3603  00150C  D00A               	goto	l10439
  3604                           
  3605                           ; BSR set to: 1
  3606                           ;doprnt.c: 1400: ((*sp++ = ('-')));
  3607  00150E  C151  FFD9         	movff	sprintf@sp,fsr2l
  3608  001512  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3609  001516  0E2D               	movlw	45
  3610  001518  6EDF               	movwf	indf2,c
  3611                           
  3612                           ; BSR set to: 1
  3613  00151A  0101               	movlb	1	; () banked
  3614  00151C  0101               	movlb	1	; () banked
  3615  00151E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3616  001520  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3617  001522                     l10439:
  3618                           
  3619                           ; BSR set to: 1
  3620                           ;doprnt.c: 1422: if(width)
  3621  001522  0101               	movlb	1	; () banked
  3622  001524  0101               	movlb	1	; () banked
  3623  001526  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3624  001528  1177               	iorwf	sprintf@width& (0+255),w,b
  3625  00152A  B4D8               	btfsc	status,2,c
  3626  00152C  D09A               	goto	l10467
  3627                           
  3628                           ; BSR set to: 1
  3629                           ;doprnt.c: 1424: ((*sp++ = ('0')));
  3630                           
  3631                           ; BSR set to: 1
  3632                           
  3633                           ;doprnt.c: 1423: do
  3634  00152E  C151  FFD9         	movff	sprintf@sp,fsr2l
  3635  001532  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3636  001536  0E30               	movlw	48
  3637  001538  6EDF               	movwf	indf2,c
  3638                           
  3639                           ; BSR set to: 1
  3640  00153A  0101               	movlb	1	; () banked
  3641  00153C  0101               	movlb	1	; () banked
  3642  00153E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3643  001540  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3644                           
  3645                           ; BSR set to: 1
  3646                           ;doprnt.c: 1425: while(--width);
  3647  001542  0101               	movlb	1	; () banked
  3648  001544  0101               	movlb	1	; () banked
  3649  001546  0777               	decf	sprintf@width& (0+255),f,b
  3650  001548  A0D8               	btfss	status,0,c
  3651  00154A  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3652  00154C  D7EB               	goto	L6
  3653  00154E                     l10447:
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;doprnt.c: 1429: {
  3657                           ;doprnt.c: 1431: if(width
  3658                           ;doprnt.c: 1435: )
  3659  00154E  0101               	movlb	1	; () banked
  3660  001550  0101               	movlb	1	; () banked
  3661  001552  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3662  001554  1177               	iorwf	sprintf@width& (0+255),w,b
  3663  001556  B4D8               	btfsc	status,2,c
  3664  001558  D014               	goto	l10455
  3665  00155A                     l10449:
  3666                           
  3667                           ; BSR set to: 1
  3668                           ;doprnt.c: 1437: ((*sp++ = (' ')));
  3669  00155A  C151  FFD9         	movff	sprintf@sp,fsr2l
  3670  00155E  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3671  001562  0E20               	movlw	32
  3672  001564  6EDF               	movwf	indf2,c
  3673                           
  3674                           ; BSR set to: 1
  3675  001566  0101               	movlb	1	; () banked
  3676  001568  0101               	movlb	1	; () banked
  3677  00156A  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3678  00156C  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3679                           
  3680                           ; BSR set to: 1
  3681                           ;doprnt.c: 1438: while(--width);
  3682  00156E  0101               	movlb	1	; () banked
  3683  001570  0101               	movlb	1	; () banked
  3684  001572  0777               	decf	sprintf@width& (0+255),f,b
  3685  001574  A0D8               	btfss	status,0,c
  3686  001576  0778               	decf	(sprintf@width+1)& (0+255),f,b
  3687  001578  0101               	movlb	1	; () banked
  3688  00157A  5178               	movf	(sprintf@width+1)& (0+255),w,b
  3689  00157C  1177               	iorwf	sprintf@width& (0+255),w,b
  3690  00157E  A4D8               	btfss	status,2,c
  3691  001580  D7EC               	goto	l10449
  3692  001582                     l10455:
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;doprnt.c: 1445: if(flag & 0x03)
  3696  001582  0E03               	movlw	3
  3697  001584  0101               	movlb	1	; () banked
  3698  001586  0101               	movlb	1	; () banked
  3699  001588  1573               	andwf	sprintf@flag& (0+255),w,b
  3700  00158A  0101               	movlb	1	; () banked
  3701  00158C  6F58               	movwf	??_sprintf& (0+255),b
  3702  00158E  0E00               	movlw	0
  3703  001590  0101               	movlb	1	; () banked
  3704  001592  0101               	movlb	1	; () banked
  3705  001594  1574               	andwf	(sprintf@flag+1)& (0+255),w,b
  3706  001596  0101               	movlb	1	; () banked
  3707  001598  6F59               	movwf	(??_sprintf+1)& (0+255),b
  3708  00159A  0101               	movlb	1	; () banked
  3709  00159C  5159               	movf	(??_sprintf+1)& (0+255),w,b
  3710  00159E  1158               	iorwf	??_sprintf& (0+255),w,b
  3711  0015A0  B4D8               	btfsc	status,2,c
  3712  0015A2  D05F               	goto	l10467
  3713                           
  3714                           ; BSR set to: 1
  3715                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  3716  0015A4  C151  FFD9         	movff	sprintf@sp,fsr2l
  3717  0015A8  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3718  0015AC  0E2D               	movlw	45
  3719  0015AE  6EDF               	movwf	indf2,c
  3720  0015B0  D054               	goto	L5
  3721  0015B2                     l10461:
  3722                           
  3723                           ; BSR set to: 1
  3724                           ;doprnt.c: 1485: {
  3725                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  3726  0015B2  0101               	movlb	1	; () banked
  3727  0015B4  C17C  F158         	movff	sprintf@prec,??_sprintf
  3728  0015B8  0101               	movlb	1	; () banked
  3729  0015BA  C17D  F159         	movff	sprintf@prec+1,??_sprintf+1
  3730  0015BE  0101               	movlb	1	; () banked
  3731  0015C0  90D8               	bcf	status,0,c
  3732  0015C2  3758               	rlcf	??_sprintf& (0+255),f,b
  3733  0015C4  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  3734  0015C6  0101               	movlb	1	; () banked
  3735  0015C8  90D8               	bcf	status,0,c
  3736  0015CA  3758               	rlcf	??_sprintf& (0+255),f,b
  3737  0015CC  3759               	rlcf	(??_sprintf+1)& (0+255),f,b
  3738  0015CE  0E00               	movlw	low _dpowers
  3739  0015D0  0101               	movlb	1	; () banked
  3740  0015D2  2558               	addwf	??_sprintf& (0+255),w,b
  3741  0015D4  6EF6               	movwf	tblptrl,c
  3742  0015D6  0E08               	movlw	high _dpowers
  3743  0015D8  2159               	addwfc	(??_sprintf+1)& (0+255),w,b
  3744  0015DA  6EF7               	movwf	tblptrh,c
  3745  0015DC  0009               	tblrd		*+
  3746  0015DE  0101               	movlb	1	; () banked
  3747  0015E0  CFF5 F104          	movff	tablat,?___lldiv+4
  3748  0015E4  0009               	tblrd		*+
  3749  0015E6  0101               	movlb	1	; () banked
  3750  0015E8  CFF5 F105          	movff	tablat,?___lldiv+5
  3751  0015EC  0009               	tblrd		*+
  3752  0015EE  0101               	movlb	1	; () banked
  3753  0015F0  CFF5 F106          	movff	tablat,?___lldiv+6
  3754  0015F4  000A               	tblrd		*-
  3755  0015F6  0101               	movlb	1	; () banked
  3756  0015F8  CFF5 F107          	movff	tablat,?___lldiv+7
  3757  0015FC  C16E  F100         	movff	sprintf@_val,?___lldiv
  3758  001600  C16F  F101         	movff	sprintf@_val+1,?___lldiv+1
  3759  001604  C170  F102         	movff	sprintf@_val+2,?___lldiv+2
  3760  001608  C171  F103         	movff	sprintf@_val+3,?___lldiv+3
  3761  00160C  EC93  F025         	call	___lldiv	;wreg free
  3762  001610  C103  F111         	movff	?___lldiv+3,?___llmod+3
  3763  001614  C102  F110         	movff	?___lldiv+2,?___llmod+2
  3764  001618  C101  F10F         	movff	?___lldiv+1,?___llmod+1
  3765  00161C  C100  F10E         	movff	?___lldiv,?___llmod
  3766  001620  0E0A               	movlw	10
  3767  001622  0101               	movlb	1	; () banked
  3768  001624  0101               	movlb	1	; () banked
  3769  001626  6F12               	movwf	(?___llmod+4)& (0+255),b
  3770  001628  0E00               	movlw	0
  3771  00162A  0101               	movlb	1	; () banked
  3772  00162C  6F13               	movwf	(?___llmod+5)& (0+255),b
  3773  00162E  0E00               	movlw	0
  3774  001630  0101               	movlb	1	; () banked
  3775  001632  6F14               	movwf	(?___llmod+6)& (0+255),b
  3776  001634  0E00               	movlw	0
  3777  001636  0101               	movlb	1	; () banked
  3778  001638  6F15               	movwf	(?___llmod+7)& (0+255),b
  3779  00163A  EC58  F029         	call	___llmod	;wreg free
  3780  00163E  0101               	movlb	1	; () banked
  3781  001640  0101               	movlb	1	; () banked
  3782  001642  510E               	movf	?___llmod& (0+255),w,b
  3783  001644  0F30               	addlw	48
  3784  001646  0101               	movlb	1	; () banked
  3785  001648  0101               	movlb	1	; () banked
  3786  00164A  6F7E               	movwf	sprintf@c& (0+255),b
  3787                           
  3788                           ; BSR set to: 1
  3789                           ;doprnt.c: 1530: }
  3790                           ;doprnt.c: 1531: ((*sp++ = (c)));
  3791  00164C  C151  FFD9         	movff	sprintf@sp,fsr2l
  3792  001650  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3793  001654  0101               	movlb	1	; () banked
  3794  001656  C17E  FFDF         	movff	sprintf@c,indf2
  3795  00165A                     L5:
  3796                           
  3797                           ; BSR set to: 1
  3798  00165A  0101               	movlb	1	; () banked
  3799  00165C  0101               	movlb	1	; () banked
  3800  00165E  4B51               	infsnz	sprintf@sp& (0+255),f,b
  3801  001660  2B52               	incf	(sprintf@sp+1)& (0+255),f,b
  3802  001662                     l10467:
  3803                           
  3804                           ; BSR set to: 1
  3805  001662  0101               	movlb	1	; () banked
  3806  001664  0101               	movlb	1	; () banked
  3807  001666  077C               	decf	sprintf@prec& (0+255),f,b
  3808  001668  A0D8               	btfss	status,0,c
  3809  00166A  077D               	decf	(sprintf@prec+1)& (0+255),f,b
  3810  00166C  0101               	movlb	1	; () banked
  3811  00166E  297C               	incf	sprintf@prec& (0+255),w,b
  3812  001670  B4D8               	btfsc	status,2,c
  3813  001672  297D               	incf	(sprintf@prec+1)& (0+255),w,b
  3814  001674  A4D8               	btfss	status,2,c
  3815  001676  D79D               	goto	l10461
  3816  001678                     l10469:
  3817                           
  3818                           ; BSR set to: 1
  3819  001678  0101               	movlb	1	; () banked
  3820  00167A  C153  FFF6         	movff	sprintf@f,tblptrl
  3821  00167E  0101               	movlb	1	; () banked
  3822  001680  C154  FFF7         	movff	sprintf@f+1,tblptrh
  3823  001684  0101               	movlb	1	; () banked
  3824  001686  0101               	movlb	1	; () banked
  3825  001688  4B53               	infsnz	sprintf@f& (0+255),f,b
  3826  00168A  2B54               	incf	(sprintf@f+1)& (0+255),f,b
  3827  00168C  0008               	tblrd		*
  3828  00168E  0101               	movlb	1	; () banked
  3829  001690  CFF5 F17E          	movff	tablat,sprintf@c
  3830  001694  0101               	movlb	1	; () banked
  3831  001696  677E               	tstfsz	sprintf@c& (0+255),b
  3832  001698  EF55  F004         	goto	l10145
  3833  00169C                     l10471:
  3834                           
  3835                           ; BSR set to: 1
  3836                           ;doprnt.c: 1545: *sp = 0;
  3837  00169C  C151  FFD9         	movff	sprintf@sp,fsr2l
  3838  0016A0  C152  FFDA         	movff	sprintf@sp+1,fsr2h
  3839  0016A4  0E00               	movlw	0
  3840  0016A6  6EDF               	movwf	indf2,c
  3841                           
  3842                           ; BSR set to: 1
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;doprnt.c: 1547: return 0;
  3846                           ;	Return value of _sprintf is never used
  3847  0016A8  0012               	return	
  3848  0016AA                     __end_of_sprintf:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           prodh	equ	0xFF4
  3855                           prodl	equ	0xFF3
  3856                           postinc0	equ	0xFEE
  3857                           wreg	equ	0xFE8
  3858                           indf2	equ	0xFDF
  3859                           postinc2	equ	0xFDE
  3860                           postdec2	equ	0xFDD
  3861                           fsr2h	equ	0xFDA
  3862                           fsr2l	equ	0xFD9
  3863                           status	equ	0xFD8
  3864                           
  3865 ;; *************** function ___lwmod *****************
  3866 ;; Defined at:
  3867 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  dividend        2    0[BANK1 ] unsigned int 
  3870 ;;  divisor         2    2[BANK1 ] unsigned int 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  counter         1    5[BANK1 ] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  2    0[BANK1 ] unsigned int 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3882 ;;      Params:         0       0       4       0       0       0       0       0       0
  3883 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3884 ;;      Temps:          0       0       1       0       0       0       0       0       0
  3885 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3886 ;;Total ram usage:        6 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    9
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_sprintf
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text2
  3897  00588C                     __ptext2:
  3898                           	opt stack 0
  3899  00588C                     ___lwmod:
  3900                           	opt stack 20
  3901                           
  3902                           ; BSR set to: 1
  3903                           ;incstack = 0
  3904                           ;incstack = 0
  3905  00588C  0101               	movlb	1	; () banked
  3906  00588E  0101               	movlb	1	; () banked
  3907  005890  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3908  005892  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  3909  005894  B4D8               	btfsc	status,2,c
  3910  005896  D03A               	goto	l917
  3911                           
  3912                           ; BSR set to: 1
  3913  005898  0101               	movlb	1	; () banked
  3914  00589A  6F04               	movwf	??___lwmod& (0+255),b
  3915  00589C  0E01               	movlw	1
  3916  00589E  0101               	movlb	1	; () banked
  3917  0058A0  0101               	movlb	1	; () banked
  3918  0058A2  6F05               	movwf	___lwmod@counter& (0+255),b
  3919  0058A4  0101               	movlb	1	; () banked
  3920  0058A6  5104               	movf	??___lwmod& (0+255),w,b
  3921  0058A8  D009               	goto	l11075
  3922  0058AA                     l11073:
  3923                           
  3924                           ; BSR set to: 1
  3925  0058AA  0101               	movlb	1	; () banked
  3926  0058AC  0101               	movlb	1	; () banked
  3927  0058AE  0101               	movlb	1	; () banked
  3928  0058B0  90D8               	bcf	status,0,c
  3929  0058B2  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  3930  0058B4  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3931  0058B6  0101               	movlb	1	; () banked
  3932  0058B8  0101               	movlb	1	; () banked
  3933  0058BA  2B05               	incf	___lwmod@counter& (0+255),f,b
  3934  0058BC                     l11075:
  3935                           
  3936                           ; BSR set to: 1
  3937  0058BC  0101               	movlb	1	; () banked
  3938  0058BE  0101               	movlb	1	; () banked
  3939  0058C0  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3940  0058C2  D7F3               	goto	l11073
  3941  0058C4                     l11077:
  3942                           
  3943                           ; BSR set to: 1
  3944  0058C4  0101               	movlb	1	; () banked
  3945  0058C6  0101               	movlb	1	; () banked
  3946  0058C8  5102               	movf	___lwmod@divisor& (0+255),w,b
  3947  0058CA  0101               	movlb	1	; () banked
  3948  0058CC  0101               	movlb	1	; () banked
  3949  0058CE  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  3950  0058D0  0101               	movlb	1	; () banked
  3951  0058D2  0101               	movlb	1	; () banked
  3952  0058D4  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3953  0058D6  0101               	movlb	1	; () banked
  3954  0058D8  0101               	movlb	1	; () banked
  3955  0058DA  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3956  0058DC  A0D8               	btfss	status,0,c
  3957  0058DE  D00C               	goto	l11081
  3958                           
  3959                           ; BSR set to: 1
  3960  0058E0  0101               	movlb	1	; () banked
  3961  0058E2  0101               	movlb	1	; () banked
  3962  0058E4  5102               	movf	___lwmod@divisor& (0+255),w,b
  3963  0058E6  0101               	movlb	1	; () banked
  3964  0058E8  0101               	movlb	1	; () banked
  3965  0058EA  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  3966  0058EC  0101               	movlb	1	; () banked
  3967  0058EE  0101               	movlb	1	; () banked
  3968  0058F0  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3969  0058F2  0101               	movlb	1	; () banked
  3970  0058F4  0101               	movlb	1	; () banked
  3971  0058F6  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3972  0058F8                     l11081:
  3973                           
  3974                           ; BSR set to: 1
  3975  0058F8  0101               	movlb	1	; () banked
  3976  0058FA  0101               	movlb	1	; () banked
  3977  0058FC  0101               	movlb	1	; () banked
  3978  0058FE  90D8               	bcf	status,0,c
  3979  005900  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3980  005902  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  3981                           
  3982                           ; BSR set to: 1
  3983  005904  0101               	movlb	1	; () banked
  3984  005906  0101               	movlb	1	; () banked
  3985  005908  2F05               	decfsz	___lwmod@counter& (0+255),f,b
  3986  00590A  D7DC               	goto	l11077
  3987  00590C                     l917:
  3988                           
  3989                           ; BSR set to: 1
  3990  00590C  C100  F100         	movff	___lwmod@dividend,?___lwmod
  3991  005910  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  3992                           
  3993                           ; BSR set to: 1
  3994  005914  0012               	return	
  3995  005916                     __end_of___lwmod:
  3996                           	opt stack 0
  3997                           tblptru	equ	0xFF8
  3998                           tblptrh	equ	0xFF7
  3999                           tblptrl	equ	0xFF6
  4000                           tablat	equ	0xFF5
  4001                           prodh	equ	0xFF4
  4002                           prodl	equ	0xFF3
  4003                           postinc0	equ	0xFEE
  4004                           wreg	equ	0xFE8
  4005                           indf2	equ	0xFDF
  4006                           postinc2	equ	0xFDE
  4007                           postdec2	equ	0xFDD
  4008                           fsr2h	equ	0xFDA
  4009                           fsr2l	equ	0xFD9
  4010                           status	equ	0xFD8
  4011                           
  4012 ;; *************** function ___lltoft *****************
  4013 ;; Defined at:
  4014 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  c               4    8[BANK1 ] unsigned long 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  exp             1   16[BANK1 ] unsigned char 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  3    8[BANK1 ] float 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4028 ;;      Params:         0       0       4       0       0       0       0       0       0
  4029 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4030 ;;      Temps:          0       0       4       0       0       0       0       0       0
  4031 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4032 ;;Total ram usage:        9 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:   10
  4035 ;; This function calls:
  4036 ;;		___ftpack
  4037 ;; This function is called by:
  4038 ;;		_sprintf
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text3
  4043  005642                     __ptext3:
  4044                           	opt stack 0
  4045  005642                     ___lltoft:
  4046                           	opt stack 19
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;incstack = 0
  4050                           ;incstack = 0
  4051  005642  0101               	movlb	1	; () banked
  4052  005644  6F0C               	movwf	??___lltoft& (0+255),b
  4053  005646  0E8E               	movlw	142
  4054  005648  0101               	movlb	1	; () banked
  4055  00564A  0101               	movlb	1	; () banked
  4056  00564C  6F10               	movwf	___lltoft@exp& (0+255),b
  4057  00564E  0101               	movlb	1	; () banked
  4058  005650  510C               	movf	??___lltoft& (0+255),w,b
  4059  005652  D00D               	goto	l11041
  4060  005654                     l11039:
  4061                           
  4062                           ; BSR set to: 1
  4063  005654  0101               	movlb	1	; () banked
  4064  005656  90D8               	bcf	status,0,c
  4065  005658  0101               	movlb	1	; () banked
  4066  00565A  330B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  4067  00565C  0101               	movlb	1	; () banked
  4068  00565E  330A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  4069  005660  0101               	movlb	1	; () banked
  4070  005662  3309               	rrcf	(___lltoft@c+1)& (0+255),f,b
  4071  005664  0101               	movlb	1	; () banked
  4072  005666  3308               	rrcf	___lltoft@c& (0+255),f,b
  4073  005668  0101               	movlb	1	; () banked
  4074  00566A  0101               	movlb	1	; () banked
  4075  00566C  2B10               	incf	___lltoft@exp& (0+255),f,b
  4076  00566E                     l11041:
  4077                           
  4078                           ; BSR set to: 1
  4079  00566E  0E00               	movlw	0
  4080  005670  0101               	movlb	1	; () banked
  4081  005672  0101               	movlb	1	; () banked
  4082  005674  1508               	andwf	___lltoft@c& (0+255),w,b
  4083  005676  0101               	movlb	1	; () banked
  4084  005678  6F0C               	movwf	??___lltoft& (0+255),b
  4085  00567A  0E00               	movlw	0
  4086  00567C  0101               	movlb	1	; () banked
  4087  00567E  0101               	movlb	1	; () banked
  4088  005680  1509               	andwf	(___lltoft@c+1)& (0+255),w,b
  4089  005682  0101               	movlb	1	; () banked
  4090  005684  6F0D               	movwf	(??___lltoft+1)& (0+255),b
  4091  005686  0E00               	movlw	0
  4092  005688  0101               	movlb	1	; () banked
  4093  00568A  0101               	movlb	1	; () banked
  4094  00568C  150A               	andwf	(___lltoft@c+2)& (0+255),w,b
  4095  00568E  0101               	movlb	1	; () banked
  4096  005690  6F0E               	movwf	(??___lltoft+2)& (0+255),b
  4097  005692  0EFF               	movlw	255
  4098  005694  0101               	movlb	1	; () banked
  4099  005696  0101               	movlb	1	; () banked
  4100  005698  150B               	andwf	(___lltoft@c+3)& (0+255),w,b
  4101  00569A  0101               	movlb	1	; () banked
  4102  00569C  6F0F               	movwf	(??___lltoft+3)& (0+255),b
  4103  00569E  0101               	movlb	1	; () banked
  4104  0056A0  510F               	movf	(??___lltoft+3)& (0+255),w,b
  4105  0056A2  110C               	iorwf	??___lltoft& (0+255),w,b
  4106  0056A4  110D               	iorwf	(??___lltoft+1)& (0+255),w,b
  4107  0056A6  110E               	iorwf	(??___lltoft+2)& (0+255),w,b
  4108  0056A8  A4D8               	btfss	status,2,c
  4109  0056AA  D7D4               	goto	l11039
  4110                           
  4111                           ; BSR set to: 1
  4112                           
  4113                           ; BSR set to: 1
  4114  0056AC  C108  F100         	movff	___lltoft@c,?___ftpack
  4115  0056B0  C109  F101         	movff	___lltoft@c+1,?___ftpack+1
  4116  0056B4  C10A  F102         	movff	___lltoft@c+2,?___ftpack+2
  4117  0056B8  C110  F103         	movff	___lltoft@exp,?___ftpack+3
  4118  0056BC  0101               	movlb	1	; () banked
  4119  0056BE  6F0C               	movwf	??___lltoft& (0+255),b
  4120  0056C0  0E00               	movlw	0
  4121  0056C2  0101               	movlb	1	; () banked
  4122  0056C4  0101               	movlb	1	; () banked
  4123  0056C6  6F04               	movwf	(?___ftpack+4)& (0+255),b
  4124  0056C8  0101               	movlb	1	; () banked
  4125  0056CA  510C               	movf	??___lltoft& (0+255),w,b
  4126  0056CC  EC30  F022         	call	___ftpack	;wreg free
  4127  0056D0  C102  F10A         	movff	?___ftpack+2,?___lltoft+2
  4128  0056D4  C101  F109         	movff	?___ftpack+1,?___lltoft+1
  4129  0056D8  C100  F108         	movff	?___ftpack,?___lltoft
  4130  0056DC  0012               	return	
  4131  0056DE                     __end_of___lltoft:
  4132                           	opt stack 0
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           prodh	equ	0xFF4
  4138                           prodl	equ	0xFF3
  4139                           postinc0	equ	0xFEE
  4140                           wreg	equ	0xFE8
  4141                           indf2	equ	0xFDF
  4142                           postinc2	equ	0xFDE
  4143                           postdec2	equ	0xFDD
  4144                           fsr2h	equ	0xFDA
  4145                           fsr2l	equ	0xFD9
  4146                           status	equ	0xFD8
  4147                           
  4148 ;; *************** function ___llmod *****************
  4149 ;; Defined at:
  4150 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  dividend        4   14[BANK1 ] unsigned long 
  4153 ;;  divisor         4   18[BANK1 ] unsigned long 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  counter         1   23[BANK1 ] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  4   14[BANK1 ] unsigned long 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4165 ;;      Params:         0       0       8       0       0       0       0       0       0
  4166 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4167 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4168 ;;      Totals:         0       0      10       0       0       0       0       0       0
  4169 ;;Total ram usage:       10 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    9
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_sprintf
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text4
  4180  0052B0                     __ptext4:
  4181                           	opt stack 0
  4182  0052B0                     ___llmod:
  4183                           	opt stack 20
  4184                           
  4185                           ;incstack = 0
  4186                           ;incstack = 0
  4187  0052B0  0101               	movlb	1	; () banked
  4188  0052B2  0101               	movlb	1	; () banked
  4189  0052B4  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4190  0052B6  1112               	iorwf	___llmod@divisor& (0+255),w,b
  4191  0052B8  1113               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4192  0052BA  1114               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4193  0052BC  B4D8               	btfsc	status,2,c
  4194  0052BE  D05A               	goto	l848
  4195                           
  4196                           ; BSR set to: 1
  4197  0052C0  0101               	movlb	1	; () banked
  4198  0052C2  6F16               	movwf	??___llmod& (0+255),b
  4199  0052C4  0E01               	movlw	1
  4200  0052C6  0101               	movlb	1	; () banked
  4201  0052C8  0101               	movlb	1	; () banked
  4202  0052CA  6F17               	movwf	___llmod@counter& (0+255),b
  4203  0052CC  0101               	movlb	1	; () banked
  4204  0052CE  5116               	movf	??___llmod& (0+255),w,b
  4205  0052D0  D00D               	goto	l8519
  4206  0052D2                     l8517:
  4207                           
  4208                           ; BSR set to: 1
  4209  0052D2  0101               	movlb	1	; () banked
  4210  0052D4  90D8               	bcf	status,0,c
  4211  0052D6  0101               	movlb	1	; () banked
  4212  0052D8  3712               	rlcf	___llmod@divisor& (0+255),f,b
  4213  0052DA  0101               	movlb	1	; () banked
  4214  0052DC  3713               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4215  0052DE  0101               	movlb	1	; () banked
  4216  0052E0  3714               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4217  0052E2  0101               	movlb	1	; () banked
  4218  0052E4  3715               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4219  0052E6  0101               	movlb	1	; () banked
  4220  0052E8  0101               	movlb	1	; () banked
  4221  0052EA  2B17               	incf	___llmod@counter& (0+255),f,b
  4222  0052EC                     l8519:
  4223                           
  4224                           ; BSR set to: 1
  4225  0052EC  0101               	movlb	1	; () banked
  4226  0052EE  0101               	movlb	1	; () banked
  4227  0052F0  AF15               	btfss	(___llmod@divisor+3)& (0+255),7,b
  4228  0052F2  D7EF               	goto	l8517
  4229  0052F4                     l8521:
  4230                           
  4231                           ; BSR set to: 1
  4232  0052F4  0101               	movlb	1	; () banked
  4233  0052F6  0101               	movlb	1	; () banked
  4234  0052F8  5112               	movf	___llmod@divisor& (0+255),w,b
  4235  0052FA  0101               	movlb	1	; () banked
  4236  0052FC  0101               	movlb	1	; () banked
  4237  0052FE  5D0E               	subwf	___llmod@dividend& (0+255),w,b
  4238  005300  0101               	movlb	1	; () banked
  4239  005302  0101               	movlb	1	; () banked
  4240  005304  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  4241  005306  0101               	movlb	1	; () banked
  4242  005308  0101               	movlb	1	; () banked
  4243  00530A  590F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4244  00530C  0101               	movlb	1	; () banked
  4245  00530E  0101               	movlb	1	; () banked
  4246  005310  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  4247  005312  0101               	movlb	1	; () banked
  4248  005314  0101               	movlb	1	; () banked
  4249  005316  5910               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4250  005318  0101               	movlb	1	; () banked
  4251  00531A  0101               	movlb	1	; () banked
  4252  00531C  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4253  00531E  0101               	movlb	1	; () banked
  4254  005320  0101               	movlb	1	; () banked
  4255  005322  5911               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4256  005324  A0D8               	btfss	status,0,c
  4257  005326  D018               	goto	l8525
  4258                           
  4259                           ; BSR set to: 1
  4260  005328  0101               	movlb	1	; () banked
  4261  00532A  0101               	movlb	1	; () banked
  4262  00532C  5112               	movf	___llmod@divisor& (0+255),w,b
  4263  00532E  0101               	movlb	1	; () banked
  4264  005330  0101               	movlb	1	; () banked
  4265  005332  5F0E               	subwf	___llmod@dividend& (0+255),f,b
  4266  005334  0101               	movlb	1	; () banked
  4267  005336  0101               	movlb	1	; () banked
  4268  005338  5113               	movf	(___llmod@divisor+1)& (0+255),w,b
  4269  00533A  0101               	movlb	1	; () banked
  4270  00533C  0101               	movlb	1	; () banked
  4271  00533E  5B0F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  4272  005340  0101               	movlb	1	; () banked
  4273  005342  0101               	movlb	1	; () banked
  4274  005344  5114               	movf	(___llmod@divisor+2)& (0+255),w,b
  4275  005346  0101               	movlb	1	; () banked
  4276  005348  0101               	movlb	1	; () banked
  4277  00534A  5B10               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  4278  00534C  0101               	movlb	1	; () banked
  4279  00534E  0101               	movlb	1	; () banked
  4280  005350  5115               	movf	(___llmod@divisor+3)& (0+255),w,b
  4281  005352  0101               	movlb	1	; () banked
  4282  005354  0101               	movlb	1	; () banked
  4283  005356  5B11               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  4284  005358                     l8525:
  4285                           
  4286                           ; BSR set to: 1
  4287  005358  0101               	movlb	1	; () banked
  4288  00535A  90D8               	bcf	status,0,c
  4289  00535C  0101               	movlb	1	; () banked
  4290  00535E  3315               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  4291  005360  0101               	movlb	1	; () banked
  4292  005362  3314               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  4293  005364  0101               	movlb	1	; () banked
  4294  005366  3313               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  4295  005368  0101               	movlb	1	; () banked
  4296  00536A  3312               	rrcf	___llmod@divisor& (0+255),f,b
  4297                           
  4298                           ; BSR set to: 1
  4299  00536C  0101               	movlb	1	; () banked
  4300  00536E  0101               	movlb	1	; () banked
  4301  005370  2F17               	decfsz	___llmod@counter& (0+255),f,b
  4302  005372  D7C0               	goto	l8521
  4303  005374                     l848:
  4304                           
  4305                           ; BSR set to: 1
  4306  005374  C10E  F10E         	movff	___llmod@dividend,?___llmod
  4307  005378  C10F  F10F         	movff	___llmod@dividend+1,?___llmod+1
  4308  00537C  C110  F110         	movff	___llmod@dividend+2,?___llmod+2
  4309  005380  C111  F111         	movff	___llmod@dividend+3,?___llmod+3
  4310                           
  4311                           ; BSR set to: 1
  4312  005384  0012               	return	
  4313  005386                     __end_of___llmod:
  4314                           	opt stack 0
  4315                           tblptru	equ	0xFF8
  4316                           tblptrh	equ	0xFF7
  4317                           tblptrl	equ	0xFF6
  4318                           tablat	equ	0xFF5
  4319                           prodh	equ	0xFF4
  4320                           prodl	equ	0xFF3
  4321                           postinc0	equ	0xFEE
  4322                           wreg	equ	0xFE8
  4323                           indf2	equ	0xFDF
  4324                           postinc2	equ	0xFDE
  4325                           postdec2	equ	0xFDD
  4326                           fsr2h	equ	0xFDA
  4327                           fsr2l	equ	0xFD9
  4328                           status	equ	0xFD8
  4329                           
  4330 ;; *************** function ___lldiv *****************
  4331 ;; Defined at:
  4332 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  dividend        4    0[BANK1 ] unsigned long 
  4335 ;;  divisor         4    4[BANK1 ] unsigned long 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  quotient        4    9[BANK1 ] unsigned long 
  4338 ;;  counter         1   13[BANK1 ] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  4    0[BANK1 ] unsigned long 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4348 ;;      Params:         0       0       8       0       0       0       0       0       0
  4349 ;;      Locals:         0       0       5       0       0       0       0       0       0
  4350 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4351 ;;      Totals:         0       0      14       0       0       0       0       0       0
  4352 ;;Total ram usage:       14 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    9
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_sprintf
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text5
  4363  004B26                     __ptext5:
  4364                           	opt stack 0
  4365  004B26                     ___lldiv:
  4366                           	opt stack 20
  4367                           
  4368                           ; BSR set to: 1
  4369                           ;incstack = 0
  4370                           ;incstack = 0
  4371  004B26  0E00               	movlw	0
  4372  004B28  0101               	movlb	1	; () banked
  4373  004B2A  0101               	movlb	1	; () banked
  4374  004B2C  6F09               	movwf	___lldiv@quotient& (0+255),b
  4375  004B2E  0E00               	movlw	0
  4376  004B30  0101               	movlb	1	; () banked
  4377  004B32  6F0A               	movwf	(___lldiv@quotient+1)& (0+255),b
  4378  004B34  0E00               	movlw	0
  4379  004B36  0101               	movlb	1	; () banked
  4380  004B38  6F0B               	movwf	(___lldiv@quotient+2)& (0+255),b
  4381  004B3A  0E00               	movlw	0
  4382  004B3C  0101               	movlb	1	; () banked
  4383  004B3E  6F0C               	movwf	(___lldiv@quotient+3)& (0+255),b
  4384                           
  4385                           ; BSR set to: 1
  4386  004B40  0101               	movlb	1	; () banked
  4387  004B42  0101               	movlb	1	; () banked
  4388  004B44  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4389  004B46  1104               	iorwf	___lldiv@divisor& (0+255),w,b
  4390  004B48  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4391  004B4A  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4392  004B4C  B4D8               	btfsc	status,2,c
  4393  004B4E  D067               	goto	l838
  4394                           
  4395                           ; BSR set to: 1
  4396  004B50  0101               	movlb	1	; () banked
  4397  004B52  6F08               	movwf	??___lldiv& (0+255),b
  4398  004B54  0E01               	movlw	1
  4399  004B56  0101               	movlb	1	; () banked
  4400  004B58  0101               	movlb	1	; () banked
  4401  004B5A  6F0D               	movwf	___lldiv@counter& (0+255),b
  4402  004B5C  0101               	movlb	1	; () banked
  4403  004B5E  5108               	movf	??___lldiv& (0+255),w,b
  4404  004B60  D00D               	goto	l11023
  4405  004B62                     l11021:
  4406                           
  4407                           ; BSR set to: 1
  4408  004B62  0101               	movlb	1	; () banked
  4409  004B64  90D8               	bcf	status,0,c
  4410  004B66  0101               	movlb	1	; () banked
  4411  004B68  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  4412  004B6A  0101               	movlb	1	; () banked
  4413  004B6C  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4414  004B6E  0101               	movlb	1	; () banked
  4415  004B70  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4416  004B72  0101               	movlb	1	; () banked
  4417  004B74  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4418  004B76  0101               	movlb	1	; () banked
  4419  004B78  0101               	movlb	1	; () banked
  4420  004B7A  2B0D               	incf	___lldiv@counter& (0+255),f,b
  4421  004B7C                     l11023:
  4422                           
  4423                           ; BSR set to: 1
  4424  004B7C  0101               	movlb	1	; () banked
  4425  004B7E  0101               	movlb	1	; () banked
  4426  004B80  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4427  004B82  D7EF               	goto	l11021
  4428  004B84                     l11025:
  4429                           
  4430                           ; BSR set to: 1
  4431  004B84  0101               	movlb	1	; () banked
  4432  004B86  90D8               	bcf	status,0,c
  4433  004B88  0101               	movlb	1	; () banked
  4434  004B8A  3709               	rlcf	___lldiv@quotient& (0+255),f,b
  4435  004B8C  0101               	movlb	1	; () banked
  4436  004B8E  370A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4437  004B90  0101               	movlb	1	; () banked
  4438  004B92  370B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4439  004B94  0101               	movlb	1	; () banked
  4440  004B96  370C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4441                           
  4442                           ; BSR set to: 1
  4443  004B98  0101               	movlb	1	; () banked
  4444  004B9A  0101               	movlb	1	; () banked
  4445  004B9C  5104               	movf	___lldiv@divisor& (0+255),w,b
  4446  004B9E  0101               	movlb	1	; () banked
  4447  004BA0  0101               	movlb	1	; () banked
  4448  004BA2  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  4449  004BA4  0101               	movlb	1	; () banked
  4450  004BA6  0101               	movlb	1	; () banked
  4451  004BA8  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4452  004BAA  0101               	movlb	1	; () banked
  4453  004BAC  0101               	movlb	1	; () banked
  4454  004BAE  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4455  004BB0  0101               	movlb	1	; () banked
  4456  004BB2  0101               	movlb	1	; () banked
  4457  004BB4  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4458  004BB6  0101               	movlb	1	; () banked
  4459  004BB8  0101               	movlb	1	; () banked
  4460  004BBA  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4461  004BBC  0101               	movlb	1	; () banked
  4462  004BBE  0101               	movlb	1	; () banked
  4463  004BC0  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4464  004BC2  0101               	movlb	1	; () banked
  4465  004BC4  0101               	movlb	1	; () banked
  4466  004BC6  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4467  004BC8  A0D8               	btfss	status,0,c
  4468  004BCA  D01B               	goto	l11033
  4469                           
  4470                           ; BSR set to: 1
  4471  004BCC  0101               	movlb	1	; () banked
  4472  004BCE  0101               	movlb	1	; () banked
  4473  004BD0  5104               	movf	___lldiv@divisor& (0+255),w,b
  4474  004BD2  0101               	movlb	1	; () banked
  4475  004BD4  0101               	movlb	1	; () banked
  4476  004BD6  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  4477  004BD8  0101               	movlb	1	; () banked
  4478  004BDA  0101               	movlb	1	; () banked
  4479  004BDC  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4480  004BDE  0101               	movlb	1	; () banked
  4481  004BE0  0101               	movlb	1	; () banked
  4482  004BE2  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4483  004BE4  0101               	movlb	1	; () banked
  4484  004BE6  0101               	movlb	1	; () banked
  4485  004BE8  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4486  004BEA  0101               	movlb	1	; () banked
  4487  004BEC  0101               	movlb	1	; () banked
  4488  004BEE  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4489  004BF0  0101               	movlb	1	; () banked
  4490  004BF2  0101               	movlb	1	; () banked
  4491  004BF4  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4492  004BF6  0101               	movlb	1	; () banked
  4493  004BF8  0101               	movlb	1	; () banked
  4494  004BFA  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4495                           
  4496                           ; BSR set to: 1
  4497  004BFC  0101               	movlb	1	; () banked
  4498  004BFE  0101               	movlb	1	; () banked
  4499  004C00  8109               	bsf	___lldiv@quotient& (0+255),0,b
  4500  004C02                     l11033:
  4501                           
  4502                           ; BSR set to: 1
  4503  004C02  0101               	movlb	1	; () banked
  4504  004C04  90D8               	bcf	status,0,c
  4505  004C06  0101               	movlb	1	; () banked
  4506  004C08  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4507  004C0A  0101               	movlb	1	; () banked
  4508  004C0C  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4509  004C0E  0101               	movlb	1	; () banked
  4510  004C10  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4511  004C12  0101               	movlb	1	; () banked
  4512  004C14  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  4513                           
  4514                           ; BSR set to: 1
  4515  004C16  0101               	movlb	1	; () banked
  4516  004C18  0101               	movlb	1	; () banked
  4517  004C1A  2F0D               	decfsz	___lldiv@counter& (0+255),f,b
  4518  004C1C  D7B3               	goto	l11025
  4519  004C1E                     l838:
  4520                           
  4521                           ; BSR set to: 1
  4522  004C1E  C109  F100         	movff	___lldiv@quotient,?___lldiv
  4523  004C22  C10A  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  4524  004C26  C10B  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  4525  004C2A  C10C  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  4526                           
  4527                           ; BSR set to: 1
  4528  004C2E  0012               	return	
  4529  004C30                     __end_of___lldiv:
  4530                           	opt stack 0
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           prodh	equ	0xFF4
  4536                           prodl	equ	0xFF3
  4537                           postinc0	equ	0xFEE
  4538                           wreg	equ	0xFE8
  4539                           indf2	equ	0xFDF
  4540                           postinc2	equ	0xFDE
  4541                           postdec2	equ	0xFDD
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function ___ftneg *****************
  4547 ;; Defined at:
  4548 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  f1              3    0[BANK1 ] float 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  3    0[BANK1 ] float 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4562 ;;      Params:         0       0       3       0       0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4565 ;;      Totals:         0       0       3       0       0       0       0       0       0
  4566 ;;Total ram usage:        3 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    9
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_sprintf
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text6
  4577  00609E                     __ptext6:
  4578                           	opt stack 0
  4579  00609E                     ___ftneg:
  4580                           	opt stack 20
  4581                           
  4582                           ; BSR set to: 1
  4583                           ;incstack = 0
  4584                           ;incstack = 0
  4585  00609E  0E7F               	movlw	127
  4586  0060A0  0101               	movlb	1	; () banked
  4587  0060A2  0101               	movlb	1	; () banked
  4588  0060A4  1502               	andwf	(___ftneg@f1+2)& (0+255),w,b
  4589  0060A6  0101               	movlb	1	; () banked
  4590  0060A8  1101               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  4591  0060AA  0101               	movlb	1	; () banked
  4592  0060AC  1100               	iorwf	___ftneg@f1& (0+255),w,b
  4593  0060AE  B4D8               	btfsc	status,2,c
  4594  0060B0  D00C               	goto	l784
  4595                           
  4596                           ; BSR set to: 1
  4597  0060B2  0E00               	movlw	0
  4598  0060B4  0101               	movlb	1	; () banked
  4599  0060B6  0101               	movlb	1	; () banked
  4600  0060B8  1B00               	xorwf	___ftneg@f1& (0+255),f,b
  4601  0060BA  0E00               	movlw	0
  4602  0060BC  0101               	movlb	1	; () banked
  4603  0060BE  0101               	movlb	1	; () banked
  4604  0060C0  1B01               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  4605  0060C2  0E80               	movlw	128
  4606  0060C4  0101               	movlb	1	; () banked
  4607  0060C6  0101               	movlb	1	; () banked
  4608  0060C8  1B02               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  4609  0060CA                     l784:
  4610                           
  4611                           ; BSR set to: 1
  4612  0060CA  C100  F100         	movff	___ftneg@f1,?___ftneg
  4613  0060CE  C101  F101         	movff	___ftneg@f1+1,?___ftneg+1
  4614  0060D2  C102  F102         	movff	___ftneg@f1+2,?___ftneg+2
  4615                           
  4616                           ; BSR set to: 1
  4617  0060D6  0012               	return	
  4618  0060D8                     __end_of___ftneg:
  4619                           	opt stack 0
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           postinc0	equ	0xFEE
  4627                           wreg	equ	0xFE8
  4628                           indf2	equ	0xFDF
  4629                           postinc2	equ	0xFDE
  4630                           postdec2	equ	0xFDD
  4631                           fsr2h	equ	0xFDA
  4632                           fsr2l	equ	0xFD9
  4633                           status	equ	0xFD8
  4634                           
  4635 ;; *************** function ___ftge *****************
  4636 ;; Defined at:
  4637 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  ff1             3    0[BANK1 ] float 
  4640 ;;  ff2             3    3[BANK1 ] float 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;		None               void
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4652 ;;      Params:         0       0       6       0       0       0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4654 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4655 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4656 ;;Total ram usage:        9 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    9
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_sprintf
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text7
  4667  004D32                     __ptext7:
  4668                           	opt stack 0
  4669  004D32                     ___ftge:
  4670                           	opt stack 20
  4671                           
  4672                           ; BSR set to: 1
  4673                           ;incstack = 0
  4674                           ;incstack = 0
  4675  004D32  0101               	movlb	1	; () banked
  4676  004D34  0101               	movlb	1	; () banked
  4677  004D36  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  4678  004D38  D021               	goto	l10997
  4679                           
  4680                           ; BSR set to: 1
  4681  004D3A  0101               	movlb	1	; () banked
  4682  004D3C  C100  F106         	movff	___ftge@ff1,??___ftge
  4683  004D40  0101               	movlb	1	; () banked
  4684  004D42  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  4685  004D46  0101               	movlb	1	; () banked
  4686  004D48  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  4687  004D4C  0101               	movlb	1	; () banked
  4688  004D4E  1F06               	comf	??___ftge& (0+255),f,b
  4689  004D50  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4690  004D52  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4691  004D54  2B06               	incf	??___ftge& (0+255),f,b
  4692  004D56  0E00               	movlw	0
  4693  004D58  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4694  004D5A  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4695  004D5C  0E00               	movlw	0
  4696  004D5E  0101               	movlb	1	; () banked
  4697  004D60  2506               	addwf	??___ftge& (0+255),w,b
  4698  004D62  0101               	movlb	1	; () banked
  4699  004D64  0101               	movlb	1	; () banked
  4700  004D66  6F00               	movwf	___ftge@ff1& (0+255),b
  4701  004D68  0E00               	movlw	0
  4702  004D6A  0101               	movlb	1	; () banked
  4703  004D6C  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4704  004D6E  0101               	movlb	1	; () banked
  4705  004D70  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  4706  004D72  0E80               	movlw	128
  4707  004D74  0101               	movlb	1	; () banked
  4708  004D76  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4709  004D78  0101               	movlb	1	; () banked
  4710  004D7A  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  4711  004D7C                     l10997:
  4712                           
  4713                           ; BSR set to: 1
  4714  004D7C  0101               	movlb	1	; () banked
  4715  004D7E  0101               	movlb	1	; () banked
  4716  004D80  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  4717  004D82  D021               	goto	l11001
  4718                           
  4719                           ; BSR set to: 1
  4720  004D84  0101               	movlb	1	; () banked
  4721  004D86  C103  F106         	movff	___ftge@ff2,??___ftge
  4722  004D8A  0101               	movlb	1	; () banked
  4723  004D8C  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  4724  004D90  0101               	movlb	1	; () banked
  4725  004D92  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  4726  004D96  0101               	movlb	1	; () banked
  4727  004D98  1F06               	comf	??___ftge& (0+255),f,b
  4728  004D9A  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4729  004D9C  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4730  004D9E  2B06               	incf	??___ftge& (0+255),f,b
  4731  004DA0  0E00               	movlw	0
  4732  004DA2  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4733  004DA4  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4734  004DA6  0E00               	movlw	0
  4735  004DA8  0101               	movlb	1	; () banked
  4736  004DAA  2506               	addwf	??___ftge& (0+255),w,b
  4737  004DAC  0101               	movlb	1	; () banked
  4738  004DAE  0101               	movlb	1	; () banked
  4739  004DB0  6F03               	movwf	___ftge@ff2& (0+255),b
  4740  004DB2  0E00               	movlw	0
  4741  004DB4  0101               	movlb	1	; () banked
  4742  004DB6  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4743  004DB8  0101               	movlb	1	; () banked
  4744  004DBA  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  4745  004DBC  0E80               	movlw	128
  4746  004DBE  0101               	movlb	1	; () banked
  4747  004DC0  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4748  004DC2  0101               	movlb	1	; () banked
  4749  004DC4  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  4750  004DC6                     l11001:
  4751                           
  4752                           ; BSR set to: 1
  4753  004DC6  0E00               	movlw	0
  4754  004DC8  0101               	movlb	1	; () banked
  4755  004DCA  0101               	movlb	1	; () banked
  4756  004DCC  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  4757  004DCE  0E00               	movlw	0
  4758  004DD0  0101               	movlb	1	; () banked
  4759  004DD2  0101               	movlb	1	; () banked
  4760  004DD4  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  4761  004DD6  0E80               	movlw	128
  4762  004DD8  0101               	movlb	1	; () banked
  4763  004DDA  0101               	movlb	1	; () banked
  4764  004DDC  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  4765                           
  4766                           ; BSR set to: 1
  4767  004DDE  0E00               	movlw	0
  4768  004DE0  0101               	movlb	1	; () banked
  4769  004DE2  0101               	movlb	1	; () banked
  4770  004DE4  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  4771  004DE6  0E00               	movlw	0
  4772  004DE8  0101               	movlb	1	; () banked
  4773  004DEA  0101               	movlb	1	; () banked
  4774  004DEC  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  4775  004DEE  0E80               	movlw	128
  4776  004DF0  0101               	movlb	1	; () banked
  4777  004DF2  0101               	movlb	1	; () banked
  4778  004DF4  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  4779  004DF6  0101               	movlb	1	; () banked
  4780  004DF8  0101               	movlb	1	; () banked
  4781  004DFA  5103               	movf	___ftge@ff2& (0+255),w,b
  4782  004DFC  0101               	movlb	1	; () banked
  4783  004DFE  0101               	movlb	1	; () banked
  4784  004E00  5D00               	subwf	___ftge@ff1& (0+255),w,b
  4785  004E02  0101               	movlb	1	; () banked
  4786  004E04  0101               	movlb	1	; () banked
  4787  004E06  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  4788  004E08  0101               	movlb	1	; () banked
  4789  004E0A  0101               	movlb	1	; () banked
  4790  004E0C  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  4791  004E0E  0101               	movlb	1	; () banked
  4792  004E10  0101               	movlb	1	; () banked
  4793  004E12  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  4794  004E14  0101               	movlb	1	; () banked
  4795  004E16  0101               	movlb	1	; () banked
  4796  004E18  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  4797  004E1A  B0D8               	btfsc	status,0,c
  4798  004E1C  D002               	goto	l11007
  4799                           
  4800                           ; BSR set to: 1
  4801  004E1E  90D8               	bcf	status,0,c
  4802  004E20  D001               	goto	l768
  4803  004E22                     l11007:
  4804                           
  4805                           ; BSR set to: 1
  4806  004E22  80D8               	bsf	status,0,c
  4807  004E24                     l768:
  4808                           
  4809                           ; BSR set to: 1
  4810  004E24  0012               	return	
  4811  004E26                     __end_of___ftge:
  4812                           	opt stack 0
  4813                           tblptru	equ	0xFF8
  4814                           tblptrh	equ	0xFF7
  4815                           tblptrl	equ	0xFF6
  4816                           tablat	equ	0xFF5
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           postinc0	equ	0xFEE
  4820                           wreg	equ	0xFE8
  4821                           indf2	equ	0xFDF
  4822                           postinc2	equ	0xFDE
  4823                           postdec2	equ	0xFDD
  4824                           fsr2h	equ	0xFDA
  4825                           fsr2l	equ	0xFD9
  4826                           status	equ	0xFD8
  4827                           
  4828 ;; *************** function ___asftsub *****************
  4829 ;; Defined at:
  4830 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  f1p             2   76[BANK1 ] PTR float 
  4833 ;;		 -> sprintf@fval(3), 
  4834 ;;  f2              3   78[BANK1 ] float 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  3   76[BANK1 ] float 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4846 ;;      Params:         0       0       5       0       0       0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4849 ;;      Totals:         0       0       5       0       0       0       0       0       0
  4850 ;;Total ram usage:        5 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:   12
  4853 ;; This function calls:
  4854 ;;		___ftsub
  4855 ;; This function is called by:
  4856 ;;		_sprintf
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text8
  4861  005EA4                     __ptext8:
  4862                           	opt stack 0
  4863  005EA4                     ___asftsub:
  4864                           	opt stack 17
  4865                           
  4866                           ;	Return value of ___asftsub is never used
  4867                           
  4868                           ; BSR set to: 1
  4869                           ;incstack = 0
  4870                           ;incstack = 0
  4871  005EA4  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  4872  005EA8  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  4873  005EAC  0101               	movlb	1	; () banked
  4874  005EAE  CFDE F146          	movff	postinc2,?___ftsub
  4875  005EB2  0101               	movlb	1	; () banked
  4876  005EB4  CFDE F147          	movff	postinc2,?___ftsub+1
  4877  005EB8  0101               	movlb	1	; () banked
  4878  005EBA  CFDD F148          	movff	postdec2,?___ftsub+2
  4879  005EBE  C14E  F149         	movff	___asftsub@f2,?___ftsub+3
  4880  005EC2  C14F  F14A         	movff	___asftsub@f2+1,?___ftsub+4
  4881  005EC6  C150  F14B         	movff	___asftsub@f2+2,?___ftsub+5
  4882  005ECA  EC73  F02F         	call	___ftsub	;wreg free
  4883  005ECE  C14C  FFD9         	movff	___asftsub@f1p,fsr2l
  4884  005ED2  C14D  FFDA         	movff	___asftsub@f1p+1,fsr2h
  4885  005ED6  C146  FFDE         	movff	?___ftsub,postinc2
  4886  005EDA  C147  FFDE         	movff	?___ftsub+1,postinc2
  4887  005EDE  C148  FFDD         	movff	?___ftsub+2,postdec2
  4888  005EE2  52DD               	movf	postdec2,f,c
  4889  005EE4  0012               	return	
  4890  005EE6                     __end_of___asftsub:
  4891                           	opt stack 0
  4892                           tblptru	equ	0xFF8
  4893                           tblptrh	equ	0xFF7
  4894                           tblptrl	equ	0xFF6
  4895                           tablat	equ	0xFF5
  4896                           prodh	equ	0xFF4
  4897                           prodl	equ	0xFF3
  4898                           postinc0	equ	0xFEE
  4899                           wreg	equ	0xFE8
  4900                           indf2	equ	0xFDF
  4901                           postinc2	equ	0xFDE
  4902                           postdec2	equ	0xFDD
  4903                           fsr2h	equ	0xFDA
  4904                           fsr2l	equ	0xFD9
  4905                           status	equ	0xFD8
  4906                           
  4907 ;; *************** function ___ftsub *****************
  4908 ;; Defined at:
  4909 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  f1              3   70[BANK1 ] float 
  4912 ;;  f2              3   73[BANK1 ] float 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  3   70[BANK1 ] float 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4924 ;;      Params:         0       0       6       0       0       0       0       0       0
  4925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4927 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4928 ;;Total ram usage:        6 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:   11
  4931 ;; This function calls:
  4932 ;;		___ftadd
  4933 ;; This function is called by:
  4934 ;;		___asftsub
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text9
  4939  005EE6                     __ptext9:
  4940                           	opt stack 0
  4941  005EE6                     ___ftsub:
  4942                           	opt stack 17
  4943                           
  4944                           ;incstack = 0
  4945                           ;incstack = 0
  4946  005EE6  0E00               	movlw	0
  4947  005EE8  0101               	movlb	1	; () banked
  4948  005EEA  0101               	movlb	1	; () banked
  4949  005EEC  1B49               	xorwf	___ftsub@f2& (0+255),f,b
  4950  005EEE  0E00               	movlw	0
  4951  005EF0  0101               	movlb	1	; () banked
  4952  005EF2  0101               	movlb	1	; () banked
  4953  005EF4  1B4A               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  4954  005EF6  0E80               	movlw	128
  4955  005EF8  0101               	movlb	1	; () banked
  4956  005EFA  0101               	movlb	1	; () banked
  4957  005EFC  1B4B               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  4958                           
  4959                           ; BSR set to: 1
  4960  005EFE  C146  F138         	movff	___ftsub@f1,?___ftadd
  4961  005F02  C147  F139         	movff	___ftsub@f1+1,?___ftadd+1
  4962  005F06  C148  F13A         	movff	___ftsub@f1+2,?___ftadd+2
  4963  005F0A  C149  F13B         	movff	___ftsub@f2,?___ftadd+3
  4964  005F0E  C14A  F13C         	movff	___ftsub@f2+1,?___ftadd+4
  4965  005F12  C14B  F13D         	movff	___ftsub@f2+2,?___ftadd+5
  4966  005F16  ECF3  F018         	call	___ftadd	;wreg free
  4967  005F1A  C13A  F148         	movff	?___ftadd+2,?___ftsub+2
  4968  005F1E  C139  F147         	movff	?___ftadd+1,?___ftsub+1
  4969  005F22  C138  F146         	movff	?___ftadd,?___ftsub
  4970  005F26  0012               	return	
  4971  005F28                     __end_of___ftsub:
  4972                           	opt stack 0
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           prodh	equ	0xFF4
  4978                           prodl	equ	0xFF3
  4979                           postinc0	equ	0xFEE
  4980                           wreg	equ	0xFE8
  4981                           indf2	equ	0xFDF
  4982                           postinc2	equ	0xFDE
  4983                           postdec2	equ	0xFDD
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988 ;; *************** function ___asftmul *****************
  4989 ;; Defined at:
  4990 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  f1p             2   39[BANK1 ] PTR float 
  4993 ;;		 -> sprintf@integ(3), 
  4994 ;;  f2              3   41[BANK1 ] float 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  3   39[BANK1 ] float 
  4999 ;; Registers used:
  5000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5006 ;;      Params:         0       0       5       0       0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5009 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5010 ;;Total ram usage:        5 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:   11
  5013 ;; This function calls:
  5014 ;;		___ftmul
  5015 ;; This function is called by:
  5016 ;;		_sprintf
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text10
  5021  005F28                     __ptext10:
  5022                           	opt stack 0
  5023  005F28                     ___asftmul:
  5024                           	opt stack 18
  5025                           
  5026                           ;	Return value of ___asftmul is never used
  5027                           
  5028                           ;incstack = 0
  5029                           ;incstack = 0
  5030  005F28  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  5031  005F2C  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5032  005F30  0101               	movlb	1	; () banked
  5033  005F32  CFDE F116          	movff	postinc2,?___ftmul
  5034  005F36  0101               	movlb	1	; () banked
  5035  005F38  CFDE F117          	movff	postinc2,?___ftmul+1
  5036  005F3C  0101               	movlb	1	; () banked
  5037  005F3E  CFDD F118          	movff	postdec2,?___ftmul+2
  5038  005F42  C129  F119         	movff	___asftmul@f2,?___ftmul+3
  5039  005F46  C12A  F11A         	movff	___asftmul@f2+1,?___ftmul+4
  5040  005F4A  C12B  F11B         	movff	___asftmul@f2+2,?___ftmul+5
  5041  005F4E  ECE1  F01C         	call	___ftmul	;wreg free
  5042  005F52  C127  FFD9         	movff	___asftmul@f1p,fsr2l
  5043  005F56  C128  FFDA         	movff	___asftmul@f1p+1,fsr2h
  5044  005F5A  C116  FFDE         	movff	?___ftmul,postinc2
  5045  005F5E  C117  FFDE         	movff	?___ftmul+1,postinc2
  5046  005F62  C118  FFDD         	movff	?___ftmul+2,postdec2
  5047  005F66  52DD               	movf	postdec2,f,c
  5048  005F68  0012               	return	
  5049  005F6A                     __end_of___asftmul:
  5050                           	opt stack 0
  5051                           tblptru	equ	0xFF8
  5052                           tblptrh	equ	0xFF7
  5053                           tblptrl	equ	0xFF6
  5054                           tablat	equ	0xFF5
  5055                           prodh	equ	0xFF4
  5056                           prodl	equ	0xFF3
  5057                           postinc0	equ	0xFEE
  5058                           wreg	equ	0xFE8
  5059                           indf2	equ	0xFDF
  5060                           postinc2	equ	0xFDE
  5061                           postdec2	equ	0xFDD
  5062                           fsr2h	equ	0xFDA
  5063                           fsr2l	equ	0xFD9
  5064                           status	equ	0xFD8
  5065                           
  5066 ;; *************** function ___asftadd *****************
  5067 ;; Defined at:
  5068 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  f1p             2   70[BANK1 ] PTR float 
  5071 ;;		 -> sprintf@fval(3), 
  5072 ;;  f2              3   72[BANK1 ] float 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;		None
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  3   70[BANK1 ] float 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5084 ;;      Params:         0       0       5       0       0       0       0       0       0
  5085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5087 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5088 ;;Total ram usage:        5 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:   11
  5091 ;; This function calls:
  5092 ;;		___ftadd
  5093 ;; This function is called by:
  5094 ;;		_sprintf
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text11
  5099  005F6A                     __ptext11:
  5100                           	opt stack 0
  5101  005F6A                     ___asftadd:
  5102                           	opt stack 18
  5103                           
  5104                           ;	Return value of ___asftadd is never used
  5105                           
  5106                           ;incstack = 0
  5107                           ;incstack = 0
  5108  005F6A  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  5109  005F6E  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5110  005F72  0101               	movlb	1	; () banked
  5111  005F74  CFDE F138          	movff	postinc2,?___ftadd
  5112  005F78  0101               	movlb	1	; () banked
  5113  005F7A  CFDE F139          	movff	postinc2,?___ftadd+1
  5114  005F7E  0101               	movlb	1	; () banked
  5115  005F80  CFDD F13A          	movff	postdec2,?___ftadd+2
  5116  005F84  C148  F13B         	movff	___asftadd@f2,?___ftadd+3
  5117  005F88  C149  F13C         	movff	___asftadd@f2+1,?___ftadd+4
  5118  005F8C  C14A  F13D         	movff	___asftadd@f2+2,?___ftadd+5
  5119  005F90  ECF3  F018         	call	___ftadd	;wreg free
  5120  005F94  C146  FFD9         	movff	___asftadd@f1p,fsr2l
  5121  005F98  C147  FFDA         	movff	___asftadd@f1p+1,fsr2h
  5122  005F9C  C138  FFDE         	movff	?___ftadd,postinc2
  5123  005FA0  C139  FFDE         	movff	?___ftadd+1,postinc2
  5124  005FA4  C13A  FFDD         	movff	?___ftadd+2,postdec2
  5125  005FA8  52DD               	movf	postdec2,f,c
  5126  005FAA  0012               	return	
  5127  005FAC                     __end_of___asftadd:
  5128                           	opt stack 0
  5129                           tblptru	equ	0xFF8
  5130                           tblptrh	equ	0xFF7
  5131                           tblptrl	equ	0xFF6
  5132                           tablat	equ	0xFF5
  5133                           prodh	equ	0xFF4
  5134                           prodl	equ	0xFF3
  5135                           postinc0	equ	0xFEE
  5136                           wreg	equ	0xFE8
  5137                           indf2	equ	0xFDF
  5138                           postinc2	equ	0xFDE
  5139                           postdec2	equ	0xFDD
  5140                           fsr2h	equ	0xFDA
  5141                           fsr2l	equ	0xFD9
  5142                           status	equ	0xFD8
  5143                           
  5144 ;; *************** function __div_to_l_ *****************
  5145 ;; Defined at:
  5146 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  f1              3    0[BANK1 ] float 
  5149 ;;  f2              3    3[BANK1 ] float 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  quot            4    7[BANK1 ] unsigned long 
  5152 ;;  exp1            1   12[BANK1 ] unsigned char 
  5153 ;;  cntr            1   11[BANK1 ] unsigned char 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  4    0[BANK1 ] unsigned long 
  5156 ;; Registers used:
  5157 ;;		wreg, status,2, status,0
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5163 ;;      Params:         0       0       6       0       0       0       0       0       0
  5164 ;;      Locals:         0       0       6       0       0       0       0       0       0
  5165 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5166 ;;      Totals:         0       0      13       0       0       0       0       0       0
  5167 ;;Total ram usage:       13 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; Hardware stack levels required when called:    9
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_sprintf
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text12
  5178  003BB0                     __ptext12:
  5179                           	opt stack 0
  5180  003BB0                     __div_to_l_:
  5181                           	opt stack 20
  5182                           
  5183                           ;incstack = 0
  5184                           ;incstack = 0
  5185  003BB0  0101               	movlb	1	; () banked
  5186  003BB2  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  5187  003BB4  0101               	movlb	1	; () banked
  5188  003BB6  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  5189  003BB8  0101               	movlb	1	; () banked
  5190  003BBA  0101               	movlb	1	; () banked
  5191  003BBC  6F0C               	movwf	__div_to_l_@exp1& (0+255),b
  5192  003BBE  0101               	movlb	1	; () banked
  5193  003BC0  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  5194  003BC2  D001               	goto	l10621
  5195  003BC4  D0B7               	goto	u9690
  5196  003BC6                     l10621:
  5197                           
  5198                           ; BSR set to: 1
  5199  003BC6  0101               	movlb	1	; () banked
  5200  003BC8  3505               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  5201  003BCA  0101               	movlb	1	; () banked
  5202  003BCC  3506               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  5203  003BCE  0101               	movlb	1	; () banked
  5204  003BD0  0101               	movlb	1	; () banked
  5205  003BD2  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  5206  003BD4  0101               	movlb	1	; () banked
  5207  003BD6  670B               	tstfsz	__div_to_l_@cntr& (0+255),b
  5208  003BD8  D001               	goto	l10627
  5209  003BDA  D0AC               	goto	u9690
  5210  003BDC                     l10627:
  5211                           
  5212                           ; BSR set to: 1
  5213  003BDC  0101               	movlb	1	; () banked
  5214  003BDE  0101               	movlb	1	; () banked
  5215  003BE0  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  5216                           
  5217                           ; BSR set to: 1
  5218  003BE2  0EFF               	movlw	255
  5219  003BE4  0101               	movlb	1	; () banked
  5220  003BE6  0101               	movlb	1	; () banked
  5221  003BE8  1700               	andwf	__div_to_l_@f1& (0+255),f,b
  5222  003BEA  0EFF               	movlw	255
  5223  003BEC  0101               	movlb	1	; () banked
  5224  003BEE  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  5225  003BF0  0EFF               	movlw	255
  5226  003BF2  0101               	movlb	1	; () banked
  5227  003BF4  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  5228  003BF6  0E00               	movlw	0
  5229  003BF8  0101               	movlb	1	; () banked
  5230  003BFA  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  5231                           
  5232                           ; BSR set to: 1
  5233  003BFC  0101               	movlb	1	; () banked
  5234  003BFE  0101               	movlb	1	; () banked
  5235  003C00  8F05               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  5236  003C02  0EFF               	movlw	255
  5237  003C04  0101               	movlb	1	; () banked
  5238  003C06  0101               	movlb	1	; () banked
  5239  003C08  1703               	andwf	__div_to_l_@f2& (0+255),f,b
  5240  003C0A  0EFF               	movlw	255
  5241  003C0C  0101               	movlb	1	; () banked
  5242  003C0E  1704               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  5243  003C10  0EFF               	movlw	255
  5244  003C12  0101               	movlb	1	; () banked
  5245  003C14  1705               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  5246  003C16  0E00               	movlw	0
  5247  003C18  0101               	movlb	1	; () banked
  5248  003C1A  1706               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  5249                           
  5250                           ; BSR set to: 1
  5251  003C1C  0E00               	movlw	0
  5252  003C1E  0101               	movlb	1	; () banked
  5253  003C20  0101               	movlb	1	; () banked
  5254  003C22  6F07               	movwf	__div_to_l_@quot& (0+255),b
  5255  003C24  0E00               	movlw	0
  5256  003C26  0101               	movlb	1	; () banked
  5257  003C28  6F08               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5258  003C2A  0E00               	movlw	0
  5259  003C2C  0101               	movlb	1	; () banked
  5260  003C2E  6F09               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5261  003C30  0E00               	movlw	0
  5262  003C32  0101               	movlb	1	; () banked
  5263  003C34  6F0A               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5264                           
  5265                           ; BSR set to: 1
  5266  003C36  0E7F               	movlw	127
  5267  003C38  0101               	movlb	1	; () banked
  5268  003C3A  0101               	movlb	1	; () banked
  5269  003C3C  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  5270                           
  5271                           ; BSR set to: 1
  5272  003C3E  0101               	movlb	1	; () banked
  5273  003C40  0101               	movlb	1	; () banked
  5274  003C42  510B               	movf	__div_to_l_@cntr& (0+255),w,b
  5275  003C44  0FA0               	addlw	160
  5276  003C46  0101               	movlb	1	; () banked
  5277  003C48  0101               	movlb	1	; () banked
  5278  003C4A  5F0C               	subwf	__div_to_l_@exp1& (0+255),f,b
  5279                           
  5280                           ; BSR set to: 1
  5281  003C4C  0101               	movlb	1	; () banked
  5282  003C4E  6F06               	movwf	??__div_to_l_& (0+255),b
  5283  003C50  0E20               	movlw	32
  5284  003C52  0101               	movlb	1	; () banked
  5285  003C54  0101               	movlb	1	; () banked
  5286  003C56  6F0B               	movwf	__div_to_l_@cntr& (0+255),b
  5287  003C58  0101               	movlb	1	; () banked
  5288  003C5A  5106               	movf	??__div_to_l_& (0+255),w,b
  5289  003C5C                     l634:
  5290                           
  5291                           ; BSR set to: 1
  5292  003C5C  0101               	movlb	1	; () banked
  5293  003C5E  90D8               	bcf	status,0,c
  5294  003C60  0101               	movlb	1	; () banked
  5295  003C62  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  5296  003C64  0101               	movlb	1	; () banked
  5297  003C66  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5298  003C68  0101               	movlb	1	; () banked
  5299  003C6A  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5300  003C6C  0101               	movlb	1	; () banked
  5301  003C6E  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5302                           
  5303                           ; BSR set to: 1
  5304  003C70  0101               	movlb	1	; () banked
  5305  003C72  0101               	movlb	1	; () banked
  5306  003C74  5103               	movf	__div_to_l_@f2& (0+255),w,b
  5307  003C76  0101               	movlb	1	; () banked
  5308  003C78  0101               	movlb	1	; () banked
  5309  003C7A  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
  5310  003C7C  0101               	movlb	1	; () banked
  5311  003C7E  0101               	movlb	1	; () banked
  5312  003C80  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5313  003C82  0101               	movlb	1	; () banked
  5314  003C84  0101               	movlb	1	; () banked
  5315  003C86  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  5316  003C88  0101               	movlb	1	; () banked
  5317  003C8A  0101               	movlb	1	; () banked
  5318  003C8C  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5319  003C8E  0101               	movlb	1	; () banked
  5320  003C90  0101               	movlb	1	; () banked
  5321  003C92  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  5322  003C94  0101               	movlb	1	; () banked
  5323  003C96  0101               	movlb	1	; () banked
  5324  003C98  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5325  003C9A  0101               	movlb	1	; () banked
  5326  003C9C  0101               	movlb	1	; () banked
  5327  003C9E  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  5328  003CA0  A0D8               	btfss	status,0,c
  5329  003CA2  D01B               	goto	l10647
  5330                           
  5331                           ; BSR set to: 1
  5332  003CA4  0101               	movlb	1	; () banked
  5333  003CA6  0101               	movlb	1	; () banked
  5334  003CA8  5103               	movf	__div_to_l_@f2& (0+255),w,b
  5335  003CAA  0101               	movlb	1	; () banked
  5336  003CAC  0101               	movlb	1	; () banked
  5337  003CAE  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
  5338  003CB0  0101               	movlb	1	; () banked
  5339  003CB2  0101               	movlb	1	; () banked
  5340  003CB4  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5341  003CB6  0101               	movlb	1	; () banked
  5342  003CB8  0101               	movlb	1	; () banked
  5343  003CBA  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  5344  003CBC  0101               	movlb	1	; () banked
  5345  003CBE  0101               	movlb	1	; () banked
  5346  003CC0  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5347  003CC2  0101               	movlb	1	; () banked
  5348  003CC4  0101               	movlb	1	; () banked
  5349  003CC6  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  5350  003CC8  0101               	movlb	1	; () banked
  5351  003CCA  0101               	movlb	1	; () banked
  5352  003CCC  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5353  003CCE  0101               	movlb	1	; () banked
  5354  003CD0  0101               	movlb	1	; () banked
  5355  003CD2  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  5356                           
  5357                           ; BSR set to: 1
  5358  003CD4  0101               	movlb	1	; () banked
  5359  003CD6  0101               	movlb	1	; () banked
  5360  003CD8  8107               	bsf	__div_to_l_@quot& (0+255),0,b
  5361  003CDA                     l10647:
  5362                           
  5363                           ; BSR set to: 1
  5364  003CDA  0101               	movlb	1	; () banked
  5365  003CDC  90D8               	bcf	status,0,c
  5366  003CDE  0101               	movlb	1	; () banked
  5367  003CE0  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
  5368  003CE2  0101               	movlb	1	; () banked
  5369  003CE4  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  5370  003CE6  0101               	movlb	1	; () banked
  5371  003CE8  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  5372  003CEA  0101               	movlb	1	; () banked
  5373  003CEC  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  5374                           
  5375                           ; BSR set to: 1
  5376  003CEE  0101               	movlb	1	; () banked
  5377  003CF0  0101               	movlb	1	; () banked
  5378  003CF2  2F0B               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5379  003CF4  D7B3               	goto	l634
  5380                           
  5381                           ; BSR set to: 1
  5382  003CF6  0101               	movlb	1	; () banked
  5383  003CF8  0101               	movlb	1	; () banked
  5384  003CFA  AF0C               	btfss	__div_to_l_@exp1& (0+255),7,b
  5385  003CFC  D016               	goto	l10661
  5386                           
  5387                           ; BSR set to: 1
  5388  003CFE  0101               	movlb	1	; () banked
  5389  003D00  0101               	movlb	1	; () banked
  5390  003D02  510C               	movf	__div_to_l_@exp1& (0+255),w,b
  5391  003D04  0A80               	xorlw	128
  5392  003D06  0F9F               	addlw	159
  5393  003D08  A0D8               	btfss	status,0,c
  5394  003D0A  D014               	goto	u9690
  5395  003D0C                     l10657:
  5396                           
  5397                           ; BSR set to: 1
  5398  003D0C  0101               	movlb	1	; () banked
  5399  003D0E  90D8               	bcf	status,0,c
  5400  003D10  0101               	movlb	1	; () banked
  5401  003D12  330A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5402  003D14  0101               	movlb	1	; () banked
  5403  003D16  3309               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5404  003D18  0101               	movlb	1	; () banked
  5405  003D1A  3308               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5406  003D1C  0101               	movlb	1	; () banked
  5407  003D1E  3307               	rrcf	__div_to_l_@quot& (0+255),f,b
  5408                           
  5409                           ; BSR set to: 1
  5410  003D20  0101               	movlb	1	; () banked
  5411  003D22  0101               	movlb	1	; () banked
  5412  003D24  3F0C               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5413  003D26  D7F2               	goto	l10657
  5414  003D28  D024               	goto	l641
  5415  003D2A                     l10661:
  5416                           
  5417                           ; BSR set to: 1
  5418  003D2A  0E1F               	movlw	31
  5419  003D2C  0101               	movlb	1	; () banked
  5420  003D2E  0101               	movlb	1	; () banked
  5421  003D30  650C               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5422  003D32  D01B               	goto	l10669
  5423  003D34                     u9690:
  5424                           
  5425                           ; BSR set to: 1
  5426  003D34  0E00               	movlw	0
  5427  003D36  0101               	movlb	1	; () banked
  5428  003D38  0101               	movlb	1	; () banked
  5429  003D3A  6F00               	movwf	?__div_to_l_& (0+255),b
  5430  003D3C  0E00               	movlw	0
  5431  003D3E  0101               	movlb	1	; () banked
  5432  003D40  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
  5433  003D42  0E00               	movlw	0
  5434  003D44  0101               	movlb	1	; () banked
  5435  003D46  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
  5436  003D48  0E00               	movlw	0
  5437  003D4A  0101               	movlb	1	; () banked
  5438  003D4C  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
  5439  003D4E  D019               	goto	l632
  5440  003D50                     l10667:
  5441                           
  5442                           ; BSR set to: 1
  5443  003D50  0101               	movlb	1	; () banked
  5444  003D52  90D8               	bcf	status,0,c
  5445  003D54  0101               	movlb	1	; () banked
  5446  003D56  3707               	rlcf	__div_to_l_@quot& (0+255),f,b
  5447  003D58  0101               	movlb	1	; () banked
  5448  003D5A  3708               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5449  003D5C  0101               	movlb	1	; () banked
  5450  003D5E  3709               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5451  003D60  0101               	movlb	1	; () banked
  5452  003D62  370A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5453  003D64  0101               	movlb	1	; () banked
  5454  003D66  0101               	movlb	1	; () banked
  5455  003D68  070C               	decf	__div_to_l_@exp1& (0+255),f,b
  5456  003D6A                     l10669:
  5457                           
  5458                           ; BSR set to: 1
  5459  003D6A  0101               	movlb	1	; () banked
  5460  003D6C  0101               	movlb	1	; () banked
  5461  003D6E  670C               	tstfsz	__div_to_l_@exp1& (0+255),b
  5462  003D70  D7EF               	goto	l10667
  5463  003D72                     l641:
  5464                           
  5465                           ; BSR set to: 1
  5466  003D72  C107  F100         	movff	__div_to_l_@quot,?__div_to_l_
  5467  003D76  C108  F101         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5468  003D7A  C109  F102         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5469  003D7E  C10A  F103         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5470  003D82                     l632:
  5471                           
  5472                           ; BSR set to: 1
  5473  003D82  0012               	return	
  5474  003D84                     __end_of__div_to_l_:
  5475                           	opt stack 0
  5476                           tblptru	equ	0xFF8
  5477                           tblptrh	equ	0xFF7
  5478                           tblptrl	equ	0xFF6
  5479                           tablat	equ	0xFF5
  5480                           prodh	equ	0xFF4
  5481                           prodl	equ	0xFF3
  5482                           postinc0	equ	0xFEE
  5483                           wreg	equ	0xFE8
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function __tdiv_to_l_ *****************
  5492 ;; Defined at:
  5493 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  f1              3    0[BANK1 ] float 
  5496 ;;  f2              3    3[BANK1 ] float 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  quot            4   11[BANK1 ] unsigned long 
  5499 ;;  exp1            1   16[BANK1 ] unsigned char 
  5500 ;;  cntr            1   15[BANK1 ] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  4    0[BANK1 ] unsigned long 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5510 ;;      Params:         0       0       6       0       0       0       0       0       0
  5511 ;;      Locals:         0       0       6       0       0       0       0       0       0
  5512 ;;      Temps:          0       0       5       0       0       0       0       0       0
  5513 ;;      Totals:         0       0      17       0       0       0       0       0       0
  5514 ;;Total ram usage:       17 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    9
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_sprintf
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text13
  5525  0037B2                     __ptext13:
  5526                           	opt stack 0
  5527  0037B2                     __tdiv_to_l_:
  5528                           	opt stack 20
  5529                           
  5530                           ; BSR set to: 1
  5531                           ;incstack = 0
  5532                           ;incstack = 0
  5533  0037B2  0E0F               	movlw	15
  5534  0037B4  0101               	movlb	1	; () banked
  5535  0037B6  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5536  0037B8  0101               	movlb	1	; () banked
  5537  0037BA  C100  F107         	movff	__tdiv_to_l_@f1,??__tdiv_to_l_+1
  5538  0037BE  0101               	movlb	1	; () banked
  5539  0037C0  C101  F108         	movff	__tdiv_to_l_@f1+1,??__tdiv_to_l_+2
  5540  0037C4  0101               	movlb	1	; () banked
  5541  0037C6  C102  F109         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_+3
  5542  0037CA  0101               	movlb	1	; () banked
  5543  0037CC  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  5544  0037CE  0101               	movlb	1	; () banked
  5545  0037D0  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  5546  0037D2  D005               	goto	u9550
  5547  0037D4                     u9555:
  5548  0037D4  0101               	movlb	1	; () banked
  5549  0037D6  90D8               	bcf	status,0,c
  5550  0037D8  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  5551  0037DA  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  5552  0037DC  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  5553  0037DE                     u9550:
  5554  0037DE  0101               	movlb	1	; () banked
  5555  0037E0  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  5556  0037E2  D7F8               	goto	u9555
  5557  0037E4  0101               	movlb	1	; () banked
  5558  0037E6  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  5559  0037E8  0101               	movlb	1	; () banked
  5560  0037EA  0101               	movlb	1	; () banked
  5561  0037EC  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5562  0037EE  0101               	movlb	1	; () banked
  5563  0037F0  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5564  0037F2  D001               	goto	l10565
  5565  0037F4  D0BE               	goto	u9620
  5566  0037F6                     l10565:
  5567                           
  5568                           ; BSR set to: 1
  5569  0037F6  0E0F               	movlw	15
  5570  0037F8  0101               	movlb	1	; () banked
  5571  0037FA  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5572  0037FC  0101               	movlb	1	; () banked
  5573  0037FE  C103  F107         	movff	__tdiv_to_l_@f2,??__tdiv_to_l_+1
  5574  003802  0101               	movlb	1	; () banked
  5575  003804  C104  F108         	movff	__tdiv_to_l_@f2+1,??__tdiv_to_l_+2
  5576  003808  0101               	movlb	1	; () banked
  5577  00380A  C105  F109         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_+3
  5578  00380E  0101               	movlb	1	; () banked
  5579  003810  2906               	incf	??__tdiv_to_l_& (0+255),w,b
  5580  003812  0101               	movlb	1	; () banked
  5581  003814  6F0A               	movwf	(??__tdiv_to_l_+4)& (0+255),b
  5582  003816  D005               	goto	u9570
  5583  003818                     u9575:
  5584  003818  0101               	movlb	1	; () banked
  5585  00381A  90D8               	bcf	status,0,c
  5586  00381C  3309               	rrcf	(??__tdiv_to_l_+3)& (0+255),f,b
  5587  00381E  3308               	rrcf	(??__tdiv_to_l_+2)& (0+255),f,b
  5588  003820  3307               	rrcf	(??__tdiv_to_l_+1)& (0+255),f,b
  5589  003822                     u9570:
  5590  003822  0101               	movlb	1	; () banked
  5591  003824  2F0A               	decfsz	(??__tdiv_to_l_+4)& (0+255),f,b
  5592  003826  D7F8               	goto	u9575
  5593  003828  0101               	movlb	1	; () banked
  5594  00382A  5107               	movf	(??__tdiv_to_l_+1)& (0+255),w,b
  5595  00382C  0101               	movlb	1	; () banked
  5596  00382E  0101               	movlb	1	; () banked
  5597  003830  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5598  003832  0101               	movlb	1	; () banked
  5599  003834  670F               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  5600  003836  D001               	goto	l10571
  5601  003838  D09C               	goto	u9620
  5602  00383A                     l10571:
  5603                           
  5604                           ; BSR set to: 1
  5605  00383A  0101               	movlb	1	; () banked
  5606  00383C  0101               	movlb	1	; () banked
  5607  00383E  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  5608                           
  5609                           ; BSR set to: 1
  5610  003840  0EFF               	movlw	255
  5611  003842  0101               	movlb	1	; () banked
  5612  003844  0101               	movlb	1	; () banked
  5613  003846  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  5614  003848  0EFF               	movlw	255
  5615  00384A  0101               	movlb	1	; () banked
  5616  00384C  0101               	movlb	1	; () banked
  5617  00384E  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5618  003850  0E00               	movlw	0
  5619  003852  0101               	movlb	1	; () banked
  5620  003854  0101               	movlb	1	; () banked
  5621  003856  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5622  003858  0101               	movlb	1	; () banked
  5623  00385A  0101               	movlb	1	; () banked
  5624  00385C  8F04               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  5625                           
  5626                           ; BSR set to: 1
  5627  00385E  0EFF               	movlw	255
  5628  003860  0101               	movlb	1	; () banked
  5629  003862  0101               	movlb	1	; () banked
  5630  003864  1703               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  5631  003866  0EFF               	movlw	255
  5632  003868  0101               	movlb	1	; () banked
  5633  00386A  0101               	movlb	1	; () banked
  5634  00386C  1704               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  5635  00386E  0E00               	movlw	0
  5636  003870  0101               	movlb	1	; () banked
  5637  003872  0101               	movlb	1	; () banked
  5638  003874  1705               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  5639                           
  5640                           ; BSR set to: 1
  5641  003876  0E00               	movlw	0
  5642  003878  0101               	movlb	1	; () banked
  5643  00387A  0101               	movlb	1	; () banked
  5644  00387C  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
  5645  00387E  0E00               	movlw	0
  5646  003880  0101               	movlb	1	; () banked
  5647  003882  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5648  003884  0E00               	movlw	0
  5649  003886  0101               	movlb	1	; () banked
  5650  003888  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5651  00388A  0E00               	movlw	0
  5652  00388C  0101               	movlb	1	; () banked
  5653  00388E  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5654                           
  5655                           ; BSR set to: 1
  5656  003890  0E7F               	movlw	127
  5657  003892  0101               	movlb	1	; () banked
  5658  003894  0101               	movlb	1	; () banked
  5659  003896  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5660                           
  5661                           ; BSR set to: 1
  5662  003898  0101               	movlb	1	; () banked
  5663  00389A  0101               	movlb	1	; () banked
  5664  00389C  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5665  00389E  0F98               	addlw	152
  5666  0038A0  0101               	movlb	1	; () banked
  5667  0038A2  0101               	movlb	1	; () banked
  5668  0038A4  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5669                           
  5670                           ; BSR set to: 1
  5671  0038A6  0101               	movlb	1	; () banked
  5672  0038A8  6F06               	movwf	??__tdiv_to_l_& (0+255),b
  5673  0038AA  0E18               	movlw	24
  5674  0038AC  0101               	movlb	1	; () banked
  5675  0038AE  0101               	movlb	1	; () banked
  5676  0038B0  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5677  0038B2  0101               	movlb	1	; () banked
  5678  0038B4  5106               	movf	??__tdiv_to_l_& (0+255),w,b
  5679  0038B6                     l10585:
  5680                           
  5681                           ; BSR set to: 1
  5682  0038B6  0101               	movlb	1	; () banked
  5683  0038B8  90D8               	bcf	status,0,c
  5684  0038BA  0101               	movlb	1	; () banked
  5685  0038BC  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5686  0038BE  0101               	movlb	1	; () banked
  5687  0038C0  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5688  0038C2  0101               	movlb	1	; () banked
  5689  0038C4  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5690  0038C6  0101               	movlb	1	; () banked
  5691  0038C8  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5692                           
  5693                           ; BSR set to: 1
  5694  0038CA  0101               	movlb	1	; () banked
  5695  0038CC  0101               	movlb	1	; () banked
  5696  0038CE  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5697  0038D0  0101               	movlb	1	; () banked
  5698  0038D2  0101               	movlb	1	; () banked
  5699  0038D4  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  5700  0038D6  0101               	movlb	1	; () banked
  5701  0038D8  0101               	movlb	1	; () banked
  5702  0038DA  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5703  0038DC  0101               	movlb	1	; () banked
  5704  0038DE  0101               	movlb	1	; () banked
  5705  0038E0  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5706  0038E2  0101               	movlb	1	; () banked
  5707  0038E4  0101               	movlb	1	; () banked
  5708  0038E6  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5709  0038E8  0101               	movlb	1	; () banked
  5710  0038EA  0101               	movlb	1	; () banked
  5711  0038EC  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  5712  0038EE  A0D8               	btfss	status,0,c
  5713  0038F0  D015               	goto	l753
  5714                           
  5715                           ; BSR set to: 1
  5716  0038F2  0101               	movlb	1	; () banked
  5717  0038F4  0101               	movlb	1	; () banked
  5718  0038F6  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5719  0038F8  0101               	movlb	1	; () banked
  5720  0038FA  0101               	movlb	1	; () banked
  5721  0038FC  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  5722  0038FE  0101               	movlb	1	; () banked
  5723  003900  0101               	movlb	1	; () banked
  5724  003902  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5725  003904  0101               	movlb	1	; () banked
  5726  003906  0101               	movlb	1	; () banked
  5727  003908  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5728  00390A  0101               	movlb	1	; () banked
  5729  00390C  0101               	movlb	1	; () banked
  5730  00390E  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5731  003910  0101               	movlb	1	; () banked
  5732  003912  0101               	movlb	1	; () banked
  5733  003914  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5734                           
  5735                           ; BSR set to: 1
  5736  003916  0101               	movlb	1	; () banked
  5737  003918  0101               	movlb	1	; () banked
  5738  00391A  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5739  00391C                     l753:
  5740                           
  5741                           ; BSR set to: 1
  5742  00391C  0101               	movlb	1	; () banked
  5743  00391E  90D8               	bcf	status,0,c
  5744  003920  0101               	movlb	1	; () banked
  5745  003922  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  5746  003924  0101               	movlb	1	; () banked
  5747  003926  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5748  003928  0101               	movlb	1	; () banked
  5749  00392A  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5750                           
  5751                           ; BSR set to: 1
  5752  00392C  0101               	movlb	1	; () banked
  5753  00392E  0101               	movlb	1	; () banked
  5754  003930  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5755  003932  D7C1               	goto	l10585
  5756                           
  5757                           ; BSR set to: 1
  5758  003934  0101               	movlb	1	; () banked
  5759  003936  0101               	movlb	1	; () banked
  5760  003938  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5761  00393A  D016               	goto	l10605
  5762                           
  5763                           ; BSR set to: 1
  5764  00393C  0101               	movlb	1	; () banked
  5765  00393E  0101               	movlb	1	; () banked
  5766  003940  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5767  003942  0A80               	xorlw	128
  5768  003944  0F97               	addlw	151
  5769  003946  A0D8               	btfss	status,0,c
  5770  003948  D014               	goto	u9620
  5771  00394A                     l10601:
  5772                           
  5773                           ; BSR set to: 1
  5774  00394A  0101               	movlb	1	; () banked
  5775  00394C  90D8               	bcf	status,0,c
  5776  00394E  0101               	movlb	1	; () banked
  5777  003950  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5778  003952  0101               	movlb	1	; () banked
  5779  003954  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5780  003956  0101               	movlb	1	; () banked
  5781  003958  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5782  00395A  0101               	movlb	1	; () banked
  5783  00395C  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5784                           
  5785                           ; BSR set to: 1
  5786  00395E  0101               	movlb	1	; () banked
  5787  003960  0101               	movlb	1	; () banked
  5788  003962  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5789  003964  D7F2               	goto	l10601
  5790  003966  D024               	goto	l759
  5791  003968                     l10605:
  5792                           
  5793                           ; BSR set to: 1
  5794  003968  0E17               	movlw	23
  5795  00396A  0101               	movlb	1	; () banked
  5796  00396C  0101               	movlb	1	; () banked
  5797  00396E  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5798  003970  D01B               	goto	l10613
  5799  003972                     u9620:
  5800                           
  5801                           ; BSR set to: 1
  5802  003972  0E00               	movlw	0
  5803  003974  0101               	movlb	1	; () banked
  5804  003976  0101               	movlb	1	; () banked
  5805  003978  6F00               	movwf	?__tdiv_to_l_& (0+255),b
  5806  00397A  0E00               	movlw	0
  5807  00397C  0101               	movlb	1	; () banked
  5808  00397E  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5809  003980  0E00               	movlw	0
  5810  003982  0101               	movlb	1	; () banked
  5811  003984  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5812  003986  0E00               	movlw	0
  5813  003988  0101               	movlb	1	; () banked
  5814  00398A  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5815  00398C  D019               	goto	l750
  5816  00398E                     l10611:
  5817                           
  5818                           ; BSR set to: 1
  5819  00398E  0101               	movlb	1	; () banked
  5820  003990  90D8               	bcf	status,0,c
  5821  003992  0101               	movlb	1	; () banked
  5822  003994  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5823  003996  0101               	movlb	1	; () banked
  5824  003998  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5825  00399A  0101               	movlb	1	; () banked
  5826  00399C  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5827  00399E  0101               	movlb	1	; () banked
  5828  0039A0  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5829  0039A2  0101               	movlb	1	; () banked
  5830  0039A4  0101               	movlb	1	; () banked
  5831  0039A6  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5832  0039A8                     l10613:
  5833                           
  5834                           ; BSR set to: 1
  5835  0039A8  0101               	movlb	1	; () banked
  5836  0039AA  0101               	movlb	1	; () banked
  5837  0039AC  6710               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5838  0039AE  D7EF               	goto	l10611
  5839  0039B0                     l759:
  5840                           
  5841                           ; BSR set to: 1
  5842  0039B0  C10B  F100         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5843  0039B4  C10C  F101         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5844  0039B8  C10D  F102         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5845  0039BC  C10E  F103         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5846  0039C0                     l750:
  5847                           
  5848                           ; BSR set to: 1
  5849  0039C0  0012               	return	
  5850  0039C2                     __end_of__tdiv_to_l_:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           prodh	equ	0xFF4
  5857                           prodl	equ	0xFF3
  5858                           postinc0	equ	0xFEE
  5859                           wreg	equ	0xFE8
  5860                           indf2	equ	0xFDF
  5861                           postinc2	equ	0xFDE
  5862                           postdec2	equ	0xFDD
  5863                           fsr2h	equ	0xFDA
  5864                           fsr2l	equ	0xFD9
  5865                           status	equ	0xFD8
  5866                           
  5867 ;; *************** function _isdigit *****************
  5868 ;; Defined at:
  5869 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;  c               1    0[BANK1 ] unsigned char 
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;		None               void
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, status,0
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5883 ;;      Params:         0       0       1       0       0       0       0       0       0
  5884 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5885 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5886 ;;      Totals:         0       0       3       0       0       0       0       0       0
  5887 ;;Total ram usage:        3 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    9
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		_sprintf
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text14
  5898  005FAC                     __ptext14:
  5899                           	opt stack 0
  5900  005FAC                     _isdigit:
  5901                           	opt stack 20
  5902                           
  5903                           ; BSR set to: 1
  5904                           ;incstack = 0
  5905                           ;incstack = 0
  5906  005FAC  0101               	movlb	1	; () banked
  5907  005FAE  6F01               	movwf	??_isdigit& (0+255),b
  5908  005FB0  0E00               	movlw	0
  5909  005FB2  0101               	movlb	1	; () banked
  5910  005FB4  0101               	movlb	1	; () banked
  5911  005FB6  6F02               	movwf	_isdigit$838& (0+255),b
  5912  005FB8  0101               	movlb	1	; () banked
  5913  005FBA  5101               	movf	??_isdigit& (0+255),w,b
  5914                           
  5915                           ; BSR set to: 1
  5916  005FBC  0E3A               	movlw	58
  5917  005FBE  0101               	movlb	1	; () banked
  5918  005FC0  0101               	movlb	1	; () banked
  5919  005FC2  6100               	cpfslt	isdigit@c& (0+255),b
  5920  005FC4  D00D               	goto	l10555
  5921                           
  5922                           ; BSR set to: 1
  5923  005FC6  0E2F               	movlw	47
  5924  005FC8  0101               	movlb	1	; () banked
  5925  005FCA  0101               	movlb	1	; () banked
  5926  005FCC  6500               	cpfsgt	isdigit@c& (0+255),b
  5927  005FCE  D008               	goto	l10555
  5928                           
  5929                           ; BSR set to: 1
  5930  005FD0  0101               	movlb	1	; () banked
  5931  005FD2  6F01               	movwf	??_isdigit& (0+255),b
  5932  005FD4  0E01               	movlw	1
  5933  005FD6  0101               	movlb	1	; () banked
  5934  005FD8  0101               	movlb	1	; () banked
  5935  005FDA  6F02               	movwf	_isdigit$838& (0+255),b
  5936  005FDC  0101               	movlb	1	; () banked
  5937  005FDE  5101               	movf	??_isdigit& (0+255),w,b
  5938  005FE0                     l10555:
  5939                           
  5940                           ; BSR set to: 1
  5941  005FE0  C102  F101         	movff	_isdigit$838,??_isdigit
  5942  005FE4  0101               	movlb	1	; () banked
  5943  005FE6  3101               	rrcf	??_isdigit& (0+255),w,b
  5944                           
  5945                           ; BSR set to: 1
  5946                           
  5947                           ; BSR set to: 1
  5948  005FE8  0012               	return	
  5949  005FEA                     __end_of_isdigit:
  5950                           	opt stack 0
  5951                           tblptru	equ	0xFF8
  5952                           tblptrh	equ	0xFF7
  5953                           tblptrl	equ	0xFF6
  5954                           tablat	equ	0xFF5
  5955                           prodh	equ	0xFF4
  5956                           prodl	equ	0xFF3
  5957                           postinc0	equ	0xFEE
  5958                           wreg	equ	0xFE8
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           postdec2	equ	0xFDD
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function _scale *****************
  5967 ;; Defined at:
  5968 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  scl             1   39[BANK1 ] char 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;		None
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  3   39[BANK1 ] char 
  5975 ;; Registers used:
  5976 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5982 ;;      Params:         0       0       3       0       0       0       0       0       0
  5983 ;;      Locals:         0       0       3       0       0       0       0       0       0
  5984 ;;      Temps:          0       0       6       0       0       0       0       0       0
  5985 ;;      Totals:         0       0      12       0       0       0       0       0       0
  5986 ;;Total ram usage:       12 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:   11
  5989 ;; This function calls:
  5990 ;;		___ftmul
  5991 ;;		___awdiv
  5992 ;;		___awmod
  5993 ;;		___wmul
  5994 ;; This function is called by:
  5995 ;;		_sprintf
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text15
  6000  002414                     __ptext15:
  6001                           	opt stack 0
  6002  002414                     _scale:
  6003                           	opt stack 18
  6004                           
  6005                           ;doprnt.c: 428: if(scl < 0) {
  6006                           
  6007                           ; BSR set to: 1
  6008                           ;incstack = 0
  6009                           ;incstack = 0
  6010  002414  0101               	movlb	1	; () banked
  6011  002416  0101               	movlb	1	; () banked
  6012  002418  AF27               	btfss	scale@scl& (0+255),7,b
  6013  00241A  D179               	goto	l10529
  6014                           
  6015                           ; BSR set to: 1
  6016                           ;doprnt.c: 429: scl = -scl;
  6017  00241C  0101               	movlb	1	; () banked
  6018  00241E  0101               	movlb	1	; () banked
  6019  002420  6D27               	negf	scale@scl& (0+255),b
  6020                           
  6021                           ; BSR set to: 1
  6022                           ;doprnt.c: 430: if(scl>=110)
  6023  002422  0101               	movlb	1	; () banked
  6024  002424  0101               	movlb	1	; () banked
  6025  002426  5127               	movf	scale@scl& (0+255),w,b
  6026  002428  0A80               	xorlw	128
  6027  00242A  0F12               	addlw	-238
  6028  00242C  A0D8               	btfss	status,0,c
  6029  00242E  D0DF               	goto	l10519
  6030                           
  6031                           ; BSR set to: 1
  6032                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6033  002430  0E00               	movlw	0
  6034  002432  0101               	movlb	1	; () banked
  6035  002434  0101               	movlb	1	; () banked
  6036  002436  6F13               	movwf	(?___wmul+3)& (0+255),b
  6037  002438  0E03               	movlw	3
  6038  00243A  0101               	movlb	1	; () banked
  6039  00243C  6F12               	movwf	(?___wmul+2)& (0+255),b
  6040  00243E  0E00               	movlw	0
  6041  002440  0101               	movlb	1	; () banked
  6042  002442  0101               	movlb	1	; () banked
  6043  002444  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6044  002446  0E0A               	movlw	10
  6045  002448  0101               	movlb	1	; () banked
  6046  00244A  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6047  00244C  0E00               	movlw	0
  6048  00244E  0101               	movlb	1	; () banked
  6049  002450  0101               	movlb	1	; () banked
  6050  002452  6F03               	movwf	(?___awmod+3)& (0+255),b
  6051  002454  0E64               	movlw	100
  6052  002456  0101               	movlb	1	; () banked
  6053  002458  6F02               	movwf	(?___awmod+2)& (0+255),b
  6054  00245A  0101               	movlb	1	; () banked
  6055  00245C  0101               	movlb	1	; () banked
  6056  00245E  5127               	movf	scale@scl& (0+255),w,b
  6057  002460  0101               	movlb	1	; () banked
  6058  002462  0101               	movlb	1	; () banked
  6059  002464  6F00               	movwf	?___awmod& (0+255),b
  6060  002466  0101               	movlb	1	; () banked
  6061  002468  6B01               	clrf	(?___awmod+1)& (0+255),b
  6062  00246A  0101               	movlb	1	; () banked
  6063  00246C  BF00               	btfsc	?___awmod& (0+255),7,b
  6064  00246E  0701               	decf	(?___awmod+1)& (0+255),f,b
  6065  002470  EC05  F028         	call	___awmod	;wreg free
  6066  002474  0101               	movlb	1	; () banked
  6067  002476  C100  F107         	movff	?___awmod,?___awdiv
  6068  00247A  0101               	movlb	1	; () banked
  6069  00247C  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6070  002480  EC6E  F023         	call	___awdiv	;wreg free
  6071  002484  0E09               	movlw	9
  6072  002486  0101               	movlb	1	; () banked
  6073  002488  0101               	movlb	1	; () banked
  6074  00248A  2507               	addwf	?___awdiv& (0+255),w,b
  6075  00248C  0101               	movlb	1	; () banked
  6076  00248E  0101               	movlb	1	; () banked
  6077  002490  6F10               	movwf	?___wmul& (0+255),b
  6078  002492  0E00               	movlw	0
  6079  002494  0101               	movlb	1	; () banked
  6080  002496  0101               	movlb	1	; () banked
  6081  002498  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6082  00249A  0101               	movlb	1	; () banked
  6083  00249C  6F11               	movwf	(?___wmul+1)& (0+255),b
  6084  00249E  EC5D  F02E         	call	___wmul	;wreg free
  6085  0024A2  0E28               	movlw	low __npowers_
  6086  0024A4  0101               	movlb	1	; () banked
  6087  0024A6  0101               	movlb	1	; () banked
  6088  0024A8  2510               	addwf	?___wmul& (0+255),w,b
  6089  0024AA  6EF6               	movwf	tblptrl,c
  6090  0024AC  0E08               	movlw	high __npowers_
  6091  0024AE  0101               	movlb	1	; () banked
  6092  0024B0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6093  0024B2  6EF7               	movwf	tblptrh,c
  6094  0024B4  0009               	tblrd		*+
  6095  0024B6  CFF5 F12A          	movff	tablat,??_scale
  6096  0024BA  0009               	tblrd		*+
  6097  0024BC  CFF5 F12B          	movff	tablat,??_scale+1
  6098  0024C0  0009               	tblrd		*+
  6099  0024C2  CFF5 F12C          	movff	tablat,??_scale+2
  6100  0024C6  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6101  0024CA  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6102  0024CE  C12A  F119         	movff	??_scale,?___ftmul+3
  6103  0024D2  0E00               	movlw	0
  6104  0024D4  0101               	movlb	1	; () banked
  6105  0024D6  0101               	movlb	1	; () banked
  6106  0024D8  6F13               	movwf	(?___wmul+3)& (0+255),b
  6107  0024DA  0E03               	movlw	3
  6108  0024DC  0101               	movlb	1	; () banked
  6109  0024DE  6F12               	movwf	(?___wmul+2)& (0+255),b
  6110  0024E0  0E00               	movlw	0
  6111  0024E2  0101               	movlb	1	; () banked
  6112  0024E4  0101               	movlb	1	; () banked
  6113  0024E6  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6114  0024E8  0E64               	movlw	100
  6115  0024EA  0101               	movlb	1	; () banked
  6116  0024EC  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6117  0024EE  0101               	movlb	1	; () banked
  6118  0024F0  0101               	movlb	1	; () banked
  6119  0024F2  5127               	movf	scale@scl& (0+255),w,b
  6120  0024F4  0101               	movlb	1	; () banked
  6121  0024F6  0101               	movlb	1	; () banked
  6122  0024F8  6F07               	movwf	?___awdiv& (0+255),b
  6123  0024FA  0101               	movlb	1	; () banked
  6124  0024FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6125  0024FE  0101               	movlb	1	; () banked
  6126  002500  BF07               	btfsc	?___awdiv& (0+255),7,b
  6127  002502  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6128  002504  EC6E  F023         	call	___awdiv	;wreg free
  6129  002508  0E12               	movlw	18
  6130  00250A  0101               	movlb	1	; () banked
  6131  00250C  0101               	movlb	1	; () banked
  6132  00250E  2507               	addwf	?___awdiv& (0+255),w,b
  6133  002510  0101               	movlb	1	; () banked
  6134  002512  0101               	movlb	1	; () banked
  6135  002514  6F10               	movwf	?___wmul& (0+255),b
  6136  002516  0E00               	movlw	0
  6137  002518  0101               	movlb	1	; () banked
  6138  00251A  0101               	movlb	1	; () banked
  6139  00251C  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6140  00251E  0101               	movlb	1	; () banked
  6141  002520  6F11               	movwf	(?___wmul+1)& (0+255),b
  6142  002522  EC5D  F02E         	call	___wmul	;wreg free
  6143  002526  0E28               	movlw	low __npowers_
  6144  002528  0101               	movlb	1	; () banked
  6145  00252A  0101               	movlb	1	; () banked
  6146  00252C  2510               	addwf	?___wmul& (0+255),w,b
  6147  00252E  6EF6               	movwf	tblptrl,c
  6148  002530  0E08               	movlw	high __npowers_
  6149  002532  0101               	movlb	1	; () banked
  6150  002534  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6151  002536  6EF7               	movwf	tblptrh,c
  6152  002538  0009               	tblrd		*+
  6153  00253A  CFF5 F12D          	movff	tablat,??_scale+3
  6154  00253E  0009               	tblrd		*+
  6155  002540  CFF5 F12E          	movff	tablat,??_scale+4
  6156  002544  0009               	tblrd		*+
  6157  002546  CFF5 F12F          	movff	tablat,??_scale+5
  6158  00254A  C12F  F118         	movff	??_scale+5,?___ftmul+2
  6159  00254E  C12E  F117         	movff	??_scale+4,?___ftmul+1
  6160  002552  C12D  F116         	movff	??_scale+3,?___ftmul
  6161  002556  ECE1  F01C         	call	___ftmul	;wreg free
  6162  00255A  C118  F132         	movff	?___ftmul+2,_scale$1203+2
  6163  00255E  C117  F131         	movff	?___ftmul+1,_scale$1203+1
  6164  002562  C116  F130         	movff	?___ftmul,_scale$1203
  6165                           
  6166                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6167  002566  C130  F116         	movff	_scale$1203,?___ftmul
  6168  00256A  C131  F117         	movff	_scale$1203+1,?___ftmul+1
  6169  00256E  C132  F118         	movff	_scale$1203+2,?___ftmul+2
  6170  002572  0E00               	movlw	0
  6171  002574  0101               	movlb	1	; () banked
  6172  002576  0101               	movlb	1	; () banked
  6173  002578  6F13               	movwf	(?___wmul+3)& (0+255),b
  6174  00257A  0E03               	movlw	3
  6175  00257C  0101               	movlb	1	; () banked
  6176  00257E  6F12               	movwf	(?___wmul+2)& (0+255),b
  6177  002580  0E00               	movlw	0
  6178  002582  0101               	movlb	1	; () banked
  6179  002584  0101               	movlb	1	; () banked
  6180  002586  6F03               	movwf	(?___awmod+3)& (0+255),b
  6181  002588  0E0A               	movlw	10
  6182  00258A  0101               	movlb	1	; () banked
  6183  00258C  6F02               	movwf	(?___awmod+2)& (0+255),b
  6184  00258E  0101               	movlb	1	; () banked
  6185  002590  0101               	movlb	1	; () banked
  6186  002592  5127               	movf	scale@scl& (0+255),w,b
  6187  002594  0101               	movlb	1	; () banked
  6188  002596  0101               	movlb	1	; () banked
  6189  002598  6F00               	movwf	?___awmod& (0+255),b
  6190  00259A  0101               	movlb	1	; () banked
  6191  00259C  6B01               	clrf	(?___awmod+1)& (0+255),b
  6192  00259E  0101               	movlb	1	; () banked
  6193  0025A0  BF00               	btfsc	?___awmod& (0+255),7,b
  6194  0025A2  0701               	decf	(?___awmod+1)& (0+255),f,b
  6195  0025A4  EC05  F028         	call	___awmod	;wreg free
  6196  0025A8  0101               	movlb	1	; () banked
  6197  0025AA  C100  F110         	movff	?___awmod,?___wmul
  6198  0025AE  0101               	movlb	1	; () banked
  6199  0025B0  C101  F111         	movff	?___awmod+1,?___wmul+1
  6200  0025B4  EC5D  F02E         	call	___wmul	;wreg free
  6201  0025B8  0E28               	movlw	low __npowers_
  6202  0025BA  0101               	movlb	1	; () banked
  6203  0025BC  0101               	movlb	1	; () banked
  6204  0025BE  2510               	addwf	?___wmul& (0+255),w,b
  6205  0025C0  6EF6               	movwf	tblptrl,c
  6206  0025C2  0E08               	movlw	high __npowers_
  6207  0025C4  0101               	movlb	1	; () banked
  6208  0025C6  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6209  0025C8  6EF7               	movwf	tblptrh,c
  6210  0025CA  0009               	tblrd		*+
  6211  0025CC  CFF5 F12A          	movff	tablat,??_scale
  6212  0025D0  0009               	tblrd		*+
  6213  0025D2  CFF5 F12B          	movff	tablat,??_scale+1
  6214  0025D6  0009               	tblrd		*+
  6215  0025D8  CFF5 F12C          	movff	tablat,??_scale+2
  6216  0025DC  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6217  0025E0  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6218  0025E4  C12A  F119         	movff	??_scale,?___ftmul+3
  6219  0025E8  ECE1  F01C         	call	___ftmul	;wreg free
  6220  0025EC  D1FC               	goto	L10
  6221  0025EE                     l10519:
  6222                           
  6223                           ;doprnt.c: 432: else if(scl > 10)
  6224  0025EE  0101               	movlb	1	; () banked
  6225  0025F0  0101               	movlb	1	; () banked
  6226  0025F2  5127               	movf	scale@scl& (0+255),w,b
  6227  0025F4  0A80               	xorlw	128
  6228  0025F6  0F75               	addlw	-139
  6229  0025F8  A0D8               	btfss	status,0,c
  6230  0025FA  D080               	goto	l10525
  6231                           
  6232                           ; BSR set to: 1
  6233                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6234  0025FC  0E00               	movlw	0
  6235  0025FE  0101               	movlb	1	; () banked
  6236  002600  0101               	movlb	1	; () banked
  6237  002602  6F13               	movwf	(?___wmul+3)& (0+255),b
  6238  002604  0E03               	movlw	3
  6239  002606  0101               	movlb	1	; () banked
  6240  002608  6F12               	movwf	(?___wmul+2)& (0+255),b
  6241  00260A  0E00               	movlw	0
  6242  00260C  0101               	movlb	1	; () banked
  6243  00260E  0101               	movlb	1	; () banked
  6244  002610  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6245  002612  0E0A               	movlw	10
  6246  002614  0101               	movlb	1	; () banked
  6247  002616  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6248  002618  0101               	movlb	1	; () banked
  6249  00261A  0101               	movlb	1	; () banked
  6250  00261C  5127               	movf	scale@scl& (0+255),w,b
  6251  00261E  0101               	movlb	1	; () banked
  6252  002620  0101               	movlb	1	; () banked
  6253  002622  6F07               	movwf	?___awdiv& (0+255),b
  6254  002624  0101               	movlb	1	; () banked
  6255  002626  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6256  002628  0101               	movlb	1	; () banked
  6257  00262A  BF07               	btfsc	?___awdiv& (0+255),7,b
  6258  00262C  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6259  00262E  EC6E  F023         	call	___awdiv	;wreg free
  6260  002632  0E09               	movlw	9
  6261  002634  0101               	movlb	1	; () banked
  6262  002636  0101               	movlb	1	; () banked
  6263  002638  2507               	addwf	?___awdiv& (0+255),w,b
  6264  00263A  0101               	movlb	1	; () banked
  6265  00263C  0101               	movlb	1	; () banked
  6266  00263E  6F10               	movwf	?___wmul& (0+255),b
  6267  002640  0E00               	movlw	0
  6268  002642  0101               	movlb	1	; () banked
  6269  002644  0101               	movlb	1	; () banked
  6270  002646  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6271  002648  0101               	movlb	1	; () banked
  6272  00264A  6F11               	movwf	(?___wmul+1)& (0+255),b
  6273  00264C  EC5D  F02E         	call	___wmul	;wreg free
  6274  002650  0E28               	movlw	low __npowers_
  6275  002652  0101               	movlb	1	; () banked
  6276  002654  0101               	movlb	1	; () banked
  6277  002656  2510               	addwf	?___wmul& (0+255),w,b
  6278  002658  6EF6               	movwf	tblptrl,c
  6279  00265A  0E08               	movlw	high __npowers_
  6280  00265C  0101               	movlb	1	; () banked
  6281  00265E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6282  002660  6EF7               	movwf	tblptrh,c
  6283  002662  0009               	tblrd		*+
  6284  002664  CFF5 F12A          	movff	tablat,??_scale
  6285  002668  0009               	tblrd		*+
  6286  00266A  CFF5 F12B          	movff	tablat,??_scale+1
  6287  00266E  0009               	tblrd		*+
  6288  002670  CFF5 F12C          	movff	tablat,??_scale+2
  6289  002674  C12C  F118         	movff	??_scale+2,?___ftmul+2
  6290  002678  C12B  F117         	movff	??_scale+1,?___ftmul+1
  6291  00267C  C12A  F116         	movff	??_scale,?___ftmul
  6292  002680  0E00               	movlw	0
  6293  002682  0101               	movlb	1	; () banked
  6294  002684  0101               	movlb	1	; () banked
  6295  002686  6F13               	movwf	(?___wmul+3)& (0+255),b
  6296  002688  0E03               	movlw	3
  6297  00268A  0101               	movlb	1	; () banked
  6298  00268C  6F12               	movwf	(?___wmul+2)& (0+255),b
  6299  00268E  0E00               	movlw	0
  6300  002690  0101               	movlb	1	; () banked
  6301  002692  0101               	movlb	1	; () banked
  6302  002694  6F03               	movwf	(?___awmod+3)& (0+255),b
  6303  002696  0E0A               	movlw	10
  6304  002698  0101               	movlb	1	; () banked
  6305  00269A  6F02               	movwf	(?___awmod+2)& (0+255),b
  6306  00269C  0101               	movlb	1	; () banked
  6307  00269E  0101               	movlb	1	; () banked
  6308  0026A0  5127               	movf	scale@scl& (0+255),w,b
  6309  0026A2  0101               	movlb	1	; () banked
  6310  0026A4  0101               	movlb	1	; () banked
  6311  0026A6  6F00               	movwf	?___awmod& (0+255),b
  6312  0026A8  0101               	movlb	1	; () banked
  6313  0026AA  6B01               	clrf	(?___awmod+1)& (0+255),b
  6314  0026AC  0101               	movlb	1	; () banked
  6315  0026AE  BF00               	btfsc	?___awmod& (0+255),7,b
  6316  0026B0  0701               	decf	(?___awmod+1)& (0+255),f,b
  6317  0026B2  EC05  F028         	call	___awmod	;wreg free
  6318  0026B6  0101               	movlb	1	; () banked
  6319  0026B8  C100  F110         	movff	?___awmod,?___wmul
  6320  0026BC  0101               	movlb	1	; () banked
  6321  0026BE  C101  F111         	movff	?___awmod+1,?___wmul+1
  6322  0026C2  EC5D  F02E         	call	___wmul	;wreg free
  6323  0026C6  0E28               	movlw	low __npowers_
  6324  0026C8  0101               	movlb	1	; () banked
  6325  0026CA  0101               	movlb	1	; () banked
  6326  0026CC  2510               	addwf	?___wmul& (0+255),w,b
  6327  0026CE  6EF6               	movwf	tblptrl,c
  6328  0026D0  0E08               	movlw	high __npowers_
  6329  0026D2  0101               	movlb	1	; () banked
  6330  0026D4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6331  0026D6  6EF7               	movwf	tblptrh,c
  6332  0026D8  0009               	tblrd		*+
  6333  0026DA  CFF5 F12D          	movff	tablat,??_scale+3
  6334  0026DE  0009               	tblrd		*+
  6335  0026E0  CFF5 F12E          	movff	tablat,??_scale+4
  6336  0026E4  0009               	tblrd		*+
  6337  0026E6  CFF5 F12F          	movff	tablat,??_scale+5
  6338  0026EA  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  6339  0026EE  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  6340  0026F2  C12D  F119         	movff	??_scale+3,?___ftmul+3
  6341  0026F6  ECE1  F01C         	call	___ftmul	;wreg free
  6342  0026FA  D175               	goto	L10
  6343  0026FC                     l10525:
  6344                           
  6345                           ;doprnt.c: 434: return _npowers_[scl];
  6346  0026FC  0101               	movlb	1	; () banked
  6347  0026FE  0101               	movlb	1	; () banked
  6348  002700  5127               	movf	scale@scl& (0+255),w,b
  6349  002702  0D03               	mullw	3
  6350  002704  0E28               	movlw	low __npowers_
  6351  002706  24F3               	addwf	prodl,w,c
  6352  002708  6EF6               	movwf	tblptrl,c
  6353  00270A  0E08               	movlw	high __npowers_
  6354  00270C  D17B               	goto	L9
  6355  00270E                     l10529:
  6356                           
  6357                           ; BSR set to: 1
  6358                           ;doprnt.c: 435: }
  6359                           ;doprnt.c: 436: if(scl>=110)
  6360  00270E  0101               	movlb	1	; () banked
  6361  002710  0101               	movlb	1	; () banked
  6362  002712  5127               	movf	scale@scl& (0+255),w,b
  6363  002714  0A80               	xorlw	128
  6364  002716  0F12               	addlw	-238
  6365  002718  A0D8               	btfss	status,0,c
  6366  00271A  D0DF               	goto	l10537
  6367                           
  6368                           ; BSR set to: 1
  6369                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6370  00271C  0E00               	movlw	0
  6371  00271E  0101               	movlb	1	; () banked
  6372  002720  0101               	movlb	1	; () banked
  6373  002722  6F13               	movwf	(?___wmul+3)& (0+255),b
  6374  002724  0E03               	movlw	3
  6375  002726  0101               	movlb	1	; () banked
  6376  002728  6F12               	movwf	(?___wmul+2)& (0+255),b
  6377  00272A  0E00               	movlw	0
  6378  00272C  0101               	movlb	1	; () banked
  6379  00272E  0101               	movlb	1	; () banked
  6380  002730  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6381  002732  0E0A               	movlw	10
  6382  002734  0101               	movlb	1	; () banked
  6383  002736  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6384  002738  0E00               	movlw	0
  6385  00273A  0101               	movlb	1	; () banked
  6386  00273C  0101               	movlb	1	; () banked
  6387  00273E  6F03               	movwf	(?___awmod+3)& (0+255),b
  6388  002740  0E64               	movlw	100
  6389  002742  0101               	movlb	1	; () banked
  6390  002744  6F02               	movwf	(?___awmod+2)& (0+255),b
  6391  002746  0101               	movlb	1	; () banked
  6392  002748  0101               	movlb	1	; () banked
  6393  00274A  5127               	movf	scale@scl& (0+255),w,b
  6394  00274C  0101               	movlb	1	; () banked
  6395  00274E  0101               	movlb	1	; () banked
  6396  002750  6F00               	movwf	?___awmod& (0+255),b
  6397  002752  0101               	movlb	1	; () banked
  6398  002754  6B01               	clrf	(?___awmod+1)& (0+255),b
  6399  002756  0101               	movlb	1	; () banked
  6400  002758  BF00               	btfsc	?___awmod& (0+255),7,b
  6401  00275A  0701               	decf	(?___awmod+1)& (0+255),f,b
  6402  00275C  EC05  F028         	call	___awmod	;wreg free
  6403  002760  0101               	movlb	1	; () banked
  6404  002762  C100  F107         	movff	?___awmod,?___awdiv
  6405  002766  0101               	movlb	1	; () banked
  6406  002768  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6407  00276C  EC6E  F023         	call	___awdiv	;wreg free
  6408  002770  0E09               	movlw	9
  6409  002772  0101               	movlb	1	; () banked
  6410  002774  0101               	movlb	1	; () banked
  6411  002776  2507               	addwf	?___awdiv& (0+255),w,b
  6412  002778  0101               	movlb	1	; () banked
  6413  00277A  0101               	movlb	1	; () banked
  6414  00277C  6F10               	movwf	?___wmul& (0+255),b
  6415  00277E  0E00               	movlw	0
  6416  002780  0101               	movlb	1	; () banked
  6417  002782  0101               	movlb	1	; () banked
  6418  002784  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6419  002786  0101               	movlb	1	; () banked
  6420  002788  6F11               	movwf	(?___wmul+1)& (0+255),b
  6421  00278A  EC5D  F02E         	call	___wmul	;wreg free
  6422  00278E  0E4F               	movlw	low __powers_
  6423  002790  0101               	movlb	1	; () banked
  6424  002792  0101               	movlb	1	; () banked
  6425  002794  2510               	addwf	?___wmul& (0+255),w,b
  6426  002796  6EF6               	movwf	tblptrl,c
  6427  002798  0E08               	movlw	high __powers_
  6428  00279A  0101               	movlb	1	; () banked
  6429  00279C  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6430  00279E  6EF7               	movwf	tblptrh,c
  6431  0027A0  0009               	tblrd		*+
  6432  0027A2  CFF5 F12A          	movff	tablat,??_scale
  6433  0027A6  0009               	tblrd		*+
  6434  0027A8  CFF5 F12B          	movff	tablat,??_scale+1
  6435  0027AC  0009               	tblrd		*+
  6436  0027AE  CFF5 F12C          	movff	tablat,??_scale+2
  6437  0027B2  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6438  0027B6  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6439  0027BA  C12A  F119         	movff	??_scale,?___ftmul+3
  6440  0027BE  0E00               	movlw	0
  6441  0027C0  0101               	movlb	1	; () banked
  6442  0027C2  0101               	movlb	1	; () banked
  6443  0027C4  6F13               	movwf	(?___wmul+3)& (0+255),b
  6444  0027C6  0E03               	movlw	3
  6445  0027C8  0101               	movlb	1	; () banked
  6446  0027CA  6F12               	movwf	(?___wmul+2)& (0+255),b
  6447  0027CC  0E00               	movlw	0
  6448  0027CE  0101               	movlb	1	; () banked
  6449  0027D0  0101               	movlb	1	; () banked
  6450  0027D2  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6451  0027D4  0E64               	movlw	100
  6452  0027D6  0101               	movlb	1	; () banked
  6453  0027D8  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6454  0027DA  0101               	movlb	1	; () banked
  6455  0027DC  0101               	movlb	1	; () banked
  6456  0027DE  5127               	movf	scale@scl& (0+255),w,b
  6457  0027E0  0101               	movlb	1	; () banked
  6458  0027E2  0101               	movlb	1	; () banked
  6459  0027E4  6F07               	movwf	?___awdiv& (0+255),b
  6460  0027E6  0101               	movlb	1	; () banked
  6461  0027E8  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6462  0027EA  0101               	movlb	1	; () banked
  6463  0027EC  BF07               	btfsc	?___awdiv& (0+255),7,b
  6464  0027EE  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6465  0027F0  EC6E  F023         	call	___awdiv	;wreg free
  6466  0027F4  0E12               	movlw	18
  6467  0027F6  0101               	movlb	1	; () banked
  6468  0027F8  0101               	movlb	1	; () banked
  6469  0027FA  2507               	addwf	?___awdiv& (0+255),w,b
  6470  0027FC  0101               	movlb	1	; () banked
  6471  0027FE  0101               	movlb	1	; () banked
  6472  002800  6F10               	movwf	?___wmul& (0+255),b
  6473  002802  0E00               	movlw	0
  6474  002804  0101               	movlb	1	; () banked
  6475  002806  0101               	movlb	1	; () banked
  6476  002808  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6477  00280A  0101               	movlb	1	; () banked
  6478  00280C  6F11               	movwf	(?___wmul+1)& (0+255),b
  6479  00280E  EC5D  F02E         	call	___wmul	;wreg free
  6480  002812  0E4F               	movlw	low __powers_
  6481  002814  0101               	movlb	1	; () banked
  6482  002816  0101               	movlb	1	; () banked
  6483  002818  2510               	addwf	?___wmul& (0+255),w,b
  6484  00281A  6EF6               	movwf	tblptrl,c
  6485  00281C  0E08               	movlw	high __powers_
  6486  00281E  0101               	movlb	1	; () banked
  6487  002820  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6488  002822  6EF7               	movwf	tblptrh,c
  6489  002824  0009               	tblrd		*+
  6490  002826  CFF5 F12D          	movff	tablat,??_scale+3
  6491  00282A  0009               	tblrd		*+
  6492  00282C  CFF5 F12E          	movff	tablat,??_scale+4
  6493  002830  0009               	tblrd		*+
  6494  002832  CFF5 F12F          	movff	tablat,??_scale+5
  6495  002836  C12F  F118         	movff	??_scale+5,?___ftmul+2
  6496  00283A  C12E  F117         	movff	??_scale+4,?___ftmul+1
  6497  00283E  C12D  F116         	movff	??_scale+3,?___ftmul
  6498  002842  ECE1  F01C         	call	___ftmul	;wreg free
  6499  002846  C118  F132         	movff	?___ftmul+2,_scale$1203+2
  6500  00284A  C117  F131         	movff	?___ftmul+1,_scale$1203+1
  6501  00284E  C116  F130         	movff	?___ftmul,_scale$1203
  6502                           
  6503                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6504  002852  C130  F116         	movff	_scale$1203,?___ftmul
  6505  002856  C131  F117         	movff	_scale$1203+1,?___ftmul+1
  6506  00285A  C132  F118         	movff	_scale$1203+2,?___ftmul+2
  6507  00285E  0E00               	movlw	0
  6508  002860  0101               	movlb	1	; () banked
  6509  002862  0101               	movlb	1	; () banked
  6510  002864  6F13               	movwf	(?___wmul+3)& (0+255),b
  6511  002866  0E03               	movlw	3
  6512  002868  0101               	movlb	1	; () banked
  6513  00286A  6F12               	movwf	(?___wmul+2)& (0+255),b
  6514  00286C  0E00               	movlw	0
  6515  00286E  0101               	movlb	1	; () banked
  6516  002870  0101               	movlb	1	; () banked
  6517  002872  6F03               	movwf	(?___awmod+3)& (0+255),b
  6518  002874  0E0A               	movlw	10
  6519  002876  0101               	movlb	1	; () banked
  6520  002878  6F02               	movwf	(?___awmod+2)& (0+255),b
  6521  00287A  0101               	movlb	1	; () banked
  6522  00287C  0101               	movlb	1	; () banked
  6523  00287E  5127               	movf	scale@scl& (0+255),w,b
  6524  002880  0101               	movlb	1	; () banked
  6525  002882  0101               	movlb	1	; () banked
  6526  002884  6F00               	movwf	?___awmod& (0+255),b
  6527  002886  0101               	movlb	1	; () banked
  6528  002888  6B01               	clrf	(?___awmod+1)& (0+255),b
  6529  00288A  0101               	movlb	1	; () banked
  6530  00288C  BF00               	btfsc	?___awmod& (0+255),7,b
  6531  00288E  0701               	decf	(?___awmod+1)& (0+255),f,b
  6532  002890  EC05  F028         	call	___awmod	;wreg free
  6533  002894  0101               	movlb	1	; () banked
  6534  002896  C100  F110         	movff	?___awmod,?___wmul
  6535  00289A  0101               	movlb	1	; () banked
  6536  00289C  C101  F111         	movff	?___awmod+1,?___wmul+1
  6537  0028A0  EC5D  F02E         	call	___wmul	;wreg free
  6538  0028A4  0E4F               	movlw	low __powers_
  6539  0028A6  0101               	movlb	1	; () banked
  6540  0028A8  0101               	movlb	1	; () banked
  6541  0028AA  2510               	addwf	?___wmul& (0+255),w,b
  6542  0028AC  6EF6               	movwf	tblptrl,c
  6543  0028AE  0E08               	movlw	high __powers_
  6544  0028B0  0101               	movlb	1	; () banked
  6545  0028B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6546  0028B4  6EF7               	movwf	tblptrh,c
  6547  0028B6  0009               	tblrd		*+
  6548  0028B8  CFF5 F12A          	movff	tablat,??_scale
  6549  0028BC  0009               	tblrd		*+
  6550  0028BE  CFF5 F12B          	movff	tablat,??_scale+1
  6551  0028C2  0009               	tblrd		*+
  6552  0028C4  CFF5 F12C          	movff	tablat,??_scale+2
  6553  0028C8  C12C  F11B         	movff	??_scale+2,?___ftmul+5
  6554  0028CC  C12B  F11A         	movff	??_scale+1,?___ftmul+4
  6555  0028D0  C12A  F119         	movff	??_scale,?___ftmul+3
  6556  0028D4  ECE1  F01C         	call	___ftmul	;wreg free
  6557  0028D8  D086               	goto	L10
  6558  0028DA                     l10537:
  6559                           
  6560                           ;doprnt.c: 438: else if(scl > 10)
  6561  0028DA  0101               	movlb	1	; () banked
  6562  0028DC  0101               	movlb	1	; () banked
  6563  0028DE  5127               	movf	scale@scl& (0+255),w,b
  6564  0028E0  0A80               	xorlw	128
  6565  0028E2  0F75               	addlw	-139
  6566  0028E4  A0D8               	btfss	status,0,c
  6567  0028E6  D086               	goto	l10543
  6568                           
  6569                           ; BSR set to: 1
  6570                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6571  0028E8  0E00               	movlw	0
  6572  0028EA  0101               	movlb	1	; () banked
  6573  0028EC  0101               	movlb	1	; () banked
  6574  0028EE  6F13               	movwf	(?___wmul+3)& (0+255),b
  6575  0028F0  0E03               	movlw	3
  6576  0028F2  0101               	movlb	1	; () banked
  6577  0028F4  6F12               	movwf	(?___wmul+2)& (0+255),b
  6578  0028F6  0E00               	movlw	0
  6579  0028F8  0101               	movlb	1	; () banked
  6580  0028FA  0101               	movlb	1	; () banked
  6581  0028FC  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6582  0028FE  0E0A               	movlw	10
  6583  002900  0101               	movlb	1	; () banked
  6584  002902  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6585  002904  0101               	movlb	1	; () banked
  6586  002906  0101               	movlb	1	; () banked
  6587  002908  5127               	movf	scale@scl& (0+255),w,b
  6588  00290A  0101               	movlb	1	; () banked
  6589  00290C  0101               	movlb	1	; () banked
  6590  00290E  6F07               	movwf	?___awdiv& (0+255),b
  6591  002910  0101               	movlb	1	; () banked
  6592  002912  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6593  002914  0101               	movlb	1	; () banked
  6594  002916  BF07               	btfsc	?___awdiv& (0+255),7,b
  6595  002918  0708               	decf	(?___awdiv+1)& (0+255),f,b
  6596  00291A  EC6E  F023         	call	___awdiv	;wreg free
  6597  00291E  0E09               	movlw	9
  6598  002920  0101               	movlb	1	; () banked
  6599  002922  0101               	movlb	1	; () banked
  6600  002924  2507               	addwf	?___awdiv& (0+255),w,b
  6601  002926  0101               	movlb	1	; () banked
  6602  002928  0101               	movlb	1	; () banked
  6603  00292A  6F10               	movwf	?___wmul& (0+255),b
  6604  00292C  0E00               	movlw	0
  6605  00292E  0101               	movlb	1	; () banked
  6606  002930  0101               	movlb	1	; () banked
  6607  002932  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6608  002934  0101               	movlb	1	; () banked
  6609  002936  6F11               	movwf	(?___wmul+1)& (0+255),b
  6610  002938  EC5D  F02E         	call	___wmul	;wreg free
  6611  00293C  0E4F               	movlw	low __powers_
  6612  00293E  0101               	movlb	1	; () banked
  6613  002940  0101               	movlb	1	; () banked
  6614  002942  2510               	addwf	?___wmul& (0+255),w,b
  6615  002944  6EF6               	movwf	tblptrl,c
  6616  002946  0E08               	movlw	high __powers_
  6617  002948  0101               	movlb	1	; () banked
  6618  00294A  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6619  00294C  6EF7               	movwf	tblptrh,c
  6620  00294E  0009               	tblrd		*+
  6621  002950  CFF5 F12A          	movff	tablat,??_scale
  6622  002954  0009               	tblrd		*+
  6623  002956  CFF5 F12B          	movff	tablat,??_scale+1
  6624  00295A  0009               	tblrd		*+
  6625  00295C  CFF5 F12C          	movff	tablat,??_scale+2
  6626  002960  C12C  F118         	movff	??_scale+2,?___ftmul+2
  6627  002964  C12B  F117         	movff	??_scale+1,?___ftmul+1
  6628  002968  C12A  F116         	movff	??_scale,?___ftmul
  6629  00296C  0E00               	movlw	0
  6630  00296E  0101               	movlb	1	; () banked
  6631  002970  0101               	movlb	1	; () banked
  6632  002972  6F13               	movwf	(?___wmul+3)& (0+255),b
  6633  002974  0E03               	movlw	3
  6634  002976  0101               	movlb	1	; () banked
  6635  002978  6F12               	movwf	(?___wmul+2)& (0+255),b
  6636  00297A  0E00               	movlw	0
  6637  00297C  0101               	movlb	1	; () banked
  6638  00297E  0101               	movlb	1	; () banked
  6639  002980  6F03               	movwf	(?___awmod+3)& (0+255),b
  6640  002982  0E0A               	movlw	10
  6641  002984  0101               	movlb	1	; () banked
  6642  002986  6F02               	movwf	(?___awmod+2)& (0+255),b
  6643  002988  0101               	movlb	1	; () banked
  6644  00298A  0101               	movlb	1	; () banked
  6645  00298C  5127               	movf	scale@scl& (0+255),w,b
  6646  00298E  0101               	movlb	1	; () banked
  6647  002990  0101               	movlb	1	; () banked
  6648  002992  6F00               	movwf	?___awmod& (0+255),b
  6649  002994  0101               	movlb	1	; () banked
  6650  002996  6B01               	clrf	(?___awmod+1)& (0+255),b
  6651  002998  0101               	movlb	1	; () banked
  6652  00299A  BF00               	btfsc	?___awmod& (0+255),7,b
  6653  00299C  0701               	decf	(?___awmod+1)& (0+255),f,b
  6654  00299E  EC05  F028         	call	___awmod	;wreg free
  6655  0029A2  0101               	movlb	1	; () banked
  6656  0029A4  C100  F110         	movff	?___awmod,?___wmul
  6657  0029A8  0101               	movlb	1	; () banked
  6658  0029AA  C101  F111         	movff	?___awmod+1,?___wmul+1
  6659  0029AE  EC5D  F02E         	call	___wmul	;wreg free
  6660  0029B2  0E4F               	movlw	low __powers_
  6661  0029B4  0101               	movlb	1	; () banked
  6662  0029B6  0101               	movlb	1	; () banked
  6663  0029B8  2510               	addwf	?___wmul& (0+255),w,b
  6664  0029BA  6EF6               	movwf	tblptrl,c
  6665  0029BC  0E08               	movlw	high __powers_
  6666  0029BE  0101               	movlb	1	; () banked
  6667  0029C0  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6668  0029C2  6EF7               	movwf	tblptrh,c
  6669  0029C4  0009               	tblrd		*+
  6670  0029C6  CFF5 F12D          	movff	tablat,??_scale+3
  6671  0029CA  0009               	tblrd		*+
  6672  0029CC  CFF5 F12E          	movff	tablat,??_scale+4
  6673  0029D0  0009               	tblrd		*+
  6674  0029D2  CFF5 F12F          	movff	tablat,??_scale+5
  6675  0029D6  C12F  F11B         	movff	??_scale+5,?___ftmul+5
  6676  0029DA  C12E  F11A         	movff	??_scale+4,?___ftmul+4
  6677  0029DE  C12D  F119         	movff	??_scale+3,?___ftmul+3
  6678  0029E2  ECE1  F01C         	call	___ftmul	;wreg free
  6679  0029E6                     L10:
  6680  0029E6  C118  F129         	movff	?___ftmul+2,?_scale+2
  6681  0029EA  C117  F128         	movff	?___ftmul+1,?_scale+1
  6682  0029EE  C116  F127         	movff	?___ftmul,?_scale
  6683  0029F2  D019               	goto	l253
  6684  0029F4                     l10543:
  6685                           
  6686                           ;doprnt.c: 440: return _powers_[scl];
  6687  0029F4  0101               	movlb	1	; () banked
  6688  0029F6  0101               	movlb	1	; () banked
  6689  0029F8  5127               	movf	scale@scl& (0+255),w,b
  6690  0029FA  0D03               	mullw	3
  6691  0029FC  0E4F               	movlw	low __powers_
  6692  0029FE  24F3               	addwf	prodl,w,c
  6693  002A00  6EF6               	movwf	tblptrl,c
  6694  002A02  0E08               	movlw	high __powers_
  6695  002A04                     L9:
  6696  002A04  20F4               	addwfc	prodh,w,c
  6697  002A06  6EF7               	movwf	tblptrh,c
  6698  002A08  0009               	tblrd		*+
  6699  002A0A  CFF5 F12A          	movff	tablat,??_scale
  6700  002A0E  0009               	tblrd		*+
  6701  002A10  CFF5 F12B          	movff	tablat,??_scale+1
  6702  002A14  0009               	tblrd		*+
  6703  002A16  CFF5 F12C          	movff	tablat,??_scale+2
  6704  002A1A  C12C  F129         	movff	??_scale+2,?_scale+2
  6705  002A1E  C12B  F128         	movff	??_scale+1,?_scale+1
  6706  002A22  C12A  F127         	movff	??_scale,?_scale
  6707  002A26                     l253:
  6708  002A26  0012               	return	
  6709  002A28                     __end_of_scale:
  6710                           	opt stack 0
  6711                           tblptru	equ	0xFF8
  6712                           tblptrh	equ	0xFF7
  6713                           tblptrl	equ	0xFF6
  6714                           tablat	equ	0xFF5
  6715                           prodh	equ	0xFF4
  6716                           prodl	equ	0xFF3
  6717                           postinc0	equ	0xFEE
  6718                           wreg	equ	0xFE8
  6719                           indf2	equ	0xFDF
  6720                           postinc2	equ	0xFDE
  6721                           postdec2	equ	0xFDD
  6722                           fsr2h	equ	0xFDA
  6723                           fsr2l	equ	0xFD9
  6724                           status	equ	0xFD8
  6725                           
  6726 ;; *************** function _fround *****************
  6727 ;; Defined at:
  6728 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  prec            1   39[BANK1 ] unsigned char 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;		None
  6733 ;; Return value:  Size  Location     Type
  6734 ;;                  3   39[BANK1 ] unsigned char 
  6735 ;; Registers used:
  6736 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6742 ;;      Params:         0       0       3       0       0       0       0       0       0
  6743 ;;      Locals:         0       0       6       0       0       0       0       0       0
  6744 ;;      Temps:          0       0       6       0       0       0       0       0       0
  6745 ;;      Totals:         0       0      15       0       0       0       0       0       0
  6746 ;;Total ram usage:       15 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; Hardware stack levels required when called:   11
  6749 ;; This function calls:
  6750 ;;		___ftmul
  6751 ;;		___awdiv
  6752 ;;		___awmod
  6753 ;;		___wmul
  6754 ;; This function is called by:
  6755 ;;		_sprintf
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text16
  6760  002E78                     __ptext16:
  6761                           	opt stack 0
  6762  002E78                     _fround:
  6763                           	opt stack 18
  6764                           
  6765                           ;doprnt.c: 413: if(prec>=110)
  6766                           
  6767                           ;incstack = 0
  6768                           ;incstack = 0
  6769  002E78  0E6D               	movlw	109
  6770  002E7A  0101               	movlb	1	; () banked
  6771  002E7C  0101               	movlb	1	; () banked
  6772  002E7E  6527               	cpfsgt	fround@prec& (0+255),b
  6773  002E80  D0ED               	goto	l10495
  6774                           
  6775                           ; BSR set to: 1
  6776                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6777  002E82  0E00               	movlw	0
  6778  002E84  0101               	movlb	1	; () banked
  6779  002E86  0101               	movlb	1	; () banked
  6780  002E88  6F13               	movwf	(?___wmul+3)& (0+255),b
  6781  002E8A  0E03               	movlw	3
  6782  002E8C  0101               	movlb	1	; () banked
  6783  002E8E  6F12               	movwf	(?___wmul+2)& (0+255),b
  6784  002E90  0E00               	movlw	0
  6785  002E92  0101               	movlb	1	; () banked
  6786  002E94  0101               	movlb	1	; () banked
  6787  002E96  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6788  002E98  0E0A               	movlw	10
  6789  002E9A  0101               	movlb	1	; () banked
  6790  002E9C  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6791  002E9E  0E00               	movlw	0
  6792  002EA0  0101               	movlb	1	; () banked
  6793  002EA2  0101               	movlb	1	; () banked
  6794  002EA4  6F03               	movwf	(?___awmod+3)& (0+255),b
  6795  002EA6  0E64               	movlw	100
  6796  002EA8  0101               	movlb	1	; () banked
  6797  002EAA  6F02               	movwf	(?___awmod+2)& (0+255),b
  6798  002EAC  0101               	movlb	1	; () banked
  6799  002EAE  0101               	movlb	1	; () banked
  6800  002EB0  C127  F100         	movff	fround@prec,?___awmod
  6801  002EB4  0101               	movlb	1	; () banked
  6802  002EB6  0101               	movlb	1	; () banked
  6803  002EB8  6B01               	clrf	(?___awmod+1)& (0+255),b
  6804  002EBA  EC05  F028         	call	___awmod	;wreg free
  6805  002EBE  0101               	movlb	1	; () banked
  6806  002EC0  C100  F107         	movff	?___awmod,?___awdiv
  6807  002EC4  0101               	movlb	1	; () banked
  6808  002EC6  C101  F108         	movff	?___awmod+1,?___awdiv+1
  6809  002ECA  EC6E  F023         	call	___awdiv	;wreg free
  6810  002ECE  0E09               	movlw	9
  6811  002ED0  0101               	movlb	1	; () banked
  6812  002ED2  0101               	movlb	1	; () banked
  6813  002ED4  2507               	addwf	?___awdiv& (0+255),w,b
  6814  002ED6  0101               	movlb	1	; () banked
  6815  002ED8  0101               	movlb	1	; () banked
  6816  002EDA  6F10               	movwf	?___wmul& (0+255),b
  6817  002EDC  0E00               	movlw	0
  6818  002EDE  0101               	movlb	1	; () banked
  6819  002EE0  0101               	movlb	1	; () banked
  6820  002EE2  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6821  002EE4  0101               	movlb	1	; () banked
  6822  002EE6  6F11               	movwf	(?___wmul+1)& (0+255),b
  6823  002EE8  EC5D  F02E         	call	___wmul	;wreg free
  6824  002EEC  0E28               	movlw	low __npowers_
  6825  002EEE  0101               	movlb	1	; () banked
  6826  002EF0  0101               	movlb	1	; () banked
  6827  002EF2  2510               	addwf	?___wmul& (0+255),w,b
  6828  002EF4  6EF6               	movwf	tblptrl,c
  6829  002EF6  0E08               	movlw	high __npowers_
  6830  002EF8  0101               	movlb	1	; () banked
  6831  002EFA  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6832  002EFC  6EF7               	movwf	tblptrh,c
  6833  002EFE  0009               	tblrd		*+
  6834  002F00  CFF5 F12A          	movff	tablat,??_fround
  6835  002F04  0009               	tblrd		*+
  6836  002F06  CFF5 F12B          	movff	tablat,??_fround+1
  6837  002F0A  0009               	tblrd		*+
  6838  002F0C  CFF5 F12C          	movff	tablat,??_fround+2
  6839  002F10  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  6840  002F14  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  6841  002F18  C12A  F119         	movff	??_fround,?___ftmul+3
  6842  002F1C  0E00               	movlw	0
  6843  002F1E  0101               	movlb	1	; () banked
  6844  002F20  0101               	movlb	1	; () banked
  6845  002F22  6F13               	movwf	(?___wmul+3)& (0+255),b
  6846  002F24  0E03               	movlw	3
  6847  002F26  0101               	movlb	1	; () banked
  6848  002F28  6F12               	movwf	(?___wmul+2)& (0+255),b
  6849  002F2A  0E00               	movlw	0
  6850  002F2C  0101               	movlb	1	; () banked
  6851  002F2E  0101               	movlb	1	; () banked
  6852  002F30  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  6853  002F32  0E64               	movlw	100
  6854  002F34  0101               	movlb	1	; () banked
  6855  002F36  6F09               	movwf	(?___awdiv+2)& (0+255),b
  6856  002F38  0101               	movlb	1	; () banked
  6857  002F3A  0101               	movlb	1	; () banked
  6858  002F3C  C127  F107         	movff	fround@prec,?___awdiv
  6859  002F40  0101               	movlb	1	; () banked
  6860  002F42  0101               	movlb	1	; () banked
  6861  002F44  6B08               	clrf	(?___awdiv+1)& (0+255),b
  6862  002F46  EC6E  F023         	call	___awdiv	;wreg free
  6863  002F4A  0E12               	movlw	18
  6864  002F4C  0101               	movlb	1	; () banked
  6865  002F4E  0101               	movlb	1	; () banked
  6866  002F50  2507               	addwf	?___awdiv& (0+255),w,b
  6867  002F52  0101               	movlb	1	; () banked
  6868  002F54  0101               	movlb	1	; () banked
  6869  002F56  6F10               	movwf	?___wmul& (0+255),b
  6870  002F58  0E00               	movlw	0
  6871  002F5A  0101               	movlb	1	; () banked
  6872  002F5C  0101               	movlb	1	; () banked
  6873  002F5E  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  6874  002F60  0101               	movlb	1	; () banked
  6875  002F62  6F11               	movwf	(?___wmul+1)& (0+255),b
  6876  002F64  EC5D  F02E         	call	___wmul	;wreg free
  6877  002F68  0E28               	movlw	low __npowers_
  6878  002F6A  0101               	movlb	1	; () banked
  6879  002F6C  0101               	movlb	1	; () banked
  6880  002F6E  2510               	addwf	?___wmul& (0+255),w,b
  6881  002F70  6EF6               	movwf	tblptrl,c
  6882  002F72  0E08               	movlw	high __npowers_
  6883  002F74  0101               	movlb	1	; () banked
  6884  002F76  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6885  002F78  6EF7               	movwf	tblptrh,c
  6886  002F7A  0009               	tblrd		*+
  6887  002F7C  CFF5 F12D          	movff	tablat,??_fround+3
  6888  002F80  0009               	tblrd		*+
  6889  002F82  CFF5 F12E          	movff	tablat,??_fround+4
  6890  002F86  0009               	tblrd		*+
  6891  002F88  CFF5 F12F          	movff	tablat,??_fround+5
  6892  002F8C  C12F  F118         	movff	??_fround+5,?___ftmul+2
  6893  002F90  C12E  F117         	movff	??_fround+4,?___ftmul+1
  6894  002F94  C12D  F116         	movff	??_fround+3,?___ftmul
  6895  002F98  ECE1  F01C         	call	___ftmul	;wreg free
  6896  002F9C  C118  F135         	movff	?___ftmul+2,_fround$1201+2
  6897  002FA0  C117  F134         	movff	?___ftmul+1,_fround$1201+1
  6898  002FA4  C116  F133         	movff	?___ftmul,_fround$1201
  6899                           
  6900                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6901  002FA8  0E00               	movlw	0
  6902  002FAA  0101               	movlb	1	; () banked
  6903  002FAC  0101               	movlb	1	; () banked
  6904  002FAE  6F13               	movwf	(?___wmul+3)& (0+255),b
  6905  002FB0  0E03               	movlw	3
  6906  002FB2  0101               	movlb	1	; () banked
  6907  002FB4  6F12               	movwf	(?___wmul+2)& (0+255),b
  6908  002FB6  0E00               	movlw	0
  6909  002FB8  0101               	movlb	1	; () banked
  6910  002FBA  0101               	movlb	1	; () banked
  6911  002FBC  6F03               	movwf	(?___awmod+3)& (0+255),b
  6912  002FBE  0E0A               	movlw	10
  6913  002FC0  0101               	movlb	1	; () banked
  6914  002FC2  6F02               	movwf	(?___awmod+2)& (0+255),b
  6915  002FC4  0101               	movlb	1	; () banked
  6916  002FC6  0101               	movlb	1	; () banked
  6917  002FC8  C127  F100         	movff	fround@prec,?___awmod
  6918  002FCC  0101               	movlb	1	; () banked
  6919  002FCE  0101               	movlb	1	; () banked
  6920  002FD0  6B01               	clrf	(?___awmod+1)& (0+255),b
  6921  002FD2  EC05  F028         	call	___awmod	;wreg free
  6922  002FD6  0101               	movlb	1	; () banked
  6923  002FD8  C100  F110         	movff	?___awmod,?___wmul
  6924  002FDC  0101               	movlb	1	; () banked
  6925  002FDE  C101  F111         	movff	?___awmod+1,?___wmul+1
  6926  002FE2  EC5D  F02E         	call	___wmul	;wreg free
  6927  002FE6  0E28               	movlw	low __npowers_
  6928  002FE8  0101               	movlb	1	; () banked
  6929  002FEA  0101               	movlb	1	; () banked
  6930  002FEC  2510               	addwf	?___wmul& (0+255),w,b
  6931  002FEE  6EF6               	movwf	tblptrl,c
  6932  002FF0  0E08               	movlw	high __npowers_
  6933  002FF2  0101               	movlb	1	; () banked
  6934  002FF4  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  6935  002FF6  6EF7               	movwf	tblptrh,c
  6936  002FF8  0009               	tblrd		*+
  6937  002FFA  CFF5 F12A          	movff	tablat,??_fround
  6938  002FFE  0009               	tblrd		*+
  6939  003000  CFF5 F12B          	movff	tablat,??_fround+1
  6940  003004  0009               	tblrd		*+
  6941  003006  CFF5 F12C          	movff	tablat,??_fround+2
  6942  00300A  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  6943  00300E  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  6944  003012  C12A  F119         	movff	??_fround,?___ftmul+3
  6945  003016  C133  F116         	movff	_fround$1201,?___ftmul
  6946  00301A  C134  F117         	movff	_fround$1201+1,?___ftmul+1
  6947  00301E  C135  F118         	movff	_fround$1201+2,?___ftmul+2
  6948  003022  ECE1  F01C         	call	___ftmul	;wreg free
  6949  003026  C118  F132         	movff	?___ftmul+2,_fround$1202+2
  6950  00302A  C117  F131         	movff	?___ftmul+1,_fround$1202+1
  6951  00302E  C116  F130         	movff	?___ftmul,_fround$1202
  6952                           
  6953                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6954  003032  C130  F116         	movff	_fround$1202,?___ftmul
  6955  003036  C131  F117         	movff	_fround$1202+1,?___ftmul+1
  6956  00303A  C132  F118         	movff	_fround$1202+2,?___ftmul+2
  6957  00303E  0E00               	movlw	0
  6958  003040  0101               	movlb	1	; () banked
  6959  003042  0101               	movlb	1	; () banked
  6960  003044  6F19               	movwf	(?___ftmul+3)& (0+255),b
  6961  003046  0E00               	movlw	0
  6962  003048  0101               	movlb	1	; () banked
  6963  00304A  0101               	movlb	1	; () banked
  6964  00304C  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  6965  00304E  0E3F               	movlw	63
  6966  003050  0101               	movlb	1	; () banked
  6967  003052  0101               	movlb	1	; () banked
  6968  003054  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  6969  003056  ECE1  F01C         	call	___ftmul	;wreg free
  6970  00305A  D0BE               	goto	L12
  6971  00305C                     l10495:
  6972                           
  6973                           ;doprnt.c: 415: else if(prec > 10)
  6974  00305C  0E0A               	movlw	10
  6975  00305E  0101               	movlb	1	; () banked
  6976  003060  0101               	movlb	1	; () banked
  6977  003062  6527               	cpfsgt	fround@prec& (0+255),b
  6978  003064  D092               	goto	l10503
  6979                           
  6980                           ; BSR set to: 1
  6981                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6982  003066  0E00               	movlw	0
  6983  003068  0101               	movlb	1	; () banked
  6984  00306A  0101               	movlb	1	; () banked
  6985  00306C  6F13               	movwf	(?___wmul+3)& (0+255),b
  6986  00306E  0E03               	movlw	3
  6987  003070  0101               	movlb	1	; () banked
  6988  003072  6F12               	movwf	(?___wmul+2)& (0+255),b
  6989  003074  0E00               	movlw	0
  6990  003076  0101               	movlb	1	; () banked
  6991  003078  0101               	movlb	1	; () banked
  6992  00307A  6F03               	movwf	(?___awmod+3)& (0+255),b
  6993  00307C  0E0A               	movlw	10
  6994  00307E  0101               	movlb	1	; () banked
  6995  003080  6F02               	movwf	(?___awmod+2)& (0+255),b
  6996  003082  0101               	movlb	1	; () banked
  6997  003084  0101               	movlb	1	; () banked
  6998  003086  C127  F100         	movff	fround@prec,?___awmod
  6999  00308A  0101               	movlb	1	; () banked
  7000  00308C  0101               	movlb	1	; () banked
  7001  00308E  6B01               	clrf	(?___awmod+1)& (0+255),b
  7002  003090  EC05  F028         	call	___awmod	;wreg free
  7003  003094  0101               	movlb	1	; () banked
  7004  003096  C100  F110         	movff	?___awmod,?___wmul
  7005  00309A  0101               	movlb	1	; () banked
  7006  00309C  C101  F111         	movff	?___awmod+1,?___wmul+1
  7007  0030A0  EC5D  F02E         	call	___wmul	;wreg free
  7008  0030A4  0E28               	movlw	low __npowers_
  7009  0030A6  0101               	movlb	1	; () banked
  7010  0030A8  0101               	movlb	1	; () banked
  7011  0030AA  2510               	addwf	?___wmul& (0+255),w,b
  7012  0030AC  6EF6               	movwf	tblptrl,c
  7013  0030AE  0E08               	movlw	high __npowers_
  7014  0030B0  0101               	movlb	1	; () banked
  7015  0030B2  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7016  0030B4  6EF7               	movwf	tblptrh,c
  7017  0030B6  0009               	tblrd		*+
  7018  0030B8  CFF5 F12A          	movff	tablat,??_fround
  7019  0030BC  0009               	tblrd		*+
  7020  0030BE  CFF5 F12B          	movff	tablat,??_fround+1
  7021  0030C2  0009               	tblrd		*+
  7022  0030C4  CFF5 F12C          	movff	tablat,??_fround+2
  7023  0030C8  C12C  F11B         	movff	??_fround+2,?___ftmul+5
  7024  0030CC  C12B  F11A         	movff	??_fround+1,?___ftmul+4
  7025  0030D0  C12A  F119         	movff	??_fround,?___ftmul+3
  7026  0030D4  0E00               	movlw	0
  7027  0030D6  0101               	movlb	1	; () banked
  7028  0030D8  0101               	movlb	1	; () banked
  7029  0030DA  6F13               	movwf	(?___wmul+3)& (0+255),b
  7030  0030DC  0E03               	movlw	3
  7031  0030DE  0101               	movlb	1	; () banked
  7032  0030E0  6F12               	movwf	(?___wmul+2)& (0+255),b
  7033  0030E2  0E00               	movlw	0
  7034  0030E4  0101               	movlb	1	; () banked
  7035  0030E6  0101               	movlb	1	; () banked
  7036  0030E8  6F0A               	movwf	(?___awdiv+3)& (0+255),b
  7037  0030EA  0E0A               	movlw	10
  7038  0030EC  0101               	movlb	1	; () banked
  7039  0030EE  6F09               	movwf	(?___awdiv+2)& (0+255),b
  7040  0030F0  0101               	movlb	1	; () banked
  7041  0030F2  0101               	movlb	1	; () banked
  7042  0030F4  C127  F107         	movff	fround@prec,?___awdiv
  7043  0030F8  0101               	movlb	1	; () banked
  7044  0030FA  0101               	movlb	1	; () banked
  7045  0030FC  6B08               	clrf	(?___awdiv+1)& (0+255),b
  7046  0030FE  EC6E  F023         	call	___awdiv	;wreg free
  7047  003102  0E09               	movlw	9
  7048  003104  0101               	movlb	1	; () banked
  7049  003106  0101               	movlb	1	; () banked
  7050  003108  2507               	addwf	?___awdiv& (0+255),w,b
  7051  00310A  0101               	movlb	1	; () banked
  7052  00310C  0101               	movlb	1	; () banked
  7053  00310E  6F10               	movwf	?___wmul& (0+255),b
  7054  003110  0E00               	movlw	0
  7055  003112  0101               	movlb	1	; () banked
  7056  003114  0101               	movlb	1	; () banked
  7057  003116  2108               	addwfc	(?___awdiv+1)& (0+255),w,b
  7058  003118  0101               	movlb	1	; () banked
  7059  00311A  6F11               	movwf	(?___wmul+1)& (0+255),b
  7060  00311C  EC5D  F02E         	call	___wmul	;wreg free
  7061  003120  0E28               	movlw	low __npowers_
  7062  003122  0101               	movlb	1	; () banked
  7063  003124  0101               	movlb	1	; () banked
  7064  003126  2510               	addwf	?___wmul& (0+255),w,b
  7065  003128  6EF6               	movwf	tblptrl,c
  7066  00312A  0E08               	movlw	high __npowers_
  7067  00312C  0101               	movlb	1	; () banked
  7068  00312E  2111               	addwfc	(?___wmul+1)& (0+255),w,b
  7069  003130  6EF7               	movwf	tblptrh,c
  7070  003132  0009               	tblrd		*+
  7071  003134  CFF5 F12D          	movff	tablat,??_fround+3
  7072  003138  0009               	tblrd		*+
  7073  00313A  CFF5 F12E          	movff	tablat,??_fround+4
  7074  00313E  0009               	tblrd		*+
  7075  003140  CFF5 F12F          	movff	tablat,??_fround+5
  7076  003144  C12F  F118         	movff	??_fround+5,?___ftmul+2
  7077  003148  C12E  F117         	movff	??_fround+4,?___ftmul+1
  7078  00314C  C12D  F116         	movff	??_fround+3,?___ftmul
  7079  003150  ECE1  F01C         	call	___ftmul	;wreg free
  7080  003154  C118  F135         	movff	?___ftmul+2,_fround$1201+2
  7081  003158  C117  F134         	movff	?___ftmul+1,_fround$1201+1
  7082  00315C  C116  F133         	movff	?___ftmul,_fround$1201
  7083                           
  7084                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7085  003160  C133  F116         	movff	_fround$1201,?___ftmul
  7086  003164  C134  F117         	movff	_fround$1201+1,?___ftmul+1
  7087  003168  C135  F118         	movff	_fround$1201+2,?___ftmul+2
  7088  00316C  0E00               	movlw	0
  7089  00316E  0101               	movlb	1	; () banked
  7090  003170  0101               	movlb	1	; () banked
  7091  003172  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7092  003174  0E00               	movlw	0
  7093  003176  0101               	movlb	1	; () banked
  7094  003178  0101               	movlb	1	; () banked
  7095  00317A  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7096  00317C  0E3F               	movlw	63
  7097  00317E  0101               	movlb	1	; () banked
  7098  003180  0101               	movlb	1	; () banked
  7099  003182  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7100  003184  ECE1  F01C         	call	___ftmul	;wreg free
  7101  003188  D027               	goto	L12
  7102  00318A                     l10503:
  7103                           
  7104                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7105  00318A  0101               	movlb	1	; () banked
  7106  00318C  0101               	movlb	1	; () banked
  7107  00318E  5127               	movf	fround@prec& (0+255),w,b
  7108  003190  0D03               	mullw	3
  7109  003192  0E28               	movlw	low __npowers_
  7110  003194  24F3               	addwf	prodl,w,c
  7111  003196  6EF6               	movwf	tblptrl,c
  7112  003198  0E08               	movlw	high __npowers_
  7113  00319A  20F4               	addwfc	prodh,w,c
  7114  00319C  6EF7               	movwf	tblptrh,c
  7115  00319E  0009               	tblrd		*+
  7116  0031A0  CFF5 F12A          	movff	tablat,??_fround
  7117  0031A4  0009               	tblrd		*+
  7118  0031A6  CFF5 F12B          	movff	tablat,??_fround+1
  7119  0031AA  0009               	tblrd		*+
  7120  0031AC  CFF5 F12C          	movff	tablat,??_fround+2
  7121  0031B0  C12C  F118         	movff	??_fround+2,?___ftmul+2
  7122  0031B4  C12B  F117         	movff	??_fround+1,?___ftmul+1
  7123  0031B8  C12A  F116         	movff	??_fround,?___ftmul
  7124  0031BC  0E00               	movlw	0
  7125  0031BE  0101               	movlb	1	; () banked
  7126  0031C0  0101               	movlb	1	; () banked
  7127  0031C2  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7128  0031C4  0E00               	movlw	0
  7129  0031C6  0101               	movlb	1	; () banked
  7130  0031C8  0101               	movlb	1	; () banked
  7131  0031CA  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7132  0031CC  0E3F               	movlw	63
  7133  0031CE  0101               	movlb	1	; () banked
  7134  0031D0  0101               	movlb	1	; () banked
  7135  0031D2  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7136  0031D4  ECE1  F01C         	call	___ftmul	;wreg free
  7137  0031D8                     L12:
  7138  0031D8  C118  F129         	movff	?___ftmul+2,?_fround+2
  7139  0031DC  C117  F128         	movff	?___ftmul+1,?_fround+1
  7140  0031E0  C116  F127         	movff	?___ftmul,?_fround
  7141  0031E4  0012               	return	
  7142  0031E6                     __end_of_fround:
  7143                           	opt stack 0
  7144                           tblptru	equ	0xFF8
  7145                           tblptrh	equ	0xFF7
  7146                           tblptrl	equ	0xFF6
  7147                           tablat	equ	0xFF5
  7148                           prodh	equ	0xFF4
  7149                           prodl	equ	0xFF3
  7150                           postinc0	equ	0xFEE
  7151                           wreg	equ	0xFE8
  7152                           indf2	equ	0xFDF
  7153                           postinc2	equ	0xFDE
  7154                           postdec2	equ	0xFDD
  7155                           fsr2h	equ	0xFDA
  7156                           fsr2l	equ	0xFD9
  7157                           status	equ	0xFD8
  7158                           
  7159 ;; *************** function ___wmul *****************
  7160 ;; Defined at:
  7161 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  multiplier      2   16[BANK1 ] unsigned int 
  7164 ;;  multiplicand    2   18[BANK1 ] unsigned int 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  product         2   20[BANK1 ] unsigned int 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  2   16[BANK1 ] unsigned int 
  7169 ;; Registers used:
  7170 ;;		wreg, status,2, status,0, prodl, prodh
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7176 ;;      Params:         0       0       4       0       0       0       0       0       0
  7177 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7179 ;;      Totals:         0       0       6       0       0       0       0       0       0
  7180 ;;Total ram usage:        6 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    9
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_fround
  7187 ;;		_scale
  7188 ;;		_sprintf
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           	psect	text17
  7193  005CBA                     __ptext17:
  7194                           	opt stack 0
  7195  005CBA                     ___wmul:
  7196                           	opt stack 20
  7197                           
  7198                           ;incstack = 0
  7199                           ;incstack = 0
  7200  005CBA  0101               	movlb	1	; () banked
  7201  005CBC  0101               	movlb	1	; () banked
  7202  005CBE  5110               	movf	___wmul@multiplier& (0+255),w,b
  7203  005CC0  0101               	movlb	1	; () banked
  7204  005CC2  0101               	movlb	1	; () banked
  7205  005CC4  0312               	mulwf	___wmul@multiplicand& (0+255),b
  7206  005CC6  CFF3 F114          	movff	prodl,___wmul@product
  7207  005CCA  CFF4 F115          	movff	prodh,___wmul@product+1
  7208  005CCE  0101               	movlb	1	; () banked
  7209  005CD0  0101               	movlb	1	; () banked
  7210  005CD2  5110               	movf	___wmul@multiplier& (0+255),w,b
  7211  005CD4  0101               	movlb	1	; () banked
  7212  005CD6  0101               	movlb	1	; () banked
  7213  005CD8  0313               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7214  005CDA  CFF3 FFF4          	movff	prodl,prodh
  7215  005CDE  6AF3               	clrf	prodl,c
  7216  005CE0  50F3               	movf	prodl,w,c
  7217  005CE2  0101               	movlb	1	; () banked
  7218  005CE4  0101               	movlb	1	; () banked
  7219  005CE6  2714               	addwf	___wmul@product& (0+255),f,b
  7220  005CE8  50F4               	movf	prodh,w,c
  7221  005CEA  0101               	movlb	1	; () banked
  7222  005CEC  0101               	movlb	1	; () banked
  7223  005CEE  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  7224  005CF0  0101               	movlb	1	; () banked
  7225  005CF2  0101               	movlb	1	; () banked
  7226  005CF4  5111               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7227  005CF6  0101               	movlb	1	; () banked
  7228  005CF8  0101               	movlb	1	; () banked
  7229  005CFA  0312               	mulwf	___wmul@multiplicand& (0+255),b
  7230  005CFC  CFF3 FFF4          	movff	prodl,prodh
  7231  005D00  6AF3               	clrf	prodl,c
  7232  005D02  50F3               	movf	prodl,w,c
  7233  005D04  0101               	movlb	1	; () banked
  7234  005D06  0101               	movlb	1	; () banked
  7235  005D08  2714               	addwf	___wmul@product& (0+255),f,b
  7236  005D0A  50F4               	movf	prodh,w,c
  7237  005D0C  0101               	movlb	1	; () banked
  7238  005D0E  0101               	movlb	1	; () banked
  7239  005D10  2315               	addwfc	(___wmul@product+1)& (0+255),f,b
  7240                           
  7241                           ; BSR set to: 1
  7242  005D12  C114  F110         	movff	___wmul@product,?___wmul
  7243  005D16  C115  F111         	movff	___wmul@product+1,?___wmul+1
  7244                           
  7245                           ; BSR set to: 1
  7246                           
  7247                           ; BSR set to: 1
  7248  005D1A  0012               	return	
  7249  005D1C                     __end_of___wmul:
  7250                           	opt stack 0
  7251                           tblptru	equ	0xFF8
  7252                           tblptrh	equ	0xFF7
  7253                           tblptrl	equ	0xFF6
  7254                           tablat	equ	0xFF5
  7255                           prodh	equ	0xFF4
  7256                           prodl	equ	0xFF3
  7257                           postinc0	equ	0xFEE
  7258                           wreg	equ	0xFE8
  7259                           indf2	equ	0xFDF
  7260                           postinc2	equ	0xFDE
  7261                           postdec2	equ	0xFDD
  7262                           fsr2h	equ	0xFDA
  7263                           fsr2l	equ	0xFD9
  7264                           status	equ	0xFD8
  7265                           
  7266 ;; *************** function ___awmod *****************
  7267 ;; Defined at:
  7268 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  dividend        2    0[BANK1 ] int 
  7271 ;;  divisor         2    2[BANK1 ] int 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  sign            1    6[BANK1 ] unsigned char 
  7274 ;;  counter         1    5[BANK1 ] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  2    0[BANK1 ] int 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7284 ;;      Params:         0       0       4       0       0       0       0       0       0
  7285 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7286 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7287 ;;      Totals:         0       0       7       0       0       0       0       0       0
  7288 ;;Total ram usage:        7 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    9
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_fround
  7295 ;;		_scale
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text18
  7300  00500A                     __ptext18:
  7301                           	opt stack 0
  7302  00500A                     ___awmod:
  7303                           	opt stack 19
  7304                           
  7305                           ; BSR set to: 1
  7306                           ;incstack = 0
  7307                           ;incstack = 0
  7308  00500A  0101               	movlb	1	; () banked
  7309  00500C  6F04               	movwf	??___awmod& (0+255),b
  7310  00500E  0E00               	movlw	0
  7311  005010  0101               	movlb	1	; () banked
  7312  005012  0101               	movlb	1	; () banked
  7313  005014  6F06               	movwf	___awmod@sign& (0+255),b
  7314  005016  0101               	movlb	1	; () banked
  7315  005018  5104               	movf	??___awmod& (0+255),w,b
  7316                           
  7317                           ; BSR set to: 1
  7318  00501A  0101               	movlb	1	; () banked
  7319  00501C  0101               	movlb	1	; () banked
  7320  00501E  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7321  005020  D00F               	goto	l10953
  7322                           
  7323                           ; BSR set to: 1
  7324  005022  0101               	movlb	1	; () banked
  7325  005024  0101               	movlb	1	; () banked
  7326  005026  6D00               	negf	___awmod@dividend& (0+255),b
  7327  005028  0101               	movlb	1	; () banked
  7328  00502A  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  7329  00502C  B0D8               	btfsc	status,0,c
  7330  00502E  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  7331                           
  7332                           ; BSR set to: 1
  7333  005030  0101               	movlb	1	; () banked
  7334  005032  6F04               	movwf	??___awmod& (0+255),b
  7335  005034  0E01               	movlw	1
  7336  005036  0101               	movlb	1	; () banked
  7337  005038  0101               	movlb	1	; () banked
  7338  00503A  6F06               	movwf	___awmod@sign& (0+255),b
  7339  00503C  0101               	movlb	1	; () banked
  7340  00503E  5104               	movf	??___awmod& (0+255),w,b
  7341  005040                     l10953:
  7342                           
  7343                           ; BSR set to: 1
  7344  005040  0101               	movlb	1	; () banked
  7345  005042  0101               	movlb	1	; () banked
  7346  005044  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7347  005046  D007               	goto	l10957
  7348                           
  7349                           ; BSR set to: 1
  7350  005048  0101               	movlb	1	; () banked
  7351  00504A  0101               	movlb	1	; () banked
  7352  00504C  6D02               	negf	___awmod@divisor& (0+255),b
  7353  00504E  0101               	movlb	1	; () banked
  7354  005050  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  7355  005052  B0D8               	btfsc	status,0,c
  7356  005054  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  7357  005056                     l10957:
  7358                           
  7359                           ; BSR set to: 1
  7360  005056  0101               	movlb	1	; () banked
  7361  005058  0101               	movlb	1	; () banked
  7362  00505A  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7363  00505C  1102               	iorwf	___awmod@divisor& (0+255),w,b
  7364  00505E  B4D8               	btfsc	status,2,c
  7365  005060  D03A               	goto	l10973
  7366                           
  7367                           ; BSR set to: 1
  7368  005062  0101               	movlb	1	; () banked
  7369  005064  6F04               	movwf	??___awmod& (0+255),b
  7370  005066  0E01               	movlw	1
  7371  005068  0101               	movlb	1	; () banked
  7372  00506A  0101               	movlb	1	; () banked
  7373  00506C  6F05               	movwf	___awmod@counter& (0+255),b
  7374  00506E  0101               	movlb	1	; () banked
  7375  005070  5104               	movf	??___awmod& (0+255),w,b
  7376  005072  D009               	goto	l10963
  7377  005074                     l10961:
  7378                           
  7379                           ; BSR set to: 1
  7380  005074  0101               	movlb	1	; () banked
  7381  005076  0101               	movlb	1	; () banked
  7382  005078  0101               	movlb	1	; () banked
  7383  00507A  90D8               	bcf	status,0,c
  7384  00507C  3702               	rlcf	___awmod@divisor& (0+255),f,b
  7385  00507E  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7386  005080  0101               	movlb	1	; () banked
  7387  005082  0101               	movlb	1	; () banked
  7388  005084  2B05               	incf	___awmod@counter& (0+255),f,b
  7389  005086                     l10963:
  7390                           
  7391                           ; BSR set to: 1
  7392  005086  0101               	movlb	1	; () banked
  7393  005088  0101               	movlb	1	; () banked
  7394  00508A  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7395  00508C  D7F3               	goto	l10961
  7396  00508E                     l10965:
  7397                           
  7398                           ; BSR set to: 1
  7399  00508E  0101               	movlb	1	; () banked
  7400  005090  0101               	movlb	1	; () banked
  7401  005092  5102               	movf	___awmod@divisor& (0+255),w,b
  7402  005094  0101               	movlb	1	; () banked
  7403  005096  0101               	movlb	1	; () banked
  7404  005098  5D00               	subwf	___awmod@dividend& (0+255),w,b
  7405  00509A  0101               	movlb	1	; () banked
  7406  00509C  0101               	movlb	1	; () banked
  7407  00509E  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7408  0050A0  0101               	movlb	1	; () banked
  7409  0050A2  0101               	movlb	1	; () banked
  7410  0050A4  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7411  0050A6  A0D8               	btfss	status,0,c
  7412  0050A8  D00C               	goto	l10969
  7413                           
  7414                           ; BSR set to: 1
  7415  0050AA  0101               	movlb	1	; () banked
  7416  0050AC  0101               	movlb	1	; () banked
  7417  0050AE  5102               	movf	___awmod@divisor& (0+255),w,b
  7418  0050B0  0101               	movlb	1	; () banked
  7419  0050B2  0101               	movlb	1	; () banked
  7420  0050B4  5F00               	subwf	___awmod@dividend& (0+255),f,b
  7421  0050B6  0101               	movlb	1	; () banked
  7422  0050B8  0101               	movlb	1	; () banked
  7423  0050BA  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  7424  0050BC  0101               	movlb	1	; () banked
  7425  0050BE  0101               	movlb	1	; () banked
  7426  0050C0  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7427  0050C2                     l10969:
  7428                           
  7429                           ; BSR set to: 1
  7430  0050C2  0101               	movlb	1	; () banked
  7431  0050C4  0101               	movlb	1	; () banked
  7432  0050C6  0101               	movlb	1	; () banked
  7433  0050C8  90D8               	bcf	status,0,c
  7434  0050CA  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7435  0050CC  3302               	rrcf	___awmod@divisor& (0+255),f,b
  7436                           
  7437                           ; BSR set to: 1
  7438  0050CE  0101               	movlb	1	; () banked
  7439  0050D0  0101               	movlb	1	; () banked
  7440  0050D2  2F05               	decfsz	___awmod@counter& (0+255),f,b
  7441  0050D4  D7DC               	goto	l10965
  7442  0050D6                     l10973:
  7443                           
  7444                           ; BSR set to: 1
  7445  0050D6  0101               	movlb	1	; () banked
  7446  0050D8  0101               	movlb	1	; () banked
  7447  0050DA  5106               	movf	___awmod@sign& (0+255),w,b
  7448  0050DC  B4D8               	btfsc	status,2,c
  7449  0050DE  D007               	goto	l10977
  7450                           
  7451                           ; BSR set to: 1
  7452  0050E0  0101               	movlb	1	; () banked
  7453  0050E2  0101               	movlb	1	; () banked
  7454  0050E4  6D00               	negf	___awmod@dividend& (0+255),b
  7455  0050E6  0101               	movlb	1	; () banked
  7456  0050E8  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  7457  0050EA  B0D8               	btfsc	status,0,c
  7458  0050EC  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  7459  0050EE                     l10977:
  7460                           
  7461                           ; BSR set to: 1
  7462  0050EE  C100  F100         	movff	___awmod@dividend,?___awmod
  7463  0050F2  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  7464                           
  7465                           ; BSR set to: 1
  7466                           
  7467                           ; BSR set to: 1
  7468  0050F6  0012               	return	
  7469  0050F8                     __end_of___awmod:
  7470                           	opt stack 0
  7471                           tblptru	equ	0xFF8
  7472                           tblptrh	equ	0xFF7
  7473                           tblptrl	equ	0xFF6
  7474                           tablat	equ	0xFF5
  7475                           prodh	equ	0xFF4
  7476                           prodl	equ	0xFF3
  7477                           postinc0	equ	0xFEE
  7478                           wreg	equ	0xFE8
  7479                           indf2	equ	0xFDF
  7480                           postinc2	equ	0xFDE
  7481                           postdec2	equ	0xFDD
  7482                           fsr2h	equ	0xFDA
  7483                           fsr2l	equ	0xFD9
  7484                           status	equ	0xFD8
  7485                           
  7486 ;; *************** function ___awdiv *****************
  7487 ;; Defined at:
  7488 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  dividend        2    7[BANK1 ] int 
  7491 ;;  divisor         2    9[BANK1 ] int 
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;  quotient        2   14[BANK1 ] int 
  7494 ;;  sign            1   13[BANK1 ] unsigned char 
  7495 ;;  counter         1   12[BANK1 ] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  2    7[BANK1 ] int 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7505 ;;      Params:         0       0       4       0       0       0       0       0       0
  7506 ;;      Locals:         0       0       4       0       0       0       0       0       0
  7507 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7508 ;;      Totals:         0       0       9       0       0       0       0       0       0
  7509 ;;Total ram usage:        9 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    9
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_fround
  7516 ;;		_scale
  7517 ;;		_sprintf
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text19
  7522  0046DC                     __ptext19:
  7523                           	opt stack 0
  7524  0046DC                     ___awdiv:
  7525                           	opt stack 20
  7526                           
  7527                           ; BSR set to: 1
  7528                           ;incstack = 0
  7529                           ;incstack = 0
  7530  0046DC  0101               	movlb	1	; () banked
  7531  0046DE  6F0B               	movwf	??___awdiv& (0+255),b
  7532  0046E0  0E00               	movlw	0
  7533  0046E2  0101               	movlb	1	; () banked
  7534  0046E4  0101               	movlb	1	; () banked
  7535  0046E6  6F0D               	movwf	___awdiv@sign& (0+255),b
  7536  0046E8  0101               	movlb	1	; () banked
  7537  0046EA  510B               	movf	??___awdiv& (0+255),w,b
  7538                           
  7539                           ; BSR set to: 1
  7540  0046EC  0101               	movlb	1	; () banked
  7541  0046EE  0101               	movlb	1	; () banked
  7542  0046F0  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7543  0046F2  D00F               	goto	l10909
  7544                           
  7545                           ; BSR set to: 1
  7546  0046F4  0101               	movlb	1	; () banked
  7547  0046F6  0101               	movlb	1	; () banked
  7548  0046F8  6D09               	negf	___awdiv@divisor& (0+255),b
  7549  0046FA  0101               	movlb	1	; () banked
  7550  0046FC  1F0A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7551  0046FE  B0D8               	btfsc	status,0,c
  7552  004700  2B0A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7553                           
  7554                           ; BSR set to: 1
  7555  004702  0101               	movlb	1	; () banked
  7556  004704  6F0B               	movwf	??___awdiv& (0+255),b
  7557  004706  0E01               	movlw	1
  7558  004708  0101               	movlb	1	; () banked
  7559  00470A  0101               	movlb	1	; () banked
  7560  00470C  6F0D               	movwf	___awdiv@sign& (0+255),b
  7561  00470E  0101               	movlb	1	; () banked
  7562  004710  510B               	movf	??___awdiv& (0+255),w,b
  7563  004712                     l10909:
  7564                           
  7565                           ; BSR set to: 1
  7566  004712  0101               	movlb	1	; () banked
  7567  004714  0101               	movlb	1	; () banked
  7568  004716  AF08               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7569  004718  D00B               	goto	l10915
  7570                           
  7571                           ; BSR set to: 1
  7572  00471A  0101               	movlb	1	; () banked
  7573  00471C  0101               	movlb	1	; () banked
  7574  00471E  6D07               	negf	___awdiv@dividend& (0+255),b
  7575  004720  0101               	movlb	1	; () banked
  7576  004722  1F08               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7577  004724  B0D8               	btfsc	status,0,c
  7578  004726  2B08               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7579                           
  7580                           ; BSR set to: 1
  7581  004728  0E01               	movlw	1
  7582  00472A  0101               	movlb	1	; () banked
  7583  00472C  0101               	movlb	1	; () banked
  7584  00472E  1B0D               	xorwf	___awdiv@sign& (0+255),f,b
  7585  004730                     l10915:
  7586                           
  7587                           ; BSR set to: 1
  7588  004730  0E00               	movlw	0
  7589  004732  0101               	movlb	1	; () banked
  7590  004734  0101               	movlb	1	; () banked
  7591  004736  6F0F               	movwf	(___awdiv@quotient+1)& (0+255),b
  7592  004738  0E00               	movlw	0
  7593  00473A  0101               	movlb	1	; () banked
  7594  00473C  6F0E               	movwf	___awdiv@quotient& (0+255),b
  7595                           
  7596                           ; BSR set to: 1
  7597  00473E  0101               	movlb	1	; () banked
  7598  004740  0101               	movlb	1	; () banked
  7599  004742  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7600  004744  1109               	iorwf	___awdiv@divisor& (0+255),w,b
  7601  004746  B4D8               	btfsc	status,2,c
  7602  004748  D043               	goto	l10937
  7603                           
  7604                           ; BSR set to: 1
  7605  00474A  0101               	movlb	1	; () banked
  7606  00474C  6F0B               	movwf	??___awdiv& (0+255),b
  7607  00474E  0E01               	movlw	1
  7608  004750  0101               	movlb	1	; () banked
  7609  004752  0101               	movlb	1	; () banked
  7610  004754  6F0C               	movwf	___awdiv@counter& (0+255),b
  7611  004756  0101               	movlb	1	; () banked
  7612  004758  510B               	movf	??___awdiv& (0+255),w,b
  7613  00475A  D009               	goto	l10923
  7614  00475C                     l10921:
  7615                           
  7616                           ; BSR set to: 1
  7617  00475C  0101               	movlb	1	; () banked
  7618  00475E  0101               	movlb	1	; () banked
  7619  004760  0101               	movlb	1	; () banked
  7620  004762  90D8               	bcf	status,0,c
  7621  004764  3709               	rlcf	___awdiv@divisor& (0+255),f,b
  7622  004766  370A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7623  004768  0101               	movlb	1	; () banked
  7624  00476A  0101               	movlb	1	; () banked
  7625  00476C  2B0C               	incf	___awdiv@counter& (0+255),f,b
  7626  00476E                     l10923:
  7627                           
  7628                           ; BSR set to: 1
  7629  00476E  0101               	movlb	1	; () banked
  7630  004770  0101               	movlb	1	; () banked
  7631  004772  AF0A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7632  004774  D7F3               	goto	l10921
  7633  004776                     l10925:
  7634                           
  7635                           ; BSR set to: 1
  7636  004776  0101               	movlb	1	; () banked
  7637  004778  0101               	movlb	1	; () banked
  7638  00477A  0101               	movlb	1	; () banked
  7639  00477C  90D8               	bcf	status,0,c
  7640  00477E  370E               	rlcf	___awdiv@quotient& (0+255),f,b
  7641  004780  370F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7642                           
  7643                           ; BSR set to: 1
  7644  004782  0101               	movlb	1	; () banked
  7645  004784  0101               	movlb	1	; () banked
  7646  004786  5109               	movf	___awdiv@divisor& (0+255),w,b
  7647  004788  0101               	movlb	1	; () banked
  7648  00478A  0101               	movlb	1	; () banked
  7649  00478C  5D07               	subwf	___awdiv@dividend& (0+255),w,b
  7650  00478E  0101               	movlb	1	; () banked
  7651  004790  0101               	movlb	1	; () banked
  7652  004792  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7653  004794  0101               	movlb	1	; () banked
  7654  004796  0101               	movlb	1	; () banked
  7655  004798  5908               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7656  00479A  A0D8               	btfss	status,0,c
  7657  00479C  D00F               	goto	l10933
  7658                           
  7659                           ; BSR set to: 1
  7660  00479E  0101               	movlb	1	; () banked
  7661  0047A0  0101               	movlb	1	; () banked
  7662  0047A2  5109               	movf	___awdiv@divisor& (0+255),w,b
  7663  0047A4  0101               	movlb	1	; () banked
  7664  0047A6  0101               	movlb	1	; () banked
  7665  0047A8  5F07               	subwf	___awdiv@dividend& (0+255),f,b
  7666  0047AA  0101               	movlb	1	; () banked
  7667  0047AC  0101               	movlb	1	; () banked
  7668  0047AE  510A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7669  0047B0  0101               	movlb	1	; () banked
  7670  0047B2  0101               	movlb	1	; () banked
  7671  0047B4  5B08               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7672                           
  7673                           ; BSR set to: 1
  7674  0047B6  0101               	movlb	1	; () banked
  7675  0047B8  0101               	movlb	1	; () banked
  7676  0047BA  810E               	bsf	___awdiv@quotient& (0+255),0,b
  7677  0047BC                     l10933:
  7678                           
  7679                           ; BSR set to: 1
  7680  0047BC  0101               	movlb	1	; () banked
  7681  0047BE  0101               	movlb	1	; () banked
  7682  0047C0  0101               	movlb	1	; () banked
  7683  0047C2  90D8               	bcf	status,0,c
  7684  0047C4  330A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7685  0047C6  3309               	rrcf	___awdiv@divisor& (0+255),f,b
  7686                           
  7687                           ; BSR set to: 1
  7688  0047C8  0101               	movlb	1	; () banked
  7689  0047CA  0101               	movlb	1	; () banked
  7690  0047CC  2F0C               	decfsz	___awdiv@counter& (0+255),f,b
  7691  0047CE  D7D3               	goto	l10925
  7692  0047D0                     l10937:
  7693                           
  7694                           ; BSR set to: 1
  7695  0047D0  0101               	movlb	1	; () banked
  7696  0047D2  0101               	movlb	1	; () banked
  7697  0047D4  510D               	movf	___awdiv@sign& (0+255),w,b
  7698  0047D6  B4D8               	btfsc	status,2,c
  7699  0047D8  D007               	goto	l10941
  7700                           
  7701                           ; BSR set to: 1
  7702  0047DA  0101               	movlb	1	; () banked
  7703  0047DC  0101               	movlb	1	; () banked
  7704  0047DE  6D0E               	negf	___awdiv@quotient& (0+255),b
  7705  0047E0  0101               	movlb	1	; () banked
  7706  0047E2  1F0F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7707  0047E4  B0D8               	btfsc	status,0,c
  7708  0047E6  2B0F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7709  0047E8                     l10941:
  7710                           
  7711                           ; BSR set to: 1
  7712  0047E8  C10E  F107         	movff	___awdiv@quotient,?___awdiv
  7713  0047EC  C10F  F108         	movff	___awdiv@quotient+1,?___awdiv+1
  7714                           
  7715                           ; BSR set to: 1
  7716                           
  7717                           ; BSR set to: 1
  7718  0047F0  0012               	return	
  7719  0047F2                     __end_of___awdiv:
  7720                           	opt stack 0
  7721                           tblptru	equ	0xFF8
  7722                           tblptrh	equ	0xFF7
  7723                           tblptrl	equ	0xFF6
  7724                           tablat	equ	0xFF5
  7725                           prodh	equ	0xFF4
  7726                           prodl	equ	0xFF3
  7727                           postinc0	equ	0xFEE
  7728                           wreg	equ	0xFE8
  7729                           indf2	equ	0xFDF
  7730                           postinc2	equ	0xFDE
  7731                           postdec2	equ	0xFDD
  7732                           fsr2h	equ	0xFDA
  7733                           fsr2l	equ	0xFD9
  7734                           status	equ	0xFD8
  7735                           
  7736 ;; *************** function _Read_LDR *****************
  7737 ;; Defined at:
  7738 ;;		line 282 in file "main.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;		None
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  analog_readi    3   63[BANK1 ] float 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  3   56[BANK1 ] float 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7752 ;;      Params:         0       0       3       0       0       0       0       0       0
  7753 ;;      Locals:         0       0       3       0       0       0       0       0       0
  7754 ;;      Temps:          0       0       4       0       0       0       0       0       0
  7755 ;;      Totals:         0       0      10       0       0       0       0       0       0
  7756 ;;Total ram usage:       10 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:   11
  7759 ;; This function calls:
  7760 ;;		___ftdiv
  7761 ;;		___ftmul
  7762 ;;		___awtoft
  7763 ;; This function is called by:
  7764 ;;		_main
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text20
  7769  004C30                     __ptext20:
  7770                           	opt stack 0
  7771  004C30                     _Read_LDR:
  7772                           	opt stack 19
  7773                           
  7774                           ;main.c: 283: float analog_reading = 0;
  7775                           
  7776                           ; BSR set to: 1
  7777                           ;incstack = 0
  7778                           ;incstack = 0
  7779  004C30  0E00               	movlw	0
  7780  004C32  0101               	movlb	1	; () banked
  7781  004C34  0101               	movlb	1	; () banked
  7782  004C36  6F3F               	movwf	Read_LDR@analog_reading& (0+255),b
  7783  004C38  0E00               	movlw	0
  7784  004C3A  0101               	movlb	1	; () banked
  7785  004C3C  0101               	movlb	1	; () banked
  7786  004C3E  6F40               	movwf	(Read_LDR@analog_reading+1)& (0+255),b
  7787  004C40  0E00               	movlw	0
  7788  004C42  0101               	movlb	1	; () banked
  7789  004C44  0101               	movlb	1	; () banked
  7790  004C46  6F41               	movwf	(Read_LDR@analog_reading+2)& (0+255),b
  7791                           
  7792                           ; BSR set to: 1
  7793                           ;main.c: 284: ADCON0 |= ((1 << ADON) | (1 << GO));
  7794  004C48  0E00               	movlw	0
  7795  004C4A  B2C2               	btfsc	4034,1,c	;volatile
  7796  004C4C  0E01               	movlw	1
  7797  004C4E  0101               	movlb	1	; () banked
  7798  004C50  6F3B               	movwf	??_Read_LDR& (0+255),b
  7799  004C52  0E01               	movlw	1
  7800  004C54  0101               	movlb	1	; () banked
  7801  004C56  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  7802  004C58  0101               	movlb	1	; () banked
  7803  004C5A  2B3B               	incf	??_Read_LDR& (0+255),f,b
  7804  004C5C  D003               	goto	u8874
  7805  004C5E                     u8875:
  7806  004C5E  0101               	movlb	1	; () banked
  7807  004C60  90D8               	bcf	status,0,c
  7808  004C62  373C               	rlcf	(??_Read_LDR+1)& (0+255),f,b
  7809  004C64                     u8874:
  7810  004C64  0101               	movlb	1	; () banked
  7811  004C66  2F3B               	decfsz	??_Read_LDR& (0+255),f,b
  7812  004C68  D7FA               	goto	u8875
  7813  004C6A  0E00               	movlw	0
  7814  004C6C  B0C2               	btfsc	4034,0,c	;volatile
  7815  004C6E  0E01               	movlw	1
  7816  004C70  0101               	movlb	1	; () banked
  7817  004C72  6F3D               	movwf	(??_Read_LDR+2)& (0+255),b
  7818  004C74  0E01               	movlw	1
  7819  004C76  0101               	movlb	1	; () banked
  7820  004C78  6F3E               	movwf	(??_Read_LDR+3)& (0+255),b
  7821  004C7A  0101               	movlb	1	; () banked
  7822  004C7C  2B3D               	incf	(??_Read_LDR+2)& (0+255),f,b
  7823  004C7E  D003               	goto	u8884
  7824  004C80                     u8885:
  7825  004C80  0101               	movlb	1	; () banked
  7826  004C82  90D8               	bcf	status,0,c
  7827  004C84  373E               	rlcf	(??_Read_LDR+3)& (0+255),f,b
  7828  004C86                     u8884:
  7829  004C86  0101               	movlb	1	; () banked
  7830  004C88  2F3D               	decfsz	(??_Read_LDR+2)& (0+255),f,b
  7831  004C8A  D7FA               	goto	u8885
  7832  004C8C  0101               	movlb	1	; () banked
  7833  004C8E  513E               	movf	(??_Read_LDR+3)& (0+255),w,b
  7834  004C90  0101               	movlb	1	; () banked
  7835  004C92  113C               	iorwf	(??_Read_LDR+1)& (0+255),w,b
  7836  004C94  12C2               	iorwf	4034,f,c	;volatile
  7837  004C96                     l223:
  7838  004C96  B2C2               	btfsc	4034,1,c	;volatile
  7839  004C98  D7FE               	goto	l223
  7840                           
  7841                           ;main.c: 286: analog_reading = (ADRESH * 256) + (ADRESL);
  7842  004C9A  50C4               	movf	4036,w,c	;volatile
  7843  004C9C  0101               	movlb	1	; () banked
  7844  004C9E  6F3C               	movwf	(??_Read_LDR+1)& (0+255),b
  7845  004CA0  6B3B               	clrf	??_Read_LDR& (0+255),b
  7846  004CA2  50C3               	movf	4035,w,c	;volatile
  7847  004CA4  0101               	movlb	1	; () banked
  7848  004CA6  253B               	addwf	??_Read_LDR& (0+255),w,b
  7849  004CA8  0101               	movlb	1	; () banked
  7850  004CAA  0101               	movlb	1	; () banked
  7851  004CAC  6F08               	movwf	?___awtoft& (0+255),b
  7852  004CAE  0E00               	movlw	0
  7853  004CB0  0101               	movlb	1	; () banked
  7854  004CB2  213C               	addwfc	(??_Read_LDR+1)& (0+255),w,b
  7855  004CB4  0101               	movlb	1	; () banked
  7856  004CB6  6F09               	movwf	(?___awtoft+1)& (0+255),b
  7857  004CB8  EC8B  F02D         	call	___awtoft	;wreg free
  7858  004CBC  C10A  F141         	movff	?___awtoft+2,Read_LDR@analog_reading+2
  7859  004CC0  C109  F140         	movff	?___awtoft+1,Read_LDR@analog_reading+1
  7860  004CC4  C108  F13F         	movff	?___awtoft,Read_LDR@analog_reading
  7861                           
  7862                           ;main.c: 287: analog_reading = analog_reading*5/1023;
  7863  004CC8  0E00               	movlw	0
  7864  004CCA  0101               	movlb	1	; () banked
  7865  004CCC  0101               	movlb	1	; () banked
  7866  004CCE  6F19               	movwf	(?___ftmul+3)& (0+255),b
  7867  004CD0  0EA0               	movlw	160
  7868  004CD2  0101               	movlb	1	; () banked
  7869  004CD4  0101               	movlb	1	; () banked
  7870  004CD6  6F1A               	movwf	(?___ftmul+4)& (0+255),b
  7871  004CD8  0E40               	movlw	64
  7872  004CDA  0101               	movlb	1	; () banked
  7873  004CDC  0101               	movlb	1	; () banked
  7874  004CDE  6F1B               	movwf	(?___ftmul+5)& (0+255),b
  7875  004CE0  C13F  F116         	movff	Read_LDR@analog_reading,?___ftmul
  7876  004CE4  C140  F117         	movff	Read_LDR@analog_reading+1,?___ftmul+1
  7877  004CE8  C141  F118         	movff	Read_LDR@analog_reading+2,?___ftmul+2
  7878  004CEC  ECE1  F01C         	call	___ftmul	;wreg free
  7879  004CF0  C118  F129         	movff	?___ftmul+2,?___ftdiv+2
  7880  004CF4  C117  F128         	movff	?___ftmul+1,?___ftdiv+1
  7881  004CF8  C116  F127         	movff	?___ftmul,?___ftdiv
  7882  004CFC  0EC0               	movlw	192
  7883  004CFE  0101               	movlb	1	; () banked
  7884  004D00  0101               	movlb	1	; () banked
  7885  004D02  6F2A               	movwf	(?___ftdiv+3)& (0+255),b
  7886  004D04  0E7F               	movlw	127
  7887  004D06  0101               	movlb	1	; () banked
  7888  004D08  0101               	movlb	1	; () banked
  7889  004D0A  6F2B               	movwf	(?___ftdiv+4)& (0+255),b
  7890  004D0C  0E44               	movlw	68
  7891  004D0E  0101               	movlb	1	; () banked
  7892  004D10  0101               	movlb	1	; () banked
  7893  004D12  6F2C               	movwf	(?___ftdiv+5)& (0+255),b
  7894  004D14  ECA8  F01F         	call	___ftdiv	;wreg free
  7895  004D18  C129  F141         	movff	?___ftdiv+2,Read_LDR@analog_reading+2
  7896  004D1C  C128  F140         	movff	?___ftdiv+1,Read_LDR@analog_reading+1
  7897  004D20  C127  F13F         	movff	?___ftdiv,Read_LDR@analog_reading
  7898                           
  7899                           ;main.c: 288: return analog_reading;
  7900  004D24  C13F  F138         	movff	Read_LDR@analog_reading,?_Read_LDR
  7901  004D28  C140  F139         	movff	Read_LDR@analog_reading+1,?_Read_LDR+1
  7902  004D2C  C141  F13A         	movff	Read_LDR@analog_reading+2,?_Read_LDR+2
  7903  004D30  0012               	return	
  7904  004D32                     __end_of_Read_LDR:
  7905                           	opt stack 0
  7906                           tblptru	equ	0xFF8
  7907                           tblptrh	equ	0xFF7
  7908                           tblptrl	equ	0xFF6
  7909                           tablat	equ	0xFF5
  7910                           prodh	equ	0xFF4
  7911                           prodl	equ	0xFF3
  7912                           postinc0	equ	0xFEE
  7913                           wreg	equ	0xFE8
  7914                           indf2	equ	0xFDF
  7915                           postinc2	equ	0xFDE
  7916                           postdec2	equ	0xFDD
  7917                           fsr2h	equ	0xFDA
  7918                           fsr2l	equ	0xFD9
  7919                           status	equ	0xFD8
  7920                           
  7921 ;; *************** function ___awtoft *****************
  7922 ;; Defined at:
  7923 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  c               2    8[BANK1 ] int 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  sign            1   12[BANK1 ] unsigned char 
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  3    8[BANK1 ] float 
  7930 ;; Registers used:
  7931 ;;		wreg, status,2, status,0, cstack
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7937 ;;      Params:         0       0       3       0       0       0       0       0       0
  7938 ;;      Locals:         0       0       1       0       0       0       0       0       0
  7939 ;;      Temps:          0       0       1       0       0       0       0       0       0
  7940 ;;      Totals:         0       0       5       0       0       0       0       0       0
  7941 ;;Total ram usage:        5 bytes
  7942 ;; Hardware stack levels used:    1
  7943 ;; Hardware stack levels required when called:   10
  7944 ;; This function calls:
  7945 ;;		___ftpack
  7946 ;; This function is called by:
  7947 ;;		_Read_LDR
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           	psect	text21
  7952  005B16                     __ptext21:
  7953                           	opt stack 0
  7954  005B16                     ___awtoft:
  7955                           	opt stack 19
  7956                           
  7957                           ;incstack = 0
  7958                           ;incstack = 0
  7959  005B16  0101               	movlb	1	; () banked
  7960  005B18  6F0B               	movwf	??___awtoft& (0+255),b
  7961  005B1A  0E00               	movlw	0
  7962  005B1C  0101               	movlb	1	; () banked
  7963  005B1E  0101               	movlb	1	; () banked
  7964  005B20  6F0C               	movwf	___awtoft@sign& (0+255),b
  7965  005B22  0101               	movlb	1	; () banked
  7966  005B24  510B               	movf	??___awtoft& (0+255),w,b
  7967                           
  7968                           ; BSR set to: 1
  7969  005B26  0101               	movlb	1	; () banked
  7970  005B28  0101               	movlb	1	; () banked
  7971  005B2A  AF09               	btfss	(___awtoft@c+1)& (0+255),7,b
  7972  005B2C  D00F               	goto	l10989
  7973                           
  7974                           ; BSR set to: 1
  7975  005B2E  0101               	movlb	1	; () banked
  7976  005B30  0101               	movlb	1	; () banked
  7977  005B32  6D08               	negf	___awtoft@c& (0+255),b
  7978  005B34  0101               	movlb	1	; () banked
  7979  005B36  1F09               	comf	(___awtoft@c+1)& (0+255),f,b
  7980  005B38  B0D8               	btfsc	status,0,c
  7981  005B3A  2B09               	incf	(___awtoft@c+1)& (0+255),f,b
  7982                           
  7983                           ; BSR set to: 1
  7984  005B3C  0101               	movlb	1	; () banked
  7985  005B3E  6F0B               	movwf	??___awtoft& (0+255),b
  7986  005B40  0E01               	movlw	1
  7987  005B42  0101               	movlb	1	; () banked
  7988  005B44  0101               	movlb	1	; () banked
  7989  005B46  6F0C               	movwf	___awtoft@sign& (0+255),b
  7990  005B48  0101               	movlb	1	; () banked
  7991  005B4A  510B               	movf	??___awtoft& (0+255),w,b
  7992  005B4C                     l10989:
  7993                           
  7994                           ; BSR set to: 1
  7995  005B4C  0101               	movlb	1	; () banked
  7996  005B4E  0101               	movlb	1	; () banked
  7997  005B50  C108  F100         	movff	___awtoft@c,?___ftpack
  7998  005B54  0101               	movlb	1	; () banked
  7999  005B56  0101               	movlb	1	; () banked
  8000  005B58  C109  F101         	movff	___awtoft@c+1,?___ftpack+1
  8001  005B5C  0101               	movlb	1	; () banked
  8002  005B5E  0101               	movlb	1	; () banked
  8003  005B60  6B02               	clrf	(?___ftpack+2)& (0+255),b
  8004  005B62  0101               	movlb	1	; () banked
  8005  005B64  6F0B               	movwf	??___awtoft& (0+255),b
  8006  005B66  0E8E               	movlw	142
  8007  005B68  0101               	movlb	1	; () banked
  8008  005B6A  0101               	movlb	1	; () banked
  8009  005B6C  6F03               	movwf	(?___ftpack+3)& (0+255),b
  8010  005B6E  0101               	movlb	1	; () banked
  8011  005B70  510B               	movf	??___awtoft& (0+255),w,b
  8012  005B72  C10C  F104         	movff	___awtoft@sign,?___ftpack+4
  8013  005B76  EC30  F022         	call	___ftpack	;wreg free
  8014  005B7A  C102  F10A         	movff	?___ftpack+2,?___awtoft+2
  8015  005B7E  C101  F109         	movff	?___ftpack+1,?___awtoft+1
  8016  005B82  C100  F108         	movff	?___ftpack,?___awtoft
  8017  005B86  0012               	return	
  8018  005B88                     __end_of___awtoft:
  8019                           	opt stack 0
  8020                           tblptru	equ	0xFF8
  8021                           tblptrh	equ	0xFF7
  8022                           tblptrl	equ	0xFF6
  8023                           tablat	equ	0xFF5
  8024                           prodh	equ	0xFF4
  8025                           prodl	equ	0xFF3
  8026                           postinc0	equ	0xFEE
  8027                           wreg	equ	0xFE8
  8028                           indf2	equ	0xFDF
  8029                           postinc2	equ	0xFDE
  8030                           postdec2	equ	0xFDD
  8031                           fsr2h	equ	0xFDA
  8032                           fsr2l	equ	0xFD9
  8033                           status	equ	0xFD8
  8034                           
  8035 ;; *************** function ___ftmul *****************
  8036 ;; Defined at:
  8037 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  f1              3   22[BANK1 ] float 
  8040 ;;  f2              3   25[BANK1 ] float 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  f3_as_produc    3   34[BANK1 ] unsigned um
  8043 ;;  sign            1   38[BANK1 ] unsigned char 
  8044 ;;  cntr            1   37[BANK1 ] unsigned char 
  8045 ;;  exp             1   33[BANK1 ] unsigned char 
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  3   22[BANK1 ] float 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0, cstack
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8055 ;;      Params:         0       0       6       0       0       0       0       0       0
  8056 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8057 ;;      Temps:          0       0       5       0       0       0       0       0       0
  8058 ;;      Totals:         0       0      17       0       0       0       0       0       0
  8059 ;;Total ram usage:       17 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:   10
  8062 ;; This function calls:
  8063 ;;		___ftpack
  8064 ;; This function is called by:
  8065 ;;		_Read_LDR
  8066 ;;		_fround
  8067 ;;		_scale
  8068 ;;		_sprintf
  8069 ;;		___asftmul
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text22
  8074  0039C2                     __ptext22:
  8075                           	opt stack 0
  8076  0039C2                     ___ftmul:
  8077                           	opt stack 19
  8078                           
  8079                           ;incstack = 0
  8080                           ;incstack = 0
  8081  0039C2  0E0F               	movlw	15
  8082  0039C4  0101               	movlb	1	; () banked
  8083  0039C6  6F1C               	movwf	??___ftmul& (0+255),b
  8084  0039C8  0101               	movlb	1	; () banked
  8085  0039CA  C116  F11D         	movff	___ftmul@f1,??___ftmul+1
  8086  0039CE  0101               	movlb	1	; () banked
  8087  0039D0  C117  F11E         	movff	___ftmul@f1+1,??___ftmul+2
  8088  0039D4  0101               	movlb	1	; () banked
  8089  0039D6  C118  F11F         	movff	___ftmul@f1+2,??___ftmul+3
  8090  0039DA  0101               	movlb	1	; () banked
  8091  0039DC  291C               	incf	??___ftmul& (0+255),w,b
  8092  0039DE  0101               	movlb	1	; () banked
  8093  0039E0  6F20               	movwf	(??___ftmul+4)& (0+255),b
  8094  0039E2  D005               	goto	u10060
  8095  0039E4                     u10065:
  8096  0039E4  0101               	movlb	1	; () banked
  8097  0039E6  90D8               	bcf	status,0,c
  8098  0039E8  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  8099  0039EA  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  8100  0039EC  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  8101  0039EE                     u10060:
  8102  0039EE  0101               	movlb	1	; () banked
  8103  0039F0  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  8104  0039F2  D7F8               	goto	u10065
  8105  0039F4  0101               	movlb	1	; () banked
  8106  0039F6  511D               	movf	(??___ftmul+1)& (0+255),w,b
  8107  0039F8  0101               	movlb	1	; () banked
  8108  0039FA  0101               	movlb	1	; () banked
  8109  0039FC  6F21               	movwf	___ftmul@exp& (0+255),b
  8110  0039FE  0101               	movlb	1	; () banked
  8111  003A00  6721               	tstfsz	___ftmul@exp& (0+255),b
  8112  003A02  D001               	goto	l10849
  8113  003A04  D021               	goto	u10090
  8114  003A06                     l10849:
  8115                           
  8116                           ; BSR set to: 1
  8117  003A06  0E0F               	movlw	15
  8118  003A08  0101               	movlb	1	; () banked
  8119  003A0A  6F1C               	movwf	??___ftmul& (0+255),b
  8120  003A0C  0101               	movlb	1	; () banked
  8121  003A0E  C119  F11D         	movff	___ftmul@f2,??___ftmul+1
  8122  003A12  0101               	movlb	1	; () banked
  8123  003A14  C11A  F11E         	movff	___ftmul@f2+1,??___ftmul+2
  8124  003A18  0101               	movlb	1	; () banked
  8125  003A1A  C11B  F11F         	movff	___ftmul@f2+2,??___ftmul+3
  8126  003A1E  0101               	movlb	1	; () banked
  8127  003A20  291C               	incf	??___ftmul& (0+255),w,b
  8128  003A22  0101               	movlb	1	; () banked
  8129  003A24  6F20               	movwf	(??___ftmul+4)& (0+255),b
  8130  003A26  D005               	goto	u10080
  8131  003A28                     u10085:
  8132  003A28  0101               	movlb	1	; () banked
  8133  003A2A  90D8               	bcf	status,0,c
  8134  003A2C  331F               	rrcf	(??___ftmul+3)& (0+255),f,b
  8135  003A2E  331E               	rrcf	(??___ftmul+2)& (0+255),f,b
  8136  003A30  331D               	rrcf	(??___ftmul+1)& (0+255),f,b
  8137  003A32                     u10080:
  8138  003A32  0101               	movlb	1	; () banked
  8139  003A34  2F20               	decfsz	(??___ftmul+4)& (0+255),f,b
  8140  003A36  D7F8               	goto	u10085
  8141  003A38  0101               	movlb	1	; () banked
  8142  003A3A  511D               	movf	(??___ftmul+1)& (0+255),w,b
  8143  003A3C  0101               	movlb	1	; () banked
  8144  003A3E  0101               	movlb	1	; () banked
  8145  003A40  6F26               	movwf	___ftmul@sign& (0+255),b
  8146  003A42  0101               	movlb	1	; () banked
  8147  003A44  6726               	tstfsz	___ftmul@sign& (0+255),b
  8148  003A46  D00D               	goto	l10855
  8149  003A48                     u10090:
  8150                           
  8151                           ; BSR set to: 1
  8152  003A48  0E00               	movlw	0
  8153  003A4A  0101               	movlb	1	; () banked
  8154  003A4C  0101               	movlb	1	; () banked
  8155  003A4E  6F16               	movwf	?___ftmul& (0+255),b
  8156  003A50  0E00               	movlw	0
  8157  003A52  0101               	movlb	1	; () banked
  8158  003A54  0101               	movlb	1	; () banked
  8159  003A56  6F17               	movwf	(?___ftmul+1)& (0+255),b
  8160  003A58  0E00               	movlw	0
  8161  003A5A  0101               	movlb	1	; () banked
  8162  003A5C  0101               	movlb	1	; () banked
  8163  003A5E  6F18               	movwf	(?___ftmul+2)& (0+255),b
  8164  003A60  D0A6               	goto	l774
  8165  003A62                     l10855:
  8166                           
  8167                           ; BSR set to: 1
  8168  003A62  0101               	movlb	1	; () banked
  8169  003A64  0101               	movlb	1	; () banked
  8170  003A66  5126               	movf	___ftmul@sign& (0+255),w,b
  8171  003A68  0F7B               	addlw	123
  8172  003A6A  0101               	movlb	1	; () banked
  8173  003A6C  0101               	movlb	1	; () banked
  8174  003A6E  2721               	addwf	___ftmul@exp& (0+255),f,b
  8175                           
  8176                           ; BSR set to: 1
  8177  003A70  C118  F126         	movff	___ftmul@f1+2,___ftmul@sign
  8178  003A74  0101               	movlb	1	; () banked
  8179  003A76  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8180  003A78  0101               	movlb	1	; () banked
  8181  003A7A  0101               	movlb	1	; () banked
  8182  003A7C  1B26               	xorwf	___ftmul@sign& (0+255),f,b
  8183  003A7E  0E80               	movlw	128
  8184  003A80  0101               	movlb	1	; () banked
  8185  003A82  0101               	movlb	1	; () banked
  8186  003A84  1726               	andwf	___ftmul@sign& (0+255),f,b
  8187                           
  8188                           ; BSR set to: 1
  8189  003A86  0101               	movlb	1	; () banked
  8190  003A88  0101               	movlb	1	; () banked
  8191  003A8A  8F17               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8192                           
  8193                           ; BSR set to: 1
  8194  003A8C  0101               	movlb	1	; () banked
  8195  003A8E  0101               	movlb	1	; () banked
  8196  003A90  8F1A               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8197                           
  8198                           ; BSR set to: 1
  8199  003A92  0EFF               	movlw	255
  8200  003A94  0101               	movlb	1	; () banked
  8201  003A96  0101               	movlb	1	; () banked
  8202  003A98  1719               	andwf	___ftmul@f2& (0+255),f,b
  8203  003A9A  0EFF               	movlw	255
  8204  003A9C  0101               	movlb	1	; () banked
  8205  003A9E  0101               	movlb	1	; () banked
  8206  003AA0  171A               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8207  003AA2  0E00               	movlw	0
  8208  003AA4  0101               	movlb	1	; () banked
  8209  003AA6  0101               	movlb	1	; () banked
  8210  003AA8  171B               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8211                           
  8212                           ; BSR set to: 1
  8213  003AAA  0E00               	movlw	0
  8214  003AAC  0101               	movlb	1	; () banked
  8215  003AAE  0101               	movlb	1	; () banked
  8216  003AB0  6F22               	movwf	___ftmul@f3_as_product& (0+255),b
  8217  003AB2  0E00               	movlw	0
  8218  003AB4  0101               	movlb	1	; () banked
  8219  003AB6  0101               	movlb	1	; () banked
  8220  003AB8  6F23               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8221  003ABA  0E00               	movlw	0
  8222  003ABC  0101               	movlb	1	; () banked
  8223  003ABE  0101               	movlb	1	; () banked
  8224  003AC0  6F24               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8225                           
  8226                           ; BSR set to: 1
  8227  003AC2  0101               	movlb	1	; () banked
  8228  003AC4  6F1C               	movwf	??___ftmul& (0+255),b
  8229  003AC6  0E07               	movlw	7
  8230  003AC8  0101               	movlb	1	; () banked
  8231  003ACA  0101               	movlb	1	; () banked
  8232  003ACC  6F25               	movwf	___ftmul@cntr& (0+255),b
  8233  003ACE  0101               	movlb	1	; () banked
  8234  003AD0  511C               	movf	??___ftmul& (0+255),w,b
  8235  003AD2                     l10869:
  8236                           
  8237                           ; BSR set to: 1
  8238  003AD2  0101               	movlb	1	; () banked
  8239  003AD4  0101               	movlb	1	; () banked
  8240  003AD6  A116               	btfss	___ftmul@f1& (0+255),0,b
  8241  003AD8  D012               	goto	l10873
  8242                           
  8243                           ; BSR set to: 1
  8244  003ADA  0101               	movlb	1	; () banked
  8245  003ADC  0101               	movlb	1	; () banked
  8246  003ADE  5119               	movf	___ftmul@f2& (0+255),w,b
  8247  003AE0  0101               	movlb	1	; () banked
  8248  003AE2  0101               	movlb	1	; () banked
  8249  003AE4  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8250  003AE6  0101               	movlb	1	; () banked
  8251  003AE8  0101               	movlb	1	; () banked
  8252  003AEA  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8253  003AEC  0101               	movlb	1	; () banked
  8254  003AEE  0101               	movlb	1	; () banked
  8255  003AF0  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8256  003AF2  0101               	movlb	1	; () banked
  8257  003AF4  0101               	movlb	1	; () banked
  8258  003AF6  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8259  003AF8  0101               	movlb	1	; () banked
  8260  003AFA  0101               	movlb	1	; () banked
  8261  003AFC  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8262  003AFE                     l10873:
  8263                           
  8264                           ; BSR set to: 1
  8265  003AFE  0101               	movlb	1	; () banked
  8266  003B00  90D8               	bcf	status,0,c
  8267  003B02  0101               	movlb	1	; () banked
  8268  003B04  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8269  003B06  0101               	movlb	1	; () banked
  8270  003B08  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8271  003B0A  0101               	movlb	1	; () banked
  8272  003B0C  3316               	rrcf	___ftmul@f1& (0+255),f,b
  8273  003B0E  0101               	movlb	1	; () banked
  8274  003B10  90D8               	bcf	status,0,c
  8275  003B12  0101               	movlb	1	; () banked
  8276  003B14  3719               	rlcf	___ftmul@f2& (0+255),f,b
  8277  003B16  0101               	movlb	1	; () banked
  8278  003B18  371A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8279  003B1A  0101               	movlb	1	; () banked
  8280  003B1C  371B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8281                           
  8282                           ; BSR set to: 1
  8283  003B1E  0101               	movlb	1	; () banked
  8284  003B20  0101               	movlb	1	; () banked
  8285  003B22  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  8286  003B24  D7D6               	goto	l10869
  8287                           
  8288                           ; BSR set to: 1
  8289                           
  8290                           ; BSR set to: 1
  8291  003B26  0101               	movlb	1	; () banked
  8292  003B28  6F1C               	movwf	??___ftmul& (0+255),b
  8293  003B2A  0E09               	movlw	9
  8294  003B2C  0101               	movlb	1	; () banked
  8295  003B2E  0101               	movlb	1	; () banked
  8296  003B30  6F25               	movwf	___ftmul@cntr& (0+255),b
  8297  003B32  0101               	movlb	1	; () banked
  8298  003B34  511C               	movf	??___ftmul& (0+255),w,b
  8299  003B36                     l10879:
  8300                           
  8301                           ; BSR set to: 1
  8302  003B36  0101               	movlb	1	; () banked
  8303  003B38  0101               	movlb	1	; () banked
  8304  003B3A  A116               	btfss	___ftmul@f1& (0+255),0,b
  8305  003B3C  D012               	goto	l10883
  8306                           
  8307                           ; BSR set to: 1
  8308  003B3E  0101               	movlb	1	; () banked
  8309  003B40  0101               	movlb	1	; () banked
  8310  003B42  5119               	movf	___ftmul@f2& (0+255),w,b
  8311  003B44  0101               	movlb	1	; () banked
  8312  003B46  0101               	movlb	1	; () banked
  8313  003B48  2722               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8314  003B4A  0101               	movlb	1	; () banked
  8315  003B4C  0101               	movlb	1	; () banked
  8316  003B4E  511A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8317  003B50  0101               	movlb	1	; () banked
  8318  003B52  0101               	movlb	1	; () banked
  8319  003B54  2323               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8320  003B56  0101               	movlb	1	; () banked
  8321  003B58  0101               	movlb	1	; () banked
  8322  003B5A  511B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8323  003B5C  0101               	movlb	1	; () banked
  8324  003B5E  0101               	movlb	1	; () banked
  8325  003B60  2324               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8326  003B62                     l10883:
  8327                           
  8328                           ; BSR set to: 1
  8329  003B62  0101               	movlb	1	; () banked
  8330  003B64  90D8               	bcf	status,0,c
  8331  003B66  0101               	movlb	1	; () banked
  8332  003B68  3318               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8333  003B6A  0101               	movlb	1	; () banked
  8334  003B6C  3317               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8335  003B6E  0101               	movlb	1	; () banked
  8336  003B70  3316               	rrcf	___ftmul@f1& (0+255),f,b
  8337  003B72  0101               	movlb	1	; () banked
  8338  003B74  90D8               	bcf	status,0,c
  8339  003B76  0101               	movlb	1	; () banked
  8340  003B78  3324               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8341  003B7A  0101               	movlb	1	; () banked
  8342  003B7C  3323               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8343  003B7E  0101               	movlb	1	; () banked
  8344  003B80  3322               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8345                           
  8346                           ; BSR set to: 1
  8347  003B82  0101               	movlb	1	; () banked
  8348  003B84  0101               	movlb	1	; () banked
  8349  003B86  2F25               	decfsz	___ftmul@cntr& (0+255),f,b
  8350  003B88  D7D6               	goto	l10879
  8351                           
  8352                           ; BSR set to: 1
  8353                           
  8354                           ; BSR set to: 1
  8355  003B8A  C122  F100         	movff	___ftmul@f3_as_product,?___ftpack
  8356  003B8E  C123  F101         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  8357  003B92  C124  F102         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  8358  003B96  C121  F103         	movff	___ftmul@exp,?___ftpack+3
  8359  003B9A  C126  F104         	movff	___ftmul@sign,?___ftpack+4
  8360  003B9E  EC30  F022         	call	___ftpack	;wreg free
  8361  003BA2  C102  F118         	movff	?___ftpack+2,?___ftmul+2
  8362  003BA6  C101  F117         	movff	?___ftpack+1,?___ftmul+1
  8363  003BAA  C100  F116         	movff	?___ftpack,?___ftmul
  8364  003BAE                     l774:
  8365  003BAE  0012               	return	
  8366  003BB0                     __end_of___ftmul:
  8367                           	opt stack 0
  8368                           tblptru	equ	0xFF8
  8369                           tblptrh	equ	0xFF7
  8370                           tblptrl	equ	0xFF6
  8371                           tablat	equ	0xFF5
  8372                           prodh	equ	0xFF4
  8373                           prodl	equ	0xFF3
  8374                           postinc0	equ	0xFEE
  8375                           wreg	equ	0xFE8
  8376                           indf2	equ	0xFDF
  8377                           postinc2	equ	0xFDE
  8378                           postdec2	equ	0xFDD
  8379                           fsr2h	equ	0xFDA
  8380                           fsr2l	equ	0xFD9
  8381                           status	equ	0xFD8
  8382                           
  8383 ;; *************** function _Obtener_Distancia *****************
  8384 ;; Defined at:
  8385 ;;		line 242 in file "main.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  Duracion        2   14[BANK1 ] unsigned int 
  8390 ;;  Distancia       2   12[BANK1 ] unsigned int 
  8391 ;;  Timer_1         2   10[BANK1 ] unsigned int 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  2    8[BANK1 ] unsigned int 
  8394 ;; Registers used:
  8395 ;;		wreg, status,2, status,0, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8401 ;;      Params:         0       0       2       0       0       0       0       0       0
  8402 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8404 ;;      Totals:         0       0       8       0       0       0       0       0       0
  8405 ;;Total ram usage:        8 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:   10
  8408 ;; This function calls:
  8409 ;;		___lwdiv
  8410 ;; This function is called by:
  8411 ;;		_main
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text23
  8416  00543E                     __ptext23:
  8417                           	opt stack 0
  8418  00543E                     _Obtener_Distancia:
  8419                           	opt stack 20
  8420                           
  8421                           ;main.c: 243: uint16_t Duracion;
  8422                           ;main.c: 244: uint16_t Distancia;
  8423                           ;main.c: 245: uint16_t Timer_1;
  8424                           ;main.c: 247: LATAbits.LATA1=1;
  8425                           
  8426                           ;incstack = 0
  8427                           ;incstack = 0
  8428  00543E  8289               	bsf	3977,1,c	;volatile
  8429                           
  8430                           ;main.c: 248: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8431  005440  0E06               	movlw	6
  8432  005442                     u11107:
  8433  005442  2EE8               	decfsz	wreg,f,c
  8434  005444  D7FE               	goto	u11107
  8435  005446  D000               	nop2		;nop
  8436                           
  8437                           ;main.c: 249: LATAbits.LATA1=0;
  8438  005448  9289               	bcf	3977,1,c	;volatile
  8439  00544A                     l207:
  8440  00544A  A480               	btfss	3968,2,c	;volatile
  8441  00544C  D7FE               	goto	l207
  8442                           
  8443                           ;main.c: 251: T1CONbits.TMR1ON=1;
  8444  00544E  80CD               	bsf	4045,0,c	;volatile
  8445  005450                     l210:
  8446  005450  B480               	btfsc	3968,2,c	;volatile
  8447  005452  D7FE               	goto	l210
  8448                           
  8449                           ;main.c: 253: T1CONbits.TMR1ON=0;
  8450  005454  90CD               	bcf	4045,0,c	;volatile
  8451                           
  8452                           ;main.c: 254: Timer_1=TMR1;
  8453  005456  CFCE F10A          	movff	4046,Obtener_Distancia@Timer_1	;volatile
  8454  00545A  CFCF F10B          	movff	4047,Obtener_Distancia@Timer_1+1	;volatile
  8455                           
  8456                           ;main.c: 255: Duracion=Timer_1/2;
  8457  00545E  90D8               	bcf	status,0,c
  8458  005460  0101               	movlb	1	; () banked
  8459  005462  0101               	movlb	1	; () banked
  8460  005464  310B               	rrcf	(Obtener_Distancia@Timer_1+1)& (0+255),w,b
  8461  005466  0101               	movlb	1	; () banked
  8462  005468  0101               	movlb	1	; () banked
  8463  00546A  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  8464  00546C  0101               	movlb	1	; () banked
  8465  00546E  0101               	movlb	1	; () banked
  8466  005470  310A               	rrcf	Obtener_Distancia@Timer_1& (0+255),w,b
  8467  005472  0101               	movlb	1	; () banked
  8468  005474  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  8469                           
  8470                           ;main.c: 256: if(Duracion<=23200)
  8471  005476  0EA1               	movlw	161
  8472  005478  0101               	movlb	1	; () banked
  8473  00547A  0101               	movlb	1	; () banked
  8474  00547C  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  8475  00547E  0E5A               	movlw	90
  8476  005480  0101               	movlb	1	; () banked
  8477  005482  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  8478  005484  B0D8               	btfsc	status,0,c
  8479  005486  D014               	goto	l10123
  8480                           
  8481                           ; BSR set to: 1
  8482                           ;main.c: 257: {
  8483                           ;main.c: 258: Distancia=Duracion/58;
  8484  005488  C10E  F100         	movff	Obtener_Distancia@Duracion,?___lwdiv
  8485  00548C  C10F  F101         	movff	Obtener_Distancia@Duracion+1,?___lwdiv+1
  8486  005490  0E00               	movlw	0
  8487  005492  0101               	movlb	1	; () banked
  8488  005494  0101               	movlb	1	; () banked
  8489  005496  6F03               	movwf	(?___lwdiv+3)& (0+255),b
  8490  005498  0E3A               	movlw	58
  8491  00549A  0101               	movlb	1	; () banked
  8492  00549C  6F02               	movwf	(?___lwdiv+2)& (0+255),b
  8493  00549E  ECCC  F02A         	call	___lwdiv	;wreg free
  8494  0054A2  0101               	movlb	1	; () banked
  8495  0054A4  C100  F10C         	movff	?___lwdiv,Obtener_Distancia@Distancia
  8496  0054A8  0101               	movlb	1	; () banked
  8497  0054AA  C101  F10D         	movff	?___lwdiv+1,Obtener_Distancia@Distancia+1
  8498                           
  8499                           ;main.c: 259: }
  8500  0054AE  D00E               	goto	l214
  8501  0054B0                     l10123:
  8502                           
  8503                           ; BSR set to: 1
  8504                           ;main.c: 260: else if(Duracion<116)
  8505  0054B0  0E74               	movlw	116
  8506  0054B2  0101               	movlb	1	; () banked
  8507  0054B4  0101               	movlb	1	; () banked
  8508  0054B6  5D0E               	subwf	Obtener_Distancia@Duracion& (0+255),w,b
  8509  0054B8  0E00               	movlw	0
  8510  0054BA  0101               	movlb	1	; () banked
  8511  0054BC  590F               	subwfb	(Obtener_Distancia@Duracion+1)& (0+255),w,b
  8512                           
  8513                           ; BSR set to: 1
  8514                           ;main.c: 264: else
  8515                           ;main.c: 265: {
  8516                           ;main.c: 266: Distancia=0;
  8517                           
  8518                           ; BSR set to: 1
  8519                           
  8520                           ;main.c: 263: }
  8521                           
  8522                           ; BSR set to: 1
  8523                           ;main.c: 261: {
  8524                           ;main.c: 262: Distancia=0;
  8525  0054BE  0E00               	movlw	0
  8526  0054C0  0101               	movlb	1	; () banked
  8527  0054C2  0101               	movlb	1	; () banked
  8528  0054C4  6F0D               	movwf	(Obtener_Distancia@Distancia+1)& (0+255),b
  8529  0054C6  0E00               	movlw	0
  8530  0054C8  0101               	movlb	1	; () banked
  8531  0054CA  6F0C               	movwf	Obtener_Distancia@Distancia& (0+255),b
  8532  0054CC                     l214:
  8533                           
  8534                           ; BSR set to: 1
  8535                           ;main.c: 267: }
  8536                           ;main.c: 268: Duracion=0;
  8537  0054CC  0E00               	movlw	0
  8538  0054CE  0101               	movlb	1	; () banked
  8539  0054D0  0101               	movlb	1	; () banked
  8540  0054D2  6F0F               	movwf	(Obtener_Distancia@Duracion+1)& (0+255),b
  8541  0054D4  0E00               	movlw	0
  8542  0054D6  0101               	movlb	1	; () banked
  8543  0054D8  6F0E               	movwf	Obtener_Distancia@Duracion& (0+255),b
  8544                           
  8545                           ;main.c: 269: TMR1=0;
  8546  0054DA  0E00               	movlw	0
  8547  0054DC  6ECF               	movwf	4047,c	;volatile
  8548  0054DE  0E00               	movlw	0
  8549  0054E0  6ECE               	movwf	4046,c	;volatile
  8550                           
  8551                           ; BSR set to: 1
  8552                           ;main.c: 271: return Distancia;
  8553  0054E2  C10C  F108         	movff	Obtener_Distancia@Distancia,?_Obtener_Distancia
  8554  0054E6  C10D  F109         	movff	Obtener_Distancia@Distancia+1,?_Obtener_Distancia+1
  8555                           
  8556                           ; BSR set to: 1
  8557                           
  8558                           ; BSR set to: 1
  8559  0054EA  0012               	return	
  8560  0054EC                     __end_of_Obtener_Distancia:
  8561                           	opt stack 0
  8562                           tblptru	equ	0xFF8
  8563                           tblptrh	equ	0xFF7
  8564                           tblptrl	equ	0xFF6
  8565                           tablat	equ	0xFF5
  8566                           prodh	equ	0xFF4
  8567                           prodl	equ	0xFF3
  8568                           postinc0	equ	0xFEE
  8569                           wreg	equ	0xFE8
  8570                           indf2	equ	0xFDF
  8571                           postinc2	equ	0xFDE
  8572                           postdec2	equ	0xFDD
  8573                           fsr2h	equ	0xFDA
  8574                           fsr2l	equ	0xFD9
  8575                           status	equ	0xFD8
  8576                           
  8577 ;; *************** function ___lwdiv *****************
  8578 ;; Defined at:
  8579 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  dividend        2    0[BANK1 ] unsigned int 
  8582 ;;  divisor         2    2[BANK1 ] unsigned int 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  quotient        2    6[BANK1 ] unsigned int 
  8585 ;;  counter         1    5[BANK1 ] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  2    0[BANK1 ] unsigned int 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8595 ;;      Params:         0       0       4       0       0       0       0       0       0
  8596 ;;      Locals:         0       0       3       0       0       0       0       0       0
  8597 ;;      Temps:          0       0       1       0       0       0       0       0       0
  8598 ;;      Totals:         0       0       8       0       0       0       0       0       0
  8599 ;;Total ram usage:        8 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    9
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_Obtener_Distancia
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           	psect	text24
  8610  005598                     __ptext24:
  8611                           	opt stack 0
  8612  005598                     ___lwdiv:
  8613                           	opt stack 20
  8614                           
  8615                           ; BSR set to: 1
  8616                           ;incstack = 0
  8617                           ;incstack = 0
  8618  005598  0E00               	movlw	0
  8619  00559A  0101               	movlb	1	; () banked
  8620  00559C  0101               	movlb	1	; () banked
  8621  00559E  6F07               	movwf	(___lwdiv@quotient+1)& (0+255),b
  8622  0055A0  0E00               	movlw	0
  8623  0055A2  0101               	movlb	1	; () banked
  8624  0055A4  6F06               	movwf	___lwdiv@quotient& (0+255),b
  8625                           
  8626                           ; BSR set to: 1
  8627  0055A6  0101               	movlb	1	; () banked
  8628  0055A8  0101               	movlb	1	; () banked
  8629  0055AA  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8630  0055AC  1102               	iorwf	___lwdiv@divisor& (0+255),w,b
  8631  0055AE  B4D8               	btfsc	status,2,c
  8632  0055B0  D043               	goto	l907
  8633                           
  8634                           ; BSR set to: 1
  8635  0055B2  0101               	movlb	1	; () banked
  8636  0055B4  6F04               	movwf	??___lwdiv& (0+255),b
  8637  0055B6  0E01               	movlw	1
  8638  0055B8  0101               	movlb	1	; () banked
  8639  0055BA  0101               	movlb	1	; () banked
  8640  0055BC  6F05               	movwf	___lwdiv@counter& (0+255),b
  8641  0055BE  0101               	movlb	1	; () banked
  8642  0055C0  5104               	movf	??___lwdiv& (0+255),w,b
  8643  0055C2  D009               	goto	l11055
  8644  0055C4                     l11053:
  8645                           
  8646                           ; BSR set to: 1
  8647  0055C4  0101               	movlb	1	; () banked
  8648  0055C6  0101               	movlb	1	; () banked
  8649  0055C8  0101               	movlb	1	; () banked
  8650  0055CA  90D8               	bcf	status,0,c
  8651  0055CC  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
  8652  0055CE  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8653  0055D0  0101               	movlb	1	; () banked
  8654  0055D2  0101               	movlb	1	; () banked
  8655  0055D4  2B05               	incf	___lwdiv@counter& (0+255),f,b
  8656  0055D6                     l11055:
  8657                           
  8658                           ; BSR set to: 1
  8659  0055D6  0101               	movlb	1	; () banked
  8660  0055D8  0101               	movlb	1	; () banked
  8661  0055DA  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  8662  0055DC  D7F3               	goto	l11053
  8663  0055DE                     l11057:
  8664                           
  8665                           ; BSR set to: 1
  8666  0055DE  0101               	movlb	1	; () banked
  8667  0055E0  0101               	movlb	1	; () banked
  8668  0055E2  0101               	movlb	1	; () banked
  8669  0055E4  90D8               	bcf	status,0,c
  8670  0055E6  3706               	rlcf	___lwdiv@quotient& (0+255),f,b
  8671  0055E8  3707               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8672                           
  8673                           ; BSR set to: 1
  8674  0055EA  0101               	movlb	1	; () banked
  8675  0055EC  0101               	movlb	1	; () banked
  8676  0055EE  5102               	movf	___lwdiv@divisor& (0+255),w,b
  8677  0055F0  0101               	movlb	1	; () banked
  8678  0055F2  0101               	movlb	1	; () banked
  8679  0055F4  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
  8680  0055F6  0101               	movlb	1	; () banked
  8681  0055F8  0101               	movlb	1	; () banked
  8682  0055FA  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8683  0055FC  0101               	movlb	1	; () banked
  8684  0055FE  0101               	movlb	1	; () banked
  8685  005600  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8686  005602  A0D8               	btfss	status,0,c
  8687  005604  D00F               	goto	l11065
  8688                           
  8689                           ; BSR set to: 1
  8690  005606  0101               	movlb	1	; () banked
  8691  005608  0101               	movlb	1	; () banked
  8692  00560A  5102               	movf	___lwdiv@divisor& (0+255),w,b
  8693  00560C  0101               	movlb	1	; () banked
  8694  00560E  0101               	movlb	1	; () banked
  8695  005610  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
  8696  005612  0101               	movlb	1	; () banked
  8697  005614  0101               	movlb	1	; () banked
  8698  005616  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8699  005618  0101               	movlb	1	; () banked
  8700  00561A  0101               	movlb	1	; () banked
  8701  00561C  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8702                           
  8703                           ; BSR set to: 1
  8704  00561E  0101               	movlb	1	; () banked
  8705  005620  0101               	movlb	1	; () banked
  8706  005622  8106               	bsf	___lwdiv@quotient& (0+255),0,b
  8707  005624                     l11065:
  8708                           
  8709                           ; BSR set to: 1
  8710  005624  0101               	movlb	1	; () banked
  8711  005626  0101               	movlb	1	; () banked
  8712  005628  0101               	movlb	1	; () banked
  8713  00562A  90D8               	bcf	status,0,c
  8714  00562C  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8715  00562E  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
  8716                           
  8717                           ; BSR set to: 1
  8718  005630  0101               	movlb	1	; () banked
  8719  005632  0101               	movlb	1	; () banked
  8720  005634  2F05               	decfsz	___lwdiv@counter& (0+255),f,b
  8721  005636  D7D3               	goto	l11057
  8722  005638                     l907:
  8723                           
  8724                           ; BSR set to: 1
  8725  005638  C106  F100         	movff	___lwdiv@quotient,?___lwdiv
  8726  00563C  C107  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8727                           
  8728                           ; BSR set to: 1
  8729  005640  0012               	return	
  8730  005642                     __end_of___lwdiv:
  8731                           	opt stack 0
  8732                           tblptru	equ	0xFF8
  8733                           tblptrh	equ	0xFF7
  8734                           tblptrl	equ	0xFF6
  8735                           tablat	equ	0xFF5
  8736                           prodh	equ	0xFF4
  8737                           prodl	equ	0xFF3
  8738                           postinc0	equ	0xFEE
  8739                           wreg	equ	0xFE8
  8740                           indf2	equ	0xFDF
  8741                           postinc2	equ	0xFDE
  8742                           postdec2	equ	0xFDD
  8743                           fsr2h	equ	0xFDA
  8744                           fsr2l	equ	0xFD9
  8745                           status	equ	0xFD8
  8746                           
  8747 ;; *************** function _inicioInterrupcoes *****************
  8748 ;; Defined at:
  8749 ;;		line 174 in file "main.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;		None
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;		None
  8754 ;; Return value:  Size  Location     Type
  8755 ;;		None               void
  8756 ;; Registers used:
  8757 ;;		None
  8758 ;; Tracked objects:
  8759 ;;		On entry : 0/0
  8760 ;;		On exit  : 0/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8763 ;;      Params:         0       0       0       0       0       0       0       0       0
  8764 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8766 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8767 ;;Total ram usage:        0 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:    9
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_main
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text25
  8778  0062E4                     __ptext25:
  8779                           	opt stack 0
  8780  0062E4                     _inicioInterrupcoes:
  8781                           	opt stack 21
  8782                           
  8783                           ;main.c: 175: IPEN = 1;
  8784                           
  8785                           ; BSR set to: 1
  8786                           ;incstack = 0
  8787                           ;incstack = 0
  8788  0062E4  8ED0               	bsf	4048,7,c	;volatile
  8789                           
  8790                           ;main.c: 176: ADIE = 1;
  8791  0062E6  8C9D               	bsf	3997,6,c	;volatile
  8792                           
  8793                           ;main.c: 177: RCIE = 1;
  8794  0062E8  8A9D               	bsf	3997,5,c	;volatile
  8795                           
  8796                           ;main.c: 178: TMR0IE = 1;
  8797  0062EA  8AF2               	bsf	intcon,5,c	;volatile
  8798                           
  8799                           ;main.c: 179: GIEH = 1;
  8800  0062EC  8EF2               	bsf	intcon,7,c	;volatile
  8801                           
  8802                           ;main.c: 180: GIEL = 1;
  8803  0062EE  8CF2               	bsf	intcon,6,c	;volatile
  8804                           
  8805                           ;main.c: 181: ADIP = 0;
  8806  0062F0  9C9F               	bcf	3999,6,c	;volatile
  8807                           
  8808                           ;main.c: 182: TMR0IP = 0;
  8809  0062F2  94F1               	bcf	intcon2,2,c	;volatile
  8810                           
  8811                           ;main.c: 183: RCIP = 1;
  8812  0062F4  8A9F               	bsf	3999,5,c	;volatile
  8813  0062F6  0012               	return	
  8814  0062F8                     __end_of_inicioInterrupcoes:
  8815                           	opt stack 0
  8816                           tblptru	equ	0xFF8
  8817                           tblptrh	equ	0xFF7
  8818                           tblptrl	equ	0xFF6
  8819                           tablat	equ	0xFF5
  8820                           prodh	equ	0xFF4
  8821                           prodl	equ	0xFF3
  8822                           intcon	equ	0xFF2
  8823                           intcon2	equ	0xFF1
  8824                           postinc0	equ	0xFEE
  8825                           wreg	equ	0xFE8
  8826                           indf2	equ	0xFDF
  8827                           postinc2	equ	0xFDE
  8828                           postdec2	equ	0xFDD
  8829                           fsr2h	equ	0xFDA
  8830                           fsr2l	equ	0xFD9
  8831                           status	equ	0xFD8
  8832                           
  8833 ;; *************** function _USART_Init *****************
  8834 ;; Defined at:
  8835 ;;		line 146 in file "main.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;		None
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;  baud_rate       4   70[BANK1 ] long 
  8840 ;;  temp            3   74[BANK1 ] float 
  8841 ;; Return value:  Size  Location     Type
  8842 ;;		None               void
  8843 ;; Registers used:
  8844 ;;		wreg, status,2, status,0, cstack
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8850 ;;      Params:         0       0       0       0       0       0       0       0       0
  8851 ;;      Locals:         0       0       7       0       0       0       0       0       0
  8852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8853 ;;      Totals:         0       0       7       0       0       0       0       0       0
  8854 ;;Total ram usage:        7 bytes
  8855 ;; Hardware stack levels used:    1
  8856 ;; Hardware stack levels required when called:   11
  8857 ;; This function calls:
  8858 ;;		___altoft
  8859 ;;		___ftadd
  8860 ;;		___ftdiv
  8861 ;;		___fttol
  8862 ;; This function is called by:
  8863 ;;		_main
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text26
  8868  0054EC                     __ptext26:
  8869                           	opt stack 0
  8870  0054EC                     _USART_Init:
  8871                           	opt stack 19
  8872                           
  8873                           ;main.c: 147: long int baud_rate = 115200;
  8874                           
  8875                           ;incstack = 0
  8876                           ;incstack = 0
  8877  0054EC  0E00               	movlw	0
  8878  0054EE  0101               	movlb	1	; () banked
  8879  0054F0  0101               	movlb	1	; () banked
  8880  0054F2  6F46               	movwf	USART_Init@baud_rate& (0+255),b
  8881  0054F4  0EC2               	movlw	194
  8882  0054F6  0101               	movlb	1	; () banked
  8883  0054F8  6F47               	movwf	(USART_Init@baud_rate+1)& (0+255),b
  8884  0054FA  0E01               	movlw	1
  8885  0054FC  0101               	movlb	1	; () banked
  8886  0054FE  6F48               	movwf	(USART_Init@baud_rate+2)& (0+255),b
  8887  005500  0E00               	movlw	0
  8888  005502  0101               	movlb	1	; () banked
  8889  005504  6F49               	movwf	(USART_Init@baud_rate+3)& (0+255),b
  8890                           
  8891                           ; BSR set to: 1
  8892                           ;main.c: 148: float temp;
  8893                           ;main.c: 149: TRISC6=0;
  8894  005506  9C94               	bcf	3988,6,c	;volatile
  8895                           
  8896                           ; BSR set to: 1
  8897                           ;main.c: 150: TRISC7=1;
  8898  005508  8E94               	bsf	3988,7,c	;volatile
  8899                           
  8900                           ; BSR set to: 1
  8901                           ;main.c: 153: temp= (( (float) (200000/64) / (float) baud_rate ) - 1); ;
  8902  00550A  C146  F108         	movff	USART_Init@baud_rate,?___altoft
  8903  00550E  C147  F109         	movff	USART_Init@baud_rate+1,?___altoft+1
  8904  005512  C148  F10A         	movff	USART_Init@baud_rate+2,?___altoft+2
  8905  005516  C149  F10B         	movff	USART_Init@baud_rate+3,?___altoft+3
  8906  00551A  ECEC  F028         	call	___altoft	;wreg free
  8907  00551E  C10A  F12C         	movff	?___altoft+2,?___ftdiv+5
  8908  005522  C109  F12B         	movff	?___altoft+1,?___ftdiv+4
  8909  005526  C108  F12A         	movff	?___altoft,?___ftdiv+3
  8910  00552A  0E50               	movlw	80
  8911  00552C  0101               	movlb	1	; () banked
  8912  00552E  0101               	movlb	1	; () banked
  8913  005530  6F27               	movwf	?___ftdiv& (0+255),b
  8914  005532  0E43               	movlw	67
  8915  005534  0101               	movlb	1	; () banked
  8916  005536  0101               	movlb	1	; () banked
  8917  005538  6F28               	movwf	(?___ftdiv+1)& (0+255),b
  8918  00553A  0E45               	movlw	69
  8919  00553C  0101               	movlb	1	; () banked
  8920  00553E  0101               	movlb	1	; () banked
  8921  005540  6F29               	movwf	(?___ftdiv+2)& (0+255),b
  8922  005542  ECA8  F01F         	call	___ftdiv	;wreg free
  8923  005546  C129  F13A         	movff	?___ftdiv+2,?___ftadd+2
  8924  00554A  C128  F139         	movff	?___ftdiv+1,?___ftadd+1
  8925  00554E  C127  F138         	movff	?___ftdiv,?___ftadd
  8926  005552  0E00               	movlw	0
  8927  005554  0101               	movlb	1	; () banked
  8928  005556  0101               	movlb	1	; () banked
  8929  005558  6F3B               	movwf	(?___ftadd+3)& (0+255),b
  8930  00555A  0E80               	movlw	128
  8931  00555C  0101               	movlb	1	; () banked
  8932  00555E  0101               	movlb	1	; () banked
  8933  005560  6F3C               	movwf	(?___ftadd+4)& (0+255),b
  8934  005562  0EBF               	movlw	191
  8935  005564  0101               	movlb	1	; () banked
  8936  005566  0101               	movlb	1	; () banked
  8937  005568  6F3D               	movwf	(?___ftadd+5)& (0+255),b
  8938  00556A  ECF3  F018         	call	___ftadd	;wreg free
  8939  00556E  C13A  F14C         	movff	?___ftadd+2,USART_Init@temp+2
  8940  005572  C139  F14B         	movff	?___ftadd+1,USART_Init@temp+1
  8941  005576  C138  F14A         	movff	?___ftadd,USART_Init@temp
  8942                           
  8943                           ;main.c: 154: SPBRG = (int) temp;
  8944  00557A  C14A  F133         	movff	USART_Init@temp,?___fttol
  8945  00557E  C14B  F134         	movff	USART_Init@temp+1,?___fttol+1
  8946  005582  C14C  F135         	movff	USART_Init@temp+2,?___fttol+2
  8947  005586  EC70  F021         	call	___fttol	;wreg free
  8948  00558A  0101               	movlb	1	; () banked
  8949  00558C  0101               	movlb	1	; () banked
  8950  00558E  5133               	movf	?___fttol& (0+255),w,b
  8951  005590  6EAF               	movwf	4015,c	;volatile
  8952                           
  8953                           ;main.c: 157: RCSTA = 0x90;
  8954  005592  0E90               	movlw	144
  8955  005594  6EAB               	movwf	4011,c	;volatile
  8956                           
  8957                           ; BSR set to: 1
  8958  005596  0012               	return	
  8959  005598                     __end_of_USART_Init:
  8960                           	opt stack 0
  8961                           tblptru	equ	0xFF8
  8962                           tblptrh	equ	0xFF7
  8963                           tblptrl	equ	0xFF6
  8964                           tablat	equ	0xFF5
  8965                           prodh	equ	0xFF4
  8966                           prodl	equ	0xFF3
  8967                           intcon	equ	0xFF2
  8968                           intcon2	equ	0xFF1
  8969                           postinc0	equ	0xFEE
  8970                           wreg	equ	0xFE8
  8971                           indf2	equ	0xFDF
  8972                           postinc2	equ	0xFDE
  8973                           postdec2	equ	0xFDD
  8974                           fsr2h	equ	0xFDA
  8975                           fsr2l	equ	0xFD9
  8976                           status	equ	0xFD8
  8977                           
  8978 ;; *************** function ___fttol *****************
  8979 ;; Defined at:
  8980 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  f1              3   51[BANK1 ] float 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;  lval            4   61[BANK1 ] unsigned long 
  8985 ;;  exp1            1   65[BANK1 ] unsigned char 
  8986 ;;  sign1           1   60[BANK1 ] unsigned char 
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  4   51[BANK1 ] long 
  8989 ;; Registers used:
  8990 ;;		wreg, status,2, status,0
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8996 ;;      Params:         0       0       4       0       0       0       0       0       0
  8997 ;;      Locals:         0       0       6       0       0       0       0       0       0
  8998 ;;      Temps:          0       0       5       0       0       0       0       0       0
  8999 ;;      Totals:         0       0      15       0       0       0       0       0       0
  9000 ;;Total ram usage:       15 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:    9
  9003 ;; This function calls:
  9004 ;;		Nothing
  9005 ;; This function is called by:
  9006 ;;		_USART_Init
  9007 ;;		_sprintf
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           	psect	text27
  9012  0042E0                     __ptext27:
  9013                           	opt stack 0
  9014  0042E0                     ___fttol:
  9015                           	opt stack 20
  9016                           
  9017                           ; BSR set to: 1
  9018                           ;incstack = 0
  9019                           ;incstack = 0
  9020  0042E0  0E0F               	movlw	15
  9021  0042E2  0101               	movlb	1	; () banked
  9022  0042E4  6F37               	movwf	??___fttol& (0+255),b
  9023  0042E6  0101               	movlb	1	; () banked
  9024  0042E8  C133  F138         	movff	___fttol@f1,??___fttol+1
  9025  0042EC  0101               	movlb	1	; () banked
  9026  0042EE  C134  F139         	movff	___fttol@f1+1,??___fttol+2
  9027  0042F2  0101               	movlb	1	; () banked
  9028  0042F4  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
  9029  0042F8  0101               	movlb	1	; () banked
  9030  0042FA  2937               	incf	??___fttol& (0+255),w,b
  9031  0042FC  0101               	movlb	1	; () banked
  9032  0042FE  6F3B               	movwf	(??___fttol+4)& (0+255),b
  9033  004300  D005               	goto	u6830
  9034  004302                     u6835:
  9035  004302  0101               	movlb	1	; () banked
  9036  004304  90D8               	bcf	status,0,c
  9037  004306  333A               	rrcf	(??___fttol+3)& (0+255),f,b
  9038  004308  3339               	rrcf	(??___fttol+2)& (0+255),f,b
  9039  00430A  3338               	rrcf	(??___fttol+1)& (0+255),f,b
  9040  00430C                     u6830:
  9041  00430C  0101               	movlb	1	; () banked
  9042  00430E  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
  9043  004310  D7F8               	goto	u6835
  9044  004312  0101               	movlb	1	; () banked
  9045  004314  5138               	movf	(??___fttol+1)& (0+255),w,b
  9046  004316  0101               	movlb	1	; () banked
  9047  004318  0101               	movlb	1	; () banked
  9048  00431A  6F41               	movwf	___fttol@exp1& (0+255),b
  9049  00431C  0101               	movlb	1	; () banked
  9050  00431E  6741               	tstfsz	___fttol@exp1& (0+255),b
  9051  004320  D001               	goto	l8451
  9052  004322  D061               	goto	u6880
  9053  004324                     l8451:
  9054                           
  9055                           ; BSR set to: 1
  9056  004324  0E17               	movlw	23
  9057  004326  0101               	movlb	1	; () banked
  9058  004328  6F37               	movwf	??___fttol& (0+255),b
  9059  00432A  0101               	movlb	1	; () banked
  9060  00432C  C133  F138         	movff	___fttol@f1,??___fttol+1
  9061  004330  0101               	movlb	1	; () banked
  9062  004332  C134  F139         	movff	___fttol@f1+1,??___fttol+2
  9063  004336  0101               	movlb	1	; () banked
  9064  004338  C135  F13A         	movff	___fttol@f1+2,??___fttol+3
  9065  00433C  0101               	movlb	1	; () banked
  9066  00433E  2937               	incf	??___fttol& (0+255),w,b
  9067  004340  0101               	movlb	1	; () banked
  9068  004342  6F3B               	movwf	(??___fttol+4)& (0+255),b
  9069  004344  D005               	goto	u6850
  9070  004346                     u6855:
  9071  004346  0101               	movlb	1	; () banked
  9072  004348  90D8               	bcf	status,0,c
  9073  00434A  333A               	rrcf	(??___fttol+3)& (0+255),f,b
  9074  00434C  3339               	rrcf	(??___fttol+2)& (0+255),f,b
  9075  00434E  3338               	rrcf	(??___fttol+1)& (0+255),f,b
  9076  004350                     u6850:
  9077  004350  0101               	movlb	1	; () banked
  9078  004352  2F3B               	decfsz	(??___fttol+4)& (0+255),f,b
  9079  004354  D7F8               	goto	u6855
  9080  004356  0101               	movlb	1	; () banked
  9081  004358  5138               	movf	(??___fttol+1)& (0+255),w,b
  9082  00435A  0101               	movlb	1	; () banked
  9083  00435C  0101               	movlb	1	; () banked
  9084  00435E  6F3C               	movwf	___fttol@sign1& (0+255),b
  9085                           
  9086                           ; BSR set to: 1
  9087  004360  0101               	movlb	1	; () banked
  9088  004362  0101               	movlb	1	; () banked
  9089  004364  8F34               	bsf	(___fttol@f1+1)& (0+255),7,b
  9090                           
  9091                           ; BSR set to: 1
  9092  004366  0EFF               	movlw	255
  9093  004368  0101               	movlb	1	; () banked
  9094  00436A  0101               	movlb	1	; () banked
  9095  00436C  1733               	andwf	___fttol@f1& (0+255),f,b
  9096  00436E  0EFF               	movlw	255
  9097  004370  0101               	movlb	1	; () banked
  9098  004372  0101               	movlb	1	; () banked
  9099  004374  1734               	andwf	(___fttol@f1+1)& (0+255),f,b
  9100  004376  0E00               	movlw	0
  9101  004378  0101               	movlb	1	; () banked
  9102  00437A  0101               	movlb	1	; () banked
  9103  00437C  1735               	andwf	(___fttol@f1+2)& (0+255),f,b
  9104                           
  9105                           ; BSR set to: 1
  9106  00437E  0101               	movlb	1	; () banked
  9107  004380  0101               	movlb	1	; () banked
  9108  004382  5133               	movf	___fttol@f1& (0+255),w,b
  9109  004384  0101               	movlb	1	; () banked
  9110  004386  0101               	movlb	1	; () banked
  9111  004388  6F3D               	movwf	___fttol@lval& (0+255),b
  9112  00438A  0101               	movlb	1	; () banked
  9113  00438C  0101               	movlb	1	; () banked
  9114  00438E  5134               	movf	(___fttol@f1+1)& (0+255),w,b
  9115  004390  0101               	movlb	1	; () banked
  9116  004392  6F3E               	movwf	(___fttol@lval+1)& (0+255),b
  9117  004394  0101               	movlb	1	; () banked
  9118  004396  5135               	movf	(___fttol@f1+2)& (0+255),w,b
  9119  004398  0101               	movlb	1	; () banked
  9120  00439A  6F3F               	movwf	(___fttol@lval+2)& (0+255),b
  9121  00439C  0101               	movlb	1	; () banked
  9122  00439E  6B40               	clrf	(___fttol@lval+3)& (0+255),b
  9123                           
  9124                           ; BSR set to: 1
  9125  0043A0  0E8E               	movlw	142
  9126  0043A2  0101               	movlb	1	; () banked
  9127  0043A4  0101               	movlb	1	; () banked
  9128  0043A6  5F41               	subwf	___fttol@exp1& (0+255),f,b
  9129                           
  9130                           ; BSR set to: 1
  9131  0043A8  0101               	movlb	1	; () banked
  9132  0043AA  0101               	movlb	1	; () banked
  9133  0043AC  AF41               	btfss	___fttol@exp1& (0+255),7,b
  9134  0043AE  D016               	goto	l8473
  9135                           
  9136                           ; BSR set to: 1
  9137  0043B0  0101               	movlb	1	; () banked
  9138  0043B2  0101               	movlb	1	; () banked
  9139  0043B4  5141               	movf	___fttol@exp1& (0+255),w,b
  9140  0043B6  0A80               	xorlw	128
  9141  0043B8  0F8F               	addlw	143
  9142  0043BA  A0D8               	btfss	status,0,c
  9143  0043BC  D014               	goto	u6880
  9144  0043BE                     l8469:
  9145                           
  9146                           ; BSR set to: 1
  9147  0043BE  0101               	movlb	1	; () banked
  9148  0043C0  90D8               	bcf	status,0,c
  9149  0043C2  0101               	movlb	1	; () banked
  9150  0043C4  3340               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9151  0043C6  0101               	movlb	1	; () banked
  9152  0043C8  333F               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9153  0043CA  0101               	movlb	1	; () banked
  9154  0043CC  333E               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9155  0043CE  0101               	movlb	1	; () banked
  9156  0043D0  333D               	rrcf	___fttol@lval& (0+255),f,b
  9157                           
  9158                           ; BSR set to: 1
  9159  0043D2  0101               	movlb	1	; () banked
  9160  0043D4  0101               	movlb	1	; () banked
  9161  0043D6  3F41               	incfsz	___fttol@exp1& (0+255),f,b
  9162  0043D8  D7F2               	goto	l8469
  9163  0043DA  D024               	goto	l8483
  9164  0043DC                     l8473:
  9165                           
  9166                           ; BSR set to: 1
  9167  0043DC  0E17               	movlw	23
  9168  0043DE  0101               	movlb	1	; () banked
  9169  0043E0  0101               	movlb	1	; () banked
  9170  0043E2  6541               	cpfsgt	___fttol@exp1& (0+255),b
  9171  0043E4  D01B               	goto	l8481
  9172  0043E6                     u6880:
  9173                           
  9174                           ; BSR set to: 1
  9175  0043E6  0E00               	movlw	0
  9176  0043E8  0101               	movlb	1	; () banked
  9177  0043EA  0101               	movlb	1	; () banked
  9178  0043EC  6F33               	movwf	?___fttol& (0+255),b
  9179  0043EE  0E00               	movlw	0
  9180  0043F0  0101               	movlb	1	; () banked
  9181  0043F2  6F34               	movwf	(?___fttol+1)& (0+255),b
  9182  0043F4  0E00               	movlw	0
  9183  0043F6  0101               	movlb	1	; () banked
  9184  0043F8  6F35               	movwf	(?___fttol+2)& (0+255),b
  9185  0043FA  0E00               	movlw	0
  9186  0043FC  0101               	movlb	1	; () banked
  9187  0043FE  6F36               	movwf	(?___fttol+3)& (0+255),b
  9188  004400  D02E               	goto	l794
  9189  004402                     l8479:
  9190                           
  9191                           ; BSR set to: 1
  9192  004402  0101               	movlb	1	; () banked
  9193  004404  90D8               	bcf	status,0,c
  9194  004406  0101               	movlb	1	; () banked
  9195  004408  373D               	rlcf	___fttol@lval& (0+255),f,b
  9196  00440A  0101               	movlb	1	; () banked
  9197  00440C  373E               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9198  00440E  0101               	movlb	1	; () banked
  9199  004410  373F               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9200  004412  0101               	movlb	1	; () banked
  9201  004414  3740               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9202  004416  0101               	movlb	1	; () banked
  9203  004418  0101               	movlb	1	; () banked
  9204  00441A  0741               	decf	___fttol@exp1& (0+255),f,b
  9205  00441C                     l8481:
  9206                           
  9207                           ; BSR set to: 1
  9208  00441C  0101               	movlb	1	; () banked
  9209  00441E  0101               	movlb	1	; () banked
  9210  004420  6741               	tstfsz	___fttol@exp1& (0+255),b
  9211  004422  D7EF               	goto	l8479
  9212  004424                     l8483:
  9213                           
  9214                           ; BSR set to: 1
  9215  004424  0101               	movlb	1	; () banked
  9216  004426  0101               	movlb	1	; () banked
  9217  004428  513C               	movf	___fttol@sign1& (0+255),w,b
  9218  00442A  B4D8               	btfsc	status,2,c
  9219  00442C  D010               	goto	l8487
  9220                           
  9221                           ; BSR set to: 1
  9222  00442E  0101               	movlb	1	; () banked
  9223  004430  0101               	movlb	1	; () banked
  9224  004432  1F40               	comf	(___fttol@lval+3)& (0+255),f,b
  9225  004434  0101               	movlb	1	; () banked
  9226  004436  1F3F               	comf	(___fttol@lval+2)& (0+255),f,b
  9227  004438  0101               	movlb	1	; () banked
  9228  00443A  1F3E               	comf	(___fttol@lval+1)& (0+255),f,b
  9229  00443C  0101               	movlb	1	; () banked
  9230  00443E  6D3D               	negf	___fttol@lval& (0+255),b
  9231  004440  0E00               	movlw	0
  9232  004442  0101               	movlb	1	; () banked
  9233  004444  233E               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9234  004446  0101               	movlb	1	; () banked
  9235  004448  233F               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9236  00444A  0101               	movlb	1	; () banked
  9237  00444C  2340               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9238  00444E                     l8487:
  9239                           
  9240                           ; BSR set to: 1
  9241  00444E  C13D  F133         	movff	___fttol@lval,?___fttol
  9242  004452  C13E  F134         	movff	___fttol@lval+1,?___fttol+1
  9243  004456  C13F  F135         	movff	___fttol@lval+2,?___fttol+2
  9244  00445A  C140  F136         	movff	___fttol@lval+3,?___fttol+3
  9245  00445E                     l794:
  9246                           
  9247                           ; BSR set to: 1
  9248  00445E  0012               	return	
  9249  004460                     __end_of___fttol:
  9250                           	opt stack 0
  9251                           tblptru	equ	0xFF8
  9252                           tblptrh	equ	0xFF7
  9253                           tblptrl	equ	0xFF6
  9254                           tablat	equ	0xFF5
  9255                           prodh	equ	0xFF4
  9256                           prodl	equ	0xFF3
  9257                           intcon	equ	0xFF2
  9258                           intcon2	equ	0xFF1
  9259                           postinc0	equ	0xFEE
  9260                           wreg	equ	0xFE8
  9261                           indf2	equ	0xFDF
  9262                           postinc2	equ	0xFDE
  9263                           postdec2	equ	0xFDD
  9264                           fsr2h	equ	0xFDA
  9265                           fsr2l	equ	0xFD9
  9266                           status	equ	0xFD8
  9267                           
  9268 ;; *************** function ___ftdiv *****************
  9269 ;; Defined at:
  9270 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  f1              3   39[BANK1 ] float 
  9273 ;;  f2              3   42[BANK1 ] float 
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;  f3              3   51[BANK1 ] float 
  9276 ;;  sign            1   55[BANK1 ] unsigned char 
  9277 ;;  exp             1   54[BANK1 ] unsigned char 
  9278 ;;  cntr            1   50[BANK1 ] unsigned char 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  3   39[BANK1 ] float 
  9281 ;; Registers used:
  9282 ;;		wreg, status,2, status,0, cstack
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9288 ;;      Params:         0       0       6       0       0       0       0       0       0
  9289 ;;      Locals:         0       0       6       0       0       0       0       0       0
  9290 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9291 ;;      Totals:         0       0      17       0       0       0       0       0       0
  9292 ;;Total ram usage:       17 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; Hardware stack levels required when called:   10
  9295 ;; This function calls:
  9296 ;;		___ftpack
  9297 ;; This function is called by:
  9298 ;;		_USART_Init
  9299 ;;		_Read_LDR
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text28
  9304  003F50                     __ptext28:
  9305                           	opt stack 0
  9306  003F50                     ___ftdiv:
  9307                           	opt stack 19
  9308                           
  9309                           ; BSR set to: 1
  9310                           ;incstack = 0
  9311                           ;incstack = 0
  9312  003F50  0E0F               	movlw	15
  9313  003F52  0101               	movlb	1	; () banked
  9314  003F54  6F2D               	movwf	??___ftdiv& (0+255),b
  9315  003F56  0101               	movlb	1	; () banked
  9316  003F58  C127  F12E         	movff	___ftdiv@f1,??___ftdiv+1
  9317  003F5C  0101               	movlb	1	; () banked
  9318  003F5E  C128  F12F         	movff	___ftdiv@f1+1,??___ftdiv+2
  9319  003F62  0101               	movlb	1	; () banked
  9320  003F64  C129  F130         	movff	___ftdiv@f1+2,??___ftdiv+3
  9321  003F68  0101               	movlb	1	; () banked
  9322  003F6A  292D               	incf	??___ftdiv& (0+255),w,b
  9323  003F6C  0101               	movlb	1	; () banked
  9324  003F6E  6F31               	movwf	(??___ftdiv+4)& (0+255),b
  9325  003F70  D005               	goto	u10010
  9326  003F72                     u10015:
  9327  003F72  0101               	movlb	1	; () banked
  9328  003F74  90D8               	bcf	status,0,c
  9329  003F76  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
  9330  003F78  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
  9331  003F7A  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
  9332  003F7C                     u10010:
  9333  003F7C  0101               	movlb	1	; () banked
  9334  003F7E  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
  9335  003F80  D7F8               	goto	u10015
  9336  003F82  0101               	movlb	1	; () banked
  9337  003F84  512E               	movf	(??___ftdiv+1)& (0+255),w,b
  9338  003F86  0101               	movlb	1	; () banked
  9339  003F88  0101               	movlb	1	; () banked
  9340  003F8A  6F36               	movwf	___ftdiv@exp& (0+255),b
  9341  003F8C  0101               	movlb	1	; () banked
  9342  003F8E  6736               	tstfsz	___ftdiv@exp& (0+255),b
  9343  003F90  D001               	goto	l10801
  9344  003F92  D021               	goto	u10040
  9345  003F94                     l10801:
  9346                           
  9347                           ; BSR set to: 1
  9348  003F94  0E0F               	movlw	15
  9349  003F96  0101               	movlb	1	; () banked
  9350  003F98  6F2D               	movwf	??___ftdiv& (0+255),b
  9351  003F9A  0101               	movlb	1	; () banked
  9352  003F9C  C12A  F12E         	movff	___ftdiv@f2,??___ftdiv+1
  9353  003FA0  0101               	movlb	1	; () banked
  9354  003FA2  C12B  F12F         	movff	___ftdiv@f2+1,??___ftdiv+2
  9355  003FA6  0101               	movlb	1	; () banked
  9356  003FA8  C12C  F130         	movff	___ftdiv@f2+2,??___ftdiv+3
  9357  003FAC  0101               	movlb	1	; () banked
  9358  003FAE  292D               	incf	??___ftdiv& (0+255),w,b
  9359  003FB0  0101               	movlb	1	; () banked
  9360  003FB2  6F31               	movwf	(??___ftdiv+4)& (0+255),b
  9361  003FB4  D005               	goto	u10030
  9362  003FB6                     u10035:
  9363  003FB6  0101               	movlb	1	; () banked
  9364  003FB8  90D8               	bcf	status,0,c
  9365  003FBA  3330               	rrcf	(??___ftdiv+3)& (0+255),f,b
  9366  003FBC  332F               	rrcf	(??___ftdiv+2)& (0+255),f,b
  9367  003FBE  332E               	rrcf	(??___ftdiv+1)& (0+255),f,b
  9368  003FC0                     u10030:
  9369  003FC0  0101               	movlb	1	; () banked
  9370  003FC2  2F31               	decfsz	(??___ftdiv+4)& (0+255),f,b
  9371  003FC4  D7F8               	goto	u10035
  9372  003FC6  0101               	movlb	1	; () banked
  9373  003FC8  512E               	movf	(??___ftdiv+1)& (0+255),w,b
  9374  003FCA  0101               	movlb	1	; () banked
  9375  003FCC  0101               	movlb	1	; () banked
  9376  003FCE  6F37               	movwf	___ftdiv@sign& (0+255),b
  9377  003FD0  0101               	movlb	1	; () banked
  9378  003FD2  6737               	tstfsz	___ftdiv@sign& (0+255),b
  9379  003FD4  D00D               	goto	l10807
  9380  003FD6                     u10040:
  9381                           
  9382                           ; BSR set to: 1
  9383  003FD6  0E00               	movlw	0
  9384  003FD8  0101               	movlb	1	; () banked
  9385  003FDA  0101               	movlb	1	; () banked
  9386  003FDC  6F27               	movwf	?___ftdiv& (0+255),b
  9387  003FDE  0E00               	movlw	0
  9388  003FE0  0101               	movlb	1	; () banked
  9389  003FE2  0101               	movlb	1	; () banked
  9390  003FE4  6F28               	movwf	(?___ftdiv+1)& (0+255),b
  9391  003FE6  0E00               	movlw	0
  9392  003FE8  0101               	movlb	1	; () banked
  9393  003FEA  0101               	movlb	1	; () banked
  9394  003FEC  6F29               	movwf	(?___ftdiv+2)& (0+255),b
  9395  003FEE  D093               	goto	l742
  9396  003FF0                     l10807:
  9397                           
  9398                           ; BSR set to: 1
  9399  003FF0  0E00               	movlw	0
  9400  003FF2  0101               	movlb	1	; () banked
  9401  003FF4  0101               	movlb	1	; () banked
  9402  003FF6  6F33               	movwf	___ftdiv@f3& (0+255),b
  9403  003FF8  0E00               	movlw	0
  9404  003FFA  0101               	movlb	1	; () banked
  9405  003FFC  0101               	movlb	1	; () banked
  9406  003FFE  6F34               	movwf	(___ftdiv@f3+1)& (0+255),b
  9407  004000  0E00               	movlw	0
  9408  004002  0101               	movlb	1	; () banked
  9409  004004  0101               	movlb	1	; () banked
  9410  004006  6F35               	movwf	(___ftdiv@f3+2)& (0+255),b
  9411                           
  9412                           ; BSR set to: 1
  9413  004008  0101               	movlb	1	; () banked
  9414  00400A  0101               	movlb	1	; () banked
  9415  00400C  5137               	movf	___ftdiv@sign& (0+255),w,b
  9416  00400E  0F89               	addlw	137
  9417  004010  0101               	movlb	1	; () banked
  9418  004012  0101               	movlb	1	; () banked
  9419  004014  5F36               	subwf	___ftdiv@exp& (0+255),f,b
  9420                           
  9421                           ; BSR set to: 1
  9422  004016  C129  F137         	movff	___ftdiv@f1+2,___ftdiv@sign
  9423                           
  9424                           ; BSR set to: 1
  9425  00401A  0101               	movlb	1	; () banked
  9426  00401C  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9427  00401E  0101               	movlb	1	; () banked
  9428  004020  0101               	movlb	1	; () banked
  9429  004022  1B37               	xorwf	___ftdiv@sign& (0+255),f,b
  9430                           
  9431                           ; BSR set to: 1
  9432  004024  0E80               	movlw	128
  9433  004026  0101               	movlb	1	; () banked
  9434  004028  0101               	movlb	1	; () banked
  9435  00402A  1737               	andwf	___ftdiv@sign& (0+255),f,b
  9436                           
  9437                           ; BSR set to: 1
  9438  00402C  0101               	movlb	1	; () banked
  9439  00402E  0101               	movlb	1	; () banked
  9440  004030  8F28               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9441                           
  9442                           ; BSR set to: 1
  9443  004032  0EFF               	movlw	255
  9444  004034  0101               	movlb	1	; () banked
  9445  004036  0101               	movlb	1	; () banked
  9446  004038  1727               	andwf	___ftdiv@f1& (0+255),f,b
  9447  00403A  0EFF               	movlw	255
  9448  00403C  0101               	movlb	1	; () banked
  9449  00403E  0101               	movlb	1	; () banked
  9450  004040  1728               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9451  004042  0E00               	movlw	0
  9452  004044  0101               	movlb	1	; () banked
  9453  004046  0101               	movlb	1	; () banked
  9454  004048  1729               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9455                           
  9456                           ; BSR set to: 1
  9457  00404A  0101               	movlb	1	; () banked
  9458  00404C  0101               	movlb	1	; () banked
  9459  00404E  8F2B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9460                           
  9461                           ; BSR set to: 1
  9462  004050  0EFF               	movlw	255
  9463  004052  0101               	movlb	1	; () banked
  9464  004054  0101               	movlb	1	; () banked
  9465  004056  172A               	andwf	___ftdiv@f2& (0+255),f,b
  9466  004058  0EFF               	movlw	255
  9467  00405A  0101               	movlb	1	; () banked
  9468  00405C  0101               	movlb	1	; () banked
  9469  00405E  172B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9470  004060  0E00               	movlw	0
  9471  004062  0101               	movlb	1	; () banked
  9472  004064  0101               	movlb	1	; () banked
  9473  004066  172C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9474                           
  9475                           ; BSR set to: 1
  9476  004068  0101               	movlb	1	; () banked
  9477  00406A  6F2D               	movwf	??___ftdiv& (0+255),b
  9478  00406C  0E18               	movlw	24
  9479  00406E  0101               	movlb	1	; () banked
  9480  004070  0101               	movlb	1	; () banked
  9481  004072  6F32               	movwf	___ftdiv@cntr& (0+255),b
  9482  004074  0101               	movlb	1	; () banked
  9483  004076  512D               	movf	??___ftdiv& (0+255),w,b
  9484  004078                     l744:
  9485                           
  9486                           ; BSR set to: 1
  9487  004078  0101               	movlb	1	; () banked
  9488  00407A  90D8               	bcf	status,0,c
  9489  00407C  0101               	movlb	1	; () banked
  9490  00407E  3733               	rlcf	___ftdiv@f3& (0+255),f,b
  9491  004080  0101               	movlb	1	; () banked
  9492  004082  3734               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9493  004084  0101               	movlb	1	; () banked
  9494  004086  3735               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9495                           
  9496                           ; BSR set to: 1
  9497  004088  0101               	movlb	1	; () banked
  9498  00408A  0101               	movlb	1	; () banked
  9499  00408C  512A               	movf	___ftdiv@f2& (0+255),w,b
  9500  00408E  0101               	movlb	1	; () banked
  9501  004090  0101               	movlb	1	; () banked
  9502  004092  5D27               	subwf	___ftdiv@f1& (0+255),w,b
  9503  004094  0101               	movlb	1	; () banked
  9504  004096  0101               	movlb	1	; () banked
  9505  004098  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9506  00409A  0101               	movlb	1	; () banked
  9507  00409C  0101               	movlb	1	; () banked
  9508  00409E  5928               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9509  0040A0  0101               	movlb	1	; () banked
  9510  0040A2  0101               	movlb	1	; () banked
  9511  0040A4  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9512  0040A6  0101               	movlb	1	; () banked
  9513  0040A8  0101               	movlb	1	; () banked
  9514  0040AA  5929               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9515  0040AC  A0D8               	btfss	status,0,c
  9516  0040AE  D015               	goto	l745
  9517                           
  9518                           ; BSR set to: 1
  9519  0040B0  0101               	movlb	1	; () banked
  9520  0040B2  0101               	movlb	1	; () banked
  9521  0040B4  512A               	movf	___ftdiv@f2& (0+255),w,b
  9522  0040B6  0101               	movlb	1	; () banked
  9523  0040B8  0101               	movlb	1	; () banked
  9524  0040BA  5F27               	subwf	___ftdiv@f1& (0+255),f,b
  9525  0040BC  0101               	movlb	1	; () banked
  9526  0040BE  0101               	movlb	1	; () banked
  9527  0040C0  512B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9528  0040C2  0101               	movlb	1	; () banked
  9529  0040C4  0101               	movlb	1	; () banked
  9530  0040C6  5B28               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9531  0040C8  0101               	movlb	1	; () banked
  9532  0040CA  0101               	movlb	1	; () banked
  9533  0040CC  512C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9534  0040CE  0101               	movlb	1	; () banked
  9535  0040D0  0101               	movlb	1	; () banked
  9536  0040D2  5B29               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9537                           
  9538                           ; BSR set to: 1
  9539  0040D4  0101               	movlb	1	; () banked
  9540  0040D6  0101               	movlb	1	; () banked
  9541  0040D8  8133               	bsf	___ftdiv@f3& (0+255),0,b
  9542  0040DA                     l745:
  9543                           
  9544                           ; BSR set to: 1
  9545  0040DA  0101               	movlb	1	; () banked
  9546  0040DC  90D8               	bcf	status,0,c
  9547  0040DE  0101               	movlb	1	; () banked
  9548  0040E0  3727               	rlcf	___ftdiv@f1& (0+255),f,b
  9549  0040E2  0101               	movlb	1	; () banked
  9550  0040E4  3728               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9551  0040E6  0101               	movlb	1	; () banked
  9552  0040E8  3729               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9553                           
  9554                           ; BSR set to: 1
  9555  0040EA  0101               	movlb	1	; () banked
  9556  0040EC  0101               	movlb	1	; () banked
  9557  0040EE  2F32               	decfsz	___ftdiv@cntr& (0+255),f,b
  9558  0040F0  D7C3               	goto	l744
  9559                           
  9560                           ; BSR set to: 1
  9561                           
  9562                           ; BSR set to: 1
  9563  0040F2  C133  F100         	movff	___ftdiv@f3,?___ftpack
  9564  0040F6  C134  F101         	movff	___ftdiv@f3+1,?___ftpack+1
  9565  0040FA  C135  F102         	movff	___ftdiv@f3+2,?___ftpack+2
  9566  0040FE  C136  F103         	movff	___ftdiv@exp,?___ftpack+3
  9567  004102  C137  F104         	movff	___ftdiv@sign,?___ftpack+4
  9568  004106  EC30  F022         	call	___ftpack	;wreg free
  9569  00410A  C102  F129         	movff	?___ftpack+2,?___ftdiv+2
  9570  00410E  C101  F128         	movff	?___ftpack+1,?___ftdiv+1
  9571  004112  C100  F127         	movff	?___ftpack,?___ftdiv
  9572  004116                     l742:
  9573  004116  0012               	return	
  9574  004118                     __end_of___ftdiv:
  9575                           	opt stack 0
  9576                           tblptru	equ	0xFF8
  9577                           tblptrh	equ	0xFF7
  9578                           tblptrl	equ	0xFF6
  9579                           tablat	equ	0xFF5
  9580                           prodh	equ	0xFF4
  9581                           prodl	equ	0xFF3
  9582                           intcon	equ	0xFF2
  9583                           intcon2	equ	0xFF1
  9584                           postinc0	equ	0xFEE
  9585                           wreg	equ	0xFE8
  9586                           indf2	equ	0xFDF
  9587                           postinc2	equ	0xFDE
  9588                           postdec2	equ	0xFDD
  9589                           fsr2h	equ	0xFDA
  9590                           fsr2l	equ	0xFD9
  9591                           status	equ	0xFD8
  9592                           
  9593 ;; *************** function ___ftadd *****************
  9594 ;; Defined at:
  9595 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  f1              3   56[BANK1 ] float 
  9598 ;;  f2              3   59[BANK1 ] float 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  exp1            1   69[BANK1 ] unsigned char 
  9601 ;;  exp2            1   68[BANK1 ] unsigned char 
  9602 ;;  sign            1   67[BANK1 ] unsigned char 
  9603 ;; Return value:  Size  Location     Type
  9604 ;;                  3   56[BANK1 ] float 
  9605 ;; Registers used:
  9606 ;;		wreg, status,2, status,0, cstack
  9607 ;; Tracked objects:
  9608 ;;		On entry : 0/0
  9609 ;;		On exit  : 0/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9612 ;;      Params:         0       0       6       0       0       0       0       0       0
  9613 ;;      Locals:         0       0       3       0       0       0       0       0       0
  9614 ;;      Temps:          0       0       5       0       0       0       0       0       0
  9615 ;;      Totals:         0       0      14       0       0       0       0       0       0
  9616 ;;Total ram usage:       14 bytes
  9617 ;; Hardware stack levels used:    1
  9618 ;; Hardware stack levels required when called:   10
  9619 ;; This function calls:
  9620 ;;		___ftpack
  9621 ;; This function is called by:
  9622 ;;		_USART_Init
  9623 ;;		___asftadd
  9624 ;;		___ftsub
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text29
  9629  0031E6                     __ptext29:
  9630                           	opt stack 0
  9631  0031E6                     ___ftadd:
  9632                           	opt stack 17
  9633                           
  9634                           ;incstack = 0
  9635                           ;incstack = 0
  9636  0031E6  0E0F               	movlw	15
  9637  0031E8  0101               	movlb	1	; () banked
  9638  0031EA  6F3E               	movwf	??___ftadd& (0+255),b
  9639  0031EC  0101               	movlb	1	; () banked
  9640  0031EE  C138  F13F         	movff	___ftadd@f1,??___ftadd+1
  9641  0031F2  0101               	movlb	1	; () banked
  9642  0031F4  C139  F140         	movff	___ftadd@f1+1,??___ftadd+2
  9643  0031F8  0101               	movlb	1	; () banked
  9644  0031FA  C13A  F141         	movff	___ftadd@f1+2,??___ftadd+3
  9645  0031FE  0101               	movlb	1	; () banked
  9646  003200  293E               	incf	??___ftadd& (0+255),w,b
  9647  003202  0101               	movlb	1	; () banked
  9648  003204  6F42               	movwf	(??___ftadd+4)& (0+255),b
  9649  003206  D005               	goto	u9800
  9650  003208                     u9805:
  9651  003208  0101               	movlb	1	; () banked
  9652  00320A  90D8               	bcf	status,0,c
  9653  00320C  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
  9654  00320E  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
  9655  003210  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
  9656  003212                     u9800:
  9657  003212  0101               	movlb	1	; () banked
  9658  003214  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
  9659  003216  D7F8               	goto	u9805
  9660  003218  0101               	movlb	1	; () banked
  9661  00321A  513F               	movf	(??___ftadd+1)& (0+255),w,b
  9662  00321C  0101               	movlb	1	; () banked
  9663  00321E  0101               	movlb	1	; () banked
  9664  003220  6F45               	movwf	___ftadd@exp1& (0+255),b
  9665  003222  0E0F               	movlw	15
  9666  003224  0101               	movlb	1	; () banked
  9667  003226  6F3E               	movwf	??___ftadd& (0+255),b
  9668  003228  0101               	movlb	1	; () banked
  9669  00322A  C13B  F13F         	movff	___ftadd@f2,??___ftadd+1
  9670  00322E  0101               	movlb	1	; () banked
  9671  003230  C13C  F140         	movff	___ftadd@f2+1,??___ftadd+2
  9672  003234  0101               	movlb	1	; () banked
  9673  003236  C13D  F141         	movff	___ftadd@f2+2,??___ftadd+3
  9674  00323A  0101               	movlb	1	; () banked
  9675  00323C  293E               	incf	??___ftadd& (0+255),w,b
  9676  00323E  0101               	movlb	1	; () banked
  9677  003240  6F42               	movwf	(??___ftadd+4)& (0+255),b
  9678  003242  D005               	goto	u9810
  9679  003244                     u9815:
  9680  003244  0101               	movlb	1	; () banked
  9681  003246  90D8               	bcf	status,0,c
  9682  003248  3341               	rrcf	(??___ftadd+3)& (0+255),f,b
  9683  00324A  3340               	rrcf	(??___ftadd+2)& (0+255),f,b
  9684  00324C  333F               	rrcf	(??___ftadd+1)& (0+255),f,b
  9685  00324E                     u9810:
  9686  00324E  0101               	movlb	1	; () banked
  9687  003250  2F42               	decfsz	(??___ftadd+4)& (0+255),f,b
  9688  003252  D7F8               	goto	u9815
  9689  003254  0101               	movlb	1	; () banked
  9690  003256  513F               	movf	(??___ftadd+1)& (0+255),w,b
  9691  003258  0101               	movlb	1	; () banked
  9692  00325A  0101               	movlb	1	; () banked
  9693  00325C  6F44               	movwf	___ftadd@exp2& (0+255),b
  9694                           
  9695                           ; BSR set to: 1
  9696  00325E  0101               	movlb	1	; () banked
  9697  003260  0101               	movlb	1	; () banked
  9698  003262  5145               	movf	___ftadd@exp1& (0+255),w,b
  9699  003264  B4D8               	btfsc	status,2,c
  9700  003266  D015               	goto	l710
  9701                           
  9702                           ; BSR set to: 1
  9703  003268  0101               	movlb	1	; () banked
  9704  00326A  0101               	movlb	1	; () banked
  9705  00326C  5144               	movf	___ftadd@exp2& (0+255),w,b
  9706  00326E  0101               	movlb	1	; () banked
  9707  003270  0101               	movlb	1	; () banked
  9708  003272  6145               	cpfslt	___ftadd@exp1& (0+255),b
  9709  003274  D015               	goto	l10733
  9710                           
  9711                           ; BSR set to: 1
  9712  003276  0101               	movlb	1	; () banked
  9713  003278  0101               	movlb	1	; () banked
  9714  00327A  5145               	movf	___ftadd@exp1& (0+255),w,b
  9715  00327C  0800               	sublw	0
  9716  00327E  0101               	movlb	1	; () banked
  9717  003280  0101               	movlb	1	; () banked
  9718  003282  2544               	addwf	___ftadd@exp2& (0+255),w,b
  9719  003284  0101               	movlb	1	; () banked
  9720  003286  6F3E               	movwf	??___ftadd& (0+255),b
  9721  003288  0E19               	movlw	25
  9722  00328A  0101               	movlb	1	; () banked
  9723  00328C  5D3E               	subwf	??___ftadd& (0+255),w,b
  9724  00328E  A0D8               	btfss	status,0,c
  9725  003290  D007               	goto	l10733
  9726  003292                     l710:
  9727                           
  9728                           ; BSR set to: 1
  9729  003292  C13B  F138         	movff	___ftadd@f2,?___ftadd
  9730  003296  C13C  F139         	movff	___ftadd@f2+1,?___ftadd+1
  9731  00329A  C13D  F13A         	movff	___ftadd@f2+2,?___ftadd+2
  9732  00329E  D148               	goto	l711
  9733  0032A0                     l10733:
  9734                           
  9735                           ; BSR set to: 1
  9736  0032A0  0101               	movlb	1	; () banked
  9737  0032A2  0101               	movlb	1	; () banked
  9738  0032A4  5144               	movf	___ftadd@exp2& (0+255),w,b
  9739  0032A6  B4D8               	btfsc	status,2,c
  9740  0032A8  D015               	goto	l714
  9741                           
  9742                           ; BSR set to: 1
  9743  0032AA  0101               	movlb	1	; () banked
  9744  0032AC  0101               	movlb	1	; () banked
  9745  0032AE  5145               	movf	___ftadd@exp1& (0+255),w,b
  9746  0032B0  0101               	movlb	1	; () banked
  9747  0032B2  0101               	movlb	1	; () banked
  9748  0032B4  6144               	cpfslt	___ftadd@exp2& (0+255),b
  9749  0032B6  D015               	goto	l10739
  9750                           
  9751                           ; BSR set to: 1
  9752  0032B8  0101               	movlb	1	; () banked
  9753  0032BA  0101               	movlb	1	; () banked
  9754  0032BC  5144               	movf	___ftadd@exp2& (0+255),w,b
  9755  0032BE  0800               	sublw	0
  9756  0032C0  0101               	movlb	1	; () banked
  9757  0032C2  0101               	movlb	1	; () banked
  9758  0032C4  2545               	addwf	___ftadd@exp1& (0+255),w,b
  9759  0032C6  0101               	movlb	1	; () banked
  9760  0032C8  6F3E               	movwf	??___ftadd& (0+255),b
  9761  0032CA  0E19               	movlw	25
  9762  0032CC  0101               	movlb	1	; () banked
  9763  0032CE  5D3E               	subwf	??___ftadd& (0+255),w,b
  9764  0032D0  A0D8               	btfss	status,0,c
  9765  0032D2  D007               	goto	l10739
  9766  0032D4                     l714:
  9767                           
  9768                           ; BSR set to: 1
  9769  0032D4  C138  F138         	movff	___ftadd@f1,?___ftadd
  9770  0032D8  C139  F139         	movff	___ftadd@f1+1,?___ftadd+1
  9771  0032DC  C13A  F13A         	movff	___ftadd@f1+2,?___ftadd+2
  9772  0032E0  D127               	goto	l711
  9773  0032E2                     l10739:
  9774                           
  9775                           ; BSR set to: 1
  9776  0032E2  0101               	movlb	1	; () banked
  9777  0032E4  6F3E               	movwf	??___ftadd& (0+255),b
  9778  0032E6  0E06               	movlw	6
  9779  0032E8  0101               	movlb	1	; () banked
  9780  0032EA  0101               	movlb	1	; () banked
  9781  0032EC  6F43               	movwf	___ftadd@sign& (0+255),b
  9782  0032EE  0101               	movlb	1	; () banked
  9783  0032F0  513E               	movf	??___ftadd& (0+255),w,b
  9784                           
  9785                           ; BSR set to: 1
  9786  0032F2  0101               	movlb	1	; () banked
  9787  0032F4  0101               	movlb	1	; () banked
  9788  0032F6  AF3A               	btfss	(___ftadd@f1+2)& (0+255),7,b
  9789  0032F8  D003               	goto	l10745
  9790                           
  9791                           ; BSR set to: 1
  9792  0032FA  0101               	movlb	1	; () banked
  9793  0032FC  0101               	movlb	1	; () banked
  9794  0032FE  8F43               	bsf	___ftadd@sign& (0+255),7,b
  9795  003300                     l10745:
  9796                           
  9797                           ; BSR set to: 1
  9798  003300  0101               	movlb	1	; () banked
  9799  003302  0101               	movlb	1	; () banked
  9800  003304  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9801  003306  D003               	goto	l716
  9802                           
  9803                           ; BSR set to: 1
  9804  003308  0101               	movlb	1	; () banked
  9805  00330A  0101               	movlb	1	; () banked
  9806  00330C  8D43               	bsf	___ftadd@sign& (0+255),6,b
  9807  00330E                     l716:
  9808                           
  9809                           ; BSR set to: 1
  9810  00330E  0101               	movlb	1	; () banked
  9811  003310  0101               	movlb	1	; () banked
  9812  003312  8F39               	bsf	(___ftadd@f1+1)& (0+255),7,b
  9813                           
  9814                           ; BSR set to: 1
  9815  003314  0EFF               	movlw	255
  9816  003316  0101               	movlb	1	; () banked
  9817  003318  0101               	movlb	1	; () banked
  9818  00331A  1738               	andwf	___ftadd@f1& (0+255),f,b
  9819  00331C  0EFF               	movlw	255
  9820  00331E  0101               	movlb	1	; () banked
  9821  003320  0101               	movlb	1	; () banked
  9822  003322  1739               	andwf	(___ftadd@f1+1)& (0+255),f,b
  9823  003324  0E00               	movlw	0
  9824  003326  0101               	movlb	1	; () banked
  9825  003328  0101               	movlb	1	; () banked
  9826  00332A  173A               	andwf	(___ftadd@f1+2)& (0+255),f,b
  9827  00332C  0101               	movlb	1	; () banked
  9828  00332E  0101               	movlb	1	; () banked
  9829  003330  8F3C               	bsf	(___ftadd@f2+1)& (0+255),7,b
  9830                           
  9831                           ; BSR set to: 1
  9832  003332  0EFF               	movlw	255
  9833  003334  0101               	movlb	1	; () banked
  9834  003336  0101               	movlb	1	; () banked
  9835  003338  173B               	andwf	___ftadd@f2& (0+255),f,b
  9836  00333A  0EFF               	movlw	255
  9837  00333C  0101               	movlb	1	; () banked
  9838  00333E  0101               	movlb	1	; () banked
  9839  003340  173C               	andwf	(___ftadd@f2+1)& (0+255),f,b
  9840  003342  0E00               	movlw	0
  9841  003344  0101               	movlb	1	; () banked
  9842  003346  0101               	movlb	1	; () banked
  9843  003348  173D               	andwf	(___ftadd@f2+2)& (0+255),f,b
  9844                           
  9845                           ; BSR set to: 1
  9846  00334A  0101               	movlb	1	; () banked
  9847  00334C  0101               	movlb	1	; () banked
  9848  00334E  5144               	movf	___ftadd@exp2& (0+255),w,b
  9849  003350  0101               	movlb	1	; () banked
  9850  003352  0101               	movlb	1	; () banked
  9851  003354  6145               	cpfslt	___ftadd@exp1& (0+255),b
  9852  003356  D02F               	goto	l10765
  9853  003358                     l10755:
  9854                           
  9855                           ; BSR set to: 1
  9856  003358  0101               	movlb	1	; () banked
  9857  00335A  90D8               	bcf	status,0,c
  9858  00335C  0101               	movlb	1	; () banked
  9859  00335E  373B               	rlcf	___ftadd@f2& (0+255),f,b
  9860  003360  0101               	movlb	1	; () banked
  9861  003362  373C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  9862  003364  0101               	movlb	1	; () banked
  9863  003366  373D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  9864  003368  0101               	movlb	1	; () banked
  9865  00336A  0101               	movlb	1	; () banked
  9866  00336C  0744               	decf	___ftadd@exp2& (0+255),f,b
  9867                           
  9868                           ; BSR set to: 1
  9869  00336E  0101               	movlb	1	; () banked
  9870  003370  0101               	movlb	1	; () banked
  9871  003372  5144               	movf	___ftadd@exp2& (0+255),w,b
  9872  003374  0101               	movlb	1	; () banked
  9873  003376  0101               	movlb	1	; () banked
  9874  003378  1945               	xorwf	___ftadd@exp1& (0+255),w,b
  9875  00337A  B4D8               	btfsc	status,2,c
  9876  00337C  D014               	goto	l10763
  9877                           
  9878                           ; BSR set to: 1
  9879  00337E  0101               	movlb	1	; () banked
  9880  003380  0101               	movlb	1	; () banked
  9881  003382  0743               	decf	___ftadd@sign& (0+255),f,b
  9882  003384  0101               	movlb	1	; () banked
  9883  003386  5143               	movf	___ftadd@sign& (0+255),w,b
  9884  003388  0B07               	andlw	7
  9885  00338A  B4D8               	btfsc	status,2,c
  9886  00338C  D00C               	goto	l10763
  9887  00338E  D7E4               	goto	l10755
  9888  003390                     l10761:
  9889                           
  9890                           ; BSR set to: 1
  9891  003390  0101               	movlb	1	; () banked
  9892  003392  90D8               	bcf	status,0,c
  9893  003394  0101               	movlb	1	; () banked
  9894  003396  333A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  9895  003398  0101               	movlb	1	; () banked
  9896  00339A  3339               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  9897  00339C  0101               	movlb	1	; () banked
  9898  00339E  3338               	rrcf	___ftadd@f1& (0+255),f,b
  9899  0033A0  0101               	movlb	1	; () banked
  9900  0033A2  0101               	movlb	1	; () banked
  9901  0033A4  2B45               	incf	___ftadd@exp1& (0+255),f,b
  9902  0033A6                     l10763:
  9903                           
  9904                           ; BSR set to: 1
  9905  0033A6  0101               	movlb	1	; () banked
  9906  0033A8  0101               	movlb	1	; () banked
  9907  0033AA  5144               	movf	___ftadd@exp2& (0+255),w,b
  9908  0033AC  0101               	movlb	1	; () banked
  9909  0033AE  0101               	movlb	1	; () banked
  9910  0033B0  6345               	cpfseq	___ftadd@exp1& (0+255),b
  9911  0033B2  D7EE               	goto	l10761
  9912  0033B4  D035               	goto	l725
  9913  0033B6                     l10765:
  9914                           
  9915                           ; BSR set to: 1
  9916  0033B6  0101               	movlb	1	; () banked
  9917  0033B8  0101               	movlb	1	; () banked
  9918  0033BA  5145               	movf	___ftadd@exp1& (0+255),w,b
  9919  0033BC  0101               	movlb	1	; () banked
  9920  0033BE  0101               	movlb	1	; () banked
  9921  0033C0  6144               	cpfslt	___ftadd@exp2& (0+255),b
  9922  0033C2  D02E               	goto	l725
  9923  0033C4                     l10767:
  9924                           
  9925                           ; BSR set to: 1
  9926  0033C4  0101               	movlb	1	; () banked
  9927  0033C6  90D8               	bcf	status,0,c
  9928  0033C8  0101               	movlb	1	; () banked
  9929  0033CA  3738               	rlcf	___ftadd@f1& (0+255),f,b
  9930  0033CC  0101               	movlb	1	; () banked
  9931  0033CE  3739               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  9932  0033D0  0101               	movlb	1	; () banked
  9933  0033D2  373A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  9934  0033D4  0101               	movlb	1	; () banked
  9935  0033D6  0101               	movlb	1	; () banked
  9936  0033D8  0745               	decf	___ftadd@exp1& (0+255),f,b
  9937                           
  9938                           ; BSR set to: 1
  9939  0033DA  0101               	movlb	1	; () banked
  9940  0033DC  0101               	movlb	1	; () banked
  9941  0033DE  5144               	movf	___ftadd@exp2& (0+255),w,b
  9942  0033E0  0101               	movlb	1	; () banked
  9943  0033E2  0101               	movlb	1	; () banked
  9944  0033E4  1945               	xorwf	___ftadd@exp1& (0+255),w,b
  9945  0033E6  B4D8               	btfsc	status,2,c
  9946  0033E8  D014               	goto	l10775
  9947                           
  9948                           ; BSR set to: 1
  9949  0033EA  0101               	movlb	1	; () banked
  9950  0033EC  0101               	movlb	1	; () banked
  9951  0033EE  0743               	decf	___ftadd@sign& (0+255),f,b
  9952  0033F0  0101               	movlb	1	; () banked
  9953  0033F2  5143               	movf	___ftadd@sign& (0+255),w,b
  9954  0033F4  0B07               	andlw	7
  9955  0033F6  B4D8               	btfsc	status,2,c
  9956  0033F8  D00C               	goto	l10775
  9957  0033FA  D7E4               	goto	l10767
  9958  0033FC                     l10773:
  9959                           
  9960                           ; BSR set to: 1
  9961  0033FC  0101               	movlb	1	; () banked
  9962  0033FE  90D8               	bcf	status,0,c
  9963  003400  0101               	movlb	1	; () banked
  9964  003402  333D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  9965  003404  0101               	movlb	1	; () banked
  9966  003406  333C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  9967  003408  0101               	movlb	1	; () banked
  9968  00340A  333B               	rrcf	___ftadd@f2& (0+255),f,b
  9969  00340C  0101               	movlb	1	; () banked
  9970  00340E  0101               	movlb	1	; () banked
  9971  003410  2B44               	incf	___ftadd@exp2& (0+255),f,b
  9972  003412                     l10775:
  9973                           
  9974                           ; BSR set to: 1
  9975  003412  0101               	movlb	1	; () banked
  9976  003414  0101               	movlb	1	; () banked
  9977  003416  5144               	movf	___ftadd@exp2& (0+255),w,b
  9978  003418  0101               	movlb	1	; () banked
  9979  00341A  0101               	movlb	1	; () banked
  9980  00341C  6345               	cpfseq	___ftadd@exp1& (0+255),b
  9981  00341E  D7EE               	goto	l10773
  9982  003420                     l725:
  9983                           
  9984                           ; BSR set to: 1
  9985  003420  0101               	movlb	1	; () banked
  9986  003422  0101               	movlb	1	; () banked
  9987  003424  AF43               	btfss	___ftadd@sign& (0+255),7,b
  9988  003426  D018               	goto	l734
  9989                           
  9990                           ; BSR set to: 1
  9991  003428  0EFF               	movlw	255
  9992  00342A  0101               	movlb	1	; () banked
  9993  00342C  0101               	movlb	1	; () banked
  9994  00342E  1B38               	xorwf	___ftadd@f1& (0+255),f,b
  9995  003430  0EFF               	movlw	255
  9996  003432  0101               	movlb	1	; () banked
  9997  003434  0101               	movlb	1	; () banked
  9998  003436  1B39               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  9999  003438  0EFF               	movlw	255
 10000  00343A  0101               	movlb	1	; () banked
 10001  00343C  0101               	movlb	1	; () banked
 10002  00343E  1B3A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10003  003440  0E01               	movlw	1
 10004  003442  0101               	movlb	1	; () banked
 10005  003444  0101               	movlb	1	; () banked
 10006  003446  2738               	addwf	___ftadd@f1& (0+255),f,b
 10007  003448  0E00               	movlw	0
 10008  00344A  0101               	movlb	1	; () banked
 10009  00344C  0101               	movlb	1	; () banked
 10010  00344E  2339               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10011  003450  0E00               	movlw	0
 10012  003452  0101               	movlb	1	; () banked
 10013  003454  0101               	movlb	1	; () banked
 10014  003456  233A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10015  003458                     l734:
 10016                           
 10017                           ; BSR set to: 1
 10018  003458  0101               	movlb	1	; () banked
 10019  00345A  0101               	movlb	1	; () banked
 10020  00345C  AD43               	btfss	___ftadd@sign& (0+255),6,b
 10021  00345E  D018               	goto	l10781
 10022                           
 10023                           ; BSR set to: 1
 10024  003460  0EFF               	movlw	255
 10025  003462  0101               	movlb	1	; () banked
 10026  003464  0101               	movlb	1	; () banked
 10027  003466  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 10028  003468  0EFF               	movlw	255
 10029  00346A  0101               	movlb	1	; () banked
 10030  00346C  0101               	movlb	1	; () banked
 10031  00346E  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10032  003470  0EFF               	movlw	255
 10033  003472  0101               	movlb	1	; () banked
 10034  003474  0101               	movlb	1	; () banked
 10035  003476  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10036  003478  0E01               	movlw	1
 10037  00347A  0101               	movlb	1	; () banked
 10038  00347C  0101               	movlb	1	; () banked
 10039  00347E  273B               	addwf	___ftadd@f2& (0+255),f,b
 10040  003480  0E00               	movlw	0
 10041  003482  0101               	movlb	1	; () banked
 10042  003484  0101               	movlb	1	; () banked
 10043  003486  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10044  003488  0E00               	movlw	0
 10045  00348A  0101               	movlb	1	; () banked
 10046  00348C  0101               	movlb	1	; () banked
 10047  00348E  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10048  003490                     l10781:
 10049                           
 10050                           ; BSR set to: 1
 10051  003490  0101               	movlb	1	; () banked
 10052  003492  6F3E               	movwf	??___ftadd& (0+255),b
 10053  003494  0E00               	movlw	0
 10054  003496  0101               	movlb	1	; () banked
 10055  003498  0101               	movlb	1	; () banked
 10056  00349A  6F43               	movwf	___ftadd@sign& (0+255),b
 10057  00349C  0101               	movlb	1	; () banked
 10058  00349E  513E               	movf	??___ftadd& (0+255),w,b
 10059                           
 10060                           ; BSR set to: 1
 10061  0034A0  0101               	movlb	1	; () banked
 10062  0034A2  0101               	movlb	1	; () banked
 10063  0034A4  5138               	movf	___ftadd@f1& (0+255),w,b
 10064  0034A6  0101               	movlb	1	; () banked
 10065  0034A8  0101               	movlb	1	; () banked
 10066  0034AA  273B               	addwf	___ftadd@f2& (0+255),f,b
 10067  0034AC  0101               	movlb	1	; () banked
 10068  0034AE  0101               	movlb	1	; () banked
 10069  0034B0  5139               	movf	(___ftadd@f1+1)& (0+255),w,b
 10070  0034B2  0101               	movlb	1	; () banked
 10071  0034B4  0101               	movlb	1	; () banked
 10072  0034B6  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10073  0034B8  0101               	movlb	1	; () banked
 10074  0034BA  0101               	movlb	1	; () banked
 10075  0034BC  513A               	movf	(___ftadd@f1+2)& (0+255),w,b
 10076  0034BE  0101               	movlb	1	; () banked
 10077  0034C0  0101               	movlb	1	; () banked
 10078  0034C2  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10079                           
 10080                           ; BSR set to: 1
 10081  0034C4  0101               	movlb	1	; () banked
 10082  0034C6  0101               	movlb	1	; () banked
 10083  0034C8  AF3D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10084  0034CA  D020               	goto	l10791
 10085                           
 10086                           ; BSR set to: 1
 10087  0034CC  0EFF               	movlw	255
 10088  0034CE  0101               	movlb	1	; () banked
 10089  0034D0  0101               	movlb	1	; () banked
 10090  0034D2  1B3B               	xorwf	___ftadd@f2& (0+255),f,b
 10091  0034D4  0EFF               	movlw	255
 10092  0034D6  0101               	movlb	1	; () banked
 10093  0034D8  0101               	movlb	1	; () banked
 10094  0034DA  1B3C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10095  0034DC  0EFF               	movlw	255
 10096  0034DE  0101               	movlb	1	; () banked
 10097  0034E0  0101               	movlb	1	; () banked
 10098  0034E2  1B3D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10099  0034E4  0E01               	movlw	1
 10100  0034E6  0101               	movlb	1	; () banked
 10101  0034E8  0101               	movlb	1	; () banked
 10102  0034EA  273B               	addwf	___ftadd@f2& (0+255),f,b
 10103  0034EC  0E00               	movlw	0
 10104  0034EE  0101               	movlb	1	; () banked
 10105  0034F0  0101               	movlb	1	; () banked
 10106  0034F2  233C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10107  0034F4  0E00               	movlw	0
 10108  0034F6  0101               	movlb	1	; () banked
 10109  0034F8  0101               	movlb	1	; () banked
 10110  0034FA  233D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10111                           
 10112                           ; BSR set to: 1
 10113  0034FC  0101               	movlb	1	; () banked
 10114  0034FE  6F3E               	movwf	??___ftadd& (0+255),b
 10115  003500  0E01               	movlw	1
 10116  003502  0101               	movlb	1	; () banked
 10117  003504  0101               	movlb	1	; () banked
 10118  003506  6F43               	movwf	___ftadd@sign& (0+255),b
 10119  003508  0101               	movlb	1	; () banked
 10120  00350A  513E               	movf	??___ftadd& (0+255),w,b
 10121  00350C                     l10791:
 10122                           
 10123                           ; BSR set to: 1
 10124  00350C  C13B  F100         	movff	___ftadd@f2,?___ftpack
 10125  003510  C13C  F101         	movff	___ftadd@f2+1,?___ftpack+1
 10126  003514  C13D  F102         	movff	___ftadd@f2+2,?___ftpack+2
 10127  003518  C145  F103         	movff	___ftadd@exp1,?___ftpack+3
 10128  00351C  C143  F104         	movff	___ftadd@sign,?___ftpack+4
 10129  003520  EC30  F022         	call	___ftpack	;wreg free
 10130  003524  C102  F13A         	movff	?___ftpack+2,?___ftadd+2
 10131  003528  C101  F139         	movff	?___ftpack+1,?___ftadd+1
 10132  00352C  C100  F138         	movff	?___ftpack,?___ftadd
 10133  003530                     l711:
 10134  003530  0012               	return	
 10135  003532                     __end_of___ftadd:
 10136                           	opt stack 0
 10137                           tblptru	equ	0xFF8
 10138                           tblptrh	equ	0xFF7
 10139                           tblptrl	equ	0xFF6
 10140                           tablat	equ	0xFF5
 10141                           prodh	equ	0xFF4
 10142                           prodl	equ	0xFF3
 10143                           intcon	equ	0xFF2
 10144                           intcon2	equ	0xFF1
 10145                           postinc0	equ	0xFEE
 10146                           wreg	equ	0xFE8
 10147                           indf2	equ	0xFDF
 10148                           postinc2	equ	0xFDE
 10149                           postdec2	equ	0xFDD
 10150                           fsr2h	equ	0xFDA
 10151                           fsr2l	equ	0xFD9
 10152                           status	equ	0xFD8
 10153                           
 10154 ;; *************** function ___altoft *****************
 10155 ;; Defined at:
 10156 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\altoft.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;  c               4    8[BANK1 ] long 
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;  sign            1   17[BANK1 ] unsigned char 
 10161 ;;  exp             1   16[BANK1 ] unsigned char 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  3    8[BANK1 ] float 
 10164 ;; Registers used:
 10165 ;;		wreg, status,2, status,0, cstack
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10171 ;;      Params:         0       0       4       0       0       0       0       0       0
 10172 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10173 ;;      Temps:          0       0       4       0       0       0       0       0       0
 10174 ;;      Totals:         0       0      10       0       0       0       0       0       0
 10175 ;;Total ram usage:       10 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:   10
 10178 ;; This function calls:
 10179 ;;		___ftpack
 10180 ;; This function is called by:
 10181 ;;		_USART_Init
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           	psect	text30
 10186  0051D8                     __ptext30:
 10187                           	opt stack 0
 10188  0051D8                     ___altoft:
 10189                           	opt stack 19
 10190                           
 10191                           ;incstack = 0
 10192                           ;incstack = 0
 10193  0051D8  0101               	movlb	1	; () banked
 10194  0051DA  6F0C               	movwf	??___altoft& (0+255),b
 10195  0051DC  0E00               	movlw	0
 10196  0051DE  0101               	movlb	1	; () banked
 10197  0051E0  0101               	movlb	1	; () banked
 10198  0051E2  6F11               	movwf	___altoft@sign& (0+255),b
 10199  0051E4  0101               	movlb	1	; () banked
 10200  0051E6  510C               	movf	??___altoft& (0+255),w,b
 10201  0051E8  0101               	movlb	1	; () banked
 10202  0051EA  6F0C               	movwf	??___altoft& (0+255),b
 10203  0051EC  0E8E               	movlw	142
 10204  0051EE  0101               	movlb	1	; () banked
 10205  0051F0  0101               	movlb	1	; () banked
 10206  0051F2  6F10               	movwf	___altoft@exp& (0+255),b
 10207  0051F4  0101               	movlb	1	; () banked
 10208  0051F6  510C               	movf	??___altoft& (0+255),w,b
 10209                           
 10210                           ; BSR set to: 1
 10211  0051F8  0101               	movlb	1	; () banked
 10212  0051FA  0101               	movlb	1	; () banked
 10213  0051FC  AF0B               	btfss	(___altoft@c+3)& (0+255),7,b
 10214  0051FE  D026               	goto	l10715
 10215                           
 10216                           ; BSR set to: 1
 10217  005200  0101               	movlb	1	; () banked
 10218  005202  0101               	movlb	1	; () banked
 10219  005204  1F0B               	comf	(___altoft@c+3)& (0+255),f,b
 10220  005206  0101               	movlb	1	; () banked
 10221  005208  1F0A               	comf	(___altoft@c+2)& (0+255),f,b
 10222  00520A  0101               	movlb	1	; () banked
 10223  00520C  1F09               	comf	(___altoft@c+1)& (0+255),f,b
 10224  00520E  0101               	movlb	1	; () banked
 10225  005210  6D08               	negf	___altoft@c& (0+255),b
 10226  005212  0E00               	movlw	0
 10227  005214  0101               	movlb	1	; () banked
 10228  005216  2309               	addwfc	(___altoft@c+1)& (0+255),f,b
 10229  005218  0101               	movlb	1	; () banked
 10230  00521A  230A               	addwfc	(___altoft@c+2)& (0+255),f,b
 10231  00521C  0101               	movlb	1	; () banked
 10232  00521E  230B               	addwfc	(___altoft@c+3)& (0+255),f,b
 10233                           
 10234                           ; BSR set to: 1
 10235  005220  0101               	movlb	1	; () banked
 10236  005222  6F0C               	movwf	??___altoft& (0+255),b
 10237  005224  0E01               	movlw	1
 10238  005226  0101               	movlb	1	; () banked
 10239  005228  0101               	movlb	1	; () banked
 10240  00522A  6F11               	movwf	___altoft@sign& (0+255),b
 10241  00522C  0101               	movlb	1	; () banked
 10242  00522E  510C               	movf	??___altoft& (0+255),w,b
 10243  005230  D00D               	goto	l10715
 10244  005232                     l10713:
 10245                           
 10246                           ; BSR set to: 1
 10247  005232  0101               	movlb	1	; () banked
 10248  005234  90D8               	bcf	status,0,c
 10249  005236  0101               	movlb	1	; () banked
 10250  005238  330B               	rrcf	(___altoft@c+3)& (0+255),f,b
 10251  00523A  0101               	movlb	1	; () banked
 10252  00523C  330A               	rrcf	(___altoft@c+2)& (0+255),f,b
 10253  00523E  0101               	movlb	1	; () banked
 10254  005240  3309               	rrcf	(___altoft@c+1)& (0+255),f,b
 10255  005242  0101               	movlb	1	; () banked
 10256  005244  3308               	rrcf	___altoft@c& (0+255),f,b
 10257  005246  0101               	movlb	1	; () banked
 10258  005248  0101               	movlb	1	; () banked
 10259  00524A  2B10               	incf	___altoft@exp& (0+255),f,b
 10260  00524C                     l10715:
 10261                           
 10262                           ; BSR set to: 1
 10263  00524C  0E00               	movlw	0
 10264  00524E  0101               	movlb	1	; () banked
 10265  005250  0101               	movlb	1	; () banked
 10266  005252  1508               	andwf	___altoft@c& (0+255),w,b
 10267  005254  0101               	movlb	1	; () banked
 10268  005256  6F0C               	movwf	??___altoft& (0+255),b
 10269  005258  0E00               	movlw	0
 10270  00525A  0101               	movlb	1	; () banked
 10271  00525C  0101               	movlb	1	; () banked
 10272  00525E  1509               	andwf	(___altoft@c+1)& (0+255),w,b
 10273  005260  0101               	movlb	1	; () banked
 10274  005262  6F0D               	movwf	(??___altoft+1)& (0+255),b
 10275  005264  0E00               	movlw	0
 10276  005266  0101               	movlb	1	; () banked
 10277  005268  0101               	movlb	1	; () banked
 10278  00526A  150A               	andwf	(___altoft@c+2)& (0+255),w,b
 10279  00526C  0101               	movlb	1	; () banked
 10280  00526E  6F0E               	movwf	(??___altoft+2)& (0+255),b
 10281  005270  0EFF               	movlw	255
 10282  005272  0101               	movlb	1	; () banked
 10283  005274  0101               	movlb	1	; () banked
 10284  005276  150B               	andwf	(___altoft@c+3)& (0+255),w,b
 10285  005278  0101               	movlb	1	; () banked
 10286  00527A  6F0F               	movwf	(??___altoft+3)& (0+255),b
 10287  00527C  0101               	movlb	1	; () banked
 10288  00527E  510F               	movf	(??___altoft+3)& (0+255),w,b
 10289  005280  110C               	iorwf	??___altoft& (0+255),w,b
 10290  005282  110D               	iorwf	(??___altoft+1)& (0+255),w,b
 10291  005284  110E               	iorwf	(??___altoft+2)& (0+255),w,b
 10292  005286  A4D8               	btfss	status,2,c
 10293  005288  D7D4               	goto	l10713
 10294                           
 10295                           ; BSR set to: 1
 10296                           
 10297                           ; BSR set to: 1
 10298  00528A  C108  F100         	movff	___altoft@c,?___ftpack
 10299  00528E  C109  F101         	movff	___altoft@c+1,?___ftpack+1
 10300  005292  C10A  F102         	movff	___altoft@c+2,?___ftpack+2
 10301  005296  C110  F103         	movff	___altoft@exp,?___ftpack+3
 10302  00529A  C111  F104         	movff	___altoft@sign,?___ftpack+4
 10303  00529E  EC30  F022         	call	___ftpack	;wreg free
 10304  0052A2  C102  F10A         	movff	?___ftpack+2,?___altoft+2
 10305  0052A6  C101  F109         	movff	?___ftpack+1,?___altoft+1
 10306  0052AA  C100  F108         	movff	?___ftpack,?___altoft
 10307  0052AE  0012               	return	
 10308  0052B0                     __end_of___altoft:
 10309                           	opt stack 0
 10310                           tblptru	equ	0xFF8
 10311                           tblptrh	equ	0xFF7
 10312                           tblptrl	equ	0xFF6
 10313                           tablat	equ	0xFF5
 10314                           prodh	equ	0xFF4
 10315                           prodl	equ	0xFF3
 10316                           intcon	equ	0xFF2
 10317                           intcon2	equ	0xFF1
 10318                           postinc0	equ	0xFEE
 10319                           wreg	equ	0xFE8
 10320                           indf2	equ	0xFDF
 10321                           postinc2	equ	0xFDE
 10322                           postdec2	equ	0xFDD
 10323                           fsr2h	equ	0xFDA
 10324                           fsr2l	equ	0xFD9
 10325                           status	equ	0xFD8
 10326                           
 10327 ;; *************** function ___ftpack *****************
 10328 ;; Defined at:
 10329 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;  arg             3    0[BANK1 ] unsigned um
 10332 ;;  exp             1    3[BANK1 ] unsigned char 
 10333 ;;  sign            1    4[BANK1 ] unsigned char 
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  3    0[BANK1 ] float 
 10338 ;; Registers used:
 10339 ;;		wreg, status,2, status,0
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10345 ;;      Params:         0       0       5       0       0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10347 ;;      Temps:          0       0       3       0       0       0       0       0       0
 10348 ;;      Totals:         0       0       8       0       0       0       0       0       0
 10349 ;;Total ram usage:        8 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    9
 10352 ;; This function calls:
 10353 ;;		Nothing
 10354 ;; This function is called by:
 10355 ;;		___altoft
 10356 ;;		___awtoft
 10357 ;;		___ftadd
 10358 ;;		___ftdiv
 10359 ;;		___ftmul
 10360 ;;		___lltoft
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           	psect	text31
 10365  004460                     __ptext31:
 10366                           	opt stack 0
 10367  004460                     ___ftpack:
 10368                           	opt stack 19
 10369                           
 10370                           ;incstack = 0
 10371                           ;incstack = 0
 10372  004460  0101               	movlb	1	; () banked
 10373  004462  0101               	movlb	1	; () banked
 10374  004464  5103               	movf	___ftpack@exp& (0+255),w,b
 10375  004466  B4D8               	btfsc	status,2,c
 10376  004468  D009               	goto	l10675
 10377                           
 10378                           ; BSR set to: 1
 10379  00446A  0101               	movlb	1	; () banked
 10380  00446C  0101               	movlb	1	; () banked
 10381  00446E  5100               	movf	___ftpack@arg& (0+255),w,b
 10382  004470  0101               	movlb	1	; () banked
 10383  004472  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10384  004474  0101               	movlb	1	; () banked
 10385  004476  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10386  004478  A4D8               	btfss	status,2,c
 10387  00447A  D018               	goto	l10681
 10388  00447C                     l10675:
 10389                           
 10390                           ; BSR set to: 1
 10391  00447C  0E00               	movlw	0
 10392  00447E  0101               	movlb	1	; () banked
 10393  004480  0101               	movlb	1	; () banked
 10394  004482  6F00               	movwf	?___ftpack& (0+255),b
 10395  004484  0E00               	movlw	0
 10396  004486  0101               	movlb	1	; () banked
 10397  004488  0101               	movlb	1	; () banked
 10398  00448A  6F01               	movwf	(?___ftpack+1)& (0+255),b
 10399  00448C  0E00               	movlw	0
 10400  00448E  0101               	movlb	1	; () banked
 10401  004490  0101               	movlb	1	; () banked
 10402  004492  6F02               	movwf	(?___ftpack+2)& (0+255),b
 10403  004494  D091               	goto	l673
 10404  004496                     l10679:
 10405                           
 10406                           ; BSR set to: 1
 10407  004496  0101               	movlb	1	; () banked
 10408  004498  0101               	movlb	1	; () banked
 10409  00449A  2B03               	incf	___ftpack@exp& (0+255),f,b
 10410  00449C  0101               	movlb	1	; () banked
 10411  00449E  90D8               	bcf	status,0,c
 10412  0044A0  0101               	movlb	1	; () banked
 10413  0044A2  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10414  0044A4  0101               	movlb	1	; () banked
 10415  0044A6  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10416  0044A8  0101               	movlb	1	; () banked
 10417  0044AA  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10418  0044AC                     l10681:
 10419                           
 10420                           ; BSR set to: 1
 10421  0044AC  0E00               	movlw	0
 10422  0044AE  0101               	movlb	1	; () banked
 10423  0044B0  0101               	movlb	1	; () banked
 10424  0044B2  1500               	andwf	___ftpack@arg& (0+255),w,b
 10425  0044B4  0101               	movlb	1	; () banked
 10426  0044B6  6F05               	movwf	??___ftpack& (0+255),b
 10427  0044B8  0E00               	movlw	0
 10428  0044BA  0101               	movlb	1	; () banked
 10429  0044BC  0101               	movlb	1	; () banked
 10430  0044BE  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10431  0044C0  0101               	movlb	1	; () banked
 10432  0044C2  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10433  0044C4  0EFE               	movlw	254
 10434  0044C6  0101               	movlb	1	; () banked
 10435  0044C8  0101               	movlb	1	; () banked
 10436  0044CA  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10437  0044CC  0101               	movlb	1	; () banked
 10438  0044CE  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10439  0044D0  0101               	movlb	1	; () banked
 10440  0044D2  5105               	movf	??___ftpack& (0+255),w,b
 10441  0044D4  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10442  0044D6  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10443  0044D8  B4D8               	btfsc	status,2,c
 10444  0044DA  D018               	goto	l10687
 10445  0044DC  D7DC               	goto	l10679
 10446  0044DE                     l10683:
 10447                           
 10448                           ; BSR set to: 1
 10449  0044DE  0101               	movlb	1	; () banked
 10450  0044E0  0101               	movlb	1	; () banked
 10451  0044E2  2B03               	incf	___ftpack@exp& (0+255),f,b
 10452                           
 10453                           ; BSR set to: 1
 10454  0044E4  0E01               	movlw	1
 10455  0044E6  0101               	movlb	1	; () banked
 10456  0044E8  0101               	movlb	1	; () banked
 10457  0044EA  2700               	addwf	___ftpack@arg& (0+255),f,b
 10458  0044EC  0E00               	movlw	0
 10459  0044EE  0101               	movlb	1	; () banked
 10460  0044F0  0101               	movlb	1	; () banked
 10461  0044F2  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10462  0044F4  0E00               	movlw	0
 10463  0044F6  0101               	movlb	1	; () banked
 10464  0044F8  0101               	movlb	1	; () banked
 10465  0044FA  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10466  0044FC  0101               	movlb	1	; () banked
 10467  0044FE  90D8               	bcf	status,0,c
 10468  004500  0101               	movlb	1	; () banked
 10469  004502  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10470  004504  0101               	movlb	1	; () banked
 10471  004506  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10472  004508  0101               	movlb	1	; () banked
 10473  00450A  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10474  00450C                     l10687:
 10475                           
 10476                           ; BSR set to: 1
 10477  00450C  0E00               	movlw	0
 10478  00450E  0101               	movlb	1	; () banked
 10479  004510  0101               	movlb	1	; () banked
 10480  004512  1500               	andwf	___ftpack@arg& (0+255),w,b
 10481  004514  0101               	movlb	1	; () banked
 10482  004516  6F05               	movwf	??___ftpack& (0+255),b
 10483  004518  0E00               	movlw	0
 10484  00451A  0101               	movlb	1	; () banked
 10485  00451C  0101               	movlb	1	; () banked
 10486  00451E  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10487  004520  0101               	movlb	1	; () banked
 10488  004522  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10489  004524  0EFF               	movlw	255
 10490  004526  0101               	movlb	1	; () banked
 10491  004528  0101               	movlb	1	; () banked
 10492  00452A  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10493  00452C  0101               	movlb	1	; () banked
 10494  00452E  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10495  004530  0101               	movlb	1	; () banked
 10496  004532  5105               	movf	??___ftpack& (0+255),w,b
 10497  004534  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10498  004536  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10499  004538  B4D8               	btfsc	status,2,c
 10500  00453A  D00C               	goto	l10691
 10501  00453C  D7D0               	goto	l10683
 10502  00453E                     l10689:
 10503                           
 10504                           ; BSR set to: 1
 10505  00453E  0101               	movlb	1	; () banked
 10506  004540  0101               	movlb	1	; () banked
 10507  004542  0703               	decf	___ftpack@exp& (0+255),f,b
 10508  004544  0101               	movlb	1	; () banked
 10509  004546  90D8               	bcf	status,0,c
 10510  004548  0101               	movlb	1	; () banked
 10511  00454A  3700               	rlcf	___ftpack@arg& (0+255),f,b
 10512  00454C  0101               	movlb	1	; () banked
 10513  00454E  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10514  004550  0101               	movlb	1	; () banked
 10515  004552  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10516  004554                     l10691:
 10517                           
 10518                           ; BSR set to: 1
 10519  004554  0101               	movlb	1	; () banked
 10520  004556  0101               	movlb	1	; () banked
 10521  004558  AF01               	btfss	(___ftpack@arg+1)& (0+255),7,b
 10522  00455A  D7F1               	goto	l10689
 10523                           
 10524                           ; BSR set to: 1
 10525  00455C  0101               	movlb	1	; () banked
 10526  00455E  0101               	movlb	1	; () banked
 10527  004560  B103               	btfsc	___ftpack@exp& (0+255),0,b
 10528  004562  D003               	goto	l10695
 10529                           
 10530                           ; BSR set to: 1
 10531  004564  0101               	movlb	1	; () banked
 10532  004566  0101               	movlb	1	; () banked
 10533  004568  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10534  00456A                     l10695:
 10535                           
 10536                           ; BSR set to: 1
 10537  00456A  0101               	movlb	1	; () banked
 10538  00456C  90D8               	bcf	status,0,c
 10539  00456E  3303               	rrcf	___ftpack@exp& (0+255),f,b
 10540  004570  0101               	movlb	1	; () banked
 10541  004572  0101               	movlb	1	; () banked
 10542  004574  5103               	movf	___ftpack@exp& (0+255),w,b
 10543  004576  0101               	movlb	1	; () banked
 10544  004578  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10545  00457A  6B06               	clrf	(??___ftpack+1)& (0+255),b
 10546  00457C  6B05               	clrf	??___ftpack& (0+255),b
 10547  00457E  0101               	movlb	1	; () banked
 10548  004580  5105               	movf	??___ftpack& (0+255),w,b
 10549  004582  0101               	movlb	1	; () banked
 10550  004584  0101               	movlb	1	; () banked
 10551  004586  1300               	iorwf	___ftpack@arg& (0+255),f,b
 10552  004588  0101               	movlb	1	; () banked
 10553  00458A  5106               	movf	(??___ftpack+1)& (0+255),w,b
 10554  00458C  0101               	movlb	1	; () banked
 10555  00458E  0101               	movlb	1	; () banked
 10556  004590  1301               	iorwf	(___ftpack@arg+1)& (0+255),f,b
 10557  004592  0101               	movlb	1	; () banked
 10558  004594  5107               	movf	(??___ftpack+2)& (0+255),w,b
 10559  004596  0101               	movlb	1	; () banked
 10560  004598  0101               	movlb	1	; () banked
 10561  00459A  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10562                           
 10563                           ; BSR set to: 1
 10564  00459C  0101               	movlb	1	; () banked
 10565  00459E  0101               	movlb	1	; () banked
 10566  0045A0  5104               	movf	___ftpack@sign& (0+255),w,b
 10567  0045A2  B4D8               	btfsc	status,2,c
 10568  0045A4  D003               	goto	l10701
 10569                           
 10570                           ; BSR set to: 1
 10571  0045A6  0101               	movlb	1	; () banked
 10572  0045A8  0101               	movlb	1	; () banked
 10573  0045AA  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10574  0045AC                     l10701:
 10575                           
 10576                           ; BSR set to: 1
 10577  0045AC  C100  F100         	movff	___ftpack@arg,?___ftpack
 10578  0045B0  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 10579  0045B4  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 10580  0045B8                     l673:
 10581                           
 10582                           ; BSR set to: 1
 10583  0045B8  0012               	return	
 10584  0045BA                     __end_of___ftpack:
 10585                           	opt stack 0
 10586                           tblptru	equ	0xFF8
 10587                           tblptrh	equ	0xFF7
 10588                           tblptrl	equ	0xFF6
 10589                           tablat	equ	0xFF5
 10590                           prodh	equ	0xFF4
 10591                           prodl	equ	0xFF3
 10592                           intcon	equ	0xFF2
 10593                           intcon2	equ	0xFF1
 10594                           postinc0	equ	0xFEE
 10595                           wreg	equ	0xFE8
 10596                           indf2	equ	0xFDF
 10597                           postinc2	equ	0xFDE
 10598                           postdec2	equ	0xFDD
 10599                           fsr2h	equ	0xFDA
 10600                           fsr2l	equ	0xFD9
 10601                           status	equ	0xFD8
 10602                           
 10603 ;; *************** function _Init_AD *****************
 10604 ;; Defined at:
 10605 ;;		line 274 in file "main.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;		None
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;		None               void
 10612 ;; Registers used:
 10613 ;;		wreg, status,2
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10619 ;;      Params:         0       0       0       0       0       0       0       0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10621 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10622 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10623 ;;Total ram usage:        0 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    9
 10626 ;; This function calls:
 10627 ;;		Nothing
 10628 ;; This function is called by:
 10629 ;;		_main
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           	psect	text32
 10634  0062F8                     __ptext32:
 10635                           	opt stack 0
 10636  0062F8                     _Init_AD:
 10637                           	opt stack 21
 10638                           
 10639                           ;main.c: 275: TRISA0 = 1;
 10640                           
 10641                           ; BSR set to: 1
 10642                           ;incstack = 0
 10643                           ;incstack = 0
 10644  0062F8  8092               	bsf	3986,0,c	;volatile
 10645                           
 10646                           ;main.c: 276: ADCON1 = 0x0e;
 10647  0062FA  0E0E               	movlw	14
 10648  0062FC  6EC1               	movwf	4033,c	;volatile
 10649                           
 10650                           ;main.c: 277: ADCON2 = 0x92;
 10651  0062FE  0E92               	movlw	146
 10652  006300  6EC0               	movwf	4032,c	;volatile
 10653                           
 10654                           ;main.c: 278: ADRESH=0;
 10655  006302  0E00               	movlw	0
 10656  006304  6EC4               	movwf	4036,c	;volatile
 10657                           
 10658                           ;main.c: 279: ADRESL=0;
 10659  006306  0E00               	movlw	0
 10660  006308  6EC3               	movwf	4035,c	;volatile
 10661  00630A  0012               	return	
 10662  00630C                     __end_of_Init_AD:
 10663                           	opt stack 0
 10664                           tblptru	equ	0xFF8
 10665                           tblptrh	equ	0xFF7
 10666                           tblptrl	equ	0xFF6
 10667                           tablat	equ	0xFF5
 10668                           prodh	equ	0xFF4
 10669                           prodl	equ	0xFF3
 10670                           intcon	equ	0xFF2
 10671                           intcon2	equ	0xFF1
 10672                           postinc0	equ	0xFEE
 10673                           wreg	equ	0xFE8
 10674                           indf2	equ	0xFDF
 10675                           postinc2	equ	0xFDE
 10676                           postdec2	equ	0xFDD
 10677                           fsr2h	equ	0xFDA
 10678                           fsr2l	equ	0xFD9
 10679                           status	equ	0xFD8
 10680                           
 10681 ;; *************** function _Timer1_Init *****************
 10682 ;; Defined at:
 10683 ;;		line 231 in file "main.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;		None
 10686 ;; Auto vars:     Size  Location     Type
 10687 ;;		None
 10688 ;; Return value:  Size  Location     Type
 10689 ;;		None               void
 10690 ;; Registers used:
 10691 ;;		wreg, status,2
 10692 ;; Tracked objects:
 10693 ;;		On entry : 0/0
 10694 ;;		On exit  : 0/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10697 ;;      Params:         0       0       0       0       0       0       0       0       0
 10698 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10699 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10700 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10701 ;;Total ram usage:        0 bytes
 10702 ;; Hardware stack levels used:    1
 10703 ;; Hardware stack levels required when called:    9
 10704 ;; This function calls:
 10705 ;;		Nothing
 10706 ;; This function is called by:
 10707 ;;		_main
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           	psect	text33
 10712  00630C                     __ptext33:
 10713                           	opt stack 0
 10714  00630C                     _Timer1_Init:
 10715                           	opt stack 21
 10716                           
 10717                           ;main.c: 232: T1CONbits.RD16=1;
 10718                           
 10719                           ;incstack = 0
 10720                           ;incstack = 0
 10721  00630C  8ECD               	bsf	4045,7,c	;volatile
 10722                           
 10723                           ;main.c: 233: T1CONbits.T1CKPS=0b00;
 10724  00630E  0ECF               	movlw	-49
 10725  006310  16CD               	andwf	4045,f,c	;volatile
 10726                           
 10727                           ;main.c: 234: T1CONbits.TMR1CS=0;
 10728  006312  92CD               	bcf	4045,1,c	;volatile
 10729                           
 10730                           ;main.c: 235: TMR1=0;
 10731  006314  0E00               	movlw	0
 10732  006316  6ECF               	movwf	4047,c	;volatile
 10733  006318  0E00               	movlw	0
 10734  00631A  6ECE               	movwf	4046,c	;volatile
 10735                           
 10736                           ;main.c: 236: TMR1ON=0;
 10737  00631C  90CD               	bcf	4045,0,c	;volatile
 10738  00631E  0012               	return	
 10739  006320                     __end_of_Timer1_Init:
 10740                           	opt stack 0
 10741                           tblptru	equ	0xFF8
 10742                           tblptrh	equ	0xFF7
 10743                           tblptrl	equ	0xFF6
 10744                           tablat	equ	0xFF5
 10745                           prodh	equ	0xFF4
 10746                           prodl	equ	0xFF3
 10747                           intcon	equ	0xFF2
 10748                           intcon2	equ	0xFF1
 10749                           postinc0	equ	0xFEE
 10750                           wreg	equ	0xFE8
 10751                           indf2	equ	0xFDF
 10752                           postinc2	equ	0xFDE
 10753                           postdec2	equ	0xFDD
 10754                           fsr2h	equ	0xFDA
 10755                           fsr2l	equ	0xFD9
 10756                           status	equ	0xFD8
 10757                           
 10758 ;; *************** function _Configuracion_Registros *****************
 10759 ;; Defined at:
 10760 ;;		line 220 in file "main.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;		None
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;		None
 10765 ;; Return value:  Size  Location     Type
 10766 ;;		None               void
 10767 ;; Registers used:
 10768 ;;		wreg, status,2, status,0
 10769 ;; Tracked objects:
 10770 ;;		On entry : 0/0
 10771 ;;		On exit  : 0/0
 10772 ;;		Unchanged: 0/0
 10773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10774 ;;      Params:         0       0       0       0       0       0       0       0       0
 10775 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10776 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10777 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10778 ;;Total ram usage:        0 bytes
 10779 ;; Hardware stack levels used:    1
 10780 ;; Hardware stack levels required when called:    9
 10781 ;; This function calls:
 10782 ;;		Nothing
 10783 ;; This function is called by:
 10784 ;;		_main
 10785 ;; This function uses a non-reentrant model
 10786 ;;
 10787                           
 10788                           	psect	text34
 10789  006320                     __ptext34:
 10790                           	opt stack 0
 10791  006320                     _Configuracion_Registros:
 10792                           	opt stack 21
 10793                           
 10794                           ;main.c: 221: ADCON1bits.PCFG=0b1111;
 10795                           
 10796                           ;incstack = 0
 10797                           ;incstack = 0
 10798  006320  80C1               	bsf	4033,0,c	;volatile
 10799  006322  82C1               	bsf	4033,1,c	;volatile
 10800  006324  84C1               	bsf	4033,2,c	;volatile
 10801  006326  86C1               	bsf	4033,3,c	;volatile
 10802                           
 10803                           ;main.c: 222: TRISA&=~(1<<1);
 10804  006328  9292               	bcf	3986,1,c	;volatile
 10805                           
 10806                           ;main.c: 223: TRISA|=(1<<2);
 10807  00632A  8492               	bsf	3986,2,c	;volatile
 10808                           
 10809                           ;main.c: 225: TRISB = 0;
 10810  00632C  0E00               	movlw	0
 10811  00632E  6E93               	movwf	3987,c	;volatile
 10812  006330  0012               	return	
 10813  006332                     __end_of_Configuracion_Registros:
 10814                           	opt stack 0
 10815                           tblptru	equ	0xFF8
 10816                           tblptrh	equ	0xFF7
 10817                           tblptrl	equ	0xFF6
 10818                           tablat	equ	0xFF5
 10819                           prodh	equ	0xFF4
 10820                           prodl	equ	0xFF3
 10821                           intcon	equ	0xFF2
 10822                           intcon2	equ	0xFF1
 10823                           postinc0	equ	0xFEE
 10824                           wreg	equ	0xFE8
 10825                           indf2	equ	0xFDF
 10826                           postinc2	equ	0xFDE
 10827                           postdec2	equ	0xFDD
 10828                           fsr2h	equ	0xFDA
 10829                           fsr2l	equ	0xFD9
 10830                           status	equ	0xFD8
 10831                           
 10832 ;; *************** function _lcd_putc *****************
 10833 ;; Defined at:
 10834 ;;		line 135 in file "lcd.h"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  a               2    4[BANK1 ] PTR unsigned char 
 10837 ;;		 -> LCD_Buffer(32), 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  i               2    6[BANK1 ] int 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;		None               void
 10842 ;; Registers used:
 10843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10849 ;;      Params:         0       0       2       0       0       0       0       0       0
 10850 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10851 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10852 ;;      Totals:         0       0       4       0       0       0       0       0       0
 10853 ;;Total ram usage:        4 bytes
 10854 ;; Hardware stack levels used:    1
 10855 ;; Hardware stack levels required when called:   11
 10856 ;; This function calls:
 10857 ;;		_lcd_write_char
 10858 ;; This function is called by:
 10859 ;;		_main
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           	psect	text35
 10864  005BF2                     __ptext35:
 10865                           	opt stack 0
 10866  005BF2                     _lcd_putc:
 10867                           	opt stack 19
 10868                           
 10869                           ;lcd.h: 136: int i;
 10870                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
 10871                           
 10872                           ;incstack = 0
 10873                           ;incstack = 0
 10874  005BF2  0E00               	movlw	0
 10875  005BF4  0101               	movlb	1	; () banked
 10876  005BF6  0101               	movlb	1	; () banked
 10877  005BF8  6F07               	movwf	(lcd_putc@i+1)& (0+255),b
 10878  005BFA  0E00               	movlw	0
 10879  005BFC  0101               	movlb	1	; () banked
 10880  005BFE  6F06               	movwf	lcd_putc@i& (0+255),b
 10881  005C00  D018               	goto	l10049
 10882  005C02                     l10045:
 10883                           
 10884                           ; BSR set to: 1
 10885                           ;lcd.h: 138: lcd_write_char(a[i]);
 10886  005C02  0101               	movlb	1	; () banked
 10887  005C04  0101               	movlb	1	; () banked
 10888  005C06  5106               	movf	lcd_putc@i& (0+255),w,b
 10889  005C08  0101               	movlb	1	; () banked
 10890  005C0A  0101               	movlb	1	; () banked
 10891  005C0C  2504               	addwf	lcd_putc@a& (0+255),w,b
 10892  005C0E  6ED9               	movwf	fsr2l,c
 10893  005C10  0101               	movlb	1	; () banked
 10894  005C12  0101               	movlb	1	; () banked
 10895  005C14  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
 10896  005C16  0101               	movlb	1	; () banked
 10897  005C18  0101               	movlb	1	; () banked
 10898  005C1A  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
 10899  005C1C  6EDA               	movwf	fsr2h,c
 10900  005C1E  50DF               	movf	indf2,w,c
 10901  005C20  0101               	movlb	1	; () banked
 10902  005C22  0101               	movlb	1	; () banked
 10903  005C24  6F01               	movwf	?_lcd_write_char& (0+255),b
 10904  005C26  ECE4  F02E         	call	_lcd_write_char	;wreg free
 10905  005C2A  0101               	movlb	1	; () banked
 10906  005C2C  0101               	movlb	1	; () banked
 10907  005C2E  4B06               	infsnz	lcd_putc@i& (0+255),f,b
 10908  005C30  2B07               	incf	(lcd_putc@i+1)& (0+255),f,b
 10909  005C32                     l10049:
 10910                           
 10911                           ; BSR set to: 1
 10912  005C32  0101               	movlb	1	; () banked
 10913  005C34  0101               	movlb	1	; () banked
 10914  005C36  5106               	movf	lcd_putc@i& (0+255),w,b
 10915  005C38  0101               	movlb	1	; () banked
 10916  005C3A  0101               	movlb	1	; () banked
 10917  005C3C  2504               	addwf	lcd_putc@a& (0+255),w,b
 10918  005C3E  6ED9               	movwf	fsr2l,c
 10919  005C40  0101               	movlb	1	; () banked
 10920  005C42  0101               	movlb	1	; () banked
 10921  005C44  5107               	movf	(lcd_putc@i+1)& (0+255),w,b
 10922  005C46  0101               	movlb	1	; () banked
 10923  005C48  0101               	movlb	1	; () banked
 10924  005C4A  2105               	addwfc	(lcd_putc@a+1)& (0+255),w,b
 10925  005C4C  6EDA               	movwf	fsr2h,c
 10926  005C4E  50DF               	movf	indf2,w,c
 10927  005C50  B4D8               	btfsc	status,2,c
 10928                           
 10929                           ; BSR set to: 1
 10930                           
 10931                           ; BSR set to: 1
 10932  005C52  0012               	return	
 10933  005C54  D7D6               	goto	l10045
 10934  005C56                     __end_of_lcd_putc:
 10935                           	opt stack 0
 10936                           tblptru	equ	0xFF8
 10937                           tblptrh	equ	0xFF7
 10938                           tblptrl	equ	0xFF6
 10939                           tablat	equ	0xFF5
 10940                           prodh	equ	0xFF4
 10941                           prodl	equ	0xFF3
 10942                           intcon	equ	0xFF2
 10943                           intcon2	equ	0xFF1
 10944                           postinc0	equ	0xFEE
 10945                           wreg	equ	0xFE8
 10946                           indf2	equ	0xFDF
 10947                           postinc2	equ	0xFDE
 10948                           postdec2	equ	0xFDD
 10949                           fsr2h	equ	0xFDA
 10950                           fsr2l	equ	0xFD9
 10951                           status	equ	0xFD8
 10952                           
 10953 ;; *************** function _lcd_write_char *****************
 10954 ;; Defined at:
 10955 ;;		line 117 in file "lcd.h"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;  a               1    1[BANK1 ] unsigned char 
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;  y               1    3[BANK1 ] unsigned char 
 10960 ;;  temp            1    2[BANK1 ] unsigned char 
 10961 ;; Return value:  Size  Location     Type
 10962 ;;		None               void
 10963 ;; Registers used:
 10964 ;;		wreg, status,2, status,0, cstack
 10965 ;; Tracked objects:
 10966 ;;		On entry : 0/0
 10967 ;;		On exit  : 0/0
 10968 ;;		Unchanged: 0/0
 10969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10970 ;;      Params:         0       0       1       0       0       0       0       0       0
 10971 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10972 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10973 ;;      Totals:         0       0       3       0       0       0       0       0       0
 10974 ;;Total ram usage:        3 bytes
 10975 ;; Hardware stack levels used:    1
 10976 ;; Hardware stack levels required when called:   10
 10977 ;; This function calls:
 10978 ;;		_Lcd_Port
 10979 ;; This function is called by:
 10980 ;;		_lcd_putc
 10981 ;; This function uses a non-reentrant model
 10982 ;;
 10983                           
 10984                           	psect	text36
 10985  005DC8                     __ptext36:
 10986                           	opt stack 0
 10987  005DC8                     _lcd_write_char:
 10988                           	opt stack 19
 10989                           
 10990                           ;lcd.h: 118: char temp,y;
 10991                           ;lcd.h: 119: temp = a&0x0F;
 10992                           
 10993                           ; BSR set to: 1
 10994                           ;incstack = 0
 10995                           ;incstack = 0
 10996  005DC8  0101               	movlb	1	; () banked
 10997  005DCA  0101               	movlb	1	; () banked
 10998  005DCC  5101               	movf	lcd_write_char@a& (0+255),w,b
 10999  005DCE  0B0F               	andlw	15
 11000  005DD0  0101               	movlb	1	; () banked
 11001  005DD2  0101               	movlb	1	; () banked
 11002  005DD4  6F02               	movwf	lcd_write_char@temp& (0+255),b
 11003                           
 11004                           ;lcd.h: 120: y = a&0xF0;
 11005  005DD6  0101               	movlb	1	; () banked
 11006  005DD8  0101               	movlb	1	; () banked
 11007  005DDA  5101               	movf	lcd_write_char@a& (0+255),w,b
 11008  005DDC  0BF0               	andlw	240
 11009  005DDE  0101               	movlb	1	; () banked
 11010  005DE0  0101               	movlb	1	; () banked
 11011  005DE2  6F03               	movwf	lcd_write_char@y& (0+255),b
 11012                           
 11013                           ; BSR set to: 1
 11014                           ;lcd.h: 121: RD2 = 1;
 11015  005DE4  8483               	bsf	3971,2,c	;volatile
 11016                           
 11017                           ; BSR set to: 1
 11018                           ;lcd.h: 122: Lcd_Port(y>>4);
 11019  005DE6  0101               	movlb	1	; () banked
 11020  005DE8  0101               	movlb	1	; () banked
 11021  005DEA  3903               	swapf	lcd_write_char@y& (0+255),w,b
 11022  005DEC  0B0F               	andlw	15
 11023  005DEE  0101               	movlb	1	; () banked
 11024  005DF0  0101               	movlb	1	; () banked
 11025  005DF2  6F00               	movwf	?_Lcd_Port& (0+255),b
 11026  005DF4  EC6C  F030         	call	_Lcd_Port	;wreg free
 11027                           
 11028                           ;lcd.h: 123: RD3 = 1;
 11029  005DF8  8683               	bsf	3971,3,c	;volatile
 11030                           
 11031                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
 11032  005DFA  0E1A               	movlw	26
 11033  005DFC                     u11117:
 11034  005DFC  2EE8               	decfsz	wreg,f,c
 11035  005DFE  D7FE               	goto	u11117
 11036  005E00  D000               	nop2		;nop
 11037                           
 11038                           ;lcd.h: 125: RD3 = 0;
 11039  005E02  9683               	bcf	3971,3,c	;volatile
 11040                           
 11041                           ;lcd.h: 126: Lcd_Port(temp);
 11042  005E04  C102  F100         	movff	lcd_write_char@temp,?_Lcd_Port
 11043  005E08  EC6C  F030         	call	_Lcd_Port	;wreg free
 11044                           
 11045                           ;lcd.h: 127: RD3 = 1;
 11046  005E0C  8683               	bsf	3971,3,c	;volatile
 11047                           
 11048                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
 11049  005E0E  0E1A               	movlw	26
 11050  005E10                     u11127:
 11051  005E10  2EE8               	decfsz	wreg,f,c
 11052  005E12  D7FE               	goto	u11127
 11053  005E14  D000               	nop2		;nop
 11054                           
 11055                           ;lcd.h: 129: RD3 = 0;
 11056  005E16  9683               	bcf	3971,3,c	;volatile
 11057  005E18  0012               	return	
 11058  005E1A                     __end_of_lcd_write_char:
 11059                           	opt stack 0
 11060                           tblptru	equ	0xFF8
 11061                           tblptrh	equ	0xFF7
 11062                           tblptrl	equ	0xFF6
 11063                           tablat	equ	0xFF5
 11064                           prodh	equ	0xFF4
 11065                           prodl	equ	0xFF3
 11066                           intcon	equ	0xFF2
 11067                           intcon2	equ	0xFF1
 11068                           postinc0	equ	0xFEE
 11069                           wreg	equ	0xFE8
 11070                           indf2	equ	0xFDF
 11071                           postinc2	equ	0xFDE
 11072                           postdec2	equ	0xFDD
 11073                           fsr2h	equ	0xFDA
 11074                           fsr2l	equ	0xFD9
 11075                           status	equ	0xFD8
 11076                           
 11077 ;; *************** function _lcd_init *****************
 11078 ;; Defined at:
 11079 ;;		line 95 in file "lcd.h"
 11080 ;; Parameters:    Size  Location     Type
 11081 ;;		None
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;		None
 11084 ;; Return value:  Size  Location     Type
 11085 ;;		None               void
 11086 ;; Registers used:
 11087 ;;		wreg, status,2, cstack
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11093 ;;      Params:         0       0       0       0       0       0       0       0       0
 11094 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11095 ;;      Temps:          0       0       1       0       0       0       0       0       0
 11096 ;;      Totals:         0       0       1       0       0       0       0       0       0
 11097 ;;Total ram usage:        1 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; Hardware stack levels required when called:   11
 11100 ;; This function calls:
 11101 ;;		_Lcd_Port
 11102 ;;		_Lcd_Cmd
 11103 ;; This function is called by:
 11104 ;;		_main
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           
 11108                           	psect	text37
 11109  0047F2                     __ptext37:
 11110                           	opt stack 0
 11111  0047F2                     _lcd_init:
 11112                           	opt stack 19
 11113                           
 11114                           ;lcd.h: 96: TRISD=0x00;
 11115                           
 11116                           ;incstack = 0
 11117                           ;incstack = 0
 11118  0047F2  0E00               	movlw	0
 11119  0047F4  6E95               	movwf	3989,c	;volatile
 11120                           
 11121                           ;lcd.h: 97: Lcd_Port(0x00);
 11122  0047F6  0101               	movlb	1	; () banked
 11123  0047F8  6F03               	movwf	??_lcd_init& (0+255),b
 11124  0047FA  0E00               	movlw	0
 11125  0047FC  0101               	movlb	1	; () banked
 11126  0047FE  0101               	movlb	1	; () banked
 11127  004800  6F00               	movwf	?_Lcd_Port& (0+255),b
 11128  004802  0101               	movlb	1	; () banked
 11129  004804  5103               	movf	??_lcd_init& (0+255),w,b
 11130  004806  EC6C  F030         	call	_Lcd_Port	;wreg free
 11131                           
 11132                           ;lcd.h: 98: _delay((unsigned long)((20)*(8000000/4000.0)));
 11133  00480A  0E34               	movlw	52
 11134  00480C  0101               	movlb	1	; () banked
 11135  00480E  6F03               	movwf	??_lcd_init& (0+255),b
 11136  004810  0EF1               	movlw	241
 11137  004812                     u11137:
 11138  004812  2EE8               	decfsz	wreg,f,c
 11139  004814  D7FE               	goto	u11137
 11140  004816  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11141  004818  D7FC               	goto	u11137
 11142  00481A  D000               	nop2	
 11143                           
 11144                           ;lcd.h: 99: Lcd_Cmd(0x03);
 11145  00481C  0101               	movlb	1	; () banked
 11146  00481E  6F03               	movwf	??_lcd_init& (0+255),b
 11147  004820  0E03               	movlw	3
 11148  004822  0101               	movlb	1	; () banked
 11149  004824  0101               	movlb	1	; () banked
 11150  004826  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11151  004828  0101               	movlb	1	; () banked
 11152  00482A  5103               	movf	??_lcd_init& (0+255),w,b
 11153  00482C  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11154                           
 11155                           ;lcd.h: 100: _delay((unsigned long)((5)*(8000000/4000.0)));
 11156  004830  0E0D               	movlw	13
 11157  004832  0101               	movlb	1	; () banked
 11158  004834  6F03               	movwf	??_lcd_init& (0+255),b
 11159  004836  0EFB               	movlw	251
 11160  004838                     u11147:
 11161  004838  2EE8               	decfsz	wreg,f,c
 11162  00483A  D7FE               	goto	u11147
 11163  00483C  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11164  00483E  D7FC               	goto	u11147
 11165  004840  D000               	nop2	
 11166                           
 11167                           ;lcd.h: 101: Lcd_Cmd(0x03);
 11168  004842  0101               	movlb	1	; () banked
 11169  004844  6F03               	movwf	??_lcd_init& (0+255),b
 11170  004846  0E03               	movlw	3
 11171  004848  0101               	movlb	1	; () banked
 11172  00484A  0101               	movlb	1	; () banked
 11173  00484C  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11174  00484E  0101               	movlb	1	; () banked
 11175  004850  5103               	movf	??_lcd_init& (0+255),w,b
 11176  004852  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11177                           
 11178                           ;lcd.h: 102: _delay((unsigned long)((11)*(8000000/4000.0)));
 11179  004856  0E1D               	movlw	29
 11180  004858  0101               	movlb	1	; () banked
 11181  00485A  6F03               	movwf	??_lcd_init& (0+255),b
 11182  00485C  0E91               	movlw	145
 11183  00485E                     u11157:
 11184  00485E  2EE8               	decfsz	wreg,f,c
 11185  004860  D7FE               	goto	u11157
 11186  004862  2F03               	decfsz	??_lcd_init& (0+255),f,b
 11187  004864  D7FC               	goto	u11157
 11188                           
 11189                           ;lcd.h: 103: Lcd_Cmd(0x03);
 11190  004866  0101               	movlb	1	; () banked
 11191  004868  6F03               	movwf	??_lcd_init& (0+255),b
 11192  00486A  0E03               	movlw	3
 11193  00486C  0101               	movlb	1	; () banked
 11194  00486E  0101               	movlb	1	; () banked
 11195  004870  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11196  004872  0101               	movlb	1	; () banked
 11197  004874  5103               	movf	??_lcd_init& (0+255),w,b
 11198  004876  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11199                           
 11200                           ;lcd.h: 105: Lcd_Cmd(0x02);
 11201  00487A  0101               	movlb	1	; () banked
 11202  00487C  6F03               	movwf	??_lcd_init& (0+255),b
 11203  00487E  0E02               	movlw	2
 11204  004880  0101               	movlb	1	; () banked
 11205  004882  0101               	movlb	1	; () banked
 11206  004884  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11207  004886  0101               	movlb	1	; () banked
 11208  004888  5103               	movf	??_lcd_init& (0+255),w,b
 11209  00488A  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11210                           
 11211                           ;lcd.h: 106: Lcd_Cmd(0x02);
 11212  00488E  0101               	movlb	1	; () banked
 11213  004890  6F03               	movwf	??_lcd_init& (0+255),b
 11214  004892  0E02               	movlw	2
 11215  004894  0101               	movlb	1	; () banked
 11216  004896  0101               	movlb	1	; () banked
 11217  004898  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11218  00489A  0101               	movlb	1	; () banked
 11219  00489C  5103               	movf	??_lcd_init& (0+255),w,b
 11220  00489E  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11221                           
 11222                           ;lcd.h: 107: Lcd_Cmd(0x08);
 11223  0048A2  0101               	movlb	1	; () banked
 11224  0048A4  6F03               	movwf	??_lcd_init& (0+255),b
 11225  0048A6  0E08               	movlw	8
 11226  0048A8  0101               	movlb	1	; () banked
 11227  0048AA  0101               	movlb	1	; () banked
 11228  0048AC  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11229  0048AE  0101               	movlb	1	; () banked
 11230  0048B0  5103               	movf	??_lcd_init& (0+255),w,b
 11231  0048B2  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11232                           
 11233                           ;lcd.h: 108: Lcd_Cmd(0x00);
 11234  0048B6  0101               	movlb	1	; () banked
 11235  0048B8  6F03               	movwf	??_lcd_init& (0+255),b
 11236  0048BA  0E00               	movlw	0
 11237  0048BC  0101               	movlb	1	; () banked
 11238  0048BE  0101               	movlb	1	; () banked
 11239  0048C0  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11240  0048C2  0101               	movlb	1	; () banked
 11241  0048C4  5103               	movf	??_lcd_init& (0+255),w,b
 11242  0048C6  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11243                           
 11244                           ;lcd.h: 109: Lcd_Cmd(0x0C);
 11245  0048CA  0101               	movlb	1	; () banked
 11246  0048CC  6F03               	movwf	??_lcd_init& (0+255),b
 11247  0048CE  0E0C               	movlw	12
 11248  0048D0  0101               	movlb	1	; () banked
 11249  0048D2  0101               	movlb	1	; () banked
 11250  0048D4  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11251  0048D6  0101               	movlb	1	; () banked
 11252  0048D8  5103               	movf	??_lcd_init& (0+255),w,b
 11253  0048DA  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11254                           
 11255                           ;lcd.h: 110: Lcd_Cmd(0x00);
 11256  0048DE  0101               	movlb	1	; () banked
 11257  0048E0  6F03               	movwf	??_lcd_init& (0+255),b
 11258  0048E2  0E00               	movlw	0
 11259  0048E4  0101               	movlb	1	; () banked
 11260  0048E6  0101               	movlb	1	; () banked
 11261  0048E8  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11262  0048EA  0101               	movlb	1	; () banked
 11263  0048EC  5103               	movf	??_lcd_init& (0+255),w,b
 11264  0048EE  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11265                           
 11266                           ;lcd.h: 111: Lcd_Cmd(0x06);
 11267  0048F2  0101               	movlb	1	; () banked
 11268  0048F4  6F03               	movwf	??_lcd_init& (0+255),b
 11269  0048F6  0E06               	movlw	6
 11270  0048F8  0101               	movlb	1	; () banked
 11271  0048FA  0101               	movlb	1	; () banked
 11272  0048FC  6F01               	movwf	?_Lcd_Cmd& (0+255),b
 11273  0048FE  0101               	movlb	1	; () banked
 11274  004900  5103               	movf	??_lcd_init& (0+255),w,b
 11275  004902  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11276  004906  0012               	return	
 11277  004908                     __end_of_lcd_init:
 11278                           	opt stack 0
 11279                           tblptru	equ	0xFF8
 11280                           tblptrh	equ	0xFF7
 11281                           tblptrl	equ	0xFF6
 11282                           tablat	equ	0xFF5
 11283                           prodh	equ	0xFF4
 11284                           prodl	equ	0xFF3
 11285                           intcon	equ	0xFF2
 11286                           intcon2	equ	0xFF1
 11287                           postinc0	equ	0xFEE
 11288                           wreg	equ	0xFE8
 11289                           indf2	equ	0xFDF
 11290                           postinc2	equ	0xFDE
 11291                           postdec2	equ	0xFDD
 11292                           fsr2h	equ	0xFDA
 11293                           fsr2l	equ	0xFD9
 11294                           status	equ	0xFD8
 11295                           
 11296 ;; *************** function _lcd_gotoxy *****************
 11297 ;; Defined at:
 11298 ;;		line 72 in file "lcd.h"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;  a               1    3[BANK1 ] unsigned char 
 11301 ;;  b               1    4[BANK1 ] unsigned char 
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;  temp            1    7[BANK1 ] unsigned char 
 11304 ;;  y               1    6[BANK1 ] unsigned char 
 11305 ;;  z               1    5[BANK1 ] unsigned char 
 11306 ;; Return value:  Size  Location     Type
 11307 ;;		None               void
 11308 ;; Registers used:
 11309 ;;		wreg, status,2, status,0, cstack
 11310 ;; Tracked objects:
 11311 ;;		On entry : 0/0
 11312 ;;		On exit  : 0/0
 11313 ;;		Unchanged: 0/0
 11314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11315 ;;      Params:         0       0       2       0       0       0       0       0       0
 11316 ;;      Locals:         0       0       3       0       0       0       0       0       0
 11317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11318 ;;      Totals:         0       0       5       0       0       0       0       0       0
 11319 ;;Total ram usage:        5 bytes
 11320 ;; Hardware stack levels used:    1
 11321 ;; Hardware stack levels required when called:   11
 11322 ;; This function calls:
 11323 ;;		_Lcd_Cmd
 11324 ;; This function is called by:
 11325 ;;		_main
 11326 ;; This function uses a non-reentrant model
 11327 ;;
 11328                           
 11329                           	psect	text38
 11330  0057FE                     __ptext38:
 11331                           	opt stack 0
 11332  0057FE                     _lcd_gotoxy:
 11333                           	opt stack 19
 11334                           
 11335                           ;lcd.h: 73: char temp,z,y;
 11336                           ;lcd.h: 74: if(a == 1)
 11337                           
 11338                           ;incstack = 0
 11339                           ;incstack = 0
 11340  0057FE  0101               	movlb	1	; () banked
 11341  005800  0101               	movlb	1	; () banked
 11342  005802  0503               	decf	lcd_gotoxy@a& (0+255),w,b
 11343  005804  A4D8               	btfss	status,2,c
 11344  005806  D01E               	goto	l9987
 11345                           
 11346                           ; BSR set to: 1
 11347                           ;lcd.h: 75: {
 11348                           ;lcd.h: 76: temp = 0x80 + b - 1;
 11349  005808  0101               	movlb	1	; () banked
 11350  00580A  0101               	movlb	1	; () banked
 11351  00580C  5104               	movf	lcd_gotoxy@b& (0+255),w,b
 11352  00580E  0F7F               	addlw	127
 11353  005810  0101               	movlb	1	; () banked
 11354  005812  0101               	movlb	1	; () banked
 11355  005814  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
 11356                           
 11357                           ;lcd.h: 77: z = temp>>4;
 11358  005816  0101               	movlb	1	; () banked
 11359  005818  0101               	movlb	1	; () banked
 11360  00581A  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
 11361  00581C  0B0F               	andlw	15
 11362  00581E  0101               	movlb	1	; () banked
 11363  005820  0101               	movlb	1	; () banked
 11364  005822  6F05               	movwf	lcd_gotoxy@z& (0+255),b
 11365                           
 11366                           ;lcd.h: 78: y = temp & 0x0F;
 11367  005824  0101               	movlb	1	; () banked
 11368  005826  0101               	movlb	1	; () banked
 11369  005828  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
 11370  00582A  0B0F               	andlw	15
 11371  00582C  0101               	movlb	1	; () banked
 11372  00582E  0101               	movlb	1	; () banked
 11373  005830  6F06               	movwf	lcd_gotoxy@y& (0+255),b
 11374                           
 11375                           ; BSR set to: 1
 11376                           ;lcd.h: 79: Lcd_Cmd(z);
 11377  005832  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
 11378  005836  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11379                           
 11380                           ;lcd.h: 80: Lcd_Cmd(y);
 11381  00583A  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
 11382  00583E  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11383                           
 11384                           ;lcd.h: 81: }
 11385  005842  D023               	goto	l121
 11386  005844                     l9987:
 11387                           
 11388                           ;lcd.h: 82: else if(a == 2)
 11389  005844  0101               	movlb	1	; () banked
 11390  005846  0101               	movlb	1	; () banked
 11391  005848  5103               	movf	lcd_gotoxy@a& (0+255),w,b
 11392  00584A  0A02               	xorlw	2
 11393  00584C  A4D8               	btfss	status,2,c
 11394  00584E  D01D               	goto	l121
 11395                           
 11396                           ; BSR set to: 1
 11397                           ;lcd.h: 83: {
 11398                           ;lcd.h: 84: temp = 0xC0 + b - 1;
 11399  005850  0101               	movlb	1	; () banked
 11400  005852  0101               	movlb	1	; () banked
 11401  005854  5104               	movf	lcd_gotoxy@b& (0+255),w,b
 11402  005856  0FBF               	addlw	191
 11403  005858  0101               	movlb	1	; () banked
 11404  00585A  0101               	movlb	1	; () banked
 11405  00585C  6F07               	movwf	lcd_gotoxy@temp& (0+255),b
 11406                           
 11407                           ;lcd.h: 85: z = temp>>4;
 11408  00585E  0101               	movlb	1	; () banked
 11409  005860  0101               	movlb	1	; () banked
 11410  005862  3907               	swapf	lcd_gotoxy@temp& (0+255),w,b
 11411  005864  0B0F               	andlw	15
 11412  005866  0101               	movlb	1	; () banked
 11413  005868  0101               	movlb	1	; () banked
 11414  00586A  6F05               	movwf	lcd_gotoxy@z& (0+255),b
 11415                           
 11416                           ;lcd.h: 86: y = temp & 0x0F;
 11417  00586C  0101               	movlb	1	; () banked
 11418  00586E  0101               	movlb	1	; () banked
 11419  005870  5107               	movf	lcd_gotoxy@temp& (0+255),w,b
 11420  005872  0B0F               	andlw	15
 11421  005874  0101               	movlb	1	; () banked
 11422  005876  0101               	movlb	1	; () banked
 11423  005878  6F06               	movwf	lcd_gotoxy@y& (0+255),b
 11424                           
 11425                           ; BSR set to: 1
 11426                           ;lcd.h: 87: Lcd_Cmd(z);
 11427  00587A  C105  F101         	movff	lcd_gotoxy@z,?_Lcd_Cmd
 11428  00587E  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11429                           
 11430                           ;lcd.h: 88: Lcd_Cmd(y);
 11431  005882  C106  F101         	movff	lcd_gotoxy@y,?_Lcd_Cmd
 11432  005886  EC44  F031         	call	_Lcd_Cmd	;wreg free
 11433  00588A                     l121:
 11434  00588A  0012               	return	
 11435  00588C                     __end_of_lcd_gotoxy:
 11436                           	opt stack 0
 11437                           tblptru	equ	0xFF8
 11438                           tblptrh	equ	0xFF7
 11439                           tblptrl	equ	0xFF6
 11440                           tablat	equ	0xFF5
 11441                           prodh	equ	0xFF4
 11442                           prodl	equ	0xFF3
 11443                           intcon	equ	0xFF2
 11444                           intcon2	equ	0xFF1
 11445                           postinc0	equ	0xFEE
 11446                           wreg	equ	0xFE8
 11447                           indf2	equ	0xFDF
 11448                           postinc2	equ	0xFDE
 11449                           postdec2	equ	0xFDD
 11450                           fsr2h	equ	0xFDA
 11451                           fsr2l	equ	0xFD9
 11452                           status	equ	0xFD8
 11453                           
 11454 ;; *************** function _Lcd_Cmd *****************
 11455 ;; Defined at:
 11456 ;;		line 53 in file "lcd.h"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;  a               1    1[BANK1 ] unsigned char 
 11459 ;; Auto vars:     Size  Location     Type
 11460 ;;		None
 11461 ;; Return value:  Size  Location     Type
 11462 ;;		None               void
 11463 ;; Registers used:
 11464 ;;		wreg, cstack
 11465 ;; Tracked objects:
 11466 ;;		On entry : 0/0
 11467 ;;		On exit  : 0/0
 11468 ;;		Unchanged: 0/0
 11469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11470 ;;      Params:         0       0       1       0       0       0       0       0       0
 11471 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11472 ;;      Temps:          0       0       1       0       0       0       0       0       0
 11473 ;;      Totals:         0       0       2       0       0       0       0       0       0
 11474 ;;Total ram usage:        2 bytes
 11475 ;; Hardware stack levels used:    1
 11476 ;; Hardware stack levels required when called:   10
 11477 ;; This function calls:
 11478 ;;		_Lcd_Port
 11479 ;; This function is called by:
 11480 ;;		_lcd_gotoxy
 11481 ;;		_lcd_init
 11482 ;;		_lcd_clear
 11483 ;;		_lcd_shift_right
 11484 ;;		_lcd_shift_left
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488                           	psect	text39
 11489  006288                     __ptext39:
 11490                           	opt stack 0
 11491  006288                     _Lcd_Cmd:
 11492                           	opt stack 19
 11493                           
 11494                           ;lcd.h: 54: RD2 = 0;
 11495                           
 11496                           ;incstack = 0
 11497                           ;incstack = 0
 11498  006288  9483               	bcf	3971,2,c	;volatile
 11499                           
 11500                           ;lcd.h: 55: Lcd_Port(a);
 11501  00628A  C101  F100         	movff	Lcd_Cmd@a,?_Lcd_Port
 11502  00628E  EC6C  F030         	call	_Lcd_Port	;wreg free
 11503                           
 11504                           ;lcd.h: 56: RD3 = 1;
 11505  006292  8683               	bsf	3971,3,c	;volatile
 11506                           
 11507                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 11508  006294  0E0B               	movlw	11
 11509  006296  0101               	movlb	1	; () banked
 11510  006298  6F02               	movwf	??_Lcd_Cmd& (0+255),b
 11511  00629A  0E62               	movlw	98
 11512  00629C                     u11167:
 11513  00629C  2EE8               	decfsz	wreg,f,c
 11514  00629E  D7FE               	goto	u11167
 11515  0062A0  2F02               	decfsz	??_Lcd_Cmd& (0+255),f,b
 11516  0062A2  D7FC               	goto	u11167
 11517  0062A4  F000               	nop	
 11518                           
 11519                           ;lcd.h: 58: RD3 = 0;
 11520  0062A6  9683               	bcf	3971,3,c	;volatile
 11521  0062A8  0012               	return	
 11522  0062AA                     __end_of_Lcd_Cmd:
 11523                           	opt stack 0
 11524                           tblptru	equ	0xFF8
 11525                           tblptrh	equ	0xFF7
 11526                           tblptrl	equ	0xFF6
 11527                           tablat	equ	0xFF5
 11528                           prodh	equ	0xFF4
 11529                           prodl	equ	0xFF3
 11530                           intcon	equ	0xFF2
 11531                           intcon2	equ	0xFF1
 11532                           postinc0	equ	0xFEE
 11533                           wreg	equ	0xFE8
 11534                           indf2	equ	0xFDF
 11535                           postinc2	equ	0xFDE
 11536                           postdec2	equ	0xFDD
 11537                           fsr2h	equ	0xFDA
 11538                           fsr2l	equ	0xFD9
 11539                           status	equ	0xFD8
 11540                           
 11541 ;; *************** function _Lcd_Port *****************
 11542 ;; Defined at:
 11543 ;;		line 28 in file "lcd.h"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  a               1    0[BANK1 ] unsigned char 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;		None
 11548 ;; Return value:  Size  Location     Type
 11549 ;;		None               void
 11550 ;; Registers used:
 11551 ;;		None
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11557 ;;      Params:         0       0       1       0       0       0       0       0       0
 11558 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11560 ;;      Totals:         0       0       1       0       0       0       0       0       0
 11561 ;;Total ram usage:        1 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:    9
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_Lcd_Cmd
 11568 ;;		_lcd_init
 11569 ;;		_lcd_write_char
 11570 ;; This function uses a non-reentrant model
 11571 ;;
 11572                           
 11573                           	psect	text40
 11574  0060D8                     __ptext40:
 11575                           	opt stack 0
 11576  0060D8                     _Lcd_Port:
 11577                           	opt stack 19
 11578                           
 11579                           ;lcd.h: 29: if(a & 1)
 11580                           
 11581                           ;incstack = 0
 11582                           ;incstack = 0
 11583  0060D8  0101               	movlb	1	; () banked
 11584  0060DA  0101               	movlb	1	; () banked
 11585  0060DC  A100               	btfss	Lcd_Port@a& (0+255),0,b
 11586  0060DE  D002               	goto	l101
 11587                           
 11588                           ; BSR set to: 1
 11589                           ;lcd.h: 30: RD4 = 1;
 11590  0060E0  8883               	bsf	3971,4,c	;volatile
 11591  0060E2  D001               	goto	l102
 11592  0060E4                     l101:
 11593                           
 11594                           ; BSR set to: 1
 11595                           ;lcd.h: 31: else
 11596                           ;lcd.h: 32: RD4 = 0;
 11597  0060E4  9883               	bcf	3971,4,c	;volatile
 11598  0060E6                     l102:
 11599                           
 11600                           ; BSR set to: 1
 11601                           ;lcd.h: 34: if(a & 2)
 11602  0060E6  0101               	movlb	1	; () banked
 11603  0060E8  0101               	movlb	1	; () banked
 11604  0060EA  A300               	btfss	Lcd_Port@a& (0+255),1,b
 11605  0060EC  D002               	goto	l103
 11606                           
 11607                           ; BSR set to: 1
 11608                           ;lcd.h: 35: RD5 = 1;
 11609  0060EE  8A83               	bsf	3971,5,c	;volatile
 11610  0060F0  D001               	goto	l104
 11611  0060F2                     l103:
 11612                           
 11613                           ; BSR set to: 1
 11614                           ;lcd.h: 36: else
 11615                           ;lcd.h: 37: RD5 = 0;
 11616  0060F2  9A83               	bcf	3971,5,c	;volatile
 11617  0060F4                     l104:
 11618                           
 11619                           ; BSR set to: 1
 11620                           ;lcd.h: 39: if(a & 4)
 11621  0060F4  0101               	movlb	1	; () banked
 11622  0060F6  0101               	movlb	1	; () banked
 11623  0060F8  A500               	btfss	Lcd_Port@a& (0+255),2,b
 11624  0060FA  D002               	goto	l105
 11625                           
 11626                           ; BSR set to: 1
 11627                           ;lcd.h: 40: RD6 = 1;
 11628  0060FC  8C83               	bsf	3971,6,c	;volatile
 11629  0060FE  D001               	goto	l106
 11630  006100                     l105:
 11631                           
 11632                           ; BSR set to: 1
 11633                           ;lcd.h: 41: else
 11634                           ;lcd.h: 42: RD6 = 0;
 11635  006100  9C83               	bcf	3971,6,c	;volatile
 11636  006102                     l106:
 11637                           
 11638                           ; BSR set to: 1
 11639                           ;lcd.h: 44: if(a & 8)
 11640  006102  0101               	movlb	1	; () banked
 11641  006104  0101               	movlb	1	; () banked
 11642  006106  A700               	btfss	Lcd_Port@a& (0+255),3,b
 11643  006108  D002               	goto	l107
 11644                           
 11645                           ; BSR set to: 1
 11646                           ;lcd.h: 45: RD7 = 1;
 11647  00610A  8E83               	bsf	3971,7,c	;volatile
 11648  00610C  D001               	goto	l109
 11649  00610E                     l107:
 11650                           
 11651                           ; BSR set to: 1
 11652                           ;lcd.h: 46: else
 11653                           ;lcd.h: 47: RD7 = 0;
 11654  00610E  9E83               	bcf	3971,7,c	;volatile
 11655  006110                     l109:
 11656                           
 11657                           ; BSR set to: 1
 11658  006110  0012               	return	
 11659  006112                     __end_of_Lcd_Port:
 11660                           	opt stack 0
 11661                           tblptru	equ	0xFF8
 11662                           tblptrh	equ	0xFF7
 11663                           tblptrl	equ	0xFF6
 11664                           tablat	equ	0xFF5
 11665                           prodh	equ	0xFF4
 11666                           prodl	equ	0xFF3
 11667                           intcon	equ	0xFF2
 11668                           intcon2	equ	0xFF1
 11669                           postinc0	equ	0xFEE
 11670                           wreg	equ	0xFE8
 11671                           indf2	equ	0xFDF
 11672                           postinc2	equ	0xFDE
 11673                           postdec2	equ	0xFDD
 11674                           fsr2h	equ	0xFDA
 11675                           fsr2l	equ	0xFD9
 11676                           status	equ	0xFD8
 11677                           
 11678 ;; *************** function _interrupcaoLOW *****************
 11679 ;; Defined at:
 11680 ;;		line 187 in file "main.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;		None
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;		None
 11685 ;; Return value:  Size  Location     Type
 11686 ;;		None               void
 11687 ;; Registers used:
 11688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11694 ;;      Params:         0       0       0       0       0       0       0       0       0
 11695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11696 ;;      Temps:          0      19       0       0       0       0       0       0       0
 11697 ;;      Totals:         0      19       0       0       0       0       0       0       0
 11698 ;;Total ram usage:       19 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:    8
 11701 ;; This function calls:
 11702 ;;		i1_lcd_gotoxy
 11703 ;;		i1_lcd_putc
 11704 ;;		i1_Obtener_Distancia
 11705 ;;		i1_Read_LDR
 11706 ;;		i1_sprintf
 11707 ;; This function is called by:
 11708 ;;		Interrupt level 1
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           	psect	intcodelo
 11713  000018                     __pintcodelo:
 11714                           	opt stack 0
 11715  000018                     _interrupcaoLOW:
 11716                           	opt stack 17
 11717                           
 11718                           ; BSR set to: 1
 11719                           ;incstack = 0
 11720  000018  CFD8 F0A1          	movff	status,??_interrupcaoLOW+2
 11721  00001C  CFE8 F0A2          	movff	wreg,??_interrupcaoLOW+3
 11722  000020  CFE0 F0A3          	movff	bsr,??_interrupcaoLOW+4
 11723  000024  CFFA F0A4          	movff	pclath,??_interrupcaoLOW+5
 11724  000028  CFFB F0A5          	movff	pclatu,??_interrupcaoLOW+6
 11725  00002C  CFE9 F0A6          	movff	fsr0l,??_interrupcaoLOW+7
 11726  000030  CFEA F0A7          	movff	fsr0h,??_interrupcaoLOW+8
 11727  000034  CFE1 F0A8          	movff	fsr1l,??_interrupcaoLOW+9
 11728  000038  CFE2 F0A9          	movff	fsr1h,??_interrupcaoLOW+10
 11729  00003C  CFD9 F0AA          	movff	fsr2l,??_interrupcaoLOW+11
 11730  000040  CFDA F0AB          	movff	fsr2h,??_interrupcaoLOW+12
 11731  000044  CFF3 F0AC          	movff	prodl,??_interrupcaoLOW+13
 11732  000048  CFF4 F0AD          	movff	prodh,??_interrupcaoLOW+14
 11733  00004C  CFF6 F0AE          	movff	tblptrl,??_interrupcaoLOW+15
 11734  000050  CFF7 F0AF          	movff	tblptrh,??_interrupcaoLOW+16
 11735  000054  CFF8 F0B0          	movff	tblptru,??_interrupcaoLOW+17
 11736  000058  CFF5 F0B1          	movff	tablat,??_interrupcaoLOW+18
 11737  00005C                     
 11738                           ;main.c: 189: Distancia=Obtener_Distancia();
 11739  00005C  EC0E  F02D         	call	i1_Obtener_Distancia	;wreg free
 11740  000060  C019  F184         	movff	?i1_Obtener_Distancia,_Distancia
 11741  000064  C01A  F185         	movff	?i1_Obtener_Distancia+1,_Distancia+1
 11742                           
 11743                           ;main.c: 190: LDR_value=Read_LDR();
 11744  000068  EC8D  F027         	call	i1_Read_LDR	;wreg free
 11745  00006C  C049  F183         	movff	?i1_Read_LDR+2,_LDR_value+2
 11746  000070  C048  F182         	movff	?i1_Read_LDR+1,_LDR_value+1
 11747  000074  C047  F181         	movff	?i1_Read_LDR,_LDR_value
 11748                           
 11749                           ;main.c: 191: lcd_gotoxy(1,1);
 11750  000078  0100               	movlb	0	; () banked
 11751  00007A  6F9F               	movwf	??_interrupcaoLOW& (0+255),b
 11752  00007C  0E01               	movlw	1
 11753  00007E  6E14               	movwf	?i1_lcd_gotoxy,c
 11754  000080  0100               	movlb	0	; () banked
 11755  000082  519F               	movf	??_interrupcaoLOW& (0+255),w,b
 11756  000084  0100               	movlb	0	; () banked
 11757  000086  6FA0               	movwf	(??_interrupcaoLOW+1)& (0+255),b
 11758  000088  0E01               	movlw	1
 11759  00008A  6E15               	movwf	?i1_lcd_gotoxy+1,c
 11760  00008C  0100               	movlb	0	; () banked
 11761  00008E  51A0               	movf	(??_interrupcaoLOW+1)& (0+255),w,b
 11762  000090  ECB9  F02E         	call	i1_lcd_gotoxy	;wreg free
 11763  000094                     
 11764                           ;main.c: 192: sprintf(LCD_Buffer,"LDR: %.2f", LDR_value);
 11765  000094  0101               	movlb	1	; () banked
 11766  000096  0E01               	movlw	high _LCD_Buffer
 11767  000098  0100               	movlb	0	; () banked
 11768  00009A  0100               	movlb	0	; () banked
 11769  00009C  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 11770  00009E  0101               	movlb	1	; () banked
 11771  0000A0  0E86               	movlw	low _LCD_Buffer
 11772  0000A2  0100               	movlb	0	; () banked
 11773  0000A4  6F71               	movwf	?i1_sprintf& (0+255),b
 11774  0000A6  0E08               	movlw	high STR_1
 11775  0000A8  0100               	movlb	0	; () banked
 11776  0000AA  0100               	movlb	0	; () banked
 11777  0000AC  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 11778  0000AE  0E88               	movlw	low STR_1
 11779  0000B0  0100               	movlb	0	; () banked
 11780  0000B2  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 11781  0000B4  C181  F075         	movff	_LDR_value,?i1_sprintf+4
 11782  0000B8  C182  F076         	movff	_LDR_value+1,?i1_sprintf+5
 11783  0000BC  C183  F077         	movff	_LDR_value+2,?i1_sprintf+6
 11784  0000C0  EC55  F00B         	call	i1_sprintf	;wreg free
 11785  0000C4                     
 11786                           ;main.c: 193: lcd_putc(LCD_Buffer);
 11787  0000C4  0101               	movlb	1	; () banked
 11788  0000C6  0E01               	movlw	high _LCD_Buffer
 11789  0000C8  6E16               	movwf	?i1_lcd_putc+1,c
 11790  0000CA  0101               	movlb	1	; () banked
 11791  0000CC  0E86               	movlw	low _LCD_Buffer
 11792  0000CE  6E15               	movwf	?i1_lcd_putc,c
 11793  0000D0  ECDE  F030         	call	i1_lcd_putc	;wreg free
 11794  0000D4                     
 11795                           ;main.c: 194: sprintf(LCD_Buffer,"Distancia: %03dcm", Distancia);
 11796  0000D4  0101               	movlb	1	; () banked
 11797  0000D6  0E01               	movlw	high _LCD_Buffer
 11798  0000D8  0100               	movlb	0	; () banked
 11799  0000DA  0100               	movlb	0	; () banked
 11800  0000DC  6F72               	movwf	(?i1_sprintf+1)& (0+255),b
 11801  0000DE  0101               	movlb	1	; () banked
 11802  0000E0  0E86               	movlw	low _LCD_Buffer
 11803  0000E2  0100               	movlb	0	; () banked
 11804  0000E4  6F71               	movwf	?i1_sprintf& (0+255),b
 11805  0000E6  0E08               	movlw	high STR_2
 11806  0000E8  0100               	movlb	0	; () banked
 11807  0000EA  0100               	movlb	0	; () banked
 11808  0000EC  6F74               	movwf	(?i1_sprintf+3)& (0+255),b
 11809  0000EE  0E76               	movlw	low STR_2
 11810  0000F0  0100               	movlb	0	; () banked
 11811  0000F2  6F73               	movwf	(?i1_sprintf+2)& (0+255),b
 11812  0000F4  C184  F075         	movff	_Distancia,?i1_sprintf+4
 11813  0000F8  C185  F076         	movff	_Distancia+1,?i1_sprintf+5
 11814  0000FC  EC55  F00B         	call	i1_sprintf	;wreg free
 11815  000100                     
 11816                           ;main.c: 195: lcd_gotoxy(2,1);
 11817  000100  0100               	movlb	0	; () banked
 11818  000102  6F9F               	movwf	??_interrupcaoLOW& (0+255),b
 11819  000104  0E02               	movlw	2
 11820  000106  6E14               	movwf	?i1_lcd_gotoxy,c
 11821  000108  0100               	movlb	0	; () banked
 11822  00010A  519F               	movf	??_interrupcaoLOW& (0+255),w,b
 11823  00010C  0100               	movlb	0	; () banked
 11824  00010E  6FA0               	movwf	(??_interrupcaoLOW+1)& (0+255),b
 11825  000110  0E01               	movlw	1
 11826  000112  6E15               	movwf	?i1_lcd_gotoxy+1,c
 11827  000114  0100               	movlb	0	; () banked
 11828  000116  51A0               	movf	(??_interrupcaoLOW+1)& (0+255),w,b
 11829  000118  ECB9  F02E         	call	i1_lcd_gotoxy	;wreg free
 11830                           
 11831                           ;main.c: 196: lcd_putc(LCD_Buffer);
 11832  00011C  0101               	movlb	1	; () banked
 11833  00011E  0E01               	movlw	high _LCD_Buffer
 11834  000120  6E16               	movwf	?i1_lcd_putc+1,c
 11835  000122  0101               	movlb	1	; () banked
 11836  000124  0E86               	movlw	low _LCD_Buffer
 11837  000126  6E15               	movwf	?i1_lcd_putc,c
 11838  000128  ECDE  F030         	call	i1_lcd_putc	;wreg free
 11839  00012C  C0B1  FFF5         	movff	??_interrupcaoLOW+18,tablat
 11840  000130  C0B0  FFF8         	movff	??_interrupcaoLOW+17,tblptru
 11841  000134  C0AF  FFF7         	movff	??_interrupcaoLOW+16,tblptrh
 11842  000138  C0AE  FFF6         	movff	??_interrupcaoLOW+15,tblptrl
 11843  00013C  C0AD  FFF4         	movff	??_interrupcaoLOW+14,prodh
 11844  000140  C0AC  FFF3         	movff	??_interrupcaoLOW+13,prodl
 11845  000144  C0AB  FFDA         	movff	??_interrupcaoLOW+12,fsr2h
 11846  000148  C0AA  FFD9         	movff	??_interrupcaoLOW+11,fsr2l
 11847  00014C  C0A9  FFE2         	movff	??_interrupcaoLOW+10,fsr1h
 11848  000150  C0A8  FFE1         	movff	??_interrupcaoLOW+9,fsr1l
 11849  000154  C0A7  FFEA         	movff	??_interrupcaoLOW+8,fsr0h
 11850  000158  C0A6  FFE9         	movff	??_interrupcaoLOW+7,fsr0l
 11851  00015C  C0A5  FFFB         	movff	??_interrupcaoLOW+6,pclatu
 11852  000160  C0A4  FFFA         	movff	??_interrupcaoLOW+5,pclath
 11853  000164  C0A3  FFE0         	movff	??_interrupcaoLOW+4,bsr
 11854  000168  C0A2  FFE8         	movff	??_interrupcaoLOW+3,wreg
 11855  00016C  C0A1  FFD8         	movff	??_interrupcaoLOW+2,status
 11856  000170  0010               	retfie	
 11857  000172                     __end_of_interrupcaoLOW:
 11858                           	opt stack 0
 11859                           pclatu	equ	0xFFB
 11860                           pclath	equ	0xFFA
 11861                           tblptru	equ	0xFF8
 11862                           tblptrh	equ	0xFF7
 11863                           tblptrl	equ	0xFF6
 11864                           tablat	equ	0xFF5
 11865                           prodh	equ	0xFF4
 11866                           prodl	equ	0xFF3
 11867                           intcon	equ	0xFF2
 11868                           intcon2	equ	0xFF1
 11869                           postinc0	equ	0xFEE
 11870                           fsr0h	equ	0xFEA
 11871                           fsr0l	equ	0xFE9
 11872                           wreg	equ	0xFE8
 11873                           fsr1h	equ	0xFE2
 11874                           fsr1l	equ	0xFE1
 11875                           bsr	equ	0xFE0
 11876                           indf2	equ	0xFDF
 11877                           postinc2	equ	0xFDE
 11878                           postdec2	equ	0xFDD
 11879                           fsr2h	equ	0xFDA
 11880                           fsr2l	equ	0xFD9
 11881                           status	equ	0xFD8
 11882                           
 11883 ;; *************** function i1_sprintf *****************
 11884 ;; Defined at:
 11885 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;  sprintf         2   17[BANK0 ] PTR unsigned char 
 11888 ;;		 -> LCD_Buffer(32), 
 11889 ;;  sprintf         2   19[BANK0 ] PTR const unsigned char 
 11890 ;;		 -> STR_4(18), STR_3(10), STR_2(18), STR_1(10), 
 11891 ;; Auto vars:     Size  Location     Type
 11892 ;;  sprintf         5   46[BANK0 ] struct .
 11893 ;;  sprintf         4   33[BANK0 ] unsigned long 
 11894 ;;  sprintf         3   57[BANK0 ] unsigned long 
 11895 ;;  sprintf         3   43[BANK0 ] unsigned long 
 11896 ;;  sprintf         3    0        unsigned long 
 11897 ;;  sprintf         3    0        unsigned long 
 11898 ;;  sprintf         2   60[BANK0 ] int 
 11899 ;;  sprintf         2   55[BANK0 ] int 
 11900 ;;  sprintf         2   53[BANK0 ] int 
 11901 ;;  sprintf         2   51[BANK0 ] unsigned short 
 11902 ;;  sprintf         2   41[BANK0 ] PTR void [1]
 11903 ;;		 -> ?_sprintf(2), 
 11904 ;;  sprintf         2   39[BANK0 ] unsigned int 
 11905 ;;  sprintf         2   37[BANK0 ] unsigned int 
 11906 ;;  sprintf         1   62[BANK0 ] char 
 11907 ;;  sprintf         1    0        unsigned char 
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  2   17[BANK0 ] int 
 11910 ;; Registers used:
 11911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11917 ;;      Params:         0       7       0       0       0       0       0       0       0
 11918 ;;      Locals:         0      33       0       0       0       0       0       0       0
 11919 ;;      Temps:          0       6       0       0       0       0       0       0       0
 11920 ;;      Totals:         0      46       0       0       0       0       0       0       0
 11921 ;;Total ram usage:       46 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; Hardware stack levels required when called:    7
 11924 ;; This function calls:
 11925 ;;		i1_fround
 11926 ;;		i1_scale
 11927 ;;		i1___asftadd
 11928 ;;		i1___asftmul
 11929 ;;		i1___asftsub
 11930 ;;		i1___awdiv
 11931 ;;		i1__div_to_l_
 11932 ;;		i1__tdiv_to_l_
 11933 ;;		i1___ftge
 11934 ;;		i1___ftmul
 11935 ;;		i1___ftneg
 11936 ;;		i1___fttol
 11937 ;;		i1_isdigit
 11938 ;;		i1___lldiv
 11939 ;;		i1___llmod
 11940 ;;		i1___lltoft
 11941 ;;		i1___lwmod
 11942 ;;		i1___wmul
 11943 ;; This function is called by:
 11944 ;;		_interrupcaoLOW
 11945 ;; This function uses a non-reentrant model
 11946 ;;
 11947                           
 11948                           	psect	text42
 11949  0016AA                     __ptext42:
 11950                           	opt stack 0
 11951  0016AA                     i1_sprintf:
 11952                           	opt stack 17
 11953                           
 11954                           ;doprnt.c: 494: va_list ap;
 11955                           ;doprnt.c: 499: signed char c;
 11956                           ;doprnt.c: 501: int width;
 11957                           ;doprnt.c: 504: int prec;
 11958                           ;doprnt.c: 508: unsigned short flag;
 11959                           ;doprnt.c: 515: char d;
 11960                           ;doprnt.c: 516: double fval, integ;
 11961                           ;doprnt.c: 517: int exp;
 11962                           ;doprnt.c: 518: double ival;
 11963                           ;doprnt.c: 519: union {
 11964                           ;doprnt.c: 520: unsigned long _val;
 11965                           ;doprnt.c: 521: struct {
 11966                           ;doprnt.c: 522: const char * _cp;
 11967                           ;doprnt.c: 523: unsigned _len;
 11968                           ;doprnt.c: 524: } _str;
 11969                           ;doprnt.c: 525: } _val;
 11970                           ;doprnt.c: 542: *ap = __va_start();
 11971                           
 11972                           ;incstack = 0
 11973                           ;incstack = 0
 11974  0016AA  0100               	movlb	0	; () banked
 11975  0016AC  0E00               	movlw	high (?i1_sprintf+4)
 11976  0016AE  0100               	movlb	0	; () banked
 11977  0016B0  0100               	movlb	0	; () banked
 11978  0016B2  6F8A               	movwf	(i1sprintf@ap+1)& (0+255),b
 11979  0016B4  0100               	movlb	0	; () banked
 11980  0016B6  0E75               	movlw	low (?i1_sprintf+4)
 11981  0016B8  0100               	movlb	0	; () banked
 11982  0016BA  6F89               	movwf	i1sprintf@ap& (0+255),b
 11983                           
 11984                           ;doprnt.c: 545: while(c = *f++) {
 11985  0016BC  EFF1  F011         	goto	i1l11489
 11986  0016C0                     i1l11165:
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;doprnt.c: 547: if(c != '%')
 11990  0016C0  0100               	movlb	0	; () banked
 11991  0016C2  0100               	movlb	0	; () banked
 11992  0016C4  519E               	movf	i1sprintf@c& (0+255),w,b
 11993  0016C6  0A25               	xorlw	37
 11994  0016C8  B4D8               	btfsc	status,2,c
 11995  0016CA  D00D               	goto	i1l11171
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;doprnt.c: 549: {
 11999                           ;doprnt.c: 550: ((*sp++ = (c)));
 12000  0016CC  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 12001  0016D0  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 12002  0016D4  0100               	movlb	0	; () banked
 12003  0016D6  C09E  FFDF         	movff	i1sprintf@c,indf2
 12004                           
 12005                           ; BSR set to: 0
 12006  0016DA  0100               	movlb	0	; () banked
 12007  0016DC  0100               	movlb	0	; () banked
 12008  0016DE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12009  0016E0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12010                           
 12011                           ;doprnt.c: 551: continue;
 12012  0016E2  EFF1  F011         	goto	i1l11489
 12013  0016E6                     i1l11171:
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;doprnt.c: 552: }
 12017                           ;doprnt.c: 555: width = 0;
 12018  0016E6  0E00               	movlw	0
 12019  0016E8  0100               	movlb	0	; () banked
 12020  0016EA  0100               	movlb	0	; () banked
 12021  0016EC  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 12022  0016EE  0E00               	movlw	0
 12023  0016F0  0100               	movlb	0	; () banked
 12024  0016F2  6F97               	movwf	i1sprintf@width& (0+255),b
 12025                           
 12026                           ;doprnt.c: 557: flag = 0;
 12027  0016F4  0E00               	movlw	0
 12028  0016F6  0100               	movlb	0	; () banked
 12029  0016F8  0100               	movlb	0	; () banked
 12030  0016FA  6F94               	movwf	(i1sprintf@flag+1)& (0+255),b
 12031  0016FC  0E00               	movlw	0
 12032  0016FE  0100               	movlb	0	; () banked
 12033  001700  6F93               	movwf	i1sprintf@flag& (0+255),b
 12034  001702  D007               	goto	i1l11177
 12035  001704                     i1l11173:
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;doprnt.c: 589: flag |= 0x04;
 12039  001704  0100               	movlb	0	; () banked
 12040  001706  0100               	movlb	0	; () banked
 12041  001708  8593               	bsf	i1sprintf@flag& (0+255),2,b
 12042                           
 12043                           ;doprnt.c: 590: f++;
 12044  00170A  0100               	movlb	0	; () banked
 12045  00170C  0100               	movlb	0	; () banked
 12046  00170E  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12047  001710  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12048  001712                     i1l11177:
 12049                           
 12050                           ; BSR set to: 0
 12051  001712  0100               	movlb	0	; () banked
 12052  001714  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12053  001718  0100               	movlb	0	; () banked
 12054  00171A  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12055  00171E  0008               	tblrd		*
 12056  001720  50F5               	movf	tablat,w,c
 12057                           
 12058                           ; Switch size 1, requested type "space"
 12059                           ; Number of cases is 1, Range of values is 48 to 48
 12060                           ; switch strategies available:
 12061                           ; Name         Instructions Cycles
 12062                           ; simple_byte            4     3 (average)
 12063                           ;	Chosen strategy is simple_byte
 12064  001722  0A30               	xorlw	48	; case 48
 12065  001724  B4D8               	btfsc	status,2,c
 12066  001726  D7EE               	goto	i1l11173
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 12070                           
 12071                           ; BSR set to: 0
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;doprnt.c: 595: }
 12075                           
 12076                           ; BSR set to: 0
 12077                           ;doprnt.c: 594: break;
 12078  001728  0100               	movlb	0	; () banked
 12079  00172A  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12080  00172E  0100               	movlb	0	; () banked
 12081  001730  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12082  001734  0008               	tblrd		*
 12083  001736  CFF5 F011          	movff	tablat,?i1_isdigit
 12084  00173A  EC21  F031         	call	i1_isdigit	;wreg free
 12085  00173E  A0D8               	btfss	status,0,c
 12086  001740  D043               	goto	i1l11191
 12087                           
 12088                           ;doprnt.c: 607: width = 0;
 12089  001742  0E00               	movlw	0
 12090  001744  0100               	movlb	0	; () banked
 12091  001746  0100               	movlb	0	; () banked
 12092  001748  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 12093  00174A  0E00               	movlw	0
 12094  00174C  0100               	movlb	0	; () banked
 12095  00174E  6F97               	movwf	i1sprintf@width& (0+255),b
 12096  001750                     i1l11183:
 12097                           
 12098                           ;doprnt.c: 609: width *= 10;
 12099  001750  C097  F021         	movff	i1sprintf@width,?i1___wmul
 12100  001754  C098  F022         	movff	i1sprintf@width+1,?i1___wmul+1
 12101  001758  0E00               	movlw	0
 12102  00175A  6E24               	movwf	?i1___wmul+3,c
 12103  00175C  0E0A               	movlw	10
 12104  00175E  6E23               	movwf	?i1___wmul+2,c
 12105  001760  EC89  F030         	call	i1___wmul	;wreg free
 12106  001764  C021  F097         	movff	?i1___wmul,i1sprintf@width
 12107  001768  C022  F098         	movff	?i1___wmul+1,i1sprintf@width+1
 12108                           
 12109                           ;doprnt.c: 610: width += *f++ - '0';
 12110  00176C  0100               	movlb	0	; () banked
 12111  00176E  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12112  001772  0100               	movlb	0	; () banked
 12113  001774  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12114  001778  0008               	tblrd		*
 12115  00177A  CFF5 F078          	movff	tablat,??i1_sprintf
 12116  00177E  0ED0               	movlw	208
 12117  001780  0100               	movlb	0	; () banked
 12118  001782  2578               	addwf	??i1_sprintf& (0+255),w,b
 12119  001784  0100               	movlb	0	; () banked
 12120  001786  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12121  001788  0100               	movlb	0	; () banked
 12122  00178A  0100               	movlb	0	; () banked
 12123  00178C  6B7A               	clrf	(??i1_sprintf+2)& (0+255),b
 12124  00178E  0EFF               	movlw	255
 12125  001790  237A               	addwfc	(??i1_sprintf+2)& (0+255),f,b
 12126  001792  0100               	movlb	0	; () banked
 12127  001794  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12128  001796  0100               	movlb	0	; () banked
 12129  001798  0100               	movlb	0	; () banked
 12130  00179A  2797               	addwf	i1sprintf@width& (0+255),f,b
 12131  00179C  0100               	movlb	0	; () banked
 12132  00179E  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 12133  0017A0  0100               	movlb	0	; () banked
 12134  0017A2  0100               	movlb	0	; () banked
 12135  0017A4  2398               	addwfc	(i1sprintf@width+1)& (0+255),f,b
 12136                           
 12137                           ; BSR set to: 0
 12138  0017A6  0100               	movlb	0	; () banked
 12139  0017A8  0100               	movlb	0	; () banked
 12140  0017AA  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12141  0017AC  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12142                           
 12143                           ; BSR set to: 0
 12144                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 12145  0017AE  0100               	movlb	0	; () banked
 12146  0017B0  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12147  0017B4  0100               	movlb	0	; () banked
 12148  0017B6  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12149  0017BA  0008               	tblrd		*
 12150  0017BC  CFF5 F011          	movff	tablat,?i1_isdigit
 12151  0017C0  EC21  F031         	call	i1_isdigit	;wreg free
 12152  0017C4  B0D8               	btfsc	status,0,c
 12153  0017C6  D7C4               	goto	i1l11183
 12154  0017C8                     i1l11191:
 12155                           
 12156                           ;doprnt.c: 617: }
 12157                           ;doprnt.c: 620: if(*f == '.') {
 12158  0017C8  0100               	movlb	0	; () banked
 12159  0017CA  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12160  0017CE  0100               	movlb	0	; () banked
 12161  0017D0  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12162  0017D4  0008               	tblrd		*
 12163  0017D6  50F5               	movf	tablat,w,c
 12164  0017D8  0A2E               	xorlw	46
 12165  0017DA  A4D8               	btfss	status,2,c
 12166  0017DC  D03F               	goto	i1l11203
 12167                           
 12168                           ; BSR set to: 0
 12169                           ;doprnt.c: 621: flag |= 0x4000;
 12170  0017DE  0100               	movlb	0	; () banked
 12171  0017E0  0100               	movlb	0	; () banked
 12172  0017E2  8D94               	bsf	(i1sprintf@flag+1)& (0+255),6,b
 12173                           
 12174                           ;doprnt.c: 622: f++;
 12175  0017E4  0100               	movlb	0	; () banked
 12176  0017E6  0100               	movlb	0	; () banked
 12177  0017E8  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12178  0017EA  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12179                           
 12180                           ; BSR set to: 0
 12181                           ;doprnt.c: 629: {
 12182                           ;doprnt.c: 630: prec = 0;
 12183  0017EC  0E00               	movlw	0
 12184  0017EE  0100               	movlb	0	; () banked
 12185  0017F0  0100               	movlb	0	; () banked
 12186  0017F2  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12187  0017F4  0E00               	movlw	0
 12188  0017F6  0100               	movlb	0	; () banked
 12189  0017F8  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12190                           
 12191                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 12192  0017FA  D022               	goto	i1l11201
 12193  0017FC                     i1l11197:
 12194                           
 12195                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 12196  0017FC  C09C  F021         	movff	i1sprintf@prec,?i1___wmul
 12197  001800  C09D  F022         	movff	i1sprintf@prec+1,?i1___wmul+1
 12198  001804  0E00               	movlw	0
 12199  001806  6E24               	movwf	?i1___wmul+3,c
 12200  001808  0E0A               	movlw	10
 12201  00180A  6E23               	movwf	?i1___wmul+2,c
 12202  00180C  EC89  F030         	call	i1___wmul	;wreg free
 12203  001810  0100               	movlb	0	; () banked
 12204  001812  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12205  001816  0100               	movlb	0	; () banked
 12206  001818  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12207  00181C  0008               	tblrd		*
 12208  00181E  50F5               	movf	tablat,w,c
 12209  001820  2621               	addwf	?i1___wmul,f,c
 12210  001822  0E00               	movlw	0
 12211  001824  2222               	addwfc	?i1___wmul+1,f,c
 12212  001826  0ED0               	movlw	208
 12213  001828  2421               	addwf	?i1___wmul,w,c
 12214  00182A  0100               	movlb	0	; () banked
 12215  00182C  0100               	movlb	0	; () banked
 12216  00182E  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12217  001830  0EFF               	movlw	255
 12218  001832  2022               	addwfc	?i1___wmul+1,w,c
 12219  001834  0100               	movlb	0	; () banked
 12220  001836  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12221                           
 12222                           ; BSR set to: 0
 12223  001838  0100               	movlb	0	; () banked
 12224  00183A  0100               	movlb	0	; () banked
 12225  00183C  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12226  00183E  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12227  001840                     i1l11201:
 12228                           
 12229                           ; BSR set to: 0
 12230  001840  0100               	movlb	0	; () banked
 12231  001842  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12232  001846  0100               	movlb	0	; () banked
 12233  001848  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12234  00184C  0008               	tblrd		*
 12235  00184E  CFF5 F011          	movff	tablat,?i1_isdigit
 12236  001852  EC21  F031         	call	i1_isdigit	;wreg free
 12237  001856  A0D8               	btfss	status,0,c
 12238  001858  D010               	goto	i1l11211
 12239  00185A  D7D0               	goto	i1l11197
 12240  00185C                     i1l11203:
 12241                           
 12242                           ;doprnt.c: 635: prec = 0;
 12243  00185C  0E00               	movlw	0
 12244  00185E  0100               	movlb	0	; () banked
 12245  001860  0100               	movlb	0	; () banked
 12246  001862  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12247  001864  0E00               	movlw	0
 12248  001866  0100               	movlb	0	; () banked
 12249  001868  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;doprnt.c: 637: flag |= 0x1000;
 12253  00186A  0100               	movlb	0	; () banked
 12254  00186C  0100               	movlb	0	; () banked
 12255  00186E  8994               	bsf	(i1sprintf@flag+1)& (0+255),4,b
 12256  001870  D004               	goto	i1l11211
 12257  001872                     i1l11207:
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;doprnt.c: 672: flag |= 0x400;
 12261  001872  0100               	movlb	0	; () banked
 12262  001874  0100               	movlb	0	; () banked
 12263  001876  8594               	bsf	(i1sprintf@flag+1)& (0+255),2,b
 12264                           
 12265                           ;doprnt.c: 673: break;
 12266  001878  D01E               	goto	i1l11213
 12267  00187A                     i1l11211:
 12268  00187A  0100               	movlb	0	; () banked
 12269  00187C  C073  FFF6         	movff	i1sprintf@f,tblptrl
 12270  001880  0100               	movlb	0	; () banked
 12271  001882  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 12272  001886  0100               	movlb	0	; () banked
 12273  001888  0100               	movlb	0	; () banked
 12274  00188A  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 12275  00188C  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 12276  00188E  0008               	tblrd		*
 12277  001890  0100               	movlb	0	; () banked
 12278  001892  CFF5 F09E          	movff	tablat,i1sprintf@c
 12279  001896  0100               	movlb	0	; () banked
 12280  001898  519E               	movf	i1sprintf@c& (0+255),w,b
 12281                           
 12282                           ; Switch size 1, requested type "space"
 12283                           ; Number of cases is 4, Range of values is 0 to 105
 12284                           ; switch strategies available:
 12285                           ; Name         Instructions Cycles
 12286                           ; simple_byte           13     7 (average)
 12287                           ;	Chosen strategy is simple_byte
 12288  00189A  0A00               	xorlw	0	; case 0
 12289  00189C  B4D8               	btfsc	status,2,c
 12290  00189E  EF03  F012         	goto	i1l11491
 12291  0018A2  0A64               	xorlw	100	; case 100
 12292  0018A4  B4D8               	btfsc	status,2,c
 12293  0018A6  D007               	goto	i1l11213
 12294  0018A8  0A02               	xorlw	2	; case 102
 12295  0018AA  B4D8               	btfsc	status,2,c
 12296  0018AC  D7E2               	goto	i1l11207
 12297  0018AE  0A0F               	xorlw	15	; case 105
 12298  0018B0  A4D8               	btfss	status,2,c
 12299  0018B2  EFF1  F011         	goto	i1l11489
 12300  0018B6                     i1l11213:
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;doprnt.c: 834: if(flag & (0x700)) {
 12304  0018B6  0E07               	movlw	7
 12305  0018B8  0100               	movlb	0	; () banked
 12306  0018BA  0100               	movlb	0	; () banked
 12307  0018BC  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 12308  0018BE  B4D8               	btfsc	status,2,c
 12309  0018C0  D3B6               	goto	i1l11393
 12310                           
 12311                           ; BSR set to: 0
 12312                           ;doprnt.c: 836: if(flag & 0x1000)
 12313  0018C2  0100               	movlb	0	; () banked
 12314  0018C4  0100               	movlb	0	; () banked
 12315  0018C6  A994               	btfss	(i1sprintf@flag+1)& (0+255),4,b
 12316  0018C8  D007               	goto	i1l11219
 12317                           
 12318                           ; BSR set to: 0
 12319                           ;doprnt.c: 838: prec = 6;
 12320  0018CA  0E00               	movlw	0
 12321  0018CC  0100               	movlb	0	; () banked
 12322  0018CE  0100               	movlb	0	; () banked
 12323  0018D0  6F9D               	movwf	(i1sprintf@prec+1)& (0+255),b
 12324  0018D2  0E06               	movlw	6
 12325  0018D4  0100               	movlb	0	; () banked
 12326  0018D6  6F9C               	movwf	i1sprintf@prec& (0+255),b
 12327  0018D8                     i1l11219:
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12331  0018D8  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 12332  0018DC  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 12333  0018E0  0100               	movlb	0	; () banked
 12334  0018E2  CFDE F099          	movff	postinc2,i1sprintf@fval
 12335  0018E6  0100               	movlb	0	; () banked
 12336  0018E8  CFDE F09A          	movff	postinc2,i1sprintf@fval+1
 12337  0018EC  0100               	movlb	0	; () banked
 12338  0018EE  CFDD F09B          	movff	postdec2,i1sprintf@fval+2
 12339                           
 12340                           ; BSR set to: 0
 12341  0018F2  0E03               	movlw	3
 12342  0018F4  0100               	movlb	0	; () banked
 12343  0018F6  0100               	movlb	0	; () banked
 12344  0018F8  2789               	addwf	i1sprintf@ap& (0+255),f,b
 12345  0018FA  0E00               	movlw	0
 12346  0018FC  0100               	movlb	0	; () banked
 12347  0018FE  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;doprnt.c: 840: if(fval < 0.0) {
 12351  001900  0100               	movlb	0	; () banked
 12352  001902  0100               	movlb	0	; () banked
 12353  001904  519B               	movf	(i1sprintf@fval+2)& (0+255),w,b
 12354  001906  0A80               	xorlw	128
 12355  001908  0F80               	addlw	128
 12356  00190A  E107               	bnz	i1u1056_25
 12357  00190C  0E00               	movlw	0
 12358  00190E  0100               	movlb	0	; () banked
 12359  001910  5D9A               	subwf	(i1sprintf@fval+1)& (0+255),w,b
 12360  001912  E103               	bnz	i1u1056_25
 12361  001914  0E00               	movlw	0
 12362  001916  0100               	movlb	0	; () banked
 12363  001918  5D99               	subwf	i1sprintf@fval& (0+255),w,b
 12364  00191A                     i1u1056_25:
 12365  00191A  B0D8               	btfsc	status,0,c
 12366  00191C  D012               	goto	i1l11229
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;doprnt.c: 841: fval = -fval;
 12370  00191E  C099  F011         	movff	i1sprintf@fval,?i1___ftneg
 12371  001922  C09A  F012         	movff	i1sprintf@fval+1,?i1___ftneg+1
 12372  001926  C09B  F013         	movff	i1sprintf@fval+2,?i1___ftneg+2
 12373  00192A  EC0E  F031         	call	i1___ftneg	;wreg free
 12374  00192E  C013  F09B         	movff	?i1___ftneg+2,i1sprintf@fval+2
 12375  001932  C012  F09A         	movff	?i1___ftneg+1,i1sprintf@fval+1
 12376  001936  C011  F099         	movff	?i1___ftneg,i1sprintf@fval
 12377                           
 12378                           ;doprnt.c: 842: flag |= 0x03;
 12379  00193A  0E03               	movlw	3
 12380  00193C  0100               	movlb	0	; () banked
 12381  00193E  0100               	movlb	0	; () banked
 12382  001940  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 12383  001942                     i1l11229:
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;doprnt.c: 843: }
 12387                           ;doprnt.c: 844: exp = 0;
 12388  001942  0E00               	movlw	0
 12389  001944  0100               	movlb	0	; () banked
 12390  001946  0100               	movlb	0	; () banked
 12391  001948  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12392  00194A  0E00               	movlw	0
 12393  00194C  0100               	movlb	0	; () banked
 12394  00194E  6F95               	movwf	i1sprintf@exp& (0+255),b
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;doprnt.c: 845: if( fval!=0) {
 12398  001950  0E7F               	movlw	127
 12399  001952  0100               	movlb	0	; () banked
 12400  001954  0100               	movlb	0	; () banked
 12401  001956  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 12402  001958  0100               	movlb	0	; () banked
 12403  00195A  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 12404  00195C  0100               	movlb	0	; () banked
 12405  00195E  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 12406  001960  B4D8               	btfsc	status,2,c
 12407  001962  D099               	goto	i1l11257
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12411  001964  0E82               	movlw	130
 12412  001966  0100               	movlb	0	; () banked
 12413  001968  6F78               	movwf	??i1_sprintf& (0+255),b
 12414  00196A  0EFF               	movlw	255
 12415  00196C  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12416  00196E  0100               	movlb	0	; () banked
 12417  001970  C099  F07A         	movff	i1sprintf@fval,??i1_sprintf+2
 12418  001974  0100               	movlb	0	; () banked
 12419  001976  C09A  F07B         	movff	i1sprintf@fval+1,??i1_sprintf+3
 12420  00197A  0100               	movlb	0	; () banked
 12421  00197C  C09B  F07C         	movff	i1sprintf@fval+2,??i1_sprintf+4
 12422  001980  0100               	movlb	0	; () banked
 12423  001982  C09C  F07D         	movff	i1sprintf@fval+3,??i1_sprintf+5
 12424  001986  0E10               	movlw	16
 12425  001988  D006               	goto	i1u1058_20
 12426  00198A                     i1u1058_25:
 12427  00198A  0100               	movlb	0	; () banked
 12428  00198C  90D8               	bcf	status,0,c
 12429  00198E  337D               	rrcf	(??i1_sprintf+5)& (0+255),f,b
 12430  001990  337C               	rrcf	(??i1_sprintf+4)& (0+255),f,b
 12431  001992  337B               	rrcf	(??i1_sprintf+3)& (0+255),f,b
 12432  001994  337A               	rrcf	(??i1_sprintf+2)& (0+255),f,b
 12433  001996                     i1u1058_20:
 12434  001996  2EE8               	decfsz	wreg,f,c
 12435  001998  D7F8               	goto	i1u1058_25
 12436  00199A  0100               	movlb	0	; () banked
 12437  00199C  517A               	movf	(??i1_sprintf+2)& (0+255),w,b
 12438  00199E  0100               	movlb	0	; () banked
 12439  0019A0  2578               	addwf	??i1_sprintf& (0+255),w,b
 12440  0019A2  0100               	movlb	0	; () banked
 12441  0019A4  0100               	movlb	0	; () banked
 12442  0019A6  6F95               	movwf	i1sprintf@exp& (0+255),b
 12443  0019A8  0100               	movlb	0	; () banked
 12444  0019AA  0100               	movlb	0	; () banked
 12445  0019AC  0E00               	movlw	0
 12446  0019AE  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 12447  0019B0  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;doprnt.c: 847: exp--;
 12451  0019B2  0100               	movlb	0	; () banked
 12452  0019B4  0100               	movlb	0	; () banked
 12453  0019B6  0795               	decf	i1sprintf@exp& (0+255),f,b
 12454  0019B8  A0D8               	btfss	status,0,c
 12455  0019BA  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;doprnt.c: 848: exp *= 3;
 12459  0019BC  C095  F021         	movff	i1sprintf@exp,?i1___wmul
 12460  0019C0  C096  F022         	movff	i1sprintf@exp+1,?i1___wmul+1
 12461  0019C4  0E00               	movlw	0
 12462  0019C6  6E24               	movwf	?i1___wmul+3,c
 12463  0019C8  0E03               	movlw	3
 12464  0019CA  6E23               	movwf	?i1___wmul+2,c
 12465  0019CC  EC89  F030         	call	i1___wmul	;wreg free
 12466  0019D0  C021  F095         	movff	?i1___wmul,i1sprintf@exp
 12467  0019D4  C022  F096         	movff	?i1___wmul+1,i1sprintf@exp+1
 12468                           
 12469                           ;doprnt.c: 849: exp /= 10;
 12470  0019D8  C095  F018         	movff	i1sprintf@exp,?i1___awdiv
 12471  0019DC  C096  F019         	movff	i1sprintf@exp+1,?i1___awdiv+1
 12472  0019E0  0E00               	movlw	0
 12473  0019E2  6E1B               	movwf	?i1___awdiv+3,c
 12474  0019E4  0E0A               	movlw	10
 12475  0019E6  6E1A               	movwf	?i1___awdiv+2,c
 12476  0019E8  ECB7  F02B         	call	i1___awdiv	;wreg free
 12477  0019EC  C018  F095         	movff	?i1___awdiv,i1sprintf@exp
 12478  0019F0  C019  F096         	movff	?i1___awdiv+1,i1sprintf@exp+1
 12479                           
 12480                           ;doprnt.c: 850: if(exp < 0)
 12481  0019F4  0100               	movlb	0	; () banked
 12482  0019F6  0100               	movlb	0	; () banked
 12483  0019F8  AF96               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 12484  0019FA  D005               	goto	i1l11245
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;doprnt.c: 851: exp--;
 12488  0019FC  0100               	movlb	0	; () banked
 12489  0019FE  0100               	movlb	0	; () banked
 12490  001A00  0795               	decf	i1sprintf@exp& (0+255),f,b
 12491  001A02  A0D8               	btfss	status,0,c
 12492  001A04  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12493  001A06                     i1l11245:
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;doprnt.c: 855: integ = scale(-exp);
 12497  001A06  0100               	movlb	0	; () banked
 12498  001A08  0100               	movlb	0	; () banked
 12499  001A0A  5195               	movf	i1sprintf@exp& (0+255),w,b
 12500  001A0C  0800               	sublw	0
 12501  001A0E  6E47               	movwf	?i1_scale,c
 12502  001A10  EC14  F015         	call	i1_scale	;wreg free
 12503  001A14  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 12504  001A18  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 12505  001A1C  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 12506                           
 12507                           ;doprnt.c: 856: integ *= fval;
 12508  001A20  0100               	movlb	0	; () banked
 12509  001A22  0E00               	movlw	high i1sprintf@integ
 12510  001A24  0100               	movlb	0	; () banked
 12511  001A26  0100               	movlb	0	; () banked
 12512  001A28  6F61               	movwf	(?i1___asftmul+1)& (0+255),b
 12513  001A2A  0100               	movlb	0	; () banked
 12514  001A2C  0E8B               	movlw	low i1sprintf@integ
 12515  001A2E  0100               	movlb	0	; () banked
 12516  001A30  6F60               	movwf	?i1___asftmul& (0+255),b
 12517  001A32  C099  F062         	movff	i1sprintf@fval,?i1___asftmul+2
 12518  001A36  C09A  F063         	movff	i1sprintf@fval+1,?i1___asftmul+3
 12519  001A3A  C09B  F064         	movff	i1sprintf@fval+2,?i1___asftmul+4
 12520  001A3E  EC13  F030         	call	i1___asftmul	;wreg free
 12521                           
 12522                           ;doprnt.c: 857: if(integ < 1.0)
 12523  001A42  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12524  001A46  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12525  001A4A  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12526  001A4E  0E00               	movlw	0
 12527  001A50  6E14               	movwf	?i1___ftge+3,c
 12528  001A52  0E80               	movlw	128
 12529  001A54  6E15               	movwf	?i1___ftge+4,c
 12530  001A56  0E3F               	movlw	63
 12531  001A58  6E16               	movwf	?i1___ftge+5,c
 12532  001A5A  EC6F  F02B         	call	i1___ftge	;wreg free
 12533  001A5E  B0D8               	btfsc	status,0,c
 12534  001A60  D006               	goto	i1l11253
 12535                           
 12536                           ;doprnt.c: 858: exp--;
 12537  001A62  0100               	movlb	0	; () banked
 12538  001A64  0100               	movlb	0	; () banked
 12539  001A66  0795               	decf	i1sprintf@exp& (0+255),f,b
 12540  001A68  A0D8               	btfss	status,0,c
 12541  001A6A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 12542  001A6C  D014               	goto	i1l11257
 12543  001A6E                     i1l11253:
 12544                           
 12545                           ;doprnt.c: 859: else if(integ >= 10.0)
 12546  001A6E  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12547  001A72  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12548  001A76  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12549  001A7A  0E00               	movlw	0
 12550  001A7C  6E14               	movwf	?i1___ftge+3,c
 12551  001A7E  0E20               	movlw	32
 12552  001A80  6E15               	movwf	?i1___ftge+4,c
 12553  001A82  0E41               	movlw	65
 12554  001A84  6E16               	movwf	?i1___ftge+5,c
 12555  001A86  EC6F  F02B         	call	i1___ftge	;wreg free
 12556  001A8A  A0D8               	btfss	status,0,c
 12557  001A8C  D004               	goto	i1l11257
 12558                           
 12559                           ;doprnt.c: 860: exp++;
 12560  001A8E  0100               	movlb	0	; () banked
 12561  001A90  0100               	movlb	0	; () banked
 12562  001A92  4B95               	infsnz	i1sprintf@exp& (0+255),f,b
 12563  001A94  2B96               	incf	(i1sprintf@exp+1)& (0+255),f,b
 12564  001A96                     i1l11257:
 12565                           
 12566                           ;doprnt.c: 861: }
 12567                           ;doprnt.c: 1121: if(prec <= 12)
 12568  001A96  0100               	movlb	0	; () banked
 12569  001A98  0100               	movlb	0	; () banked
 12570  001A9A  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12571  001A9C  0A80               	xorlw	128
 12572  001A9E  0F80               	addlw	-128
 12573  001AA0  0E0D               	movlw	13
 12574  001AA2  B4D8               	btfsc	status,2,c
 12575  001AA4  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 12576  001AA6  B0D8               	btfsc	status,0,c
 12577  001AA8  D015               	goto	i1l11261
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;doprnt.c: 1122: fval += fround(prec);
 12581  001AAA  0100               	movlb	0	; () banked
 12582  001AAC  0E00               	movlw	high i1sprintf@fval
 12583  001AAE  0100               	movlb	0	; () banked
 12584  001AB0  0100               	movlb	0	; () banked
 12585  001AB2  6F6D               	movwf	(?i1___asftadd+1)& (0+255),b
 12586  001AB4  0100               	movlb	0	; () banked
 12587  001AB6  0E99               	movlw	low i1sprintf@fval
 12588  001AB8  0100               	movlb	0	; () banked
 12589  001ABA  6F6C               	movwf	?i1___asftadd& (0+255),b
 12590  001ABC  C09C  F047         	movff	i1sprintf@prec,?i1_fround
 12591  001AC0  EC99  F01A         	call	i1_fround	;wreg free
 12592  001AC4  C049  F070         	movff	?i1_fround+2,?i1___asftadd+4
 12593  001AC8  C048  F06F         	movff	?i1_fround+1,?i1___asftadd+3
 12594  001ACC  C047  F06E         	movff	?i1_fround,?i1___asftadd+2
 12595  001AD0  EC31  F030         	call	i1___asftadd	;wreg free
 12596  001AD4                     i1l11261:
 12597                           
 12598                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12599  001AD4  0100               	movlb	0	; () banked
 12600  001AD6  0100               	movlb	0	; () banked
 12601  001AD8  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12602  001ADA  0A80               	xorlw	128
 12603  001ADC  0F80               	addlw	-128
 12604  001ADE  0E0A               	movlw	10
 12605  001AE0  B4D8               	btfsc	status,2,c
 12606  001AE2  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 12607  001AE4  B0D8               	btfsc	status,0,c
 12608  001AE6  D022               	goto	i1l11269
 12609                           
 12610                           ; BSR set to: 0
 12611  001AE8  0E7F               	movlw	127
 12612  001AEA  0100               	movlb	0	; () banked
 12613  001AEC  0100               	movlb	0	; () banked
 12614  001AEE  159B               	andwf	(i1sprintf@fval+2)& (0+255),w,b
 12615  001AF0  0100               	movlb	0	; () banked
 12616  001AF2  119A               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 12617  001AF4  0100               	movlb	0	; () banked
 12618  001AF6  1199               	iorwf	i1sprintf@fval& (0+255),w,b
 12619  001AF8  B4D8               	btfsc	status,2,c
 12620  001AFA  D067               	goto	i1l11285
 12621                           
 12622                           ; BSR set to: 0
 12623  001AFC  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 12624  001B00  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 12625  001B04  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 12626  001B08  EC7C  F028         	call	i1___fttol	;wreg free
 12627  001B0C  502A               	movf	?i1___fttol+3,w,c
 12628  001B0E  1027               	iorwf	?i1___fttol,w,c
 12629  001B10  1028               	iorwf	?i1___fttol+1,w,c
 12630  001B12  1029               	iorwf	?i1___fttol+2,w,c
 12631  001B14  A4D8               	btfss	status,2,c
 12632  001B16  D059               	goto	i1l11285
 12633  001B18  0100               	movlb	0	; () banked
 12634  001B1A  0100               	movlb	0	; () banked
 12635  001B1C  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12636  001B1E  0A80               	xorlw	128
 12637  001B20  0F80               	addlw	-128
 12638  001B22  0E02               	movlw	2
 12639  001B24  B4D8               	btfsc	status,2,c
 12640  001B26  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 12641  001B28  A0D8               	btfss	status,0,c
 12642  001B2A  D04F               	goto	i1l11285
 12643  001B2C                     i1l11269:
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;doprnt.c: 1129: if(integ < 4.294967296){
 12647  001B2C  C08B  F011         	movff	i1sprintf@integ,?i1___ftge
 12648  001B30  C08C  F012         	movff	i1sprintf@integ+1,?i1___ftge+1
 12649  001B34  C08D  F013         	movff	i1sprintf@integ+2,?i1___ftge+2
 12650  001B38  0E70               	movlw	112
 12651  001B3A  6E14               	movwf	?i1___ftge+3,c
 12652  001B3C  0E89               	movlw	137
 12653  001B3E  6E15               	movwf	?i1___ftge+4,c
 12654  001B40  0E40               	movlw	64
 12655  001B42  6E16               	movwf	?i1___ftge+5,c
 12656  001B44  EC6F  F02B         	call	i1___ftge	;wreg free
 12657  001B48  B0D8               	btfsc	status,0,c
 12658  001B4A  D003               	goto	i1l11273
 12659                           
 12660                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12661  001B4C  0100               	movlb	0	; () banked
 12662  001B4E  0EF7               	movlw	247
 12663  001B50  D002               	goto	L14
 12664  001B52                     i1l11273:
 12665                           
 12666                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12667  001B52  0100               	movlb	0	; () banked
 12668  001B54  0EF8               	movlw	248
 12669  001B56                     L14:
 12670  001B56  0100               	movlb	0	; () banked
 12671  001B58  2795               	addwf	i1sprintf@exp& (0+255),f,b
 12672  001B5A  0EFF               	movlw	255
 12673  001B5C  0100               	movlb	0	; () banked
 12674  001B5E  2396               	addwfc	(i1sprintf@exp+1)& (0+255),f,b
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;doprnt.c: 1133: }
 12678                           ;doprnt.c: 1134: integ = scale(exp);
 12679                           
 12680                           ; BSR set to: 0
 12681  001B60  C095  F047         	movff	i1sprintf@exp,?i1_scale
 12682  001B64  EC14  F015         	call	i1_scale	;wreg free
 12683  001B68  C049  F08D         	movff	?i1_scale+2,i1sprintf@integ+2
 12684  001B6C  C048  F08C         	movff	?i1_scale+1,i1sprintf@integ+1
 12685  001B70  C047  F08B         	movff	?i1_scale,i1sprintf@integ
 12686                           
 12687                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 12688  001B74  C099  F011         	movff	i1sprintf@fval,?i1__tdiv_to_l_
 12689  001B78  C09A  F012         	movff	i1sprintf@fval+1,?i1__tdiv_to_l_+1
 12690  001B7C  C09B  F013         	movff	i1sprintf@fval+2,?i1__tdiv_to_l_+2
 12691  001B80  C08B  F014         	movff	i1sprintf@integ,?i1__tdiv_to_l_+3
 12692  001B84  C08C  F015         	movff	i1sprintf@integ+1,?i1__tdiv_to_l_+4
 12693  001B88  C08D  F016         	movff	i1sprintf@integ+2,?i1__tdiv_to_l_+5
 12694  001B8C  ECDD  F022         	call	i1__tdiv_to_l_	;wreg free
 12695  001B90  C014  F084         	movff	?i1__tdiv_to_l_+3,i1_sprintf$563+3
 12696  001B94  C013  F083         	movff	?i1__tdiv_to_l_+2,i1_sprintf$563+2
 12697  001B98  C012  F082         	movff	?i1__tdiv_to_l_+1,i1_sprintf$563+1
 12698  001B9C  C011  F081         	movff	?i1__tdiv_to_l_,i1_sprintf$563
 12699  001BA0  C081  F08E         	movff	i1_sprintf$563,i1sprintf@_val
 12700  001BA4  C082  F08F         	movff	i1_sprintf$563+1,i1sprintf@_val+1
 12701  001BA8  C083  F090         	movff	i1_sprintf$563+2,i1sprintf@_val+2
 12702  001BAC  C084  F091         	movff	i1_sprintf$563+3,i1sprintf@_val+3
 12703                           
 12704                           ;doprnt.c: 1138: fval = 0.0;
 12705  001BB0  0E00               	movlw	0
 12706  001BB2  0100               	movlb	0	; () banked
 12707  001BB4  0100               	movlb	0	; () banked
 12708  001BB6  6F99               	movwf	i1sprintf@fval& (0+255),b
 12709  001BB8  0E00               	movlw	0
 12710  001BBA  0100               	movlb	0	; () banked
 12711  001BBC  0100               	movlb	0	; () banked
 12712  001BBE  6F9A               	movwf	(i1sprintf@fval+1)& (0+255),b
 12713  001BC0  0E00               	movlw	0
 12714  001BC2  0100               	movlb	0	; () banked
 12715  001BC4  0100               	movlb	0	; () banked
 12716  001BC6  6F9B               	movwf	(i1sprintf@fval+2)& (0+255),b
 12717                           
 12718                           ;doprnt.c: 1139: } else {
 12719  001BC8  D02F               	goto	i1l11291
 12720  001BCA                     i1l11285:
 12721                           
 12722                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 12723  001BCA  C099  F027         	movff	i1sprintf@fval,?i1___fttol
 12724  001BCE  C09A  F028         	movff	i1sprintf@fval+1,?i1___fttol+1
 12725  001BD2  C09B  F029         	movff	i1sprintf@fval+2,?i1___fttol+2
 12726  001BD6  EC7C  F028         	call	i1___fttol	;wreg free
 12727  001BDA  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 12728  001BDE  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 12729  001BE2  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 12730  001BE6  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 12731                           
 12732                           ;doprnt.c: 1141: fval -= (double)_val._val;
 12733  001BEA  0100               	movlb	0	; () banked
 12734  001BEC  0E00               	movlw	high i1sprintf@fval
 12735  001BEE  6E2E               	movwf	?i1___asftsub+1,c
 12736  001BF0  0100               	movlb	0	; () banked
 12737  001BF2  0E99               	movlw	low i1sprintf@fval
 12738  001BF4  6E2D               	movwf	?i1___asftsub,c
 12739  001BF6  C08E  F019         	movff	i1sprintf@_val,?i1___lltoft
 12740  001BFA  C08F  F01A         	movff	i1sprintf@_val+1,?i1___lltoft+1
 12741  001BFE  C090  F01B         	movff	i1sprintf@_val+2,?i1___lltoft+2
 12742  001C02  C091  F01C         	movff	i1sprintf@_val+3,?i1___lltoft+3
 12743  001C06  EC2B  F02E         	call	i1___lltoft	;wreg free
 12744  001C0A  C01B  F031         	movff	?i1___lltoft+2,?i1___asftsub+4
 12745  001C0E  C01A  F030         	movff	?i1___lltoft+1,?i1___asftsub+3
 12746  001C12  C019  F02F         	movff	?i1___lltoft,?i1___asftsub+2
 12747  001C16  ECF5  F02F         	call	i1___asftsub	;wreg free
 12748                           
 12749                           ;doprnt.c: 1142: exp = 0;
 12750  001C1A  0E00               	movlw	0
 12751  001C1C  0100               	movlb	0	; () banked
 12752  001C1E  0100               	movlb	0	; () banked
 12753  001C20  6F96               	movwf	(i1sprintf@exp+1)& (0+255),b
 12754  001C22  0E00               	movlw	0
 12755  001C24  0100               	movlb	0	; () banked
 12756  001C26  6F95               	movwf	i1sprintf@exp& (0+255),b
 12757  001C28                     i1l11291:
 12758                           
 12759                           ; BSR set to: 0
 12760                           ;doprnt.c: 1143: }
 12761                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12762  001C28  0100               	movlb	0	; () banked
 12763  001C2A  6F78               	movwf	??i1_sprintf& (0+255),b
 12764  001C2C  0E01               	movlw	1
 12765  001C2E  0100               	movlb	0	; () banked
 12766  001C30  0100               	movlb	0	; () banked
 12767  001C32  6F9E               	movwf	i1sprintf@c& (0+255),b
 12768  001C34  0100               	movlb	0	; () banked
 12769  001C36  5178               	movf	??i1_sprintf& (0+255),w,b
 12770  001C38                     
 12771                           ; BSR set to: 0
 12772  001C38  0100               	movlb	0	; () banked
 12773  001C3A  0100               	movlb	0	; () banked
 12774  001C3C  519E               	movf	i1sprintf@c& (0+255),w,b
 12775  001C3E  0A0A               	xorlw	10
 12776  001C40  B4D8               	btfsc	status,2,c
 12777  001C42  D021               	goto	i1l11305
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 12781                           
 12782                           ; BSR set to: 0
 12783                           
 12784                           ; BSR set to: 0
 12785  001C44  0100               	movlb	0	; () banked
 12786  001C46  0100               	movlb	0	; () banked
 12787  001C48  519E               	movf	i1sprintf@c& (0+255),w,b
 12788  001C4A  0D04               	mullw	4
 12789  001C4C  0E00               	movlw	low _dpowers
 12790  001C4E  24F3               	addwf	prodl,w,c
 12791  001C50  6EF6               	movwf	tblptrl,c
 12792  001C52  0E08               	movlw	high _dpowers
 12793  001C54  20F4               	addwfc	prodh,w,c
 12794  001C56  6EF7               	movwf	tblptrh,c
 12795  001C58  0009               	tblrd		*+
 12796  001C5A  50F5               	movf	tablat,w,c
 12797  001C5C  0100               	movlb	0	; () banked
 12798  001C5E  0100               	movlb	0	; () banked
 12799  001C60  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 12800  001C62  0009               	tblrd		*+
 12801  001C64  50F5               	movf	tablat,w,c
 12802  001C66  0100               	movlb	0	; () banked
 12803  001C68  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 12804  001C6A  0009               	tblrd		*+
 12805  001C6C  50F5               	movf	tablat,w,c
 12806  001C6E  0100               	movlb	0	; () banked
 12807  001C70  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 12808  001C72  0009               	tblrd		*+
 12809  001C74  50F5               	movf	tablat,w,c
 12810  001C76  0100               	movlb	0	; () banked
 12811  001C78  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 12812  001C7A  A0D8               	btfss	status,0,c
 12813  001C7C  D004               	goto	i1l11305
 12814                           
 12815                           ; BSR set to: 0
 12816                           
 12817                           ; BSR set to: 0
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;doprnt.c: 1147: break;
 12821  001C7E  0100               	movlb	0	; () banked
 12822  001C80  0100               	movlb	0	; () banked
 12823  001C82  2B9E               	incf	i1sprintf@c& (0+255),f,b
 12824  001C84  D7D9               	goto	L15
 12825  001C86                     i1l11305:
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;doprnt.c: 1151: width -= prec + c + exp;
 12829  001C86  0100               	movlb	0	; () banked
 12830  001C88  C09E  F078         	movff	i1sprintf@c,??i1_sprintf
 12831  001C8C  0100               	movlb	0	; () banked
 12832  001C8E  6B79               	clrf	(??i1_sprintf+1)& (0+255),b
 12833  001C90  BF78               	btfsc	??i1_sprintf& (0+255),7,b
 12834  001C92  0779               	decf	(??i1_sprintf+1)& (0+255),f,b
 12835  001C94  0100               	movlb	0	; () banked
 12836  001C96  0100               	movlb	0	; () banked
 12837  001C98  519C               	movf	i1sprintf@prec& (0+255),w,b
 12838  001C9A  0100               	movlb	0	; () banked
 12839  001C9C  2778               	addwf	??i1_sprintf& (0+255),f,b
 12840  001C9E  0100               	movlb	0	; () banked
 12841  001CA0  0100               	movlb	0	; () banked
 12842  001CA2  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12843  001CA4  0100               	movlb	0	; () banked
 12844  001CA6  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 12845  001CA8  0100               	movlb	0	; () banked
 12846  001CAA  0100               	movlb	0	; () banked
 12847  001CAC  5195               	movf	i1sprintf@exp& (0+255),w,b
 12848  001CAE  0100               	movlb	0	; () banked
 12849  001CB0  2778               	addwf	??i1_sprintf& (0+255),f,b
 12850  001CB2  0100               	movlb	0	; () banked
 12851  001CB4  0100               	movlb	0	; () banked
 12852  001CB6  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 12853  001CB8  0100               	movlb	0	; () banked
 12854  001CBA  2379               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 12855  001CBC  0100               	movlb	0	; () banked
 12856  001CBE  5178               	movf	??i1_sprintf& (0+255),w,b
 12857  001CC0  0100               	movlb	0	; () banked
 12858  001CC2  0100               	movlb	0	; () banked
 12859  001CC4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 12860  001CC6  0100               	movlb	0	; () banked
 12861  001CC8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12862  001CCA  0100               	movlb	0	; () banked
 12863  001CCC  0100               	movlb	0	; () banked
 12864  001CCE  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 12865                           
 12866                           ;doprnt.c: 1152: if(
 12867                           ;doprnt.c: 1156: prec)
 12868  001CD0  0100               	movlb	0	; () banked
 12869  001CD2  0100               	movlb	0	; () banked
 12870  001CD4  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 12871  001CD6  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 12872  001CD8  B4D8               	btfsc	status,2,c
 12873  001CDA  D005               	goto	i1l11309
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;doprnt.c: 1157: width--;
 12877  001CDC  0100               	movlb	0	; () banked
 12878  001CDE  0100               	movlb	0	; () banked
 12879  001CE0  0797               	decf	i1sprintf@width& (0+255),f,b
 12880  001CE2  A0D8               	btfss	status,0,c
 12881  001CE4  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12882  001CE6                     i1l11309:
 12883                           
 12884                           ; BSR set to: 0
 12885                           ;doprnt.c: 1158: if(flag & 0x03)
 12886  001CE6  0E03               	movlw	3
 12887  001CE8  0100               	movlb	0	; () banked
 12888  001CEA  0100               	movlb	0	; () banked
 12889  001CEC  1593               	andwf	i1sprintf@flag& (0+255),w,b
 12890  001CEE  0100               	movlb	0	; () banked
 12891  001CF0  6F78               	movwf	??i1_sprintf& (0+255),b
 12892  001CF2  0E00               	movlw	0
 12893  001CF4  0100               	movlb	0	; () banked
 12894  001CF6  0100               	movlb	0	; () banked
 12895  001CF8  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 12896  001CFA  0100               	movlb	0	; () banked
 12897  001CFC  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 12898  001CFE  0100               	movlb	0	; () banked
 12899  001D00  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 12900  001D02  1178               	iorwf	??i1_sprintf& (0+255),w,b
 12901  001D04  B4D8               	btfsc	status,2,c
 12902  001D06  D005               	goto	i1l11313
 12903                           
 12904                           ; BSR set to: 0
 12905                           ;doprnt.c: 1159: width--;
 12906  001D08  0100               	movlb	0	; () banked
 12907  001D0A  0100               	movlb	0	; () banked
 12908  001D0C  0797               	decf	i1sprintf@width& (0+255),f,b
 12909  001D0E  A0D8               	btfss	status,0,c
 12910  001D10  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12911  001D12                     i1l11313:
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;doprnt.c: 1162: if(flag & 0x04) {
 12915  001D12  0100               	movlb	0	; () banked
 12916  001D14  0100               	movlb	0	; () banked
 12917  001D16  B593               	btfsc	i1sprintf@flag& (0+255),2,b
 12918  001D18  D010               	goto	i1l11323
 12919  001D1A  D029               	goto	i1l11331
 12920  001D1C                     i1l11317:
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;doprnt.c: 1176: ((*sp++ = ('0')));
 12924  001D1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 12925  001D20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 12926  001D24  0E30               	movlw	48
 12927  001D26  6EDF               	movwf	indf2,c
 12928                           
 12929                           ; BSR set to: 0
 12930  001D28  0100               	movlb	0	; () banked
 12931  001D2A  0100               	movlb	0	; () banked
 12932  001D2C  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12933  001D2E  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;doprnt.c: 1177: width--;
 12937  001D30  0100               	movlb	0	; () banked
 12938  001D32  0100               	movlb	0	; () banked
 12939  001D34  0797               	decf	i1sprintf@width& (0+255),f,b
 12940  001D36  A0D8               	btfss	status,0,c
 12941  001D38  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12942  001D3A                     i1l11323:
 12943                           
 12944                           ; BSR set to: 0
 12945  001D3A  0100               	movlb	0	; () banked
 12946  001D3C  0100               	movlb	0	; () banked
 12947  001D3E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 12948  001D40  0A80               	xorlw	128
 12949  001D42  0F80               	addlw	-128
 12950  001D44  0E01               	movlw	1
 12951  001D46  B4D8               	btfsc	status,2,c
 12952  001D48  5D97               	subwf	i1sprintf@width& (0+255),w,b
 12953  001D4A  A0D8               	btfss	status,0,c
 12954  001D4C  D070               	goto	i1l11347
 12955  001D4E  D7E6               	goto	i1l11317
 12956  001D50                     i1l11325:
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;doprnt.c: 1188: ((*sp++ = (' ')));
 12960  001D50  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 12961  001D54  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 12962  001D58  0E20               	movlw	32
 12963  001D5A  6EDF               	movwf	indf2,c
 12964                           
 12965                           ; BSR set to: 0
 12966  001D5C  0100               	movlb	0	; () banked
 12967  001D5E  0100               	movlb	0	; () banked
 12968  001D60  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 12969  001D62  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 12970                           
 12971                           ; BSR set to: 0
 12972                           ;doprnt.c: 1189: width--;
 12973  001D64  0100               	movlb	0	; () banked
 12974  001D66  0100               	movlb	0	; () banked
 12975  001D68  0797               	decf	i1sprintf@width& (0+255),f,b
 12976  001D6A  A0D8               	btfss	status,0,c
 12977  001D6C  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 12978  001D6E                     i1l11331:
 12979                           
 12980                           ; BSR set to: 0
 12981  001D6E  0100               	movlb	0	; () banked
 12982  001D70  0100               	movlb	0	; () banked
 12983  001D72  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 12984  001D74  0A80               	xorlw	128
 12985  001D76  0F80               	addlw	-128
 12986  001D78  0E01               	movlw	1
 12987  001D7A  B4D8               	btfsc	status,2,c
 12988  001D7C  5D97               	subwf	i1sprintf@width& (0+255),w,b
 12989  001D7E  B0D8               	btfsc	status,0,c
 12990  001D80  D7E7               	goto	i1l11325
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;doprnt.c: 1190: }
 12994                           ;doprnt.c: 1195: if(flag & 0x03)
 12995                           
 12996                           ; BSR set to: 0
 12997  001D82  0E03               	movlw	3
 12998  001D84  0100               	movlb	0	; () banked
 12999  001D86  0100               	movlb	0	; () banked
 13000  001D88  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13001  001D8A  0100               	movlb	0	; () banked
 13002  001D8C  6F78               	movwf	??i1_sprintf& (0+255),b
 13003  001D8E  0E00               	movlw	0
 13004  001D90  0100               	movlb	0	; () banked
 13005  001D92  0100               	movlb	0	; () banked
 13006  001D94  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13007  001D96  0100               	movlb	0	; () banked
 13008  001D98  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13009  001D9A  0100               	movlb	0	; () banked
 13010  001D9C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13011  001D9E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13012  001DA0  B4D8               	btfsc	status,2,c
 13013  001DA2  D045               	goto	i1l11347
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;doprnt.c: 1197: ((*sp++ = ('-')));
 13017  001DA4  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13018  001DA8  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13019  001DAC  0E2D               	movlw	45
 13020  001DAE  D03A               	goto	L16
 13021  001DB0                     i1l11339:
 13022                           
 13023                           ; BSR set to: 0
 13024                           ;doprnt.c: 1207: {
 13025                           ;doprnt.c: 1208: unsigned vd = _val._val/dpowers[c];
 13026  001DB0  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13027  001DB4  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13028  001DB8  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13029  001DBC  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13030  001DC0  0100               	movlb	0	; () banked
 13031  001DC2  0100               	movlb	0	; () banked
 13032  001DC4  519E               	movf	i1sprintf@c& (0+255),w,b
 13033  001DC6  0D04               	mullw	4
 13034  001DC8  0E00               	movlw	low _dpowers
 13035  001DCA  24F3               	addwf	prodl,w,c
 13036  001DCC  6EF6               	movwf	tblptrl,c
 13037  001DCE  0E08               	movlw	high _dpowers
 13038  001DD0  20F4               	addwfc	prodh,w,c
 13039  001DD2  6EF7               	movwf	tblptrh,c
 13040  001DD4  0009               	tblrd		*+
 13041  001DD6  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13042  001DDA  0009               	tblrd		*+
 13043  001DDC  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13044  001DE0  0009               	tblrd		*+
 13045  001DE2  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13046  001DE6  000A               	tblrd		*-
 13047  001DE8  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13048  001DEC  EC8B  F02C         	call	i1___lldiv	;wreg free
 13049  001DF0  C011  F085         	movff	?i1___lldiv,i1sprintf@vd
 13050  001DF4  C012  F086         	movff	?i1___lldiv+1,i1sprintf@vd+1
 13051                           
 13052                           ;doprnt.c: 1209: vd %= 10;
 13053  001DF8  C085  F011         	movff	i1sprintf@vd,?i1___lwmod
 13054  001DFC  C086  F012         	movff	i1sprintf@vd+1,?i1___lwmod+1
 13055  001E00  0E00               	movlw	0
 13056  001E02  6E14               	movwf	?i1___lwmod+3,c
 13057  001E04  0E0A               	movlw	10
 13058  001E06  6E13               	movwf	?i1___lwmod+2,c
 13059  001E08  EC0D  F02F         	call	i1___lwmod	;wreg free
 13060  001E0C  C011  F085         	movff	?i1___lwmod,i1sprintf@vd
 13061  001E10  C012  F086         	movff	?i1___lwmod+1,i1sprintf@vd+1
 13062                           
 13063                           ;doprnt.c: 1210: ((*sp++ = ('0' + vd)));
 13064  001E14  0100               	movlb	0	; () banked
 13065  001E16  0100               	movlb	0	; () banked
 13066  001E18  5185               	movf	i1sprintf@vd& (0+255),w,b
 13067  001E1A  0F30               	addlw	48
 13068  001E1C  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13069  001E20  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13070  001E24                     L16:
 13071  001E24  6EDF               	movwf	indf2,c
 13072                           
 13073                           ; BSR set to: 0
 13074  001E26  0100               	movlb	0	; () banked
 13075  001E28  0100               	movlb	0	; () banked
 13076  001E2A  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13077  001E2C  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13078  001E2E                     i1l11347:
 13079                           
 13080                           ; BSR set to: 0
 13081  001E2E  0100               	movlb	0	; () banked
 13082  001E30  0100               	movlb	0	; () banked
 13083  001E32  079E               	decf	i1sprintf@c& (0+255),f,b
 13084  001E34  0100               	movlb	0	; () banked
 13085  001E36  299E               	incf	i1sprintf@c& (0+255),w,b
 13086  001E38  B4D8               	btfsc	status,2,c
 13087  001E3A  D010               	goto	i1l11355
 13088  001E3C  D7B9               	goto	i1l11339
 13089  001E3E                     i1l11349:
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;doprnt.c: 1215: ((*sp++ = ('0')));
 13093  001E3E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13094  001E42  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13095  001E46  0E30               	movlw	48
 13096  001E48  6EDF               	movwf	indf2,c
 13097                           
 13098                           ; BSR set to: 0
 13099  001E4A  0100               	movlb	0	; () banked
 13100  001E4C  0100               	movlb	0	; () banked
 13101  001E4E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13102  001E50  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;doprnt.c: 1216: exp--;
 13106  001E52  0100               	movlb	0	; () banked
 13107  001E54  0100               	movlb	0	; () banked
 13108  001E56  0795               	decf	i1sprintf@exp& (0+255),f,b
 13109  001E58  A0D8               	btfss	status,0,c
 13110  001E5A  0796               	decf	(i1sprintf@exp+1)& (0+255),f,b
 13111  001E5C                     i1l11355:
 13112                           
 13113                           ; BSR set to: 0
 13114  001E5C  0100               	movlb	0	; () banked
 13115  001E5E  0100               	movlb	0	; () banked
 13116  001E60  5196               	movf	(i1sprintf@exp+1)& (0+255),w,b
 13117  001E62  0A80               	xorlw	128
 13118  001E64  0F80               	addlw	-128
 13119  001E66  0E01               	movlw	1
 13120  001E68  B4D8               	btfsc	status,2,c
 13121  001E6A  5D95               	subwf	i1sprintf@exp& (0+255),w,b
 13122  001E6C  B0D8               	btfsc	status,0,c
 13123  001E6E  D7E7               	goto	i1l11349
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;doprnt.c: 1217: }
 13127                           ;doprnt.c: 1218: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13128                           
 13129                           ; BSR set to: 0
 13130  001E70  0100               	movlb	0	; () banked
 13131  001E72  0100               	movlb	0	; () banked
 13132  001E74  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13133  001E76  0A80               	xorlw	128
 13134  001E78  0F80               	addlw	-128
 13135  001E7A  0E09               	movlw	9
 13136  001E7C  B4D8               	btfsc	status,2,c
 13137  001E7E  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13138  001E80  A0D8               	btfss	status,0,c
 13139  001E82  D009               	goto	i1l325
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;doprnt.c: 1219: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13143  001E84  0100               	movlb	0	; () banked
 13144  001E86  6F78               	movwf	??i1_sprintf& (0+255),b
 13145  001E88  0E08               	movlw	8
 13146  001E8A  0100               	movlb	0	; () banked
 13147  001E8C  0100               	movlb	0	; () banked
 13148  001E8E  6F9E               	movwf	i1sprintf@c& (0+255),b
 13149  001E90  0100               	movlb	0	; () banked
 13150  001E92  5178               	movf	??i1_sprintf& (0+255),w,b
 13151  001E94  D002               	goto	i1l11361
 13152  001E96                     i1l325:
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;doprnt.c: 1220: else
 13156                           ;doprnt.c: 1221: c = prec;
 13157  001E96  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 13158  001E9A                     i1l11361:
 13159                           
 13160                           ; BSR set to: 0
 13161                           ;doprnt.c: 1222: prec -= c;
 13162  001E9A  0100               	movlb	0	; () banked
 13163  001E9C  0100               	movlb	0	; () banked
 13164  001E9E  519E               	movf	i1sprintf@c& (0+255),w,b
 13165  001EA0  0100               	movlb	0	; () banked
 13166  001EA2  0100               	movlb	0	; () banked
 13167  001EA4  5F9C               	subwf	i1sprintf@prec& (0+255),f,b
 13168  001EA6  0E00               	movlw	0
 13169  001EA8  0100               	movlb	0	; () banked
 13170  001EAA  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13171  001EAC  0EFF               	movlw	255
 13172  001EAE  0100               	movlb	0	; () banked
 13173  001EB0  0100               	movlb	0	; () banked
 13174  001EB2  5B9D               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 13175                           
 13176                           ; BSR set to: 0
 13177                           ;doprnt.c: 1226: if(c)
 13178  001EB4  0100               	movlb	0	; () banked
 13179  001EB6  0100               	movlb	0	; () banked
 13180  001EB8  519E               	movf	i1sprintf@c& (0+255),w,b
 13181  001EBA  B4D8               	btfsc	status,2,c
 13182  001EBC  D00A               	goto	i1l11369
 13183                           
 13184                           ; BSR set to: 0
 13185                           ;doprnt.c: 1228: ((*sp++ = ('.')));
 13186  001EBE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13187  001EC2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13188  001EC6  0E2E               	movlw	46
 13189  001EC8  6EDF               	movwf	indf2,c
 13190                           
 13191                           ; BSR set to: 0
 13192  001ECA  0100               	movlb	0	; () banked
 13193  001ECC  0100               	movlb	0	; () banked
 13194  001ECE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13195  001ED0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13196  001ED2                     i1l11369:
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 13200  001ED2  C09E  F047         	movff	i1sprintf@c,?i1_scale
 13201  001ED6  EC14  F015         	call	i1_scale	;wreg free
 13202  001EDA  C049  F080         	movff	?i1_scale+2,i1_sprintf$1829+2
 13203  001EDE  C048  F07F         	movff	?i1_scale+1,i1_sprintf$1829+1
 13204  001EE2  C047  F07E         	movff	?i1_scale,i1_sprintf$1829
 13205                           
 13206                           ;doprnt.c: 1234: _val._val = (long)(fval * scale(c));
 13207  001EE6  C099  F039         	movff	i1sprintf@fval,?i1___ftmul+3
 13208  001EEA  C09A  F03A         	movff	i1sprintf@fval+1,?i1___ftmul+4
 13209  001EEE  C09B  F03B         	movff	i1sprintf@fval+2,?i1___ftmul+5
 13210  001EF2  C07E  F036         	movff	i1_sprintf$1829,?i1___ftmul
 13211  001EF6  C07F  F037         	movff	i1_sprintf$1829+1,?i1___ftmul+1
 13212  001EFA  C080  F038         	movff	i1_sprintf$1829+2,?i1___ftmul+2
 13213  001EFE  EC84  F024         	call	i1___ftmul	;wreg free
 13214  001F02  C038  F029         	movff	?i1___ftmul+2,?i1___fttol+2
 13215  001F06  C037  F028         	movff	?i1___ftmul+1,?i1___fttol+1
 13216  001F0A  C036  F027         	movff	?i1___ftmul,?i1___fttol
 13217  001F0E  EC7C  F028         	call	i1___fttol	;wreg free
 13218  001F12  C02A  F091         	movff	?i1___fttol+3,i1sprintf@_val+3
 13219  001F16  C029  F090         	movff	?i1___fttol+2,i1sprintf@_val+2
 13220  001F1A  C028  F08F         	movff	?i1___fttol+1,i1sprintf@_val+1
 13221  001F1E  C027  F08E         	movff	?i1___fttol,i1sprintf@_val
 13222                           
 13223                           ;doprnt.c: 1235: while(c--) {
 13224  001F22  D067               	goto	i1l11383
 13225  001F24                     i1l11373:
 13226                           
 13227                           ;doprnt.c: 1236: unsigned vd = _val._val/dpowers[c];
 13228  001F24  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13229  001F28  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13230  001F2C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13231  001F30  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13232  001F34  0100               	movlb	0	; () banked
 13233  001F36  0100               	movlb	0	; () banked
 13234  001F38  519E               	movf	i1sprintf@c& (0+255),w,b
 13235  001F3A  0D04               	mullw	4
 13236  001F3C  0E00               	movlw	low _dpowers
 13237  001F3E  24F3               	addwf	prodl,w,c
 13238  001F40  6EF6               	movwf	tblptrl,c
 13239  001F42  0E08               	movlw	high _dpowers
 13240  001F44  20F4               	addwfc	prodh,w,c
 13241  001F46  6EF7               	movwf	tblptrh,c
 13242  001F48  0009               	tblrd		*+
 13243  001F4A  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13244  001F4E  0009               	tblrd		*+
 13245  001F50  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13246  001F54  0009               	tblrd		*+
 13247  001F56  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13248  001F5A  000A               	tblrd		*-
 13249  001F5C  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13250  001F60  EC8B  F02C         	call	i1___lldiv	;wreg free
 13251  001F64  C011  F087         	movff	?i1___lldiv,i1sprintf@vd_565
 13252  001F68  C012  F088         	movff	?i1___lldiv+1,i1sprintf@vd_565+1
 13253                           
 13254                           ;doprnt.c: 1237: vd %= 10;
 13255  001F6C  C087  F011         	movff	i1sprintf@vd_565,?i1___lwmod
 13256  001F70  C088  F012         	movff	i1sprintf@vd_565+1,?i1___lwmod+1
 13257  001F74  0E00               	movlw	0
 13258  001F76  6E14               	movwf	?i1___lwmod+3,c
 13259  001F78  0E0A               	movlw	10
 13260  001F7A  6E13               	movwf	?i1___lwmod+2,c
 13261  001F7C  EC0D  F02F         	call	i1___lwmod	;wreg free
 13262  001F80  C011  F087         	movff	?i1___lwmod,i1sprintf@vd_565
 13263  001F84  C012  F088         	movff	?i1___lwmod+1,i1sprintf@vd_565+1
 13264                           
 13265                           ;doprnt.c: 1238: ((*sp++ = ('0' + vd)));
 13266  001F88  0100               	movlb	0	; () banked
 13267  001F8A  0100               	movlb	0	; () banked
 13268  001F8C  5187               	movf	i1sprintf@vd_565& (0+255),w,b
 13269  001F8E  0F30               	addlw	48
 13270  001F90  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13271  001F94  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13272  001F98  6EDF               	movwf	indf2,c
 13273                           
 13274                           ; BSR set to: 0
 13275  001F9A  0100               	movlb	0	; () banked
 13276  001F9C  0100               	movlb	0	; () banked
 13277  001F9E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13278  001FA0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13279                           
 13280                           ; BSR set to: 0
 13281                           ;doprnt.c: 1239: _val._val %= dpowers[c];
 13282  001FA2  C08E  F01F         	movff	i1sprintf@_val,?i1___llmod
 13283  001FA6  C08F  F020         	movff	i1sprintf@_val+1,?i1___llmod+1
 13284  001FAA  C090  F021         	movff	i1sprintf@_val+2,?i1___llmod+2
 13285  001FAE  C091  F022         	movff	i1sprintf@_val+3,?i1___llmod+3
 13286  001FB2  0100               	movlb	0	; () banked
 13287  001FB4  0100               	movlb	0	; () banked
 13288  001FB6  519E               	movf	i1sprintf@c& (0+255),w,b
 13289  001FB8  0D04               	mullw	4
 13290  001FBA  0E00               	movlw	low _dpowers
 13291  001FBC  24F3               	addwf	prodl,w,c
 13292  001FBE  6EF6               	movwf	tblptrl,c
 13293  001FC0  0E08               	movlw	high _dpowers
 13294  001FC2  20F4               	addwfc	prodh,w,c
 13295  001FC4  6EF7               	movwf	tblptrh,c
 13296  001FC6  0009               	tblrd		*+
 13297  001FC8  CFF5 F023          	movff	tablat,?i1___llmod+4
 13298  001FCC  0009               	tblrd		*+
 13299  001FCE  CFF5 F024          	movff	tablat,?i1___llmod+5
 13300  001FD2  0009               	tblrd		*+
 13301  001FD4  CFF5 F025          	movff	tablat,?i1___llmod+6
 13302  001FD8  000A               	tblrd		*-
 13303  001FDA  CFF5 F026          	movff	tablat,?i1___llmod+7
 13304  001FDE  ECC4  F02D         	call	i1___llmod	;wreg free
 13305  001FE2  C022  F091         	movff	?i1___llmod+3,i1sprintf@_val+3
 13306  001FE6  C021  F090         	movff	?i1___llmod+2,i1sprintf@_val+2
 13307  001FEA  C020  F08F         	movff	?i1___llmod+1,i1sprintf@_val+1
 13308  001FEE  C01F  F08E         	movff	?i1___llmod,i1sprintf@_val
 13309  001FF2                     i1l11383:
 13310  001FF2  0100               	movlb	0	; () banked
 13311  001FF4  0100               	movlb	0	; () banked
 13312  001FF6  079E               	decf	i1sprintf@c& (0+255),f,b
 13313  001FF8  0100               	movlb	0	; () banked
 13314  001FFA  299E               	incf	i1sprintf@c& (0+255),w,b
 13315  001FFC  B4D8               	btfsc	status,2,c
 13316  001FFE  D010               	goto	i1l11391
 13317  002000  D791               	goto	i1l11373
 13318  002002                     i1l11385:
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;doprnt.c: 1243: ((*sp++ = ('0')));
 13322  002002  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13323  002006  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13324  00200A  0E30               	movlw	48
 13325  00200C  6EDF               	movwf	indf2,c
 13326                           
 13327                           ; BSR set to: 0
 13328  00200E  0100               	movlb	0	; () banked
 13329  002010  0100               	movlb	0	; () banked
 13330  002012  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13331  002014  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;doprnt.c: 1244: prec--;
 13335  002016  0100               	movlb	0	; () banked
 13336  002018  0100               	movlb	0	; () banked
 13337  00201A  079C               	decf	i1sprintf@prec& (0+255),f,b
 13338  00201C  A0D8               	btfss	status,0,c
 13339  00201E  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13340  002020                     i1l11391:
 13341                           
 13342                           ; BSR set to: 0
 13343  002020  0100               	movlb	0	; () banked
 13344  002022  0100               	movlb	0	; () banked
 13345  002024  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13346  002026  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 13347  002028  B4D8               	btfsc	status,2,c
 13348  00202A  D1DB               	goto	i1l11489
 13349  00202C  D7EA               	goto	i1l11385
 13350  00202E                     i1l11393:
 13351                           
 13352                           ; BSR set to: 0
 13353                           ;doprnt.c: 1253: }
 13354                           ;doprnt.c: 1260: {
 13355                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13356  00202E  C089  FFD9         	movff	i1sprintf@ap,fsr2l
 13357  002032  C08A  FFDA         	movff	i1sprintf@ap+1,fsr2h
 13358  002036  0100               	movlb	0	; () banked
 13359  002038  CFDE F08E          	movff	postinc2,i1sprintf@_val
 13360  00203C  0100               	movlb	0	; () banked
 13361  00203E  CFDD F08F          	movff	postdec2,i1sprintf@_val+1
 13362  002042  0100               	movlb	0	; () banked
 13363  002044  0E00               	movlw	0
 13364  002046  0100               	movlb	0	; () banked
 13365  002048  BF8F               	btfsc	(i1sprintf@_val+1)& (0+255),7,b
 13366  00204A  0EFF               	movlw	-1
 13367  00204C  0100               	movlb	0	; () banked
 13368  00204E  6F90               	movwf	(i1sprintf@_val+2)& (0+255),b
 13369  002050  0100               	movlb	0	; () banked
 13370  002052  6F91               	movwf	(i1sprintf@_val+3)& (0+255),b
 13371                           
 13372                           ; BSR set to: 0
 13373  002054  0E02               	movlw	2
 13374  002056  0100               	movlb	0	; () banked
 13375  002058  0100               	movlb	0	; () banked
 13376  00205A  2789               	addwf	i1sprintf@ap& (0+255),f,b
 13377  00205C  0E00               	movlw	0
 13378  00205E  0100               	movlb	0	; () banked
 13379  002060  238A               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;doprnt.c: 1268: if((long)_val._val < 0) {
 13383  002062  0100               	movlb	0	; () banked
 13384  002064  0100               	movlb	0	; () banked
 13385  002066  AF91               	btfss	(i1sprintf@_val+3)& (0+255),7,b
 13386  002068  D014               	goto	i1l11403
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;doprnt.c: 1269: flag |= 0x03;
 13390  00206A  0E03               	movlw	3
 13391  00206C  0100               	movlb	0	; () banked
 13392  00206E  0100               	movlb	0	; () banked
 13393  002070  1393               	iorwf	i1sprintf@flag& (0+255),f,b
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;doprnt.c: 1270: _val._val = -_val._val;
 13397  002072  0100               	movlb	0	; () banked
 13398  002074  0100               	movlb	0	; () banked
 13399  002076  1F91               	comf	(i1sprintf@_val+3)& (0+255),f,b
 13400  002078  0100               	movlb	0	; () banked
 13401  00207A  1F90               	comf	(i1sprintf@_val+2)& (0+255),f,b
 13402  00207C  0100               	movlb	0	; () banked
 13403  00207E  1F8F               	comf	(i1sprintf@_val+1)& (0+255),f,b
 13404  002080  0100               	movlb	0	; () banked
 13405  002082  6D8E               	negf	i1sprintf@_val& (0+255),b
 13406  002084  0E00               	movlw	0
 13407  002086  0100               	movlb	0	; () banked
 13408  002088  238F               	addwfc	(i1sprintf@_val+1)& (0+255),f,b
 13409  00208A  0100               	movlb	0	; () banked
 13410  00208C  2390               	addwfc	(i1sprintf@_val+2)& (0+255),f,b
 13411  00208E  0100               	movlb	0	; () banked
 13412  002090  2391               	addwfc	(i1sprintf@_val+3)& (0+255),f,b
 13413  002092                     i1l11403:
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;doprnt.c: 1271: }
 13417                           ;doprnt.c: 1273: }
 13418                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
 13419  002092  0100               	movlb	0	; () banked
 13420  002094  0100               	movlb	0	; () banked
 13421  002096  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13422  002098  119C               	iorwf	i1sprintf@prec& (0+255),w,b
 13423  00209A  A4D8               	btfss	status,2,c
 13424  00209C  D00C               	goto	i1l11409
 13425                           
 13426                           ; BSR set to: 0
 13427  00209E  0100               	movlb	0	; () banked
 13428  0020A0  0100               	movlb	0	; () banked
 13429  0020A2  5191               	movf	(i1sprintf@_val+3)& (0+255),w,b
 13430  0020A4  118E               	iorwf	i1sprintf@_val& (0+255),w,b
 13431  0020A6  118F               	iorwf	(i1sprintf@_val+1)& (0+255),w,b
 13432  0020A8  1190               	iorwf	(i1sprintf@_val+2)& (0+255),w,b
 13433  0020AA  A4D8               	btfss	status,2,c
 13434  0020AC  D004               	goto	i1l11409
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;doprnt.c: 1298: prec++;
 13438  0020AE  0100               	movlb	0	; () banked
 13439  0020B0  0100               	movlb	0	; () banked
 13440  0020B2  4B9C               	infsnz	i1sprintf@prec& (0+255),f,b
 13441  0020B4  2B9D               	incf	(i1sprintf@prec+1)& (0+255),f,b
 13442  0020B6                     i1l11409:
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13446  0020B6  0100               	movlb	0	; () banked
 13447  0020B8  6F78               	movwf	??i1_sprintf& (0+255),b
 13448  0020BA  0E01               	movlw	1
 13449  0020BC  0100               	movlb	0	; () banked
 13450  0020BE  0100               	movlb	0	; () banked
 13451  0020C0  6F9E               	movwf	i1sprintf@c& (0+255),b
 13452  0020C2  0100               	movlb	0	; () banked
 13453  0020C4  5178               	movf	??i1_sprintf& (0+255),w,b
 13454  0020C6                     
 13455                           ; BSR set to: 0
 13456  0020C6  0100               	movlb	0	; () banked
 13457  0020C8  0100               	movlb	0	; () banked
 13458  0020CA  519E               	movf	i1sprintf@c& (0+255),w,b
 13459  0020CC  0A0A               	xorlw	10
 13460  0020CE  B4D8               	btfsc	status,2,c
 13461  0020D0  D021               	goto	i1l11423
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 13465                           
 13466                           ; BSR set to: 0
 13467                           
 13468                           ; BSR set to: 0
 13469  0020D2  0100               	movlb	0	; () banked
 13470  0020D4  0100               	movlb	0	; () banked
 13471  0020D6  519E               	movf	i1sprintf@c& (0+255),w,b
 13472  0020D8  0D04               	mullw	4
 13473  0020DA  0E00               	movlw	low _dpowers
 13474  0020DC  24F3               	addwf	prodl,w,c
 13475  0020DE  6EF6               	movwf	tblptrl,c
 13476  0020E0  0E08               	movlw	high _dpowers
 13477  0020E2  20F4               	addwfc	prodh,w,c
 13478  0020E4  6EF7               	movwf	tblptrh,c
 13479  0020E6  0009               	tblrd		*+
 13480  0020E8  50F5               	movf	tablat,w,c
 13481  0020EA  0100               	movlb	0	; () banked
 13482  0020EC  0100               	movlb	0	; () banked
 13483  0020EE  5D8E               	subwf	i1sprintf@_val& (0+255),w,b
 13484  0020F0  0009               	tblrd		*+
 13485  0020F2  50F5               	movf	tablat,w,c
 13486  0020F4  0100               	movlb	0	; () banked
 13487  0020F6  598F               	subwfb	(i1sprintf@_val+1)& (0+255),w,b
 13488  0020F8  0009               	tblrd		*+
 13489  0020FA  50F5               	movf	tablat,w,c
 13490  0020FC  0100               	movlb	0	; () banked
 13491  0020FE  5990               	subwfb	(i1sprintf@_val+2)& (0+255),w,b
 13492  002100  0009               	tblrd		*+
 13493  002102  50F5               	movf	tablat,w,c
 13494  002104  0100               	movlb	0	; () banked
 13495  002106  5991               	subwfb	(i1sprintf@_val+3)& (0+255),w,b
 13496  002108  A0D8               	btfss	status,0,c
 13497  00210A  D004               	goto	i1l11423
 13498                           
 13499                           ; BSR set to: 0
 13500                           
 13501                           ; BSR set to: 0
 13502                           
 13503                           ; BSR set to: 0
 13504                           ;doprnt.c: 1314: break;
 13505  00210C  0100               	movlb	0	; () banked
 13506  00210E  0100               	movlb	0	; () banked
 13507  002110  2B9E               	incf	i1sprintf@c& (0+255),f,b
 13508  002112  D7D9               	goto	L17
 13509  002114                     i1l11423:
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;doprnt.c: 1346: if(c < prec)
 13513  002114  0E80               	movlw	128
 13514  002116  0100               	movlb	0	; () banked
 13515  002118  0100               	movlb	0	; () banked
 13516  00211A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13517  00211C  0E7F               	movlw	127
 13518  00211E  6F78               	movwf	??i1_sprintf& (0+255),b
 13519  002120  0100               	movlb	0	; () banked
 13520  002122  0100               	movlb	0	; () banked
 13521  002124  519C               	movf	i1sprintf@prec& (0+255),w,b
 13522  002126  0100               	movlb	0	; () banked
 13523  002128  0100               	movlb	0	; () banked
 13524  00212A  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 13525  00212C  0100               	movlb	0	; () banked
 13526  00212E  0100               	movlb	0	; () banked
 13527  002130  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13528  002132  0A80               	xorlw	128
 13529  002134  0100               	movlb	0	; () banked
 13530  002136  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13531  002138  B0D8               	btfsc	status,0,c
 13532  00213A  D003               	goto	i1l11427
 13533                           
 13534                           ; BSR set to: 0
 13535                           ;doprnt.c: 1347: c = prec;
 13536  00213C  C09C  F09E         	movff	i1sprintf@prec,i1sprintf@c
 13537  002140  D020               	goto	i1l11431
 13538  002142                     i1l11427:
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;doprnt.c: 1348: else if(prec < c)
 13542  002142  0100               	movlb	0	; () banked
 13543  002144  0100               	movlb	0	; () banked
 13544  002146  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13545  002148  0A80               	xorlw	128
 13546  00214A  0100               	movlb	0	; () banked
 13547  00214C  6F78               	movwf	??i1_sprintf& (0+255),b
 13548  00214E  0100               	movlb	0	; () banked
 13549  002150  0100               	movlb	0	; () banked
 13550  002152  519E               	movf	i1sprintf@c& (0+255),w,b
 13551  002154  0100               	movlb	0	; () banked
 13552  002156  0100               	movlb	0	; () banked
 13553  002158  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13554  00215A  0E80               	movlw	128
 13555  00215C  0100               	movlb	0	; () banked
 13556  00215E  0100               	movlb	0	; () banked
 13557  002160  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13558  002162  0E7F               	movlw	127
 13559  002164  0100               	movlb	0	; () banked
 13560  002166  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13561  002168  B0D8               	btfsc	status,0,c
 13562  00216A  D00B               	goto	i1l11431
 13563                           
 13564                           ; BSR set to: 0
 13565                           ;doprnt.c: 1349: prec = c;
 13566  00216C  0100               	movlb	0	; () banked
 13567  00216E  0100               	movlb	0	; () banked
 13568  002170  519E               	movf	i1sprintf@c& (0+255),w,b
 13569  002172  0100               	movlb	0	; () banked
 13570  002174  0100               	movlb	0	; () banked
 13571  002176  6F9C               	movwf	i1sprintf@prec& (0+255),b
 13572  002178  0100               	movlb	0	; () banked
 13573  00217A  6B9D               	clrf	(i1sprintf@prec+1)& (0+255),b
 13574  00217C  0100               	movlb	0	; () banked
 13575  00217E  BF9C               	btfsc	i1sprintf@prec& (0+255),7,b
 13576  002180  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13577  002182                     i1l11431:
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;doprnt.c: 1352: if(width && flag & 0x03)
 13581  002182  0100               	movlb	0	; () banked
 13582  002184  0100               	movlb	0	; () banked
 13583  002186  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13584  002188  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13585  00218A  B4D8               	btfsc	status,2,c
 13586  00218C  D016               	goto	i1l11437
 13587                           
 13588                           ; BSR set to: 0
 13589  00218E  0E03               	movlw	3
 13590  002190  0100               	movlb	0	; () banked
 13591  002192  0100               	movlb	0	; () banked
 13592  002194  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13593  002196  0100               	movlb	0	; () banked
 13594  002198  6F78               	movwf	??i1_sprintf& (0+255),b
 13595  00219A  0E00               	movlw	0
 13596  00219C  0100               	movlb	0	; () banked
 13597  00219E  0100               	movlb	0	; () banked
 13598  0021A0  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13599  0021A2  0100               	movlb	0	; () banked
 13600  0021A4  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13601  0021A6  0100               	movlb	0	; () banked
 13602  0021A8  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13603  0021AA  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13604  0021AC  B4D8               	btfsc	status,2,c
 13605  0021AE  D005               	goto	i1l11437
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;doprnt.c: 1353: width--;
 13609  0021B0  0100               	movlb	0	; () banked
 13610  0021B2  0100               	movlb	0	; () banked
 13611  0021B4  0797               	decf	i1sprintf@width& (0+255),f,b
 13612  0021B6  A0D8               	btfss	status,0,c
 13613  0021B8  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13614  0021BA                     i1l11437:
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;doprnt.c: 1355: if(flag & 0x4000) {
 13618  0021BA  0100               	movlb	0	; () banked
 13619  0021BC  0100               	movlb	0	; () banked
 13620  0021BE  AD94               	btfss	(i1sprintf@flag+1)& (0+255),6,b
 13621  0021C0  D028               	goto	i1l11445
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;doprnt.c: 1356: if(width > prec)
 13625  0021C2  0100               	movlb	0	; () banked
 13626  0021C4  0100               	movlb	0	; () banked
 13627  0021C6  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13628  0021C8  0A80               	xorlw	128
 13629  0021CA  0100               	movlb	0	; () banked
 13630  0021CC  6F78               	movwf	??i1_sprintf& (0+255),b
 13631  0021CE  0100               	movlb	0	; () banked
 13632  0021D0  0100               	movlb	0	; () banked
 13633  0021D2  5197               	movf	i1sprintf@width& (0+255),w,b
 13634  0021D4  0100               	movlb	0	; () banked
 13635  0021D6  0100               	movlb	0	; () banked
 13636  0021D8  5D9C               	subwf	i1sprintf@prec& (0+255),w,b
 13637  0021DA  0100               	movlb	0	; () banked
 13638  0021DC  0100               	movlb	0	; () banked
 13639  0021DE  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13640  0021E0  0A80               	xorlw	128
 13641  0021E2  0100               	movlb	0	; () banked
 13642  0021E4  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13643  0021E6  B0D8               	btfsc	status,0,c
 13644  0021E8  D00D               	goto	i1l11443
 13645                           
 13646                           ; BSR set to: 0
 13647                           ;doprnt.c: 1357: width -= prec;
 13648  0021EA  0100               	movlb	0	; () banked
 13649  0021EC  0100               	movlb	0	; () banked
 13650  0021EE  519C               	movf	i1sprintf@prec& (0+255),w,b
 13651  0021F0  0100               	movlb	0	; () banked
 13652  0021F2  0100               	movlb	0	; () banked
 13653  0021F4  5F97               	subwf	i1sprintf@width& (0+255),f,b
 13654  0021F6  0100               	movlb	0	; () banked
 13655  0021F8  0100               	movlb	0	; () banked
 13656  0021FA  519D               	movf	(i1sprintf@prec+1)& (0+255),w,b
 13657  0021FC  0100               	movlb	0	; () banked
 13658  0021FE  0100               	movlb	0	; () banked
 13659  002200  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 13660  002202  D007               	goto	i1l11445
 13661  002204                     i1l11443:
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;doprnt.c: 1358: else
 13665                           ;doprnt.c: 1359: width = 0;
 13666  002204  0E00               	movlw	0
 13667  002206  0100               	movlb	0	; () banked
 13668  002208  0100               	movlb	0	; () banked
 13669  00220A  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13670  00220C  0E00               	movlw	0
 13671  00220E  0100               	movlb	0	; () banked
 13672  002210  6F97               	movwf	i1sprintf@width& (0+255),b
 13673  002212                     i1l11445:
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;doprnt.c: 1360: }
 13677                           ;doprnt.c: 1388: if(width > c)
 13678  002212  0E80               	movlw	128
 13679  002214  0100               	movlb	0	; () banked
 13680  002216  0100               	movlb	0	; () banked
 13681  002218  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13682  00221A  0E7F               	movlw	127
 13683  00221C  6F78               	movwf	??i1_sprintf& (0+255),b
 13684  00221E  0100               	movlb	0	; () banked
 13685  002220  0100               	movlb	0	; () banked
 13686  002222  5197               	movf	i1sprintf@width& (0+255),w,b
 13687  002224  0100               	movlb	0	; () banked
 13688  002226  0100               	movlb	0	; () banked
 13689  002228  5D9E               	subwf	i1sprintf@c& (0+255),w,b
 13690  00222A  0100               	movlb	0	; () banked
 13691  00222C  0100               	movlb	0	; () banked
 13692  00222E  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13693  002230  0A80               	xorlw	128
 13694  002232  0100               	movlb	0	; () banked
 13695  002234  5978               	subwfb	??i1_sprintf& (0+255),w,b
 13696  002236  B0D8               	btfsc	status,0,c
 13697  002238  D00E               	goto	i1l11449
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;doprnt.c: 1389: width -= c;
 13701  00223A  0100               	movlb	0	; () banked
 13702  00223C  0100               	movlb	0	; () banked
 13703  00223E  519E               	movf	i1sprintf@c& (0+255),w,b
 13704  002240  0100               	movlb	0	; () banked
 13705  002242  0100               	movlb	0	; () banked
 13706  002244  5F97               	subwf	i1sprintf@width& (0+255),f,b
 13707  002246  0E00               	movlw	0
 13708  002248  0100               	movlb	0	; () banked
 13709  00224A  BF9E               	btfsc	i1sprintf@c& (0+255),7,b
 13710  00224C  0EFF               	movlw	255
 13711  00224E  0100               	movlb	0	; () banked
 13712  002250  0100               	movlb	0	; () banked
 13713  002252  5B98               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 13714  002254  D007               	goto	i1l11451
 13715  002256                     i1l11449:
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;doprnt.c: 1390: else
 13719                           ;doprnt.c: 1391: width = 0;
 13720  002256  0E00               	movlw	0
 13721  002258  0100               	movlb	0	; () banked
 13722  00225A  0100               	movlb	0	; () banked
 13723  00225C  6F98               	movwf	(i1sprintf@width+1)& (0+255),b
 13724  00225E  0E00               	movlw	0
 13725  002260  0100               	movlb	0	; () banked
 13726  002262  6F97               	movwf	i1sprintf@width& (0+255),b
 13727  002264                     i1l11451:
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;doprnt.c: 1394: if(flag & 0x04) {
 13731  002264  0100               	movlb	0	; () banked
 13732  002266  0100               	movlb	0	; () banked
 13733  002268  A593               	btfss	i1sprintf@flag& (0+255),2,b
 13734  00226A  D031               	goto	i1l11467
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;doprnt.c: 1399: if(flag & 0x03)
 13738  00226C  0E03               	movlw	3
 13739  00226E  0100               	movlb	0	; () banked
 13740  002270  0100               	movlb	0	; () banked
 13741  002272  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13742  002274  0100               	movlb	0	; () banked
 13743  002276  6F78               	movwf	??i1_sprintf& (0+255),b
 13744  002278  0E00               	movlw	0
 13745  00227A  0100               	movlb	0	; () banked
 13746  00227C  0100               	movlb	0	; () banked
 13747  00227E  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13748  002280  0100               	movlb	0	; () banked
 13749  002282  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13750  002284  0100               	movlb	0	; () banked
 13751  002286  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13752  002288  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13753  00228A  B4D8               	btfsc	status,2,c
 13754  00228C  D00A               	goto	i1l11459
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;doprnt.c: 1400: ((*sp++ = ('-')));
 13758  00228E  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13759  002292  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13760  002296  0E2D               	movlw	45
 13761  002298  6EDF               	movwf	indf2,c
 13762                           
 13763                           ; BSR set to: 0
 13764  00229A  0100               	movlb	0	; () banked
 13765  00229C  0100               	movlb	0	; () banked
 13766  00229E  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13767  0022A0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13768  0022A2                     i1l11459:
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;doprnt.c: 1422: if(width)
 13772  0022A2  0100               	movlb	0	; () banked
 13773  0022A4  0100               	movlb	0	; () banked
 13774  0022A6  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13775  0022A8  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13776  0022AA  B4D8               	btfsc	status,2,c
 13777  0022AC  D08F               	goto	i1l11487
 13778                           
 13779                           ; BSR set to: 0
 13780                           ;doprnt.c: 1424: ((*sp++ = ('0')));
 13781                           
 13782                           ; BSR set to: 0
 13783                           
 13784                           ;doprnt.c: 1423: do
 13785  0022AE  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13786  0022B2  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13787  0022B6  0E30               	movlw	48
 13788  0022B8  6EDF               	movwf	indf2,c
 13789                           
 13790                           ; BSR set to: 0
 13791  0022BA  0100               	movlb	0	; () banked
 13792  0022BC  0100               	movlb	0	; () banked
 13793  0022BE  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13794  0022C0  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;doprnt.c: 1425: while(--width);
 13798  0022C2  0100               	movlb	0	; () banked
 13799  0022C4  0100               	movlb	0	; () banked
 13800  0022C6  0797               	decf	i1sprintf@width& (0+255),f,b
 13801  0022C8  A0D8               	btfss	status,0,c
 13802  0022CA  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13803  0022CC  D7EB               	goto	L19
 13804  0022CE                     i1l11467:
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;doprnt.c: 1429: {
 13808                           ;doprnt.c: 1431: if(width
 13809                           ;doprnt.c: 1435: )
 13810  0022CE  0100               	movlb	0	; () banked
 13811  0022D0  0100               	movlb	0	; () banked
 13812  0022D2  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13813  0022D4  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13814  0022D6  B4D8               	btfsc	status,2,c
 13815  0022D8  D014               	goto	i1l11475
 13816  0022DA                     i1l11469:
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;doprnt.c: 1437: ((*sp++ = (' ')));
 13820  0022DA  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13821  0022DE  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13822  0022E2  0E20               	movlw	32
 13823  0022E4  6EDF               	movwf	indf2,c
 13824                           
 13825                           ; BSR set to: 0
 13826  0022E6  0100               	movlb	0	; () banked
 13827  0022E8  0100               	movlb	0	; () banked
 13828  0022EA  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13829  0022EC  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13830                           
 13831                           ; BSR set to: 0
 13832                           ;doprnt.c: 1438: while(--width);
 13833  0022EE  0100               	movlb	0	; () banked
 13834  0022F0  0100               	movlb	0	; () banked
 13835  0022F2  0797               	decf	i1sprintf@width& (0+255),f,b
 13836  0022F4  A0D8               	btfss	status,0,c
 13837  0022F6  0798               	decf	(i1sprintf@width+1)& (0+255),f,b
 13838  0022F8  0100               	movlb	0	; () banked
 13839  0022FA  5198               	movf	(i1sprintf@width+1)& (0+255),w,b
 13840  0022FC  1197               	iorwf	i1sprintf@width& (0+255),w,b
 13841  0022FE  A4D8               	btfss	status,2,c
 13842  002300  D7EC               	goto	i1l11469
 13843  002302                     i1l11475:
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;doprnt.c: 1445: if(flag & 0x03)
 13847  002302  0E03               	movlw	3
 13848  002304  0100               	movlb	0	; () banked
 13849  002306  0100               	movlb	0	; () banked
 13850  002308  1593               	andwf	i1sprintf@flag& (0+255),w,b
 13851  00230A  0100               	movlb	0	; () banked
 13852  00230C  6F78               	movwf	??i1_sprintf& (0+255),b
 13853  00230E  0E00               	movlw	0
 13854  002310  0100               	movlb	0	; () banked
 13855  002312  0100               	movlb	0	; () banked
 13856  002314  1594               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 13857  002316  0100               	movlb	0	; () banked
 13858  002318  6F79               	movwf	(??i1_sprintf+1)& (0+255),b
 13859  00231A  0100               	movlb	0	; () banked
 13860  00231C  5179               	movf	(??i1_sprintf+1)& (0+255),w,b
 13861  00231E  1178               	iorwf	??i1_sprintf& (0+255),w,b
 13862  002320  B4D8               	btfsc	status,2,c
 13863  002322  D054               	goto	i1l11487
 13864                           
 13865                           ; BSR set to: 0
 13866                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 13867  002324  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13868  002328  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13869  00232C  0E2D               	movlw	45
 13870  00232E  6EDF               	movwf	indf2,c
 13871  002330  D049               	goto	L18
 13872  002332                     i1l11481:
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;doprnt.c: 1485: {
 13876                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 13877  002332  0100               	movlb	0	; () banked
 13878  002334  C09C  F078         	movff	i1sprintf@prec,??i1_sprintf
 13879  002338  0100               	movlb	0	; () banked
 13880  00233A  C09D  F079         	movff	i1sprintf@prec+1,??i1_sprintf+1
 13881  00233E  0100               	movlb	0	; () banked
 13882  002340  90D8               	bcf	status,0,c
 13883  002342  3778               	rlcf	??i1_sprintf& (0+255),f,b
 13884  002344  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 13885  002346  0100               	movlb	0	; () banked
 13886  002348  90D8               	bcf	status,0,c
 13887  00234A  3778               	rlcf	??i1_sprintf& (0+255),f,b
 13888  00234C  3779               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 13889  00234E  0E00               	movlw	low _dpowers
 13890  002350  0100               	movlb	0	; () banked
 13891  002352  2578               	addwf	??i1_sprintf& (0+255),w,b
 13892  002354  6EF6               	movwf	tblptrl,c
 13893  002356  0E08               	movlw	high _dpowers
 13894  002358  2179               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 13895  00235A  6EF7               	movwf	tblptrh,c
 13896  00235C  0009               	tblrd		*+
 13897  00235E  CFF5 F015          	movff	tablat,?i1___lldiv+4
 13898  002362  0009               	tblrd		*+
 13899  002364  CFF5 F016          	movff	tablat,?i1___lldiv+5
 13900  002368  0009               	tblrd		*+
 13901  00236A  CFF5 F017          	movff	tablat,?i1___lldiv+6
 13902  00236E  000A               	tblrd		*-
 13903  002370  CFF5 F018          	movff	tablat,?i1___lldiv+7
 13904  002374  C08E  F011         	movff	i1sprintf@_val,?i1___lldiv
 13905  002378  C08F  F012         	movff	i1sprintf@_val+1,?i1___lldiv+1
 13906  00237C  C090  F013         	movff	i1sprintf@_val+2,?i1___lldiv+2
 13907  002380  C091  F014         	movff	i1sprintf@_val+3,?i1___lldiv+3
 13908  002384  EC8B  F02C         	call	i1___lldiv	;wreg free
 13909  002388  C014  F022         	movff	?i1___lldiv+3,?i1___llmod+3
 13910  00238C  C013  F021         	movff	?i1___lldiv+2,?i1___llmod+2
 13911  002390  C012  F020         	movff	?i1___lldiv+1,?i1___llmod+1
 13912  002394  C011  F01F         	movff	?i1___lldiv,?i1___llmod
 13913  002398  0E0A               	movlw	10
 13914  00239A  6E23               	movwf	?i1___llmod+4,c
 13915  00239C  0E00               	movlw	0
 13916  00239E  6E24               	movwf	?i1___llmod+5,c
 13917  0023A0  0E00               	movlw	0
 13918  0023A2  6E25               	movwf	?i1___llmod+6,c
 13919  0023A4  0E00               	movlw	0
 13920  0023A6  6E26               	movwf	?i1___llmod+7,c
 13921  0023A8  ECC4  F02D         	call	i1___llmod	;wreg free
 13922  0023AC  501F               	movf	?i1___llmod,w,c
 13923  0023AE  0F30               	addlw	48
 13924  0023B0  0100               	movlb	0	; () banked
 13925  0023B2  0100               	movlb	0	; () banked
 13926  0023B4  6F9E               	movwf	i1sprintf@c& (0+255),b
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;doprnt.c: 1530: }
 13930                           ;doprnt.c: 1531: ((*sp++ = (c)));
 13931  0023B6  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13932  0023BA  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13933  0023BE  0100               	movlb	0	; () banked
 13934  0023C0  C09E  FFDF         	movff	i1sprintf@c,indf2
 13935  0023C4                     L18:
 13936                           
 13937                           ; BSR set to: 0
 13938  0023C4  0100               	movlb	0	; () banked
 13939  0023C6  0100               	movlb	0	; () banked
 13940  0023C8  4B71               	infsnz	i1sprintf@sp& (0+255),f,b
 13941  0023CA  2B72               	incf	(i1sprintf@sp+1)& (0+255),f,b
 13942  0023CC                     i1l11487:
 13943                           
 13944                           ; BSR set to: 0
 13945  0023CC  0100               	movlb	0	; () banked
 13946  0023CE  0100               	movlb	0	; () banked
 13947  0023D0  079C               	decf	i1sprintf@prec& (0+255),f,b
 13948  0023D2  A0D8               	btfss	status,0,c
 13949  0023D4  079D               	decf	(i1sprintf@prec+1)& (0+255),f,b
 13950  0023D6  0100               	movlb	0	; () banked
 13951  0023D8  299C               	incf	i1sprintf@prec& (0+255),w,b
 13952  0023DA  B4D8               	btfsc	status,2,c
 13953  0023DC  299D               	incf	(i1sprintf@prec+1)& (0+255),w,b
 13954  0023DE  A4D8               	btfss	status,2,c
 13955  0023E0  D7A8               	goto	i1l11481
 13956  0023E2                     i1l11489:
 13957                           
 13958                           ; BSR set to: 0
 13959  0023E2  0100               	movlb	0	; () banked
 13960  0023E4  C073  FFF6         	movff	i1sprintf@f,tblptrl
 13961  0023E8  0100               	movlb	0	; () banked
 13962  0023EA  C074  FFF7         	movff	i1sprintf@f+1,tblptrh
 13963  0023EE  0100               	movlb	0	; () banked
 13964  0023F0  0100               	movlb	0	; () banked
 13965  0023F2  4B73               	infsnz	i1sprintf@f& (0+255),f,b
 13966  0023F4  2B74               	incf	(i1sprintf@f+1)& (0+255),f,b
 13967  0023F6  0008               	tblrd		*
 13968  0023F8  0100               	movlb	0	; () banked
 13969  0023FA  CFF5 F09E          	movff	tablat,i1sprintf@c
 13970  0023FE  0100               	movlb	0	; () banked
 13971  002400  679E               	tstfsz	i1sprintf@c& (0+255),b
 13972  002402  EF60  F00B         	goto	i1l11165
 13973  002406                     i1l11491:
 13974                           
 13975                           ; BSR set to: 0
 13976                           ;doprnt.c: 1545: *sp = 0;
 13977  002406  C071  FFD9         	movff	i1sprintf@sp,fsr2l
 13978  00240A  C072  FFDA         	movff	i1sprintf@sp+1,fsr2h
 13979  00240E  0E00               	movlw	0
 13980  002410  6EDF               	movwf	indf2,c
 13981                           
 13982                           ; BSR set to: 0
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;doprnt.c: 1547: return 0;
 13986                           ;	Return value of i1_sprintf is never used
 13987  002412  0012               	return	
 13988  002414                     __end_ofi1_sprintf:
 13989                           	opt stack 0
 13990                           pclatu	equ	0xFFB
 13991                           pclath	equ	0xFFA
 13992                           tblptru	equ	0xFF8
 13993                           tblptrh	equ	0xFF7
 13994                           tblptrl	equ	0xFF6
 13995                           tablat	equ	0xFF5
 13996                           prodh	equ	0xFF4
 13997                           prodl	equ	0xFF3
 13998                           intcon	equ	0xFF2
 13999                           intcon2	equ	0xFF1
 14000                           postinc0	equ	0xFEE
 14001                           fsr0h	equ	0xFEA
 14002                           fsr0l	equ	0xFE9
 14003                           wreg	equ	0xFE8
 14004                           fsr1h	equ	0xFE2
 14005                           fsr1l	equ	0xFE1
 14006                           bsr	equ	0xFE0
 14007                           indf2	equ	0xFDF
 14008                           postinc2	equ	0xFDE
 14009                           postdec2	equ	0xFDD
 14010                           fsr2h	equ	0xFDA
 14011                           fsr2l	equ	0xFD9
 14012                           status	equ	0xFD8
 14013                           
 14014 ;; *************** function i1___lwmod *****************
 14015 ;; Defined at:
 14016 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwmod.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;  __lwmod         2   16[COMRAM] unsigned int 
 14019 ;;  __lwmod         2   18[COMRAM] unsigned int 
 14020 ;; Auto vars:     Size  Location     Type
 14021 ;;  __lwmod         1   21[COMRAM] unsigned char 
 14022 ;; Return value:  Size  Location     Type
 14023 ;;                  2   16[COMRAM] unsigned int 
 14024 ;; Registers used:
 14025 ;;		wreg, status,2, status,0
 14026 ;; Tracked objects:
 14027 ;;		On entry : 0/0
 14028 ;;		On exit  : 0/0
 14029 ;;		Unchanged: 0/0
 14030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14031 ;;      Params:         4       0       0       0       0       0       0       0       0
 14032 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14033 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14034 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14035 ;;Total ram usage:        6 bytes
 14036 ;; Hardware stack levels used:    1
 14037 ;; Hardware stack levels required when called:    3
 14038 ;; This function calls:
 14039 ;;		Nothing
 14040 ;; This function is called by:
 14041 ;;		i1_sprintf
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           	psect	text43
 14046  005E1A                     __ptext43:
 14047                           	opt stack 0
 14048  005E1A                     i1___lwmod:
 14049                           	opt stack 20
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;incstack = 0
 14053                           ;incstack = 0
 14054  005E1A  5014               	movf	i1___lwmod@divisor+1,w,c
 14055  005E1C  1013               	iorwf	i1___lwmod@divisor,w,c
 14056  005E1E  B4D8               	btfsc	status,2,c
 14057  005E20  D01A               	goto	i1l917
 14058  005E22  6E15               	movwf	??i1___lwmod& (0+255),c
 14059  005E24  0E01               	movlw	1
 14060  005E26  6E16               	movwf	i1___lwmod@counter,c
 14061  005E28  5015               	movf	??i1___lwmod& (0+255),w,c
 14062  005E2A  D004               	goto	i1l9643
 14063  005E2C                     i1l9641:
 14064  005E2C  90D8               	bcf	status,0,c
 14065  005E2E  3613               	rlcf	i1___lwmod@divisor,f,c
 14066  005E30  3614               	rlcf	i1___lwmod@divisor+1,f,c
 14067  005E32  2A16               	incf	i1___lwmod@counter,f,c
 14068  005E34                     i1l9643:
 14069  005E34  AE14               	btfss	i1___lwmod@divisor+1,7,c
 14070  005E36  D7FA               	goto	i1l9641
 14071  005E38                     i1l9645:
 14072  005E38  5013               	movf	i1___lwmod@divisor,w,c
 14073  005E3A  5C11               	subwf	i1___lwmod@dividend,w,c
 14074  005E3C  5014               	movf	i1___lwmod@divisor+1,w,c
 14075  005E3E  5812               	subwfb	i1___lwmod@dividend+1,w,c
 14076  005E40  A0D8               	btfss	status,0,c
 14077  005E42  D004               	goto	i1l9649
 14078  005E44  5013               	movf	i1___lwmod@divisor,w,c
 14079  005E46  5E11               	subwf	i1___lwmod@dividend,f,c
 14080  005E48  5014               	movf	i1___lwmod@divisor+1,w,c
 14081  005E4A  5A12               	subwfb	i1___lwmod@dividend+1,f,c
 14082  005E4C                     i1l9649:
 14083  005E4C  90D8               	bcf	status,0,c
 14084  005E4E  3214               	rrcf	i1___lwmod@divisor+1,f,c
 14085  005E50  3213               	rrcf	i1___lwmod@divisor,f,c
 14086  005E52  2E16               	decfsz	i1___lwmod@counter,f,c
 14087  005E54  D7F1               	goto	i1l9645
 14088  005E56                     i1l917:
 14089  005E56  C011  F011         	movff	i1___lwmod@dividend,?i1___lwmod
 14090  005E5A  C012  F012         	movff	i1___lwmod@dividend+1,?i1___lwmod+1
 14091  005E5E  0012               	return	
 14092  005E60                     __end_ofi1___lwmod:
 14093                           	opt stack 0
 14094                           pclatu	equ	0xFFB
 14095                           pclath	equ	0xFFA
 14096                           tblptru	equ	0xFF8
 14097                           tblptrh	equ	0xFF7
 14098                           tblptrl	equ	0xFF6
 14099                           tablat	equ	0xFF5
 14100                           prodh	equ	0xFF4
 14101                           prodl	equ	0xFF3
 14102                           intcon	equ	0xFF2
 14103                           intcon2	equ	0xFF1
 14104                           postinc0	equ	0xFEE
 14105                           fsr0h	equ	0xFEA
 14106                           fsr0l	equ	0xFE9
 14107                           wreg	equ	0xFE8
 14108                           fsr1h	equ	0xFE2
 14109                           fsr1l	equ	0xFE1
 14110                           bsr	equ	0xFE0
 14111                           indf2	equ	0xFDF
 14112                           postinc2	equ	0xFDE
 14113                           postdec2	equ	0xFDD
 14114                           fsr2h	equ	0xFDA
 14115                           fsr2l	equ	0xFD9
 14116                           status	equ	0xFD8
 14117                           
 14118 ;; *************** function i1___lltoft *****************
 14119 ;; Defined at:
 14120 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lltoft.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;  __lltoft        4   24[COMRAM] unsigned long 
 14123 ;; Auto vars:     Size  Location     Type
 14124 ;;  __lltoft        1   32[COMRAM] unsigned char 
 14125 ;; Return value:  Size  Location     Type
 14126 ;;                  3   24[COMRAM] float 
 14127 ;; Registers used:
 14128 ;;		wreg, status,2, status,0, cstack
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/0
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14134 ;;      Params:         4       0       0       0       0       0       0       0       0
 14135 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14136 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14137 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14138 ;;Total ram usage:        9 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:    4
 14141 ;; This function calls:
 14142 ;;		i1___ftpack
 14143 ;; This function is called by:
 14144 ;;		i1_sprintf
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           	psect	text44
 14149  005C56                     __ptext44:
 14150                           	opt stack 0
 14151  005C56                     i1___lltoft:
 14152                           	opt stack 19
 14153                           
 14154                           ;incstack = 0
 14155                           ;incstack = 0
 14156  005C56  6E1D               	movwf	??i1___lltoft& (0+255),c
 14157  005C58  0E8E               	movlw	142
 14158  005C5A  6E21               	movwf	i1___lltoft@exp,c
 14159  005C5C  501D               	movf	??i1___lltoft& (0+255),w,c
 14160  005C5E  D006               	goto	i1l9609
 14161  005C60                     i1l9607:
 14162  005C60  90D8               	bcf	status,0,c
 14163  005C62  321C               	rrcf	i1___lltoft@c+3,f,c
 14164  005C64  321B               	rrcf	i1___lltoft@c+2,f,c
 14165  005C66  321A               	rrcf	i1___lltoft@c+1,f,c
 14166  005C68  3219               	rrcf	i1___lltoft@c,f,c
 14167  005C6A  2A21               	incf	i1___lltoft@exp,f,c
 14168  005C6C                     i1l9609:
 14169  005C6C  0E00               	movlw	0
 14170  005C6E  1419               	andwf	i1___lltoft@c,w,c
 14171  005C70  6E1D               	movwf	??i1___lltoft& (0+255),c
 14172  005C72  0E00               	movlw	0
 14173  005C74  141A               	andwf	i1___lltoft@c+1,w,c
 14174  005C76  6E1E               	movwf	(??i1___lltoft+1)& (0+255),c
 14175  005C78  0E00               	movlw	0
 14176  005C7A  141B               	andwf	i1___lltoft@c+2,w,c
 14177  005C7C  6E1F               	movwf	(??i1___lltoft+2)& (0+255),c
 14178  005C7E  0EFF               	movlw	255
 14179  005C80  141C               	andwf	i1___lltoft@c+3,w,c
 14180  005C82  6E20               	movwf	(??i1___lltoft+3)& (0+255),c
 14181  005C84  5020               	movf	??i1___lltoft+3,w,c
 14182  005C86  101D               	iorwf	??i1___lltoft,w,c
 14183  005C88  101E               	iorwf	??i1___lltoft+1,w,c
 14184  005C8A  101F               	iorwf	??i1___lltoft+2,w,c
 14185  005C8C  A4D8               	btfss	status,2,c
 14186  005C8E  D7E8               	goto	i1l9607
 14187  005C90  C019  F011         	movff	i1___lltoft@c,?i1___ftpack
 14188  005C94  C01A  F012         	movff	i1___lltoft@c+1,?i1___ftpack+1
 14189  005C98  C01B  F013         	movff	i1___lltoft@c+2,?i1___ftpack+2
 14190  005C9C  C021  F014         	movff	i1___lltoft@exp,?i1___ftpack+3
 14191  005CA0  6E1D               	movwf	??i1___lltoft& (0+255),c
 14192  005CA2  0E00               	movlw	0
 14193  005CA4  6E15               	movwf	?i1___ftpack+4,c
 14194  005CA6  501D               	movf	??i1___lltoft& (0+255),w,c
 14195  005CA8  ECC3  F029         	call	i1___ftpack	;wreg free
 14196  005CAC  C013  F01B         	movff	?i1___ftpack+2,?i1___lltoft+2
 14197  005CB0  C012  F01A         	movff	?i1___ftpack+1,?i1___lltoft+1
 14198  005CB4  C011  F019         	movff	?i1___ftpack,?i1___lltoft
 14199  005CB8  0012               	return	
 14200  005CBA                     __end_ofi1___lltoft:
 14201                           	opt stack 0
 14202                           pclatu	equ	0xFFB
 14203                           pclath	equ	0xFFA
 14204                           tblptru	equ	0xFF8
 14205                           tblptrh	equ	0xFF7
 14206                           tblptrl	equ	0xFF6
 14207                           tablat	equ	0xFF5
 14208                           prodh	equ	0xFF4
 14209                           prodl	equ	0xFF3
 14210                           intcon	equ	0xFF2
 14211                           intcon2	equ	0xFF1
 14212                           postinc0	equ	0xFEE
 14213                           fsr0h	equ	0xFEA
 14214                           fsr0l	equ	0xFE9
 14215                           wreg	equ	0xFE8
 14216                           fsr1h	equ	0xFE2
 14217                           fsr1l	equ	0xFE1
 14218                           bsr	equ	0xFE0
 14219                           indf2	equ	0xFDF
 14220                           postinc2	equ	0xFDE
 14221                           postdec2	equ	0xFDD
 14222                           fsr2h	equ	0xFDA
 14223                           fsr2l	equ	0xFD9
 14224                           status	equ	0xFD8
 14225                           
 14226 ;; *************** function i1___llmod *****************
 14227 ;; Defined at:
 14228 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\llmod.c"
 14229 ;; Parameters:    Size  Location     Type
 14230 ;;  __llmod         4   30[COMRAM] unsigned long 
 14231 ;;  __llmod         4   34[COMRAM] unsigned long 
 14232 ;; Auto vars:     Size  Location     Type
 14233 ;;  __llmod         1   39[COMRAM] unsigned char 
 14234 ;; Return value:  Size  Location     Type
 14235 ;;                  4   30[COMRAM] unsigned long 
 14236 ;; Registers used:
 14237 ;;		wreg, status,2, status,0
 14238 ;; Tracked objects:
 14239 ;;		On entry : 0/0
 14240 ;;		On exit  : 0/0
 14241 ;;		Unchanged: 0/0
 14242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14243 ;;      Params:         8       0       0       0       0       0       0       0       0
 14244 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14245 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14246 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14247 ;;Total ram usage:       10 bytes
 14248 ;; Hardware stack levels used:    1
 14249 ;; Hardware stack levels required when called:    3
 14250 ;; This function calls:
 14251 ;;		Nothing
 14252 ;; This function is called by:
 14253 ;;		i1_sprintf
 14254 ;; This function uses a non-reentrant model
 14255 ;;
 14256                           
 14257                           	psect	text45
 14258  005B88                     __ptext45:
 14259                           	opt stack 0
 14260  005B88                     i1___llmod:
 14261                           	opt stack 20
 14262                           
 14263                           ;incstack = 0
 14264                           ;incstack = 0
 14265  005B88  5026               	movf	i1___llmod@divisor+3,w,c
 14266  005B8A  1023               	iorwf	i1___llmod@divisor,w,c
 14267  005B8C  1024               	iorwf	i1___llmod@divisor+1,w,c
 14268  005B8E  1025               	iorwf	i1___llmod@divisor+2,w,c
 14269  005B90  B4D8               	btfsc	status,2,c
 14270  005B92  D026               	goto	i1l848
 14271  005B94  6E27               	movwf	??i1___llmod& (0+255),c
 14272  005B96  0E01               	movlw	1
 14273  005B98  6E28               	movwf	i1___llmod@counter,c
 14274  005B9A  5027               	movf	??i1___llmod& (0+255),w,c
 14275  005B9C  D006               	goto	i1l9595
 14276  005B9E                     i1l9593:
 14277  005B9E  90D8               	bcf	status,0,c
 14278  005BA0  3623               	rlcf	i1___llmod@divisor,f,c
 14279  005BA2  3624               	rlcf	i1___llmod@divisor+1,f,c
 14280  005BA4  3625               	rlcf	i1___llmod@divisor+2,f,c
 14281  005BA6  3626               	rlcf	i1___llmod@divisor+3,f,c
 14282  005BA8  2A28               	incf	i1___llmod@counter,f,c
 14283  005BAA                     i1l9595:
 14284  005BAA  AE26               	btfss	i1___llmod@divisor+3,7,c
 14285  005BAC  D7F8               	goto	i1l9593
 14286  005BAE                     i1l9597:
 14287  005BAE  5023               	movf	i1___llmod@divisor,w,c
 14288  005BB0  5C1F               	subwf	i1___llmod@dividend,w,c
 14289  005BB2  5024               	movf	i1___llmod@divisor+1,w,c
 14290  005BB4  5820               	subwfb	i1___llmod@dividend+1,w,c
 14291  005BB6  5025               	movf	i1___llmod@divisor+2,w,c
 14292  005BB8  5821               	subwfb	i1___llmod@dividend+2,w,c
 14293  005BBA  5026               	movf	i1___llmod@divisor+3,w,c
 14294  005BBC  5822               	subwfb	i1___llmod@dividend+3,w,c
 14295  005BBE  A0D8               	btfss	status,0,c
 14296  005BC0  D008               	goto	i1l9601
 14297  005BC2  5023               	movf	i1___llmod@divisor,w,c
 14298  005BC4  5E1F               	subwf	i1___llmod@dividend,f,c
 14299  005BC6  5024               	movf	i1___llmod@divisor+1,w,c
 14300  005BC8  5A20               	subwfb	i1___llmod@dividend+1,f,c
 14301  005BCA  5025               	movf	i1___llmod@divisor+2,w,c
 14302  005BCC  5A21               	subwfb	i1___llmod@dividend+2,f,c
 14303  005BCE  5026               	movf	i1___llmod@divisor+3,w,c
 14304  005BD0  5A22               	subwfb	i1___llmod@dividend+3,f,c
 14305  005BD2                     i1l9601:
 14306  005BD2  90D8               	bcf	status,0,c
 14307  005BD4  3226               	rrcf	i1___llmod@divisor+3,f,c
 14308  005BD6  3225               	rrcf	i1___llmod@divisor+2,f,c
 14309  005BD8  3224               	rrcf	i1___llmod@divisor+1,f,c
 14310  005BDA  3223               	rrcf	i1___llmod@divisor,f,c
 14311  005BDC  2E28               	decfsz	i1___llmod@counter,f,c
 14312  005BDE  D7E7               	goto	i1l9597
 14313  005BE0                     i1l848:
 14314  005BE0  C01F  F01F         	movff	i1___llmod@dividend,?i1___llmod
 14315  005BE4  C020  F020         	movff	i1___llmod@dividend+1,?i1___llmod+1
 14316  005BE8  C021  F021         	movff	i1___llmod@dividend+2,?i1___llmod+2
 14317  005BEC  C022  F022         	movff	i1___llmod@dividend+3,?i1___llmod+3
 14318  005BF0  0012               	return	
 14319  005BF2                     __end_ofi1___llmod:
 14320                           	opt stack 0
 14321                           pclatu	equ	0xFFB
 14322                           pclath	equ	0xFFA
 14323                           tblptru	equ	0xFF8
 14324                           tblptrh	equ	0xFF7
 14325                           tblptrl	equ	0xFF6
 14326                           tablat	equ	0xFF5
 14327                           prodh	equ	0xFF4
 14328                           prodl	equ	0xFF3
 14329                           intcon	equ	0xFF2
 14330                           intcon2	equ	0xFF1
 14331                           postinc0	equ	0xFEE
 14332                           fsr0h	equ	0xFEA
 14333                           fsr0l	equ	0xFE9
 14334                           wreg	equ	0xFE8
 14335                           fsr1h	equ	0xFE2
 14336                           fsr1l	equ	0xFE1
 14337                           bsr	equ	0xFE0
 14338                           indf2	equ	0xFDF
 14339                           postinc2	equ	0xFDE
 14340                           postdec2	equ	0xFDD
 14341                           fsr2h	equ	0xFDA
 14342                           fsr2l	equ	0xFD9
 14343                           status	equ	0xFD8
 14344                           
 14345 ;; *************** function i1___lldiv *****************
 14346 ;; Defined at:
 14347 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
 14348 ;; Parameters:    Size  Location     Type
 14349 ;;  __lldiv         4   16[COMRAM] unsigned long 
 14350 ;;  __lldiv         4   20[COMRAM] unsigned long 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  __lldiv         4   25[COMRAM] unsigned long 
 14353 ;;  __lldiv         1   29[COMRAM] unsigned char 
 14354 ;; Return value:  Size  Location     Type
 14355 ;;                  4   16[COMRAM] unsigned long 
 14356 ;; Registers used:
 14357 ;;		wreg, status,2, status,0
 14358 ;; Tracked objects:
 14359 ;;		On entry : 0/0
 14360 ;;		On exit  : 0/0
 14361 ;;		Unchanged: 0/0
 14362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14363 ;;      Params:         8       0       0       0       0       0       0       0       0
 14364 ;;      Locals:         5       0       0       0       0       0       0       0       0
 14365 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14366 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14367 ;;Total ram usage:       14 bytes
 14368 ;; Hardware stack levels used:    1
 14369 ;; Hardware stack levels required when called:    3
 14370 ;; This function calls:
 14371 ;;		Nothing
 14372 ;; This function is called by:
 14373 ;;		i1_sprintf
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           	psect	text46
 14378  005916                     __ptext46:
 14379                           	opt stack 0
 14380  005916                     i1___lldiv:
 14381                           	opt stack 20
 14382                           
 14383                           ;incstack = 0
 14384                           ;incstack = 0
 14385  005916  0E00               	movlw	0
 14386  005918  6E1A               	movwf	i1___lldiv@quotient,c
 14387  00591A  0E00               	movlw	0
 14388  00591C  6E1B               	movwf	i1___lldiv@quotient+1,c
 14389  00591E  0E00               	movlw	0
 14390  005920  6E1C               	movwf	i1___lldiv@quotient+2,c
 14391  005922  0E00               	movlw	0
 14392  005924  6E1D               	movwf	i1___lldiv@quotient+3,c
 14393  005926  5018               	movf	i1___lldiv@divisor+3,w,c
 14394  005928  1015               	iorwf	i1___lldiv@divisor,w,c
 14395  00592A  1016               	iorwf	i1___lldiv@divisor+1,w,c
 14396  00592C  1017               	iorwf	i1___lldiv@divisor+2,w,c
 14397  00592E  B4D8               	btfsc	status,2,c
 14398  005930  D02C               	goto	i1l838
 14399  005932  6E19               	movwf	??i1___lldiv& (0+255),c
 14400  005934  0E01               	movlw	1
 14401  005936  6E1E               	movwf	i1___lldiv@counter,c
 14402  005938  5019               	movf	??i1___lldiv& (0+255),w,c
 14403  00593A  D006               	goto	i1l9575
 14404  00593C                     i1l9573:
 14405  00593C  90D8               	bcf	status,0,c
 14406  00593E  3615               	rlcf	i1___lldiv@divisor,f,c
 14407  005940  3616               	rlcf	i1___lldiv@divisor+1,f,c
 14408  005942  3617               	rlcf	i1___lldiv@divisor+2,f,c
 14409  005944  3618               	rlcf	i1___lldiv@divisor+3,f,c
 14410  005946  2A1E               	incf	i1___lldiv@counter,f,c
 14411  005948                     i1l9575:
 14412  005948  AE18               	btfss	i1___lldiv@divisor+3,7,c
 14413  00594A  D7F8               	goto	i1l9573
 14414  00594C                     i1l9577:
 14415  00594C  90D8               	bcf	status,0,c
 14416  00594E  361A               	rlcf	i1___lldiv@quotient,f,c
 14417  005950  361B               	rlcf	i1___lldiv@quotient+1,f,c
 14418  005952  361C               	rlcf	i1___lldiv@quotient+2,f,c
 14419  005954  361D               	rlcf	i1___lldiv@quotient+3,f,c
 14420  005956  5015               	movf	i1___lldiv@divisor,w,c
 14421  005958  5C11               	subwf	i1___lldiv@dividend,w,c
 14422  00595A  5016               	movf	i1___lldiv@divisor+1,w,c
 14423  00595C  5812               	subwfb	i1___lldiv@dividend+1,w,c
 14424  00595E  5017               	movf	i1___lldiv@divisor+2,w,c
 14425  005960  5813               	subwfb	i1___lldiv@dividend+2,w,c
 14426  005962  5018               	movf	i1___lldiv@divisor+3,w,c
 14427  005964  5814               	subwfb	i1___lldiv@dividend+3,w,c
 14428  005966  A0D8               	btfss	status,0,c
 14429  005968  D009               	goto	i1l9585
 14430  00596A  5015               	movf	i1___lldiv@divisor,w,c
 14431  00596C  5E11               	subwf	i1___lldiv@dividend,f,c
 14432  00596E  5016               	movf	i1___lldiv@divisor+1,w,c
 14433  005970  5A12               	subwfb	i1___lldiv@dividend+1,f,c
 14434  005972  5017               	movf	i1___lldiv@divisor+2,w,c
 14435  005974  5A13               	subwfb	i1___lldiv@dividend+2,f,c
 14436  005976  5018               	movf	i1___lldiv@divisor+3,w,c
 14437  005978  5A14               	subwfb	i1___lldiv@dividend+3,f,c
 14438  00597A  801A               	bsf	i1___lldiv@quotient,0,c
 14439  00597C                     i1l9585:
 14440  00597C  90D8               	bcf	status,0,c
 14441  00597E  3218               	rrcf	i1___lldiv@divisor+3,f,c
 14442  005980  3217               	rrcf	i1___lldiv@divisor+2,f,c
 14443  005982  3216               	rrcf	i1___lldiv@divisor+1,f,c
 14444  005984  3215               	rrcf	i1___lldiv@divisor,f,c
 14445  005986  2E1E               	decfsz	i1___lldiv@counter,f,c
 14446  005988  D7E1               	goto	i1l9577
 14447  00598A                     i1l838:
 14448  00598A  C01A  F011         	movff	i1___lldiv@quotient,?i1___lldiv
 14449  00598E  C01B  F012         	movff	i1___lldiv@quotient+1,?i1___lldiv+1
 14450  005992  C01C  F013         	movff	i1___lldiv@quotient+2,?i1___lldiv+2
 14451  005996  C01D  F014         	movff	i1___lldiv@quotient+3,?i1___lldiv+3
 14452  00599A  0012               	return	
 14453  00599C                     __end_ofi1___lldiv:
 14454                           	opt stack 0
 14455                           pclatu	equ	0xFFB
 14456                           pclath	equ	0xFFA
 14457                           tblptru	equ	0xFF8
 14458                           tblptrh	equ	0xFF7
 14459                           tblptrl	equ	0xFF6
 14460                           tablat	equ	0xFF5
 14461                           prodh	equ	0xFF4
 14462                           prodl	equ	0xFF3
 14463                           intcon	equ	0xFF2
 14464                           intcon2	equ	0xFF1
 14465                           postinc0	equ	0xFEE
 14466                           fsr0h	equ	0xFEA
 14467                           fsr0l	equ	0xFE9
 14468                           wreg	equ	0xFE8
 14469                           fsr1h	equ	0xFE2
 14470                           fsr1l	equ	0xFE1
 14471                           bsr	equ	0xFE0
 14472                           indf2	equ	0xFDF
 14473                           postinc2	equ	0xFDE
 14474                           postdec2	equ	0xFDD
 14475                           fsr2h	equ	0xFDA
 14476                           fsr2l	equ	0xFD9
 14477                           status	equ	0xFD8
 14478                           
 14479 ;; *************** function i1_isdigit *****************
 14480 ;; Defined at:
 14481 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\isdigit.c"
 14482 ;; Parameters:    Size  Location     Type
 14483 ;;  isdigit         1   16[COMRAM] unsigned char 
 14484 ;; Auto vars:     Size  Location     Type
 14485 ;;  isdigit         1   18[COMRAM] unsigned char 
 14486 ;; Return value:  Size  Location     Type
 14487 ;;		None               void
 14488 ;; Registers used:
 14489 ;;		wreg, status,2, status,0
 14490 ;; Tracked objects:
 14491 ;;		On entry : 0/0
 14492 ;;		On exit  : 0/0
 14493 ;;		Unchanged: 0/0
 14494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14495 ;;      Params:         1       0       0       0       0       0       0       0       0
 14496 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14497 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14498 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14499 ;;Total ram usage:        3 bytes
 14500 ;; Hardware stack levels used:    1
 14501 ;; Hardware stack levels required when called:    3
 14502 ;; This function calls:
 14503 ;;		Nothing
 14504 ;; This function is called by:
 14505 ;;		i1_sprintf
 14506 ;; This function uses a non-reentrant model
 14507 ;;
 14508                           
 14509                           	psect	text47
 14510  006242                     __ptext47:
 14511                           	opt stack 0
 14512  006242                     i1_isdigit:
 14513                           	opt stack 20
 14514                           
 14515                           ;incstack = 0
 14516                           ;incstack = 0
 14517  006242  6E12               	movwf	??i1_isdigit& (0+255),c
 14518  006244  0E00               	movlw	0
 14519  006246  6E13               	movwf	i1_isdigit$838,c
 14520  006248  5012               	movf	??i1_isdigit& (0+255),w,c
 14521  00624A  0E3A               	movlw	58
 14522  00624C  6011               	cpfslt	i1isdigit@c,c
 14523  00624E  D007               	goto	i1l9563
 14524  006250  0E2F               	movlw	47
 14525  006252  6411               	cpfsgt	i1isdigit@c,c
 14526  006254  D004               	goto	i1l9563
 14527  006256  6E12               	movwf	??i1_isdigit& (0+255),c
 14528  006258  0E01               	movlw	1
 14529  00625A  6E13               	movwf	i1_isdigit$838,c
 14530  00625C  5012               	movf	??i1_isdigit& (0+255),w,c
 14531  00625E                     i1l9563:
 14532  00625E  C013  F012         	movff	i1_isdigit$838,??i1_isdigit
 14533  006262  3012               	rrcf	??i1_isdigit,w,c
 14534  006264  0012               	return	
 14535  006266                     __end_ofi1_isdigit:
 14536                           	opt stack 0
 14537                           pclatu	equ	0xFFB
 14538                           pclath	equ	0xFFA
 14539                           tblptru	equ	0xFF8
 14540                           tblptrh	equ	0xFF7
 14541                           tblptrl	equ	0xFF6
 14542                           tablat	equ	0xFF5
 14543                           prodh	equ	0xFF4
 14544                           prodl	equ	0xFF3
 14545                           intcon	equ	0xFF2
 14546                           intcon2	equ	0xFF1
 14547                           postinc0	equ	0xFEE
 14548                           fsr0h	equ	0xFEA
 14549                           fsr0l	equ	0xFE9
 14550                           wreg	equ	0xFE8
 14551                           fsr1h	equ	0xFE2
 14552                           fsr1l	equ	0xFE1
 14553                           bsr	equ	0xFE0
 14554                           indf2	equ	0xFDF
 14555                           postinc2	equ	0xFDE
 14556                           postdec2	equ	0xFDD
 14557                           fsr2h	equ	0xFDA
 14558                           fsr2l	equ	0xFD9
 14559                           status	equ	0xFD8
 14560                           
 14561 ;; *************** function i1___fttol *****************
 14562 ;; Defined at:
 14563 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
 14564 ;; Parameters:    Size  Location     Type
 14565 ;;  __fttol         3   38[COMRAM] float 
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;  __fttol         4   48[COMRAM] unsigned long 
 14568 ;;  __fttol         1   52[COMRAM] unsigned char 
 14569 ;;  __fttol         1   47[COMRAM] unsigned char 
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  4   38[COMRAM] long 
 14572 ;; Registers used:
 14573 ;;		wreg, status,2, status,0
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14579 ;;      Params:         4       0       0       0       0       0       0       0       0
 14580 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14581 ;;      Temps:          5       0       0       0       0       0       0       0       0
 14582 ;;      Totals:        15       0       0       0       0       0       0       0       0
 14583 ;;Total ram usage:       15 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:    3
 14586 ;; This function calls:
 14587 ;;		Nothing
 14588 ;; This function is called by:
 14589 ;;		i1_sprintf
 14590 ;; This function uses a non-reentrant model
 14591 ;;
 14592                           
 14593                           	psect	text48
 14594  0050F8                     __ptext48:
 14595                           	opt stack 0
 14596  0050F8                     i1___fttol:
 14597                           	opt stack 20
 14598                           
 14599                           ;incstack = 0
 14600                           ;incstack = 0
 14601  0050F8  0E0F               	movlw	15
 14602  0050FA  6E2B               	movwf	??i1___fttol& (0+255),c
 14603  0050FC  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 14604  005100  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 14605  005104  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 14606  005108  282B               	incf	??i1___fttol,w,c
 14607  00510A  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 14608  00510C  D004               	goto	i1u853_20
 14609  00510E                     i1u853_25:
 14610  00510E  90D8               	bcf	status,0,c
 14611  005110  322E               	rrcf	??i1___fttol+3,f,c
 14612  005112  322D               	rrcf	??i1___fttol+2,f,c
 14613  005114  322C               	rrcf	??i1___fttol+1,f,c
 14614  005116                     i1u853_20:
 14615  005116  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 14616  005118  D7FA               	goto	i1u853_25
 14617  00511A  502C               	movf	??i1___fttol+1,w,c
 14618  00511C  6E35               	movwf	i1___fttol@exp1,c
 14619  00511E  6635               	tstfsz	i1___fttol@exp1& (0+255),c
 14620  005120  D001               	goto	i1l9515
 14621  005122  D035               	goto	i1u858_20
 14622  005124                     i1l9515:
 14623  005124  0E17               	movlw	23
 14624  005126  6E2B               	movwf	??i1___fttol& (0+255),c
 14625  005128  C027  F02C         	movff	i1___fttol@f1,??i1___fttol+1
 14626  00512C  C028  F02D         	movff	i1___fttol@f1+1,??i1___fttol+2
 14627  005130  C029  F02E         	movff	i1___fttol@f1+2,??i1___fttol+3
 14628  005134  282B               	incf	??i1___fttol,w,c
 14629  005136  6E2F               	movwf	(??i1___fttol+4)& (0+255),c
 14630  005138  D004               	goto	i1u855_20
 14631  00513A                     i1u855_25:
 14632  00513A  90D8               	bcf	status,0,c
 14633  00513C  322E               	rrcf	??i1___fttol+3,f,c
 14634  00513E  322D               	rrcf	??i1___fttol+2,f,c
 14635  005140  322C               	rrcf	??i1___fttol+1,f,c
 14636  005142                     i1u855_20:
 14637  005142  2E2F               	decfsz	(??i1___fttol+4)& (0+255),f,c
 14638  005144  D7FA               	goto	i1u855_25
 14639  005146  502C               	movf	??i1___fttol+1,w,c
 14640  005148  6E30               	movwf	i1___fttol@sign1,c
 14641  00514A  8E28               	bsf	i1___fttol@f1+1,7,c
 14642  00514C  0EFF               	movlw	255
 14643  00514E  1627               	andwf	i1___fttol@f1,f,c
 14644  005150  0EFF               	movlw	255
 14645  005152  1628               	andwf	i1___fttol@f1+1,f,c
 14646  005154  0E00               	movlw	0
 14647  005156  1629               	andwf	i1___fttol@f1+2,f,c
 14648  005158  5027               	movf	i1___fttol@f1,w,c
 14649  00515A  6E31               	movwf	i1___fttol@lval,c
 14650  00515C  5028               	movf	i1___fttol@f1+1,w,c
 14651  00515E  6E32               	movwf	i1___fttol@lval+1,c
 14652  005160  5029               	movf	i1___fttol@f1+2,w,c
 14653  005162  6E33               	movwf	i1___fttol@lval+2,c
 14654  005164  6A34               	clrf	i1___fttol@lval+3,c
 14655  005166  0E8E               	movlw	142
 14656  005168  5E35               	subwf	i1___fttol@exp1,f,c
 14657  00516A  AE35               	btfss	i1___fttol@exp1,7,c
 14658  00516C  D00D               	goto	i1l9537
 14659  00516E  5035               	movf	i1___fttol@exp1,w,c
 14660  005170  0A80               	xorlw	128
 14661  005172  0F8F               	addlw	143
 14662  005174  A0D8               	btfss	status,0,c
 14663  005176  D00B               	goto	i1u858_20
 14664  005178                     i1l9533:
 14665  005178  90D8               	bcf	status,0,c
 14666  00517A  3234               	rrcf	i1___fttol@lval+3,f,c
 14667  00517C  3233               	rrcf	i1___fttol@lval+2,f,c
 14668  00517E  3232               	rrcf	i1___fttol@lval+1,f,c
 14669  005180  3231               	rrcf	i1___fttol@lval,f,c
 14670  005182  3E35               	incfsz	i1___fttol@exp1,f,c
 14671  005184  D7F9               	goto	i1l9533
 14672  005186  D014               	goto	i1l9547
 14673  005188                     i1l9537:
 14674  005188  0E17               	movlw	23
 14675  00518A  6435               	cpfsgt	i1___fttol@exp1,c
 14676  00518C  D00F               	goto	i1l9545
 14677  00518E                     i1u858_20:
 14678  00518E  0E00               	movlw	0
 14679  005190  6E27               	movwf	?i1___fttol,c
 14680  005192  0E00               	movlw	0
 14681  005194  6E28               	movwf	?i1___fttol+1,c
 14682  005196  0E00               	movlw	0
 14683  005198  6E29               	movwf	?i1___fttol+2,c
 14684  00519A  0E00               	movlw	0
 14685  00519C  6E2A               	movwf	?i1___fttol+3,c
 14686  00519E  D01B               	goto	i1l794
 14687  0051A0                     i1l9543:
 14688  0051A0  90D8               	bcf	status,0,c
 14689  0051A2  3631               	rlcf	i1___fttol@lval,f,c
 14690  0051A4  3632               	rlcf	i1___fttol@lval+1,f,c
 14691  0051A6  3633               	rlcf	i1___fttol@lval+2,f,c
 14692  0051A8  3634               	rlcf	i1___fttol@lval+3,f,c
 14693  0051AA  0635               	decf	i1___fttol@exp1,f,c
 14694  0051AC                     i1l9545:
 14695  0051AC  6635               	tstfsz	i1___fttol@exp1,c
 14696  0051AE  D7F8               	goto	i1l9543
 14697  0051B0                     i1l9547:
 14698  0051B0  5030               	movf	i1___fttol@sign1,w,c
 14699  0051B2  B4D8               	btfsc	status,2,c
 14700  0051B4  D008               	goto	i1l9551
 14701  0051B6  1E34               	comf	i1___fttol@lval+3,f,c
 14702  0051B8  1E33               	comf	i1___fttol@lval+2,f,c
 14703  0051BA  1E32               	comf	i1___fttol@lval+1,f,c
 14704  0051BC  6C31               	negf	i1___fttol@lval,c
 14705  0051BE  0E00               	movlw	0
 14706  0051C0  2232               	addwfc	i1___fttol@lval+1,f,c
 14707  0051C2  2233               	addwfc	i1___fttol@lval+2,f,c
 14708  0051C4  2234               	addwfc	i1___fttol@lval+3,f,c
 14709  0051C6                     i1l9551:
 14710  0051C6  C031  F027         	movff	i1___fttol@lval,?i1___fttol
 14711  0051CA  C032  F028         	movff	i1___fttol@lval+1,?i1___fttol+1
 14712  0051CE  C033  F029         	movff	i1___fttol@lval+2,?i1___fttol+2
 14713  0051D2  C034  F02A         	movff	i1___fttol@lval+3,?i1___fttol+3
 14714  0051D6                     i1l794:
 14715  0051D6  0012               	return	
 14716  0051D8                     __end_ofi1___fttol:
 14717                           	opt stack 0
 14718                           pclatu	equ	0xFFB
 14719                           pclath	equ	0xFFA
 14720                           tblptru	equ	0xFF8
 14721                           tblptrh	equ	0xFF7
 14722                           tblptrl	equ	0xFF6
 14723                           tablat	equ	0xFF5
 14724                           prodh	equ	0xFF4
 14725                           prodl	equ	0xFF3
 14726                           intcon	equ	0xFF2
 14727                           intcon2	equ	0xFF1
 14728                           postinc0	equ	0xFEE
 14729                           fsr0h	equ	0xFEA
 14730                           fsr0l	equ	0xFE9
 14731                           wreg	equ	0xFE8
 14732                           fsr1h	equ	0xFE2
 14733                           fsr1l	equ	0xFE1
 14734                           bsr	equ	0xFE0
 14735                           indf2	equ	0xFDF
 14736                           postinc2	equ	0xFDE
 14737                           postdec2	equ	0xFDD
 14738                           fsr2h	equ	0xFDA
 14739                           fsr2l	equ	0xFD9
 14740                           status	equ	0xFD8
 14741                           
 14742 ;; *************** function i1___ftneg *****************
 14743 ;; Defined at:
 14744 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
 14745 ;; Parameters:    Size  Location     Type
 14746 ;;  __ftneg         3   16[COMRAM] float 
 14747 ;; Auto vars:     Size  Location     Type
 14748 ;;		None
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  3   16[COMRAM] float 
 14751 ;; Registers used:
 14752 ;;		wreg, status,2, status,0
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14758 ;;      Params:         3       0       0       0       0       0       0       0       0
 14759 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14760 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14761 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14762 ;;Total ram usage:        3 bytes
 14763 ;; Hardware stack levels used:    1
 14764 ;; Hardware stack levels required when called:    3
 14765 ;; This function calls:
 14766 ;;		Nothing
 14767 ;; This function is called by:
 14768 ;;		i1_sprintf
 14769 ;; This function uses a non-reentrant model
 14770 ;;
 14771                           
 14772                           	psect	text49
 14773  00621C                     __ptext49:
 14774                           	opt stack 0
 14775  00621C                     i1___ftneg:
 14776                           	opt stack 20
 14777                           
 14778                           ;incstack = 0
 14779                           ;incstack = 0
 14780  00621C  0E7F               	movlw	127
 14781  00621E  1413               	andwf	i1___ftneg@f1+2,w,c
 14782  006220  1012               	iorwf	i1___ftneg@f1+1,w,c
 14783  006222  1011               	iorwf	i1___ftneg@f1,w,c
 14784  006224  B4D8               	btfsc	status,2,c
 14785  006226  D006               	goto	i1l784
 14786  006228  0E00               	movlw	0
 14787  00622A  1A11               	xorwf	i1___ftneg@f1,f,c
 14788  00622C  0E00               	movlw	0
 14789  00622E  1A12               	xorwf	i1___ftneg@f1+1,f,c
 14790  006230  0E80               	movlw	128
 14791  006232  1A13               	xorwf	i1___ftneg@f1+2,f,c
 14792  006234                     i1l784:
 14793  006234  C011  F011         	movff	i1___ftneg@f1,?i1___ftneg
 14794  006238  C012  F012         	movff	i1___ftneg@f1+1,?i1___ftneg+1
 14795  00623C  C013  F013         	movff	i1___ftneg@f1+2,?i1___ftneg+2
 14796  006240  0012               	return	
 14797  006242                     __end_ofi1___ftneg:
 14798                           	opt stack 0
 14799                           pclatu	equ	0xFFB
 14800                           pclath	equ	0xFFA
 14801                           tblptru	equ	0xFF8
 14802                           tblptrh	equ	0xFF7
 14803                           tblptrl	equ	0xFF6
 14804                           tablat	equ	0xFF5
 14805                           prodh	equ	0xFF4
 14806                           prodl	equ	0xFF3
 14807                           intcon	equ	0xFF2
 14808                           intcon2	equ	0xFF1
 14809                           postinc0	equ	0xFEE
 14810                           fsr0h	equ	0xFEA
 14811                           fsr0l	equ	0xFE9
 14812                           wreg	equ	0xFE8
 14813                           fsr1h	equ	0xFE2
 14814                           fsr1l	equ	0xFE1
 14815                           bsr	equ	0xFE0
 14816                           indf2	equ	0xFDF
 14817                           postinc2	equ	0xFDE
 14818                           postdec2	equ	0xFDD
 14819                           fsr2h	equ	0xFDA
 14820                           fsr2l	equ	0xFD9
 14821                           status	equ	0xFD8
 14822                           
 14823 ;; *************** function i1___ftge *****************
 14824 ;; Defined at:
 14825 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;  __ftge          3   16[COMRAM] float 
 14828 ;;  __ftge          3   19[COMRAM] float 
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;		None
 14831 ;; Return value:  Size  Location     Type
 14832 ;;		None               void
 14833 ;; Registers used:
 14834 ;;		wreg, status,2, status,0
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 0/0
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14840 ;;      Params:         6       0       0       0       0       0       0       0       0
 14841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14842 ;;      Temps:          3       0       0       0       0       0       0       0       0
 14843 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14844 ;;Total ram usage:        9 bytes
 14845 ;; Hardware stack levels used:    1
 14846 ;; Hardware stack levels required when called:    3
 14847 ;; This function calls:
 14848 ;;		Nothing
 14849 ;; This function is called by:
 14850 ;;		i1_sprintf
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854                           	psect	text50
 14855  0056DE                     __ptext50:
 14856                           	opt stack 0
 14857  0056DE                     i1___ftge:
 14858                           	opt stack 20
 14859                           
 14860                           ;incstack = 0
 14861                           ;incstack = 0
 14862  0056DE  AE13               	btfss	i1___ftge@ff1+2,7,c
 14863  0056E0  D016               	goto	i1l9437
 14864  0056E2  C011  F017         	movff	i1___ftge@ff1,??i1___ftge
 14865  0056E6  C012  F018         	movff	i1___ftge@ff1+1,??i1___ftge+1
 14866  0056EA  C013  F019         	movff	i1___ftge@ff1+2,??i1___ftge+2
 14867  0056EE  1E17               	comf	??i1___ftge,f,c
 14868  0056F0  1E18               	comf	??i1___ftge+1,f,c
 14869  0056F2  1E19               	comf	??i1___ftge+2,f,c
 14870  0056F4  2A17               	incf	??i1___ftge,f,c
 14871  0056F6  0E00               	movlw	0
 14872  0056F8  2218               	addwfc	??i1___ftge+1,f,c
 14873  0056FA  2219               	addwfc	??i1___ftge+2,f,c
 14874  0056FC  0E00               	movlw	0
 14875  0056FE  2417               	addwf	??i1___ftge,w,c
 14876  005700  6E11               	movwf	i1___ftge@ff1,c
 14877  005702  0E00               	movlw	0
 14878  005704  2018               	addwfc	??i1___ftge+1,w,c
 14879  005706  6E12               	movwf	i1___ftge@ff1+1,c
 14880  005708  0E80               	movlw	128
 14881  00570A  2019               	addwfc	??i1___ftge+2,w,c
 14882  00570C  6E13               	movwf	i1___ftge@ff1+2,c
 14883  00570E                     i1l9437:
 14884  00570E  AE16               	btfss	i1___ftge@ff2+2,7,c
 14885  005710  D016               	goto	i1l9441
 14886  005712  C014  F017         	movff	i1___ftge@ff2,??i1___ftge
 14887  005716  C015  F018         	movff	i1___ftge@ff2+1,??i1___ftge+1
 14888  00571A  C016  F019         	movff	i1___ftge@ff2+2,??i1___ftge+2
 14889  00571E  1E17               	comf	??i1___ftge,f,c
 14890  005720  1E18               	comf	??i1___ftge+1,f,c
 14891  005722  1E19               	comf	??i1___ftge+2,f,c
 14892  005724  2A17               	incf	??i1___ftge,f,c
 14893  005726  0E00               	movlw	0
 14894  005728  2218               	addwfc	??i1___ftge+1,f,c
 14895  00572A  2219               	addwfc	??i1___ftge+2,f,c
 14896  00572C  0E00               	movlw	0
 14897  00572E  2417               	addwf	??i1___ftge,w,c
 14898  005730  6E14               	movwf	i1___ftge@ff2,c
 14899  005732  0E00               	movlw	0
 14900  005734  2018               	addwfc	??i1___ftge+1,w,c
 14901  005736  6E15               	movwf	i1___ftge@ff2+1,c
 14902  005738  0E80               	movlw	128
 14903  00573A  2019               	addwfc	??i1___ftge+2,w,c
 14904  00573C  6E16               	movwf	i1___ftge@ff2+2,c
 14905  00573E                     i1l9441:
 14906  00573E  0E00               	movlw	0
 14907  005740  1A11               	xorwf	i1___ftge@ff1,f,c
 14908  005742  0E00               	movlw	0
 14909  005744  1A12               	xorwf	i1___ftge@ff1+1,f,c
 14910  005746  0E80               	movlw	128
 14911  005748  1A13               	xorwf	i1___ftge@ff1+2,f,c
 14912  00574A  0E00               	movlw	0
 14913  00574C  1A14               	xorwf	i1___ftge@ff2,f,c
 14914  00574E  0E00               	movlw	0
 14915  005750  1A15               	xorwf	i1___ftge@ff2+1,f,c
 14916  005752  0E80               	movlw	128
 14917  005754  1A16               	xorwf	i1___ftge@ff2+2,f,c
 14918  005756  5014               	movf	i1___ftge@ff2,w,c
 14919  005758  5C11               	subwf	i1___ftge@ff1,w,c
 14920  00575A  5015               	movf	i1___ftge@ff2+1,w,c
 14921  00575C  5812               	subwfb	i1___ftge@ff1+1,w,c
 14922  00575E  5016               	movf	i1___ftge@ff2+2,w,c
 14923  005760  5813               	subwfb	i1___ftge@ff1+2,w,c
 14924  005762  B0D8               	btfsc	status,0,c
 14925  005764  D002               	goto	i1l9447
 14926  005766  90D8               	bcf	status,0,c
 14927  005768  D001               	goto	i1l768
 14928  00576A                     i1l9447:
 14929  00576A  80D8               	bsf	status,0,c
 14930  00576C                     i1l768:
 14931  00576C  0012               	return	
 14932  00576E                     __end_ofi1___ftge:
 14933                           	opt stack 0
 14934                           pclatu	equ	0xFFB
 14935                           pclath	equ	0xFFA
 14936                           tblptru	equ	0xFF8
 14937                           tblptrh	equ	0xFF7
 14938                           tblptrl	equ	0xFF6
 14939                           tablat	equ	0xFF5
 14940                           prodh	equ	0xFF4
 14941                           prodl	equ	0xFF3
 14942                           intcon	equ	0xFF2
 14943                           intcon2	equ	0xFF1
 14944                           postinc0	equ	0xFEE
 14945                           fsr0h	equ	0xFEA
 14946                           fsr0l	equ	0xFE9
 14947                           wreg	equ	0xFE8
 14948                           fsr1h	equ	0xFE2
 14949                           fsr1l	equ	0xFE1
 14950                           bsr	equ	0xFE0
 14951                           indf2	equ	0xFDF
 14952                           postinc2	equ	0xFDE
 14953                           postdec2	equ	0xFDD
 14954                           fsr2h	equ	0xFDA
 14955                           fsr2l	equ	0xFD9
 14956                           status	equ	0xFD8
 14957                           
 14958 ;; *************** function i1__tdiv_to_l_ *****************
 14959 ;; Defined at:
 14960 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdivl.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;  _tdiv_to_l_     3   16[COMRAM] float 
 14963 ;;  _tdiv_to_l_     3   19[COMRAM] float 
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;  _tdiv_to_l_     4   27[COMRAM] unsigned long 
 14966 ;;  _tdiv_to_l_     1   32[COMRAM] unsigned char 
 14967 ;;  _tdiv_to_l_     1   31[COMRAM] unsigned char 
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  4   16[COMRAM] unsigned long 
 14970 ;; Registers used:
 14971 ;;		wreg, status,2, status,0
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14977 ;;      Params:         6       0       0       0       0       0       0       0       0
 14978 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14979 ;;      Temps:          5       0       0       0       0       0       0       0       0
 14980 ;;      Totals:        17       0       0       0       0       0       0       0       0
 14981 ;;Total ram usage:       17 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    3
 14984 ;; This function calls:
 14985 ;;		Nothing
 14986 ;; This function is called by:
 14987 ;;		i1_sprintf
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           
 14991                           	psect	text51
 14992  0045BA                     __ptext51:
 14993                           	opt stack 0
 14994  0045BA                     i1__tdiv_to_l_:
 14995                           	opt stack 20
 14996                           
 14997                           ;incstack = 0
 14998                           ;incstack = 0
 14999  0045BA  0E0F               	movlw	15
 15000  0045BC  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15001  0045BE  C011  F018         	movff	i1__tdiv_to_l_@f1,??i1__tdiv_to_l_+1
 15002  0045C2  C012  F019         	movff	i1__tdiv_to_l_@f1+1,??i1__tdiv_to_l_+2
 15003  0045C6  C013  F01A         	movff	i1__tdiv_to_l_@f1+2,??i1__tdiv_to_l_+3
 15004  0045CA  2817               	incf	??i1__tdiv_to_l_,w,c
 15005  0045CC  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 15006  0045CE  D004               	goto	i1u834_20
 15007  0045D0                     i1u834_25:
 15008  0045D0  90D8               	bcf	status,0,c
 15009  0045D2  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 15010  0045D4  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 15011  0045D6  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 15012  0045D8                     i1u834_20:
 15013  0045D8  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 15014  0045DA  D7FA               	goto	i1u834_25
 15015  0045DC  5018               	movf	??i1__tdiv_to_l_+1,w,c
 15016  0045DE  6E21               	movwf	i1__tdiv_to_l_@exp1,c
 15017  0045E0  6621               	tstfsz	i1__tdiv_to_l_@exp1& (0+255),c
 15018  0045E2  D001               	goto	i1l9383
 15019  0045E4  D061               	goto	i1u841_20
 15020  0045E6                     i1l9383:
 15021  0045E6  0E0F               	movlw	15
 15022  0045E8  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15023  0045EA  C014  F018         	movff	i1__tdiv_to_l_@f2,??i1__tdiv_to_l_+1
 15024  0045EE  C015  F019         	movff	i1__tdiv_to_l_@f2+1,??i1__tdiv_to_l_+2
 15025  0045F2  C016  F01A         	movff	i1__tdiv_to_l_@f2+2,??i1__tdiv_to_l_+3
 15026  0045F6  2817               	incf	??i1__tdiv_to_l_,w,c
 15027  0045F8  6E1B               	movwf	(??i1__tdiv_to_l_+4)& (0+255),c
 15028  0045FA  D004               	goto	i1u836_20
 15029  0045FC                     i1u836_25:
 15030  0045FC  90D8               	bcf	status,0,c
 15031  0045FE  321A               	rrcf	??i1__tdiv_to_l_+3,f,c
 15032  004600  3219               	rrcf	??i1__tdiv_to_l_+2,f,c
 15033  004602  3218               	rrcf	??i1__tdiv_to_l_+1,f,c
 15034  004604                     i1u836_20:
 15035  004604  2E1B               	decfsz	(??i1__tdiv_to_l_+4)& (0+255),f,c
 15036  004606  D7FA               	goto	i1u836_25
 15037  004608  5018               	movf	??i1__tdiv_to_l_+1,w,c
 15038  00460A  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 15039  00460C  6620               	tstfsz	i1__tdiv_to_l_@cntr& (0+255),c
 15040  00460E  D001               	goto	i1l9389
 15041  004610  D04B               	goto	i1u841_20
 15042  004612                     i1l9389:
 15043  004612  8E12               	bsf	i1__tdiv_to_l_@f1+1,7,c
 15044  004614  0EFF               	movlw	255
 15045  004616  1611               	andwf	i1__tdiv_to_l_@f1,f,c
 15046  004618  0EFF               	movlw	255
 15047  00461A  1612               	andwf	i1__tdiv_to_l_@f1+1,f,c
 15048  00461C  0E00               	movlw	0
 15049  00461E  1613               	andwf	i1__tdiv_to_l_@f1+2,f,c
 15050  004620  8E15               	bsf	i1__tdiv_to_l_@f2+1,7,c
 15051  004622  0EFF               	movlw	255
 15052  004624  1614               	andwf	i1__tdiv_to_l_@f2,f,c
 15053  004626  0EFF               	movlw	255
 15054  004628  1615               	andwf	i1__tdiv_to_l_@f2+1,f,c
 15055  00462A  0E00               	movlw	0
 15056  00462C  1616               	andwf	i1__tdiv_to_l_@f2+2,f,c
 15057  00462E  0E00               	movlw	0
 15058  004630  6E1C               	movwf	i1__tdiv_to_l_@quot,c
 15059  004632  0E00               	movlw	0
 15060  004634  6E1D               	movwf	i1__tdiv_to_l_@quot+1,c
 15061  004636  0E00               	movlw	0
 15062  004638  6E1E               	movwf	i1__tdiv_to_l_@quot+2,c
 15063  00463A  0E00               	movlw	0
 15064  00463C  6E1F               	movwf	i1__tdiv_to_l_@quot+3,c
 15065  00463E  0E7F               	movlw	127
 15066  004640  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 15067  004642  5020               	movf	i1__tdiv_to_l_@cntr,w,c
 15068  004644  0F98               	addlw	152
 15069  004646  5E21               	subwf	i1__tdiv_to_l_@exp1,f,c
 15070  004648  6E17               	movwf	??i1__tdiv_to_l_& (0+255),c
 15071  00464A  0E18               	movlw	24
 15072  00464C  6E20               	movwf	i1__tdiv_to_l_@cntr,c
 15073  00464E  5017               	movf	??i1__tdiv_to_l_& (0+255),w,c
 15074  004650                     i1l9403:
 15075  004650  90D8               	bcf	status,0,c
 15076  004652  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 15077  004654  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 15078  004656  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 15079  004658  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 15080  00465A  5014               	movf	i1__tdiv_to_l_@f2,w,c
 15081  00465C  5C11               	subwf	i1__tdiv_to_l_@f1,w,c
 15082  00465E  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 15083  004660  5812               	subwfb	i1__tdiv_to_l_@f1+1,w,c
 15084  004662  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 15085  004664  5813               	subwfb	i1__tdiv_to_l_@f1+2,w,c
 15086  004666  A0D8               	btfss	status,0,c
 15087  004668  D007               	goto	i1l753
 15088  00466A  5014               	movf	i1__tdiv_to_l_@f2,w,c
 15089  00466C  5E11               	subwf	i1__tdiv_to_l_@f1,f,c
 15090  00466E  5015               	movf	i1__tdiv_to_l_@f2+1,w,c
 15091  004670  5A12               	subwfb	i1__tdiv_to_l_@f1+1,f,c
 15092  004672  5016               	movf	i1__tdiv_to_l_@f2+2,w,c
 15093  004674  5A13               	subwfb	i1__tdiv_to_l_@f1+2,f,c
 15094  004676  801C               	bsf	i1__tdiv_to_l_@quot,0,c
 15095  004678                     i1l753:
 15096  004678  90D8               	bcf	status,0,c
 15097  00467A  3611               	rlcf	i1__tdiv_to_l_@f1,f,c
 15098  00467C  3612               	rlcf	i1__tdiv_to_l_@f1+1,f,c
 15099  00467E  3613               	rlcf	i1__tdiv_to_l_@f1+2,f,c
 15100  004680  2E20               	decfsz	i1__tdiv_to_l_@cntr,f,c
 15101  004682  D7E6               	goto	i1l9403
 15102  004684  AE21               	btfss	i1__tdiv_to_l_@exp1,7,c
 15103  004686  D00D               	goto	i1l9423
 15104  004688  5021               	movf	i1__tdiv_to_l_@exp1,w,c
 15105  00468A  0A80               	xorlw	128
 15106  00468C  0F97               	addlw	151
 15107  00468E  A0D8               	btfss	status,0,c
 15108  004690  D00B               	goto	i1u841_20
 15109  004692                     i1l9419:
 15110  004692  90D8               	bcf	status,0,c
 15111  004694  321F               	rrcf	i1__tdiv_to_l_@quot+3,f,c
 15112  004696  321E               	rrcf	i1__tdiv_to_l_@quot+2,f,c
 15113  004698  321D               	rrcf	i1__tdiv_to_l_@quot+1,f,c
 15114  00469A  321C               	rrcf	i1__tdiv_to_l_@quot,f,c
 15115  00469C  3E21               	incfsz	i1__tdiv_to_l_@exp1,f,c
 15116  00469E  D7F9               	goto	i1l9419
 15117  0046A0  D014               	goto	i1l759
 15118  0046A2                     i1l9423:
 15119  0046A2  0E17               	movlw	23
 15120  0046A4  6421               	cpfsgt	i1__tdiv_to_l_@exp1,c
 15121  0046A6  D00F               	goto	i1l9431
 15122  0046A8                     i1u841_20:
 15123  0046A8  0E00               	movlw	0
 15124  0046AA  6E11               	movwf	?i1__tdiv_to_l_,c
 15125  0046AC  0E00               	movlw	0
 15126  0046AE  6E12               	movwf	?i1__tdiv_to_l_+1,c
 15127  0046B0  0E00               	movlw	0
 15128  0046B2  6E13               	movwf	?i1__tdiv_to_l_+2,c
 15129  0046B4  0E00               	movlw	0
 15130  0046B6  6E14               	movwf	?i1__tdiv_to_l_+3,c
 15131  0046B8  D010               	goto	i1l750
 15132  0046BA                     i1l9429:
 15133  0046BA  90D8               	bcf	status,0,c
 15134  0046BC  361C               	rlcf	i1__tdiv_to_l_@quot,f,c
 15135  0046BE  361D               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 15136  0046C0  361E               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 15137  0046C2  361F               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 15138  0046C4  0621               	decf	i1__tdiv_to_l_@exp1,f,c
 15139  0046C6                     i1l9431:
 15140  0046C6  6621               	tstfsz	i1__tdiv_to_l_@exp1,c
 15141  0046C8  D7F8               	goto	i1l9429
 15142  0046CA                     i1l759:
 15143  0046CA  C01C  F011         	movff	i1__tdiv_to_l_@quot,?i1__tdiv_to_l_
 15144  0046CE  C01D  F012         	movff	i1__tdiv_to_l_@quot+1,?i1__tdiv_to_l_+1
 15145  0046D2  C01E  F013         	movff	i1__tdiv_to_l_@quot+2,?i1__tdiv_to_l_+2
 15146  0046D6  C01F  F014         	movff	i1__tdiv_to_l_@quot+3,?i1__tdiv_to_l_+3
 15147  0046DA                     i1l750:
 15148  0046DA  0012               	return	
 15149  0046DC                     __end_ofi1__tdiv_to_l_:
 15150                           	opt stack 0
 15151                           pclatu	equ	0xFFB
 15152                           pclath	equ	0xFFA
 15153                           tblptru	equ	0xFF8
 15154                           tblptrh	equ	0xFF7
 15155                           tblptrl	equ	0xFF6
 15156                           tablat	equ	0xFF5
 15157                           prodh	equ	0xFF4
 15158                           prodl	equ	0xFF3
 15159                           intcon	equ	0xFF2
 15160                           intcon2	equ	0xFF1
 15161                           postinc0	equ	0xFEE
 15162                           fsr0h	equ	0xFEA
 15163                           fsr0l	equ	0xFE9
 15164                           wreg	equ	0xFE8
 15165                           fsr1h	equ	0xFE2
 15166                           fsr1l	equ	0xFE1
 15167                           bsr	equ	0xFE0
 15168                           indf2	equ	0xFDF
 15169                           postinc2	equ	0xFDE
 15170                           postdec2	equ	0xFDD
 15171                           fsr2h	equ	0xFDA
 15172                           fsr2l	equ	0xFD9
 15173                           status	equ	0xFD8
 15174                           
 15175 ;; *************** function i1__div_to_l_ *****************
 15176 ;; Defined at:
 15177 ;;		line 61 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fldivl.c"
 15178 ;; Parameters:    Size  Location     Type
 15179 ;;  _div_to_l_      3   16[COMRAM] unsigned long 
 15180 ;;  _div_to_l_      3   19[COMRAM] unsigned long 
 15181 ;; Auto vars:     Size  Location     Type
 15182 ;;  _div_to_l_      4   23[COMRAM] unsigned long 
 15183 ;;  _div_to_l_      1   28[COMRAM] unsigned char 
 15184 ;;  _div_to_l_      1   27[COMRAM] unsigned char 
 15185 ;; Return value:  Size  Location     Type
 15186 ;;                  4   16[COMRAM] unsigned long 
 15187 ;; Registers used:
 15188 ;;		wreg, status,2, status,0
 15189 ;; Tracked objects:
 15190 ;;		On entry : 0/0
 15191 ;;		On exit  : 0/0
 15192 ;;		Unchanged: 0/0
 15193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15194 ;;      Params:         6       0       0       0       0       0       0       0       0
 15195 ;;      Locals:         6       0       0       0       0       0       0       0       0
 15196 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15197 ;;      Totals:        13       0       0       0       0       0       0       0       0
 15198 ;;Total ram usage:       13 bytes
 15199 ;; Hardware stack levels used:    1
 15200 ;; Hardware stack levels required when called:    3
 15201 ;; This function calls:
 15202 ;;		Nothing
 15203 ;; This function is called by:
 15204 ;;		i1_sprintf
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text52
 15209  004E26                     __ptext52:
 15210                           	opt stack 0
 15211  004E26                     i1__div_to_l_:
 15212                           	opt stack 20
 15213                           
 15214                           ;incstack = 0
 15215                           ;incstack = 0
 15216  004E26  3413               	rlcf	(i1__div_to_l_@f1+2)& (0+255),w,c
 15217  004E28  3414               	rlcf	(i1__div_to_l_@f1+3)& (0+255),w,c
 15218  004E2A  6E1D               	movwf	i1__div_to_l_@exp1,c
 15219  004E2C  661D               	tstfsz	i1__div_to_l_@exp1& (0+255),c
 15220  004E2E  D001               	goto	i1l9179
 15221  004E30  D05A               	goto	i1u799_20
 15222  004E32                     i1l9179:
 15223  004E32  3416               	rlcf	(i1__div_to_l_@f2+2)& (0+255),w,c
 15224  004E34  3417               	rlcf	(i1__div_to_l_@f2+3)& (0+255),w,c
 15225  004E36  6E1C               	movwf	i1__div_to_l_@cntr,c
 15226  004E38  661C               	tstfsz	i1__div_to_l_@cntr& (0+255),c
 15227  004E3A  D001               	goto	i1l9185
 15228  004E3C  D054               	goto	i1u799_20
 15229  004E3E                     i1l9185:
 15230  004E3E  8E13               	bsf	i1__div_to_l_@f1+2,7,c
 15231  004E40  0EFF               	movlw	255
 15232  004E42  1611               	andwf	i1__div_to_l_@f1,f,c
 15233  004E44  0EFF               	movlw	255
 15234  004E46  1612               	andwf	i1__div_to_l_@f1+1,f,c
 15235  004E48  0EFF               	movlw	255
 15236  004E4A  1613               	andwf	i1__div_to_l_@f1+2,f,c
 15237  004E4C  0E00               	movlw	0
 15238  004E4E  1614               	andwf	i1__div_to_l_@f1+3,f,c
 15239  004E50  8E16               	bsf	i1__div_to_l_@f2+2,7,c
 15240  004E52  0EFF               	movlw	255
 15241  004E54  1614               	andwf	i1__div_to_l_@f2,f,c
 15242  004E56  0EFF               	movlw	255
 15243  004E58  1615               	andwf	i1__div_to_l_@f2+1,f,c
 15244  004E5A  0EFF               	movlw	255
 15245  004E5C  1616               	andwf	i1__div_to_l_@f2+2,f,c
 15246  004E5E  0E00               	movlw	0
 15247  004E60  1617               	andwf	i1__div_to_l_@f2+3,f,c
 15248  004E62  0E00               	movlw	0
 15249  004E64  6E18               	movwf	i1__div_to_l_@quot,c
 15250  004E66  0E00               	movlw	0
 15251  004E68  6E19               	movwf	i1__div_to_l_@quot+1,c
 15252  004E6A  0E00               	movlw	0
 15253  004E6C  6E1A               	movwf	i1__div_to_l_@quot+2,c
 15254  004E6E  0E00               	movlw	0
 15255  004E70  6E1B               	movwf	i1__div_to_l_@quot+3,c
 15256  004E72  0E7F               	movlw	127
 15257  004E74  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 15258  004E76  501C               	movf	i1__div_to_l_@cntr,w,c
 15259  004E78  0FA0               	addlw	160
 15260  004E7A  5E1D               	subwf	i1__div_to_l_@exp1,f,c
 15261  004E7C  6E17               	movwf	??i1__div_to_l_& (0+255),c
 15262  004E7E  0E20               	movlw	32
 15263  004E80  6E1C               	movwf	i1__div_to_l_@cntr,c
 15264  004E82  5017               	movf	??i1__div_to_l_& (0+255),w,c
 15265  004E84                     i1l634:
 15266  004E84  90D8               	bcf	status,0,c
 15267  004E86  3618               	rlcf	i1__div_to_l_@quot,f,c
 15268  004E88  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 15269  004E8A  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 15270  004E8C  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 15271  004E8E  5014               	movf	i1__div_to_l_@f2,w,c
 15272  004E90  5C11               	subwf	i1__div_to_l_@f1,w,c
 15273  004E92  5015               	movf	i1__div_to_l_@f2+1,w,c
 15274  004E94  5812               	subwfb	i1__div_to_l_@f1+1,w,c
 15275  004E96  5016               	movf	i1__div_to_l_@f2+2,w,c
 15276  004E98  5813               	subwfb	i1__div_to_l_@f1+2,w,c
 15277  004E9A  5017               	movf	i1__div_to_l_@f2+3,w,c
 15278  004E9C  5814               	subwfb	i1__div_to_l_@f1+3,w,c
 15279  004E9E  A0D8               	btfss	status,0,c
 15280  004EA0  D009               	goto	i1l9205
 15281  004EA2  5014               	movf	i1__div_to_l_@f2,w,c
 15282  004EA4  5E11               	subwf	i1__div_to_l_@f1,f,c
 15283  004EA6  5015               	movf	i1__div_to_l_@f2+1,w,c
 15284  004EA8  5A12               	subwfb	i1__div_to_l_@f1+1,f,c
 15285  004EAA  5016               	movf	i1__div_to_l_@f2+2,w,c
 15286  004EAC  5A13               	subwfb	i1__div_to_l_@f1+2,f,c
 15287  004EAE  5017               	movf	i1__div_to_l_@f2+3,w,c
 15288  004EB0  5A14               	subwfb	i1__div_to_l_@f1+3,f,c
 15289  004EB2  8018               	bsf	i1__div_to_l_@quot,0,c
 15290  004EB4                     i1l9205:
 15291  004EB4  90D8               	bcf	status,0,c
 15292  004EB6  3611               	rlcf	i1__div_to_l_@f1,f,c
 15293  004EB8  3612               	rlcf	i1__div_to_l_@f1+1,f,c
 15294  004EBA  3613               	rlcf	i1__div_to_l_@f1+2,f,c
 15295  004EBC  3614               	rlcf	i1__div_to_l_@f1+3,f,c
 15296  004EBE  2E1C               	decfsz	i1__div_to_l_@cntr,f,c
 15297  004EC0  D7E1               	goto	i1l634
 15298  004EC2  AE1D               	btfss	i1__div_to_l_@exp1,7,c
 15299  004EC4  D00D               	goto	i1l9219
 15300  004EC6  501D               	movf	i1__div_to_l_@exp1,w,c
 15301  004EC8  0A80               	xorlw	128
 15302  004ECA  0F9F               	addlw	159
 15303  004ECC  A0D8               	btfss	status,0,c
 15304  004ECE  D00B               	goto	i1u799_20
 15305  004ED0                     i1l9215:
 15306  004ED0  90D8               	bcf	status,0,c
 15307  004ED2  321B               	rrcf	i1__div_to_l_@quot+3,f,c
 15308  004ED4  321A               	rrcf	i1__div_to_l_@quot+2,f,c
 15309  004ED6  3219               	rrcf	i1__div_to_l_@quot+1,f,c
 15310  004ED8  3218               	rrcf	i1__div_to_l_@quot,f,c
 15311  004EDA  3E1D               	incfsz	i1__div_to_l_@exp1,f,c
 15312  004EDC  D7F9               	goto	i1l9215
 15313  004EDE  D014               	goto	i1l641
 15314  004EE0                     i1l9219:
 15315  004EE0  0E1F               	movlw	31
 15316  004EE2  641D               	cpfsgt	i1__div_to_l_@exp1,c
 15317  004EE4  D00F               	goto	i1l9227
 15318  004EE6                     i1u799_20:
 15319  004EE6  0E00               	movlw	0
 15320  004EE8  6E11               	movwf	?i1__div_to_l_,c
 15321  004EEA  0E00               	movlw	0
 15322  004EEC  6E12               	movwf	?i1__div_to_l_+1,c
 15323  004EEE  0E00               	movlw	0
 15324  004EF0  6E13               	movwf	?i1__div_to_l_+2,c
 15325  004EF2  0E00               	movlw	0
 15326  004EF4  6E14               	movwf	?i1__div_to_l_+3,c
 15327  004EF6  D010               	goto	i1l632
 15328  004EF8                     i1l9225:
 15329  004EF8  90D8               	bcf	status,0,c
 15330  004EFA  3618               	rlcf	i1__div_to_l_@quot,f,c
 15331  004EFC  3619               	rlcf	i1__div_to_l_@quot+1,f,c
 15332  004EFE  361A               	rlcf	i1__div_to_l_@quot+2,f,c
 15333  004F00  361B               	rlcf	i1__div_to_l_@quot+3,f,c
 15334  004F02  061D               	decf	i1__div_to_l_@exp1,f,c
 15335  004F04                     i1l9227:
 15336  004F04  661D               	tstfsz	i1__div_to_l_@exp1,c
 15337  004F06  D7F8               	goto	i1l9225
 15338  004F08                     i1l641:
 15339  004F08  C018  F011         	movff	i1__div_to_l_@quot,?i1__div_to_l_
 15340  004F0C  C019  F012         	movff	i1__div_to_l_@quot+1,?i1__div_to_l_+1
 15341  004F10  C01A  F013         	movff	i1__div_to_l_@quot+2,?i1__div_to_l_+2
 15342  004F14  C01B  F014         	movff	i1__div_to_l_@quot+3,?i1__div_to_l_+3
 15343  004F18                     i1l632:
 15344  004F18  0012               	return	
 15345  004F1A                     __end_ofi1__div_to_l_:
 15346                           	opt stack 0
 15347                           pclatu	equ	0xFFB
 15348                           pclath	equ	0xFFA
 15349                           tblptru	equ	0xFF8
 15350                           tblptrh	equ	0xFF7
 15351                           tblptrl	equ	0xFF6
 15352                           tablat	equ	0xFF5
 15353                           prodh	equ	0xFF4
 15354                           prodl	equ	0xFF3
 15355                           intcon	equ	0xFF2
 15356                           intcon2	equ	0xFF1
 15357                           postinc0	equ	0xFEE
 15358                           fsr0h	equ	0xFEA
 15359                           fsr0l	equ	0xFE9
 15360                           wreg	equ	0xFE8
 15361                           fsr1h	equ	0xFE2
 15362                           fsr1l	equ	0xFE1
 15363                           bsr	equ	0xFE0
 15364                           indf2	equ	0xFDF
 15365                           postinc2	equ	0xFDE
 15366                           postdec2	equ	0xFDD
 15367                           fsr2h	equ	0xFDA
 15368                           fsr2l	equ	0xFD9
 15369                           status	equ	0xFD8
 15370                           
 15371 ;; *************** function i1___asftsub *****************
 15372 ;; Defined at:
 15373 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
 15374 ;; Parameters:    Size  Location     Type
 15375 ;;  __asftsub       2   44[COMRAM] PTR float 
 15376 ;;		 -> sprintf@fval(3), 
 15377 ;;  __asftsub       3   46[COMRAM] float 
 15378 ;; Auto vars:     Size  Location     Type
 15379 ;;		None
 15380 ;; Return value:  Size  Location     Type
 15381 ;;                  3   44[COMRAM] float 
 15382 ;; Registers used:
 15383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15384 ;; Tracked objects:
 15385 ;;		On entry : 0/0
 15386 ;;		On exit  : 0/0
 15387 ;;		Unchanged: 0/0
 15388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15389 ;;      Params:         5       0       0       0       0       0       0       0       0
 15390 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15391 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15392 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15393 ;;Total ram usage:        5 bytes
 15394 ;; Hardware stack levels used:    1
 15395 ;; Hardware stack levels required when called:    6
 15396 ;; This function calls:
 15397 ;;		i1___ftsub
 15398 ;; This function is called by:
 15399 ;;		i1_sprintf
 15400 ;; This function uses a non-reentrant model
 15401 ;;
 15402                           
 15403                           	psect	text53
 15404  005FEA                     __ptext53:
 15405                           	opt stack 0
 15406  005FEA                     i1___asftsub:
 15407                           	opt stack 17
 15408                           
 15409                           ;	Return value of i1___asftsub is never used
 15410                           
 15411                           ;incstack = 0
 15412                           ;incstack = 0
 15413  005FEA  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 15414  005FEE  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 15415  005FF2  CFDE F027          	movff	postinc2,?i1___ftsub
 15416  005FF6  CFDE F028          	movff	postinc2,?i1___ftsub+1
 15417  005FFA  CFDD F029          	movff	postdec2,?i1___ftsub+2
 15418  005FFE  C02F  F02A         	movff	i1___asftsub@f2,?i1___ftsub+3
 15419  006002  C030  F02B         	movff	i1___asftsub@f2+1,?i1___ftsub+4
 15420  006006  C031  F02C         	movff	i1___asftsub@f2+2,?i1___ftsub+5
 15421  00600A  ECC3  F030         	call	i1___ftsub	;wreg free
 15422  00600E  C02D  FFD9         	movff	i1___asftsub@f1p,fsr2l
 15423  006012  C02E  FFDA         	movff	i1___asftsub@f1p+1,fsr2h
 15424  006016  C027  FFDE         	movff	?i1___ftsub,postinc2
 15425  00601A  C028  FFDE         	movff	?i1___ftsub+1,postinc2
 15426  00601E  C029  FFDD         	movff	?i1___ftsub+2,postdec2
 15427  006022  52DD               	movf	postdec2,f,c
 15428  006024  0012               	return	
 15429  006026                     __end_ofi1___asftsub:
 15430                           	opt stack 0
 15431                           pclatu	equ	0xFFB
 15432                           pclath	equ	0xFFA
 15433                           tblptru	equ	0xFF8
 15434                           tblptrh	equ	0xFF7
 15435                           tblptrl	equ	0xFF6
 15436                           tablat	equ	0xFF5
 15437                           prodh	equ	0xFF4
 15438                           prodl	equ	0xFF3
 15439                           intcon	equ	0xFF2
 15440                           intcon2	equ	0xFF1
 15441                           postinc0	equ	0xFEE
 15442                           fsr0h	equ	0xFEA
 15443                           fsr0l	equ	0xFE9
 15444                           wreg	equ	0xFE8
 15445                           fsr1h	equ	0xFE2
 15446                           fsr1l	equ	0xFE1
 15447                           bsr	equ	0xFE0
 15448                           indf2	equ	0xFDF
 15449                           postinc2	equ	0xFDE
 15450                           postdec2	equ	0xFDD
 15451                           fsr2h	equ	0xFDA
 15452                           fsr2l	equ	0xFD9
 15453                           status	equ	0xFD8
 15454                           
 15455 ;; *************** function i1___ftsub *****************
 15456 ;; Defined at:
 15457 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftsub.c"
 15458 ;; Parameters:    Size  Location     Type
 15459 ;;  __ftsub         3   38[COMRAM] float 
 15460 ;;  __ftsub         3   41[COMRAM] float 
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;		None
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  3   38[COMRAM] float 
 15465 ;; Registers used:
 15466 ;;		wreg, status,2, status,0, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/0
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15472 ;;      Params:         6       0       0       0       0       0       0       0       0
 15473 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15474 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15475 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15476 ;;Total ram usage:        6 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; Hardware stack levels required when called:    5
 15479 ;; This function calls:
 15480 ;;		i1___ftadd
 15481 ;; This function is called by:
 15482 ;;		i1___asftsub
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           	psect	text54
 15487  006186                     __ptext54:
 15488                           	opt stack 0
 15489  006186                     i1___ftsub:
 15490                           	opt stack 17
 15491                           
 15492                           ;incstack = 0
 15493                           ;incstack = 0
 15494  006186  0E00               	movlw	0
 15495  006188  1A2A               	xorwf	i1___ftsub@f2,f,c
 15496  00618A  0E00               	movlw	0
 15497  00618C  1A2B               	xorwf	i1___ftsub@f2+1,f,c
 15498  00618E  0E80               	movlw	128
 15499  006190  1A2C               	xorwf	i1___ftsub@f2+2,f,c
 15500  006192  C027  F019         	movff	i1___ftsub@f1,?i1___ftadd
 15501  006196  C028  F01A         	movff	i1___ftsub@f1+1,?i1___ftadd+1
 15502  00619A  C029  F01B         	movff	i1___ftsub@f1+2,?i1___ftadd+2
 15503  00619E  C02A  F01C         	movff	i1___ftsub@f2,?i1___ftadd+3
 15504  0061A2  C02B  F01D         	movff	i1___ftsub@f2+1,?i1___ftadd+4
 15505  0061A6  C02C  F01E         	movff	i1___ftsub@f2+2,?i1___ftadd+5
 15506  0061AA  ECC2  F01E         	call	i1___ftadd	;wreg free
 15507  0061AE  C01B  F029         	movff	?i1___ftadd+2,?i1___ftsub+2
 15508  0061B2  C01A  F028         	movff	?i1___ftadd+1,?i1___ftsub+1
 15509  0061B6  C019  F027         	movff	?i1___ftadd,?i1___ftsub
 15510  0061BA  0012               	return	
 15511  0061BC                     __end_ofi1___ftsub:
 15512                           	opt stack 0
 15513                           pclatu	equ	0xFFB
 15514                           pclath	equ	0xFFA
 15515                           tblptru	equ	0xFF8
 15516                           tblptrh	equ	0xFF7
 15517                           tblptrl	equ	0xFF6
 15518                           tablat	equ	0xFF5
 15519                           prodh	equ	0xFF4
 15520                           prodl	equ	0xFF3
 15521                           intcon	equ	0xFF2
 15522                           intcon2	equ	0xFF1
 15523                           postinc0	equ	0xFEE
 15524                           fsr0h	equ	0xFEA
 15525                           fsr0l	equ	0xFE9
 15526                           wreg	equ	0xFE8
 15527                           fsr1h	equ	0xFE2
 15528                           fsr1l	equ	0xFE1
 15529                           bsr	equ	0xFE0
 15530                           indf2	equ	0xFDF
 15531                           postinc2	equ	0xFDE
 15532                           postdec2	equ	0xFDD
 15533                           fsr2h	equ	0xFDA
 15534                           fsr2l	equ	0xFD9
 15535                           status	equ	0xFD8
 15536                           
 15537 ;; *************** function i1___asftmul *****************
 15538 ;; Defined at:
 15539 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
 15540 ;; Parameters:    Size  Location     Type
 15541 ;;  __asftmul       2    0[BANK0 ] PTR float 
 15542 ;;		 -> sprintf@integ(3), 
 15543 ;;  __asftmul       3    2[BANK0 ] float 
 15544 ;; Auto vars:     Size  Location     Type
 15545 ;;		None
 15546 ;; Return value:  Size  Location     Type
 15547 ;;                  3    0[BANK0 ] float 
 15548 ;; Registers used:
 15549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15550 ;; Tracked objects:
 15551 ;;		On entry : 0/0
 15552 ;;		On exit  : 0/0
 15553 ;;		Unchanged: 0/0
 15554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15555 ;;      Params:         0       5       0       0       0       0       0       0       0
 15556 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15557 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15558 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15559 ;;Total ram usage:        5 bytes
 15560 ;; Hardware stack levels used:    1
 15561 ;; Hardware stack levels required when called:    5
 15562 ;; This function calls:
 15563 ;;		i1___ftmul
 15564 ;; This function is called by:
 15565 ;;		i1_sprintf
 15566 ;; This function uses a non-reentrant model
 15567 ;;
 15568                           
 15569                           	psect	text55
 15570  006026                     __ptext55:
 15571                           	opt stack 0
 15572  006026                     i1___asftmul:
 15573                           	opt stack 18
 15574                           
 15575                           ;	Return value of i1___asftmul is never used
 15576                           
 15577                           ;incstack = 0
 15578                           ;incstack = 0
 15579  006026  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 15580  00602A  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 15581  00602E  CFDE F036          	movff	postinc2,?i1___ftmul
 15582  006032  CFDE F037          	movff	postinc2,?i1___ftmul+1
 15583  006036  CFDD F038          	movff	postdec2,?i1___ftmul+2
 15584  00603A  C062  F039         	movff	i1___asftmul@f2,?i1___ftmul+3
 15585  00603E  C063  F03A         	movff	i1___asftmul@f2+1,?i1___ftmul+4
 15586  006042  C064  F03B         	movff	i1___asftmul@f2+2,?i1___ftmul+5
 15587  006046  EC84  F024         	call	i1___ftmul	;wreg free
 15588  00604A  C060  FFD9         	movff	i1___asftmul@f1p,fsr2l
 15589  00604E  C061  FFDA         	movff	i1___asftmul@f1p+1,fsr2h
 15590  006052  C036  FFDE         	movff	?i1___ftmul,postinc2
 15591  006056  C037  FFDE         	movff	?i1___ftmul+1,postinc2
 15592  00605A  C038  FFDD         	movff	?i1___ftmul+2,postdec2
 15593  00605E  52DD               	movf	postdec2,f,c
 15594  006060  0012               	return	
 15595  006062                     __end_ofi1___asftmul:
 15596                           	opt stack 0
 15597                           pclatu	equ	0xFFB
 15598                           pclath	equ	0xFFA
 15599                           tblptru	equ	0xFF8
 15600                           tblptrh	equ	0xFF7
 15601                           tblptrl	equ	0xFF6
 15602                           tablat	equ	0xFF5
 15603                           prodh	equ	0xFF4
 15604                           prodl	equ	0xFF3
 15605                           intcon	equ	0xFF2
 15606                           intcon2	equ	0xFF1
 15607                           postinc0	equ	0xFEE
 15608                           fsr0h	equ	0xFEA
 15609                           fsr0l	equ	0xFE9
 15610                           wreg	equ	0xFE8
 15611                           fsr1h	equ	0xFE2
 15612                           fsr1l	equ	0xFE1
 15613                           bsr	equ	0xFE0
 15614                           indf2	equ	0xFDF
 15615                           postinc2	equ	0xFDE
 15616                           postdec2	equ	0xFDD
 15617                           fsr2h	equ	0xFDA
 15618                           fsr2l	equ	0xFD9
 15619                           status	equ	0xFD8
 15620                           
 15621 ;; *************** function i1___asftadd *****************
 15622 ;; Defined at:
 15623 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\asftadd.c"
 15624 ;; Parameters:    Size  Location     Type
 15625 ;;  __asftadd       2   12[BANK0 ] PTR float 
 15626 ;;		 -> sprintf@fval(3), 
 15627 ;;  __asftadd       3   14[BANK0 ] float 
 15628 ;; Auto vars:     Size  Location     Type
 15629 ;;		None
 15630 ;; Return value:  Size  Location     Type
 15631 ;;                  3   12[BANK0 ] float 
 15632 ;; Registers used:
 15633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15634 ;; Tracked objects:
 15635 ;;		On entry : 0/0
 15636 ;;		On exit  : 0/0
 15637 ;;		Unchanged: 0/0
 15638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15639 ;;      Params:         0       5       0       0       0       0       0       0       0
 15640 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15641 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15642 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15643 ;;Total ram usage:        5 bytes
 15644 ;; Hardware stack levels used:    1
 15645 ;; Hardware stack levels required when called:    5
 15646 ;; This function calls:
 15647 ;;		i1___ftadd
 15648 ;; This function is called by:
 15649 ;;		i1_sprintf
 15650 ;; This function uses a non-reentrant model
 15651 ;;
 15652                           
 15653                           	psect	text56
 15654  006062                     __ptext56:
 15655                           	opt stack 0
 15656  006062                     i1___asftadd:
 15657                           	opt stack 18
 15658                           
 15659                           ;	Return value of i1___asftadd is never used
 15660                           
 15661                           ;incstack = 0
 15662                           ;incstack = 0
 15663  006062  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 15664  006066  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 15665  00606A  CFDE F019          	movff	postinc2,?i1___ftadd
 15666  00606E  CFDE F01A          	movff	postinc2,?i1___ftadd+1
 15667  006072  CFDD F01B          	movff	postdec2,?i1___ftadd+2
 15668  006076  C06E  F01C         	movff	i1___asftadd@f2,?i1___ftadd+3
 15669  00607A  C06F  F01D         	movff	i1___asftadd@f2+1,?i1___ftadd+4
 15670  00607E  C070  F01E         	movff	i1___asftadd@f2+2,?i1___ftadd+5
 15671  006082  ECC2  F01E         	call	i1___ftadd	;wreg free
 15672  006086  C06C  FFD9         	movff	i1___asftadd@f1p,fsr2l
 15673  00608A  C06D  FFDA         	movff	i1___asftadd@f1p+1,fsr2h
 15674  00608E  C019  FFDE         	movff	?i1___ftadd,postinc2
 15675  006092  C01A  FFDE         	movff	?i1___ftadd+1,postinc2
 15676  006096  C01B  FFDD         	movff	?i1___ftadd+2,postdec2
 15677  00609A  52DD               	movf	postdec2,f,c
 15678  00609C  0012               	return	
 15679  00609E                     __end_ofi1___asftadd:
 15680                           	opt stack 0
 15681                           pclatu	equ	0xFFB
 15682                           pclath	equ	0xFFA
 15683                           tblptru	equ	0xFF8
 15684                           tblptrh	equ	0xFF7
 15685                           tblptrl	equ	0xFF6
 15686                           tablat	equ	0xFF5
 15687                           prodh	equ	0xFF4
 15688                           prodl	equ	0xFF3
 15689                           intcon	equ	0xFF2
 15690                           intcon2	equ	0xFF1
 15691                           postinc0	equ	0xFEE
 15692                           fsr0h	equ	0xFEA
 15693                           fsr0l	equ	0xFE9
 15694                           wreg	equ	0xFE8
 15695                           fsr1h	equ	0xFE2
 15696                           fsr1l	equ	0xFE1
 15697                           bsr	equ	0xFE0
 15698                           indf2	equ	0xFDF
 15699                           postinc2	equ	0xFDE
 15700                           postdec2	equ	0xFDD
 15701                           fsr2h	equ	0xFDA
 15702                           fsr2l	equ	0xFD9
 15703                           status	equ	0xFD8
 15704                           
 15705 ;; *************** function i1___ftadd *****************
 15706 ;; Defined at:
 15707 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
 15708 ;; Parameters:    Size  Location     Type
 15709 ;;  __ftadd         3   24[COMRAM] float 
 15710 ;;  __ftadd         3   27[COMRAM] float 
 15711 ;; Auto vars:     Size  Location     Type
 15712 ;;  __ftadd         1   37[COMRAM] unsigned char 
 15713 ;;  __ftadd         1   36[COMRAM] unsigned char 
 15714 ;;  __ftadd         1   35[COMRAM] unsigned char 
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  3   24[COMRAM] float 
 15717 ;; Registers used:
 15718 ;;		wreg, status,2, status,0, cstack
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15724 ;;      Params:         6       0       0       0       0       0       0       0       0
 15725 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15726 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15727 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15728 ;;Total ram usage:       14 bytes
 15729 ;; Hardware stack levels used:    1
 15730 ;; Hardware stack levels required when called:    4
 15731 ;; This function calls:
 15732 ;;		i1___ftpack
 15733 ;; This function is called by:
 15734 ;;		i1___asftadd
 15735 ;;		i1___ftsub
 15736 ;; This function uses a non-reentrant model
 15737 ;;
 15738                           
 15739                           	psect	text57
 15740  003D84                     __ptext57:
 15741                           	opt stack 0
 15742  003D84                     i1___ftadd:
 15743                           	opt stack 17
 15744                           
 15745                           ;incstack = 0
 15746                           ;incstack = 0
 15747  003D84  0E0F               	movlw	15
 15748  003D86  6E1F               	movwf	??i1___ftadd& (0+255),c
 15749  003D88  C019  F020         	movff	i1___ftadd@f1,??i1___ftadd+1
 15750  003D8C  C01A  F021         	movff	i1___ftadd@f1+1,??i1___ftadd+2
 15751  003D90  C01B  F022         	movff	i1___ftadd@f1+2,??i1___ftadd+3
 15752  003D94  281F               	incf	??i1___ftadd,w,c
 15753  003D96  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 15754  003D98  D004               	goto	i1u808_20
 15755  003D9A                     i1u808_25:
 15756  003D9A  90D8               	bcf	status,0,c
 15757  003D9C  3222               	rrcf	??i1___ftadd+3,f,c
 15758  003D9E  3221               	rrcf	??i1___ftadd+2,f,c
 15759  003DA0  3220               	rrcf	??i1___ftadd+1,f,c
 15760  003DA2                     i1u808_20:
 15761  003DA2  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 15762  003DA4  D7FA               	goto	i1u808_25
 15763  003DA6  5020               	movf	??i1___ftadd+1,w,c
 15764  003DA8  6E26               	movwf	i1___ftadd@exp1,c
 15765  003DAA  0E0F               	movlw	15
 15766  003DAC  6E1F               	movwf	??i1___ftadd& (0+255),c
 15767  003DAE  C01C  F020         	movff	i1___ftadd@f2,??i1___ftadd+1
 15768  003DB2  C01D  F021         	movff	i1___ftadd@f2+1,??i1___ftadd+2
 15769  003DB6  C01E  F022         	movff	i1___ftadd@f2+2,??i1___ftadd+3
 15770  003DBA  281F               	incf	??i1___ftadd,w,c
 15771  003DBC  6E23               	movwf	(??i1___ftadd+4)& (0+255),c
 15772  003DBE  D004               	goto	i1u809_20
 15773  003DC0                     i1u809_25:
 15774  003DC0  90D8               	bcf	status,0,c
 15775  003DC2  3222               	rrcf	??i1___ftadd+3,f,c
 15776  003DC4  3221               	rrcf	??i1___ftadd+2,f,c
 15777  003DC6  3220               	rrcf	??i1___ftadd+1,f,c
 15778  003DC8                     i1u809_20:
 15779  003DC8  2E23               	decfsz	(??i1___ftadd+4)& (0+255),f,c
 15780  003DCA  D7FA               	goto	i1u809_25
 15781  003DCC  5020               	movf	??i1___ftadd+1,w,c
 15782  003DCE  6E25               	movwf	i1___ftadd@exp2,c
 15783  003DD0  5026               	movf	i1___ftadd@exp1,w,c
 15784  003DD2  B4D8               	btfsc	status,2,c
 15785  003DD4  D00B               	goto	i1l710
 15786  003DD6  5025               	movf	i1___ftadd@exp2,w,c
 15787  003DD8  6026               	cpfslt	i1___ftadd@exp1,c
 15788  003DDA  D00F               	goto	i1l9271
 15789  003DDC  5026               	movf	i1___ftadd@exp1,w,c
 15790  003DDE  0800               	sublw	0
 15791  003DE0  2425               	addwf	i1___ftadd@exp2,w,c
 15792  003DE2  6E1F               	movwf	??i1___ftadd& (0+255),c
 15793  003DE4  0E19               	movlw	25
 15794  003DE6  5C1F               	subwf	??i1___ftadd,w,c
 15795  003DE8  A0D8               	btfss	status,0,c
 15796  003DEA  D007               	goto	i1l9271
 15797  003DEC                     i1l710:
 15798  003DEC  C01C  F019         	movff	i1___ftadd@f2,?i1___ftadd
 15799  003DF0  C01D  F01A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 15800  003DF4  C01E  F01B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 15801  003DF8  D0AA               	goto	i1l711
 15802  003DFA                     i1l9271:
 15803  003DFA  5025               	movf	i1___ftadd@exp2,w,c
 15804  003DFC  B4D8               	btfsc	status,2,c
 15805  003DFE  D00B               	goto	i1l714
 15806  003E00  5026               	movf	i1___ftadd@exp1,w,c
 15807  003E02  6025               	cpfslt	i1___ftadd@exp2,c
 15808  003E04  D00F               	goto	i1l9277
 15809  003E06  5025               	movf	i1___ftadd@exp2,w,c
 15810  003E08  0800               	sublw	0
 15811  003E0A  2426               	addwf	i1___ftadd@exp1,w,c
 15812  003E0C  6E1F               	movwf	??i1___ftadd& (0+255),c
 15813  003E0E  0E19               	movlw	25
 15814  003E10  5C1F               	subwf	??i1___ftadd,w,c
 15815  003E12  A0D8               	btfss	status,0,c
 15816  003E14  D007               	goto	i1l9277
 15817  003E16                     i1l714:
 15818  003E16  C019  F019         	movff	i1___ftadd@f1,?i1___ftadd
 15819  003E1A  C01A  F01A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 15820  003E1E  C01B  F01B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 15821  003E22  D095               	goto	i1l711
 15822  003E24                     i1l9277:
 15823  003E24  6E1F               	movwf	??i1___ftadd& (0+255),c
 15824  003E26  0E06               	movlw	6
 15825  003E28  6E24               	movwf	i1___ftadd@sign,c
 15826  003E2A  501F               	movf	??i1___ftadd& (0+255),w,c
 15827  003E2C  BE1B               	btfsc	i1___ftadd@f1+2,7,c
 15828  003E2E  8E24               	bsf	i1___ftadd@sign,7,c
 15829  003E30  BE1E               	btfsc	i1___ftadd@f2+2,7,c
 15830  003E32  8C24               	bsf	i1___ftadd@sign,6,c
 15831  003E34  8E1A               	bsf	i1___ftadd@f1+1,7,c
 15832  003E36  0EFF               	movlw	255
 15833  003E38  1619               	andwf	i1___ftadd@f1,f,c
 15834  003E3A  0EFF               	movlw	255
 15835  003E3C  161A               	andwf	i1___ftadd@f1+1,f,c
 15836  003E3E  0E00               	movlw	0
 15837  003E40  161B               	andwf	i1___ftadd@f1+2,f,c
 15838  003E42  8E1D               	bsf	i1___ftadd@f2+1,7,c
 15839  003E44  0EFF               	movlw	255
 15840  003E46  161C               	andwf	i1___ftadd@f2,f,c
 15841  003E48  0EFF               	movlw	255
 15842  003E4A  161D               	andwf	i1___ftadd@f2+1,f,c
 15843  003E4C  0E00               	movlw	0
 15844  003E4E  161E               	andwf	i1___ftadd@f2+2,f,c
 15845  003E50  5025               	movf	i1___ftadd@exp2,w,c
 15846  003E52  6026               	cpfslt	i1___ftadd@exp1,c
 15847  003E54  D018               	goto	i1l9303
 15848  003E56                     i1l9293:
 15849  003E56  90D8               	bcf	status,0,c
 15850  003E58  361C               	rlcf	i1___ftadd@f2,f,c
 15851  003E5A  361D               	rlcf	i1___ftadd@f2+1,f,c
 15852  003E5C  361E               	rlcf	i1___ftadd@f2+2,f,c
 15853  003E5E  0625               	decf	i1___ftadd@exp2,f,c
 15854  003E60  5025               	movf	i1___ftadd@exp2,w,c
 15855  003E62  1826               	xorwf	i1___ftadd@exp1,w,c
 15856  003E64  B4D8               	btfsc	status,2,c
 15857  003E66  D00B               	goto	i1l9301
 15858  003E68  0624               	decf	i1___ftadd@sign,f,c
 15859  003E6A  5024               	movf	i1___ftadd@sign& (0+255),w,c
 15860  003E6C  0B07               	andlw	7
 15861  003E6E  B4D8               	btfsc	status,2,c
 15862  003E70  D006               	goto	i1l9301
 15863  003E72  D7F1               	goto	i1l9293
 15864  003E74                     i1l9299:
 15865  003E74  90D8               	bcf	status,0,c
 15866  003E76  321B               	rrcf	i1___ftadd@f1+2,f,c
 15867  003E78  321A               	rrcf	i1___ftadd@f1+1,f,c
 15868  003E7A  3219               	rrcf	i1___ftadd@f1,f,c
 15869  003E7C  2A26               	incf	i1___ftadd@exp1,f,c
 15870  003E7E                     i1l9301:
 15871  003E7E  5025               	movf	i1___ftadd@exp2,w,c
 15872  003E80  6226               	cpfseq	i1___ftadd@exp1,c
 15873  003E82  D7F8               	goto	i1l9299
 15874  003E84  D01A               	goto	i1l725
 15875  003E86                     i1l9303:
 15876  003E86  5026               	movf	i1___ftadd@exp1,w,c
 15877  003E88  6025               	cpfslt	i1___ftadd@exp2,c
 15878  003E8A  D017               	goto	i1l725
 15879  003E8C                     i1l9305:
 15880  003E8C  90D8               	bcf	status,0,c
 15881  003E8E  3619               	rlcf	i1___ftadd@f1,f,c
 15882  003E90  361A               	rlcf	i1___ftadd@f1+1,f,c
 15883  003E92  361B               	rlcf	i1___ftadd@f1+2,f,c
 15884  003E94  0626               	decf	i1___ftadd@exp1,f,c
 15885  003E96  5025               	movf	i1___ftadd@exp2,w,c
 15886  003E98  1826               	xorwf	i1___ftadd@exp1,w,c
 15887  003E9A  B4D8               	btfsc	status,2,c
 15888  003E9C  D00B               	goto	i1l9313
 15889  003E9E  0624               	decf	i1___ftadd@sign,f,c
 15890  003EA0  5024               	movf	i1___ftadd@sign& (0+255),w,c
 15891  003EA2  0B07               	andlw	7
 15892  003EA4  B4D8               	btfsc	status,2,c
 15893  003EA6  D006               	goto	i1l9313
 15894  003EA8  D7F1               	goto	i1l9305
 15895  003EAA                     i1l9311:
 15896  003EAA  90D8               	bcf	status,0,c
 15897  003EAC  321E               	rrcf	i1___ftadd@f2+2,f,c
 15898  003EAE  321D               	rrcf	i1___ftadd@f2+1,f,c
 15899  003EB0  321C               	rrcf	i1___ftadd@f2,f,c
 15900  003EB2  2A25               	incf	i1___ftadd@exp2,f,c
 15901  003EB4                     i1l9313:
 15902  003EB4  5025               	movf	i1___ftadd@exp2,w,c
 15903  003EB6  6226               	cpfseq	i1___ftadd@exp1,c
 15904  003EB8  D7F8               	goto	i1l9311
 15905  003EBA                     i1l725:
 15906  003EBA  AE24               	btfss	i1___ftadd@sign,7,c
 15907  003EBC  D00C               	goto	i1l734
 15908  003EBE  0EFF               	movlw	255
 15909  003EC0  1A19               	xorwf	i1___ftadd@f1,f,c
 15910  003EC2  0EFF               	movlw	255
 15911  003EC4  1A1A               	xorwf	i1___ftadd@f1+1,f,c
 15912  003EC6  0EFF               	movlw	255
 15913  003EC8  1A1B               	xorwf	i1___ftadd@f1+2,f,c
 15914  003ECA  0E01               	movlw	1
 15915  003ECC  2619               	addwf	i1___ftadd@f1,f,c
 15916  003ECE  0E00               	movlw	0
 15917  003ED0  221A               	addwfc	i1___ftadd@f1+1,f,c
 15918  003ED2  0E00               	movlw	0
 15919  003ED4  221B               	addwfc	i1___ftadd@f1+2,f,c
 15920  003ED6                     i1l734:
 15921  003ED6  AC24               	btfss	i1___ftadd@sign,6,c
 15922  003ED8  D00C               	goto	i1l9319
 15923  003EDA  0EFF               	movlw	255
 15924  003EDC  1A1C               	xorwf	i1___ftadd@f2,f,c
 15925  003EDE  0EFF               	movlw	255
 15926  003EE0  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 15927  003EE2  0EFF               	movlw	255
 15928  003EE4  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 15929  003EE6  0E01               	movlw	1
 15930  003EE8  261C               	addwf	i1___ftadd@f2,f,c
 15931  003EEA  0E00               	movlw	0
 15932  003EEC  221D               	addwfc	i1___ftadd@f2+1,f,c
 15933  003EEE  0E00               	movlw	0
 15934  003EF0  221E               	addwfc	i1___ftadd@f2+2,f,c
 15935  003EF2                     i1l9319:
 15936  003EF2  6E1F               	movwf	??i1___ftadd& (0+255),c
 15937  003EF4  0E00               	movlw	0
 15938  003EF6  6E24               	movwf	i1___ftadd@sign,c
 15939  003EF8  501F               	movf	??i1___ftadd& (0+255),w,c
 15940  003EFA  5019               	movf	i1___ftadd@f1,w,c
 15941  003EFC  261C               	addwf	i1___ftadd@f2,f,c
 15942  003EFE  501A               	movf	i1___ftadd@f1+1,w,c
 15943  003F00  221D               	addwfc	i1___ftadd@f2+1,f,c
 15944  003F02  501B               	movf	i1___ftadd@f1+2,w,c
 15945  003F04  221E               	addwfc	i1___ftadd@f2+2,f,c
 15946  003F06  AE1E               	btfss	i1___ftadd@f2+2,7,c
 15947  003F08  D010               	goto	i1l9329
 15948  003F0A  0EFF               	movlw	255
 15949  003F0C  1A1C               	xorwf	i1___ftadd@f2,f,c
 15950  003F0E  0EFF               	movlw	255
 15951  003F10  1A1D               	xorwf	i1___ftadd@f2+1,f,c
 15952  003F12  0EFF               	movlw	255
 15953  003F14  1A1E               	xorwf	i1___ftadd@f2+2,f,c
 15954  003F16  0E01               	movlw	1
 15955  003F18  261C               	addwf	i1___ftadd@f2,f,c
 15956  003F1A  0E00               	movlw	0
 15957  003F1C  221D               	addwfc	i1___ftadd@f2+1,f,c
 15958  003F1E  0E00               	movlw	0
 15959  003F20  221E               	addwfc	i1___ftadd@f2+2,f,c
 15960  003F22  6E1F               	movwf	??i1___ftadd& (0+255),c
 15961  003F24  0E01               	movlw	1
 15962  003F26  6E24               	movwf	i1___ftadd@sign,c
 15963  003F28  501F               	movf	??i1___ftadd& (0+255),w,c
 15964  003F2A                     i1l9329:
 15965  003F2A  C01C  F011         	movff	i1___ftadd@f2,?i1___ftpack
 15966  003F2E  C01D  F012         	movff	i1___ftadd@f2+1,?i1___ftpack+1
 15967  003F32  C01E  F013         	movff	i1___ftadd@f2+2,?i1___ftpack+2
 15968  003F36  C026  F014         	movff	i1___ftadd@exp1,?i1___ftpack+3
 15969  003F3A  C024  F015         	movff	i1___ftadd@sign,?i1___ftpack+4
 15970  003F3E  ECC3  F029         	call	i1___ftpack	;wreg free
 15971  003F42  C013  F01B         	movff	?i1___ftpack+2,?i1___ftadd+2
 15972  003F46  C012  F01A         	movff	?i1___ftpack+1,?i1___ftadd+1
 15973  003F4A  C011  F019         	movff	?i1___ftpack,?i1___ftadd
 15974  003F4E                     i1l711:
 15975  003F4E  0012               	return	
 15976  003F50                     __end_ofi1___ftadd:
 15977                           	opt stack 0
 15978                           pclatu	equ	0xFFB
 15979                           pclath	equ	0xFFA
 15980                           tblptru	equ	0xFF8
 15981                           tblptrh	equ	0xFF7
 15982                           tblptrl	equ	0xFF6
 15983                           tablat	equ	0xFF5
 15984                           prodh	equ	0xFF4
 15985                           prodl	equ	0xFF3
 15986                           intcon	equ	0xFF2
 15987                           intcon2	equ	0xFF1
 15988                           postinc0	equ	0xFEE
 15989                           fsr0h	equ	0xFEA
 15990                           fsr0l	equ	0xFE9
 15991                           wreg	equ	0xFE8
 15992                           fsr1h	equ	0xFE2
 15993                           fsr1l	equ	0xFE1
 15994                           bsr	equ	0xFE0
 15995                           indf2	equ	0xFDF
 15996                           postinc2	equ	0xFDE
 15997                           postdec2	equ	0xFDD
 15998                           fsr2h	equ	0xFDA
 15999                           fsr2l	equ	0xFD9
 16000                           status	equ	0xFD8
 16001                           
 16002 ;; *************** function i1_scale *****************
 16003 ;; Defined at:
 16004 ;;		line 426 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 16005 ;; Parameters:    Size  Location     Type
 16006 ;;  scale           1   70[COMRAM] char 
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;  scale           3    0        float 
 16009 ;;  scale           3    0        float 
 16010 ;; Return value:  Size  Location     Type
 16011 ;;                  3   70[COMRAM] float 
 16012 ;; Registers used:
 16013 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16014 ;; Tracked objects:
 16015 ;;		On entry : 0/0
 16016 ;;		On exit  : 0/0
 16017 ;;		Unchanged: 0/0
 16018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16019 ;;      Params:         3       0       0       0       0       0       0       0       0
 16020 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16021 ;;      Temps:          0       6       0       0       0       0       0       0       0
 16022 ;;      Totals:         3       9       0       0       0       0       0       0       0
 16023 ;;Total ram usage:       12 bytes
 16024 ;; Hardware stack levels used:    1
 16025 ;; Hardware stack levels required when called:    5
 16026 ;; This function calls:
 16027 ;;		i1___awdiv
 16028 ;;		i1___awmod
 16029 ;;		i1___ftmul
 16030 ;;		i1___wmul
 16031 ;; This function is called by:
 16032 ;;		i1_sprintf
 16033 ;; This function uses a non-reentrant model
 16034 ;;
 16035                           
 16036                           	psect	text58
 16037  002A28                     __ptext58:
 16038                           	opt stack 0
 16039  002A28                     i1_scale:
 16040                           	opt stack 18
 16041                           
 16042                           ;doprnt.c: 428: if(scl < 0) {
 16043                           
 16044                           ;incstack = 0
 16045                           ;incstack = 0
 16046  002A28  AE47               	btfss	i1scale@scl,7,c
 16047  002A2A  D108               	goto	i1l11145
 16048                           
 16049                           ;doprnt.c: 429: scl = -scl;
 16050  002A2C  6C47               	negf	i1scale@scl,c
 16051                           
 16052                           ;doprnt.c: 430: if(scl>=110)
 16053  002A2E  5047               	movf	i1scale@scl,w,c
 16054  002A30  0A80               	xorlw	128
 16055  002A32  0F12               	addlw	-238
 16056  002A34  A0D8               	btfss	status,0,c
 16057  002A36  D09D               	goto	i1l11135
 16058                           
 16059                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16060  002A38  0E00               	movlw	0
 16061  002A3A  6E24               	movwf	?i1___wmul+3,c
 16062  002A3C  0E03               	movlw	3
 16063  002A3E  6E23               	movwf	?i1___wmul+2,c
 16064  002A40  0E00               	movlw	0
 16065  002A42  6E1B               	movwf	?i1___awdiv+3,c
 16066  002A44  0E0A               	movlw	10
 16067  002A46  6E1A               	movwf	?i1___awdiv+2,c
 16068  002A48  0E00               	movlw	0
 16069  002A4A  6E14               	movwf	?i1___awmod+3,c
 16070  002A4C  0E64               	movlw	100
 16071  002A4E  6E13               	movwf	?i1___awmod+2,c
 16072  002A50  5047               	movf	i1scale@scl,w,c
 16073  002A52  6E11               	movwf	?i1___awmod,c
 16074  002A54  6A12               	clrf	?i1___awmod+1,c
 16075  002A56  BE11               	btfsc	?i1___awmod,7,c
 16076  002A58  0612               	decf	?i1___awmod+1,f,c
 16077  002A5A  EC4D  F02D         	call	i1___awmod	;wreg free
 16078  002A5E  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16079  002A62  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16080  002A66  ECB7  F02B         	call	i1___awdiv	;wreg free
 16081  002A6A  0E09               	movlw	9
 16082  002A6C  2418               	addwf	?i1___awdiv,w,c
 16083  002A6E  6E21               	movwf	?i1___wmul,c
 16084  002A70  0E00               	movlw	0
 16085  002A72  2019               	addwfc	?i1___awdiv+1,w,c
 16086  002A74  6E22               	movwf	?i1___wmul+1,c
 16087  002A76  EC89  F030         	call	i1___wmul	;wreg free
 16088  002A7A  0E28               	movlw	low __npowers_
 16089  002A7C  2421               	addwf	?i1___wmul,w,c
 16090  002A7E  6EF6               	movwf	tblptrl,c
 16091  002A80  0E08               	movlw	high __npowers_
 16092  002A82  2022               	addwfc	?i1___wmul+1,w,c
 16093  002A84  6EF7               	movwf	tblptrh,c
 16094  002A86  0009               	tblrd		*+
 16095  002A88  CFF5 F060          	movff	tablat,??i1_scale
 16096  002A8C  0009               	tblrd		*+
 16097  002A8E  CFF5 F061          	movff	tablat,??i1_scale+1
 16098  002A92  0009               	tblrd		*+
 16099  002A94  CFF5 F062          	movff	tablat,??i1_scale+2
 16100  002A98  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16101  002A9C  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16102  002AA0  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16103  002AA4  0E00               	movlw	0
 16104  002AA6  6E24               	movwf	?i1___wmul+3,c
 16105  002AA8  0E03               	movlw	3
 16106  002AAA  6E23               	movwf	?i1___wmul+2,c
 16107  002AAC  0E00               	movlw	0
 16108  002AAE  6E1B               	movwf	?i1___awdiv+3,c
 16109  002AB0  0E64               	movlw	100
 16110  002AB2  6E1A               	movwf	?i1___awdiv+2,c
 16111  002AB4  5047               	movf	i1scale@scl,w,c
 16112  002AB6  6E18               	movwf	?i1___awdiv,c
 16113  002AB8  6A19               	clrf	?i1___awdiv+1,c
 16114  002ABA  BE18               	btfsc	?i1___awdiv,7,c
 16115  002ABC  0619               	decf	?i1___awdiv+1,f,c
 16116  002ABE  ECB7  F02B         	call	i1___awdiv	;wreg free
 16117  002AC2  0E12               	movlw	18
 16118  002AC4  2418               	addwf	?i1___awdiv,w,c
 16119  002AC6  6E21               	movwf	?i1___wmul,c
 16120  002AC8  0E00               	movlw	0
 16121  002ACA  2019               	addwfc	?i1___awdiv+1,w,c
 16122  002ACC  6E22               	movwf	?i1___wmul+1,c
 16123  002ACE  EC89  F030         	call	i1___wmul	;wreg free
 16124  002AD2  0E28               	movlw	low __npowers_
 16125  002AD4  2421               	addwf	?i1___wmul,w,c
 16126  002AD6  6EF6               	movwf	tblptrl,c
 16127  002AD8  0E08               	movlw	high __npowers_
 16128  002ADA  2022               	addwfc	?i1___wmul+1,w,c
 16129  002ADC  6EF7               	movwf	tblptrh,c
 16130  002ADE  0009               	tblrd		*+
 16131  002AE0  CFF5 F063          	movff	tablat,??i1_scale+3
 16132  002AE4  0009               	tblrd		*+
 16133  002AE6  CFF5 F064          	movff	tablat,??i1_scale+4
 16134  002AEA  0009               	tblrd		*+
 16135  002AEC  CFF5 F065          	movff	tablat,??i1_scale+5
 16136  002AF0  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 16137  002AF4  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 16138  002AF8  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 16139  002AFC  EC84  F024         	call	i1___ftmul	;wreg free
 16140  002B00  C038  F068         	movff	?i1___ftmul+2,i1_scale$1828+2
 16141  002B04  C037  F067         	movff	?i1___ftmul+1,i1_scale$1828+1
 16142  002B08  C036  F066         	movff	?i1___ftmul,i1_scale$1828
 16143                           
 16144                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16145  002B0C  C066  F036         	movff	i1_scale$1828,?i1___ftmul
 16146  002B10  C067  F037         	movff	i1_scale$1828+1,?i1___ftmul+1
 16147  002B14  C068  F038         	movff	i1_scale$1828+2,?i1___ftmul+2
 16148  002B18  0E00               	movlw	0
 16149  002B1A  6E24               	movwf	?i1___wmul+3,c
 16150  002B1C  0E03               	movlw	3
 16151  002B1E  6E23               	movwf	?i1___wmul+2,c
 16152  002B20  0E00               	movlw	0
 16153  002B22  6E14               	movwf	?i1___awmod+3,c
 16154  002B24  0E0A               	movlw	10
 16155  002B26  6E13               	movwf	?i1___awmod+2,c
 16156  002B28  5047               	movf	i1scale@scl,w,c
 16157  002B2A  6E11               	movwf	?i1___awmod,c
 16158  002B2C  6A12               	clrf	?i1___awmod+1,c
 16159  002B2E  BE11               	btfsc	?i1___awmod,7,c
 16160  002B30  0612               	decf	?i1___awmod+1,f,c
 16161  002B32  EC4D  F02D         	call	i1___awmod	;wreg free
 16162  002B36  C011  F021         	movff	?i1___awmod,?i1___wmul
 16163  002B3A  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16164  002B3E  EC89  F030         	call	i1___wmul	;wreg free
 16165  002B42  0E28               	movlw	low __npowers_
 16166  002B44  2421               	addwf	?i1___wmul,w,c
 16167  002B46  6EF6               	movwf	tblptrl,c
 16168  002B48  0E08               	movlw	high __npowers_
 16169  002B4A  2022               	addwfc	?i1___wmul+1,w,c
 16170  002B4C  6EF7               	movwf	tblptrh,c
 16171  002B4E  0009               	tblrd		*+
 16172  002B50  CFF5 F060          	movff	tablat,??i1_scale
 16173  002B54  0009               	tblrd		*+
 16174  002B56  CFF5 F061          	movff	tablat,??i1_scale+1
 16175  002B5A  0009               	tblrd		*+
 16176  002B5C  CFF5 F062          	movff	tablat,??i1_scale+2
 16177  002B60  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16178  002B64  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16179  002B68  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16180  002B6C  EC84  F024         	call	i1___ftmul	;wreg free
 16181  002B70  D164               	goto	L24
 16182  002B72                     i1l11135:
 16183                           
 16184                           ;doprnt.c: 432: else if(scl > 10)
 16185  002B72  5047               	movf	i1scale@scl,w,c
 16186  002B74  0A80               	xorlw	128
 16187  002B76  0F75               	addlw	-139
 16188  002B78  A0D8               	btfss	status,0,c
 16189  002B7A  D059               	goto	i1l11141
 16190                           
 16191                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 16192  002B7C  0E00               	movlw	0
 16193  002B7E  6E24               	movwf	?i1___wmul+3,c
 16194  002B80  0E03               	movlw	3
 16195  002B82  6E23               	movwf	?i1___wmul+2,c
 16196  002B84  0E00               	movlw	0
 16197  002B86  6E1B               	movwf	?i1___awdiv+3,c
 16198  002B88  0E0A               	movlw	10
 16199  002B8A  6E1A               	movwf	?i1___awdiv+2,c
 16200  002B8C  5047               	movf	i1scale@scl,w,c
 16201  002B8E  6E18               	movwf	?i1___awdiv,c
 16202  002B90  6A19               	clrf	?i1___awdiv+1,c
 16203  002B92  BE18               	btfsc	?i1___awdiv,7,c
 16204  002B94  0619               	decf	?i1___awdiv+1,f,c
 16205  002B96  ECB7  F02B         	call	i1___awdiv	;wreg free
 16206  002B9A  0E09               	movlw	9
 16207  002B9C  2418               	addwf	?i1___awdiv,w,c
 16208  002B9E  6E21               	movwf	?i1___wmul,c
 16209  002BA0  0E00               	movlw	0
 16210  002BA2  2019               	addwfc	?i1___awdiv+1,w,c
 16211  002BA4  6E22               	movwf	?i1___wmul+1,c
 16212  002BA6  EC89  F030         	call	i1___wmul	;wreg free
 16213  002BAA  0E28               	movlw	low __npowers_
 16214  002BAC  2421               	addwf	?i1___wmul,w,c
 16215  002BAE  6EF6               	movwf	tblptrl,c
 16216  002BB0  0E08               	movlw	high __npowers_
 16217  002BB2  2022               	addwfc	?i1___wmul+1,w,c
 16218  002BB4  6EF7               	movwf	tblptrh,c
 16219  002BB6  0009               	tblrd		*+
 16220  002BB8  CFF5 F060          	movff	tablat,??i1_scale
 16221  002BBC  0009               	tblrd		*+
 16222  002BBE  CFF5 F061          	movff	tablat,??i1_scale+1
 16223  002BC2  0009               	tblrd		*+
 16224  002BC4  CFF5 F062          	movff	tablat,??i1_scale+2
 16225  002BC8  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 16226  002BCC  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 16227  002BD0  C060  F036         	movff	??i1_scale,?i1___ftmul
 16228  002BD4  0E00               	movlw	0
 16229  002BD6  6E24               	movwf	?i1___wmul+3,c
 16230  002BD8  0E03               	movlw	3
 16231  002BDA  6E23               	movwf	?i1___wmul+2,c
 16232  002BDC  0E00               	movlw	0
 16233  002BDE  6E14               	movwf	?i1___awmod+3,c
 16234  002BE0  0E0A               	movlw	10
 16235  002BE2  6E13               	movwf	?i1___awmod+2,c
 16236  002BE4  5047               	movf	i1scale@scl,w,c
 16237  002BE6  6E11               	movwf	?i1___awmod,c
 16238  002BE8  6A12               	clrf	?i1___awmod+1,c
 16239  002BEA  BE11               	btfsc	?i1___awmod,7,c
 16240  002BEC  0612               	decf	?i1___awmod+1,f,c
 16241  002BEE  EC4D  F02D         	call	i1___awmod	;wreg free
 16242  002BF2  C011  F021         	movff	?i1___awmod,?i1___wmul
 16243  002BF6  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16244  002BFA  EC89  F030         	call	i1___wmul	;wreg free
 16245  002BFE  0E28               	movlw	low __npowers_
 16246  002C00  2421               	addwf	?i1___wmul,w,c
 16247  002C02  6EF6               	movwf	tblptrl,c
 16248  002C04  0E08               	movlw	high __npowers_
 16249  002C06  2022               	addwfc	?i1___wmul+1,w,c
 16250  002C08  6EF7               	movwf	tblptrh,c
 16251  002C0A  0009               	tblrd		*+
 16252  002C0C  CFF5 F063          	movff	tablat,??i1_scale+3
 16253  002C10  0009               	tblrd		*+
 16254  002C12  CFF5 F064          	movff	tablat,??i1_scale+4
 16255  002C16  0009               	tblrd		*+
 16256  002C18  CFF5 F065          	movff	tablat,??i1_scale+5
 16257  002C1C  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 16258  002C20  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 16259  002C24  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 16260  002C28  EC84  F024         	call	i1___ftmul	;wreg free
 16261  002C2C  D106               	goto	L24
 16262  002C2E                     i1l11141:
 16263                           
 16264                           ;doprnt.c: 434: return _npowers_[scl];
 16265  002C2E  5047               	movf	i1scale@scl,w,c
 16266  002C30  0D03               	mullw	3
 16267  002C32  0E28               	movlw	low __npowers_
 16268  002C34  24F3               	addwf	prodl,w,c
 16269  002C36  6EF6               	movwf	tblptrl,c
 16270  002C38  0E08               	movlw	high __npowers_
 16271  002C3A  D10C               	goto	L23
 16272  002C3C                     i1l11145:
 16273                           
 16274                           ;doprnt.c: 435: }
 16275                           ;doprnt.c: 436: if(scl>=110)
 16276  002C3C  5047               	movf	i1scale@scl,w,c
 16277  002C3E  0A80               	xorlw	128
 16278  002C40  0F12               	addlw	-238
 16279  002C42  A0D8               	btfss	status,0,c
 16280  002C44  D09D               	goto	i1l11153
 16281                           
 16282                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16283  002C46  0E00               	movlw	0
 16284  002C48  6E24               	movwf	?i1___wmul+3,c
 16285  002C4A  0E03               	movlw	3
 16286  002C4C  6E23               	movwf	?i1___wmul+2,c
 16287  002C4E  0E00               	movlw	0
 16288  002C50  6E1B               	movwf	?i1___awdiv+3,c
 16289  002C52  0E0A               	movlw	10
 16290  002C54  6E1A               	movwf	?i1___awdiv+2,c
 16291  002C56  0E00               	movlw	0
 16292  002C58  6E14               	movwf	?i1___awmod+3,c
 16293  002C5A  0E64               	movlw	100
 16294  002C5C  6E13               	movwf	?i1___awmod+2,c
 16295  002C5E  5047               	movf	i1scale@scl,w,c
 16296  002C60  6E11               	movwf	?i1___awmod,c
 16297  002C62  6A12               	clrf	?i1___awmod+1,c
 16298  002C64  BE11               	btfsc	?i1___awmod,7,c
 16299  002C66  0612               	decf	?i1___awmod+1,f,c
 16300  002C68  EC4D  F02D         	call	i1___awmod	;wreg free
 16301  002C6C  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16302  002C70  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16303  002C74  ECB7  F02B         	call	i1___awdiv	;wreg free
 16304  002C78  0E09               	movlw	9
 16305  002C7A  2418               	addwf	?i1___awdiv,w,c
 16306  002C7C  6E21               	movwf	?i1___wmul,c
 16307  002C7E  0E00               	movlw	0
 16308  002C80  2019               	addwfc	?i1___awdiv+1,w,c
 16309  002C82  6E22               	movwf	?i1___wmul+1,c
 16310  002C84  EC89  F030         	call	i1___wmul	;wreg free
 16311  002C88  0E4F               	movlw	low __powers_
 16312  002C8A  2421               	addwf	?i1___wmul,w,c
 16313  002C8C  6EF6               	movwf	tblptrl,c
 16314  002C8E  0E08               	movlw	high __powers_
 16315  002C90  2022               	addwfc	?i1___wmul+1,w,c
 16316  002C92  6EF7               	movwf	tblptrh,c
 16317  002C94  0009               	tblrd		*+
 16318  002C96  CFF5 F060          	movff	tablat,??i1_scale
 16319  002C9A  0009               	tblrd		*+
 16320  002C9C  CFF5 F061          	movff	tablat,??i1_scale+1
 16321  002CA0  0009               	tblrd		*+
 16322  002CA2  CFF5 F062          	movff	tablat,??i1_scale+2
 16323  002CA6  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16324  002CAA  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16325  002CAE  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16326  002CB2  0E00               	movlw	0
 16327  002CB4  6E24               	movwf	?i1___wmul+3,c
 16328  002CB6  0E03               	movlw	3
 16329  002CB8  6E23               	movwf	?i1___wmul+2,c
 16330  002CBA  0E00               	movlw	0
 16331  002CBC  6E1B               	movwf	?i1___awdiv+3,c
 16332  002CBE  0E64               	movlw	100
 16333  002CC0  6E1A               	movwf	?i1___awdiv+2,c
 16334  002CC2  5047               	movf	i1scale@scl,w,c
 16335  002CC4  6E18               	movwf	?i1___awdiv,c
 16336  002CC6  6A19               	clrf	?i1___awdiv+1,c
 16337  002CC8  BE18               	btfsc	?i1___awdiv,7,c
 16338  002CCA  0619               	decf	?i1___awdiv+1,f,c
 16339  002CCC  ECB7  F02B         	call	i1___awdiv	;wreg free
 16340  002CD0  0E12               	movlw	18
 16341  002CD2  2418               	addwf	?i1___awdiv,w,c
 16342  002CD4  6E21               	movwf	?i1___wmul,c
 16343  002CD6  0E00               	movlw	0
 16344  002CD8  2019               	addwfc	?i1___awdiv+1,w,c
 16345  002CDA  6E22               	movwf	?i1___wmul+1,c
 16346  002CDC  EC89  F030         	call	i1___wmul	;wreg free
 16347  002CE0  0E4F               	movlw	low __powers_
 16348  002CE2  2421               	addwf	?i1___wmul,w,c
 16349  002CE4  6EF6               	movwf	tblptrl,c
 16350  002CE6  0E08               	movlw	high __powers_
 16351  002CE8  2022               	addwfc	?i1___wmul+1,w,c
 16352  002CEA  6EF7               	movwf	tblptrh,c
 16353  002CEC  0009               	tblrd		*+
 16354  002CEE  CFF5 F063          	movff	tablat,??i1_scale+3
 16355  002CF2  0009               	tblrd		*+
 16356  002CF4  CFF5 F064          	movff	tablat,??i1_scale+4
 16357  002CF8  0009               	tblrd		*+
 16358  002CFA  CFF5 F065          	movff	tablat,??i1_scale+5
 16359  002CFE  C065  F038         	movff	??i1_scale+5,?i1___ftmul+2
 16360  002D02  C064  F037         	movff	??i1_scale+4,?i1___ftmul+1
 16361  002D06  C063  F036         	movff	??i1_scale+3,?i1___ftmul
 16362  002D0A  EC84  F024         	call	i1___ftmul	;wreg free
 16363  002D0E  C038  F068         	movff	?i1___ftmul+2,i1_scale$1828+2
 16364  002D12  C037  F067         	movff	?i1___ftmul+1,i1_scale$1828+1
 16365  002D16  C036  F066         	movff	?i1___ftmul,i1_scale$1828
 16366                           
 16367                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16368  002D1A  C066  F036         	movff	i1_scale$1828,?i1___ftmul
 16369  002D1E  C067  F037         	movff	i1_scale$1828+1,?i1___ftmul+1
 16370  002D22  C068  F038         	movff	i1_scale$1828+2,?i1___ftmul+2
 16371  002D26  0E00               	movlw	0
 16372  002D28  6E24               	movwf	?i1___wmul+3,c
 16373  002D2A  0E03               	movlw	3
 16374  002D2C  6E23               	movwf	?i1___wmul+2,c
 16375  002D2E  0E00               	movlw	0
 16376  002D30  6E14               	movwf	?i1___awmod+3,c
 16377  002D32  0E0A               	movlw	10
 16378  002D34  6E13               	movwf	?i1___awmod+2,c
 16379  002D36  5047               	movf	i1scale@scl,w,c
 16380  002D38  6E11               	movwf	?i1___awmod,c
 16381  002D3A  6A12               	clrf	?i1___awmod+1,c
 16382  002D3C  BE11               	btfsc	?i1___awmod,7,c
 16383  002D3E  0612               	decf	?i1___awmod+1,f,c
 16384  002D40  EC4D  F02D         	call	i1___awmod	;wreg free
 16385  002D44  C011  F021         	movff	?i1___awmod,?i1___wmul
 16386  002D48  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16387  002D4C  EC89  F030         	call	i1___wmul	;wreg free
 16388  002D50  0E4F               	movlw	low __powers_
 16389  002D52  2421               	addwf	?i1___wmul,w,c
 16390  002D54  6EF6               	movwf	tblptrl,c
 16391  002D56  0E08               	movlw	high __powers_
 16392  002D58  2022               	addwfc	?i1___wmul+1,w,c
 16393  002D5A  6EF7               	movwf	tblptrh,c
 16394  002D5C  0009               	tblrd		*+
 16395  002D5E  CFF5 F060          	movff	tablat,??i1_scale
 16396  002D62  0009               	tblrd		*+
 16397  002D64  CFF5 F061          	movff	tablat,??i1_scale+1
 16398  002D68  0009               	tblrd		*+
 16399  002D6A  CFF5 F062          	movff	tablat,??i1_scale+2
 16400  002D6E  C062  F03B         	movff	??i1_scale+2,?i1___ftmul+5
 16401  002D72  C061  F03A         	movff	??i1_scale+1,?i1___ftmul+4
 16402  002D76  C060  F039         	movff	??i1_scale,?i1___ftmul+3
 16403  002D7A  EC84  F024         	call	i1___ftmul	;wreg free
 16404  002D7E  D05D               	goto	L24
 16405  002D80                     i1l11153:
 16406                           
 16407                           ;doprnt.c: 438: else if(scl > 10)
 16408  002D80  5047               	movf	i1scale@scl,w,c
 16409  002D82  0A80               	xorlw	128
 16410  002D84  0F75               	addlw	-139
 16411  002D86  A0D8               	btfss	status,0,c
 16412  002D88  D05F               	goto	i1l11159
 16413                           
 16414                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 16415  002D8A  0E00               	movlw	0
 16416  002D8C  6E24               	movwf	?i1___wmul+3,c
 16417  002D8E  0E03               	movlw	3
 16418  002D90  6E23               	movwf	?i1___wmul+2,c
 16419  002D92  0E00               	movlw	0
 16420  002D94  6E1B               	movwf	?i1___awdiv+3,c
 16421  002D96  0E0A               	movlw	10
 16422  002D98  6E1A               	movwf	?i1___awdiv+2,c
 16423  002D9A  5047               	movf	i1scale@scl,w,c
 16424  002D9C  6E18               	movwf	?i1___awdiv,c
 16425  002D9E  6A19               	clrf	?i1___awdiv+1,c
 16426  002DA0  BE18               	btfsc	?i1___awdiv,7,c
 16427  002DA2  0619               	decf	?i1___awdiv+1,f,c
 16428  002DA4  ECB7  F02B         	call	i1___awdiv	;wreg free
 16429  002DA8  0E09               	movlw	9
 16430  002DAA  2418               	addwf	?i1___awdiv,w,c
 16431  002DAC  6E21               	movwf	?i1___wmul,c
 16432  002DAE  0E00               	movlw	0
 16433  002DB0  2019               	addwfc	?i1___awdiv+1,w,c
 16434  002DB2  6E22               	movwf	?i1___wmul+1,c
 16435  002DB4  EC89  F030         	call	i1___wmul	;wreg free
 16436  002DB8  0E4F               	movlw	low __powers_
 16437  002DBA  2421               	addwf	?i1___wmul,w,c
 16438  002DBC  6EF6               	movwf	tblptrl,c
 16439  002DBE  0E08               	movlw	high __powers_
 16440  002DC0  2022               	addwfc	?i1___wmul+1,w,c
 16441  002DC2  6EF7               	movwf	tblptrh,c
 16442  002DC4  0009               	tblrd		*+
 16443  002DC6  CFF5 F060          	movff	tablat,??i1_scale
 16444  002DCA  0009               	tblrd		*+
 16445  002DCC  CFF5 F061          	movff	tablat,??i1_scale+1
 16446  002DD0  0009               	tblrd		*+
 16447  002DD2  CFF5 F062          	movff	tablat,??i1_scale+2
 16448  002DD6  C062  F038         	movff	??i1_scale+2,?i1___ftmul+2
 16449  002DDA  C061  F037         	movff	??i1_scale+1,?i1___ftmul+1
 16450  002DDE  C060  F036         	movff	??i1_scale,?i1___ftmul
 16451  002DE2  0E00               	movlw	0
 16452  002DE4  6E24               	movwf	?i1___wmul+3,c
 16453  002DE6  0E03               	movlw	3
 16454  002DE8  6E23               	movwf	?i1___wmul+2,c
 16455  002DEA  0E00               	movlw	0
 16456  002DEC  6E14               	movwf	?i1___awmod+3,c
 16457  002DEE  0E0A               	movlw	10
 16458  002DF0  6E13               	movwf	?i1___awmod+2,c
 16459  002DF2  5047               	movf	i1scale@scl,w,c
 16460  002DF4  6E11               	movwf	?i1___awmod,c
 16461  002DF6  6A12               	clrf	?i1___awmod+1,c
 16462  002DF8  BE11               	btfsc	?i1___awmod,7,c
 16463  002DFA  0612               	decf	?i1___awmod+1,f,c
 16464  002DFC  EC4D  F02D         	call	i1___awmod	;wreg free
 16465  002E00  C011  F021         	movff	?i1___awmod,?i1___wmul
 16466  002E04  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 16467  002E08  EC89  F030         	call	i1___wmul	;wreg free
 16468  002E0C  0E4F               	movlw	low __powers_
 16469  002E0E  2421               	addwf	?i1___wmul,w,c
 16470  002E10  6EF6               	movwf	tblptrl,c
 16471  002E12  0E08               	movlw	high __powers_
 16472  002E14  2022               	addwfc	?i1___wmul+1,w,c
 16473  002E16  6EF7               	movwf	tblptrh,c
 16474  002E18  0009               	tblrd		*+
 16475  002E1A  CFF5 F063          	movff	tablat,??i1_scale+3
 16476  002E1E  0009               	tblrd		*+
 16477  002E20  CFF5 F064          	movff	tablat,??i1_scale+4
 16478  002E24  0009               	tblrd		*+
 16479  002E26  CFF5 F065          	movff	tablat,??i1_scale+5
 16480  002E2A  C065  F03B         	movff	??i1_scale+5,?i1___ftmul+5
 16481  002E2E  C064  F03A         	movff	??i1_scale+4,?i1___ftmul+4
 16482  002E32  C063  F039         	movff	??i1_scale+3,?i1___ftmul+3
 16483  002E36  EC84  F024         	call	i1___ftmul	;wreg free
 16484  002E3A                     L24:
 16485  002E3A  C038  F049         	movff	?i1___ftmul+2,?i1_scale+2
 16486  002E3E  C037  F048         	movff	?i1___ftmul+1,?i1_scale+1
 16487  002E42  C036  F047         	movff	?i1___ftmul,?i1_scale
 16488  002E46  D017               	goto	i1l253
 16489  002E48                     i1l11159:
 16490                           
 16491                           ;doprnt.c: 440: return _powers_[scl];
 16492  002E48  5047               	movf	i1scale@scl,w,c
 16493  002E4A  0D03               	mullw	3
 16494  002E4C  0E4F               	movlw	low __powers_
 16495  002E4E  24F3               	addwf	prodl,w,c
 16496  002E50  6EF6               	movwf	tblptrl,c
 16497  002E52  0E08               	movlw	high __powers_
 16498  002E54                     L23:
 16499  002E54  20F4               	addwfc	prodh,w,c
 16500  002E56  6EF7               	movwf	tblptrh,c
 16501  002E58  0009               	tblrd		*+
 16502  002E5A  CFF5 F060          	movff	tablat,??i1_scale
 16503  002E5E  0009               	tblrd		*+
 16504  002E60  CFF5 F061          	movff	tablat,??i1_scale+1
 16505  002E64  0009               	tblrd		*+
 16506  002E66  CFF5 F062          	movff	tablat,??i1_scale+2
 16507  002E6A  C062  F049         	movff	??i1_scale+2,?i1_scale+2
 16508  002E6E  C061  F048         	movff	??i1_scale+1,?i1_scale+1
 16509  002E72  C060  F047         	movff	??i1_scale,?i1_scale
 16510  002E76                     i1l253:
 16511  002E76  0012               	return	
 16512  002E78                     __end_ofi1_scale:
 16513                           	opt stack 0
 16514                           pclatu	equ	0xFFB
 16515                           pclath	equ	0xFFA
 16516                           tblptru	equ	0xFF8
 16517                           tblptrh	equ	0xFF7
 16518                           tblptrl	equ	0xFF6
 16519                           tablat	equ	0xFF5
 16520                           prodh	equ	0xFF4
 16521                           prodl	equ	0xFF3
 16522                           intcon	equ	0xFF2
 16523                           intcon2	equ	0xFF1
 16524                           postinc0	equ	0xFEE
 16525                           fsr0h	equ	0xFEA
 16526                           fsr0l	equ	0xFE9
 16527                           wreg	equ	0xFE8
 16528                           fsr1h	equ	0xFE2
 16529                           fsr1l	equ	0xFE1
 16530                           bsr	equ	0xFE0
 16531                           indf2	equ	0xFDF
 16532                           postinc2	equ	0xFDE
 16533                           postdec2	equ	0xFDD
 16534                           fsr2h	equ	0xFDA
 16535                           fsr2l	equ	0xFD9
 16536                           status	equ	0xFD8
 16537                           
 16538 ;; *************** function i1___wmul *****************
 16539 ;; Defined at:
 16540 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;  __wmul          2   32[COMRAM] unsigned int 
 16543 ;;  __wmul          2   34[COMRAM] unsigned int 
 16544 ;; Auto vars:     Size  Location     Type
 16545 ;;  __wmul          2   36[COMRAM] unsigned int 
 16546 ;; Return value:  Size  Location     Type
 16547 ;;                  2   32[COMRAM] unsigned int 
 16548 ;; Registers used:
 16549 ;;		wreg, status,2, status,0, prodl, prodh
 16550 ;; Tracked objects:
 16551 ;;		On entry : 0/0
 16552 ;;		On exit  : 0/0
 16553 ;;		Unchanged: 0/0
 16554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16555 ;;      Params:         4       0       0       0       0       0       0       0       0
 16556 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16557 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16558 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16559 ;;Total ram usage:        6 bytes
 16560 ;; Hardware stack levels used:    1
 16561 ;; Hardware stack levels required when called:    3
 16562 ;; This function calls:
 16563 ;;		Nothing
 16564 ;; This function is called by:
 16565 ;;		i1_fround
 16566 ;;		i1_scale
 16567 ;;		i1_sprintf
 16568 ;; This function uses a non-reentrant model
 16569 ;;
 16570                           
 16571                           	psect	text59
 16572  006112                     __ptext59:
 16573                           	opt stack 0
 16574  006112                     i1___wmul:
 16575                           	opt stack 20
 16576                           
 16577                           ;incstack = 0
 16578                           ;incstack = 0
 16579  006112  5021               	movf	i1___wmul@multiplier,w,c
 16580  006114  0223               	mulwf	i1___wmul@multiplicand,c
 16581  006116  CFF3 F025          	movff	prodl,i1___wmul@product
 16582  00611A  CFF4 F026          	movff	prodh,i1___wmul@product+1
 16583  00611E  5021               	movf	i1___wmul@multiplier,w,c
 16584  006120  0224               	mulwf	i1___wmul@multiplicand+1,c
 16585  006122  CFF3 FFF4          	movff	prodl,prodh
 16586  006126  6AF3               	clrf	prodl,c
 16587  006128  50F3               	movf	prodl,w,c
 16588  00612A  2625               	addwf	i1___wmul@product,f,c
 16589  00612C  50F4               	movf	prodh,w,c
 16590  00612E  2226               	addwfc	i1___wmul@product+1,f,c
 16591  006130  5022               	movf	i1___wmul@multiplier+1,w,c
 16592  006132  0223               	mulwf	i1___wmul@multiplicand,c
 16593  006134  CFF3 FFF4          	movff	prodl,prodh
 16594  006138  6AF3               	clrf	prodl,c
 16595  00613A  50F3               	movf	prodl,w,c
 16596  00613C  2625               	addwf	i1___wmul@product,f,c
 16597  00613E  50F4               	movf	prodh,w,c
 16598  006140  2226               	addwfc	i1___wmul@product+1,f,c
 16599  006142  C025  F021         	movff	i1___wmul@product,?i1___wmul
 16600  006146  C026  F022         	movff	i1___wmul@product+1,?i1___wmul+1
 16601  00614A  0012               	return	
 16602  00614C                     __end_ofi1___wmul:
 16603                           	opt stack 0
 16604                           pclatu	equ	0xFFB
 16605                           pclath	equ	0xFFA
 16606                           tblptru	equ	0xFF8
 16607                           tblptrh	equ	0xFF7
 16608                           tblptrl	equ	0xFF6
 16609                           tablat	equ	0xFF5
 16610                           prodh	equ	0xFF4
 16611                           prodl	equ	0xFF3
 16612                           intcon	equ	0xFF2
 16613                           intcon2	equ	0xFF1
 16614                           postinc0	equ	0xFEE
 16615                           fsr0h	equ	0xFEA
 16616                           fsr0l	equ	0xFE9
 16617                           wreg	equ	0xFE8
 16618                           fsr1h	equ	0xFE2
 16619                           fsr1l	equ	0xFE1
 16620                           bsr	equ	0xFE0
 16621                           indf2	equ	0xFDF
 16622                           postinc2	equ	0xFDE
 16623                           postdec2	equ	0xFDD
 16624                           fsr2h	equ	0xFDA
 16625                           fsr2l	equ	0xFD9
 16626                           status	equ	0xFD8
 16627                           
 16628 ;; *************** function i1___awmod *****************
 16629 ;; Defined at:
 16630 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awmod.c"
 16631 ;; Parameters:    Size  Location     Type
 16632 ;;  __awmod         2   16[COMRAM] int 
 16633 ;;  __awmod         2   18[COMRAM] int 
 16634 ;; Auto vars:     Size  Location     Type
 16635 ;;  __awmod         1   22[COMRAM] unsigned char 
 16636 ;;  __awmod         1   21[COMRAM] unsigned char 
 16637 ;; Return value:  Size  Location     Type
 16638 ;;                  2   16[COMRAM] int 
 16639 ;; Registers used:
 16640 ;;		wreg, status,2, status,0
 16641 ;; Tracked objects:
 16642 ;;		On entry : 0/0
 16643 ;;		On exit  : 0/0
 16644 ;;		Unchanged: 0/0
 16645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16646 ;;      Params:         4       0       0       0       0       0       0       0       0
 16647 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16648 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16649 ;;      Totals:         7       0       0       0       0       0       0       0       0
 16650 ;;Total ram usage:        7 bytes
 16651 ;; Hardware stack levels used:    1
 16652 ;; Hardware stack levels required when called:    3
 16653 ;; This function calls:
 16654 ;;		Nothing
 16655 ;; This function is called by:
 16656 ;;		i1_fround
 16657 ;;		i1_scale
 16658 ;; This function uses a non-reentrant model
 16659 ;;
 16660                           
 16661                           	psect	text60
 16662  005A9A                     __ptext60:
 16663                           	opt stack 0
 16664  005A9A                     i1___awmod:
 16665                           	opt stack 19
 16666                           
 16667                           ;incstack = 0
 16668                           ;incstack = 0
 16669  005A9A  6E15               	movwf	??i1___awmod& (0+255),c
 16670  005A9C  0E00               	movlw	0
 16671  005A9E  6E17               	movwf	i1___awmod@sign,c
 16672  005AA0  5015               	movf	??i1___awmod& (0+255),w,c
 16673  005AA2  AE12               	btfss	i1___awmod@dividend+1,7,c
 16674  005AA4  D008               	goto	i1l9133
 16675  005AA6  6C11               	negf	i1___awmod@dividend,c
 16676  005AA8  1E12               	comf	i1___awmod@dividend+1,f,c
 16677  005AAA  B0D8               	btfsc	status,0,c
 16678  005AAC  2A12               	incf	i1___awmod@dividend+1,f,c
 16679  005AAE  6E15               	movwf	??i1___awmod& (0+255),c
 16680  005AB0  0E01               	movlw	1
 16681  005AB2  6E17               	movwf	i1___awmod@sign,c
 16682  005AB4  5015               	movf	??i1___awmod& (0+255),w,c
 16683  005AB6                     i1l9133:
 16684  005AB6  AE14               	btfss	i1___awmod@divisor+1,7,c
 16685  005AB8  D004               	goto	i1l9137
 16686  005ABA  6C13               	negf	i1___awmod@divisor,c
 16687  005ABC  1E14               	comf	i1___awmod@divisor+1,f,c
 16688  005ABE  B0D8               	btfsc	status,0,c
 16689  005AC0  2A14               	incf	i1___awmod@divisor+1,f,c
 16690  005AC2                     i1l9137:
 16691  005AC2  5014               	movf	i1___awmod@divisor+1,w,c
 16692  005AC4  1013               	iorwf	i1___awmod@divisor,w,c
 16693  005AC6  B4D8               	btfsc	status,2,c
 16694  005AC8  D01A               	goto	i1l9153
 16695  005ACA  6E15               	movwf	??i1___awmod& (0+255),c
 16696  005ACC  0E01               	movlw	1
 16697  005ACE  6E16               	movwf	i1___awmod@counter,c
 16698  005AD0  5015               	movf	??i1___awmod& (0+255),w,c
 16699  005AD2  D004               	goto	i1l9143
 16700  005AD4                     i1l9141:
 16701  005AD4  90D8               	bcf	status,0,c
 16702  005AD6  3613               	rlcf	i1___awmod@divisor,f,c
 16703  005AD8  3614               	rlcf	i1___awmod@divisor+1,f,c
 16704  005ADA  2A16               	incf	i1___awmod@counter,f,c
 16705  005ADC                     i1l9143:
 16706  005ADC  AE14               	btfss	i1___awmod@divisor+1,7,c
 16707  005ADE  D7FA               	goto	i1l9141
 16708  005AE0                     i1l9145:
 16709  005AE0  5013               	movf	i1___awmod@divisor,w,c
 16710  005AE2  5C11               	subwf	i1___awmod@dividend,w,c
 16711  005AE4  5014               	movf	i1___awmod@divisor+1,w,c
 16712  005AE6  5812               	subwfb	i1___awmod@dividend+1,w,c
 16713  005AE8  A0D8               	btfss	status,0,c
 16714  005AEA  D004               	goto	i1l9149
 16715  005AEC  5013               	movf	i1___awmod@divisor,w,c
 16716  005AEE  5E11               	subwf	i1___awmod@dividend,f,c
 16717  005AF0  5014               	movf	i1___awmod@divisor+1,w,c
 16718  005AF2  5A12               	subwfb	i1___awmod@dividend+1,f,c
 16719  005AF4                     i1l9149:
 16720  005AF4  90D8               	bcf	status,0,c
 16721  005AF6  3214               	rrcf	i1___awmod@divisor+1,f,c
 16722  005AF8  3213               	rrcf	i1___awmod@divisor,f,c
 16723  005AFA  2E16               	decfsz	i1___awmod@counter,f,c
 16724  005AFC  D7F1               	goto	i1l9145
 16725  005AFE                     i1l9153:
 16726  005AFE  5017               	movf	i1___awmod@sign,w,c
 16727  005B00  B4D8               	btfsc	status,2,c
 16728  005B02  D004               	goto	i1l9157
 16729  005B04  6C11               	negf	i1___awmod@dividend,c
 16730  005B06  1E12               	comf	i1___awmod@dividend+1,f,c
 16731  005B08  B0D8               	btfsc	status,0,c
 16732  005B0A  2A12               	incf	i1___awmod@dividend+1,f,c
 16733  005B0C                     i1l9157:
 16734  005B0C  C011  F011         	movff	i1___awmod@dividend,?i1___awmod
 16735  005B10  C012  F012         	movff	i1___awmod@dividend+1,?i1___awmod+1
 16736  005B14  0012               	return	
 16737  005B16                     __end_ofi1___awmod:
 16738                           	opt stack 0
 16739                           pclatu	equ	0xFFB
 16740                           pclath	equ	0xFFA
 16741                           tblptru	equ	0xFF8
 16742                           tblptrh	equ	0xFF7
 16743                           tblptrl	equ	0xFF6
 16744                           tablat	equ	0xFF5
 16745                           prodh	equ	0xFF4
 16746                           prodl	equ	0xFF3
 16747                           intcon	equ	0xFF2
 16748                           intcon2	equ	0xFF1
 16749                           postinc0	equ	0xFEE
 16750                           fsr0h	equ	0xFEA
 16751                           fsr0l	equ	0xFE9
 16752                           wreg	equ	0xFE8
 16753                           fsr1h	equ	0xFE2
 16754                           fsr1l	equ	0xFE1
 16755                           bsr	equ	0xFE0
 16756                           indf2	equ	0xFDF
 16757                           postinc2	equ	0xFDE
 16758                           postdec2	equ	0xFDD
 16759                           fsr2h	equ	0xFDA
 16760                           fsr2l	equ	0xFD9
 16761                           status	equ	0xFD8
 16762                           
 16763 ;; *************** function i1___awdiv *****************
 16764 ;; Defined at:
 16765 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
 16766 ;; Parameters:    Size  Location     Type
 16767 ;;  __awdiv         2   23[COMRAM] int 
 16768 ;;  __awdiv         2   25[COMRAM] int 
 16769 ;; Auto vars:     Size  Location     Type
 16770 ;;  __awdiv         2   30[COMRAM] int 
 16771 ;;  __awdiv         1   29[COMRAM] unsigned char 
 16772 ;;  __awdiv         1   28[COMRAM] unsigned char 
 16773 ;; Return value:  Size  Location     Type
 16774 ;;                  2   23[COMRAM] int 
 16775 ;; Registers used:
 16776 ;;		wreg, status,2, status,0
 16777 ;; Tracked objects:
 16778 ;;		On entry : 0/0
 16779 ;;		On exit  : 0/0
 16780 ;;		Unchanged: 0/0
 16781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16782 ;;      Params:         4       0       0       0       0       0       0       0       0
 16783 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16784 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16785 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16786 ;;Total ram usage:        9 bytes
 16787 ;; Hardware stack levels used:    1
 16788 ;; Hardware stack levels required when called:    3
 16789 ;; This function calls:
 16790 ;;		Nothing
 16791 ;; This function is called by:
 16792 ;;		i1_fround
 16793 ;;		i1_scale
 16794 ;;		i1_sprintf
 16795 ;; This function uses a non-reentrant model
 16796 ;;
 16797                           
 16798                           	psect	text61
 16799  00576E                     __ptext61:
 16800                           	opt stack 0
 16801  00576E                     i1___awdiv:
 16802                           	opt stack 20
 16803                           
 16804                           ;incstack = 0
 16805                           ;incstack = 0
 16806  00576E  6E1C               	movwf	??i1___awdiv& (0+255),c
 16807  005770  0E00               	movlw	0
 16808  005772  6E1E               	movwf	i1___awdiv@sign,c
 16809  005774  501C               	movf	??i1___awdiv& (0+255),w,c
 16810  005776  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 16811  005778  D008               	goto	i1l9089
 16812  00577A  6C1A               	negf	i1___awdiv@divisor,c
 16813  00577C  1E1B               	comf	i1___awdiv@divisor+1,f,c
 16814  00577E  B0D8               	btfsc	status,0,c
 16815  005780  2A1B               	incf	i1___awdiv@divisor+1,f,c
 16816  005782  6E1C               	movwf	??i1___awdiv& (0+255),c
 16817  005784  0E01               	movlw	1
 16818  005786  6E1E               	movwf	i1___awdiv@sign,c
 16819  005788  501C               	movf	??i1___awdiv& (0+255),w,c
 16820  00578A                     i1l9089:
 16821  00578A  AE19               	btfss	i1___awdiv@dividend+1,7,c
 16822  00578C  D006               	goto	i1l9095
 16823  00578E  6C18               	negf	i1___awdiv@dividend,c
 16824  005790  1E19               	comf	i1___awdiv@dividend+1,f,c
 16825  005792  B0D8               	btfsc	status,0,c
 16826  005794  2A19               	incf	i1___awdiv@dividend+1,f,c
 16827  005796  0E01               	movlw	1
 16828  005798  1A1E               	xorwf	i1___awdiv@sign,f,c
 16829  00579A                     i1l9095:
 16830  00579A  0E00               	movlw	0
 16831  00579C  6E20               	movwf	i1___awdiv@quotient+1,c
 16832  00579E  0E00               	movlw	0
 16833  0057A0  6E1F               	movwf	i1___awdiv@quotient,c
 16834  0057A2  501B               	movf	i1___awdiv@divisor+1,w,c
 16835  0057A4  101A               	iorwf	i1___awdiv@divisor,w,c
 16836  0057A6  B4D8               	btfsc	status,2,c
 16837  0057A8  D01E               	goto	i1l9117
 16838  0057AA  6E1C               	movwf	??i1___awdiv& (0+255),c
 16839  0057AC  0E01               	movlw	1
 16840  0057AE  6E1D               	movwf	i1___awdiv@counter,c
 16841  0057B0  501C               	movf	??i1___awdiv& (0+255),w,c
 16842  0057B2  D004               	goto	i1l9103
 16843  0057B4                     i1l9101:
 16844  0057B4  90D8               	bcf	status,0,c
 16845  0057B6  361A               	rlcf	i1___awdiv@divisor,f,c
 16846  0057B8  361B               	rlcf	i1___awdiv@divisor+1,f,c
 16847  0057BA  2A1D               	incf	i1___awdiv@counter,f,c
 16848  0057BC                     i1l9103:
 16849  0057BC  AE1B               	btfss	i1___awdiv@divisor+1,7,c
 16850  0057BE  D7FA               	goto	i1l9101
 16851  0057C0                     i1l9105:
 16852  0057C0  90D8               	bcf	status,0,c
 16853  0057C2  361F               	rlcf	i1___awdiv@quotient,f,c
 16854  0057C4  3620               	rlcf	i1___awdiv@quotient+1,f,c
 16855  0057C6  501A               	movf	i1___awdiv@divisor,w,c
 16856  0057C8  5C18               	subwf	i1___awdiv@dividend,w,c
 16857  0057CA  501B               	movf	i1___awdiv@divisor+1,w,c
 16858  0057CC  5819               	subwfb	i1___awdiv@dividend+1,w,c
 16859  0057CE  A0D8               	btfss	status,0,c
 16860  0057D0  D005               	goto	i1l9113
 16861  0057D2  501A               	movf	i1___awdiv@divisor,w,c
 16862  0057D4  5E18               	subwf	i1___awdiv@dividend,f,c
 16863  0057D6  501B               	movf	i1___awdiv@divisor+1,w,c
 16864  0057D8  5A19               	subwfb	i1___awdiv@dividend+1,f,c
 16865  0057DA  801F               	bsf	i1___awdiv@quotient,0,c
 16866  0057DC                     i1l9113:
 16867  0057DC  90D8               	bcf	status,0,c
 16868  0057DE  321B               	rrcf	i1___awdiv@divisor+1,f,c
 16869  0057E0  321A               	rrcf	i1___awdiv@divisor,f,c
 16870  0057E2  2E1D               	decfsz	i1___awdiv@counter,f,c
 16871  0057E4  D7ED               	goto	i1l9105
 16872  0057E6                     i1l9117:
 16873  0057E6  501E               	movf	i1___awdiv@sign,w,c
 16874  0057E8  B4D8               	btfsc	status,2,c
 16875  0057EA  D004               	goto	i1l9121
 16876  0057EC  6C1F               	negf	i1___awdiv@quotient,c
 16877  0057EE  1E20               	comf	i1___awdiv@quotient+1,f,c
 16878  0057F0  B0D8               	btfsc	status,0,c
 16879  0057F2  2A20               	incf	i1___awdiv@quotient+1,f,c
 16880  0057F4                     i1l9121:
 16881  0057F4  C01F  F018         	movff	i1___awdiv@quotient,?i1___awdiv
 16882  0057F8  C020  F019         	movff	i1___awdiv@quotient+1,?i1___awdiv+1
 16883  0057FC  0012               	return	
 16884  0057FE                     __end_ofi1___awdiv:
 16885                           	opt stack 0
 16886                           pclatu	equ	0xFFB
 16887                           pclath	equ	0xFFA
 16888                           tblptru	equ	0xFF8
 16889                           tblptrh	equ	0xFF7
 16890                           tblptrl	equ	0xFF6
 16891                           tablat	equ	0xFF5
 16892                           prodh	equ	0xFF4
 16893                           prodl	equ	0xFF3
 16894                           intcon	equ	0xFF2
 16895                           intcon2	equ	0xFF1
 16896                           postinc0	equ	0xFEE
 16897                           fsr0h	equ	0xFEA
 16898                           fsr0l	equ	0xFE9
 16899                           wreg	equ	0xFE8
 16900                           fsr1h	equ	0xFE2
 16901                           fsr1l	equ	0xFE1
 16902                           bsr	equ	0xFE0
 16903                           indf2	equ	0xFDF
 16904                           postinc2	equ	0xFDE
 16905                           postdec2	equ	0xFDD
 16906                           fsr2h	equ	0xFDA
 16907                           fsr2l	equ	0xFD9
 16908                           status	equ	0xFD8
 16909                           
 16910 ;; *************** function i1_fround *****************
 16911 ;; Defined at:
 16912 ;;		line 410 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\doprnt.c"
 16913 ;; Parameters:    Size  Location     Type
 16914 ;;  fround          1   70[COMRAM] unsigned char 
 16915 ;; Auto vars:     Size  Location     Type
 16916 ;;  fround          3    0        float 
 16917 ;;  fround          3    0        float 
 16918 ;;  fround          3    0        float 
 16919 ;; Return value:  Size  Location     Type
 16920 ;;                  3   70[COMRAM] float 
 16921 ;; Registers used:
 16922 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16923 ;; Tracked objects:
 16924 ;;		On entry : 0/0
 16925 ;;		On exit  : 0/0
 16926 ;;		Unchanged: 0/0
 16927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16928 ;;      Params:         3       0       0       0       0       0       0       0       0
 16929 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16930 ;;      Temps:          0       6       0       0       0       0       0       0       0
 16931 ;;      Totals:         3      12       0       0       0       0       0       0       0
 16932 ;;Total ram usage:       15 bytes
 16933 ;; Hardware stack levels used:    1
 16934 ;; Hardware stack levels required when called:    5
 16935 ;; This function calls:
 16936 ;;		i1___awdiv
 16937 ;;		i1___awmod
 16938 ;;		i1___ftmul
 16939 ;;		i1___wmul
 16940 ;; This function is called by:
 16941 ;;		i1_sprintf
 16942 ;; This function uses a non-reentrant model
 16943 ;;
 16944                           
 16945                           	psect	text62
 16946  003532                     __ptext62:
 16947                           	opt stack 0
 16948  003532                     i1_fround:
 16949                           	opt stack 18
 16950                           
 16951                           ;doprnt.c: 413: if(prec>=110)
 16952                           
 16953                           ;incstack = 0
 16954                           ;incstack = 0
 16955  003532  0E6D               	movlw	109
 16956  003534  6447               	cpfsgt	i1fround@prec,c
 16957  003536  D0AB               	goto	i1l11111
 16958                           
 16959                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16960  003538  0E00               	movlw	0
 16961  00353A  6E24               	movwf	?i1___wmul+3,c
 16962  00353C  0E03               	movlw	3
 16963  00353E  6E23               	movwf	?i1___wmul+2,c
 16964  003540  0E00               	movlw	0
 16965  003542  6E1B               	movwf	?i1___awdiv+3,c
 16966  003544  0E0A               	movlw	10
 16967  003546  6E1A               	movwf	?i1___awdiv+2,c
 16968  003548  0E00               	movlw	0
 16969  00354A  6E14               	movwf	?i1___awmod+3,c
 16970  00354C  0E64               	movlw	100
 16971  00354E  6E13               	movwf	?i1___awmod+2,c
 16972  003550  C047  F011         	movff	i1fround@prec,?i1___awmod
 16973  003554  6A12               	clrf	?i1___awmod+1,c
 16974  003556  EC4D  F02D         	call	i1___awmod	;wreg free
 16975  00355A  C011  F018         	movff	?i1___awmod,?i1___awdiv
 16976  00355E  C012  F019         	movff	?i1___awmod+1,?i1___awdiv+1
 16977  003562  ECB7  F02B         	call	i1___awdiv	;wreg free
 16978  003566  0E09               	movlw	9
 16979  003568  2418               	addwf	?i1___awdiv,w,c
 16980  00356A  6E21               	movwf	?i1___wmul,c
 16981  00356C  0E00               	movlw	0
 16982  00356E  2019               	addwfc	?i1___awdiv+1,w,c
 16983  003570  6E22               	movwf	?i1___wmul+1,c
 16984  003572  EC89  F030         	call	i1___wmul	;wreg free
 16985  003576  0E28               	movlw	low __npowers_
 16986  003578  2421               	addwf	?i1___wmul,w,c
 16987  00357A  6EF6               	movwf	tblptrl,c
 16988  00357C  0E08               	movlw	high __npowers_
 16989  00357E  2022               	addwfc	?i1___wmul+1,w,c
 16990  003580  6EF7               	movwf	tblptrh,c
 16991  003582  0009               	tblrd		*+
 16992  003584  CFF5 F060          	movff	tablat,??i1_fround
 16993  003588  0009               	tblrd		*+
 16994  00358A  CFF5 F061          	movff	tablat,??i1_fround+1
 16995  00358E  0009               	tblrd		*+
 16996  003590  CFF5 F062          	movff	tablat,??i1_fround+2
 16997  003594  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 16998  003598  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 16999  00359C  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17000  0035A0  0E00               	movlw	0
 17001  0035A2  6E24               	movwf	?i1___wmul+3,c
 17002  0035A4  0E03               	movlw	3
 17003  0035A6  6E23               	movwf	?i1___wmul+2,c
 17004  0035A8  0E00               	movlw	0
 17005  0035AA  6E1B               	movwf	?i1___awdiv+3,c
 17006  0035AC  0E64               	movlw	100
 17007  0035AE  6E1A               	movwf	?i1___awdiv+2,c
 17008  0035B0  C047  F018         	movff	i1fround@prec,?i1___awdiv
 17009  0035B4  6A19               	clrf	?i1___awdiv+1,c
 17010  0035B6  ECB7  F02B         	call	i1___awdiv	;wreg free
 17011  0035BA  0E12               	movlw	18
 17012  0035BC  2418               	addwf	?i1___awdiv,w,c
 17013  0035BE  6E21               	movwf	?i1___wmul,c
 17014  0035C0  0E00               	movlw	0
 17015  0035C2  2019               	addwfc	?i1___awdiv+1,w,c
 17016  0035C4  6E22               	movwf	?i1___wmul+1,c
 17017  0035C6  EC89  F030         	call	i1___wmul	;wreg free
 17018  0035CA  0E28               	movlw	low __npowers_
 17019  0035CC  2421               	addwf	?i1___wmul,w,c
 17020  0035CE  6EF6               	movwf	tblptrl,c
 17021  0035D0  0E08               	movlw	high __npowers_
 17022  0035D2  2022               	addwfc	?i1___wmul+1,w,c
 17023  0035D4  6EF7               	movwf	tblptrh,c
 17024  0035D6  0009               	tblrd		*+
 17025  0035D8  CFF5 F063          	movff	tablat,??i1_fround+3
 17026  0035DC  0009               	tblrd		*+
 17027  0035DE  CFF5 F064          	movff	tablat,??i1_fround+4
 17028  0035E2  0009               	tblrd		*+
 17029  0035E4  CFF5 F065          	movff	tablat,??i1_fround+5
 17030  0035E8  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 17031  0035EC  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 17032  0035F0  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 17033  0035F4  EC84  F024         	call	i1___ftmul	;wreg free
 17034  0035F8  C038  F06B         	movff	?i1___ftmul+2,i1_fround$1826+2
 17035  0035FC  C037  F06A         	movff	?i1___ftmul+1,i1_fround$1826+1
 17036  003600  C036  F069         	movff	?i1___ftmul,i1_fround$1826
 17037                           
 17038                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17039  003604  0E00               	movlw	0
 17040  003606  6E24               	movwf	?i1___wmul+3,c
 17041  003608  0E03               	movlw	3
 17042  00360A  6E23               	movwf	?i1___wmul+2,c
 17043  00360C  0E00               	movlw	0
 17044  00360E  6E14               	movwf	?i1___awmod+3,c
 17045  003610  0E0A               	movlw	10
 17046  003612  6E13               	movwf	?i1___awmod+2,c
 17047  003614  C047  F011         	movff	i1fround@prec,?i1___awmod
 17048  003618  6A12               	clrf	?i1___awmod+1,c
 17049  00361A  EC4D  F02D         	call	i1___awmod	;wreg free
 17050  00361E  C011  F021         	movff	?i1___awmod,?i1___wmul
 17051  003622  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17052  003626  EC89  F030         	call	i1___wmul	;wreg free
 17053  00362A  0E28               	movlw	low __npowers_
 17054  00362C  2421               	addwf	?i1___wmul,w,c
 17055  00362E  6EF6               	movwf	tblptrl,c
 17056  003630  0E08               	movlw	high __npowers_
 17057  003632  2022               	addwfc	?i1___wmul+1,w,c
 17058  003634  6EF7               	movwf	tblptrh,c
 17059  003636  0009               	tblrd		*+
 17060  003638  CFF5 F060          	movff	tablat,??i1_fround
 17061  00363C  0009               	tblrd		*+
 17062  00363E  CFF5 F061          	movff	tablat,??i1_fround+1
 17063  003642  0009               	tblrd		*+
 17064  003644  CFF5 F062          	movff	tablat,??i1_fround+2
 17065  003648  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17066  00364C  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17067  003650  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17068  003654  C069  F036         	movff	i1_fround$1826,?i1___ftmul
 17069  003658  C06A  F037         	movff	i1_fround$1826+1,?i1___ftmul+1
 17070  00365C  C06B  F038         	movff	i1_fround$1826+2,?i1___ftmul+2
 17071  003660  EC84  F024         	call	i1___ftmul	;wreg free
 17072  003664  C038  F068         	movff	?i1___ftmul+2,i1_fround$1827+2
 17073  003668  C037  F067         	movff	?i1___ftmul+1,i1_fround$1827+1
 17074  00366C  C036  F066         	movff	?i1___ftmul,i1_fround$1827
 17075                           
 17076                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17077  003670  C066  F036         	movff	i1_fround$1827,?i1___ftmul
 17078  003674  C067  F037         	movff	i1_fround$1827+1,?i1___ftmul+1
 17079  003678  C068  F038         	movff	i1_fround$1827+2,?i1___ftmul+2
 17080  00367C  0E00               	movlw	0
 17081  00367E  6E39               	movwf	?i1___ftmul+3,c
 17082  003680  0E00               	movlw	0
 17083  003682  6E3A               	movwf	?i1___ftmul+4,c
 17084  003684  0E3F               	movlw	63
 17085  003686  6E3B               	movwf	?i1___ftmul+5,c
 17086  003688  EC84  F024         	call	i1___ftmul	;wreg free
 17087  00368C  D08B               	goto	L26
 17088  00368E                     i1l11111:
 17089                           
 17090                           ;doprnt.c: 415: else if(prec > 10)
 17091  00368E  0E0A               	movlw	10
 17092  003690  6447               	cpfsgt	i1fround@prec,c
 17093  003692  D069               	goto	i1l11119
 17094                           
 17095                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17096  003694  0E00               	movlw	0
 17097  003696  6E24               	movwf	?i1___wmul+3,c
 17098  003698  0E03               	movlw	3
 17099  00369A  6E23               	movwf	?i1___wmul+2,c
 17100  00369C  0E00               	movlw	0
 17101  00369E  6E14               	movwf	?i1___awmod+3,c
 17102  0036A0  0E0A               	movlw	10
 17103  0036A2  6E13               	movwf	?i1___awmod+2,c
 17104  0036A4  C047  F011         	movff	i1fround@prec,?i1___awmod
 17105  0036A8  6A12               	clrf	?i1___awmod+1,c
 17106  0036AA  EC4D  F02D         	call	i1___awmod	;wreg free
 17107  0036AE  C011  F021         	movff	?i1___awmod,?i1___wmul
 17108  0036B2  C012  F022         	movff	?i1___awmod+1,?i1___wmul+1
 17109  0036B6  EC89  F030         	call	i1___wmul	;wreg free
 17110  0036BA  0E28               	movlw	low __npowers_
 17111  0036BC  2421               	addwf	?i1___wmul,w,c
 17112  0036BE  6EF6               	movwf	tblptrl,c
 17113  0036C0  0E08               	movlw	high __npowers_
 17114  0036C2  2022               	addwfc	?i1___wmul+1,w,c
 17115  0036C4  6EF7               	movwf	tblptrh,c
 17116  0036C6  0009               	tblrd		*+
 17117  0036C8  CFF5 F060          	movff	tablat,??i1_fround
 17118  0036CC  0009               	tblrd		*+
 17119  0036CE  CFF5 F061          	movff	tablat,??i1_fround+1
 17120  0036D2  0009               	tblrd		*+
 17121  0036D4  CFF5 F062          	movff	tablat,??i1_fround+2
 17122  0036D8  C062  F03B         	movff	??i1_fround+2,?i1___ftmul+5
 17123  0036DC  C061  F03A         	movff	??i1_fround+1,?i1___ftmul+4
 17124  0036E0  C060  F039         	movff	??i1_fround,?i1___ftmul+3
 17125  0036E4  0E00               	movlw	0
 17126  0036E6  6E24               	movwf	?i1___wmul+3,c
 17127  0036E8  0E03               	movlw	3
 17128  0036EA  6E23               	movwf	?i1___wmul+2,c
 17129  0036EC  0E00               	movlw	0
 17130  0036EE  6E1B               	movwf	?i1___awdiv+3,c
 17131  0036F0  0E0A               	movlw	10
 17132  0036F2  6E1A               	movwf	?i1___awdiv+2,c
 17133  0036F4  C047  F018         	movff	i1fround@prec,?i1___awdiv
 17134  0036F8  6A19               	clrf	?i1___awdiv+1,c
 17135  0036FA  ECB7  F02B         	call	i1___awdiv	;wreg free
 17136  0036FE  0E09               	movlw	9
 17137  003700  2418               	addwf	?i1___awdiv,w,c
 17138  003702  6E21               	movwf	?i1___wmul,c
 17139  003704  0E00               	movlw	0
 17140  003706  2019               	addwfc	?i1___awdiv+1,w,c
 17141  003708  6E22               	movwf	?i1___wmul+1,c
 17142  00370A  EC89  F030         	call	i1___wmul	;wreg free
 17143  00370E  0E28               	movlw	low __npowers_
 17144  003710  2421               	addwf	?i1___wmul,w,c
 17145  003712  6EF6               	movwf	tblptrl,c
 17146  003714  0E08               	movlw	high __npowers_
 17147  003716  2022               	addwfc	?i1___wmul+1,w,c
 17148  003718  6EF7               	movwf	tblptrh,c
 17149  00371A  0009               	tblrd		*+
 17150  00371C  CFF5 F063          	movff	tablat,??i1_fround+3
 17151  003720  0009               	tblrd		*+
 17152  003722  CFF5 F064          	movff	tablat,??i1_fround+4
 17153  003726  0009               	tblrd		*+
 17154  003728  CFF5 F065          	movff	tablat,??i1_fround+5
 17155  00372C  C065  F038         	movff	??i1_fround+5,?i1___ftmul+2
 17156  003730  C064  F037         	movff	??i1_fround+4,?i1___ftmul+1
 17157  003734  C063  F036         	movff	??i1_fround+3,?i1___ftmul
 17158  003738  EC84  F024         	call	i1___ftmul	;wreg free
 17159  00373C  C038  F06B         	movff	?i1___ftmul+2,i1_fround$1826+2
 17160  003740  C037  F06A         	movff	?i1___ftmul+1,i1_fround$1826+1
 17161  003744  C036  F069         	movff	?i1___ftmul,i1_fround$1826
 17162                           
 17163                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17164  003748  C069  F036         	movff	i1_fround$1826,?i1___ftmul
 17165  00374C  C06A  F037         	movff	i1_fround$1826+1,?i1___ftmul+1
 17166  003750  C06B  F038         	movff	i1_fround$1826+2,?i1___ftmul+2
 17167  003754  0E00               	movlw	0
 17168  003756  6E39               	movwf	?i1___ftmul+3,c
 17169  003758  0E00               	movlw	0
 17170  00375A  6E3A               	movwf	?i1___ftmul+4,c
 17171  00375C  0E3F               	movlw	63
 17172  00375E  6E3B               	movwf	?i1___ftmul+5,c
 17173  003760  EC84  F024         	call	i1___ftmul	;wreg free
 17174  003764  D01F               	goto	L26
 17175  003766                     i1l11119:
 17176                           
 17177                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17178  003766  5047               	movf	i1fround@prec,w,c
 17179  003768  0D03               	mullw	3
 17180  00376A  0E28               	movlw	low __npowers_
 17181  00376C  24F3               	addwf	prodl,w,c
 17182  00376E  6EF6               	movwf	tblptrl,c
 17183  003770  0E08               	movlw	high __npowers_
 17184  003772  20F4               	addwfc	prodh,w,c
 17185  003774  6EF7               	movwf	tblptrh,c
 17186  003776  0009               	tblrd		*+
 17187  003778  CFF5 F060          	movff	tablat,??i1_fround
 17188  00377C  0009               	tblrd		*+
 17189  00377E  CFF5 F061          	movff	tablat,??i1_fround+1
 17190  003782  0009               	tblrd		*+
 17191  003784  CFF5 F062          	movff	tablat,??i1_fround+2
 17192  003788  C062  F038         	movff	??i1_fround+2,?i1___ftmul+2
 17193  00378C  C061  F037         	movff	??i1_fround+1,?i1___ftmul+1
 17194  003790  C060  F036         	movff	??i1_fround,?i1___ftmul
 17195  003794  0E00               	movlw	0
 17196  003796  6E39               	movwf	?i1___ftmul+3,c
 17197  003798  0E00               	movlw	0
 17198  00379A  6E3A               	movwf	?i1___ftmul+4,c
 17199  00379C  0E3F               	movlw	63
 17200  00379E  6E3B               	movwf	?i1___ftmul+5,c
 17201  0037A0  EC84  F024         	call	i1___ftmul	;wreg free
 17202  0037A4                     L26:
 17203  0037A4  C038  F049         	movff	?i1___ftmul+2,?i1_fround+2
 17204  0037A8  C037  F048         	movff	?i1___ftmul+1,?i1_fround+1
 17205  0037AC  C036  F047         	movff	?i1___ftmul,?i1_fround
 17206  0037B0  0012               	return	
 17207  0037B2                     __end_ofi1_fround:
 17208                           	opt stack 0
 17209                           pclatu	equ	0xFFB
 17210                           pclath	equ	0xFFA
 17211                           tblptru	equ	0xFF8
 17212                           tblptrh	equ	0xFF7
 17213                           tblptrl	equ	0xFF6
 17214                           tablat	equ	0xFF5
 17215                           prodh	equ	0xFF4
 17216                           prodl	equ	0xFF3
 17217                           intcon	equ	0xFF2
 17218                           intcon2	equ	0xFF1
 17219                           postinc0	equ	0xFEE
 17220                           fsr0h	equ	0xFEA
 17221                           fsr0l	equ	0xFE9
 17222                           wreg	equ	0xFE8
 17223                           fsr1h	equ	0xFE2
 17224                           fsr1l	equ	0xFE1
 17225                           bsr	equ	0xFE0
 17226                           indf2	equ	0xFDF
 17227                           postinc2	equ	0xFDE
 17228                           postdec2	equ	0xFDD
 17229                           fsr2h	equ	0xFDA
 17230                           fsr2l	equ	0xFD9
 17231                           status	equ	0xFD8
 17232                           
 17233 ;; *************** function i1_Read_LDR *****************
 17234 ;; Defined at:
 17235 ;;		line 282 in file "main.c"
 17236 ;; Parameters:    Size  Location     Type
 17237 ;;		None
 17238 ;; Auto vars:     Size  Location     Type
 17239 ;;  Read_LDR        3   21[BANK0 ] float 
 17240 ;; Return value:  Size  Location     Type
 17241 ;;                  3   70[COMRAM] float 
 17242 ;; Registers used:
 17243 ;;		wreg, status,2, status,0, cstack
 17244 ;; Tracked objects:
 17245 ;;		On entry : 0/0
 17246 ;;		On exit  : 0/0
 17247 ;;		Unchanged: 0/0
 17248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17249 ;;      Params:         3       0       0       0       0       0       0       0       0
 17250 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17251 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17252 ;;      Totals:         3       7       0       0       0       0       0       0       0
 17253 ;;Total ram usage:       10 bytes
 17254 ;; Hardware stack levels used:    1
 17255 ;; Hardware stack levels required when called:    5
 17256 ;; This function calls:
 17257 ;;		i1___awtoft
 17258 ;;		i1___ftdiv
 17259 ;;		i1___ftmul
 17260 ;; This function is called by:
 17261 ;;		_interrupcaoLOW
 17262 ;; This function uses a non-reentrant model
 17263 ;;
 17264                           
 17265                           	psect	text63
 17266  004F1A                     __ptext63:
 17267                           	opt stack 0
 17268  004F1A                     i1_Read_LDR:
 17269                           	opt stack 19
 17270                           
 17271                           ;main.c: 283: float analog_reading = 0;
 17272                           
 17273                           ;incstack = 0
 17274                           ;incstack = 0
 17275  004F1A  0E00               	movlw	0
 17276  004F1C  0100               	movlb	0	; () banked
 17277  004F1E  0100               	movlb	0	; () banked
 17278  004F20  6F75               	movwf	i1Read_LDR@analog_reading& (0+255),b
 17279  004F22  0E00               	movlw	0
 17280  004F24  0100               	movlb	0	; () banked
 17281  004F26  0100               	movlb	0	; () banked
 17282  004F28  6F76               	movwf	(i1Read_LDR@analog_reading+1)& (0+255),b
 17283  004F2A  0E00               	movlw	0
 17284  004F2C  0100               	movlb	0	; () banked
 17285  004F2E  0100               	movlb	0	; () banked
 17286  004F30  6F77               	movwf	(i1Read_LDR@analog_reading+2)& (0+255),b
 17287                           
 17288                           ; BSR set to: 0
 17289                           ;main.c: 284: ADCON0 |= ((1 << ADON) | (1 << GO));
 17290  004F32  0E00               	movlw	0
 17291  004F34  B2C2               	btfsc	4034,1,c	;volatile
 17292  004F36  0E01               	movlw	1
 17293  004F38  0100               	movlb	0	; () banked
 17294  004F3A  6F71               	movwf	??i1_Read_LDR& (0+255),b
 17295  004F3C  0E01               	movlw	1
 17296  004F3E  0100               	movlb	0	; () banked
 17297  004F40  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 17298  004F42  0100               	movlb	0	; () banked
 17299  004F44  2B71               	incf	??i1_Read_LDR& (0+255),f,b
 17300  004F46  D003               	goto	i1u1039_24
 17301  004F48                     i1u1039_25:
 17302  004F48  0100               	movlb	0	; () banked
 17303  004F4A  90D8               	bcf	status,0,c
 17304  004F4C  3772               	rlcf	(??i1_Read_LDR+1)& (0+255),f,b
 17305  004F4E                     i1u1039_24:
 17306  004F4E  0100               	movlb	0	; () banked
 17307  004F50  2F71               	decfsz	??i1_Read_LDR& (0+255),f,b
 17308  004F52  D7FA               	goto	i1u1039_25
 17309  004F54  0E00               	movlw	0
 17310  004F56  B0C2               	btfsc	4034,0,c	;volatile
 17311  004F58  0E01               	movlw	1
 17312  004F5A  0100               	movlb	0	; () banked
 17313  004F5C  6F73               	movwf	(??i1_Read_LDR+2)& (0+255),b
 17314  004F5E  0E01               	movlw	1
 17315  004F60  0100               	movlb	0	; () banked
 17316  004F62  6F74               	movwf	(??i1_Read_LDR+3)& (0+255),b
 17317  004F64  0100               	movlb	0	; () banked
 17318  004F66  2B73               	incf	(??i1_Read_LDR+2)& (0+255),f,b
 17319  004F68  D003               	goto	i1u1040_24
 17320  004F6A                     i1u1040_25:
 17321  004F6A  0100               	movlb	0	; () banked
 17322  004F6C  90D8               	bcf	status,0,c
 17323  004F6E  3774               	rlcf	(??i1_Read_LDR+3)& (0+255),f,b
 17324  004F70                     i1u1040_24:
 17325  004F70  0100               	movlb	0	; () banked
 17326  004F72  2F73               	decfsz	(??i1_Read_LDR+2)& (0+255),f,b
 17327  004F74  D7FA               	goto	i1u1040_25
 17328  004F76  0100               	movlb	0	; () banked
 17329  004F78  5174               	movf	(??i1_Read_LDR+3)& (0+255),w,b
 17330  004F7A  0100               	movlb	0	; () banked
 17331  004F7C  1172               	iorwf	(??i1_Read_LDR+1)& (0+255),w,b
 17332  004F7E  12C2               	iorwf	4034,f,c	;volatile
 17333  004F80                     i1l223:
 17334  004F80  B2C2               	btfsc	4034,1,c	;volatile
 17335  004F82  D7FE               	goto	i1l223
 17336                           
 17337                           ;main.c: 286: analog_reading = (ADRESH * 256) + (ADRESL);
 17338  004F84  50C4               	movf	4036,w,c	;volatile
 17339  004F86  0100               	movlb	0	; () banked
 17340  004F88  6F72               	movwf	(??i1_Read_LDR+1)& (0+255),b
 17341  004F8A  6B71               	clrf	??i1_Read_LDR& (0+255),b
 17342  004F8C  50C3               	movf	4035,w,c	;volatile
 17343  004F8E  0100               	movlb	0	; () banked
 17344  004F90  2571               	addwf	??i1_Read_LDR& (0+255),w,b
 17345  004F92  6E19               	movwf	?i1___awtoft,c
 17346  004F94  0E00               	movlw	0
 17347  004F96  0100               	movlb	0	; () banked
 17348  004F98  2172               	addwfc	(??i1_Read_LDR+1)& (0+255),w,b
 17349  004F9A  6E1A               	movwf	?i1___awtoft+1,c
 17350  004F9C  EC30  F02F         	call	i1___awtoft	;wreg free
 17351  004FA0  C01B  F077         	movff	?i1___awtoft+2,i1Read_LDR@analog_reading+2
 17352  004FA4  C01A  F076         	movff	?i1___awtoft+1,i1Read_LDR@analog_reading+1
 17353  004FA8  C019  F075         	movff	?i1___awtoft,i1Read_LDR@analog_reading
 17354                           
 17355                           ;main.c: 287: analog_reading = analog_reading*5/1023;
 17356  004FAC  0E00               	movlw	0
 17357  004FAE  6E39               	movwf	?i1___ftmul+3,c
 17358  004FB0  0EA0               	movlw	160
 17359  004FB2  6E3A               	movwf	?i1___ftmul+4,c
 17360  004FB4  0E40               	movlw	64
 17361  004FB6  6E3B               	movwf	?i1___ftmul+5,c
 17362  004FB8  C075  F036         	movff	i1Read_LDR@analog_reading,?i1___ftmul
 17363  004FBC  C076  F037         	movff	i1Read_LDR@analog_reading+1,?i1___ftmul+1
 17364  004FC0  C077  F038         	movff	i1Read_LDR@analog_reading+2,?i1___ftmul+2
 17365  004FC4  EC84  F024         	call	i1___ftmul	;wreg free
 17366  004FC8  C038  F062         	movff	?i1___ftmul+2,?i1___ftdiv+2
 17367  004FCC  C037  F061         	movff	?i1___ftmul+1,?i1___ftdiv+1
 17368  004FD0  C036  F060         	movff	?i1___ftmul,?i1___ftdiv
 17369  004FD4  0EC0               	movlw	192
 17370  004FD6  0100               	movlb	0	; () banked
 17371  004FD8  0100               	movlb	0	; () banked
 17372  004FDA  6F63               	movwf	(?i1___ftdiv+3)& (0+255),b
 17373  004FDC  0E7F               	movlw	127
 17374  004FDE  0100               	movlb	0	; () banked
 17375  004FE0  0100               	movlb	0	; () banked
 17376  004FE2  6F64               	movwf	(?i1___ftdiv+4)& (0+255),b
 17377  004FE4  0E44               	movlw	68
 17378  004FE6  0100               	movlb	0	; () banked
 17379  004FE8  0100               	movlb	0	; () banked
 17380  004FEA  6F65               	movwf	(?i1___ftdiv+5)& (0+255),b
 17381  004FEC  EC8C  F020         	call	i1___ftdiv	;wreg free
 17382  004FF0  C062  F077         	movff	?i1___ftdiv+2,i1Read_LDR@analog_reading+2
 17383  004FF4  C061  F076         	movff	?i1___ftdiv+1,i1Read_LDR@analog_reading+1
 17384  004FF8  C060  F075         	movff	?i1___ftdiv,i1Read_LDR@analog_reading
 17385                           
 17386                           ;main.c: 288: return analog_reading;
 17387  004FFC  C075  F047         	movff	i1Read_LDR@analog_reading,?i1_Read_LDR
 17388  005000  C076  F048         	movff	i1Read_LDR@analog_reading+1,?i1_Read_LDR+1
 17389  005004  C077  F049         	movff	i1Read_LDR@analog_reading+2,?i1_Read_LDR+2
 17390  005008  0012               	return	
 17391  00500A                     __end_ofi1_Read_LDR:
 17392                           	opt stack 0
 17393                           pclatu	equ	0xFFB
 17394                           pclath	equ	0xFFA
 17395                           tblptru	equ	0xFF8
 17396                           tblptrh	equ	0xFF7
 17397                           tblptrl	equ	0xFF6
 17398                           tablat	equ	0xFF5
 17399                           prodh	equ	0xFF4
 17400                           prodl	equ	0xFF3
 17401                           intcon	equ	0xFF2
 17402                           intcon2	equ	0xFF1
 17403                           postinc0	equ	0xFEE
 17404                           fsr0h	equ	0xFEA
 17405                           fsr0l	equ	0xFE9
 17406                           wreg	equ	0xFE8
 17407                           fsr1h	equ	0xFE2
 17408                           fsr1l	equ	0xFE1
 17409                           bsr	equ	0xFE0
 17410                           indf2	equ	0xFDF
 17411                           postinc2	equ	0xFDE
 17412                           postdec2	equ	0xFDD
 17413                           fsr2h	equ	0xFDA
 17414                           fsr2l	equ	0xFD9
 17415                           status	equ	0xFD8
 17416                           
 17417 ;; *************** function i1___ftmul *****************
 17418 ;; Defined at:
 17419 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
 17420 ;; Parameters:    Size  Location     Type
 17421 ;;  __ftmul         3   53[COMRAM] float 
 17422 ;;  __ftmul         3   56[COMRAM] float 
 17423 ;; Auto vars:     Size  Location     Type
 17424 ;;  __ftmul         3   65[COMRAM] unsigned um
 17425 ;;  __ftmul         1   69[COMRAM] unsigned char 
 17426 ;;  __ftmul         1   68[COMRAM] unsigned char 
 17427 ;;  __ftmul         1   64[COMRAM] unsigned char 
 17428 ;; Return value:  Size  Location     Type
 17429 ;;                  3   53[COMRAM] float 
 17430 ;; Registers used:
 17431 ;;		wreg, status,2, status,0, cstack
 17432 ;; Tracked objects:
 17433 ;;		On entry : 0/0
 17434 ;;		On exit  : 0/0
 17435 ;;		Unchanged: 0/0
 17436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17437 ;;      Params:         6       0       0       0       0       0       0       0       0
 17438 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17439 ;;      Temps:          5       0       0       0       0       0       0       0       0
 17440 ;;      Totals:        17       0       0       0       0       0       0       0       0
 17441 ;;Total ram usage:       17 bytes
 17442 ;; Hardware stack levels used:    1
 17443 ;; Hardware stack levels required when called:    4
 17444 ;; This function calls:
 17445 ;;		i1___ftpack
 17446 ;; This function is called by:
 17447 ;;		i1_Read_LDR
 17448 ;;		i1_fround
 17449 ;;		i1_scale
 17450 ;;		i1_sprintf
 17451 ;;		i1___asftmul
 17452 ;; This function uses a non-reentrant model
 17453 ;;
 17454                           
 17455                           	psect	text64
 17456  004908                     __ptext64:
 17457                           	opt stack 0
 17458  004908                     i1___ftmul:
 17459                           	opt stack 19
 17460                           
 17461                           ;incstack = 0
 17462                           ;incstack = 0
 17463  004908  0E0F               	movlw	15
 17464  00490A  6E3C               	movwf	??i1___ftmul& (0+255),c
 17465  00490C  C036  F03D         	movff	i1___ftmul@f1,??i1___ftmul+1
 17466  004910  C037  F03E         	movff	i1___ftmul@f1+1,??i1___ftmul+2
 17467  004914  C038  F03F         	movff	i1___ftmul@f1+2,??i1___ftmul+3
 17468  004918  283C               	incf	??i1___ftmul,w,c
 17469  00491A  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 17470  00491C  D004               	goto	i1u846_20
 17471  00491E                     i1u846_25:
 17472  00491E  90D8               	bcf	status,0,c
 17473  004920  323F               	rrcf	??i1___ftmul+3,f,c
 17474  004922  323E               	rrcf	??i1___ftmul+2,f,c
 17475  004924  323D               	rrcf	??i1___ftmul+1,f,c
 17476  004926                     i1u846_20:
 17477  004926  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 17478  004928  D7FA               	goto	i1u846_25
 17479  00492A  503D               	movf	??i1___ftmul+1,w,c
 17480  00492C  6E41               	movwf	i1___ftmul@exp,c
 17481  00492E  6641               	tstfsz	i1___ftmul@exp& (0+255),c
 17482  004930  D001               	goto	i1l9457
 17483  004932  D015               	goto	i1u849_20
 17484  004934                     i1l9457:
 17485  004934  0E0F               	movlw	15
 17486  004936  6E3C               	movwf	??i1___ftmul& (0+255),c
 17487  004938  C039  F03D         	movff	i1___ftmul@f2,??i1___ftmul+1
 17488  00493C  C03A  F03E         	movff	i1___ftmul@f2+1,??i1___ftmul+2
 17489  004940  C03B  F03F         	movff	i1___ftmul@f2+2,??i1___ftmul+3
 17490  004944  283C               	incf	??i1___ftmul,w,c
 17491  004946  6E40               	movwf	(??i1___ftmul+4)& (0+255),c
 17492  004948  D004               	goto	i1u848_20
 17493  00494A                     i1u848_25:
 17494  00494A  90D8               	bcf	status,0,c
 17495  00494C  323F               	rrcf	??i1___ftmul+3,f,c
 17496  00494E  323E               	rrcf	??i1___ftmul+2,f,c
 17497  004950  323D               	rrcf	??i1___ftmul+1,f,c
 17498  004952                     i1u848_20:
 17499  004952  2E40               	decfsz	(??i1___ftmul+4)& (0+255),f,c
 17500  004954  D7FA               	goto	i1u848_25
 17501  004956  503D               	movf	??i1___ftmul+1,w,c
 17502  004958  6E46               	movwf	i1___ftmul@sign,c
 17503  00495A  6646               	tstfsz	i1___ftmul@sign& (0+255),c
 17504  00495C  D007               	goto	i1l9463
 17505  00495E                     i1u849_20:
 17506  00495E  0E00               	movlw	0
 17507  004960  6E36               	movwf	?i1___ftmul,c
 17508  004962  0E00               	movlw	0
 17509  004964  6E37               	movwf	?i1___ftmul+1,c
 17510  004966  0E00               	movlw	0
 17511  004968  6E38               	movwf	?i1___ftmul+2,c
 17512  00496A  D055               	goto	i1l774
 17513  00496C                     i1l9463:
 17514  00496C  5046               	movf	i1___ftmul@sign,w,c
 17515  00496E  0F7B               	addlw	123
 17516  004970  2641               	addwf	i1___ftmul@exp,f,c
 17517  004972  C038  F046         	movff	i1___ftmul@f1+2,i1___ftmul@sign
 17518  004976  503B               	movf	(i1___ftmul@f2+2)& (0+255),w,c
 17519  004978  1A46               	xorwf	i1___ftmul@sign,f,c
 17520  00497A  0E80               	movlw	128
 17521  00497C  1646               	andwf	i1___ftmul@sign,f,c
 17522  00497E  8E37               	bsf	i1___ftmul@f1+1,7,c
 17523  004980  8E3A               	bsf	i1___ftmul@f2+1,7,c
 17524  004982  0EFF               	movlw	255
 17525  004984  1639               	andwf	i1___ftmul@f2,f,c
 17526  004986  0EFF               	movlw	255
 17527  004988  163A               	andwf	i1___ftmul@f2+1,f,c
 17528  00498A  0E00               	movlw	0
 17529  00498C  163B               	andwf	i1___ftmul@f2+2,f,c
 17530  00498E  0E00               	movlw	0
 17531  004990  6E42               	movwf	i1___ftmul@f3_as_product,c
 17532  004992  0E00               	movlw	0
 17533  004994  6E43               	movwf	i1___ftmul@f3_as_product+1,c
 17534  004996  0E00               	movlw	0
 17535  004998  6E44               	movwf	i1___ftmul@f3_as_product+2,c
 17536  00499A  6E3C               	movwf	??i1___ftmul& (0+255),c
 17537  00499C  0E07               	movlw	7
 17538  00499E  6E45               	movwf	i1___ftmul@cntr,c
 17539  0049A0  503C               	movf	??i1___ftmul& (0+255),w,c
 17540  0049A2                     i1l9477:
 17541  0049A2  A036               	btfss	i1___ftmul@f1,0,c
 17542  0049A4  D006               	goto	i1l9481
 17543  0049A6  5039               	movf	i1___ftmul@f2,w,c
 17544  0049A8  2642               	addwf	i1___ftmul@f3_as_product,f,c
 17545  0049AA  503A               	movf	i1___ftmul@f2+1,w,c
 17546  0049AC  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 17547  0049AE  503B               	movf	i1___ftmul@f2+2,w,c
 17548  0049B0  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 17549  0049B2                     i1l9481:
 17550  0049B2  90D8               	bcf	status,0,c
 17551  0049B4  3238               	rrcf	i1___ftmul@f1+2,f,c
 17552  0049B6  3237               	rrcf	i1___ftmul@f1+1,f,c
 17553  0049B8  3236               	rrcf	i1___ftmul@f1,f,c
 17554  0049BA  90D8               	bcf	status,0,c
 17555  0049BC  3639               	rlcf	i1___ftmul@f2,f,c
 17556  0049BE  363A               	rlcf	i1___ftmul@f2+1,f,c
 17557  0049C0  363B               	rlcf	i1___ftmul@f2+2,f,c
 17558  0049C2  2E45               	decfsz	i1___ftmul@cntr,f,c
 17559  0049C4  D7EE               	goto	i1l9477
 17560  0049C6  6E3C               	movwf	??i1___ftmul& (0+255),c
 17561  0049C8  0E09               	movlw	9
 17562  0049CA  6E45               	movwf	i1___ftmul@cntr,c
 17563  0049CC  503C               	movf	??i1___ftmul& (0+255),w,c
 17564  0049CE                     i1l9487:
 17565  0049CE  A036               	btfss	i1___ftmul@f1,0,c
 17566  0049D0  D006               	goto	i1l9491
 17567  0049D2  5039               	movf	i1___ftmul@f2,w,c
 17568  0049D4  2642               	addwf	i1___ftmul@f3_as_product,f,c
 17569  0049D6  503A               	movf	i1___ftmul@f2+1,w,c
 17570  0049D8  2243               	addwfc	i1___ftmul@f3_as_product+1,f,c
 17571  0049DA  503B               	movf	i1___ftmul@f2+2,w,c
 17572  0049DC  2244               	addwfc	i1___ftmul@f3_as_product+2,f,c
 17573  0049DE                     i1l9491:
 17574  0049DE  90D8               	bcf	status,0,c
 17575  0049E0  3238               	rrcf	i1___ftmul@f1+2,f,c
 17576  0049E2  3237               	rrcf	i1___ftmul@f1+1,f,c
 17577  0049E4  3236               	rrcf	i1___ftmul@f1,f,c
 17578  0049E6  90D8               	bcf	status,0,c
 17579  0049E8  3244               	rrcf	i1___ftmul@f3_as_product+2,f,c
 17580  0049EA  3243               	rrcf	i1___ftmul@f3_as_product+1,f,c
 17581  0049EC  3242               	rrcf	i1___ftmul@f3_as_product,f,c
 17582  0049EE  2E45               	decfsz	i1___ftmul@cntr,f,c
 17583  0049F0  D7EE               	goto	i1l9487
 17584  0049F2  C042  F011         	movff	i1___ftmul@f3_as_product,?i1___ftpack
 17585  0049F6  C043  F012         	movff	i1___ftmul@f3_as_product+1,?i1___ftpack+1
 17586  0049FA  C044  F013         	movff	i1___ftmul@f3_as_product+2,?i1___ftpack+2
 17587  0049FE  C041  F014         	movff	i1___ftmul@exp,?i1___ftpack+3
 17588  004A02  C046  F015         	movff	i1___ftmul@sign,?i1___ftpack+4
 17589  004A06  ECC3  F029         	call	i1___ftpack	;wreg free
 17590  004A0A  C013  F038         	movff	?i1___ftpack+2,?i1___ftmul+2
 17591  004A0E  C012  F037         	movff	?i1___ftpack+1,?i1___ftmul+1
 17592  004A12  C011  F036         	movff	?i1___ftpack,?i1___ftmul
 17593  004A16                     i1l774:
 17594  004A16  0012               	return	
 17595  004A18                     __end_ofi1___ftmul:
 17596                           	opt stack 0
 17597                           pclatu	equ	0xFFB
 17598                           pclath	equ	0xFFA
 17599                           tblptru	equ	0xFF8
 17600                           tblptrh	equ	0xFF7
 17601                           tblptrl	equ	0xFF6
 17602                           tablat	equ	0xFF5
 17603                           prodh	equ	0xFF4
 17604                           prodl	equ	0xFF3
 17605                           intcon	equ	0xFF2
 17606                           intcon2	equ	0xFF1
 17607                           postinc0	equ	0xFEE
 17608                           fsr0h	equ	0xFEA
 17609                           fsr0l	equ	0xFE9
 17610                           wreg	equ	0xFE8
 17611                           fsr1h	equ	0xFE2
 17612                           fsr1l	equ	0xFE1
 17613                           bsr	equ	0xFE0
 17614                           indf2	equ	0xFDF
 17615                           postinc2	equ	0xFDE
 17616                           postdec2	equ	0xFDD
 17617                           fsr2h	equ	0xFDA
 17618                           fsr2l	equ	0xFD9
 17619                           status	equ	0xFD8
 17620                           
 17621 ;; *************** function i1___ftdiv *****************
 17622 ;; Defined at:
 17623 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftdiv.c"
 17624 ;; Parameters:    Size  Location     Type
 17625 ;;  __ftdiv         3    0[BANK0 ] float 
 17626 ;;  __ftdiv         3    3[BANK0 ] float 
 17627 ;; Auto vars:     Size  Location     Type
 17628 ;;  __ftdiv         3   13[BANK0 ] float 
 17629 ;;  __ftdiv         1   16[BANK0 ] unsigned char 
 17630 ;;  __ftdiv         1   12[BANK0 ] unsigned char 
 17631 ;;  __ftdiv         1   11[BANK0 ] unsigned char 
 17632 ;; Return value:  Size  Location     Type
 17633 ;;                  3    0[BANK0 ] float 
 17634 ;; Registers used:
 17635 ;;		wreg, status,2, status,0, cstack
 17636 ;; Tracked objects:
 17637 ;;		On entry : 0/0
 17638 ;;		On exit  : 0/0
 17639 ;;		Unchanged: 0/0
 17640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17641 ;;      Params:         0       6       0       0       0       0       0       0       0
 17642 ;;      Locals:         0       6       0       0       0       0       0       0       0
 17643 ;;      Temps:          0       5       0       0       0       0       0       0       0
 17644 ;;      Totals:         0      17       0       0       0       0       0       0       0
 17645 ;;Total ram usage:       17 bytes
 17646 ;; Hardware stack levels used:    1
 17647 ;; Hardware stack levels required when called:    4
 17648 ;; This function calls:
 17649 ;;		i1___ftpack
 17650 ;; This function is called by:
 17651 ;;		i1_Read_LDR
 17652 ;; This function uses a non-reentrant model
 17653 ;;
 17654                           
 17655                           	psect	text65
 17656  004118                     __ptext65:
 17657                           	opt stack 0
 17658  004118                     i1___ftdiv:
 17659                           	opt stack 19
 17660                           
 17661                           ;incstack = 0
 17662                           ;incstack = 0
 17663  004118  0E0F               	movlw	15
 17664  00411A  0100               	movlb	0	; () banked
 17665  00411C  6F66               	movwf	??i1___ftdiv& (0+255),b
 17666  00411E  0100               	movlb	0	; () banked
 17667  004120  C060  F067         	movff	i1___ftdiv@f1,??i1___ftdiv+1
 17668  004124  0100               	movlb	0	; () banked
 17669  004126  C061  F068         	movff	i1___ftdiv@f1+1,??i1___ftdiv+2
 17670  00412A  0100               	movlb	0	; () banked
 17671  00412C  C062  F069         	movff	i1___ftdiv@f1+2,??i1___ftdiv+3
 17672  004130  0100               	movlb	0	; () banked
 17673  004132  2966               	incf	??i1___ftdiv& (0+255),w,b
 17674  004134  0100               	movlb	0	; () banked
 17675  004136  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 17676  004138  D005               	goto	i1u1105_20
 17677  00413A                     i1u1105_25:
 17678  00413A  0100               	movlb	0	; () banked
 17679  00413C  90D8               	bcf	status,0,c
 17680  00413E  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 17681  004140  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 17682  004142  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 17683  004144                     i1u1105_20:
 17684  004144  0100               	movlb	0	; () banked
 17685  004146  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 17686  004148  D7F8               	goto	i1u1105_25
 17687  00414A  0100               	movlb	0	; () banked
 17688  00414C  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 17689  00414E  0100               	movlb	0	; () banked
 17690  004150  0100               	movlb	0	; () banked
 17691  004152  6F6C               	movwf	i1___ftdiv@exp& (0+255),b
 17692  004154  0100               	movlb	0	; () banked
 17693  004156  676C               	tstfsz	i1___ftdiv@exp& (0+255),b
 17694  004158  D001               	goto	i1l11505
 17695  00415A  D021               	goto	i1u1108_20
 17696  00415C                     i1l11505:
 17697                           
 17698                           ; BSR set to: 0
 17699  00415C  0E0F               	movlw	15
 17700  00415E  0100               	movlb	0	; () banked
 17701  004160  6F66               	movwf	??i1___ftdiv& (0+255),b
 17702  004162  0100               	movlb	0	; () banked
 17703  004164  C063  F067         	movff	i1___ftdiv@f2,??i1___ftdiv+1
 17704  004168  0100               	movlb	0	; () banked
 17705  00416A  C064  F068         	movff	i1___ftdiv@f2+1,??i1___ftdiv+2
 17706  00416E  0100               	movlb	0	; () banked
 17707  004170  C065  F069         	movff	i1___ftdiv@f2+2,??i1___ftdiv+3
 17708  004174  0100               	movlb	0	; () banked
 17709  004176  2966               	incf	??i1___ftdiv& (0+255),w,b
 17710  004178  0100               	movlb	0	; () banked
 17711  00417A  6F6A               	movwf	(??i1___ftdiv+4)& (0+255),b
 17712  00417C  D005               	goto	i1u1107_20
 17713  00417E                     i1u1107_25:
 17714  00417E  0100               	movlb	0	; () banked
 17715  004180  90D8               	bcf	status,0,c
 17716  004182  3369               	rrcf	(??i1___ftdiv+3)& (0+255),f,b
 17717  004184  3368               	rrcf	(??i1___ftdiv+2)& (0+255),f,b
 17718  004186  3367               	rrcf	(??i1___ftdiv+1)& (0+255),f,b
 17719  004188                     i1u1107_20:
 17720  004188  0100               	movlb	0	; () banked
 17721  00418A  2F6A               	decfsz	(??i1___ftdiv+4)& (0+255),f,b
 17722  00418C  D7F8               	goto	i1u1107_25
 17723  00418E  0100               	movlb	0	; () banked
 17724  004190  5167               	movf	(??i1___ftdiv+1)& (0+255),w,b
 17725  004192  0100               	movlb	0	; () banked
 17726  004194  0100               	movlb	0	; () banked
 17727  004196  6F70               	movwf	i1___ftdiv@sign& (0+255),b
 17728  004198  0100               	movlb	0	; () banked
 17729  00419A  6770               	tstfsz	i1___ftdiv@sign& (0+255),b
 17730  00419C  D00D               	goto	i1l11511
 17731  00419E                     i1u1108_20:
 17732                           
 17733                           ; BSR set to: 0
 17734  00419E  0E00               	movlw	0
 17735  0041A0  0100               	movlb	0	; () banked
 17736  0041A2  0100               	movlb	0	; () banked
 17737  0041A4  6F60               	movwf	?i1___ftdiv& (0+255),b
 17738  0041A6  0E00               	movlw	0
 17739  0041A8  0100               	movlb	0	; () banked
 17740  0041AA  0100               	movlb	0	; () banked
 17741  0041AC  6F61               	movwf	(?i1___ftdiv+1)& (0+255),b
 17742  0041AE  0E00               	movlw	0
 17743  0041B0  0100               	movlb	0	; () banked
 17744  0041B2  0100               	movlb	0	; () banked
 17745  0041B4  6F62               	movwf	(?i1___ftdiv+2)& (0+255),b
 17746  0041B6  D093               	goto	i1l742
 17747  0041B8                     i1l11511:
 17748                           
 17749                           ; BSR set to: 0
 17750  0041B8  0E00               	movlw	0
 17751  0041BA  0100               	movlb	0	; () banked
 17752  0041BC  0100               	movlb	0	; () banked
 17753  0041BE  6F6D               	movwf	i1___ftdiv@f3& (0+255),b
 17754  0041C0  0E00               	movlw	0
 17755  0041C2  0100               	movlb	0	; () banked
 17756  0041C4  0100               	movlb	0	; () banked
 17757  0041C6  6F6E               	movwf	(i1___ftdiv@f3+1)& (0+255),b
 17758  0041C8  0E00               	movlw	0
 17759  0041CA  0100               	movlb	0	; () banked
 17760  0041CC  0100               	movlb	0	; () banked
 17761  0041CE  6F6F               	movwf	(i1___ftdiv@f3+2)& (0+255),b
 17762                           
 17763                           ; BSR set to: 0
 17764  0041D0  0100               	movlb	0	; () banked
 17765  0041D2  0100               	movlb	0	; () banked
 17766  0041D4  5170               	movf	i1___ftdiv@sign& (0+255),w,b
 17767  0041D6  0F89               	addlw	137
 17768  0041D8  0100               	movlb	0	; () banked
 17769  0041DA  0100               	movlb	0	; () banked
 17770  0041DC  5F6C               	subwf	i1___ftdiv@exp& (0+255),f,b
 17771                           
 17772                           ; BSR set to: 0
 17773  0041DE  C062  F070         	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
 17774                           
 17775                           ; BSR set to: 0
 17776  0041E2  0100               	movlb	0	; () banked
 17777  0041E4  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17778  0041E6  0100               	movlb	0	; () banked
 17779  0041E8  0100               	movlb	0	; () banked
 17780  0041EA  1B70               	xorwf	i1___ftdiv@sign& (0+255),f,b
 17781                           
 17782                           ; BSR set to: 0
 17783  0041EC  0E80               	movlw	128
 17784  0041EE  0100               	movlb	0	; () banked
 17785  0041F0  0100               	movlb	0	; () banked
 17786  0041F2  1770               	andwf	i1___ftdiv@sign& (0+255),f,b
 17787                           
 17788                           ; BSR set to: 0
 17789  0041F4  0100               	movlb	0	; () banked
 17790  0041F6  0100               	movlb	0	; () banked
 17791  0041F8  8F61               	bsf	(i1___ftdiv@f1+1)& (0+255),7,b
 17792                           
 17793                           ; BSR set to: 0
 17794  0041FA  0EFF               	movlw	255
 17795  0041FC  0100               	movlb	0	; () banked
 17796  0041FE  0100               	movlb	0	; () banked
 17797  004200  1760               	andwf	i1___ftdiv@f1& (0+255),f,b
 17798  004202  0EFF               	movlw	255
 17799  004204  0100               	movlb	0	; () banked
 17800  004206  0100               	movlb	0	; () banked
 17801  004208  1761               	andwf	(i1___ftdiv@f1+1)& (0+255),f,b
 17802  00420A  0E00               	movlw	0
 17803  00420C  0100               	movlb	0	; () banked
 17804  00420E  0100               	movlb	0	; () banked
 17805  004210  1762               	andwf	(i1___ftdiv@f1+2)& (0+255),f,b
 17806                           
 17807                           ; BSR set to: 0
 17808  004212  0100               	movlb	0	; () banked
 17809  004214  0100               	movlb	0	; () banked
 17810  004216  8F64               	bsf	(i1___ftdiv@f2+1)& (0+255),7,b
 17811                           
 17812                           ; BSR set to: 0
 17813  004218  0EFF               	movlw	255
 17814  00421A  0100               	movlb	0	; () banked
 17815  00421C  0100               	movlb	0	; () banked
 17816  00421E  1763               	andwf	i1___ftdiv@f2& (0+255),f,b
 17817  004220  0EFF               	movlw	255
 17818  004222  0100               	movlb	0	; () banked
 17819  004224  0100               	movlb	0	; () banked
 17820  004226  1764               	andwf	(i1___ftdiv@f2+1)& (0+255),f,b
 17821  004228  0E00               	movlw	0
 17822  00422A  0100               	movlb	0	; () banked
 17823  00422C  0100               	movlb	0	; () banked
 17824  00422E  1765               	andwf	(i1___ftdiv@f2+2)& (0+255),f,b
 17825                           
 17826                           ; BSR set to: 0
 17827  004230  0100               	movlb	0	; () banked
 17828  004232  6F66               	movwf	??i1___ftdiv& (0+255),b
 17829  004234  0E18               	movlw	24
 17830  004236  0100               	movlb	0	; () banked
 17831  004238  0100               	movlb	0	; () banked
 17832  00423A  6F6B               	movwf	i1___ftdiv@cntr& (0+255),b
 17833  00423C  0100               	movlb	0	; () banked
 17834  00423E  5166               	movf	??i1___ftdiv& (0+255),w,b
 17835  004240                     i1l744:
 17836                           
 17837                           ; BSR set to: 0
 17838  004240  0100               	movlb	0	; () banked
 17839  004242  90D8               	bcf	status,0,c
 17840  004244  0100               	movlb	0	; () banked
 17841  004246  376D               	rlcf	i1___ftdiv@f3& (0+255),f,b
 17842  004248  0100               	movlb	0	; () banked
 17843  00424A  376E               	rlcf	(i1___ftdiv@f3+1)& (0+255),f,b
 17844  00424C  0100               	movlb	0	; () banked
 17845  00424E  376F               	rlcf	(i1___ftdiv@f3+2)& (0+255),f,b
 17846                           
 17847                           ; BSR set to: 0
 17848  004250  0100               	movlb	0	; () banked
 17849  004252  0100               	movlb	0	; () banked
 17850  004254  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 17851  004256  0100               	movlb	0	; () banked
 17852  004258  0100               	movlb	0	; () banked
 17853  00425A  5D60               	subwf	i1___ftdiv@f1& (0+255),w,b
 17854  00425C  0100               	movlb	0	; () banked
 17855  00425E  0100               	movlb	0	; () banked
 17856  004260  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 17857  004262  0100               	movlb	0	; () banked
 17858  004264  0100               	movlb	0	; () banked
 17859  004266  5961               	subwfb	(i1___ftdiv@f1+1)& (0+255),w,b
 17860  004268  0100               	movlb	0	; () banked
 17861  00426A  0100               	movlb	0	; () banked
 17862  00426C  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17863  00426E  0100               	movlb	0	; () banked
 17864  004270  0100               	movlb	0	; () banked
 17865  004272  5962               	subwfb	(i1___ftdiv@f1+2)& (0+255),w,b
 17866  004274  A0D8               	btfss	status,0,c
 17867  004276  D015               	goto	i1l745
 17868                           
 17869                           ; BSR set to: 0
 17870  004278  0100               	movlb	0	; () banked
 17871  00427A  0100               	movlb	0	; () banked
 17872  00427C  5163               	movf	i1___ftdiv@f2& (0+255),w,b
 17873  00427E  0100               	movlb	0	; () banked
 17874  004280  0100               	movlb	0	; () banked
 17875  004282  5F60               	subwf	i1___ftdiv@f1& (0+255),f,b
 17876  004284  0100               	movlb	0	; () banked
 17877  004286  0100               	movlb	0	; () banked
 17878  004288  5164               	movf	(i1___ftdiv@f2+1)& (0+255),w,b
 17879  00428A  0100               	movlb	0	; () banked
 17880  00428C  0100               	movlb	0	; () banked
 17881  00428E  5B61               	subwfb	(i1___ftdiv@f1+1)& (0+255),f,b
 17882  004290  0100               	movlb	0	; () banked
 17883  004292  0100               	movlb	0	; () banked
 17884  004294  5165               	movf	(i1___ftdiv@f2+2)& (0+255),w,b
 17885  004296  0100               	movlb	0	; () banked
 17886  004298  0100               	movlb	0	; () banked
 17887  00429A  5B62               	subwfb	(i1___ftdiv@f1+2)& (0+255),f,b
 17888                           
 17889                           ; BSR set to: 0
 17890  00429C  0100               	movlb	0	; () banked
 17891  00429E  0100               	movlb	0	; () banked
 17892  0042A0  816D               	bsf	i1___ftdiv@f3& (0+255),0,b
 17893  0042A2                     i1l745:
 17894                           
 17895                           ; BSR set to: 0
 17896  0042A2  0100               	movlb	0	; () banked
 17897  0042A4  90D8               	bcf	status,0,c
 17898  0042A6  0100               	movlb	0	; () banked
 17899  0042A8  3760               	rlcf	i1___ftdiv@f1& (0+255),f,b
 17900  0042AA  0100               	movlb	0	; () banked
 17901  0042AC  3761               	rlcf	(i1___ftdiv@f1+1)& (0+255),f,b
 17902  0042AE  0100               	movlb	0	; () banked
 17903  0042B0  3762               	rlcf	(i1___ftdiv@f1+2)& (0+255),f,b
 17904                           
 17905                           ; BSR set to: 0
 17906  0042B2  0100               	movlb	0	; () banked
 17907  0042B4  0100               	movlb	0	; () banked
 17908  0042B6  2F6B               	decfsz	i1___ftdiv@cntr& (0+255),f,b
 17909  0042B8  D7C3               	goto	i1l744
 17910                           
 17911                           ; BSR set to: 0
 17912                           
 17913                           ; BSR set to: 0
 17914  0042BA  C06D  F011         	movff	i1___ftdiv@f3,?i1___ftpack
 17915  0042BE  C06E  F012         	movff	i1___ftdiv@f3+1,?i1___ftpack+1
 17916  0042C2  C06F  F013         	movff	i1___ftdiv@f3+2,?i1___ftpack+2
 17917  0042C6  C06C  F014         	movff	i1___ftdiv@exp,?i1___ftpack+3
 17918  0042CA  C070  F015         	movff	i1___ftdiv@sign,?i1___ftpack+4
 17919  0042CE  ECC3  F029         	call	i1___ftpack	;wreg free
 17920  0042D2  C013  F062         	movff	?i1___ftpack+2,?i1___ftdiv+2
 17921  0042D6  C012  F061         	movff	?i1___ftpack+1,?i1___ftdiv+1
 17922  0042DA  C011  F060         	movff	?i1___ftpack,?i1___ftdiv
 17923  0042DE                     i1l742:
 17924  0042DE  0012               	return	
 17925  0042E0                     __end_ofi1___ftdiv:
 17926                           	opt stack 0
 17927                           pclatu	equ	0xFFB
 17928                           pclath	equ	0xFFA
 17929                           tblptru	equ	0xFF8
 17930                           tblptrh	equ	0xFF7
 17931                           tblptrl	equ	0xFF6
 17932                           tablat	equ	0xFF5
 17933                           prodh	equ	0xFF4
 17934                           prodl	equ	0xFF3
 17935                           intcon	equ	0xFF2
 17936                           intcon2	equ	0xFF1
 17937                           postinc0	equ	0xFEE
 17938                           fsr0h	equ	0xFEA
 17939                           fsr0l	equ	0xFE9
 17940                           wreg	equ	0xFE8
 17941                           fsr1h	equ	0xFE2
 17942                           fsr1l	equ	0xFE1
 17943                           bsr	equ	0xFE0
 17944                           indf2	equ	0xFDF
 17945                           postinc2	equ	0xFDE
 17946                           postdec2	equ	0xFDD
 17947                           fsr2h	equ	0xFDA
 17948                           fsr2l	equ	0xFD9
 17949                           status	equ	0xFD8
 17950                           
 17951 ;; *************** function i1___ftpack *****************
 17952 ;; Defined at:
 17953 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
 17954 ;; Parameters:    Size  Location     Type
 17955 ;;  __ftpack        3   16[COMRAM] unsigned um
 17956 ;;  __ftpack        1   19[COMRAM] unsigned char 
 17957 ;;  __ftpack        1   20[COMRAM] unsigned char 
 17958 ;; Auto vars:     Size  Location     Type
 17959 ;;		None
 17960 ;; Return value:  Size  Location     Type
 17961 ;;                  3   16[COMRAM] float 
 17962 ;; Registers used:
 17963 ;;		wreg, status,2, status,0
 17964 ;; Tracked objects:
 17965 ;;		On entry : 0/0
 17966 ;;		On exit  : 0/0
 17967 ;;		Unchanged: 0/0
 17968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17969 ;;      Params:         5       0       0       0       0       0       0       0       0
 17970 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17971 ;;      Temps:          3       0       0       0       0       0       0       0       0
 17972 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17973 ;;Total ram usage:        8 bytes
 17974 ;; Hardware stack levels used:    1
 17975 ;; Hardware stack levels required when called:    3
 17976 ;; This function calls:
 17977 ;;		Nothing
 17978 ;; This function is called by:
 17979 ;;		i1___awtoft
 17980 ;;		i1___ftadd
 17981 ;;		i1___ftdiv
 17982 ;;		i1___ftmul
 17983 ;;		i1___lltoft
 17984 ;; This function uses a non-reentrant model
 17985 ;;
 17986                           
 17987                           	psect	text66
 17988  005386                     __ptext66:
 17989                           	opt stack 0
 17990  005386                     i1___ftpack:
 17991                           	opt stack 19
 17992                           
 17993                           ;incstack = 0
 17994                           ;incstack = 0
 17995  005386  5014               	movf	i1___ftpack@exp,w,c
 17996  005388  B4D8               	btfsc	status,2,c
 17997  00538A  D005               	goto	i1l9233
 17998  00538C  5011               	movf	i1___ftpack@arg,w,c
 17999  00538E  1012               	iorwf	i1___ftpack@arg+1,w,c
 18000  005390  1013               	iorwf	i1___ftpack@arg+2,w,c
 18001  005392  A4D8               	btfss	status,2,c
 18002  005394  D00C               	goto	i1l9239
 18003  005396                     i1l9233:
 18004  005396  0E00               	movlw	0
 18005  005398  6E11               	movwf	?i1___ftpack,c
 18006  00539A  0E00               	movlw	0
 18007  00539C  6E12               	movwf	?i1___ftpack+1,c
 18008  00539E  0E00               	movlw	0
 18009  0053A0  6E13               	movwf	?i1___ftpack+2,c
 18010  0053A2  D04C               	goto	i1l673
 18011  0053A4                     i1l9237:
 18012  0053A4  2A14               	incf	i1___ftpack@exp,f,c
 18013  0053A6  90D8               	bcf	status,0,c
 18014  0053A8  3213               	rrcf	i1___ftpack@arg+2,f,c
 18015  0053AA  3212               	rrcf	i1___ftpack@arg+1,f,c
 18016  0053AC  3211               	rrcf	i1___ftpack@arg,f,c
 18017  0053AE                     i1l9239:
 18018  0053AE  0E00               	movlw	0
 18019  0053B0  1411               	andwf	i1___ftpack@arg,w,c
 18020  0053B2  6E16               	movwf	??i1___ftpack& (0+255),c
 18021  0053B4  0E00               	movlw	0
 18022  0053B6  1412               	andwf	i1___ftpack@arg+1,w,c
 18023  0053B8  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 18024  0053BA  0EFE               	movlw	254
 18025  0053BC  1413               	andwf	i1___ftpack@arg+2,w,c
 18026  0053BE  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18027  0053C0  5016               	movf	??i1___ftpack,w,c
 18028  0053C2  1017               	iorwf	??i1___ftpack+1,w,c
 18029  0053C4  1018               	iorwf	??i1___ftpack+2,w,c
 18030  0053C6  B4D8               	btfsc	status,2,c
 18031  0053C8  D00C               	goto	i1l9245
 18032  0053CA  D7EC               	goto	i1l9237
 18033  0053CC                     i1l9241:
 18034  0053CC  2A14               	incf	i1___ftpack@exp,f,c
 18035  0053CE  0E01               	movlw	1
 18036  0053D0  2611               	addwf	i1___ftpack@arg,f,c
 18037  0053D2  0E00               	movlw	0
 18038  0053D4  2212               	addwfc	i1___ftpack@arg+1,f,c
 18039  0053D6  0E00               	movlw	0
 18040  0053D8  2213               	addwfc	i1___ftpack@arg+2,f,c
 18041  0053DA  90D8               	bcf	status,0,c
 18042  0053DC  3213               	rrcf	i1___ftpack@arg+2,f,c
 18043  0053DE  3212               	rrcf	i1___ftpack@arg+1,f,c
 18044  0053E0  3211               	rrcf	i1___ftpack@arg,f,c
 18045  0053E2                     i1l9245:
 18046  0053E2  0E00               	movlw	0
 18047  0053E4  1411               	andwf	i1___ftpack@arg,w,c
 18048  0053E6  6E16               	movwf	??i1___ftpack& (0+255),c
 18049  0053E8  0E00               	movlw	0
 18050  0053EA  1412               	andwf	i1___ftpack@arg+1,w,c
 18051  0053EC  6E17               	movwf	(??i1___ftpack+1)& (0+255),c
 18052  0053EE  0EFF               	movlw	255
 18053  0053F0  1413               	andwf	i1___ftpack@arg+2,w,c
 18054  0053F2  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18055  0053F4  5016               	movf	??i1___ftpack,w,c
 18056  0053F6  1017               	iorwf	??i1___ftpack+1,w,c
 18057  0053F8  1018               	iorwf	??i1___ftpack+2,w,c
 18058  0053FA  B4D8               	btfsc	status,2,c
 18059  0053FC  D006               	goto	i1l9249
 18060  0053FE  D7E6               	goto	i1l9241
 18061  005400                     i1l9247:
 18062  005400  0614               	decf	i1___ftpack@exp,f,c
 18063  005402  90D8               	bcf	status,0,c
 18064  005404  3611               	rlcf	i1___ftpack@arg,f,c
 18065  005406  3612               	rlcf	i1___ftpack@arg+1,f,c
 18066  005408  3613               	rlcf	i1___ftpack@arg+2,f,c
 18067  00540A                     i1l9249:
 18068  00540A  AE12               	btfss	i1___ftpack@arg+1,7,c
 18069  00540C  D7F9               	goto	i1l9247
 18070  00540E  A014               	btfss	i1___ftpack@exp,0,c
 18071  005410  9E12               	bcf	i1___ftpack@arg+1,7,c
 18072  005412  90D8               	bcf	status,0,c
 18073  005414  3214               	rrcf	i1___ftpack@exp,f,c
 18074  005416  5014               	movf	i1___ftpack@exp,w,c
 18075  005418  6E18               	movwf	(??i1___ftpack+2)& (0+255),c
 18076  00541A  6A17               	clrf	(??i1___ftpack+1)& (0+255),c
 18077  00541C  6A16               	clrf	??i1___ftpack& (0+255),c
 18078  00541E  5016               	movf	??i1___ftpack,w,c
 18079  005420  1211               	iorwf	i1___ftpack@arg,f,c
 18080  005422  5017               	movf	??i1___ftpack+1,w,c
 18081  005424  1212               	iorwf	i1___ftpack@arg+1,f,c
 18082  005426  5018               	movf	??i1___ftpack+2,w,c
 18083  005428  1213               	iorwf	i1___ftpack@arg+2,f,c
 18084  00542A  5015               	movf	i1___ftpack@sign,w,c
 18085  00542C  A4D8               	btfss	status,2,c
 18086  00542E  8E13               	bsf	i1___ftpack@arg+2,7,c
 18087  005430  C011  F011         	movff	i1___ftpack@arg,?i1___ftpack
 18088  005434  C012  F012         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 18089  005438  C013  F013         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 18090  00543C                     i1l673:
 18091  00543C  0012               	return	
 18092  00543E                     __end_ofi1___ftpack:
 18093                           	opt stack 0
 18094                           pclatu	equ	0xFFB
 18095                           pclath	equ	0xFFA
 18096                           tblptru	equ	0xFF8
 18097                           tblptrh	equ	0xFF7
 18098                           tblptrl	equ	0xFF6
 18099                           tablat	equ	0xFF5
 18100                           prodh	equ	0xFF4
 18101                           prodl	equ	0xFF3
 18102                           intcon	equ	0xFF2
 18103                           intcon2	equ	0xFF1
 18104                           postinc0	equ	0xFEE
 18105                           fsr0h	equ	0xFEA
 18106                           fsr0l	equ	0xFE9
 18107                           wreg	equ	0xFE8
 18108                           fsr1h	equ	0xFE2
 18109                           fsr1l	equ	0xFE1
 18110                           bsr	equ	0xFE0
 18111                           indf2	equ	0xFDF
 18112                           postinc2	equ	0xFDE
 18113                           postdec2	equ	0xFDD
 18114                           fsr2h	equ	0xFDA
 18115                           fsr2l	equ	0xFD9
 18116                           status	equ	0xFD8
 18117                           
 18118 ;; *************** function i1___awtoft *****************
 18119 ;; Defined at:
 18120 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
 18121 ;; Parameters:    Size  Location     Type
 18122 ;;  __awtoft        2   24[COMRAM] int 
 18123 ;; Auto vars:     Size  Location     Type
 18124 ;;  __awtoft        1   28[COMRAM] unsigned char 
 18125 ;; Return value:  Size  Location     Type
 18126 ;;                  3   24[COMRAM] float 
 18127 ;; Registers used:
 18128 ;;		wreg, status,2, status,0, cstack
 18129 ;; Tracked objects:
 18130 ;;		On entry : 0/0
 18131 ;;		On exit  : 0/0
 18132 ;;		Unchanged: 0/0
 18133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18134 ;;      Params:         3       0       0       0       0       0       0       0       0
 18135 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18136 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18137 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18138 ;;Total ram usage:        5 bytes
 18139 ;; Hardware stack levels used:    1
 18140 ;; Hardware stack levels required when called:    4
 18141 ;; This function calls:
 18142 ;;		i1___ftpack
 18143 ;; This function is called by:
 18144 ;;		i1_Read_LDR
 18145 ;; This function uses a non-reentrant model
 18146 ;;
 18147                           
 18148                           	psect	text67
 18149  005E60                     __ptext67:
 18150                           	opt stack 0
 18151  005E60                     i1___awtoft:
 18152                           	opt stack 19
 18153                           
 18154                           ;incstack = 0
 18155                           ;incstack = 0
 18156  005E60  6E1C               	movwf	??i1___awtoft& (0+255),c
 18157  005E62  0E00               	movlw	0
 18158  005E64  6E1D               	movwf	i1___awtoft@sign,c
 18159  005E66  501C               	movf	??i1___awtoft& (0+255),w,c
 18160  005E68  AE1A               	btfss	i1___awtoft@c+1,7,c
 18161  005E6A  D008               	goto	i1l9169
 18162  005E6C  6C19               	negf	i1___awtoft@c,c
 18163  005E6E  1E1A               	comf	i1___awtoft@c+1,f,c
 18164  005E70  B0D8               	btfsc	status,0,c
 18165  005E72  2A1A               	incf	i1___awtoft@c+1,f,c
 18166  005E74  6E1C               	movwf	??i1___awtoft& (0+255),c
 18167  005E76  0E01               	movlw	1
 18168  005E78  6E1D               	movwf	i1___awtoft@sign,c
 18169  005E7A  501C               	movf	??i1___awtoft& (0+255),w,c
 18170  005E7C                     i1l9169:
 18171  005E7C  C019  F011         	movff	i1___awtoft@c,?i1___ftpack
 18172  005E80  C01A  F012         	movff	i1___awtoft@c+1,?i1___ftpack+1
 18173  005E84  6A13               	clrf	?i1___ftpack+2,c
 18174  005E86  6E1C               	movwf	??i1___awtoft& (0+255),c
 18175  005E88  0E8E               	movlw	142
 18176  005E8A  6E14               	movwf	?i1___ftpack+3,c
 18177  005E8C  501C               	movf	??i1___awtoft& (0+255),w,c
 18178  005E8E  C01D  F015         	movff	i1___awtoft@sign,?i1___ftpack+4
 18179  005E92  ECC3  F029         	call	i1___ftpack	;wreg free
 18180  005E96  C013  F01B         	movff	?i1___ftpack+2,?i1___awtoft+2
 18181  005E9A  C012  F01A         	movff	?i1___ftpack+1,?i1___awtoft+1
 18182  005E9E  C011  F019         	movff	?i1___ftpack,?i1___awtoft
 18183  005EA2  0012               	return	
 18184  005EA4                     __end_ofi1___awtoft:
 18185                           	opt stack 0
 18186                           pclatu	equ	0xFFB
 18187                           pclath	equ	0xFFA
 18188                           tblptru	equ	0xFF8
 18189                           tblptrh	equ	0xFF7
 18190                           tblptrl	equ	0xFF6
 18191                           tablat	equ	0xFF5
 18192                           prodh	equ	0xFF4
 18193                           prodl	equ	0xFF3
 18194                           intcon	equ	0xFF2
 18195                           intcon2	equ	0xFF1
 18196                           postinc0	equ	0xFEE
 18197                           fsr0h	equ	0xFEA
 18198                           fsr0l	equ	0xFE9
 18199                           wreg	equ	0xFE8
 18200                           fsr1h	equ	0xFE2
 18201                           fsr1l	equ	0xFE1
 18202                           bsr	equ	0xFE0
 18203                           indf2	equ	0xFDF
 18204                           postinc2	equ	0xFDE
 18205                           postdec2	equ	0xFDD
 18206                           fsr2h	equ	0xFDA
 18207                           fsr2l	equ	0xFD9
 18208                           status	equ	0xFD8
 18209                           
 18210 ;; *************** function i1_Obtener_Distancia *****************
 18211 ;; Defined at:
 18212 ;;		line 242 in file "main.c"
 18213 ;; Parameters:    Size  Location     Type
 18214 ;;		None
 18215 ;; Auto vars:     Size  Location     Type
 18216 ;;  Obtener_Dist    2   30[COMRAM] unsigned int 
 18217 ;;  Obtener_Dist    2   28[COMRAM] unsigned int 
 18218 ;;  Obtener_Dist    2   26[COMRAM] unsigned int 
 18219 ;; Return value:  Size  Location     Type
 18220 ;;                  2   24[COMRAM] unsigned int 
 18221 ;; Registers used:
 18222 ;;		wreg, status,2, status,0, cstack
 18223 ;; Tracked objects:
 18224 ;;		On entry : 0/0
 18225 ;;		On exit  : 0/0
 18226 ;;		Unchanged: 0/0
 18227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18228 ;;      Params:         2       0       0       0       0       0       0       0       0
 18229 ;;      Locals:         6       0       0       0       0       0       0       0       0
 18230 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18231 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18232 ;;Total ram usage:        8 bytes
 18233 ;; Hardware stack levels used:    1
 18234 ;; Hardware stack levels required when called:    4
 18235 ;; This function calls:
 18236 ;;		i1___lwdiv
 18237 ;; This function is called by:
 18238 ;;		_interrupcaoLOW
 18239 ;; This function uses a non-reentrant model
 18240 ;;
 18241                           
 18242                           	psect	text68
 18243  005A1C                     __ptext68:
 18244                           	opt stack 0
 18245  005A1C                     i1_Obtener_Distancia:
 18246                           	opt stack 20
 18247                           
 18248                           ;main.c: 243: uint16_t Duracion;
 18249                           ;main.c: 244: uint16_t Distancia;
 18250                           ;main.c: 245: uint16_t Timer_1;
 18251                           ;main.c: 247: LATAbits.LATA1=1;
 18252                           
 18253                           ;incstack = 0
 18254                           ;incstack = 0
 18255  005A1C  8289               	bsf	3977,1,c	;volatile
 18256                           
 18257                           ;main.c: 248: _delay((unsigned long)((10)*(8000000/4000000.0)));
 18258  005A1E  0E06               	movlw	6
 18259  005A20                     i1u1117_27:
 18260  005A20  2EE8               	decfsz	wreg,f,c
 18261  005A22  D7FE               	goto	i1u1117_27
 18262  005A24  D000               	nop2		;nop
 18263                           
 18264                           ;main.c: 249: LATAbits.LATA1=0;
 18265  005A26  9289               	bcf	3977,1,c	;volatile
 18266  005A28                     i1l207:
 18267  005A28  A480               	btfss	3968,2,c	;volatile
 18268  005A2A  D7FE               	goto	i1l207
 18269                           
 18270                           ;main.c: 251: T1CONbits.TMR1ON=1;
 18271  005A2C  80CD               	bsf	4045,0,c	;volatile
 18272  005A2E                     i1l210:
 18273  005A2E  B480               	btfsc	3968,2,c	;volatile
 18274  005A30  D7FE               	goto	i1l210
 18275                           
 18276                           ;main.c: 253: T1CONbits.TMR1ON=0;
 18277  005A32  90CD               	bcf	4045,0,c	;volatile
 18278                           
 18279                           ;main.c: 254: Timer_1=TMR1;
 18280  005A34  CFCE F01B          	movff	4046,i1Obtener_Distancia@Timer_1	;volatile
 18281  005A38  CFCF F01C          	movff	4047,i1Obtener_Distancia@Timer_1+1	;volatile
 18282                           
 18283                           ;main.c: 255: Duracion=Timer_1/2;
 18284  005A3C  90D8               	bcf	status,0,c
 18285  005A3E  301C               	rrcf	i1Obtener_Distancia@Timer_1+1,w,c
 18286  005A40  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 18287  005A42  301B               	rrcf	i1Obtener_Distancia@Timer_1,w,c
 18288  005A44  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 18289                           
 18290                           ;main.c: 256: if(Duracion<=23200)
 18291  005A46  0EA1               	movlw	161
 18292  005A48  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 18293  005A4A  0E5A               	movlw	90
 18294  005A4C  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 18295  005A4E  B0D8               	btfsc	status,0,c
 18296  005A50  D00F               	goto	i1l8655
 18297                           
 18298                           ;main.c: 257: {
 18299                           ;main.c: 258: Distancia=Duracion/58;
 18300  005A52  C01F  F011         	movff	i1Obtener_Distancia@Duracion,?i1___lwdiv
 18301  005A56  C020  F012         	movff	i1Obtener_Distancia@Duracion+1,?i1___lwdiv+1
 18302  005A5A  0E00               	movlw	0
 18303  005A5C  6E14               	movwf	?i1___lwdiv+3,c
 18304  005A5E  0E3A               	movlw	58
 18305  005A60  6E13               	movwf	?i1___lwdiv+2,c
 18306  005A62  EC8E  F02E         	call	i1___lwdiv	;wreg free
 18307  005A66  C011  F01D         	movff	?i1___lwdiv,i1Obtener_Distancia@Distancia
 18308  005A6A  C012  F01E         	movff	?i1___lwdiv+1,i1Obtener_Distancia@Distancia+1
 18309                           
 18310                           ;main.c: 259: }
 18311  005A6E  D008               	goto	i1l214
 18312  005A70                     i1l8655:
 18313                           
 18314                           ;main.c: 260: else if(Duracion<116)
 18315  005A70  0E74               	movlw	116
 18316  005A72  5C1F               	subwf	i1Obtener_Distancia@Duracion,w,c
 18317  005A74  0E00               	movlw	0
 18318  005A76  5820               	subwfb	i1Obtener_Distancia@Duracion+1,w,c
 18319                           
 18320                           ;main.c: 264: else
 18321                           ;main.c: 265: {
 18322                           ;main.c: 266: Distancia=0;
 18323                           
 18324                           ;main.c: 263: }
 18325                           
 18326                           ;main.c: 261: {
 18327                           ;main.c: 262: Distancia=0;
 18328  005A78  0E00               	movlw	0
 18329  005A7A  6E1E               	movwf	i1Obtener_Distancia@Distancia+1,c
 18330  005A7C  0E00               	movlw	0
 18331  005A7E  6E1D               	movwf	i1Obtener_Distancia@Distancia,c
 18332  005A80                     i1l214:
 18333                           
 18334                           ;main.c: 267: }
 18335                           ;main.c: 268: Duracion=0;
 18336  005A80  0E00               	movlw	0
 18337  005A82  6E20               	movwf	i1Obtener_Distancia@Duracion+1,c
 18338  005A84  0E00               	movlw	0
 18339  005A86  6E1F               	movwf	i1Obtener_Distancia@Duracion,c
 18340                           
 18341                           ;main.c: 269: TMR1=0;
 18342  005A88  0E00               	movlw	0
 18343  005A8A  6ECF               	movwf	4047,c	;volatile
 18344  005A8C  0E00               	movlw	0
 18345  005A8E  6ECE               	movwf	4046,c	;volatile
 18346                           
 18347                           ;main.c: 271: return Distancia;
 18348  005A90  C01D  F019         	movff	i1Obtener_Distancia@Distancia,?i1_Obtener_Distancia
 18349  005A94  C01E  F01A         	movff	i1Obtener_Distancia@Distancia+1,?i1_Obtener_Distancia+1
 18350  005A98  0012               	return	
 18351  005A9A                     __end_ofi1_Obtener_Distancia:
 18352                           	opt stack 0
 18353                           pclatu	equ	0xFFB
 18354                           pclath	equ	0xFFA
 18355                           tblptru	equ	0xFF8
 18356                           tblptrh	equ	0xFF7
 18357                           tblptrl	equ	0xFF6
 18358                           tablat	equ	0xFF5
 18359                           prodh	equ	0xFF4
 18360                           prodl	equ	0xFF3
 18361                           intcon	equ	0xFF2
 18362                           intcon2	equ	0xFF1
 18363                           postinc0	equ	0xFEE
 18364                           fsr0h	equ	0xFEA
 18365                           fsr0l	equ	0xFE9
 18366                           wreg	equ	0xFE8
 18367                           fsr1h	equ	0xFE2
 18368                           fsr1l	equ	0xFE1
 18369                           bsr	equ	0xFE0
 18370                           indf2	equ	0xFDF
 18371                           postinc2	equ	0xFDE
 18372                           postdec2	equ	0xFDD
 18373                           fsr2h	equ	0xFDA
 18374                           fsr2l	equ	0xFD9
 18375                           status	equ	0xFD8
 18376                           
 18377 ;; *************** function i1___lwdiv *****************
 18378 ;; Defined at:
 18379 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lwdiv.c"
 18380 ;; Parameters:    Size  Location     Type
 18381 ;;  __lwdiv         2   16[COMRAM] unsigned int 
 18382 ;;  __lwdiv         2   18[COMRAM] unsigned int 
 18383 ;; Auto vars:     Size  Location     Type
 18384 ;;  __lwdiv         2   22[COMRAM] unsigned int 
 18385 ;;  __lwdiv         1   21[COMRAM] unsigned char 
 18386 ;; Return value:  Size  Location     Type
 18387 ;;                  2   16[COMRAM] unsigned int 
 18388 ;; Registers used:
 18389 ;;		wreg, status,2, status,0
 18390 ;; Tracked objects:
 18391 ;;		On entry : 0/0
 18392 ;;		On exit  : 0/0
 18393 ;;		Unchanged: 0/0
 18394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18395 ;;      Params:         4       0       0       0       0       0       0       0       0
 18396 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18397 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18398 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18399 ;;Total ram usage:        8 bytes
 18400 ;; Hardware stack levels used:    1
 18401 ;; Hardware stack levels required when called:    3
 18402 ;; This function calls:
 18403 ;;		Nothing
 18404 ;; This function is called by:
 18405 ;;		i1_Obtener_Distancia
 18406 ;; This function uses a non-reentrant model
 18407 ;;
 18408                           
 18409                           	psect	text69
 18410  005D1C                     __ptext69:
 18411                           	opt stack 0
 18412  005D1C                     i1___lwdiv:
 18413                           	opt stack 20
 18414                           
 18415                           ;incstack = 0
 18416                           ;incstack = 0
 18417  005D1C  0E00               	movlw	0
 18418  005D1E  6E18               	movwf	i1___lwdiv@quotient+1,c
 18419  005D20  0E00               	movlw	0
 18420  005D22  6E17               	movwf	i1___lwdiv@quotient,c
 18421  005D24  5014               	movf	i1___lwdiv@divisor+1,w,c
 18422  005D26  1013               	iorwf	i1___lwdiv@divisor,w,c
 18423  005D28  B4D8               	btfsc	status,2,c
 18424  005D2A  D01E               	goto	i1l907
 18425  005D2C  6E15               	movwf	??i1___lwdiv& (0+255),c
 18426  005D2E  0E01               	movlw	1
 18427  005D30  6E16               	movwf	i1___lwdiv@counter,c
 18428  005D32  5015               	movf	??i1___lwdiv& (0+255),w,c
 18429  005D34  D004               	goto	i1l9623
 18430  005D36                     i1l9621:
 18431  005D36  90D8               	bcf	status,0,c
 18432  005D38  3613               	rlcf	i1___lwdiv@divisor,f,c
 18433  005D3A  3614               	rlcf	i1___lwdiv@divisor+1,f,c
 18434  005D3C  2A16               	incf	i1___lwdiv@counter,f,c
 18435  005D3E                     i1l9623:
 18436  005D3E  AE14               	btfss	i1___lwdiv@divisor+1,7,c
 18437  005D40  D7FA               	goto	i1l9621
 18438  005D42                     i1l9625:
 18439  005D42  90D8               	bcf	status,0,c
 18440  005D44  3617               	rlcf	i1___lwdiv@quotient,f,c
 18441  005D46  3618               	rlcf	i1___lwdiv@quotient+1,f,c
 18442  005D48  5013               	movf	i1___lwdiv@divisor,w,c
 18443  005D4A  5C11               	subwf	i1___lwdiv@dividend,w,c
 18444  005D4C  5014               	movf	i1___lwdiv@divisor+1,w,c
 18445  005D4E  5812               	subwfb	i1___lwdiv@dividend+1,w,c
 18446  005D50  A0D8               	btfss	status,0,c
 18447  005D52  D005               	goto	i1l9633
 18448  005D54  5013               	movf	i1___lwdiv@divisor,w,c
 18449  005D56  5E11               	subwf	i1___lwdiv@dividend,f,c
 18450  005D58  5014               	movf	i1___lwdiv@divisor+1,w,c
 18451  005D5A  5A12               	subwfb	i1___lwdiv@dividend+1,f,c
 18452  005D5C  8017               	bsf	i1___lwdiv@quotient,0,c
 18453  005D5E                     i1l9633:
 18454  005D5E  90D8               	bcf	status,0,c
 18455  005D60  3214               	rrcf	i1___lwdiv@divisor+1,f,c
 18456  005D62  3213               	rrcf	i1___lwdiv@divisor,f,c
 18457  005D64  2E16               	decfsz	i1___lwdiv@counter,f,c
 18458  005D66  D7ED               	goto	i1l9625
 18459  005D68                     i1l907:
 18460  005D68  C017  F011         	movff	i1___lwdiv@quotient,?i1___lwdiv
 18461  005D6C  C018  F012         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
 18462  005D70  0012               	return	
 18463  005D72                     __end_ofi1___lwdiv:
 18464                           	opt stack 0
 18465                           pclatu	equ	0xFFB
 18466                           pclath	equ	0xFFA
 18467                           tblptru	equ	0xFF8
 18468                           tblptrh	equ	0xFF7
 18469                           tblptrl	equ	0xFF6
 18470                           tablat	equ	0xFF5
 18471                           prodh	equ	0xFF4
 18472                           prodl	equ	0xFF3
 18473                           intcon	equ	0xFF2
 18474                           intcon2	equ	0xFF1
 18475                           postinc0	equ	0xFEE
 18476                           fsr0h	equ	0xFEA
 18477                           fsr0l	equ	0xFE9
 18478                           wreg	equ	0xFE8
 18479                           fsr1h	equ	0xFE2
 18480                           fsr1l	equ	0xFE1
 18481                           bsr	equ	0xFE0
 18482                           indf2	equ	0xFDF
 18483                           postinc2	equ	0xFDE
 18484                           postdec2	equ	0xFDD
 18485                           fsr2h	equ	0xFDA
 18486                           fsr2l	equ	0xFD9
 18487                           status	equ	0xFD8
 18488                           
 18489 ;; *************** function i1_lcd_putc *****************
 18490 ;; Defined at:
 18491 ;;		line 135 in file "lcd.h"
 18492 ;; Parameters:    Size  Location     Type
 18493 ;;  lcd_putc        2   20[COMRAM] PTR unsigned char 
 18494 ;;		 -> LCD_Buffer(32), 
 18495 ;; Auto vars:     Size  Location     Type
 18496 ;;  lcd_putc        2   22[COMRAM] int 
 18497 ;; Return value:  Size  Location     Type
 18498 ;;		None               void
 18499 ;; Registers used:
 18500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18501 ;; Tracked objects:
 18502 ;;		On entry : 0/0
 18503 ;;		On exit  : 0/0
 18504 ;;		Unchanged: 0/0
 18505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18506 ;;      Params:         2       0       0       0       0       0       0       0       0
 18507 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18508 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18509 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18510 ;;Total ram usage:        4 bytes
 18511 ;; Hardware stack levels used:    1
 18512 ;; Hardware stack levels required when called:    5
 18513 ;; This function calls:
 18514 ;;		i1_lcd_write_char
 18515 ;; This function is called by:
 18516 ;;		_interrupcaoLOW
 18517 ;; This function uses a non-reentrant model
 18518 ;;
 18519                           
 18520                           	psect	text70
 18521  0061BC                     __ptext70:
 18522                           	opt stack 0
 18523  0061BC                     i1_lcd_putc:
 18524                           	opt stack 19
 18525                           
 18526                           ;lcd.h: 136: int i;
 18527                           ;lcd.h: 137: for(i=0;a[i]!='\0';i++)
 18528                           
 18529                           ;incstack = 0
 18530                           ;incstack = 0
 18531  0061BC  0E00               	movlw	0
 18532  0061BE  6E18               	movwf	i1lcd_putc@i+1,c
 18533  0061C0  0E00               	movlw	0
 18534  0061C2  6E17               	movwf	i1lcd_putc@i,c
 18535  0061C4  D00C               	goto	i1l8643
 18536  0061C6                     i1l8639:
 18537                           
 18538                           ;lcd.h: 138: lcd_write_char(a[i]);
 18539  0061C6  5017               	movf	i1lcd_putc@i,w,c
 18540  0061C8  2415               	addwf	i1lcd_putc@a,w,c
 18541  0061CA  6ED9               	movwf	fsr2l,c
 18542  0061CC  5018               	movf	i1lcd_putc@i+1,w,c
 18543  0061CE  2016               	addwfc	i1lcd_putc@a+1,w,c
 18544  0061D0  6EDA               	movwf	fsr2h,c
 18545  0061D2  50DF               	movf	indf2,w,c
 18546  0061D4  6E12               	movwf	?i1_lcd_write_char,c
 18547  0061D6  ECA6  F030         	call	i1_lcd_write_char	;wreg free
 18548  0061DA  4A17               	infsnz	i1lcd_putc@i,f,c
 18549  0061DC  2A18               	incf	i1lcd_putc@i+1,f,c
 18550  0061DE                     i1l8643:
 18551  0061DE  5017               	movf	i1lcd_putc@i,w,c
 18552  0061E0  2415               	addwf	i1lcd_putc@a,w,c
 18553  0061E2  6ED9               	movwf	fsr2l,c
 18554  0061E4  5018               	movf	i1lcd_putc@i+1,w,c
 18555  0061E6  2016               	addwfc	i1lcd_putc@a+1,w,c
 18556  0061E8  6EDA               	movwf	fsr2h,c
 18557  0061EA  50DF               	movf	indf2,w,c
 18558  0061EC  B4D8               	btfsc	status,2,c
 18559  0061EE  0012               	return	
 18560  0061F0  D7EA               	goto	i1l8639
 18561  0061F2                     __end_ofi1_lcd_putc:
 18562                           	opt stack 0
 18563                           pclatu	equ	0xFFB
 18564                           pclath	equ	0xFFA
 18565                           tblptru	equ	0xFF8
 18566                           tblptrh	equ	0xFF7
 18567                           tblptrl	equ	0xFF6
 18568                           tablat	equ	0xFF5
 18569                           prodh	equ	0xFF4
 18570                           prodl	equ	0xFF3
 18571                           intcon	equ	0xFF2
 18572                           intcon2	equ	0xFF1
 18573                           postinc0	equ	0xFEE
 18574                           fsr0h	equ	0xFEA
 18575                           fsr0l	equ	0xFE9
 18576                           wreg	equ	0xFE8
 18577                           fsr1h	equ	0xFE2
 18578                           fsr1l	equ	0xFE1
 18579                           bsr	equ	0xFE0
 18580                           indf2	equ	0xFDF
 18581                           postinc2	equ	0xFDE
 18582                           postdec2	equ	0xFDD
 18583                           fsr2h	equ	0xFDA
 18584                           fsr2l	equ	0xFD9
 18585                           status	equ	0xFD8
 18586                           
 18587 ;; *************** function i1_lcd_write_char *****************
 18588 ;; Defined at:
 18589 ;;		line 117 in file "lcd.h"
 18590 ;; Parameters:    Size  Location     Type
 18591 ;;  lcd_write_ch    1   17[COMRAM] unsigned char 
 18592 ;; Auto vars:     Size  Location     Type
 18593 ;;  lcd_write_ch    1   19[COMRAM] unsigned char 
 18594 ;;  lcd_write_ch    1   18[COMRAM] unsigned char 
 18595 ;; Return value:  Size  Location     Type
 18596 ;;		None               void
 18597 ;; Registers used:
 18598 ;;		wreg, status,2, status,0, cstack
 18599 ;; Tracked objects:
 18600 ;;		On entry : 0/0
 18601 ;;		On exit  : 0/0
 18602 ;;		Unchanged: 0/0
 18603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18604 ;;      Params:         1       0       0       0       0       0       0       0       0
 18605 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18606 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18607 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18608 ;;Total ram usage:        3 bytes
 18609 ;; Hardware stack levels used:    1
 18610 ;; Hardware stack levels required when called:    4
 18611 ;; This function calls:
 18612 ;;		i1_Lcd_Port
 18613 ;; This function is called by:
 18614 ;;		i1_lcd_putc
 18615 ;; This function uses a non-reentrant model
 18616 ;;
 18617                           
 18618                           	psect	text71
 18619  00614C                     __ptext71:
 18620                           	opt stack 0
 18621  00614C                     i1_lcd_write_char:
 18622                           	opt stack 19
 18623                           
 18624                           ;lcd.h: 118: char temp,y;
 18625                           ;lcd.h: 119: temp = a&0x0F;
 18626                           
 18627                           ;incstack = 0
 18628                           ;incstack = 0
 18629  00614C  5012               	movf	i1lcd_write_char@a,w,c
 18630  00614E  0B0F               	andlw	15
 18631  006150  6E13               	movwf	i1lcd_write_char@temp,c
 18632                           
 18633                           ;lcd.h: 120: y = a&0xF0;
 18634  006152  5012               	movf	i1lcd_write_char@a,w,c
 18635  006154  0BF0               	andlw	240
 18636  006156  6E14               	movwf	i1lcd_write_char@y,c
 18637                           
 18638                           ;lcd.h: 121: RD2 = 1;
 18639  006158  8483               	bsf	3971,2,c	;volatile
 18640                           
 18641                           ;lcd.h: 122: Lcd_Port(y>>4);
 18642  00615A  3814               	swapf	i1lcd_write_char@y,w,c
 18643  00615C  0B0F               	andlw	15
 18644  00615E  6E11               	movwf	?i1_Lcd_Port,c
 18645  006160  ECF9  F030         	call	i1_Lcd_Port	;wreg free
 18646                           
 18647                           ;lcd.h: 123: RD3 = 1;
 18648  006164  8683               	bsf	3971,3,c	;volatile
 18649                           
 18650                           ;lcd.h: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
 18651  006166  0E1A               	movlw	26
 18652  006168                     i1u1118_27:
 18653  006168  2EE8               	decfsz	wreg,f,c
 18654  00616A  D7FE               	goto	i1u1118_27
 18655  00616C  D000               	nop2		;nop
 18656                           
 18657                           ;lcd.h: 125: RD3 = 0;
 18658  00616E  9683               	bcf	3971,3,c	;volatile
 18659                           
 18660                           ;lcd.h: 126: Lcd_Port(temp);
 18661  006170  C013  F011         	movff	i1lcd_write_char@temp,?i1_Lcd_Port
 18662  006174  ECF9  F030         	call	i1_Lcd_Port	;wreg free
 18663                           
 18664                           ;lcd.h: 127: RD3 = 1;
 18665  006178  8683               	bsf	3971,3,c	;volatile
 18666                           
 18667                           ;lcd.h: 128: _delay((unsigned long)((40)*(8000000/4000000.0)));
 18668  00617A  0E1A               	movlw	26
 18669  00617C                     i1u1119_27:
 18670  00617C  2EE8               	decfsz	wreg,f,c
 18671  00617E  D7FE               	goto	i1u1119_27
 18672  006180  D000               	nop2		;nop
 18673                           
 18674                           ;lcd.h: 129: RD3 = 0;
 18675  006182  9683               	bcf	3971,3,c	;volatile
 18676  006184  0012               	return	
 18677  006186                     __end_ofi1_lcd_write_char:
 18678                           	opt stack 0
 18679                           pclatu	equ	0xFFB
 18680                           pclath	equ	0xFFA
 18681                           tblptru	equ	0xFF8
 18682                           tblptrh	equ	0xFF7
 18683                           tblptrl	equ	0xFF6
 18684                           tablat	equ	0xFF5
 18685                           prodh	equ	0xFF4
 18686                           prodl	equ	0xFF3
 18687                           intcon	equ	0xFF2
 18688                           intcon2	equ	0xFF1
 18689                           postinc0	equ	0xFEE
 18690                           fsr0h	equ	0xFEA
 18691                           fsr0l	equ	0xFE9
 18692                           wreg	equ	0xFE8
 18693                           fsr1h	equ	0xFE2
 18694                           fsr1l	equ	0xFE1
 18695                           bsr	equ	0xFE0
 18696                           indf2	equ	0xFDF
 18697                           postinc2	equ	0xFDE
 18698                           postdec2	equ	0xFDD
 18699                           fsr2h	equ	0xFDA
 18700                           fsr2l	equ	0xFD9
 18701                           status	equ	0xFD8
 18702                           
 18703 ;; *************** function i1_lcd_gotoxy *****************
 18704 ;; Defined at:
 18705 ;;		line 72 in file "lcd.h"
 18706 ;; Parameters:    Size  Location     Type
 18707 ;;  lcd_gotoxy      1   19[COMRAM] unsigned char 
 18708 ;;  lcd_gotoxy      1   20[COMRAM] unsigned char 
 18709 ;; Auto vars:     Size  Location     Type
 18710 ;;  lcd_gotoxy      1   23[COMRAM] unsigned char 
 18711 ;;  lcd_gotoxy      1   22[COMRAM] unsigned char 
 18712 ;;  lcd_gotoxy      1   21[COMRAM] unsigned char 
 18713 ;; Return value:  Size  Location     Type
 18714 ;;		None               void
 18715 ;; Registers used:
 18716 ;;		wreg, status,2, status,0, cstack
 18717 ;; Tracked objects:
 18718 ;;		On entry : 0/0
 18719 ;;		On exit  : 0/0
 18720 ;;		Unchanged: 0/0
 18721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18722 ;;      Params:         2       0       0       0       0       0       0       0       0
 18723 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18725 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18726 ;;Total ram usage:        5 bytes
 18727 ;; Hardware stack levels used:    1
 18728 ;; Hardware stack levels required when called:    5
 18729 ;; This function calls:
 18730 ;;		i1_Lcd_Cmd
 18731 ;; This function is called by:
 18732 ;;		_interrupcaoLOW
 18733 ;; This function uses a non-reentrant model
 18734 ;;
 18735                           
 18736                           	psect	text72
 18737  005D72                     __ptext72:
 18738                           	opt stack 0
 18739  005D72                     i1_lcd_gotoxy:
 18740                           	opt stack 19
 18741                           
 18742                           ;lcd.h: 73: char temp,z,y;
 18743                           ;lcd.h: 74: if(a == 1)
 18744                           
 18745                           ;incstack = 0
 18746                           ;incstack = 0
 18747  005D72  0414               	decf	i1lcd_gotoxy@a,w,c
 18748  005D74  A4D8               	btfss	status,2,c
 18749  005D76  D012               	goto	i1l8611
 18750                           
 18751                           ;lcd.h: 75: {
 18752                           ;lcd.h: 76: temp = 0x80 + b - 1;
 18753  005D78  5015               	movf	i1lcd_gotoxy@b,w,c
 18754  005D7A  0F7F               	addlw	127
 18755  005D7C  6E18               	movwf	i1lcd_gotoxy@temp,c
 18756                           
 18757                           ;lcd.h: 77: z = temp>>4;
 18758  005D7E  3818               	swapf	i1lcd_gotoxy@temp,w,c
 18759  005D80  0B0F               	andlw	15
 18760  005D82  6E16               	movwf	i1lcd_gotoxy@z,c
 18761                           
 18762                           ;lcd.h: 78: y = temp & 0x0F;
 18763  005D84  5018               	movf	i1lcd_gotoxy@temp,w,c
 18764  005D86  0B0F               	andlw	15
 18765  005D88  6E17               	movwf	i1lcd_gotoxy@y,c
 18766                           
 18767                           ;lcd.h: 79: Lcd_Cmd(z);
 18768  005D8A  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 18769  005D8E  EC55  F031         	call	i1_Lcd_Cmd	;wreg free
 18770                           
 18771                           ;lcd.h: 80: Lcd_Cmd(y);
 18772  005D92  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 18773  005D96  EC55  F031         	call	i1_Lcd_Cmd	;wreg free
 18774                           
 18775                           ;lcd.h: 81: }
 18776  005D9A  D015               	goto	i1l121
 18777  005D9C                     i1l8611:
 18778                           
 18779                           ;lcd.h: 82: else if(a == 2)
 18780  005D9C  5014               	movf	i1lcd_gotoxy@a,w,c
 18781  005D9E  0A02               	xorlw	2
 18782  005DA0  A4D8               	btfss	status,2,c
 18783  005DA2  D011               	goto	i1l121
 18784                           
 18785                           ;lcd.h: 83: {
 18786                           ;lcd.h: 84: temp = 0xC0 + b - 1;
 18787  005DA4  5015               	movf	i1lcd_gotoxy@b,w,c
 18788  005DA6  0FBF               	addlw	191
 18789  005DA8  6E18               	movwf	i1lcd_gotoxy@temp,c
 18790                           
 18791                           ;lcd.h: 85: z = temp>>4;
 18792  005DAA  3818               	swapf	i1lcd_gotoxy@temp,w,c
 18793  005DAC  0B0F               	andlw	15
 18794  005DAE  6E16               	movwf	i1lcd_gotoxy@z,c
 18795                           
 18796                           ;lcd.h: 86: y = temp & 0x0F;
 18797  005DB0  5018               	movf	i1lcd_gotoxy@temp,w,c
 18798  005DB2  0B0F               	andlw	15
 18799  005DB4  6E17               	movwf	i1lcd_gotoxy@y,c
 18800                           
 18801                           ;lcd.h: 87: Lcd_Cmd(z);
 18802  005DB6  C016  F012         	movff	i1lcd_gotoxy@z,?i1_Lcd_Cmd
 18803  005DBA  EC55  F031         	call	i1_Lcd_Cmd	;wreg free
 18804                           
 18805                           ;lcd.h: 88: Lcd_Cmd(y);
 18806  005DBE  C017  F012         	movff	i1lcd_gotoxy@y,?i1_Lcd_Cmd
 18807  005DC2  EC55  F031         	call	i1_Lcd_Cmd	;wreg free
 18808  005DC6                     i1l121:
 18809  005DC6  0012               	return	
 18810  005DC8                     __end_ofi1_lcd_gotoxy:
 18811                           	opt stack 0
 18812                           pclatu	equ	0xFFB
 18813                           pclath	equ	0xFFA
 18814                           tblptru	equ	0xFF8
 18815                           tblptrh	equ	0xFF7
 18816                           tblptrl	equ	0xFF6
 18817                           tablat	equ	0xFF5
 18818                           prodh	equ	0xFF4
 18819                           prodl	equ	0xFF3
 18820                           intcon	equ	0xFF2
 18821                           intcon2	equ	0xFF1
 18822                           postinc0	equ	0xFEE
 18823                           fsr0h	equ	0xFEA
 18824                           fsr0l	equ	0xFE9
 18825                           wreg	equ	0xFE8
 18826                           fsr1h	equ	0xFE2
 18827                           fsr1l	equ	0xFE1
 18828                           bsr	equ	0xFE0
 18829                           indf2	equ	0xFDF
 18830                           postinc2	equ	0xFDE
 18831                           postdec2	equ	0xFDD
 18832                           fsr2h	equ	0xFDA
 18833                           fsr2l	equ	0xFD9
 18834                           status	equ	0xFD8
 18835                           
 18836 ;; *************** function i1_Lcd_Cmd *****************
 18837 ;; Defined at:
 18838 ;;		line 53 in file "lcd.h"
 18839 ;; Parameters:    Size  Location     Type
 18840 ;;  Lcd_Cmd         1   17[COMRAM] unsigned char 
 18841 ;; Auto vars:     Size  Location     Type
 18842 ;;		None
 18843 ;; Return value:  Size  Location     Type
 18844 ;;		None               void
 18845 ;; Registers used:
 18846 ;;		wreg, cstack
 18847 ;; Tracked objects:
 18848 ;;		On entry : 0/0
 18849 ;;		On exit  : 0/0
 18850 ;;		Unchanged: 0/0
 18851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18852 ;;      Params:         1       0       0       0       0       0       0       0       0
 18853 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18854 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18855 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18856 ;;Total ram usage:        2 bytes
 18857 ;; Hardware stack levels used:    1
 18858 ;; Hardware stack levels required when called:    4
 18859 ;; This function calls:
 18860 ;;		i1_Lcd_Port
 18861 ;; This function is called by:
 18862 ;;		i1_lcd_gotoxy
 18863 ;; This function uses a non-reentrant model
 18864 ;;
 18865                           
 18866                           	psect	text73
 18867  0062AA                     __ptext73:
 18868                           	opt stack 0
 18869  0062AA                     i1_Lcd_Cmd:
 18870                           	opt stack 19
 18871                           
 18872                           ;lcd.h: 54: RD2 = 0;
 18873                           
 18874                           ;incstack = 0
 18875                           ;incstack = 0
 18876  0062AA  9483               	bcf	3971,2,c	;volatile
 18877                           
 18878                           ;lcd.h: 55: Lcd_Port(a);
 18879  0062AC  C012  F011         	movff	i1Lcd_Cmd@a,?i1_Lcd_Port
 18880  0062B0  ECF9  F030         	call	i1_Lcd_Port	;wreg free
 18881                           
 18882                           ;lcd.h: 56: RD3 = 1;
 18883  0062B4  8683               	bsf	3971,3,c	;volatile
 18884                           
 18885                           ;lcd.h: 57: _delay((unsigned long)((4)*(8000000/4000.0)));
 18886  0062B6  0E0B               	movlw	11
 18887  0062B8  6E13               	movwf	??i1_Lcd_Cmd& (0+255),c
 18888  0062BA  0E62               	movlw	98
 18889  0062BC                     i1u1120_27:
 18890  0062BC  2EE8               	decfsz	wreg,f,c
 18891  0062BE  D7FE               	goto	i1u1120_27
 18892  0062C0  2E13               	decfsz	??i1_Lcd_Cmd& (0+255),f,c
 18893  0062C2  D7FC               	goto	i1u1120_27
 18894  0062C4  F000               	nop	
 18895                           
 18896                           ;lcd.h: 58: RD3 = 0;
 18897  0062C6  9683               	bcf	3971,3,c	;volatile
 18898  0062C8  0012               	return	
 18899  0062CA                     __end_ofi1_Lcd_Cmd:
 18900                           	opt stack 0
 18901                           pclatu	equ	0xFFB
 18902                           pclath	equ	0xFFA
 18903                           tblptru	equ	0xFF8
 18904                           tblptrh	equ	0xFF7
 18905                           tblptrl	equ	0xFF6
 18906                           tablat	equ	0xFF5
 18907                           prodh	equ	0xFF4
 18908                           prodl	equ	0xFF3
 18909                           intcon	equ	0xFF2
 18910                           intcon2	equ	0xFF1
 18911                           postinc0	equ	0xFEE
 18912                           fsr0h	equ	0xFEA
 18913                           fsr0l	equ	0xFE9
 18914                           wreg	equ	0xFE8
 18915                           fsr1h	equ	0xFE2
 18916                           fsr1l	equ	0xFE1
 18917                           bsr	equ	0xFE0
 18918                           indf2	equ	0xFDF
 18919                           postinc2	equ	0xFDE
 18920                           postdec2	equ	0xFDD
 18921                           fsr2h	equ	0xFDA
 18922                           fsr2l	equ	0xFD9
 18923                           status	equ	0xFD8
 18924                           
 18925 ;; *************** function i1_Lcd_Port *****************
 18926 ;; Defined at:
 18927 ;;		line 28 in file "lcd.h"
 18928 ;; Parameters:    Size  Location     Type
 18929 ;;  Lcd_Port        1   16[COMRAM] unsigned char 
 18930 ;; Auto vars:     Size  Location     Type
 18931 ;;		None
 18932 ;; Return value:  Size  Location     Type
 18933 ;;		None               void
 18934 ;; Registers used:
 18935 ;;		None
 18936 ;; Tracked objects:
 18937 ;;		On entry : 0/0
 18938 ;;		On exit  : 0/0
 18939 ;;		Unchanged: 0/0
 18940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18941 ;;      Params:         1       0       0       0       0       0       0       0       0
 18942 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18943 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18944 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18945 ;;Total ram usage:        1 bytes
 18946 ;; Hardware stack levels used:    1
 18947 ;; Hardware stack levels required when called:    3
 18948 ;; This function calls:
 18949 ;;		Nothing
 18950 ;; This function is called by:
 18951 ;;		i1_Lcd_Cmd
 18952 ;;		i1_lcd_write_char
 18953 ;; This function uses a non-reentrant model
 18954 ;;
 18955                           
 18956                           	psect	text74
 18957  0061F2                     __ptext74:
 18958                           	opt stack 0
 18959  0061F2                     i1_Lcd_Port:
 18960                           	opt stack 19
 18961                           
 18962                           ;lcd.h: 29: if(a & 1)
 18963                           
 18964                           ;incstack = 0
 18965                           ;incstack = 0
 18966  0061F2  A011               	btfss	i1Lcd_Port@a,0,c
 18967  0061F4  D002               	goto	i1l101
 18968                           
 18969                           ;lcd.h: 30: RD4 = 1;
 18970  0061F6  8883               	bsf	3971,4,c	;volatile
 18971  0061F8  D001               	goto	i1l102
 18972  0061FA                     i1l101:
 18973                           
 18974                           ;lcd.h: 31: else
 18975                           ;lcd.h: 32: RD4 = 0;
 18976  0061FA  9883               	bcf	3971,4,c	;volatile
 18977  0061FC                     i1l102:
 18978                           
 18979                           ;lcd.h: 34: if(a & 2)
 18980  0061FC  A211               	btfss	i1Lcd_Port@a,1,c
 18981  0061FE  D002               	goto	i1l103
 18982                           
 18983                           ;lcd.h: 35: RD5 = 1;
 18984  006200  8A83               	bsf	3971,5,c	;volatile
 18985  006202  D001               	goto	i1l104
 18986  006204                     i1l103:
 18987                           
 18988                           ;lcd.h: 36: else
 18989                           ;lcd.h: 37: RD5 = 0;
 18990  006204  9A83               	bcf	3971,5,c	;volatile
 18991  006206                     i1l104:
 18992                           
 18993                           ;lcd.h: 39: if(a & 4)
 18994  006206  A411               	btfss	i1Lcd_Port@a,2,c
 18995  006208  D002               	goto	i1l105
 18996                           
 18997                           ;lcd.h: 40: RD6 = 1;
 18998  00620A  8C83               	bsf	3971,6,c	;volatile
 18999  00620C  D001               	goto	i1l106
 19000  00620E                     i1l105:
 19001                           
 19002                           ;lcd.h: 41: else
 19003                           ;lcd.h: 42: RD6 = 0;
 19004  00620E  9C83               	bcf	3971,6,c	;volatile
 19005  006210                     i1l106:
 19006                           
 19007                           ;lcd.h: 44: if(a & 8)
 19008  006210  A611               	btfss	i1Lcd_Port@a,3,c
 19009  006212  D002               	goto	i1l107
 19010                           
 19011                           ;lcd.h: 45: RD7 = 1;
 19012  006214  8E83               	bsf	3971,7,c	;volatile
 19013  006216  D001               	goto	i1l109
 19014  006218                     i1l107:
 19015                           
 19016                           ;lcd.h: 46: else
 19017                           ;lcd.h: 47: RD7 = 0;
 19018  006218  9E83               	bcf	3971,7,c	;volatile
 19019  00621A                     i1l109:
 19020  00621A  0012               	return	
 19021  00621C                     __end_ofi1_Lcd_Port:
 19022                           	opt stack 0
 19023                           pclatu	equ	0xFFB
 19024                           pclath	equ	0xFFA
 19025                           tblptru	equ	0xFF8
 19026                           tblptrh	equ	0xFF7
 19027                           tblptrl	equ	0xFF6
 19028                           tablat	equ	0xFF5
 19029                           prodh	equ	0xFF4
 19030                           prodl	equ	0xFF3
 19031                           intcon	equ	0xFF2
 19032                           intcon2	equ	0xFF1
 19033                           postinc0	equ	0xFEE
 19034                           fsr0h	equ	0xFEA
 19035                           fsr0l	equ	0xFE9
 19036                           wreg	equ	0xFE8
 19037                           fsr1h	equ	0xFE2
 19038                           fsr1l	equ	0xFE1
 19039                           bsr	equ	0xFE0
 19040                           indf2	equ	0xFDF
 19041                           postinc2	equ	0xFDE
 19042                           postdec2	equ	0xFDD
 19043                           fsr2h	equ	0xFDA
 19044                           fsr2l	equ	0xFD9
 19045                           status	equ	0xFD8
 19046                           
 19047 ;; *************** function _interrupcaoHIGH *****************
 19048 ;; Defined at:
 19049 ;;		line 206 in file "main.c"
 19050 ;; Parameters:    Size  Location     Type
 19051 ;;		None
 19052 ;; Auto vars:     Size  Location     Type
 19053 ;;  esp_server_d    1   15[COMRAM] unsigned char 
 19054 ;; Return value:  Size  Location     Type
 19055 ;;		None               void
 19056 ;; Registers used:
 19057 ;;		wreg, status,2, status,0, cstack
 19058 ;; Tracked objects:
 19059 ;;		On entry : 0/0
 19060 ;;		On exit  : 0/0
 19061 ;;		Unchanged: 0/0
 19062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19063 ;;      Params:         0       0       0       0       0       0       0       0       0
 19064 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19065 ;;      Temps:         14       0       0       0       0       0       0       0       0
 19066 ;;      Totals:        15       0       0       0       0       0       0       0       0
 19067 ;;Total ram usage:       15 bytes
 19068 ;; Hardware stack levels used:    1
 19069 ;; Hardware stack levels required when called:    2
 19070 ;; This function calls:
 19071 ;;		_control_LED
 19072 ;; This function is called by:
 19073 ;;		Interrupt level 2
 19074 ;; This function uses a non-reentrant model
 19075 ;;
 19076                           
 19077                           	psect	intcode
 19078  000008                     __pintcode:
 19079                           	opt stack 0
 19080  000008                     _interrupcaoHIGH:
 19081                           	opt stack 17
 19082                           
 19083                           ;incstack = 0
 19084  000008  CFFA F002          	movff	pclath,??_interrupcaoHIGH
 19085  00000C  CFFB F003          	movff	pclatu,??_interrupcaoHIGH+1
 19086  000010  CFE9 F004          	movff	fsr0l,??_interrupcaoHIGH+2
 19087  000014  EDCE  F02C         	call	int_func,f	;refresh shadow registers
 19088                           pclatu	equ	0xFFB
 19089                           pclath	equ	0xFFA
 19090                           tblptru	equ	0xFF8
 19091                           tblptrh	equ	0xFF7
 19092                           tblptrl	equ	0xFF6
 19093                           tablat	equ	0xFF5
 19094                           prodh	equ	0xFF4
 19095                           prodl	equ	0xFF3
 19096                           intcon	equ	0xFF2
 19097                           intcon2	equ	0xFF1
 19098                           postinc0	equ	0xFEE
 19099                           fsr0h	equ	0xFEA
 19100                           fsr0l	equ	0xFE9
 19101                           wreg	equ	0xFE8
 19102                           fsr1h	equ	0xFE2
 19103                           fsr1l	equ	0xFE1
 19104                           bsr	equ	0xFE0
 19105                           indf2	equ	0xFDF
 19106                           postinc2	equ	0xFDE
 19107                           postdec2	equ	0xFDD
 19108                           fsr2h	equ	0xFDA
 19109                           fsr2l	equ	0xFD9
 19110                           status	equ	0xFD8
 19111                           
 19112                           	psect	intcode_body
 19113  00599C                     __pintcode_body:
 19114                           	opt stack 17
 19115  00599C                     int_func:
 19116                           	opt stack 17
 19117  00599C  0006               	pop		; remove dummy address from shadow register refresh
 19118  00599E  CFEA F005          	movff	fsr0h,??_interrupcaoHIGH+3
 19119  0059A2  CFE1 F006          	movff	fsr1l,??_interrupcaoHIGH+4
 19120  0059A6  CFE2 F007          	movff	fsr1h,??_interrupcaoHIGH+5
 19121  0059AA  CFD9 F008          	movff	fsr2l,??_interrupcaoHIGH+6
 19122  0059AE  CFDA F009          	movff	fsr2h,??_interrupcaoHIGH+7
 19123  0059B2  CFF3 F00A          	movff	prodl,??_interrupcaoHIGH+8
 19124  0059B6  CFF4 F00B          	movff	prodh,??_interrupcaoHIGH+9
 19125  0059BA  CFF6 F00C          	movff	tblptrl,??_interrupcaoHIGH+10
 19126  0059BE  CFF7 F00D          	movff	tblptrh,??_interrupcaoHIGH+11
 19127  0059C2  CFF8 F00E          	movff	tblptru,??_interrupcaoHIGH+12
 19128  0059C6  CFF5 F00F          	movff	tablat,??_interrupcaoHIGH+13
 19129  0059CA                     
 19130                           ;main.c: 207: char esp_server_data;
 19131                           ;main.c: 208: if (RCIF == 1)
 19132  0059CA  AA9E               	btfss	3998,5,c	;volatile
 19133  0059CC  D001               	goto	i2u529_41
 19134  0059CE  D001               	goto	i2u529_40
 19135  0059D0                     i2u529_41:
 19136  0059D0  D008               	goto	i2l198
 19137  0059D2                     i2u529_40:
 19138  0059D2                     
 19139                           ;main.c: 209: {
 19140                           ;main.c: 210: esp_server_data = RCREG;
 19141  0059D2  CFAE F010          	movff	4014,interrupcaoHIGH@esp_server_data	;volatile
 19142  0059D6                     
 19143                           ;main.c: 211: control_LED(esp_server_data);
 19144  0059D6  C010  F001         	movff	interrupcaoHIGH@esp_server_data,?_control_LED
 19145  0059DA  EC65  F031         	call	_control_LED	;wreg free
 19146  0059DE                     
 19147                           ;main.c: 212: RCIF =0 ;
 19148  0059DE  9A9E               	bcf	3998,5,c	;volatile
 19149  0059E0  D000               	goto	i2l198
 19150  0059E2                     i2l198:
 19151  0059E2  C00F  FFF5         	movff	??_interrupcaoHIGH+13,tablat
 19152  0059E6  C00E  FFF8         	movff	??_interrupcaoHIGH+12,tblptru
 19153  0059EA  C00D  FFF7         	movff	??_interrupcaoHIGH+11,tblptrh
 19154  0059EE  C00C  FFF6         	movff	??_interrupcaoHIGH+10,tblptrl
 19155  0059F2  C00B  FFF4         	movff	??_interrupcaoHIGH+9,prodh
 19156  0059F6  C00A  FFF3         	movff	??_interrupcaoHIGH+8,prodl
 19157  0059FA  C009  FFDA         	movff	??_interrupcaoHIGH+7,fsr2h
 19158  0059FE  C008  FFD9         	movff	??_interrupcaoHIGH+6,fsr2l
 19159  005A02  C007  FFE2         	movff	??_interrupcaoHIGH+5,fsr1h
 19160  005A06  C006  FFE1         	movff	??_interrupcaoHIGH+4,fsr1l
 19161  005A0A  C005  FFEA         	movff	??_interrupcaoHIGH+3,fsr0h
 19162  005A0E  C004  FFE9         	movff	??_interrupcaoHIGH+2,fsr0l
 19163  005A12  C003  FFFB         	movff	??_interrupcaoHIGH+1,pclatu
 19164  005A16  C002  FFFA         	movff	??_interrupcaoHIGH,pclath
 19165  005A1A  0011               	retfie		f
 19166  005A1C                     __end_of_interrupcaoHIGH:
 19167                           	opt stack 0
 19168                           pclatu	equ	0xFFB
 19169                           pclath	equ	0xFFA
 19170                           tblptru	equ	0xFF8
 19171                           tblptrh	equ	0xFF7
 19172                           tblptrl	equ	0xFF6
 19173                           tablat	equ	0xFF5
 19174                           prodh	equ	0xFF4
 19175                           prodl	equ	0xFF3
 19176                           intcon	equ	0xFF2
 19177                           intcon2	equ	0xFF1
 19178                           postinc0	equ	0xFEE
 19179                           fsr0h	equ	0xFEA
 19180                           fsr0l	equ	0xFE9
 19181                           wreg	equ	0xFE8
 19182                           fsr1h	equ	0xFE2
 19183                           fsr1l	equ	0xFE1
 19184                           bsr	equ	0xFE0
 19185                           indf2	equ	0xFDF
 19186                           postinc2	equ	0xFDE
 19187                           postdec2	equ	0xFDD
 19188                           fsr2h	equ	0xFDA
 19189                           fsr2l	equ	0xFD9
 19190                           status	equ	0xFD8
 19191                           
 19192 ;; *************** function _control_LED *****************
 19193 ;; Defined at:
 19194 ;;		line 133 in file "main.c"
 19195 ;; Parameters:    Size  Location     Type
 19196 ;;  data            1    0[COMRAM] unsigned char 
 19197 ;; Auto vars:     Size  Location     Type
 19198 ;;		None
 19199 ;; Return value:  Size  Location     Type
 19200 ;;		None               void
 19201 ;; Registers used:
 19202 ;;		wreg, status,2, status,0, cstack
 19203 ;; Tracked objects:
 19204 ;;		On entry : 0/0
 19205 ;;		On exit  : 0/0
 19206 ;;		Unchanged: 0/0
 19207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19208 ;;      Params:         1       0       0       0       0       0       0       0       0
 19209 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19210 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19211 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19212 ;;Total ram usage:        1 bytes
 19213 ;; Hardware stack levels used:    1
 19214 ;; Hardware stack levels required when called:    1
 19215 ;; This function calls:
 19216 ;;		_led_off
 19217 ;;		_led_on
 19218 ;; This function is called by:
 19219 ;;		_interrupcaoHIGH
 19220 ;; This function uses a non-reentrant model
 19221 ;;
 19222                           
 19223                           	psect	text76
 19224  0062CA                     __ptext76:
 19225                           	opt stack 0
 19226  0062CA                     _control_LED:
 19227                           	opt stack 17
 19228                           
 19229                           ;main.c: 134: if(data == 170){
 19230                           
 19231                           ;incstack = 0
 19232                           ;incstack = 0
 19233  0062CA  5001               	movf	control_LED@data,w,c
 19234  0062CC  0AAA               	xorlw	170
 19235  0062CE  A4D8               	btfss	status,2,c
 19236  0062D0  D003               	goto	i2l7071
 19237                           
 19238                           ;main.c: 135: led_on();
 19239  0062D2  EC99  F031         	call	_led_on	;wreg free
 19240                           
 19241                           ;main.c: 136: }else if(data == 174){
 19242  0062D6  D005               	goto	i2l185
 19243  0062D8                     i2l7071:
 19244  0062D8  5001               	movf	control_LED@data,w,c
 19245  0062DA  0AAE               	xorlw	174
 19246  0062DC  B4D8               	btfsc	status,2,c
 19247                           
 19248                           ;main.c: 137: led_off();
 19249  0062DE  EC9C  F031         	call	_led_off	;wreg free
 19250  0062E2                     i2l185:
 19251  0062E2  0012               	return	
 19252  0062E4                     __end_of_control_LED:
 19253                           	opt stack 0
 19254                           pclatu	equ	0xFFB
 19255                           pclath	equ	0xFFA
 19256                           tblptru	equ	0xFF8
 19257                           tblptrh	equ	0xFF7
 19258                           tblptrl	equ	0xFF6
 19259                           tablat	equ	0xFF5
 19260                           prodh	equ	0xFF4
 19261                           prodl	equ	0xFF3
 19262                           intcon	equ	0xFF2
 19263                           intcon2	equ	0xFF1
 19264                           postinc0	equ	0xFEE
 19265                           fsr0h	equ	0xFEA
 19266                           fsr0l	equ	0xFE9
 19267                           wreg	equ	0xFE8
 19268                           fsr1h	equ	0xFE2
 19269                           fsr1l	equ	0xFE1
 19270                           bsr	equ	0xFE0
 19271                           indf2	equ	0xFDF
 19272                           postinc2	equ	0xFDE
 19273                           postdec2	equ	0xFDD
 19274                           fsr2h	equ	0xFDA
 19275                           fsr2l	equ	0xFD9
 19276                           status	equ	0xFD8
 19277                           
 19278 ;; *************** function _led_on *****************
 19279 ;; Defined at:
 19280 ;;		line 112 in file "main.c"
 19281 ;; Parameters:    Size  Location     Type
 19282 ;;		None
 19283 ;; Auto vars:     Size  Location     Type
 19284 ;;		None
 19285 ;; Return value:  Size  Location     Type
 19286 ;;		None               void
 19287 ;; Registers used:
 19288 ;;		wreg, status,2
 19289 ;; Tracked objects:
 19290 ;;		On entry : 0/0
 19291 ;;		On exit  : 0/0
 19292 ;;		Unchanged: 0/0
 19293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19294 ;;      Params:         0       0       0       0       0       0       0       0       0
 19295 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19296 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19297 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19298 ;;Total ram usage:        0 bytes
 19299 ;; Hardware stack levels used:    1
 19300 ;; This function calls:
 19301 ;;		Nothing
 19302 ;; This function is called by:
 19303 ;;		_control_LED
 19304 ;;		_FSM
 19305 ;; This function uses a non-reentrant model
 19306 ;;
 19307                           
 19308                           	psect	text77
 19309  006332                     __ptext77:
 19310                           	opt stack 0
 19311  006332                     _led_on:
 19312                           	opt stack 17
 19313                           
 19314                           ;main.c: 113: LATB = 0x01;
 19315                           
 19316                           ;incstack = 0
 19317                           ;incstack = 0
 19318  006332  0E01               	movlw	1
 19319  006334  6E8A               	movwf	3978,c	;volatile
 19320  006336  0012               	return	
 19321  006338                     __end_of_led_on:
 19322                           	opt stack 0
 19323                           pclatu	equ	0xFFB
 19324                           pclath	equ	0xFFA
 19325                           tblptru	equ	0xFF8
 19326                           tblptrh	equ	0xFF7
 19327                           tblptrl	equ	0xFF6
 19328                           tablat	equ	0xFF5
 19329                           prodh	equ	0xFF4
 19330                           prodl	equ	0xFF3
 19331                           intcon	equ	0xFF2
 19332                           intcon2	equ	0xFF1
 19333                           postinc0	equ	0xFEE
 19334                           fsr0h	equ	0xFEA
 19335                           fsr0l	equ	0xFE9
 19336                           wreg	equ	0xFE8
 19337                           fsr1h	equ	0xFE2
 19338                           fsr1l	equ	0xFE1
 19339                           bsr	equ	0xFE0
 19340                           indf2	equ	0xFDF
 19341                           postinc2	equ	0xFDE
 19342                           postdec2	equ	0xFDD
 19343                           fsr2h	equ	0xFDA
 19344                           fsr2l	equ	0xFD9
 19345                           status	equ	0xFD8
 19346                           
 19347 ;; *************** function _led_off *****************
 19348 ;; Defined at:
 19349 ;;		line 109 in file "main.c"
 19350 ;; Parameters:    Size  Location     Type
 19351 ;;		None
 19352 ;; Auto vars:     Size  Location     Type
 19353 ;;		None
 19354 ;; Return value:  Size  Location     Type
 19355 ;;		None               void
 19356 ;; Registers used:
 19357 ;;		wreg, status,2
 19358 ;; Tracked objects:
 19359 ;;		On entry : 0/0
 19360 ;;		On exit  : 0/0
 19361 ;;		Unchanged: 0/0
 19362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19363 ;;      Params:         0       0       0       0       0       0       0       0       0
 19364 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19366 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19367 ;;Total ram usage:        0 bytes
 19368 ;; Hardware stack levels used:    1
 19369 ;; This function calls:
 19370 ;;		Nothing
 19371 ;; This function is called by:
 19372 ;;		_control_LED
 19373 ;;		_FSM
 19374 ;; This function uses a non-reentrant model
 19375 ;;
 19376                           
 19377                           	psect	text78
 19378  006338                     __ptext78:
 19379                           	opt stack 0
 19380  006338                     _led_off:
 19381                           	opt stack 17
 19382                           
 19383                           ;main.c: 110: LATB = 0x00;
 19384                           
 19385                           ;incstack = 0
 19386                           ;incstack = 0
 19387  006338  0E00               	movlw	0
 19388  00633A  6E8A               	movwf	3978,c	;volatile
 19389  00633C  0012               	return	
 19390  00633E                     __end_of_led_off:
 19391                           	opt stack 0
 19392                           pclatu	equ	0xFFB
 19393                           pclath	equ	0xFFA
 19394                           tblptru	equ	0xFF8
 19395                           tblptrh	equ	0xFF7
 19396                           tblptrl	equ	0xFF6
 19397                           tablat	equ	0xFF5
 19398                           prodh	equ	0xFF4
 19399                           prodl	equ	0xFF3
 19400                           intcon	equ	0xFF2
 19401                           intcon2	equ	0xFF1
 19402                           postinc0	equ	0xFEE
 19403                           fsr0h	equ	0xFEA
 19404                           fsr0l	equ	0xFE9
 19405                           wreg	equ	0xFE8
 19406                           fsr1h	equ	0xFE2
 19407                           fsr1l	equ	0xFE1
 19408                           bsr	equ	0xFE0
 19409                           indf2	equ	0xFDF
 19410                           postinc2	equ	0xFDE
 19411                           postdec2	equ	0xFDD
 19412                           fsr2h	equ	0xFDA
 19413                           fsr2l	equ	0xFD9
 19414                           status	equ	0xFD8
 19415                           pclatu	equ	0xFFB
 19416                           pclath	equ	0xFFA
 19417                           tblptru	equ	0xFF8
 19418                           tblptrh	equ	0xFF7
 19419                           tblptrl	equ	0xFF6
 19420                           tablat	equ	0xFF5
 19421                           prodh	equ	0xFF4
 19422                           prodl	equ	0xFF3
 19423                           intcon	equ	0xFF2
 19424                           intcon2	equ	0xFF1
 19425                           postinc0	equ	0xFEE
 19426                           fsr0h	equ	0xFEA
 19427                           fsr0l	equ	0xFE9
 19428                           wreg	equ	0xFE8
 19429                           fsr1h	equ	0xFE2
 19430                           fsr1l	equ	0xFE1
 19431                           bsr	equ	0xFE0
 19432                           indf2	equ	0xFDF
 19433                           postinc2	equ	0xFDE
 19434                           postdec2	equ	0xFDD
 19435                           fsr2h	equ	0xFDA
 19436                           fsr2l	equ	0xFD9
 19437                           status	equ	0xFD8
 19438                           
 19439                           	psect	rparam
 19440  0000                     pclatu	equ	0xFFB
 19441                           pclath	equ	0xFFA
 19442                           tblptru	equ	0xFF8
 19443                           tblptrh	equ	0xFF7
 19444                           tblptrl	equ	0xFF6
 19445                           tablat	equ	0xFF5
 19446                           prodh	equ	0xFF4
 19447                           prodl	equ	0xFF3
 19448                           intcon	equ	0xFF2
 19449                           intcon2	equ	0xFF1
 19450                           postinc0	equ	0xFEE
 19451                           fsr0h	equ	0xFEA
 19452                           fsr0l	equ	0xFE9
 19453                           wreg	equ	0xFE8
 19454                           fsr1h	equ	0xFE2
 19455                           fsr1l	equ	0xFE1
 19456                           bsr	equ	0xFE0
 19457                           indf2	equ	0xFDF
 19458                           postinc2	equ	0xFDE
 19459                           postdec2	equ	0xFDD
 19460                           fsr2h	equ	0xFDA
 19461                           fsr2l	equ	0xFD9
 19462                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    118
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      79
    BANK0           160     82      82
    BANK1           256    129     166
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?___ftsub	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___asftsub	float  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?__tdiv_to_l_	unsigned long  size(2) Largest target is 0

    ?__div_to_l_	unsigned long  size(2) Largest target is 0

    ?___asftadd	float  size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 0

    ?_scale	float  size(2) Largest target is 0

    ?_fround	float  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awmod	int  size(2) Largest target is 0

    ?_Read_LDR	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?_Obtener_Distancia	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 4
		 -> USART_Init@baud_rate(BANK1[4]), 

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___altoft	float  size(2) Largest target is 0

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK1[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[10]), STR_2(CODE[18]), STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S552$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 32
		 -> LCD_Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupcaoLOW in COMRAM

    _interrupcaoLOW->i1_Read_LDR
    i1_sprintf->i1_fround
    i1_sprintf->i1_scale
    i1___lltoft->i1___ftpack
    i1___llmod->i1___lldiv
    i1___fttol->i1___wmul
    i1___asftsub->i1___ftsub
    i1___ftsub->i1___ftadd
    i1___asftmul->i1___ftmul
    i1___asftadd->i1_fround
    i1___ftadd->i1___ftpack
    i1_scale->i1___ftmul
    i1___wmul->i1___awdiv
    i1___awdiv->i1___awmod
    i1_fround->i1___ftmul
    i1_Read_LDR->i1___ftmul
    i1___ftmul->i1___fttol
    i1___ftdiv->i1___ftmul
    i1___awtoft->i1___ftpack
    i1_Obtener_Distancia->i1___lwdiv
    i1_lcd_putc->i1_lcd_write_char
    i1_lcd_write_char->i1_Lcd_Port
    i1_lcd_gotoxy->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _interrupcaoHIGH->_control_LED

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcaoLOW in BANK0

    _interrupcaoLOW->i1_sprintf
    i1_sprintf->i1___asftadd
    i1___asftadd->i1_fround
    i1_Read_LDR->i1___ftdiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___asftsub
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___asftadd->___ftadd
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    _Read_LDR->___ftdiv
    ___awtoft->___ftpack
    ___ftmul->___wmul
    _Obtener_Distancia->___lwdiv
    _USART_Init->___ftadd
    ___fttol->_scale
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___altoft->___ftpack
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_init->_Lcd_Cmd
    _lcd_gotoxy->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcaoLOW in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcaoLOW in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcaoLOW in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcaoLOW in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcaoLOW in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcaoLOW in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcaoLOW in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24656
                                            127 BANK1      2     2      0
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
            _Configuracion_Registros
                        _Timer1_Init
                            _Init_AD
                         _USART_Init
                 _inicioInterrupcoes
                  _Obtener_Distancia
                           _Read_LDR
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    43      7   17881
                                             81 BANK1     46    39      7
                             _fround
                              _scale
                            _isdigit
                        __tdiv_to_l_
                         __div_to_l_
                          ___asftadd
                          ___asftmul
                            ___ftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     232
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4     414
                                              8 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     159
                                             14 BANK1     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     241
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      65
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     198
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___asftsub                                            5     0      5    1695
                                             76 BANK1      5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    1602
                                             70 BANK1      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5     893
                                             39 BANK1      5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___asftadd                                            5     0      5    1630
                                             70 BANK1      5     0      5
                             _fround (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          13     7      6     758
                                              0 BANK1     13     7      6
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17    11      6     454
                                              0 BANK1     17    11      6
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     2      1      99
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _scale                                               15    12      3    2617
                                             39 BANK1     12     9      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _fround                                              18    15      3    2338
                                             39 BANK1     15    12      3
                            ___ftmul
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     242
                                             16 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     433
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     445
                                              7 BANK1      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Read_LDR                                            10     7      3    2048
                                             56 BANK1     10     7      3
                            ___ftdiv
                            ___ftmul
                           ___awtoft
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             5     2      3     445
                                              8 BANK1      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             17    11      6     800
                                             22 BANK1     17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Obtener_Distancia                                    8     6      2     414
                                              8 BANK1      8     6      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     241
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _inicioInterrupcoes                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     7      0    3105
                                             70 BANK1      7     7      0
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     252
                                             51 BANK1     15    11      4
                              _scale (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             17    11      6     732
                                             39 BANK1     17    11      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             14     8      6    1537
                                             56 BANK1     14     8      6
                           ___ftpack
                           ___altoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4     516
                                              8 BANK1     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     312
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_AD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion_Registros                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             4     2      2     384
                                              4 BANK1      4     2      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       3     2      1     254
                                              1 BANK1      3     2      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     279
                                              3 BANK1      1     1      0
                           _Lcd_Port
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           5     3      2     545
                                              3 BANK1      5     3      2
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     1      1     155
                                              1 BANK1      2     1      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     0      1     124
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupcaoLOW                                      19    19      0   50280
                                             63 BANK0     19    19      0
                       i1_lcd_gotoxy
                         i1_lcd_putc
                i1_Obtener_Distancia
                         i1_Read_LDR
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (7) i1_sprintf                                           53    46      7   42519
                                             17 BANK0     46    39      7
                           i1_fround
                            i1_scale
                        i1___asftadd
                        i1___asftmul
                        i1___asftsub
                          i1___awdiv
                       i1__div_to_l_
                      i1__tdiv_to_l_
                           i1___ftge
                          i1___ftmul
                          i1___ftneg
                          i1___fttol
                          i1_isdigit
                          i1___lldiv
                          i1___llmod
                         i1___lltoft
                          i1___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___lwmod                                            6     2      4     521
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i1___lltoft                                           9     5      4     904
                                             24 COMRAM     9     5      4
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1___llmod                                           10     2      8     521
                                             30 COMRAM    10     2      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___lldiv                                           14     6      8     527
                                             16 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (8) i1_isdigit                                            3     2      1     223
                                             16 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (8) i1___fttol                                           15    11      4     823
                                             38 COMRAM    15    11      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___ftneg                                            3     0      3     148
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (8) i1___ftge                                             9     3      6     446
                                             16 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) i1__tdiv_to_l_                                       17    11      6     983
                                             16 COMRAM    17    11      6
 ---------------------------------------------------------------------------------
 (8) i1__div_to_l_                                        13     7      6    1409
                                             16 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (8) i1___asftsub                                          5     0      5    3799
                                             44 COMRAM     5     0      5
                          i1___ftsub
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___ftsub                                            6     0      6    3580
                                             38 COMRAM     6     0      6
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (8) i1___asftmul                                          5     0      5    2001
                                              0 BANK0      5     0      5
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (8) i1___asftadd                                          5     0      5    3651
                                             12 BANK0      5     0      5
                           i1_fround (ARG)
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (10) i1___ftadd                                          14     8      6    3432
                                             24 COMRAM    14     8      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1_scale                                             21    18      3    6161
                                             70 COMRAM     3     0      3
                                              0 BANK0      9     9      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                          i1___fttol (ARG)
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4     517
                                             32 COMRAM     6     2      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     969
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            9     5      4     977
                                             23 COMRAM     9     5      4
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i1_fround                                            27    24      3    5369
                                             70 COMRAM     3     0      3
                                              0 BANK0     12    12      0
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) i1_Read_LDR                                          10     7      3    4720
                                             70 COMRAM     3     0      3
                                             17 BANK0      7     7      0
                         i1___awtoft
                          i1___ftdiv
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (8) i1___ftmul                                           17    11      6    1737
                                             53 COMRAM    17    11      6
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack
                          i1___fttol (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___ftdiv                                           17    11      6    1815
                                              0 BANK0     17    11      6
                         i1___ftpack
                          i1___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___ftpack                                           8     3      5     679
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) i1___awtoft                                           5     2      3     977
                                             24 COMRAM     5     2      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) i1_Obtener_Distancia                                  8     6      2     904
                                             24 COMRAM     8     6      2
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            8     4      4     527
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1_lcd_putc                                           4     2      2     884
                                             20 COMRAM     4     2      2
                   i1_lcd_write_char
 ---------------------------------------------------------------------------------
 (8) i1_lcd_write_char                                     3     2      1     588
                                             17 COMRAM     3     2      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_lcd_gotoxy                                         5     3      2    1253
                                             19 COMRAM     5     3      2
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Cmd                                            2     1      1     365
                                             17 COMRAM     2     1      1
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (9) i1_Lcd_Port                                           1     0      1     292
                                             16 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _interrupcaoHIGH                                    15    15      0      45
                                              1 COMRAM    15    15      0
                        _control_LED
 ---------------------------------------------------------------------------------
 (13) _control_LED                                         1     0      1      30
                                              0 COMRAM     1     0      1
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (14) _led_on                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _led_off                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _Lcd_Cmd
       _Lcd_Port
   _lcd_init
     _Lcd_Port
     _Lcd_Cmd
       _Lcd_Port
   _lcd_putc
     _lcd_write_char
       _Lcd_Port
   _Configuracion_Registros
   _Timer1_Init
   _Init_AD
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fttol
       _scale (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _inicioInterrupcoes
   _Obtener_Distancia
     ___lwdiv
   _Read_LDR
     ___ftdiv
       ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___awtoft
       ___ftpack
   _sprintf
     _fround
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     __tdiv_to_l_
     __div_to_l_
     ___asftadd
       _fround (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___asftmul
       ___ftmul
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___asftsub
       ___ftsub
         ___ftadd
           ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___awdiv
       ___awmod (ARG)
     ___ftge
     ___ftneg
     ___fttol
       _scale (ARG)
         ___ftmul
           ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___lwmod
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)

 _interrupcaoLOW (ROOT)
   i1_lcd_gotoxy
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_lcd_putc
     i1_lcd_write_char
       i1_Lcd_Port
   i1_Obtener_Distancia
     i1___lwdiv
   i1_Read_LDR
     i1___awtoft
       i1___ftpack
     i1___ftdiv
       i1___ftpack
       i1___ftmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
     i1___ftmul
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)
       i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
   i1_sprintf
     i1_fround
       i1___awdiv
         i1___awmod (ARG)
       i1___awmod
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1_scale
       i1___awdiv
         i1___awmod (ARG)
       i1___awmod
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___fttol (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1___asftadd
       i1_fround (ARG)
         i1___awdiv
           i1___awmod (ARG)
         i1___awmod
         i1___ftmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___fttol (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___ftadd (ARG)
         i1___ftpack
     i1___asftmul
       i1___ftmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
           i1___ftpack (ARG)
           i1___wmul (ARG)
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
     i1___asftsub
       i1___ftsub
         i1___ftadd
           i1___ftpack
       i1___lltoft (ARG)
         i1___ftpack
     i1___awdiv
       i1___awmod (ARG)
     i1__div_to_l_
     i1__tdiv_to_l_
     i1___ftge
     i1___ftmul
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)
       i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
         i1___ftpack (ARG)
         i1___wmul (ARG)
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1___ftneg
     i1___fttol
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)
       i1___ftpack (ARG)
       i1___wmul (ARG)
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     i1_isdigit
     i1___lldiv
     i1___llmod
       i1___lldiv (ARG)
     i1___lltoft
       i1___ftpack
     i1___lwmod
     i1___wmul
       i1___awdiv (ARG)
         i1___awmod (ARG)
       i1___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     81      A6       7       64.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      52       5       51.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      4F       1       83.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      1D       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     147      20        0.0%
DATA                 0      0     164       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Jun 10 00:55:06 2022

              _inicioInterrupcoes 62E4                      ___asftadd@f2 0148  
                    ___altoft@exp 0110                        i1___awtoft 5E60  
                      i1___ftpack 5386                     ___asftadd@f1p 0146  
          __end_of_interrupcaoLOW 0172                       i1___asftadd 6062  
           __size_ofi1__div_to_l_ 00F4                     ___altoft@sign 0111  
                      i1___lltoft 5C56         __end_of_Obtener_Distancia 54EC  
                              _GO 007E11                       i1___asftmul 6026  
                     i1___asftsub 5FEA                      ___awdiv@sign 010D  
                              bsr 000FE0               ___wmul@multiplicand 0112  
                     __CFG_BORV$3 000000                  i1___wmul@product 0025  
                    ___asftmul@f2 0129           __end_of_interrupcaoHIGH 5A1C  
                    __CFG_CP0$OFF 000000                      ___asftsub@f2 014E  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                      ___ftadd@exp1 0145  
                    ___ftadd@exp2 0144               ?_inicioInterrupcoes 0001  
                    ___ftadd@sign 0143                               l101 60E4  
                             l102 60E6                               l103 60F2  
                             l104 60F4                               l105 6100  
                             l121 588A                               l106 6102  
                             l210 5450                               l107 610E  
                             l109 6110                               l214 54CC  
                             l207 544A                               l223 4C96  
                             l154 4A30                               l253 2A26  
                             l325 10FC                               l710 3292  
                             l711 3530                               l632 3D82  
                             l641 3D72                               l714 32D4  
                             l634 3C5C                               l716 330E  
                             l725 3420                               l734 3458  
                             l742 4116                               l750 39C0  
                             l744 4078                               l673 45B8  
                             l745 40DA                               l753 391C  
                             l907 5638                               l917 590C  
                             l774 3BAE                               l838 4C1E  
                             l759 39B0                               l768 4E24  
                             l784 60CA                               l848 5374  
                    i1___ftadd@f1 0019                               l794 445E  
                    i1___ftadd@f2 001C                      __CFG_CPB$OFF 000000  
                             _RD2 007C1A                               _RD3 007C1B  
                             _RD4 007C1C                               _RD5 007C1D  
                             _RD6 007C1E                               _RD7 007C1F  
                    __CFG_CPD$OFF 000000                      i1___ftge@ff1 0011  
                    i1___ftge@ff2 0014                      __CFG_BOR$OFF 000000  
                    i1___ftdiv@f1 0060                      i1___ftdiv@f2 0063  
                    i1___ftdiv@f3 006D                      ___awmod@sign 0106  
      i1Obtener_Distancia@Timer_1 001B                      i1___ftneg@f1 0011  
                             wreg 000FE8                      i1___awtoft@c 0019  
                    __CFG_FOSC$HS 000000                     ___asftmul@f1p 0127  
                     _sprintf$563 0161                      i1___ftmul@f1 0036  
                    i1___ftmul@f2 0039                        i1_lcd_putc 61BC  
                   ___asftsub@f1p 014C                       lcd_gotoxy@a 0103  
                     lcd_gotoxy@b 0104                      i1___ftsub@f1 0027  
                    i1___ftsub@f2 002A                      i1___fttol@f1 0027  
                     lcd_gotoxy@y 0106                       lcd_gotoxy@z 0105  
                    ?_control_LED 0001                      __CFG_LVP$OFF 000000  
                    ___ftdiv@cntr 0132                      ___ftdiv@sign 0137  
                    __CFG_WDT$OFF 000000                      i1___lltoft@c 0019  
                            _ADIE 007CEE                              l8521 52F4  
                            _ADIP 007CFE                              l8451 4324  
                            l8525 5358                              l8517 52D2  
                            l8519 52EC                              l8481 441C  
                            l8473 43DC                              l8483 4424  
                            _ADON 007E10                              l8469 43BE  
                            l8487 444E                              l8479 4402  
                            STR_1 0888                              STR_2 0876  
                            STR_3 0888                              STR_4 0876  
                            l9987 5844                              _GIEH 007F97  
                            _GIEL 007F96                              _LATB 000F8A  
                            _IPEN 007E87                              _RCIE 007CED  
                            _RCIF 007CF5                              _RCIP 007CFD  
                            u6830 430C                              u6850 4350  
                            u6835 4302                              u6855 4346  
                            u6880 43E6                              u9620 3972  
                            u9550 37DE                              u9800 3212  
                            u9810 324E                              u9570 3822  
                            u9555 37D4                              u9805 3208  
                            u9815 3244                              u9575 3818  
                            u8874 4C64                              u9690 3D34  
                            u8875 4C5E                              u8884 4C86  
                            u8885 4C80                              u8990 0BA4  
                            u8975 0B28                              _TMR1 000FCE  
                            u8995 0B98                   lcd_write_char@a 0101  
                 lcd_write_char@y 0103            __end_of_lcd_write_char 5E1A  
      Obtener_Distancia@Distancia 010C              ??_inicioInterrupcoes 0100  
               i1___lldiv@divisor 0015                              _main 4A18  
                    ___ftpack@arg 0100                      ___ftpack@exp 0103  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                 i1___lldiv@counter 001E  
                            pclat 000FFA                     i1___ftdiv@exp 006C  
                            prodh 000FF4                              prodl 000FF3  
                            start 0172                      i1__div_to_l_ 4E26  
                   __CFG_IESO$OFF 000000                   __end_ofi1_scale 2E78  
                    _sprintf$1204 015E                   __end_of_Lcd_Cmd 62AA  
                   __CFG_MCLRE$ON 000000                      ___ftmul@cntr 0125  
                    ___ftmul@sign 0126                     i1___ftmul@exp 0041  
                 __end_of_Init_AD 630C                      ___fttol@exp1 0141  
                    ___fttol@lval 013D                   ?_interrupcaoLOW 0001  
                  i1___asftadd@f2 006E                     __CFG_PLLDIV$1 000000  
         i1___ftmul@f3_as_product 0042                    __CFG_CCP2MX$ON 000000  
                           l11001 4DC6                             l10123 54B0  
                           l10045 5C02                             l11021 4B62  
                           l11007 4E22                             l11023 4B7C  
                           l10303 0F8E                             l10311 0FC2  
                           l10151 08D0                             l10049 5C32  
                           l11033 4C02                             l11025 4B84  
                           l11041 566E                             l10305 0FA4  
                           l10241 0D12                             l10233 0CA0  
                           l10225 0C28                             l10209 0B50  
                           l10153 08EE                             l10145 08AA  
                           l10411 1402                             l10403 1394  
                           l10163 093C                             l10171 09C0  
                           l11053 55C4                             l10341 1100  
                           l10253 0DA0                             l10237 0CD4  
                           l10181 0A4C                             l10157 08FC  
                           l11055 55D6                             l10503 318A  
                           l11039 5654                             l10431 14E4  
                           l10423 1484                             l10407 13C2  
                           l10335 10C2                             l10319 1004  
                           l10327 1094                             l10271 0E7C  
                           l10191 0A88                             l10183 0A6A  
                           l11065 5624                             l11057 55DE  
                           l10601 394A                             l11081 58F8  
                           l11073 58AA                             l10425 1492  
                           l10417 143A                             l10353 118A  
                           l10329 10A4                             l10265 0E18  
                           l10249 0D6E                             l10193 0AC4  
                           l10177 09F4                             l10611 398E  
                           l11075 58BC                             l10371 12A0  
                           l10363 1272                             l10187 0A80  
                           l10701 45AC                             l10525 26FC  
                           l10613 39A8                             l10605 3968  
                           l10621 3BC6                             l11077 58C4  
                           l10461 15B2                             l10429 14D6  
                           l10365 1282                             l10349 1138  
                           l10293 0F66                             l10285 0EDA  
                           l10373 12AE                             l10543 29F4  
                           l10519 25EE                             l10455 1582  
                           l10439 1522                             l10447 154E  
                           l10383 1312                             l10199 0AE6  
                           l10471 169C                             l10713 5232  
                           l10801 3F94                             l10537 28DA  
                           l10529 270E                             l10449 155A  
                           l10297 0F70                             l10289 0F3A  
                           l10715 524C                             l10555 5FE0  
                           l10571 383A                             l10627 3BDC  
                           l10467 1662                             l10733 32A0  
                           l10565 37F6                             l10661 3D2A  
                           l10389 1336                             l10469 1678  
                           l10807 3FF0                             l10495 305C  
                           l10647 3CDA                             l10681 44AC  
                           l10761 3390                             l10745 3300  
                           l10921 475C                             l10585 38B6  
                           l10657 3D0C                             l10691 4554  
                           l10683 44DE                             l10675 447C  
                           l10763 33A6                             l10755 3358  
                           l10739 32E2                             l10923 476E  
                           l10915 4730                             l10667 3D50  
                           l10781 3490                             l10773 33FC  
                           l10765 33B6                             l10941 47E8  
                           l10933 47BC                             l10925 4776  
                           l10909 4712                             l10669 3D6A  
                           l10695 456A                             l10687 450C  
                           l10679 4496                             l10791 350C  
                           l10775 3412                             l10767 33C4  
                           l10855 3A62                             l10689 453E  
                           l10873 3AFE                             l10849 3A06  
                           l10937 47D0                             l10961 5074  
                           l10953 5040                             l10883 3B62  
                           l10963 5086                             l10869 3AD2  
                           l10965 508E                             l10973 50D6  
                           l10957 5056                             l10879 3B36  
                           l10977 50EE                             l10969 50C2  
                           l10989 5B4C                             l10997 4D7C  
    __size_ofi1_Obtener_Distancia 007E                             ?_main 0001  
                  i1___awdiv@sign 001E             __size_ofi1_lcd_gotoxy 0056  
                 __end_of___awdiv 47F2                   __end_of___ftadd 3532  
                 __end_of___awmod 50F8                   __end_of___ftdiv 4118  
                 __end_of___ftneg 60D8                             u10010 3F7C  
                 __end_of___lldiv 4C30                             u10030 3FC0  
                           u10015 3F72                             u10040 3FD6  
       __size_ofi1_lcd_write_char 003A                             u10035 3FB6  
                           u10060 39EE                             u10080 3A32  
                           u10065 39E4                             u10090 3A48  
                           u11107 5442                             u11117 5DFC  
                           u10085 3A28                   __end_of___ftmul 3BB0  
                           u11127 5E10                             u11137 4812  
                           u11147 4838                   ___awdiv@divisor 0109  
                           u11157 485E                             u11167 629C  
                 __end_of___llmod 5386                   __end_of___ftsub 5F28  
                 __end_of___fttol 4460                   __end_of___lwdiv 5642  
                  i1___asftmul@f2 0062                             i1l101 61FA  
                           i1l102 61FC                             i1l103 6204  
                           i1l104 6206                             i1l105 620E  
                           i1l121 5DC6                             i1l106 6210  
                           i1l210 5A2E                             i1l107 6218  
                           i1l109 621A                             i1l214 5A80  
                           i1l207 5A28                             i1l223 4F80  
                           i1l253 2E76                             i1l325 1E96  
                 __end_of___lwmod 5916                             i1l194 012C  
                           i1l710 3DEC                             i1l711 3F4E  
                           i1l632 4F18                             i1l641 4F08  
                           i1l714 3E16                             i1l634 4E84  
                           i1l725 3EBA                             i1l742 42DE  
                           i1l734 3ED6                             i1l750 46DA  
                           i1l744 4240                             i2l185 62E2  
                           i1l673 543C                             i1l745 42A2  
                           i1l753 4678                             i1l907 5D68  
                           i2l197 59E2                             i1l917 5E56  
                           i2l198 59E2                             i1l774 4A16  
                           i1l838 598A                             i1l759 46CA  
                           i1l768 576C                             i1l784 6234  
                           i1l848 5BE0                             i1l794 51D6  
                 ___awdiv@counter 010C                             _RCREG 000FAE  
                           _RCSTA 000FAB                    i1___asftsub@f2 002F  
                           _SPBRG 000FAF                     __CFG_USBDIV$1 000000  
                  i1___ftadd@exp1 0026                    i1___ftadd@exp2 0025  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISD 000F95                    i1___ftadd@sign 0024  
                      i1isdigit@c 0011                     __CFG_PWRT$OFF 000000  
                     ?i1_Lcd_Port 0011                i1__tdiv_to_l_@exp1 0021  
              i1__tdiv_to_l_@cntr 0020                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                        i1scale@scl 0047  
                    ___lltoft@exp 0110                i1__tdiv_to_l_@quot 001C  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
              __size_ofi1_Lcd_Cmd 0020                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                i1___lwmod@dividend 0011  
                   __CFG_WRTC$OFF 000000                   __end_of_led_off 633E  
                   __CFG_WRTD$OFF 000000                    i1___awmod@sign 0017  
              i1___lldiv@dividend 0011                    __CFG_EBTRB$OFF 000000  
                   ___awtoft@sign 010C                   __end_of_dpowers 0828  
                           _scale 2414                   __end_of_isdigit 5FEA  
                     ?i1_Read_LDR 0047                     ___ftpack@sign 0104  
                __end_ofi1___ftge 576E                             tablat 000FF5  
                __end_ofi1___wmul 614C                    i1___ftdiv@cntr 006B  
            i1lcd_write_char@temp 0013                    i1___ftdiv@sign 0070  
                 ?_lcd_write_char 0101                             status 000FD8  
             i1___wmul@multiplier 0021                   __end_of_sprintf 16AA  
              __size_ofi1___awdiv 0090                __size_ofi1___ftadd 01CC  
              __size_ofi1___awmod 007C                  __end_ofi1_fround 37B2  
              __size_ofi1___ftdiv 01C8                __size_ofi1___ftneg 0026  
              __size_ofi1___lldiv 0086                    __CFG_ICPRT$OFF 000000  
          __size_ofi1__tdiv_to_l_ 0122                __size_ofi1___ftmul 0110  
              __size_ofi1___llmod 006A                __size_ofi1___ftsub 0036  
              __size_ofi1___fttol 00E0                __size_ofi1___lwdiv 0056  
              __size_ofi1___lwmod 0046                    __CFG_PBADEN$ON 000000  
                  i1___ftpack@arg 0011                    i1___ftpack@exp 0014  
                     ?_USART_Init 0001                  __end_of_Lcd_Port 6112  
                 __initialization 6266                      i1_lcd_gotoxy 5D72  
                    __end_of_main 4B26                    i1_sprintf$1829 007E  
                     ?i1___awtoft 0019                       ?i1___ftpack 0011  
                  i1___ftmul@cntr 0045                __size_ofi1_isdigit 0024  
                  i1___ftmul@sign 0046                i1___lldiv@quotient 001A  
                __end_of_Read_LDR 4D32                       ?i1___lltoft 0019  
      __size_of_Obtener_Distancia 00AE                       i1lcd_putc@a 0015  
                     i1lcd_putc@i 0017                        i1sprintf@c 009E  
                      i1sprintf@f 0073                    i1___fttol@exp1 0035  
                  i1___fttol@lval 0031                  ?_interrupcaoHIGH 0001  
                          ??_main 017F                     ___fttol@sign1 013C  
              __size_ofi1_sprintf 0D6A                     __activetblptr 000002  
                 i1___asftadd@f1p 006C              __size_of__tdiv_to_l_ 0210  
                    i1_scale$1828 0066                       ?i1_lcd_putc 0015  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                    i1___lltoft@exp 0021  
                __end_of___altoft 52B0                  ___llmod@dividend 010E  
                          ?_scale 0127                            _ADRESH 000FC4  
                          _ADRESL 000FC3                  ___awdiv@dividend 0107  
                __end_of___awtoft 5B88                  __end_of___ftpack 45BA  
                __end_of___lltoft 56DE                 i1___llmod@divisor 0023  
                 i1___asftmul@f1p 0060                            i1l9101 57B4  
                          i1l9103 57BC                            i1l9121 57F4  
                          i1l9113 57DC                            i1l9105 57C0  
                          i1l9117 57E6                            i1l9141 5AD4  
                          i1l9133 5AB6                            i1l9301 3E7E  
                          i1l9205 4EB4                            i1l9143 5ADC  
                          i1l9311 3EAA                            i1l9303 3E86  
                          i1l9215 4ED0                            i1l9241 53CC  
                          i1l9233 5396                            i1l9145 5AE0  
                          i1l9153 5AFE                            i1l9137 5AC2  
                          i1l9313 3EB4                            i1l9305 3E8C  
                          i1l9225 4EF8                            i1l8611 5D9C  
                          i1l9227 4F04                            i1l9219 4EE0  
                          i1l9403 4650                            i1l9245 53E2  
                          i1l9237 53A4                            i1l9157 5B0C  
                          i1l9149 5AF4                            i1l9247 5400  
                          i1l9239 53AE                            i1l9095 579A  
                          i1l9319 3EF2                            i1l9271 3DFA  
                          i1l9431 46C6                            i1l9423 46A2  
                          i1l9169 5E7C                            i1l9249 540A  
                          i1l9089 578A                            i1l9329 3F2A  
                          i1l9185 4E3E                            i1l9441 573E  
                          i1l9601 5BD2                            i1l8643 61DE  
                          i1l9179 4E32                            i1l9419 4692  
                          i1l9515 5124                            i1l9621 5D36  
                          i1l9293 3E56                            i1l9277 3E24  
                          i1l9429 46BA                            i1l9437 570E  
                          i1l9533 5178                            i2l7071 62D8  
                          i1l8639 61C6                            i1l9623 5D3E  
                          i1l8655 5A70                            i1l9463 496C  
                          i1l9383 45E6                            i1l9447 576A  
                          i1l9551 51C6                            i1l9543 51A0  
                          i1l9607 5C60                            i2l7081 59DE  
                          i1l9633 5D5E                            i1l9625 5D42  
                          i1l9481 49B2                            i1l9457 4934  
                          i1l9545 51AC                            i1l9537 5188  
                          i1l9609 5C6C                            i1l9641 5E2C  
                          i2l7075 59CA                            i1l9491 49DE  
                          i1l9299 3E74                            i1l9547 51B0  
                          i1l9563 625E                            i1l9643 5E34  
                       ??i1_scale 0060                            i2l7077 59D2  
                          i1l9477 49A2                            i1l9389 4612  
                          i1l9573 593C                            i1l9645 5E38  
                          i2l7079 59D6                            i1l9487 49CE  
                          i1l9575 5948                            i1l9585 597C  
                          i1l9577 594C                            i1l9593 5B9E  
                          i1l9649 5E4C                            i1l9595 5BAA  
                          i1l9597 5BAE                 i1___llmod@counter 0028  
                 i1___asftsub@f1p 002D                         ??_Lcd_Cmd 0102  
                          _TMR0IE 007F95                            _TMR0IP 007F8A  
                          _TMR1ON 007E68                            _TRISA0 007C90  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
                   i1sprintf@_val 008E                     i1sprintf@flag 0093  
                   i1sprintf@fval 0099                         ??_Init_AD 0100  
                   i1sprintf@prec 009C                     ??_Timer1_Init 0100  
                  __CFG_XINST$OFF 000000                  __end_of__powers_ 0876  
             __size_ofi1_Lcd_Port 002A                 __end_ofi1_Lcd_Cmd 62CA  
                __end_of_lcd_init 4908                  __end_of_lcd_putc 5C56  
                          ___ftge 4D32                            ___wmul 5CBA  
                       ??___awdiv 010B                         ??___ftadd 013E  
                  __CFG_STVREN$ON 000000                         ??___awmod 0104  
                       ??___ftdiv 012D                         ??___ftneg 0103  
                       ??___lldiv 0108                         ??___ftmul 011C  
                       ??___llmod 0116                         ??___ftsub 014C  
                       ??___fttol 0137                         ??___lwdiv 0104  
                       ??___lwmod 0104                            _led_on 6332  
             __size_ofi1_Read_LDR 00F0                            _fround 2E78  
                          clear_0 626C                  ___awdiv@quotient 010E  
                 ___awmod@divisor 0102                   ___awmod@counter 0105  
                       ??_led_off 0001                     i1__tdiv_to_l_ 45BA  
           ___ftmul@f3_as_product 0122                 __end_ofi1___awdiv 57FE  
               __end_ofi1___ftadd 3F50                 __end_ofi1___awmod 5B16  
               __end_ofi1___ftdiv 42E0                 __end_ofi1___ftneg 6242  
               __end_ofi1___lldiv 599C                 __end_ofi1___ftmul 4A18  
               __end_ofi1___llmod 5BF2                 __end_ofi1___ftsub 61BC  
               __end_ofi1___fttol 51D8                 __end_ofi1___lwdiv 5D72  
               __end_ofi1___lwmod 5E60                         ??_isdigit 0101  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
             __size_of_USART_Init 00AC                         ??_sprintf 0158  
               __end_ofi1_isdigit 6266                __size_of___asftadd 0042  
             __size_ofi1___awtoft 0044               __size_ofi1___ftpack 00B8  
    i1Obtener_Distancia@Distancia 001D                __size_of___asftmul 0042  
              __size_of___asftsub 0042              __size_of_control_LED 001A  
             __size_ofi1___lltoft 0064          ?_Configuracion_Registros 0001  
                      __accesstop 0060           __end_of__initialization 627E  
                      ___altoft@c 0108                   i1___awtoft@sign 001D  
                      ___ftadd@f1 0138                        ___ftadd@f2 013B  
                      ___ftge@ff1 0100                        ___ftge@ff2 0103  
                 i1___ftpack@sign 0015                 __end_ofi1_sprintf 2414  
                      ___ftdiv@f1 0127                        ___ftdiv@f2 012A  
                      ___ftdiv@f3 0133                        ___ftneg@f1 0100  
                      ___awtoft@c 0108                        ___ftmul@f1 0116  
                      ___ftmul@f2 0119                        ___ftsub@f1 0146  
                      ___ftsub@f2 0149                        ___fttol@f1 0133  
                  __pcstackCOMRAM 0001    interrupcaoHIGH@esp_server_data 0010  
             __size_ofi1_lcd_putc 0036                        ___lltoft@c 0108  
                    ?i1___asftadd 006C                     __end_of_scale 2A28  
                    ?i1___asftmul 0060                      ?i1___asftsub 002D  
             __end_of_Timer1_Init 6320            Read_LDR@analog_reading 013F  
                  ?i1__tdiv_to_l_ 0011                         ?i1___ftge 0011  
                       ?i1___wmul 0021                  i1_lcd_write_char 614C  
                  lcd_gotoxy@temp 0107                        __div_to_l_ 3BB0  
                       ?i1_fround 0047                       i1sprintf@ap 0089  
                     i1sprintf@vd 0085                       i1sprintf@sp 0071  
                 i1___fttol@sign1 0030                         ?_Lcd_Port 0100  
                 __div_to_l_@exp1 010C                   __div_to_l_@cntr 010B  
                    sprintf@integ 016B                           ??_scale 012A  
                 __div_to_l_@quot 0107                      sprintf@width 0177  
                      __pbssBANK1 0181                         ?_Read_LDR 0138  
             i1_Obtener_Distancia 5A1C                     __div_to_l_@f1 0100  
                   __div_to_l_@f2 0103                  ??_interrupcaoLOW 009F  
                         ?___ftge 0100                           ?___wmul 0110  
                         ?_led_on 0001                         ?___altoft 0108  
               __end_of___asftadd 5FAC                           ?_fround 0127  
               __end_of___asftmul 5F6A                 __end_of___asftsub 5EE6  
                       ?___awtoft 0108                         ?___ftpack 0100  
            ?i1_Obtener_Distancia 0019                        ??i1___ftge 0017  
                       ?___lltoft 0108                        ??i1___wmul 0025  
                   i1_fround$1826 0069                     i1_fround$1827 0066  
              i1___llmod@dividend 001F                     i1_isdigit$838 0013  
                         i1l11111 368E                           i1l11201 1840  
                         i1l11211 187A                           i1l11203 185C  
                         i1l11141 2C2E                           i1l11213 18B6  
                         i1l11119 3766                           i1l11135 2B72  
                         i1l11207 1872                i1___awdiv@dividend 0018  
                         i1l11153 2D80                           i1l11145 2C3C  
                         i1l11313 1D12                           i1l11305 1C86  
                         i1l11403 2092                           i1l11323 1D3A  
                         i1l11331 1D6E                           i1l11219 18D8  
                         i1l11171 16E6                           i1l11325 1D50  
                         i1l11317 1D1C                           i1l11309 1CE6  
                         i1l11261 1AD4                           i1l11253 1A6E  
                         i1l11245 1A06                           i1l11229 1942  
                         i1l11173 1704                           i1l11165 16C0  
                         i1l11511 41B8                           i1l11159 2E48  
                         i1l11431 2182                           i1l11423 2114  
                         i1l11183 1750                           i1l11191 17C8  
                         i1l11505 415C                           i1l11409 20B6  
                         i1l11361 1E9A                           i1l11273 1B52  
                         i1l11257 1A96                           i1l11177 1712  
                         i1l10481 00D4                           i1l11451 2264  
                         i1l11443 2204                           i1l11427 2142  
                         i1l11355 1E5C                           i1l11339 1DB0  
                         i1l11347 1E2E                           i1l11291 1C28  
                         i1l10483 0100                           i1l10475 005C  
                         i1l11445 2212                           i1l11437 21BA  
                         i1l11373 1F24                           i1l11349 1E3E  
                         i1l11285 1BCA                           i1l11269 1B2C  
                         i1l11197 17FC                           i1l10477 0094  
                         i1l11391 2020                           i1l11383 1FF2  
                         i1l10479 00C4                           i1l11481 2332  
                         i1l11449 2256                           i1l11385 2002  
                         i1l11369 1ED2                           i1l11393 202E  
                         i1l11475 2302                           i1l11459 22A2  
                         i1l11467 22CE                           i1l11491 2406  
                         i1l11469 22DA                           i1l11487 23CC  
                         i1l11489 23E2                      ??i1_Lcd_Port 0012  
                      ??i1_fround 0060                        _lcd_gotoxy 57FE  
 __end_of_Configuracion_Registros 6332                  ??_lcd_write_char 0102  
                      ??_Lcd_Port 0101                      ??i1_Read_LDR 0071  
                       ?_lcd_init 0001                         ?_lcd_putc 0104  
                  i1sprintf@integ 008B                           i1_scale 2A28  
                      ??_Read_LDR 013B                    i1sprintf@width 0097  
                 __CFG_VREGEN$OFF 000000                lcd_write_char@temp 0102  
                         _Lcd_Cmd 6288       __size_of_inicioInterrupcoes 0014  
                         _Init_AD 62F8                      i1fround@prec 0047  
                    ??_USART_Init 0146                 __end_of__npowers_ 084F  
                         __Hparam 0000                        _scale$1203 0130  
                     _Timer1_Init 630C                           __Lparam 0000  
              i1___awdiv@quotient 001F                __end_ofi1_Lcd_Port 621C  
                 __size_of___ftge 00F4                      ??i1___awtoft 001C  
                    ??i1___ftpack 0016                           ___awdiv 46DC  
                         ___ftadd 31E6                           ___awmod 500A  
                         ___ftdiv 3F50                           ___ftneg 609E  
                         ___lldiv 4B26                   __size_of___wmul 0062  
                         ___ftmul 39C2                           ___llmod 52B0  
                         ___ftsub 5EE6                           ___fttol 42E0  
                    ??i1___lltoft 001D                           ___lwdiv 5598  
                         ___lwmod 588C                   ??i1__tdiv_to_l_ 0017  
                    __psmallconst 0800                        ??___altoft 010C  
                 __size_of_led_on 0006             ??i1_Obtener_Distancia 001B  
                         __pcinit 6266                        ??___awtoft 010B  
                      ??___ftpack 0105                __end_ofi1_Read_LDR 500A  
                 __size_of_fround 036E                           __ramtop 0800  
                      ??___lltoft 010C                           __ptext0 4A18  
                         __ptext1 0894                           __ptext2 588C  
                         __ptext3 5642                           __ptext4 52B0  
                         __ptext5 4B26                           __ptext6 609E  
                         __ptext7 4D32                           __ptext8 5EA4  
                         __ptext9 5EE6                           _led_off 6338  
                       _T1CONbits 000FCD                       ?__div_to_l_ 0100  
                  USART_Init@temp 014A                           _dpowers 0800  
               i1___lwdiv@divisor 0013                           _isdigit 5FAC  
               i1___lwdiv@counter 0016                  ___awmod@dividend 0100  
                    ??i1_lcd_putc 0017                __end_of_USART_Init 5598  
                         _sprintf 0894                        ??_lcd_init 0103  
                  __pintcode_body 599C                        ??_lcd_putc 0106  
            end_of_initialization 627E                __end_ofi1___awtoft 5EA4  
              __end_ofi1___ftpack 543E                         i1u1040_24 4F70  
                       i1u1040_25 4F6A                         i1u1120_27 62BC  
                       i1u1105_20 4144                         i1u1105_25 413A  
                       i1u1107_20 4188                         i1u1107_25 417E  
                       i1u1108_20 419E                         i1u1117_27 5A20  
              __end_ofi1___lltoft 5CBA                         i1u1118_27 6168  
                       i1u1039_24 4F4E                         i1u1039_25 4F48  
                       i1u1119_27 617C                         i1u1056_25 191A  
                       i1u1058_20 1996                     __Lmediumconst 0000  
                       i1u1058_25 198A                           int_func 599C  
                 ___lldiv@divisor 0104                   ___lldiv@counter 010D  
                       _LDR_value 0181                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                 i1__div_to_l_@f1 0011                   i1__div_to_l_@f2 0014  
                       Lcd_Port@a 0100                __end_ofi1_lcd_putc 61F2  
                  __tdiv_to_l_@f1 0100                    __tdiv_to_l_@f2 0103  
           i1___wmul@multiplicand 0023                         i1_Lcd_Cmd 62AA  
                   ??__tdiv_to_l_ 0106                         _PORTAbits 000F80  
            __size_ofi1___asftadd 003C              __size_ofi1___asftmul 003C  
            __size_ofi1___asftsub 003C                       ?_lcd_gotoxy 0103  
                       i1___awdiv 576E                         i1___ftadd 3D84  
                       i1___awmod 5A9A                         i1___ftdiv 4118  
                       i1___ftneg 621C                         i1___lldiv 5916  
                       i1___ftmul 4908                         i1___llmod 5B88  
                       i1___ftsub 6186                         i1___fttol 50F8  
        __size_of_interrupcaoHIGH 5A14                         i1___lwdiv 5D1C  
                       i1___lwmod 5E1A               USART_Init@baud_rate 0146  
                     ___ftdiv@exp 0136          __end_ofi1_lcd_write_char 6186  
                       i1_isdigit 6242               __size_of__div_to_l_ 01D4  
       Obtener_Distancia@Duracion 010E                       ___ftmul@exp 0121  
                       i1_sprintf 16AA  __size_of_Configuracion_Registros 0012  
                  __end_of___ftge 4E26                    __end_of___wmul 5D1C  
                      ?i1_Lcd_Cmd 0012                         _Distancia 0184  
                  __end_of_led_on 6338                 i1___lwmod@divisor 0013  
                  __end_of_fround 31E6                 i1___lwmod@counter 0016  
               __size_ofi1___ftge 0090               start_initialization 6266  
               __size_ofi1___wmul 003A               __end_of__tdiv_to_l_ 39C2  
                  _theresMovement 004E                        ?i1___awdiv 0018  
                      ?i1___ftadd 0019                     i1_sprintf$563 0081  
                      ?i1___awmod 0011                        ?i1___ftdiv 0060  
                   ??_control_LED 0002                        ?i1___ftneg 0011  
                      ?i1___lldiv 0011                        ?i1___ftmul 0036  
                      ?i1___llmod 001F                        ?i1___ftsub 0027  
                      ?i1___fttol 0027                 __size_ofi1_fround 0280  
                      ?i1___lwdiv 0011                        ?i1___lwmod 0011  
                   i1lcd_gotoxy@a 0014                     i1lcd_gotoxy@b 0015  
                   i1lcd_gotoxy@y 0017                     i1lcd_gotoxy@z 0016  
               __size_of_Lcd_Port 003A                  i1lcd_gotoxy@temp 0018  
                 ___llmod@divisor 0112                        ?i1_isdigit 0011  
                 ___llmod@counter 0117                     ?i1__div_to_l_ 0011  
               __size_of_Read_LDR 0102                      i1sprintf@exp 0095  
                      ?i1_sprintf 0071                          ??___ftge 0106  
             __size_of_lcd_gotoxy 008E                          ??___wmul 0114  
                   sprintf@vd_565 0167                          ??_led_on 0001  
              i1___awmod@dividend 0011                  __CFG_LPT1OSC$OFF 000000  
                        ??_fround 012A                 __size_of___altoft 00D8  
                      fround@prec 0127                 __size_of___awtoft 0072  
               __size_of___ftpack 015A                         ___asftadd 5F6A  
                       ___asftmul 5F28                         ___asftsub 5EA4  
               __size_of___lltoft 009C                       __pbssCOMRAM 004A  
     i1Obtener_Distancia@Duracion 001F                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100               __end_of__stringdata 0892  
               i1lcd_write_char@a 0012                 i1lcd_write_char@y 0014  
                        ?i1_scale 0047                          ?_Lcd_Cmd 0101  
               __size_of_lcd_init 0116                       sprintf@_val 016E  
                     sprintf@flag 0173                 __size_of_lcd_putc 0064  
                     sprintf@fval 0179                       sprintf@prec 017C  
                  ??i1__div_to_l_ 0017               __end_of_control_LED 62E4  
               ??_interrupcaoHIGH 0002                          ?_Init_AD 0001  
                    ?_Timer1_Init 0001                  ___lwdiv@dividend 0100  
                   ?i1_lcd_gotoxy 0014                         __pintcode 0008  
                        ?___awdiv 0107                          ?___ftadd 0138  
                        ?___awmod 0100                          ?___ftdiv 0127  
                        ?___ftneg 0100                          ?___lldiv 0100  
                        ?___ftmul 0116                          ?___llmod 010E  
                        ?___ftsub 0146                         __npowers_ 0828  
                        ?___fttol 0133                          ?___lwdiv 0100  
                        ?___lwmod 0100                       ??i1_Lcd_Cmd 0013  
               i1___awdiv@divisor 001A                       __pintcodelo 0018  
               i1___awdiv@counter 001D                       __tdiv_to_l_ 37B2  
                        ?_led_off 0001                      ??__div_to_l_ 0106  
                     __smallconst 0800                        ?___asftadd 0146  
                        ?_isdigit 0100                        ?___asftmul 0127  
                      ?___asftsub 014C                       ??i1___awdiv 001C  
                     ??i1___ftadd 001F                       ??i1___awmod 0015  
                     ??i1___ftdiv 0066                       ??i1___ftneg 0014  
                     ??i1___lldiv 0019                       ??i1___ftmul 003C  
                     ??i1___llmod 0027                       ??i1___ftsub 002D  
                     ??i1___fttol 002B                  ___lwdiv@quotient 0106  
                     ??i1___lwdiv 0015                       ??i1___lwmod 0015  
                        ?_sprintf 0151                    __size_of_scale 0614  
      __end_of_inicioInterrupcoes 62F8                    ___wmul@product 0114  
                        _LATAbits 000F89                       ??i1_isdigit 0012  
                  ??i1_lcd_gotoxy 0016                       _contControl 004A  
                        Lcd_Cmd@a 0101                          i1u808_20 3DA2  
                        i1u808_25 3D9A                          i1u809_20 3DC8  
                        i1u841_20 46A8                          i1u809_25 3DC0  
                        i1u834_20 45D8                __end_of__div_to_l_ 3D84  
                        i1u834_25 45D0                          i1u836_20 4604  
                        i1u836_25 45FC                          i1u853_20 5116  
                        i1u853_25 510E                          i1u846_20 4926  
                        i1u846_25 491E                          i1u855_20 5142  
                        i1u855_25 513A                          i1u848_20 4952  
                        i1u848_25 494A                          i1u849_20 495E  
                        i2u529_40 59D2                          i2u529_41 59D0  
                        i1u858_20 518E       __end_ofi1_Obtener_Distancia 5A9A  
                        i1u799_20 4EE6                       ??i1_sprintf 0078  
                __CFG_WDTPS$32768 000000           _Configuracion_Registros 6320  
           __end_ofi1__tdiv_to_l_ 46DC                          i1___ftge 56DE  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                     __stringdata 0876           __size_of_interrupcaoLOW 015A  
               ___wmul@multiplier 0110                          i1___wmul 6112  
                 i1sprintf@vd_565 0087                          i1_fround 3532  
                       lcd_putc@a 0104                         lcd_putc@i 0106  
                    ??_lcd_gotoxy 0105                          _Lcd_Port 60D8  
                i1__tdiv_to_l_@f1 0011                       _control_LED 62CA  
                i1__tdiv_to_l_@f2 0014                          _Read_LDR 4C30  
                __size_ofi1_scale 0450                  __size_of_Lcd_Cmd 0022  
               ?i1_lcd_write_char 0012           __size_of_lcd_write_char 0052  
                __size_of_Init_AD 0014                          __Hrparam 0000  
              ??i1_lcd_write_char 0013                          __Lrparam 0000  
               i1___awmod@divisor 0013                     ??i1___asftadd 004A  
              __end_of_lcd_gotoxy 588C                   control_LED@data 0001  
                   ??i1___asftmul 0047                     ??i1___asftsub 0032  
               i1___awmod@counter 0016                  __size_of___awdiv 0116  
                __size_of___ftadd 034C                  __size_of___awmod 00EE  
                __size_of___ftdiv 01C8                  __size_of___ftneg 003A  
                __size_of___lldiv 010A                          ___altoft 51D8  
                __size_of___ftmul 01EE                  __size_of___llmod 00D6  
                __size_of___ftsub 0042                  __size_of___fttol 0180  
                __size_of___lwdiv 00AA                  __size_of___lwmod 008A  
                        ___awtoft 5B16                          ___ftpack 4460  
                     _fround$1201 0133                       _fround$1202 0130  
                        ___lltoft 5642                       _isdigit$838 0102  
            __end_ofi1__div_to_l_ 4F1A                       ??___asftadd 014B  
                __size_of_led_off 0006                        sprintf@exp 0175  
                     ??___asftmul 012C                       ??___asftsub 0151  
                __size_of_isdigit 003E                   ___lwdiv@divisor 0102  
                 ___lwdiv@counter 0105                          __ptext10 5F28  
                        __ptext11 5F6A                          __ptext20 4C30  
                        __ptext12 3BB0                          __ptext21 5B16  
                        __ptext13 37B2                          __ptext30 51D8  
                        __ptext22 39C2                          __ptext14 5FAC  
                        __ptext31 4460                          __ptext23 543E  
                        __ptext15 2414                          __ptext40 60D8  
                        __ptext32 62F8                          __ptext24 5598  
                        __ptext16 2E78                          __ptext33 630C  
                        __ptext25 62E4                          __ptext17 5CBA  
                        __ptext50 56DE                          __ptext42 16AA  
                        __ptext34 6320                          __ptext26 54EC  
                        __ptext18 500A                          __ptext51 45BA  
                        __ptext43 5E1A                          __ptext35 5BF2  
                        __ptext27 42E0                          __ptext19 46DC  
                        __ptext60 5A9A                          __ptext52 4E26  
                        __ptext44 5C56                          __ptext36 5DC8  
                        __ptext28 3F50                          __ptext61 576E  
                        __ptext53 5FEA                          __ptext45 5B88  
                        __ptext37 47F2                          __ptext29 31E6  
                        __ptext70 61BC                          __ptext62 3532  
                        __ptext54 6186                          __ptext46 5916  
                        __ptext38 57FE                          __ptext71 614C  
                        __ptext63 4F1A                          __ptext55 6026  
                        __ptext47 6242                          __ptext39 6288  
                        __ptext72 5D72                          __ptext64 4908  
                        __ptext56 6062                          __ptext48 50F8  
                        __ptext73 62AA                          __ptext65 4118  
                        __ptext57 3D84                          __ptext49 621C  
                        __ptext74 61F2                          __ptext66 5386  
                        __ptext58 2A28                          __ptext67 5E60  
                        __ptext59 6112                          __ptext76 62CA  
                        __ptext68 5A1C                          __ptext77 6332  
                        __ptext69 5D1C                          __ptext78 6338  
                        _isBright 004C                          __powers_ 084F  
                        _lcd_init 47F2                          _lcd_putc 5BF2  
                __size_of_sprintf 0E16                i1___lwdiv@dividend 0011  
                   __size_of_main 010E                       i1Lcd_Port@a 0011  
       ??_Configuracion_Registros 0100                        _LCD_Buffer 0186  
            __size_of_Timer1_Init 0014             __CFG_CPUDIV$OSC1_PLL2 000000  
              i1___lwdiv@quotient 0017               __end_ofi1___asftadd 609E  
             __end_ofi1___asftmul 6062               __end_ofi1___asftsub 6026  
               i1__div_to_l_@exp1 001D                 i1__div_to_l_@cntr 001C  
               i1__div_to_l_@quot 0018                   _interrupcaoHIGH 0008  
            __end_ofi1_lcd_gotoxy 5DC8                          isdigit@c 0100  
                        scale@scl 0127                          intlevel1 0000  
                        intlevel2 0000                         sprintf@ap 0169  
                __tdiv_to_l_@exp1 0110                         sprintf@vd 0165  
                       sprintf@sp 0151                  __tdiv_to_l_@cntr 010F  
                __tdiv_to_l_@quot 010B                  ___lwmod@dividend 0100  
                ___lldiv@dividend 0100                        i1Lcd_Cmd@a 0012  
                    ?__tdiv_to_l_ 0100                    _interrupcaoLOW 0018  
               _Obtener_Distancia 543E                          sprintf@c 017E  
                        sprintf@f 0153                  ___lldiv@quotient 0109  
                 ___lwmod@divisor 0102                ?_Obtener_Distancia 0108  
                 ___lwmod@counter 0105                        i1_Lcd_Port 61F2  
                      i1_Read_LDR 4F1A               ??_Obtener_Distancia 010A  
        Obtener_Distancia@Timer_1 010A                    _lcd_write_char 5DC8  
                      _USART_Init 54EC          i1Read_LDR@analog_reading 0075  
